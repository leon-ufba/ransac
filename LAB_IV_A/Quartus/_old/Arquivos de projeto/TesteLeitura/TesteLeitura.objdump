
TesteLeitura.elf:     file format elf32-littlenios2
TesteLeitura.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040230

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000fba0 memsz 0x0000fba0 flags r-x
    LOAD off    0x00010bc0 vaddr 0x0004fbc0 paddr 0x000517f8 align 2**12
         filesz 0x00001c38 memsz 0x00001c38 flags rw-
    LOAD off    0x00013430 vaddr 0x00053430 paddr 0x00053430 align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f694  00040230  00040230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000002fc  0004f8c4  0004f8c4  000108c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c38  0004fbc0  000517f8  00010bc0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  00053430  00053430  00013430  2**2
                  ALLOC, SMALL_DATA
  6 .MemoriaDados 00000000  00000000  00000000  000127f8  2**0
                  CONTENTS
  7 .MemoriaPrograma 00000000  00053594  00053594  000127f8  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000127f8  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000e70  00000000  00000000  00012820  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00022888  00000000  00000000  00013690  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008c3f  00000000  00000000  00035f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b126  00000000  00000000  0003eb57  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001ff4  00000000  00000000  00049c80  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003812  00000000  00000000  0004bc74  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017755  00000000  00000000  0004f486  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00066bdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  00066bf0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006b4f5  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000b  00000000  00000000  0006b4f8  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006b503  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006b504  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0006b505  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0006b50e  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0006b517  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000010  00000000  00000000  0006b520  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000001f  00000000  00000000  0006b530  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00035628  00000000  00000000  0006b54f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040230 l    d  .text	00000000 .text
0004f8c4 l    d  .rodata	00000000 .rodata
0004fbc0 l    d  .rwdata	00000000 .rwdata
00053430 l    d  .bss	00000000 .bss
00000000 l    d  .MemoriaDados	00000000 .MemoriaDados
00053594 l    d  .MemoriaPrograma	00000000 .MemoriaPrograma
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../TesteLeitura_bsp//obj/HAL/src/crt0.o
00040268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004f90e l     O .rodata	00000010 zeroes.4404
00042728 l     F .text	000000bc __sbprintf
0004f91e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00042938 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00044490 l     F .text	00000008 __fp_unlock
000444a4 l     F .text	0000019c __sinit.part.1
00044640 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fcf4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00050138 l     O .rwdata	00000020 lc_ctype_charset
00050118 l     O .rwdata	00000020 lc_message_charset
00050158 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004f950 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00047024 l     F .text	000000fc __sprint_r.part.0
0004fa74 l     O .rodata	00000010 zeroes.4349
00048660 l     F .text	000000bc __sbprintf
0004fa84 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d230 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d344 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d370 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d464 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d54c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d814 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000517e8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004da88 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004dbc4 l     F .text	00000034 alt_dev_reg
00050740 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004de9c l     F .text	0000020c altera_avalon_jtag_uart_irq
0004e0a8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004e82c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004ec8c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004edec l     F .text	0000003c alt_get_errno
0004ee28 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00053468 g     O .bss	00000004 alt_instruction_exception_handler
00046b34 g     F .text	00000074 _mprec_log10
00046c20 g     F .text	0000008c __any_on
000490dc g     F .text	00000054 _isatty_r
0004f95c g     O .rodata	00000028 __mprec_tinytens
0004d750 g     F .text	0000007c alt_main
00053494 g     O .bss	00000100 alt_irq
000517a4 g     O .rwdata	00000004 data_Y
00049130 g     F .text	00000060 _lseek_r
000517f8 g       *ABS*	00000000 __flash_rwdata_start
0004bc08 g     F .text	00000088 .hidden __eqdf2
00053594 g       *ABS*	00000000 __alt_heap_start
000403f4 g     F .text	0000003c printf
00049a08 g     F .text	0000009c _wcrtomb_r
00046e4c g     F .text	0000005c __sseek
000447f0 g     F .text	00000010 __sinit
000498b0 g     F .text	00000140 __swbuf_r
00044dfc g     F .text	0000007c _setlocale_r
00044648 g     F .text	00000078 __sfmoreglue
0004d7f0 g     F .text	00000024 __malloc_unlock
00049190 g     F .text	0000015c memmove
000447d8 g     F .text	00000018 _cleanup
00045bf4 g     F .text	000000a8 _Balloc
0004bc90 g     F .text	000000dc .hidden __gtdf2
0004f214 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00048bb8 g     F .text	0000005c _fstat_r
0005344c g     O .bss	00000004 errno
00046dc8 g     F .text	00000008 __seofread
00053454 g     O .bss	00000004 alt_argv
000597a0 g       *ABS*	00000000 _gp
000505c0 g     O .rwdata	00000180 alt_fd_list
0004f238 g     F .text	00000090 alt_find_dev
00045984 g     F .text	00000148 memcpy
00044498 g     F .text	0000000c _cleanup_r
0004d048 g     F .text	000000dc .hidden __floatsidf
0004ed70 g     F .text	0000007c alt_io_redirect
0004bd6c g     F .text	000000f4 .hidden __ltdf2
0004f8c4 g       *ABS*	00000000 __DTOR_END__
0004f494 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00046cac g     F .text	00000074 __fpclassifyd
00046a90 g     F .text	000000a4 __ratio
00048644 g     F .text	0000001c __vfiprintf_internal
0004e2a0 g     F .text	0000021c altera_avalon_jtag_uart_read
000403c4 g     F .text	00000030 _printf_r
0004a8a8 g     F .text	00000064 .hidden __udivsi3
0004d4a0 g     F .text	000000ac isatty
0004f9ac g     O .rodata	000000c8 __mprec_tens
00044e78 g     F .text	0000000c __locale_charset
00053448 g     O .bss	00000004 __malloc_top_pad
000517c0 g     O .rwdata	00000004 __mb_cur_max
00044ea8 g     F .text	0000000c _localeconv_r
00048c14 g     F .text	000004c8 __sfvwrite_r
00046028 g     F .text	0000003c __i2b
00046d20 g     F .text	00000054 _sbrk_r
000492ec g     F .text	00000060 _read_r
000517e0 g     O .rwdata	00000004 alt_max_fd
000488ac g     F .text	000000f0 _fclose_r
00044460 g     F .text	00000030 fflush
00053444 g     O .bss	00000004 __malloc_max_sbrked_mem
0004a98c g     F .text	000008ac .hidden __adddf3
00046838 g     F .text	0000010c __b2d
0004a1ec g     F .text	000005c4 .hidden __umoddi3
0004d674 g     F .text	000000dc lseek
000517b8 g     O .rwdata	00000004 _global_impure_ptr
0004934c g     F .text	00000564 _realloc_r
00053594 g       *ABS*	00000000 __bss_end
0004eb9c g     F .text	000000f0 alt_iic_isr_register
0004f10c g     F .text	00000108 alt_tick
00049bf0 g     F .text	000005fc .hidden __udivdi3
00048b14 g     F .text	00000024 _fputwc_r
0004f984 g     O .rodata	00000028 __mprec_bigtens
00045e0c g     F .text	00000104 __s2b
0004d124 g     F .text	000000a8 .hidden __floatunsidf
00046578 g     F .text	00000060 __mcmp
00044810 g     F .text	00000018 __fp_lock_all
0004eb50 g     F .text	0000004c alt_ic_irq_enabled
0004f070 g     F .text	0000009c alt_alarm_stop
0005345c g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
00050598 g     O .rwdata	00000028 alt_dev_null
00000000 g       *ABS*	00000000 __alt_mem_MemoriaDados
0004e80c g     F .text	00000020 alt_dcache_flush_all
00045f10 g     F .text	00000068 __hi0bits
0004cfc8 g     F .text	00000080 .hidden __fixdfsi
000517f8 g       *ABS*	00000000 __ram_rwdata_end
000517d8 g     O .rwdata	00000008 alt_dev_list
0004dac4 g     F .text	00000100 write
0004fbc0 g       *ABS*	00000000 __ram_rodata_end
0004d3ac g     F .text	000000b8 fstat
0004bd6c g     F .text	000000f4 .hidden __ledf2
000462f0 g     F .text	00000140 __pow5mult
00047138 g     F .text	0000150c ___vfiprintf_internal_r
0005343c g     O .bss	00000004 __nlocale_changed
0004a90c g     F .text	00000058 .hidden __umodsi3
00053594 g       *ABS*	00000000 end
00053430 g     O .bss	00000004 cena
00040000 g       *ABS*	00000000 __alt_mem_MemoriaPrograma
0004dddc g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0004f8c4 g       *ABS*	00000000 __CTOR_LIST__
0005c3c0 g       *ABS*	00000000 __alt_stack_pointer
0004d1cc g     F .text	00000064 .hidden __clzsi2
0004e4bc g     F .text	00000224 altera_avalon_jtag_uart_write
00044800 g     F .text	00000004 __sfp_lock_acquire
000458a0 g     F .text	000000e4 memchr
00040430 g     F .text	000022dc ___vfprintf_internal_r
00044964 g     F .text	00000310 _free_r
00044e84 g     F .text	00000010 __locale_mb_cur_max
0004f710 g     F .text	00000180 __call_exitprocs
00053438 g     O .bss	00000004 __mlocale_changed
000517c4 g     O .rwdata	00000004 __malloc_sbrk_base
00040230 g     F .text	0000003c _start
00053460 g     O .bss	00000004 _alt_tick_rate
00046430 g     F .text	00000148 __lshift
00053464 g     O .bss	00000004 _alt_nticks
0004d850 g     F .text	00000104 read
0004dc30 g     F .text	00000048 alt_sys_init
0004f5f8 g     F .text	00000118 __register_exitproc
00046064 g     F .text	0000028c __multiply
0004e148 g     F .text	00000068 altera_avalon_jtag_uart_close
0004a964 g     F .text	00000028 .hidden __mulsi3
0004fbc0 g       *ABS*	00000000 __ram_rwdata_start
0004f8c4 g       *ABS*	00000000 __ram_rodata_start
0005346c g     O .bss	00000028 __malloc_current_mallinfo
00046944 g     F .text	0000014c __d2b
0004dc78 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f3d0 g     F .text	000000c4 alt_get_fd
0004877c g     F .text	00000054 _close_r
0004f57c g     F .text	0000007c memcmp
0004dd38 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053594 g       *ABS*	00000000 __alt_stack_base
0004dd88 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000427e4 g     F .text	00000154 __swsetup_r
0004b238 g     F .text	000009d0 .hidden __divdf3
000446c0 g     F .text	00000118 __sfp
00046ba8 g     F .text	00000078 __copybits
00050190 g     O .rwdata	00000408 __malloc_av_
0004480c g     F .text	00000004 __sinit_lock_release
0004be60 g     F .text	0000086c .hidden __muldf3
00046d74 g     F .text	00000054 __sread
0004f2c8 g     F .text	00000108 alt_find_file
0004e868 g     F .text	000000a4 alt_dev_llist_insert
0004d7cc g     F .text	00000024 __malloc_lock
0004d9d8 g     F .text	000000b0 sbrk
00044404 g     F .text	0000005c _fflush_r
000487d0 g     F .text	000000dc _calloc_r
00053430 g       *ABS*	00000000 __bss_start
000517a0 g     O .rwdata	00000004 data
00045acc g     F .text	00000128 memset
0004026c g     F .text	00000158 main
00053458 g     O .bss	00000004 alt_envp
00053440 g     O .bss	00000004 __malloc_max_total_mem
0004dcd8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000499f0 g     F .text	00000018 __swbuf
000517a8 g     O .rwdata	00000004 store_distance
00046ea8 g     F .text	00000008 __sclose
0005c3c0 g       *ABS*	00000000 __alt_heap_limit
0004899c g     F .text	00000014 fclose
000517b4 g     O .rwdata	00000004 size
00042b60 g     F .text	00001688 _dtoa_r
00045094 g     F .text	0000080c _malloc_r
00049b64 g     F .text	00000030 __ascii_wctomb
000517e4 g     O .rwdata	00000004 alt_errno
00044c74 g     F .text	000000c4 _fwalk
0004a7b0 g     F .text	00000084 .hidden __divsi3
00044840 g     F .text	00000124 _malloc_trim_r
0004f8c4 g       *ABS*	00000000 __CTOR_END__
00046eb0 g     F .text	000000dc strcmp
0004f8c4 g       *ABS*	00000000 __flash_rodata_start
0004f8c4 g       *ABS*	00000000 __DTOR_LIST__
0004bc08 g     F .text	00000088 .hidden __nedf2
0004dbf8 g     F .text	00000038 alt_irq_init
0004d954 g     F .text	00000084 alt_release_fd
0004fa94 g     O .rodata	00000100 .hidden __clz_tab
00053434 g     O .bss	00000004 _PathLocale
0004f530 g     F .text	00000014 atexit
0004871c g     F .text	00000060 _write_r
00044eb4 g     F .text	00000018 setlocale
000517bc g     O .rwdata	00000004 _impure_ptr
00053450 g     O .bss	00000004 alt_argc
000441e8 g     F .text	0000021c __sflush_r
0004e96c g     F .text	00000060 _do_dtors
00044ea0 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
000467d4 g     F .text	00000064 __ulp
00044828 g     F .text	00000018 __fp_unlock_all
000517d0 g     O .rwdata	00000008 alt_fs_list
0004fbc0 g     O .rwdata	00000132 coords
00040020 g       *ABS*	00000000 __ram_exceptions_start
00044ecc g     F .text	0000000c localeconv
0004e9ec g     F .text	00000050 alt_ic_isr_register
000517f8 g       *ABS*	00000000 _edata
00053594 g       *ABS*	00000000 _end
000489b0 g     F .text	00000164 __fputwc
00040230 g       *ABS*	00000000 __ram_exceptions_end
0004e1b0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004eac4 g     F .text	0000008c alt_ic_irq_disable
00046dd0 g     F .text	0000007c __swrite
000517c8 g     O .rwdata	00000004 __malloc_trim_threshold
00044e94 g     F .text	0000000c __locale_msgcharset
0004f544 g     F .text	00000038 exit
00044d38 g     F .text	000000c4 _fwalk_reent
000465d8 g     F .text	000001fc __mdiff
0004a834 g     F .text	00000074 .hidden __modsi3
0005c3c0 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00044804 g     F .text	00000004 __sfp_lock_release
0004f890 g     F .text	00000034 _exit
0004e6e0 g     F .text	0000012c alt_alarm_start
00044ed8 g     F .text	000001bc __smakebuf_r
00046f8c g     F .text	00000098 strlen
000517b0 g     O .rwdata	00000004 controle
0004ef14 g     F .text	0000015c open
0004bc90 g     F .text	000000dc .hidden __gedf2
000517cc g     O .rwdata	00000004 __wctomb
00047120 g     F .text	00000018 __sprint_r
0004e9cc g     F .text	00000020 alt_icache_flush_all
000517ec g     O .rwdata	00000004 alt_priority_mask
0004ea3c g     F .text	00000088 alt_ic_irq_enable
0004270c g     F .text	0000001c __vfprintf_internal
00049b94 g     F .text	0000005c _wctomb_r
000517ac g     O .rwdata	00000004 store_angle
0004c6cc g     F .text	000008fc .hidden __subdf3
00045f78 g     F .text	000000b0 __lo0bits
000517f0 g     O .rwdata	00000008 alt_alarm_list
0004e90c g     F .text	00000060 _do_ctors
00049aa4 g     F .text	000000c0 wcrtomb
0004d26c g     F .text	000000d8 close
0004d5b4 g     F .text	00000084 alt_load
00048b38 g     F .text	00000080 fputwc
00044808 g     F .text	00000004 __sinit_lock_acquire
00045cc4 g     F .text	00000148 __multadd
00045c9c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408c14 	ori	at,at,560
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108d2504 	addi	r2,r2,13460
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108d2504 	addi	r2,r2,13460
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffe3d6c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffe3d60>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401e4:	00bfffc4 	movi	r2,-1
   401e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   401ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f0:	d0a73217 	ldw	r2,-25400(gp)
   401f4:	10000726 	beq	r2,zero,40214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401f8:	d0a73217 	ldw	r2,-25400(gp)
   401fc:	e0fffd17 	ldw	r3,-12(fp)
   40200:	e1bffe17 	ldw	r6,-8(fp)
   40204:	e17fff17 	ldw	r5,-4(fp)
   40208:	1809883a 	mov	r4,r3
   4020c:	103ee83a 	callr	r2
   40210:	00000206 	br	4021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40218:	0005883a 	mov	r2,zero
}
   4021c:	e037883a 	mov	sp,fp
   40220:	dfc00117 	ldw	ra,4(sp)
   40224:	df000017 	ldw	fp,0(sp)
   40228:	dec00204 	addi	sp,sp,8
   4022c:	f800283a 	ret

Disassembly of section .text:

00040230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40230:	06c00174 	movhi	sp,5
    ori sp, sp, %lo(__alt_stack_pointer)
   40234:	def0f014 	ori	sp,sp,50112
    movhi gp, %hi(_gp)
   40238:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   4023c:	d6a5e814 	ori	gp,gp,38816
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40240:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40244:	108d0c14 	ori	r2,r2,13360

    movhi r3, %hi(__bss_end)
   40248:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   4024c:	18cd6514 	ori	r3,r3,13716

    beq r2, r3, 1f
   40250:	10c00326 	beq	r2,r3,40260 <_start+0x30>

0:
    stw zero, (r2)
   40254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   4025c:	10fffd36 	bltu	r2,r3,40254 <__alt_data_end+0xfffe3e94>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40260:	004d5b40 	call	4d5b4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40264:	004d7500 	call	4d750 <alt_main>

00040268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40268:	003fff06 	br	40268 <__alt_data_end+0xfffe3ea8>

0004026c <main>:
#include <math.h>
#include "ransac.h"



int main() {
   4026c:	defff804 	addi	sp,sp,-32
   40270:	dfc00715 	stw	ra,28(sp)
   40274:	df000615 	stw	fp,24(sp)
   40278:	df000604 	addi	fp,sp,24

    int data_size = 2*size;
   4027c:	d0a00517 	ldw	r2,-32748(gp)
   40280:	1085883a 	add	r2,r2,r2
   40284:	e0bffd15 	stw	r2,-12(fp)
    int temp_x = 0;
   40288:	e03ffe15 	stw	zero,-8(fp)
    int temp_y = 0;
   4028c:	e03fff15 	stw	zero,-4(fp)

    int j = 0;
   40290:	e03ffa15 	stw	zero,-24(fp)
    for (int i = 0; i<data_size; i+=1) {
   40294:	e03ffb15 	stw	zero,-20(fp)
   40298:	00002306 	br	40328 <main+0xbc>
    	data[i] = (coords[X]&0xFF)|(coords[Y]<<8);
   4029c:	d0e00017 	ldw	r3,-32768(gp)
   402a0:	e0bffb17 	ldw	r2,-20(fp)
   402a4:	1085883a 	add	r2,r2,r2
   402a8:	1085883a 	add	r2,r2,r2
   402ac:	1887883a 	add	r3,r3,r2
   402b0:	00800174 	movhi	r2,5
   402b4:	10bef004 	addi	r2,r2,-1088
   402b8:	e13ffa17 	ldw	r4,-24(fp)
   402bc:	1105883a 	add	r2,r2,r4
   402c0:	10800003 	ldbu	r2,0(r2)
   402c4:	10803fcc 	andi	r2,r2,255
   402c8:	1080201c 	xori	r2,r2,128
   402cc:	10bfe004 	addi	r2,r2,-128
   402d0:	11003fcc 	andi	r4,r2,255
   402d4:	e0bffa17 	ldw	r2,-24(fp)
   402d8:	11400044 	addi	r5,r2,1
   402dc:	00800174 	movhi	r2,5
   402e0:	10bef004 	addi	r2,r2,-1088
   402e4:	1145883a 	add	r2,r2,r5
   402e8:	10800003 	ldbu	r2,0(r2)
   402ec:	10803fcc 	andi	r2,r2,255
   402f0:	1080201c 	xori	r2,r2,128
   402f4:	10bfe004 	addi	r2,r2,-128
   402f8:	1004923a 	slli	r2,r2,8
   402fc:	2084b03a 	or	r2,r4,r2
   40300:	18800015 	stw	r2,0(r3)
    	controle[0] = i;
   40304:	d0a00417 	ldw	r2,-32752(gp)
   40308:	e0fffb17 	ldw	r3,-20(fp)
   4030c:	10c00015 	stw	r3,0(r2)
    	j+=2;
   40310:	e0bffa17 	ldw	r2,-24(fp)
   40314:	10800084 	addi	r2,r2,2
   40318:	e0bffa15 	stw	r2,-24(fp)
    int data_size = 2*size;
    int temp_x = 0;
    int temp_y = 0;

    int j = 0;
    for (int i = 0; i<data_size; i+=1) {
   4031c:	e0bffb17 	ldw	r2,-20(fp)
   40320:	10800044 	addi	r2,r2,1
   40324:	e0bffb15 	stw	r2,-20(fp)
   40328:	e0fffb17 	ldw	r3,-20(fp)
   4032c:	e0bffd17 	ldw	r2,-12(fp)
   40330:	18bfda16 	blt	r3,r2,4029c <__alt_data_end+0xfffe3edc>
    	data[i] = (coords[X]&0xFF)|(coords[Y]<<8);
    	controle[0] = i;
    	j+=2;
    }
    for (int i = 0; i<size; i+=1) {
   40334:	e03ffc15 	stw	zero,-16(fp)
   40338:	00001906 	br	403a0 <main+0x134>
    	temp_x = data[i]&0xFF;
   4033c:	d0e00017 	ldw	r3,-32768(gp)
   40340:	e0bffc17 	ldw	r2,-16(fp)
   40344:	1085883a 	add	r2,r2,r2
   40348:	1085883a 	add	r2,r2,r2
   4034c:	1885883a 	add	r2,r3,r2
   40350:	10800017 	ldw	r2,0(r2)
   40354:	10803fcc 	andi	r2,r2,255
   40358:	e0bffe15 	stw	r2,-8(fp)
    	temp_y = (data[i]>>8)&0xFF;
   4035c:	d0e00017 	ldw	r3,-32768(gp)
   40360:	e0bffc17 	ldw	r2,-16(fp)
   40364:	1085883a 	add	r2,r2,r2
   40368:	1085883a 	add	r2,r2,r2
   4036c:	1885883a 	add	r2,r3,r2
   40370:	10800017 	ldw	r2,0(r2)
   40374:	1005d23a 	srai	r2,r2,8
   40378:	10803fcc 	andi	r2,r2,255
   4037c:	e0bfff15 	stw	r2,-4(fp)
    	printf("%d, %d\n", temp_x, temp_y);
   40380:	e1bfff17 	ldw	r6,-4(fp)
   40384:	e17ffe17 	ldw	r5,-8(fp)
   40388:	01000174 	movhi	r4,5
   4038c:	213e3104 	addi	r4,r4,-1852
   40390:	00403f40 	call	403f4 <printf>
    for (int i = 0; i<data_size; i+=1) {
    	data[i] = (coords[X]&0xFF)|(coords[Y]<<8);
    	controle[0] = i;
    	j+=2;
    }
    for (int i = 0; i<size; i+=1) {
   40394:	e0bffc17 	ldw	r2,-16(fp)
   40398:	10800044 	addi	r2,r2,1
   4039c:	e0bffc15 	stw	r2,-16(fp)
   403a0:	d0a00517 	ldw	r2,-32748(gp)
   403a4:	e0fffc17 	ldw	r3,-16(fp)
   403a8:	18bfe416 	blt	r3,r2,4033c <__alt_data_end+0xfffe3f7c>
    	temp_x = data[i]&0xFF;
    	temp_y = (data[i]>>8)&0xFF;
    	printf("%d, %d\n", temp_x, temp_y);
    }
    return 0;
   403ac:	0005883a 	mov	r2,zero
}
   403b0:	e037883a 	mov	sp,fp
   403b4:	dfc00117 	ldw	ra,4(sp)
   403b8:	df000017 	ldw	fp,0(sp)
   403bc:	dec00204 	addi	sp,sp,8
   403c0:	f800283a 	ret

000403c4 <_printf_r>:
   403c4:	defffd04 	addi	sp,sp,-12
   403c8:	2805883a 	mov	r2,r5
   403cc:	dfc00015 	stw	ra,0(sp)
   403d0:	d9800115 	stw	r6,4(sp)
   403d4:	d9c00215 	stw	r7,8(sp)
   403d8:	21400217 	ldw	r5,8(r4)
   403dc:	d9c00104 	addi	r7,sp,4
   403e0:	100d883a 	mov	r6,r2
   403e4:	00404300 	call	40430 <___vfprintf_internal_r>
   403e8:	dfc00017 	ldw	ra,0(sp)
   403ec:	dec00304 	addi	sp,sp,12
   403f0:	f800283a 	ret

000403f4 <printf>:
   403f4:	defffc04 	addi	sp,sp,-16
   403f8:	dfc00015 	stw	ra,0(sp)
   403fc:	d9400115 	stw	r5,4(sp)
   40400:	d9800215 	stw	r6,8(sp)
   40404:	d9c00315 	stw	r7,12(sp)
   40408:	00800174 	movhi	r2,5
   4040c:	1085ef04 	addi	r2,r2,6076
   40410:	10800017 	ldw	r2,0(r2)
   40414:	200b883a 	mov	r5,r4
   40418:	d9800104 	addi	r6,sp,4
   4041c:	11000217 	ldw	r4,8(r2)
   40420:	004270c0 	call	4270c <__vfprintf_internal>
   40424:	dfc00017 	ldw	ra,0(sp)
   40428:	dec00404 	addi	sp,sp,16
   4042c:	f800283a 	ret

00040430 <___vfprintf_internal_r>:
   40430:	deffb804 	addi	sp,sp,-288
   40434:	dfc04715 	stw	ra,284(sp)
   40438:	ddc04515 	stw	r23,276(sp)
   4043c:	dd404315 	stw	r21,268(sp)
   40440:	d9002d15 	stw	r4,180(sp)
   40444:	282f883a 	mov	r23,r5
   40448:	302b883a 	mov	r21,r6
   4044c:	d9c02e15 	stw	r7,184(sp)
   40450:	df004615 	stw	fp,280(sp)
   40454:	dd804415 	stw	r22,272(sp)
   40458:	dd004215 	stw	r20,264(sp)
   4045c:	dcc04115 	stw	r19,260(sp)
   40460:	dc804015 	stw	r18,256(sp)
   40464:	dc403f15 	stw	r17,252(sp)
   40468:	dc003e15 	stw	r16,248(sp)
   4046c:	0044ea80 	call	44ea8 <_localeconv_r>
   40470:	10800017 	ldw	r2,0(r2)
   40474:	1009883a 	mov	r4,r2
   40478:	d8803415 	stw	r2,208(sp)
   4047c:	0046f8c0 	call	46f8c <strlen>
   40480:	d8803715 	stw	r2,220(sp)
   40484:	d8802d17 	ldw	r2,180(sp)
   40488:	10000226 	beq	r2,zero,40494 <___vfprintf_internal_r+0x64>
   4048c:	10800e17 	ldw	r2,56(r2)
   40490:	1000fb26 	beq	r2,zero,40880 <___vfprintf_internal_r+0x450>
   40494:	b880030b 	ldhu	r2,12(r23)
   40498:	10c8000c 	andi	r3,r2,8192
   4049c:	1800061e 	bne	r3,zero,404b8 <___vfprintf_internal_r+0x88>
   404a0:	b9001917 	ldw	r4,100(r23)
   404a4:	00f7ffc4 	movi	r3,-8193
   404a8:	10880014 	ori	r2,r2,8192
   404ac:	20c6703a 	and	r3,r4,r3
   404b0:	b880030d 	sth	r2,12(r23)
   404b4:	b8c01915 	stw	r3,100(r23)
   404b8:	10c0020c 	andi	r3,r2,8
   404bc:	1800c326 	beq	r3,zero,407cc <___vfprintf_internal_r+0x39c>
   404c0:	b8c00417 	ldw	r3,16(r23)
   404c4:	1800c126 	beq	r3,zero,407cc <___vfprintf_internal_r+0x39c>
   404c8:	1080068c 	andi	r2,r2,26
   404cc:	00c00284 	movi	r3,10
   404d0:	10c0c626 	beq	r2,r3,407ec <___vfprintf_internal_r+0x3bc>
   404d4:	d8c00404 	addi	r3,sp,16
   404d8:	05000174 	movhi	r20,5
   404dc:	d9001e04 	addi	r4,sp,120
   404e0:	a53e4384 	addi	r20,r20,-1778
   404e4:	d8c01e15 	stw	r3,120(sp)
   404e8:	d8002015 	stw	zero,128(sp)
   404ec:	d8001f15 	stw	zero,124(sp)
   404f0:	d8003315 	stw	zero,204(sp)
   404f4:	d8003615 	stw	zero,216(sp)
   404f8:	d8003815 	stw	zero,224(sp)
   404fc:	1811883a 	mov	r8,r3
   40500:	d8003915 	stw	zero,228(sp)
   40504:	d8003a15 	stw	zero,232(sp)
   40508:	d8002f15 	stw	zero,188(sp)
   4050c:	d9002815 	stw	r4,160(sp)
   40510:	a8800007 	ldb	r2,0(r21)
   40514:	10028b26 	beq	r2,zero,40f44 <___vfprintf_internal_r+0xb14>
   40518:	00c00944 	movi	r3,37
   4051c:	a823883a 	mov	r17,r21
   40520:	10c0021e 	bne	r2,r3,4052c <___vfprintf_internal_r+0xfc>
   40524:	00001406 	br	40578 <___vfprintf_internal_r+0x148>
   40528:	10c00326 	beq	r2,r3,40538 <___vfprintf_internal_r+0x108>
   4052c:	8c400044 	addi	r17,r17,1
   40530:	88800007 	ldb	r2,0(r17)
   40534:	103ffc1e 	bne	r2,zero,40528 <__alt_data_end+0xfffe4168>
   40538:	8d61c83a 	sub	r16,r17,r21
   4053c:	80000e26 	beq	r16,zero,40578 <___vfprintf_internal_r+0x148>
   40540:	d8c02017 	ldw	r3,128(sp)
   40544:	d8801f17 	ldw	r2,124(sp)
   40548:	45400015 	stw	r21,0(r8)
   4054c:	1c07883a 	add	r3,r3,r16
   40550:	10800044 	addi	r2,r2,1
   40554:	d8c02015 	stw	r3,128(sp)
   40558:	44000115 	stw	r16,4(r8)
   4055c:	d8801f15 	stw	r2,124(sp)
   40560:	00c001c4 	movi	r3,7
   40564:	1880a916 	blt	r3,r2,4080c <___vfprintf_internal_r+0x3dc>
   40568:	42000204 	addi	r8,r8,8
   4056c:	d9402f17 	ldw	r5,188(sp)
   40570:	2c0b883a 	add	r5,r5,r16
   40574:	d9402f15 	stw	r5,188(sp)
   40578:	88800007 	ldb	r2,0(r17)
   4057c:	1000aa26 	beq	r2,zero,40828 <___vfprintf_internal_r+0x3f8>
   40580:	8d400044 	addi	r21,r17,1
   40584:	8c400047 	ldb	r17,1(r17)
   40588:	0021883a 	mov	r16,zero
   4058c:	00bfffc4 	movi	r2,-1
   40590:	0025883a 	mov	r18,zero
   40594:	dc002905 	stb	r16,164(sp)
   40598:	d8002785 	stb	zero,158(sp)
   4059c:	d8002b05 	stb	zero,172(sp)
   405a0:	d8802a15 	stw	r2,168(sp)
   405a4:	d8003115 	stw	zero,196(sp)
   405a8:	04c01604 	movi	r19,88
   405ac:	05800244 	movi	r22,9
   405b0:	9021883a 	mov	r16,r18
   405b4:	4039883a 	mov	fp,r8
   405b8:	ad400044 	addi	r21,r21,1
   405bc:	88bff804 	addi	r2,r17,-32
   405c0:	98833236 	bltu	r19,r2,4128c <___vfprintf_internal_r+0xe5c>
   405c4:	100490ba 	slli	r2,r2,2
   405c8:	00c00134 	movhi	r3,4
   405cc:	18c17704 	addi	r3,r3,1500
   405d0:	10c5883a 	add	r2,r2,r3
   405d4:	10800017 	ldw	r2,0(r2)
   405d8:	1000683a 	jmp	r2
   405dc:	00041184 	movi	zero,4166
   405e0:	0004128c 	andi	zero,zero,4170
   405e4:	0004128c 	andi	zero,zero,4170
   405e8:	000411a4 	muli	zero,zero,4166
   405ec:	0004128c 	andi	zero,zero,4170
   405f0:	0004128c 	andi	zero,zero,4170
   405f4:	0004128c 	andi	zero,zero,4170
   405f8:	0004128c 	andi	zero,zero,4170
   405fc:	0004128c 	andi	zero,zero,4170
   40600:	0004128c 	andi	zero,zero,4170
   40604:	0004088c 	andi	zero,zero,4130
   40608:	00041094 	movui	zero,4162
   4060c:	0004128c 	andi	zero,zero,4170
   40610:	00040750 	cmplti	zero,zero,4125
   40614:	000408b0 	cmpltui	zero,zero,4130
   40618:	0004128c 	andi	zero,zero,4170
   4061c:	00040900 	call	4090 <__alt_mem_MemoriaDados+0x4090>
   40620:	0004090c 	andi	zero,zero,4132
   40624:	0004090c 	andi	zero,zero,4132
   40628:	0004090c 	andi	zero,zero,4132
   4062c:	0004090c 	andi	zero,zero,4132
   40630:	0004090c 	andi	zero,zero,4132
   40634:	0004090c 	andi	zero,zero,4132
   40638:	0004090c 	andi	zero,zero,4132
   4063c:	0004090c 	andi	zero,zero,4132
   40640:	0004090c 	andi	zero,zero,4132
   40644:	0004128c 	andi	zero,zero,4170
   40648:	0004128c 	andi	zero,zero,4170
   4064c:	0004128c 	andi	zero,zero,4170
   40650:	0004128c 	andi	zero,zero,4170
   40654:	0004128c 	andi	zero,zero,4170
   40658:	0004128c 	andi	zero,zero,4170
   4065c:	0004128c 	andi	zero,zero,4170
   40660:	0004128c 	andi	zero,zero,4170
   40664:	0004128c 	andi	zero,zero,4170
   40668:	0004128c 	andi	zero,zero,4170
   4066c:	00040948 	cmpgei	zero,zero,4133
   40670:	00040a10 	cmplti	zero,zero,4136
   40674:	0004128c 	andi	zero,zero,4170
   40678:	00040a10 	cmplti	zero,zero,4136
   4067c:	0004128c 	andi	zero,zero,4170
   40680:	0004128c 	andi	zero,zero,4170
   40684:	0004128c 	andi	zero,zero,4170
   40688:	0004128c 	andi	zero,zero,4170
   4068c:	00040abc 	xorhi	zero,zero,4138
   40690:	0004128c 	andi	zero,zero,4170
   40694:	0004128c 	andi	zero,zero,4170
   40698:	00040ac8 	cmpgei	zero,zero,4139
   4069c:	0004128c 	andi	zero,zero,4170
   406a0:	0004128c 	andi	zero,zero,4170
   406a4:	0004128c 	andi	zero,zero,4170
   406a8:	0004128c 	andi	zero,zero,4170
   406ac:	0004128c 	andi	zero,zero,4170
   406b0:	00040f4c 	andi	zero,zero,4157
   406b4:	0004128c 	andi	zero,zero,4170
   406b8:	0004128c 	andi	zero,zero,4170
   406bc:	00040fb8 	rdprs	zero,zero,4158
   406c0:	0004128c 	andi	zero,zero,4170
   406c4:	0004128c 	andi	zero,zero,4170
   406c8:	0004128c 	andi	zero,zero,4170
   406cc:	0004128c 	andi	zero,zero,4170
   406d0:	0004128c 	andi	zero,zero,4170
   406d4:	0004128c 	andi	zero,zero,4170
   406d8:	0004128c 	andi	zero,zero,4170
   406dc:	0004128c 	andi	zero,zero,4170
   406e0:	0004128c 	andi	zero,zero,4170
   406e4:	0004128c 	andi	zero,zero,4170
   406e8:	00041230 	cmpltui	zero,zero,4168
   406ec:	000411b0 	cmpltui	zero,zero,4166
   406f0:	00040a10 	cmplti	zero,zero,4136
   406f4:	00040a10 	cmplti	zero,zero,4136
   406f8:	00040a10 	cmplti	zero,zero,4136
   406fc:	000411d0 	cmplti	zero,zero,4167
   40700:	000411b0 	cmpltui	zero,zero,4166
   40704:	0004128c 	andi	zero,zero,4170
   40708:	0004128c 	andi	zero,zero,4170
   4070c:	000411dc 	xori	zero,zero,4167
   40710:	0004128c 	andi	zero,zero,4170
   40714:	000411f0 	cmpltui	zero,zero,4167
   40718:	00041074 	movhi	zero,4161
   4071c:	0004075c 	xori	zero,zero,4125
   40720:	000410ac 	andhi	zero,zero,4162
   40724:	0004128c 	andi	zero,zero,4170
   40728:	000410b8 	rdprs	zero,zero,4162
   4072c:	0004128c 	andi	zero,zero,4170
   40730:	0004111c 	xori	zero,zero,4164
   40734:	0004128c 	andi	zero,zero,4170
   40738:	0004128c 	andi	zero,zero,4170
   4073c:	0004113c 	xorhi	zero,zero,4164
   40740:	d8c03117 	ldw	r3,196(sp)
   40744:	d8802e15 	stw	r2,184(sp)
   40748:	00c7c83a 	sub	r3,zero,r3
   4074c:	d8c03115 	stw	r3,196(sp)
   40750:	84000114 	ori	r16,r16,4
   40754:	ac400007 	ldb	r17,0(r21)
   40758:	003f9706 	br	405b8 <__alt_data_end+0xfffe41f8>
   4075c:	00800c04 	movi	r2,48
   40760:	d8802705 	stb	r2,156(sp)
   40764:	00801e04 	movi	r2,120
   40768:	d8802745 	stb	r2,157(sp)
   4076c:	d9002a17 	ldw	r4,168(sp)
   40770:	d8802e17 	ldw	r2,184(sp)
   40774:	d8002785 	stb	zero,158(sp)
   40778:	e011883a 	mov	r8,fp
   4077c:	10c00104 	addi	r3,r2,4
   40780:	14c00017 	ldw	r19,0(r2)
   40784:	002d883a 	mov	r22,zero
   40788:	80800094 	ori	r2,r16,2
   4078c:	2002ca16 	blt	r4,zero,412b8 <___vfprintf_internal_r+0xe88>
   40790:	00bfdfc4 	movi	r2,-129
   40794:	80a4703a 	and	r18,r16,r2
   40798:	d8c02e15 	stw	r3,184(sp)
   4079c:	94800094 	ori	r18,r18,2
   407a0:	9802b41e 	bne	r19,zero,41274 <___vfprintf_internal_r+0xe44>
   407a4:	01400174 	movhi	r5,5
   407a8:	297e3c04 	addi	r5,r5,-1808
   407ac:	d9403915 	stw	r5,228(sp)
   407b0:	04401e04 	movi	r17,120
   407b4:	d8802a17 	ldw	r2,168(sp)
   407b8:	0039883a 	mov	fp,zero
   407bc:	1001fa26 	beq	r2,zero,40fa8 <___vfprintf_internal_r+0xb78>
   407c0:	0027883a 	mov	r19,zero
   407c4:	002d883a 	mov	r22,zero
   407c8:	00021906 	br	41030 <___vfprintf_internal_r+0xc00>
   407cc:	d9002d17 	ldw	r4,180(sp)
   407d0:	b80b883a 	mov	r5,r23
   407d4:	00427e40 	call	427e4 <__swsetup_r>
   407d8:	1005dc1e 	bne	r2,zero,41f4c <___vfprintf_internal_r+0x1b1c>
   407dc:	b880030b 	ldhu	r2,12(r23)
   407e0:	00c00284 	movi	r3,10
   407e4:	1080068c 	andi	r2,r2,26
   407e8:	10ff3a1e 	bne	r2,r3,404d4 <__alt_data_end+0xfffe4114>
   407ec:	b880038f 	ldh	r2,14(r23)
   407f0:	103f3816 	blt	r2,zero,404d4 <__alt_data_end+0xfffe4114>
   407f4:	d9c02e17 	ldw	r7,184(sp)
   407f8:	d9002d17 	ldw	r4,180(sp)
   407fc:	a80d883a 	mov	r6,r21
   40800:	b80b883a 	mov	r5,r23
   40804:	00427280 	call	42728 <__sbprintf>
   40808:	00001106 	br	40850 <___vfprintf_internal_r+0x420>
   4080c:	d9002d17 	ldw	r4,180(sp)
   40810:	d9801e04 	addi	r6,sp,120
   40814:	b80b883a 	mov	r5,r23
   40818:	00471200 	call	47120 <__sprint_r>
   4081c:	1000081e 	bne	r2,zero,40840 <___vfprintf_internal_r+0x410>
   40820:	da000404 	addi	r8,sp,16
   40824:	003f5106 	br	4056c <__alt_data_end+0xfffe41ac>
   40828:	d8802017 	ldw	r2,128(sp)
   4082c:	10000426 	beq	r2,zero,40840 <___vfprintf_internal_r+0x410>
   40830:	d9002d17 	ldw	r4,180(sp)
   40834:	d9801e04 	addi	r6,sp,120
   40838:	b80b883a 	mov	r5,r23
   4083c:	00471200 	call	47120 <__sprint_r>
   40840:	b880030b 	ldhu	r2,12(r23)
   40844:	1080100c 	andi	r2,r2,64
   40848:	1005c01e 	bne	r2,zero,41f4c <___vfprintf_internal_r+0x1b1c>
   4084c:	d8802f17 	ldw	r2,188(sp)
   40850:	dfc04717 	ldw	ra,284(sp)
   40854:	df004617 	ldw	fp,280(sp)
   40858:	ddc04517 	ldw	r23,276(sp)
   4085c:	dd804417 	ldw	r22,272(sp)
   40860:	dd404317 	ldw	r21,268(sp)
   40864:	dd004217 	ldw	r20,264(sp)
   40868:	dcc04117 	ldw	r19,260(sp)
   4086c:	dc804017 	ldw	r18,256(sp)
   40870:	dc403f17 	ldw	r17,252(sp)
   40874:	dc003e17 	ldw	r16,248(sp)
   40878:	dec04804 	addi	sp,sp,288
   4087c:	f800283a 	ret
   40880:	d9002d17 	ldw	r4,180(sp)
   40884:	00447f00 	call	447f0 <__sinit>
   40888:	003f0206 	br	40494 <__alt_data_end+0xfffe40d4>
   4088c:	d9002e17 	ldw	r4,184(sp)
   40890:	d9402e17 	ldw	r5,184(sp)
   40894:	21000017 	ldw	r4,0(r4)
   40898:	28800104 	addi	r2,r5,4
   4089c:	d9003115 	stw	r4,196(sp)
   408a0:	203fa716 	blt	r4,zero,40740 <__alt_data_end+0xfffe4380>
   408a4:	d8802e15 	stw	r2,184(sp)
   408a8:	ac400007 	ldb	r17,0(r21)
   408ac:	003f4206 	br	405b8 <__alt_data_end+0xfffe41f8>
   408b0:	ac400007 	ldb	r17,0(r21)
   408b4:	01000a84 	movi	r4,42
   408b8:	a8c00044 	addi	r3,r21,1
   408bc:	89075826 	beq	r17,r4,42620 <___vfprintf_internal_r+0x21f0>
   408c0:	8cbff404 	addi	r18,r17,-48
   408c4:	b486ae36 	bltu	r22,r18,42380 <___vfprintf_internal_r+0x1f50>
   408c8:	0009883a 	mov	r4,zero
   408cc:	1823883a 	mov	r17,r3
   408d0:	01400284 	movi	r5,10
   408d4:	004a9640 	call	4a964 <__mulsi3>
   408d8:	88c00007 	ldb	r3,0(r17)
   408dc:	1489883a 	add	r4,r2,r18
   408e0:	8d400044 	addi	r21,r17,1
   408e4:	1cbff404 	addi	r18,r3,-48
   408e8:	a823883a 	mov	r17,r21
   408ec:	b4bff82e 	bgeu	r22,r18,408d0 <__alt_data_end+0xfffe4510>
   408f0:	1823883a 	mov	r17,r3
   408f4:	2005f616 	blt	r4,zero,420d0 <___vfprintf_internal_r+0x1ca0>
   408f8:	d9002a15 	stw	r4,168(sp)
   408fc:	003f2f06 	br	405bc <__alt_data_end+0xfffe41fc>
   40900:	84002014 	ori	r16,r16,128
   40904:	ac400007 	ldb	r17,0(r21)
   40908:	003f2b06 	br	405b8 <__alt_data_end+0xfffe41f8>
   4090c:	8cbff404 	addi	r18,r17,-48
   40910:	d8003115 	stw	zero,196(sp)
   40914:	0009883a 	mov	r4,zero
   40918:	a823883a 	mov	r17,r21
   4091c:	01400284 	movi	r5,10
   40920:	004a9640 	call	4a964 <__mulsi3>
   40924:	88c00007 	ldb	r3,0(r17)
   40928:	9089883a 	add	r4,r18,r2
   4092c:	ad400044 	addi	r21,r21,1
   40930:	1cbff404 	addi	r18,r3,-48
   40934:	a823883a 	mov	r17,r21
   40938:	b4bff82e 	bgeu	r22,r18,4091c <__alt_data_end+0xfffe455c>
   4093c:	1823883a 	mov	r17,r3
   40940:	d9003115 	stw	r4,196(sp)
   40944:	003f1d06 	br	405bc <__alt_data_end+0xfffe41fc>
   40948:	8025883a 	mov	r18,r16
   4094c:	dc002903 	ldbu	r16,164(sp)
   40950:	e011883a 	mov	r8,fp
   40954:	84003fcc 	andi	r16,r16,255
   40958:	8007531e 	bne	r16,zero,426a8 <___vfprintf_internal_r+0x2278>
   4095c:	94800414 	ori	r18,r18,16
   40960:	9080080c 	andi	r2,r18,32
   40964:	1003a326 	beq	r2,zero,417f4 <___vfprintf_internal_r+0x13c4>
   40968:	d9002e17 	ldw	r4,184(sp)
   4096c:	20800117 	ldw	r2,4(r4)
   40970:	24c00017 	ldw	r19,0(r4)
   40974:	21000204 	addi	r4,r4,8
   40978:	d9002e15 	stw	r4,184(sp)
   4097c:	102d883a 	mov	r22,r2
   40980:	10047316 	blt	r2,zero,41b50 <___vfprintf_internal_r+0x1720>
   40984:	d9002a17 	ldw	r4,168(sp)
   40988:	df002783 	ldbu	fp,158(sp)
   4098c:	2003e416 	blt	r4,zero,41920 <___vfprintf_internal_r+0x14f0>
   40990:	00ffdfc4 	movi	r3,-129
   40994:	9d84b03a 	or	r2,r19,r22
   40998:	90e4703a 	and	r18,r18,r3
   4099c:	10018026 	beq	r2,zero,40fa0 <___vfprintf_internal_r+0xb70>
   409a0:	b003ab26 	beq	r22,zero,41850 <___vfprintf_internal_r+0x1420>
   409a4:	dc402915 	stw	r17,164(sp)
   409a8:	dc001e04 	addi	r16,sp,120
   409ac:	b023883a 	mov	r17,r22
   409b0:	402d883a 	mov	r22,r8
   409b4:	9809883a 	mov	r4,r19
   409b8:	880b883a 	mov	r5,r17
   409bc:	01800284 	movi	r6,10
   409c0:	000f883a 	mov	r7,zero
   409c4:	004a1ec0 	call	4a1ec <__umoddi3>
   409c8:	10800c04 	addi	r2,r2,48
   409cc:	843fffc4 	addi	r16,r16,-1
   409d0:	9809883a 	mov	r4,r19
   409d4:	880b883a 	mov	r5,r17
   409d8:	80800005 	stb	r2,0(r16)
   409dc:	01800284 	movi	r6,10
   409e0:	000f883a 	mov	r7,zero
   409e4:	0049bf00 	call	49bf0 <__udivdi3>
   409e8:	1027883a 	mov	r19,r2
   409ec:	10c4b03a 	or	r2,r2,r3
   409f0:	1823883a 	mov	r17,r3
   409f4:	103fef1e 	bne	r2,zero,409b4 <__alt_data_end+0xfffe45f4>
   409f8:	d8c02817 	ldw	r3,160(sp)
   409fc:	dc402917 	ldw	r17,164(sp)
   40a00:	b011883a 	mov	r8,r22
   40a04:	1c07c83a 	sub	r3,r3,r16
   40a08:	d8c02b15 	stw	r3,172(sp)
   40a0c:	00005f06 	br	40b8c <___vfprintf_internal_r+0x75c>
   40a10:	8025883a 	mov	r18,r16
   40a14:	dc002903 	ldbu	r16,164(sp)
   40a18:	e011883a 	mov	r8,fp
   40a1c:	84003fcc 	andi	r16,r16,255
   40a20:	80071e1e 	bne	r16,zero,4269c <___vfprintf_internal_r+0x226c>
   40a24:	9080020c 	andi	r2,r18,8
   40a28:	1004af26 	beq	r2,zero,41ce8 <___vfprintf_internal_r+0x18b8>
   40a2c:	d9002e17 	ldw	r4,184(sp)
   40a30:	d9402e17 	ldw	r5,184(sp)
   40a34:	d8802e17 	ldw	r2,184(sp)
   40a38:	21000017 	ldw	r4,0(r4)
   40a3c:	29400117 	ldw	r5,4(r5)
   40a40:	10800204 	addi	r2,r2,8
   40a44:	d9003615 	stw	r4,216(sp)
   40a48:	d9403815 	stw	r5,224(sp)
   40a4c:	d8802e15 	stw	r2,184(sp)
   40a50:	d9003617 	ldw	r4,216(sp)
   40a54:	d9403817 	ldw	r5,224(sp)
   40a58:	da003d15 	stw	r8,244(sp)
   40a5c:	04000044 	movi	r16,1
   40a60:	0046cac0 	call	46cac <__fpclassifyd>
   40a64:	da003d17 	ldw	r8,244(sp)
   40a68:	1404441e 	bne	r2,r16,41b7c <___vfprintf_internal_r+0x174c>
   40a6c:	d9003617 	ldw	r4,216(sp)
   40a70:	d9403817 	ldw	r5,224(sp)
   40a74:	000d883a 	mov	r6,zero
   40a78:	000f883a 	mov	r7,zero
   40a7c:	004bd6c0 	call	4bd6c <__ledf2>
   40a80:	da003d17 	ldw	r8,244(sp)
   40a84:	1005e316 	blt	r2,zero,42214 <___vfprintf_internal_r+0x1de4>
   40a88:	df002783 	ldbu	fp,158(sp)
   40a8c:	008011c4 	movi	r2,71
   40a90:	1445580e 	bge	r2,r17,41ff4 <___vfprintf_internal_r+0x1bc4>
   40a94:	04000174 	movhi	r16,5
   40a98:	843e3404 	addi	r16,r16,-1840
   40a9c:	00c000c4 	movi	r3,3
   40aa0:	00bfdfc4 	movi	r2,-129
   40aa4:	d8c02915 	stw	r3,164(sp)
   40aa8:	90a4703a 	and	r18,r18,r2
   40aac:	d8c02b15 	stw	r3,172(sp)
   40ab0:	d8002a15 	stw	zero,168(sp)
   40ab4:	d8003215 	stw	zero,200(sp)
   40ab8:	00003a06 	br	40ba4 <___vfprintf_internal_r+0x774>
   40abc:	84000214 	ori	r16,r16,8
   40ac0:	ac400007 	ldb	r17,0(r21)
   40ac4:	003ebc06 	br	405b8 <__alt_data_end+0xfffe41f8>
   40ac8:	8025883a 	mov	r18,r16
   40acc:	dc002903 	ldbu	r16,164(sp)
   40ad0:	e011883a 	mov	r8,fp
   40ad4:	84003fcc 	andi	r16,r16,255
   40ad8:	8007001e 	bne	r16,zero,426dc <___vfprintf_internal_r+0x22ac>
   40adc:	94800414 	ori	r18,r18,16
   40ae0:	9080080c 	andi	r2,r18,32
   40ae4:	1002fa26 	beq	r2,zero,416d0 <___vfprintf_internal_r+0x12a0>
   40ae8:	d9002e17 	ldw	r4,184(sp)
   40aec:	d9402a17 	ldw	r5,168(sp)
   40af0:	d8002785 	stb	zero,158(sp)
   40af4:	20800204 	addi	r2,r4,8
   40af8:	24c00017 	ldw	r19,0(r4)
   40afc:	25800117 	ldw	r22,4(r4)
   40b00:	2804b116 	blt	r5,zero,41dc8 <___vfprintf_internal_r+0x1998>
   40b04:	013fdfc4 	movi	r4,-129
   40b08:	9d86b03a 	or	r3,r19,r22
   40b0c:	d8802e15 	stw	r2,184(sp)
   40b10:	9124703a 	and	r18,r18,r4
   40b14:	1802fb1e 	bne	r3,zero,41704 <___vfprintf_internal_r+0x12d4>
   40b18:	d8c02a17 	ldw	r3,168(sp)
   40b1c:	0039883a 	mov	fp,zero
   40b20:	1805e526 	beq	r3,zero,422b8 <___vfprintf_internal_r+0x1e88>
   40b24:	0027883a 	mov	r19,zero
   40b28:	002d883a 	mov	r22,zero
   40b2c:	dc001e04 	addi	r16,sp,120
   40b30:	9806d0fa 	srli	r3,r19,3
   40b34:	b008977a 	slli	r4,r22,29
   40b38:	b02cd0fa 	srli	r22,r22,3
   40b3c:	9cc001cc 	andi	r19,r19,7
   40b40:	98800c04 	addi	r2,r19,48
   40b44:	843fffc4 	addi	r16,r16,-1
   40b48:	20e6b03a 	or	r19,r4,r3
   40b4c:	80800005 	stb	r2,0(r16)
   40b50:	9d86b03a 	or	r3,r19,r22
   40b54:	183ff61e 	bne	r3,zero,40b30 <__alt_data_end+0xfffe4770>
   40b58:	90c0004c 	andi	r3,r18,1
   40b5c:	18014126 	beq	r3,zero,41064 <___vfprintf_internal_r+0xc34>
   40b60:	10803fcc 	andi	r2,r2,255
   40b64:	1080201c 	xori	r2,r2,128
   40b68:	10bfe004 	addi	r2,r2,-128
   40b6c:	00c00c04 	movi	r3,48
   40b70:	10c13c26 	beq	r2,r3,41064 <___vfprintf_internal_r+0xc34>
   40b74:	80ffffc5 	stb	r3,-1(r16)
   40b78:	d8c02817 	ldw	r3,160(sp)
   40b7c:	80bfffc4 	addi	r2,r16,-1
   40b80:	1021883a 	mov	r16,r2
   40b84:	1887c83a 	sub	r3,r3,r2
   40b88:	d8c02b15 	stw	r3,172(sp)
   40b8c:	d8802b17 	ldw	r2,172(sp)
   40b90:	d9002a17 	ldw	r4,168(sp)
   40b94:	1100010e 	bge	r2,r4,40b9c <___vfprintf_internal_r+0x76c>
   40b98:	2005883a 	mov	r2,r4
   40b9c:	d8802915 	stw	r2,164(sp)
   40ba0:	d8003215 	stw	zero,200(sp)
   40ba4:	e7003fcc 	andi	fp,fp,255
   40ba8:	e700201c 	xori	fp,fp,128
   40bac:	e73fe004 	addi	fp,fp,-128
   40bb0:	e0000326 	beq	fp,zero,40bc0 <___vfprintf_internal_r+0x790>
   40bb4:	d8c02917 	ldw	r3,164(sp)
   40bb8:	18c00044 	addi	r3,r3,1
   40bbc:	d8c02915 	stw	r3,164(sp)
   40bc0:	90c0008c 	andi	r3,r18,2
   40bc4:	d8c02c15 	stw	r3,176(sp)
   40bc8:	18000326 	beq	r3,zero,40bd8 <___vfprintf_internal_r+0x7a8>
   40bcc:	d8c02917 	ldw	r3,164(sp)
   40bd0:	18c00084 	addi	r3,r3,2
   40bd4:	d8c02915 	stw	r3,164(sp)
   40bd8:	90c0210c 	andi	r3,r18,132
   40bdc:	d8c03015 	stw	r3,192(sp)
   40be0:	1801c51e 	bne	r3,zero,412f8 <___vfprintf_internal_r+0xec8>
   40be4:	d9003117 	ldw	r4,196(sp)
   40be8:	d8c02917 	ldw	r3,164(sp)
   40bec:	20e7c83a 	sub	r19,r4,r3
   40bf0:	04c1c10e 	bge	zero,r19,412f8 <___vfprintf_internal_r+0xec8>
   40bf4:	02400404 	movi	r9,16
   40bf8:	d8c02017 	ldw	r3,128(sp)
   40bfc:	d8801f17 	ldw	r2,124(sp)
   40c00:	4cc52f0e 	bge	r9,r19,420c0 <___vfprintf_internal_r+0x1c90>
   40c04:	01400174 	movhi	r5,5
   40c08:	297e4784 	addi	r5,r5,-1762
   40c0c:	dc403b15 	stw	r17,236(sp)
   40c10:	d9403515 	stw	r5,212(sp)
   40c14:	9823883a 	mov	r17,r19
   40c18:	482d883a 	mov	r22,r9
   40c1c:	9027883a 	mov	r19,r18
   40c20:	070001c4 	movi	fp,7
   40c24:	8025883a 	mov	r18,r16
   40c28:	dc002d17 	ldw	r16,180(sp)
   40c2c:	00000306 	br	40c3c <___vfprintf_internal_r+0x80c>
   40c30:	8c7ffc04 	addi	r17,r17,-16
   40c34:	42000204 	addi	r8,r8,8
   40c38:	b440130e 	bge	r22,r17,40c88 <___vfprintf_internal_r+0x858>
   40c3c:	01000174 	movhi	r4,5
   40c40:	18c00404 	addi	r3,r3,16
   40c44:	10800044 	addi	r2,r2,1
   40c48:	213e4784 	addi	r4,r4,-1762
   40c4c:	41000015 	stw	r4,0(r8)
   40c50:	45800115 	stw	r22,4(r8)
   40c54:	d8c02015 	stw	r3,128(sp)
   40c58:	d8801f15 	stw	r2,124(sp)
   40c5c:	e0bff40e 	bge	fp,r2,40c30 <__alt_data_end+0xfffe4870>
   40c60:	d9801e04 	addi	r6,sp,120
   40c64:	b80b883a 	mov	r5,r23
   40c68:	8009883a 	mov	r4,r16
   40c6c:	00471200 	call	47120 <__sprint_r>
   40c70:	103ef31e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   40c74:	8c7ffc04 	addi	r17,r17,-16
   40c78:	d8c02017 	ldw	r3,128(sp)
   40c7c:	d8801f17 	ldw	r2,124(sp)
   40c80:	da000404 	addi	r8,sp,16
   40c84:	b47fed16 	blt	r22,r17,40c3c <__alt_data_end+0xfffe487c>
   40c88:	9021883a 	mov	r16,r18
   40c8c:	9825883a 	mov	r18,r19
   40c90:	8827883a 	mov	r19,r17
   40c94:	dc403b17 	ldw	r17,236(sp)
   40c98:	d9403517 	ldw	r5,212(sp)
   40c9c:	98c7883a 	add	r3,r19,r3
   40ca0:	10800044 	addi	r2,r2,1
   40ca4:	41400015 	stw	r5,0(r8)
   40ca8:	44c00115 	stw	r19,4(r8)
   40cac:	d8c02015 	stw	r3,128(sp)
   40cb0:	d8801f15 	stw	r2,124(sp)
   40cb4:	010001c4 	movi	r4,7
   40cb8:	2082c516 	blt	r4,r2,417d0 <___vfprintf_internal_r+0x13a0>
   40cbc:	df002787 	ldb	fp,158(sp)
   40cc0:	42000204 	addi	r8,r8,8
   40cc4:	e0000c26 	beq	fp,zero,40cf8 <___vfprintf_internal_r+0x8c8>
   40cc8:	d8801f17 	ldw	r2,124(sp)
   40ccc:	d9002784 	addi	r4,sp,158
   40cd0:	18c00044 	addi	r3,r3,1
   40cd4:	10800044 	addi	r2,r2,1
   40cd8:	41000015 	stw	r4,0(r8)
   40cdc:	01000044 	movi	r4,1
   40ce0:	41000115 	stw	r4,4(r8)
   40ce4:	d8c02015 	stw	r3,128(sp)
   40ce8:	d8801f15 	stw	r2,124(sp)
   40cec:	010001c4 	movi	r4,7
   40cf0:	20825e16 	blt	r4,r2,4166c <___vfprintf_internal_r+0x123c>
   40cf4:	42000204 	addi	r8,r8,8
   40cf8:	d8802c17 	ldw	r2,176(sp)
   40cfc:	10000c26 	beq	r2,zero,40d30 <___vfprintf_internal_r+0x900>
   40d00:	d8801f17 	ldw	r2,124(sp)
   40d04:	d9002704 	addi	r4,sp,156
   40d08:	18c00084 	addi	r3,r3,2
   40d0c:	10800044 	addi	r2,r2,1
   40d10:	41000015 	stw	r4,0(r8)
   40d14:	01000084 	movi	r4,2
   40d18:	41000115 	stw	r4,4(r8)
   40d1c:	d8c02015 	stw	r3,128(sp)
   40d20:	d8801f15 	stw	r2,124(sp)
   40d24:	010001c4 	movi	r4,7
   40d28:	20825816 	blt	r4,r2,4168c <___vfprintf_internal_r+0x125c>
   40d2c:	42000204 	addi	r8,r8,8
   40d30:	d9003017 	ldw	r4,192(sp)
   40d34:	00802004 	movi	r2,128
   40d38:	2081bb26 	beq	r4,r2,41428 <___vfprintf_internal_r+0xff8>
   40d3c:	d9402a17 	ldw	r5,168(sp)
   40d40:	d8802b17 	ldw	r2,172(sp)
   40d44:	28adc83a 	sub	r22,r5,r2
   40d48:	0580310e 	bge	zero,r22,40e10 <___vfprintf_internal_r+0x9e0>
   40d4c:	07000404 	movi	fp,16
   40d50:	d8801f17 	ldw	r2,124(sp)
   40d54:	e584360e 	bge	fp,r22,41e30 <___vfprintf_internal_r+0x1a00>
   40d58:	01400174 	movhi	r5,5
   40d5c:	297e4384 	addi	r5,r5,-1778
   40d60:	dc402a15 	stw	r17,168(sp)
   40d64:	d9402c15 	stw	r5,176(sp)
   40d68:	b023883a 	mov	r17,r22
   40d6c:	04c001c4 	movi	r19,7
   40d70:	a82d883a 	mov	r22,r21
   40d74:	902b883a 	mov	r21,r18
   40d78:	8025883a 	mov	r18,r16
   40d7c:	dc002d17 	ldw	r16,180(sp)
   40d80:	00000306 	br	40d90 <___vfprintf_internal_r+0x960>
   40d84:	8c7ffc04 	addi	r17,r17,-16
   40d88:	42000204 	addi	r8,r8,8
   40d8c:	e440110e 	bge	fp,r17,40dd4 <___vfprintf_internal_r+0x9a4>
   40d90:	18c00404 	addi	r3,r3,16
   40d94:	10800044 	addi	r2,r2,1
   40d98:	45000015 	stw	r20,0(r8)
   40d9c:	47000115 	stw	fp,4(r8)
   40da0:	d8c02015 	stw	r3,128(sp)
   40da4:	d8801f15 	stw	r2,124(sp)
   40da8:	98bff60e 	bge	r19,r2,40d84 <__alt_data_end+0xfffe49c4>
   40dac:	d9801e04 	addi	r6,sp,120
   40db0:	b80b883a 	mov	r5,r23
   40db4:	8009883a 	mov	r4,r16
   40db8:	00471200 	call	47120 <__sprint_r>
   40dbc:	103ea01e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   40dc0:	8c7ffc04 	addi	r17,r17,-16
   40dc4:	d8c02017 	ldw	r3,128(sp)
   40dc8:	d8801f17 	ldw	r2,124(sp)
   40dcc:	da000404 	addi	r8,sp,16
   40dd0:	e47fef16 	blt	fp,r17,40d90 <__alt_data_end+0xfffe49d0>
   40dd4:	9021883a 	mov	r16,r18
   40dd8:	a825883a 	mov	r18,r21
   40ddc:	b02b883a 	mov	r21,r22
   40de0:	882d883a 	mov	r22,r17
   40de4:	dc402a17 	ldw	r17,168(sp)
   40de8:	d9002c17 	ldw	r4,176(sp)
   40dec:	1d87883a 	add	r3,r3,r22
   40df0:	10800044 	addi	r2,r2,1
   40df4:	41000015 	stw	r4,0(r8)
   40df8:	45800115 	stw	r22,4(r8)
   40dfc:	d8c02015 	stw	r3,128(sp)
   40e00:	d8801f15 	stw	r2,124(sp)
   40e04:	010001c4 	movi	r4,7
   40e08:	20821016 	blt	r4,r2,4164c <___vfprintf_internal_r+0x121c>
   40e0c:	42000204 	addi	r8,r8,8
   40e10:	9080400c 	andi	r2,r18,256
   40e14:	10013a1e 	bne	r2,zero,41300 <___vfprintf_internal_r+0xed0>
   40e18:	d9402b17 	ldw	r5,172(sp)
   40e1c:	d8801f17 	ldw	r2,124(sp)
   40e20:	44000015 	stw	r16,0(r8)
   40e24:	1947883a 	add	r3,r3,r5
   40e28:	10800044 	addi	r2,r2,1
   40e2c:	41400115 	stw	r5,4(r8)
   40e30:	d8c02015 	stw	r3,128(sp)
   40e34:	d8801f15 	stw	r2,124(sp)
   40e38:	010001c4 	movi	r4,7
   40e3c:	2081f516 	blt	r4,r2,41614 <___vfprintf_internal_r+0x11e4>
   40e40:	42000204 	addi	r8,r8,8
   40e44:	9480010c 	andi	r18,r18,4
   40e48:	90003226 	beq	r18,zero,40f14 <___vfprintf_internal_r+0xae4>
   40e4c:	d9403117 	ldw	r5,196(sp)
   40e50:	d8802917 	ldw	r2,164(sp)
   40e54:	28a1c83a 	sub	r16,r5,r2
   40e58:	04002e0e 	bge	zero,r16,40f14 <___vfprintf_internal_r+0xae4>
   40e5c:	04400404 	movi	r17,16
   40e60:	d8801f17 	ldw	r2,124(sp)
   40e64:	8c04c40e 	bge	r17,r16,42178 <___vfprintf_internal_r+0x1d48>
   40e68:	01400174 	movhi	r5,5
   40e6c:	297e4784 	addi	r5,r5,-1762
   40e70:	d9403515 	stw	r5,212(sp)
   40e74:	048001c4 	movi	r18,7
   40e78:	dcc02d17 	ldw	r19,180(sp)
   40e7c:	00000306 	br	40e8c <___vfprintf_internal_r+0xa5c>
   40e80:	843ffc04 	addi	r16,r16,-16
   40e84:	42000204 	addi	r8,r8,8
   40e88:	8c00130e 	bge	r17,r16,40ed8 <___vfprintf_internal_r+0xaa8>
   40e8c:	01000174 	movhi	r4,5
   40e90:	18c00404 	addi	r3,r3,16
   40e94:	10800044 	addi	r2,r2,1
   40e98:	213e4784 	addi	r4,r4,-1762
   40e9c:	41000015 	stw	r4,0(r8)
   40ea0:	44400115 	stw	r17,4(r8)
   40ea4:	d8c02015 	stw	r3,128(sp)
   40ea8:	d8801f15 	stw	r2,124(sp)
   40eac:	90bff40e 	bge	r18,r2,40e80 <__alt_data_end+0xfffe4ac0>
   40eb0:	d9801e04 	addi	r6,sp,120
   40eb4:	b80b883a 	mov	r5,r23
   40eb8:	9809883a 	mov	r4,r19
   40ebc:	00471200 	call	47120 <__sprint_r>
   40ec0:	103e5f1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   40ec4:	843ffc04 	addi	r16,r16,-16
   40ec8:	d8c02017 	ldw	r3,128(sp)
   40ecc:	d8801f17 	ldw	r2,124(sp)
   40ed0:	da000404 	addi	r8,sp,16
   40ed4:	8c3fed16 	blt	r17,r16,40e8c <__alt_data_end+0xfffe4acc>
   40ed8:	d9403517 	ldw	r5,212(sp)
   40edc:	1c07883a 	add	r3,r3,r16
   40ee0:	10800044 	addi	r2,r2,1
   40ee4:	41400015 	stw	r5,0(r8)
   40ee8:	44000115 	stw	r16,4(r8)
   40eec:	d8c02015 	stw	r3,128(sp)
   40ef0:	d8801f15 	stw	r2,124(sp)
   40ef4:	010001c4 	movi	r4,7
   40ef8:	2080060e 	bge	r4,r2,40f14 <___vfprintf_internal_r+0xae4>
   40efc:	d9002d17 	ldw	r4,180(sp)
   40f00:	d9801e04 	addi	r6,sp,120
   40f04:	b80b883a 	mov	r5,r23
   40f08:	00471200 	call	47120 <__sprint_r>
   40f0c:	103e4c1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   40f10:	d8c02017 	ldw	r3,128(sp)
   40f14:	d8803117 	ldw	r2,196(sp)
   40f18:	d9002917 	ldw	r4,164(sp)
   40f1c:	1100010e 	bge	r2,r4,40f24 <___vfprintf_internal_r+0xaf4>
   40f20:	2005883a 	mov	r2,r4
   40f24:	d9402f17 	ldw	r5,188(sp)
   40f28:	288b883a 	add	r5,r5,r2
   40f2c:	d9402f15 	stw	r5,188(sp)
   40f30:	1801c01e 	bne	r3,zero,41634 <___vfprintf_internal_r+0x1204>
   40f34:	a8800007 	ldb	r2,0(r21)
   40f38:	d8001f15 	stw	zero,124(sp)
   40f3c:	da000404 	addi	r8,sp,16
   40f40:	103d751e 	bne	r2,zero,40518 <__alt_data_end+0xfffe4158>
   40f44:	a823883a 	mov	r17,r21
   40f48:	003d8b06 	br	40578 <__alt_data_end+0xfffe41b8>
   40f4c:	8025883a 	mov	r18,r16
   40f50:	dc002903 	ldbu	r16,164(sp)
   40f54:	e011883a 	mov	r8,fp
   40f58:	84003fcc 	andi	r16,r16,255
   40f5c:	8005e51e 	bne	r16,zero,426f4 <___vfprintf_internal_r+0x22c4>
   40f60:	94800414 	ori	r18,r18,16
   40f64:	9080080c 	andi	r2,r18,32
   40f68:	10022b26 	beq	r2,zero,41818 <___vfprintf_internal_r+0x13e8>
   40f6c:	d9002e17 	ldw	r4,184(sp)
   40f70:	d9402a17 	ldw	r5,168(sp)
   40f74:	d8002785 	stb	zero,158(sp)
   40f78:	20c00204 	addi	r3,r4,8
   40f7c:	24c00017 	ldw	r19,0(r4)
   40f80:	25800117 	ldw	r22,4(r4)
   40f84:	28042e16 	blt	r5,zero,42040 <___vfprintf_internal_r+0x1c10>
   40f88:	013fdfc4 	movi	r4,-129
   40f8c:	9d84b03a 	or	r2,r19,r22
   40f90:	d8c02e15 	stw	r3,184(sp)
   40f94:	9124703a 	and	r18,r18,r4
   40f98:	0039883a 	mov	fp,zero
   40f9c:	103e801e 	bne	r2,zero,409a0 <__alt_data_end+0xfffe45e0>
   40fa0:	d9002a17 	ldw	r4,168(sp)
   40fa4:	2002e01e 	bne	r4,zero,41b28 <___vfprintf_internal_r+0x16f8>
   40fa8:	d8002a15 	stw	zero,168(sp)
   40fac:	d8002b15 	stw	zero,172(sp)
   40fb0:	dc001e04 	addi	r16,sp,120
   40fb4:	003ef506 	br	40b8c <__alt_data_end+0xfffe47cc>
   40fb8:	8025883a 	mov	r18,r16
   40fbc:	dc002903 	ldbu	r16,164(sp)
   40fc0:	e011883a 	mov	r8,fp
   40fc4:	84003fcc 	andi	r16,r16,255
   40fc8:	8005ba1e 	bne	r16,zero,426b4 <___vfprintf_internal_r+0x2284>
   40fcc:	01000174 	movhi	r4,5
   40fd0:	213e3704 	addi	r4,r4,-1828
   40fd4:	d9003915 	stw	r4,228(sp)
   40fd8:	9080080c 	andi	r2,r18,32
   40fdc:	10006126 	beq	r2,zero,41164 <___vfprintf_internal_r+0xd34>
   40fe0:	d9402e17 	ldw	r5,184(sp)
   40fe4:	2cc00017 	ldw	r19,0(r5)
   40fe8:	2d800117 	ldw	r22,4(r5)
   40fec:	29400204 	addi	r5,r5,8
   40ff0:	d9402e15 	stw	r5,184(sp)
   40ff4:	9080004c 	andi	r2,r18,1
   40ff8:	1001ac26 	beq	r2,zero,416ac <___vfprintf_internal_r+0x127c>
   40ffc:	9d84b03a 	or	r2,r19,r22
   41000:	10038526 	beq	r2,zero,41e18 <___vfprintf_internal_r+0x19e8>
   41004:	d8c02a17 	ldw	r3,168(sp)
   41008:	00800c04 	movi	r2,48
   4100c:	d8802705 	stb	r2,156(sp)
   41010:	dc402745 	stb	r17,157(sp)
   41014:	d8002785 	stb	zero,158(sp)
   41018:	90800094 	ori	r2,r18,2
   4101c:	18047916 	blt	r3,zero,42204 <___vfprintf_internal_r+0x1dd4>
   41020:	00bfdfc4 	movi	r2,-129
   41024:	90a4703a 	and	r18,r18,r2
   41028:	94800094 	ori	r18,r18,2
   4102c:	0039883a 	mov	fp,zero
   41030:	d9003917 	ldw	r4,228(sp)
   41034:	dc001e04 	addi	r16,sp,120
   41038:	988003cc 	andi	r2,r19,15
   4103c:	b006973a 	slli	r3,r22,28
   41040:	2085883a 	add	r2,r4,r2
   41044:	9826d13a 	srli	r19,r19,4
   41048:	10800003 	ldbu	r2,0(r2)
   4104c:	b02cd13a 	srli	r22,r22,4
   41050:	843fffc4 	addi	r16,r16,-1
   41054:	1ce6b03a 	or	r19,r3,r19
   41058:	80800005 	stb	r2,0(r16)
   4105c:	9d84b03a 	or	r2,r19,r22
   41060:	103ff51e 	bne	r2,zero,41038 <__alt_data_end+0xfffe4c78>
   41064:	d8c02817 	ldw	r3,160(sp)
   41068:	1c07c83a 	sub	r3,r3,r16
   4106c:	d8c02b15 	stw	r3,172(sp)
   41070:	003ec606 	br	40b8c <__alt_data_end+0xfffe47cc>
   41074:	8025883a 	mov	r18,r16
   41078:	dc002903 	ldbu	r16,164(sp)
   4107c:	e011883a 	mov	r8,fp
   41080:	84003fcc 	andi	r16,r16,255
   41084:	803e9626 	beq	r16,zero,40ae0 <__alt_data_end+0xfffe4720>
   41088:	d8c02b03 	ldbu	r3,172(sp)
   4108c:	d8c02785 	stb	r3,158(sp)
   41090:	003e9306 	br	40ae0 <__alt_data_end+0xfffe4720>
   41094:	00c00044 	movi	r3,1
   41098:	d8c02905 	stb	r3,164(sp)
   4109c:	00c00ac4 	movi	r3,43
   410a0:	d8c02b05 	stb	r3,172(sp)
   410a4:	ac400007 	ldb	r17,0(r21)
   410a8:	003d4306 	br	405b8 <__alt_data_end+0xfffe41f8>
   410ac:	84000814 	ori	r16,r16,32
   410b0:	ac400007 	ldb	r17,0(r21)
   410b4:	003d4006 	br	405b8 <__alt_data_end+0xfffe41f8>
   410b8:	d8802e17 	ldw	r2,184(sp)
   410bc:	8025883a 	mov	r18,r16
   410c0:	d8002785 	stb	zero,158(sp)
   410c4:	14000017 	ldw	r16,0(r2)
   410c8:	e011883a 	mov	r8,fp
   410cc:	14c00104 	addi	r19,r2,4
   410d0:	80042d26 	beq	r16,zero,42188 <___vfprintf_internal_r+0x1d58>
   410d4:	d8c02a17 	ldw	r3,168(sp)
   410d8:	1803e416 	blt	r3,zero,4206c <___vfprintf_internal_r+0x1c3c>
   410dc:	180d883a 	mov	r6,r3
   410e0:	000b883a 	mov	r5,zero
   410e4:	8009883a 	mov	r4,r16
   410e8:	df003d15 	stw	fp,244(sp)
   410ec:	00458a00 	call	458a0 <memchr>
   410f0:	da003d17 	ldw	r8,244(sp)
   410f4:	10046826 	beq	r2,zero,42298 <___vfprintf_internal_r+0x1e68>
   410f8:	1405c83a 	sub	r2,r2,r16
   410fc:	d8802b15 	stw	r2,172(sp)
   41100:	1003e016 	blt	r2,zero,42084 <___vfprintf_internal_r+0x1c54>
   41104:	df002783 	ldbu	fp,158(sp)
   41108:	d8802915 	stw	r2,164(sp)
   4110c:	dcc02e15 	stw	r19,184(sp)
   41110:	d8002a15 	stw	zero,168(sp)
   41114:	d8003215 	stw	zero,200(sp)
   41118:	003ea206 	br	40ba4 <__alt_data_end+0xfffe47e4>
   4111c:	8025883a 	mov	r18,r16
   41120:	dc002903 	ldbu	r16,164(sp)
   41124:	e011883a 	mov	r8,fp
   41128:	84003fcc 	andi	r16,r16,255
   4112c:	803f8d26 	beq	r16,zero,40f64 <__alt_data_end+0xfffe4ba4>
   41130:	d8c02b03 	ldbu	r3,172(sp)
   41134:	d8c02785 	stb	r3,158(sp)
   41138:	003f8a06 	br	40f64 <__alt_data_end+0xfffe4ba4>
   4113c:	8025883a 	mov	r18,r16
   41140:	dc002903 	ldbu	r16,164(sp)
   41144:	e011883a 	mov	r8,fp
   41148:	84003fcc 	andi	r16,r16,255
   4114c:	8005661e 	bne	r16,zero,426e8 <___vfprintf_internal_r+0x22b8>
   41150:	01000174 	movhi	r4,5
   41154:	213e3c04 	addi	r4,r4,-1808
   41158:	d9003915 	stw	r4,228(sp)
   4115c:	9080080c 	andi	r2,r18,32
   41160:	103f9f1e 	bne	r2,zero,40fe0 <__alt_data_end+0xfffe4c20>
   41164:	9080040c 	andi	r2,r18,16
   41168:	1002eb26 	beq	r2,zero,41d18 <___vfprintf_internal_r+0x18e8>
   4116c:	d8802e17 	ldw	r2,184(sp)
   41170:	002d883a 	mov	r22,zero
   41174:	14c00017 	ldw	r19,0(r2)
   41178:	10800104 	addi	r2,r2,4
   4117c:	d8802e15 	stw	r2,184(sp)
   41180:	003f9c06 	br	40ff4 <__alt_data_end+0xfffe4c34>
   41184:	d8802b07 	ldb	r2,172(sp)
   41188:	1002e11e 	bne	r2,zero,41d10 <___vfprintf_internal_r+0x18e0>
   4118c:	00c00044 	movi	r3,1
   41190:	d8c02905 	stb	r3,164(sp)
   41194:	00c00804 	movi	r3,32
   41198:	d8c02b05 	stb	r3,172(sp)
   4119c:	ac400007 	ldb	r17,0(r21)
   411a0:	003d0506 	br	405b8 <__alt_data_end+0xfffe41f8>
   411a4:	84000054 	ori	r16,r16,1
   411a8:	ac400007 	ldb	r17,0(r21)
   411ac:	003d0206 	br	405b8 <__alt_data_end+0xfffe41f8>
   411b0:	8025883a 	mov	r18,r16
   411b4:	dc002903 	ldbu	r16,164(sp)
   411b8:	e011883a 	mov	r8,fp
   411bc:	84003fcc 	andi	r16,r16,255
   411c0:	803de726 	beq	r16,zero,40960 <__alt_data_end+0xfffe45a0>
   411c4:	d8c02b03 	ldbu	r3,172(sp)
   411c8:	d8c02785 	stb	r3,158(sp)
   411cc:	003de406 	br	40960 <__alt_data_end+0xfffe45a0>
   411d0:	84001014 	ori	r16,r16,64
   411d4:	ac400007 	ldb	r17,0(r21)
   411d8:	003cf706 	br	405b8 <__alt_data_end+0xfffe41f8>
   411dc:	ac400007 	ldb	r17,0(r21)
   411e0:	00801b04 	movi	r2,108
   411e4:	88838f26 	beq	r17,r2,42024 <___vfprintf_internal_r+0x1bf4>
   411e8:	84000414 	ori	r16,r16,16
   411ec:	003cf206 	br	405b8 <__alt_data_end+0xfffe41f8>
   411f0:	8025883a 	mov	r18,r16
   411f4:	dc002903 	ldbu	r16,164(sp)
   411f8:	e011883a 	mov	r8,fp
   411fc:	84003fcc 	andi	r16,r16,255
   41200:	80053f1e 	bne	r16,zero,42700 <___vfprintf_internal_r+0x22d0>
   41204:	9080080c 	andi	r2,r18,32
   41208:	1002d226 	beq	r2,zero,41d54 <___vfprintf_internal_r+0x1924>
   4120c:	d9002e17 	ldw	r4,184(sp)
   41210:	d9402f17 	ldw	r5,188(sp)
   41214:	20800017 	ldw	r2,0(r4)
   41218:	2807d7fa 	srai	r3,r5,31
   4121c:	21000104 	addi	r4,r4,4
   41220:	d9002e15 	stw	r4,184(sp)
   41224:	11400015 	stw	r5,0(r2)
   41228:	10c00115 	stw	r3,4(r2)
   4122c:	003cb806 	br	40510 <__alt_data_end+0xfffe4150>
   41230:	d8c02e17 	ldw	r3,184(sp)
   41234:	d9002e17 	ldw	r4,184(sp)
   41238:	8025883a 	mov	r18,r16
   4123c:	18800017 	ldw	r2,0(r3)
   41240:	21000104 	addi	r4,r4,4
   41244:	00c00044 	movi	r3,1
   41248:	e011883a 	mov	r8,fp
   4124c:	d8c02915 	stw	r3,164(sp)
   41250:	d8002785 	stb	zero,158(sp)
   41254:	d8801405 	stb	r2,80(sp)
   41258:	d9002e15 	stw	r4,184(sp)
   4125c:	d8c02b15 	stw	r3,172(sp)
   41260:	d8002a15 	stw	zero,168(sp)
   41264:	d8003215 	stw	zero,200(sp)
   41268:	dc001404 	addi	r16,sp,80
   4126c:	0039883a 	mov	fp,zero
   41270:	003e5306 	br	40bc0 <__alt_data_end+0xfffe4800>
   41274:	01000174 	movhi	r4,5
   41278:	213e3c04 	addi	r4,r4,-1808
   4127c:	0039883a 	mov	fp,zero
   41280:	d9003915 	stw	r4,228(sp)
   41284:	04401e04 	movi	r17,120
   41288:	003f6906 	br	41030 <__alt_data_end+0xfffe4c70>
   4128c:	8025883a 	mov	r18,r16
   41290:	dc002903 	ldbu	r16,164(sp)
   41294:	e011883a 	mov	r8,fp
   41298:	84003fcc 	andi	r16,r16,255
   4129c:	8005081e 	bne	r16,zero,426c0 <___vfprintf_internal_r+0x2290>
   412a0:	883d6126 	beq	r17,zero,40828 <__alt_data_end+0xfffe4468>
   412a4:	00c00044 	movi	r3,1
   412a8:	d8c02915 	stw	r3,164(sp)
   412ac:	dc401405 	stb	r17,80(sp)
   412b0:	d8002785 	stb	zero,158(sp)
   412b4:	003fe906 	br	4125c <__alt_data_end+0xfffe4e9c>
   412b8:	01400174 	movhi	r5,5
   412bc:	297e3c04 	addi	r5,r5,-1808
   412c0:	d9403915 	stw	r5,228(sp)
   412c4:	d8c02e15 	stw	r3,184(sp)
   412c8:	1025883a 	mov	r18,r2
   412cc:	04401e04 	movi	r17,120
   412d0:	9d84b03a 	or	r2,r19,r22
   412d4:	1000fc1e 	bne	r2,zero,416c8 <___vfprintf_internal_r+0x1298>
   412d8:	0039883a 	mov	fp,zero
   412dc:	00800084 	movi	r2,2
   412e0:	10803fcc 	andi	r2,r2,255
   412e4:	00c00044 	movi	r3,1
   412e8:	10c20f26 	beq	r2,r3,41b28 <___vfprintf_internal_r+0x16f8>
   412ec:	00c00084 	movi	r3,2
   412f0:	10fd3326 	beq	r2,r3,407c0 <__alt_data_end+0xfffe4400>
   412f4:	003e0b06 	br	40b24 <__alt_data_end+0xfffe4764>
   412f8:	d8c02017 	ldw	r3,128(sp)
   412fc:	003e7106 	br	40cc4 <__alt_data_end+0xfffe4904>
   41300:	00801944 	movi	r2,101
   41304:	14407e0e 	bge	r2,r17,41500 <___vfprintf_internal_r+0x10d0>
   41308:	d9003617 	ldw	r4,216(sp)
   4130c:	d9403817 	ldw	r5,224(sp)
   41310:	000d883a 	mov	r6,zero
   41314:	000f883a 	mov	r7,zero
   41318:	d8c03c15 	stw	r3,240(sp)
   4131c:	da003d15 	stw	r8,244(sp)
   41320:	004bc080 	call	4bc08 <__eqdf2>
   41324:	d8c03c17 	ldw	r3,240(sp)
   41328:	da003d17 	ldw	r8,244(sp)
   4132c:	1000f71e 	bne	r2,zero,4170c <___vfprintf_internal_r+0x12dc>
   41330:	d8801f17 	ldw	r2,124(sp)
   41334:	01000174 	movhi	r4,5
   41338:	213e4304 	addi	r4,r4,-1780
   4133c:	18c00044 	addi	r3,r3,1
   41340:	10800044 	addi	r2,r2,1
   41344:	41000015 	stw	r4,0(r8)
   41348:	01000044 	movi	r4,1
   4134c:	41000115 	stw	r4,4(r8)
   41350:	d8c02015 	stw	r3,128(sp)
   41354:	d8801f15 	stw	r2,124(sp)
   41358:	010001c4 	movi	r4,7
   4135c:	2082b816 	blt	r4,r2,41e40 <___vfprintf_internal_r+0x1a10>
   41360:	42000204 	addi	r8,r8,8
   41364:	d8802617 	ldw	r2,152(sp)
   41368:	d9403317 	ldw	r5,204(sp)
   4136c:	11400216 	blt	r2,r5,41378 <___vfprintf_internal_r+0xf48>
   41370:	9080004c 	andi	r2,r18,1
   41374:	103eb326 	beq	r2,zero,40e44 <__alt_data_end+0xfffe4a84>
   41378:	d8803717 	ldw	r2,220(sp)
   4137c:	d9003417 	ldw	r4,208(sp)
   41380:	d9403717 	ldw	r5,220(sp)
   41384:	1887883a 	add	r3,r3,r2
   41388:	d8801f17 	ldw	r2,124(sp)
   4138c:	41000015 	stw	r4,0(r8)
   41390:	41400115 	stw	r5,4(r8)
   41394:	10800044 	addi	r2,r2,1
   41398:	d8c02015 	stw	r3,128(sp)
   4139c:	d8801f15 	stw	r2,124(sp)
   413a0:	010001c4 	movi	r4,7
   413a4:	20832916 	blt	r4,r2,4204c <___vfprintf_internal_r+0x1c1c>
   413a8:	42000204 	addi	r8,r8,8
   413ac:	d8803317 	ldw	r2,204(sp)
   413b0:	143fffc4 	addi	r16,r2,-1
   413b4:	043ea30e 	bge	zero,r16,40e44 <__alt_data_end+0xfffe4a84>
   413b8:	04400404 	movi	r17,16
   413bc:	d8801f17 	ldw	r2,124(sp)
   413c0:	8c00880e 	bge	r17,r16,415e4 <___vfprintf_internal_r+0x11b4>
   413c4:	01400174 	movhi	r5,5
   413c8:	297e4384 	addi	r5,r5,-1778
   413cc:	d9402c15 	stw	r5,176(sp)
   413d0:	058001c4 	movi	r22,7
   413d4:	dcc02d17 	ldw	r19,180(sp)
   413d8:	00000306 	br	413e8 <___vfprintf_internal_r+0xfb8>
   413dc:	42000204 	addi	r8,r8,8
   413e0:	843ffc04 	addi	r16,r16,-16
   413e4:	8c00820e 	bge	r17,r16,415f0 <___vfprintf_internal_r+0x11c0>
   413e8:	18c00404 	addi	r3,r3,16
   413ec:	10800044 	addi	r2,r2,1
   413f0:	45000015 	stw	r20,0(r8)
   413f4:	44400115 	stw	r17,4(r8)
   413f8:	d8c02015 	stw	r3,128(sp)
   413fc:	d8801f15 	stw	r2,124(sp)
   41400:	b0bff60e 	bge	r22,r2,413dc <__alt_data_end+0xfffe501c>
   41404:	d9801e04 	addi	r6,sp,120
   41408:	b80b883a 	mov	r5,r23
   4140c:	9809883a 	mov	r4,r19
   41410:	00471200 	call	47120 <__sprint_r>
   41414:	103d0a1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41418:	d8c02017 	ldw	r3,128(sp)
   4141c:	d8801f17 	ldw	r2,124(sp)
   41420:	da000404 	addi	r8,sp,16
   41424:	003fee06 	br	413e0 <__alt_data_end+0xfffe5020>
   41428:	d9403117 	ldw	r5,196(sp)
   4142c:	d8802917 	ldw	r2,164(sp)
   41430:	28adc83a 	sub	r22,r5,r2
   41434:	05be410e 	bge	zero,r22,40d3c <__alt_data_end+0xfffe497c>
   41438:	07000404 	movi	fp,16
   4143c:	d8801f17 	ldw	r2,124(sp)
   41440:	e5838f0e 	bge	fp,r22,42280 <___vfprintf_internal_r+0x1e50>
   41444:	01400174 	movhi	r5,5
   41448:	297e4384 	addi	r5,r5,-1778
   4144c:	dc403015 	stw	r17,192(sp)
   41450:	d9402c15 	stw	r5,176(sp)
   41454:	b023883a 	mov	r17,r22
   41458:	04c001c4 	movi	r19,7
   4145c:	a82d883a 	mov	r22,r21
   41460:	902b883a 	mov	r21,r18
   41464:	8025883a 	mov	r18,r16
   41468:	dc002d17 	ldw	r16,180(sp)
   4146c:	00000306 	br	4147c <___vfprintf_internal_r+0x104c>
   41470:	8c7ffc04 	addi	r17,r17,-16
   41474:	42000204 	addi	r8,r8,8
   41478:	e440110e 	bge	fp,r17,414c0 <___vfprintf_internal_r+0x1090>
   4147c:	18c00404 	addi	r3,r3,16
   41480:	10800044 	addi	r2,r2,1
   41484:	45000015 	stw	r20,0(r8)
   41488:	47000115 	stw	fp,4(r8)
   4148c:	d8c02015 	stw	r3,128(sp)
   41490:	d8801f15 	stw	r2,124(sp)
   41494:	98bff60e 	bge	r19,r2,41470 <__alt_data_end+0xfffe50b0>
   41498:	d9801e04 	addi	r6,sp,120
   4149c:	b80b883a 	mov	r5,r23
   414a0:	8009883a 	mov	r4,r16
   414a4:	00471200 	call	47120 <__sprint_r>
   414a8:	103ce51e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   414ac:	8c7ffc04 	addi	r17,r17,-16
   414b0:	d8c02017 	ldw	r3,128(sp)
   414b4:	d8801f17 	ldw	r2,124(sp)
   414b8:	da000404 	addi	r8,sp,16
   414bc:	e47fef16 	blt	fp,r17,4147c <__alt_data_end+0xfffe50bc>
   414c0:	9021883a 	mov	r16,r18
   414c4:	a825883a 	mov	r18,r21
   414c8:	b02b883a 	mov	r21,r22
   414cc:	882d883a 	mov	r22,r17
   414d0:	dc403017 	ldw	r17,192(sp)
   414d4:	d9002c17 	ldw	r4,176(sp)
   414d8:	1d87883a 	add	r3,r3,r22
   414dc:	10800044 	addi	r2,r2,1
   414e0:	41000015 	stw	r4,0(r8)
   414e4:	45800115 	stw	r22,4(r8)
   414e8:	d8c02015 	stw	r3,128(sp)
   414ec:	d8801f15 	stw	r2,124(sp)
   414f0:	010001c4 	movi	r4,7
   414f4:	20818e16 	blt	r4,r2,41b30 <___vfprintf_internal_r+0x1700>
   414f8:	42000204 	addi	r8,r8,8
   414fc:	003e0f06 	br	40d3c <__alt_data_end+0xfffe497c>
   41500:	d9403317 	ldw	r5,204(sp)
   41504:	00800044 	movi	r2,1
   41508:	18c00044 	addi	r3,r3,1
   4150c:	1141530e 	bge	r2,r5,41a5c <___vfprintf_internal_r+0x162c>
   41510:	dc401f17 	ldw	r17,124(sp)
   41514:	00800044 	movi	r2,1
   41518:	40800115 	stw	r2,4(r8)
   4151c:	8c400044 	addi	r17,r17,1
   41520:	44000015 	stw	r16,0(r8)
   41524:	d8c02015 	stw	r3,128(sp)
   41528:	dc401f15 	stw	r17,124(sp)
   4152c:	008001c4 	movi	r2,7
   41530:	14416b16 	blt	r2,r17,41ae0 <___vfprintf_internal_r+0x16b0>
   41534:	42000204 	addi	r8,r8,8
   41538:	d8803717 	ldw	r2,220(sp)
   4153c:	d9003417 	ldw	r4,208(sp)
   41540:	8c400044 	addi	r17,r17,1
   41544:	10c7883a 	add	r3,r2,r3
   41548:	40800115 	stw	r2,4(r8)
   4154c:	41000015 	stw	r4,0(r8)
   41550:	d8c02015 	stw	r3,128(sp)
   41554:	dc401f15 	stw	r17,124(sp)
   41558:	008001c4 	movi	r2,7
   4155c:	14416916 	blt	r2,r17,41b04 <___vfprintf_internal_r+0x16d4>
   41560:	45800204 	addi	r22,r8,8
   41564:	d9003617 	ldw	r4,216(sp)
   41568:	d9403817 	ldw	r5,224(sp)
   4156c:	000d883a 	mov	r6,zero
   41570:	000f883a 	mov	r7,zero
   41574:	d8c03c15 	stw	r3,240(sp)
   41578:	004bc080 	call	4bc08 <__eqdf2>
   4157c:	d8c03c17 	ldw	r3,240(sp)
   41580:	1000bc26 	beq	r2,zero,41874 <___vfprintf_internal_r+0x1444>
   41584:	d9403317 	ldw	r5,204(sp)
   41588:	84000044 	addi	r16,r16,1
   4158c:	8c400044 	addi	r17,r17,1
   41590:	28bfffc4 	addi	r2,r5,-1
   41594:	1887883a 	add	r3,r3,r2
   41598:	b0800115 	stw	r2,4(r22)
   4159c:	b4000015 	stw	r16,0(r22)
   415a0:	d8c02015 	stw	r3,128(sp)
   415a4:	dc401f15 	stw	r17,124(sp)
   415a8:	008001c4 	movi	r2,7
   415ac:	14414316 	blt	r2,r17,41abc <___vfprintf_internal_r+0x168c>
   415b0:	b5800204 	addi	r22,r22,8
   415b4:	d9003a17 	ldw	r4,232(sp)
   415b8:	df0022c4 	addi	fp,sp,139
   415bc:	8c400044 	addi	r17,r17,1
   415c0:	20c7883a 	add	r3,r4,r3
   415c4:	b7000015 	stw	fp,0(r22)
   415c8:	b1000115 	stw	r4,4(r22)
   415cc:	d8c02015 	stw	r3,128(sp)
   415d0:	dc401f15 	stw	r17,124(sp)
   415d4:	008001c4 	movi	r2,7
   415d8:	14400e16 	blt	r2,r17,41614 <___vfprintf_internal_r+0x11e4>
   415dc:	b2000204 	addi	r8,r22,8
   415e0:	003e1806 	br	40e44 <__alt_data_end+0xfffe4a84>
   415e4:	01000174 	movhi	r4,5
   415e8:	213e4384 	addi	r4,r4,-1778
   415ec:	d9002c15 	stw	r4,176(sp)
   415f0:	d9002c17 	ldw	r4,176(sp)
   415f4:	1c07883a 	add	r3,r3,r16
   415f8:	44000115 	stw	r16,4(r8)
   415fc:	41000015 	stw	r4,0(r8)
   41600:	10800044 	addi	r2,r2,1
   41604:	d8c02015 	stw	r3,128(sp)
   41608:	d8801f15 	stw	r2,124(sp)
   4160c:	010001c4 	movi	r4,7
   41610:	20be0b0e 	bge	r4,r2,40e40 <__alt_data_end+0xfffe4a80>
   41614:	d9002d17 	ldw	r4,180(sp)
   41618:	d9801e04 	addi	r6,sp,120
   4161c:	b80b883a 	mov	r5,r23
   41620:	00471200 	call	47120 <__sprint_r>
   41624:	103c861e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41628:	d8c02017 	ldw	r3,128(sp)
   4162c:	da000404 	addi	r8,sp,16
   41630:	003e0406 	br	40e44 <__alt_data_end+0xfffe4a84>
   41634:	d9002d17 	ldw	r4,180(sp)
   41638:	d9801e04 	addi	r6,sp,120
   4163c:	b80b883a 	mov	r5,r23
   41640:	00471200 	call	47120 <__sprint_r>
   41644:	103e3b26 	beq	r2,zero,40f34 <__alt_data_end+0xfffe4b74>
   41648:	003c7d06 	br	40840 <__alt_data_end+0xfffe4480>
   4164c:	d9002d17 	ldw	r4,180(sp)
   41650:	d9801e04 	addi	r6,sp,120
   41654:	b80b883a 	mov	r5,r23
   41658:	00471200 	call	47120 <__sprint_r>
   4165c:	103c781e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41660:	d8c02017 	ldw	r3,128(sp)
   41664:	da000404 	addi	r8,sp,16
   41668:	003de906 	br	40e10 <__alt_data_end+0xfffe4a50>
   4166c:	d9002d17 	ldw	r4,180(sp)
   41670:	d9801e04 	addi	r6,sp,120
   41674:	b80b883a 	mov	r5,r23
   41678:	00471200 	call	47120 <__sprint_r>
   4167c:	103c701e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41680:	d8c02017 	ldw	r3,128(sp)
   41684:	da000404 	addi	r8,sp,16
   41688:	003d9b06 	br	40cf8 <__alt_data_end+0xfffe4938>
   4168c:	d9002d17 	ldw	r4,180(sp)
   41690:	d9801e04 	addi	r6,sp,120
   41694:	b80b883a 	mov	r5,r23
   41698:	00471200 	call	47120 <__sprint_r>
   4169c:	103c681e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   416a0:	d8c02017 	ldw	r3,128(sp)
   416a4:	da000404 	addi	r8,sp,16
   416a8:	003da106 	br	40d30 <__alt_data_end+0xfffe4970>
   416ac:	d9402a17 	ldw	r5,168(sp)
   416b0:	d8002785 	stb	zero,158(sp)
   416b4:	283f0616 	blt	r5,zero,412d0 <__alt_data_end+0xfffe4f10>
   416b8:	00ffdfc4 	movi	r3,-129
   416bc:	9d84b03a 	or	r2,r19,r22
   416c0:	90e4703a 	and	r18,r18,r3
   416c4:	103c3b26 	beq	r2,zero,407b4 <__alt_data_end+0xfffe43f4>
   416c8:	0039883a 	mov	fp,zero
   416cc:	003e5806 	br	41030 <__alt_data_end+0xfffe4c70>
   416d0:	9080040c 	andi	r2,r18,16
   416d4:	1001b326 	beq	r2,zero,41da4 <___vfprintf_internal_r+0x1974>
   416d8:	d8c02e17 	ldw	r3,184(sp)
   416dc:	d9002a17 	ldw	r4,168(sp)
   416e0:	d8002785 	stb	zero,158(sp)
   416e4:	18800104 	addi	r2,r3,4
   416e8:	1cc00017 	ldw	r19,0(r3)
   416ec:	002d883a 	mov	r22,zero
   416f0:	2001b516 	blt	r4,zero,41dc8 <___vfprintf_internal_r+0x1998>
   416f4:	00ffdfc4 	movi	r3,-129
   416f8:	d8802e15 	stw	r2,184(sp)
   416fc:	90e4703a 	and	r18,r18,r3
   41700:	983d0526 	beq	r19,zero,40b18 <__alt_data_end+0xfffe4758>
   41704:	0039883a 	mov	fp,zero
   41708:	003d0806 	br	40b2c <__alt_data_end+0xfffe476c>
   4170c:	dc402617 	ldw	r17,152(sp)
   41710:	0441d30e 	bge	zero,r17,41e60 <___vfprintf_internal_r+0x1a30>
   41714:	dc403217 	ldw	r17,200(sp)
   41718:	d8803317 	ldw	r2,204(sp)
   4171c:	1440010e 	bge	r2,r17,41724 <___vfprintf_internal_r+0x12f4>
   41720:	1023883a 	mov	r17,r2
   41724:	04400a0e 	bge	zero,r17,41750 <___vfprintf_internal_r+0x1320>
   41728:	d8801f17 	ldw	r2,124(sp)
   4172c:	1c47883a 	add	r3,r3,r17
   41730:	44000015 	stw	r16,0(r8)
   41734:	10800044 	addi	r2,r2,1
   41738:	44400115 	stw	r17,4(r8)
   4173c:	d8c02015 	stw	r3,128(sp)
   41740:	d8801f15 	stw	r2,124(sp)
   41744:	010001c4 	movi	r4,7
   41748:	20826516 	blt	r4,r2,420e0 <___vfprintf_internal_r+0x1cb0>
   4174c:	42000204 	addi	r8,r8,8
   41750:	88026116 	blt	r17,zero,420d8 <___vfprintf_internal_r+0x1ca8>
   41754:	d9003217 	ldw	r4,200(sp)
   41758:	2463c83a 	sub	r17,r4,r17
   4175c:	04407b0e 	bge	zero,r17,4194c <___vfprintf_internal_r+0x151c>
   41760:	05800404 	movi	r22,16
   41764:	d8801f17 	ldw	r2,124(sp)
   41768:	b4419d0e 	bge	r22,r17,41de0 <___vfprintf_internal_r+0x19b0>
   4176c:	01000174 	movhi	r4,5
   41770:	213e4384 	addi	r4,r4,-1778
   41774:	d9002c15 	stw	r4,176(sp)
   41778:	070001c4 	movi	fp,7
   4177c:	dcc02d17 	ldw	r19,180(sp)
   41780:	00000306 	br	41790 <___vfprintf_internal_r+0x1360>
   41784:	42000204 	addi	r8,r8,8
   41788:	8c7ffc04 	addi	r17,r17,-16
   4178c:	b441970e 	bge	r22,r17,41dec <___vfprintf_internal_r+0x19bc>
   41790:	18c00404 	addi	r3,r3,16
   41794:	10800044 	addi	r2,r2,1
   41798:	45000015 	stw	r20,0(r8)
   4179c:	45800115 	stw	r22,4(r8)
   417a0:	d8c02015 	stw	r3,128(sp)
   417a4:	d8801f15 	stw	r2,124(sp)
   417a8:	e0bff60e 	bge	fp,r2,41784 <__alt_data_end+0xfffe53c4>
   417ac:	d9801e04 	addi	r6,sp,120
   417b0:	b80b883a 	mov	r5,r23
   417b4:	9809883a 	mov	r4,r19
   417b8:	00471200 	call	47120 <__sprint_r>
   417bc:	103c201e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   417c0:	d8c02017 	ldw	r3,128(sp)
   417c4:	d8801f17 	ldw	r2,124(sp)
   417c8:	da000404 	addi	r8,sp,16
   417cc:	003fee06 	br	41788 <__alt_data_end+0xfffe53c8>
   417d0:	d9002d17 	ldw	r4,180(sp)
   417d4:	d9801e04 	addi	r6,sp,120
   417d8:	b80b883a 	mov	r5,r23
   417dc:	00471200 	call	47120 <__sprint_r>
   417e0:	103c171e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   417e4:	d8c02017 	ldw	r3,128(sp)
   417e8:	df002787 	ldb	fp,158(sp)
   417ec:	da000404 	addi	r8,sp,16
   417f0:	003d3406 	br	40cc4 <__alt_data_end+0xfffe4904>
   417f4:	9080040c 	andi	r2,r18,16
   417f8:	10016126 	beq	r2,zero,41d80 <___vfprintf_internal_r+0x1950>
   417fc:	d9402e17 	ldw	r5,184(sp)
   41800:	2cc00017 	ldw	r19,0(r5)
   41804:	29400104 	addi	r5,r5,4
   41808:	d9402e15 	stw	r5,184(sp)
   4180c:	982dd7fa 	srai	r22,r19,31
   41810:	b005883a 	mov	r2,r22
   41814:	003c5a06 	br	40980 <__alt_data_end+0xfffe45c0>
   41818:	9080040c 	andi	r2,r18,16
   4181c:	10003526 	beq	r2,zero,418f4 <___vfprintf_internal_r+0x14c4>
   41820:	d8c02e17 	ldw	r3,184(sp)
   41824:	d9002a17 	ldw	r4,168(sp)
   41828:	d8002785 	stb	zero,158(sp)
   4182c:	18800104 	addi	r2,r3,4
   41830:	1cc00017 	ldw	r19,0(r3)
   41834:	002d883a 	mov	r22,zero
   41838:	20003716 	blt	r4,zero,41918 <___vfprintf_internal_r+0x14e8>
   4183c:	00ffdfc4 	movi	r3,-129
   41840:	d8802e15 	stw	r2,184(sp)
   41844:	90e4703a 	and	r18,r18,r3
   41848:	0039883a 	mov	fp,zero
   4184c:	983dd426 	beq	r19,zero,40fa0 <__alt_data_end+0xfffe4be0>
   41850:	00800244 	movi	r2,9
   41854:	14fc5336 	bltu	r2,r19,409a4 <__alt_data_end+0xfffe45e4>
   41858:	d8c02817 	ldw	r3,160(sp)
   4185c:	dc001dc4 	addi	r16,sp,119
   41860:	9cc00c04 	addi	r19,r19,48
   41864:	1c07c83a 	sub	r3,r3,r16
   41868:	dcc01dc5 	stb	r19,119(sp)
   4186c:	d8c02b15 	stw	r3,172(sp)
   41870:	003cc606 	br	40b8c <__alt_data_end+0xfffe47cc>
   41874:	d8803317 	ldw	r2,204(sp)
   41878:	143fffc4 	addi	r16,r2,-1
   4187c:	043f4d0e 	bge	zero,r16,415b4 <__alt_data_end+0xfffe51f4>
   41880:	07000404 	movi	fp,16
   41884:	e400810e 	bge	fp,r16,41a8c <___vfprintf_internal_r+0x165c>
   41888:	01400174 	movhi	r5,5
   4188c:	297e4384 	addi	r5,r5,-1778
   41890:	d9402c15 	stw	r5,176(sp)
   41894:	01c001c4 	movi	r7,7
   41898:	dcc02d17 	ldw	r19,180(sp)
   4189c:	00000306 	br	418ac <___vfprintf_internal_r+0x147c>
   418a0:	b5800204 	addi	r22,r22,8
   418a4:	843ffc04 	addi	r16,r16,-16
   418a8:	e4007b0e 	bge	fp,r16,41a98 <___vfprintf_internal_r+0x1668>
   418ac:	18c00404 	addi	r3,r3,16
   418b0:	8c400044 	addi	r17,r17,1
   418b4:	b5000015 	stw	r20,0(r22)
   418b8:	b7000115 	stw	fp,4(r22)
   418bc:	d8c02015 	stw	r3,128(sp)
   418c0:	dc401f15 	stw	r17,124(sp)
   418c4:	3c7ff60e 	bge	r7,r17,418a0 <__alt_data_end+0xfffe54e0>
   418c8:	d9801e04 	addi	r6,sp,120
   418cc:	b80b883a 	mov	r5,r23
   418d0:	9809883a 	mov	r4,r19
   418d4:	d9c03c15 	stw	r7,240(sp)
   418d8:	00471200 	call	47120 <__sprint_r>
   418dc:	d9c03c17 	ldw	r7,240(sp)
   418e0:	103bd71e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   418e4:	d8c02017 	ldw	r3,128(sp)
   418e8:	dc401f17 	ldw	r17,124(sp)
   418ec:	dd800404 	addi	r22,sp,16
   418f0:	003fec06 	br	418a4 <__alt_data_end+0xfffe54e4>
   418f4:	9080100c 	andi	r2,r18,64
   418f8:	d8002785 	stb	zero,158(sp)
   418fc:	10010e26 	beq	r2,zero,41d38 <___vfprintf_internal_r+0x1908>
   41900:	d9402e17 	ldw	r5,184(sp)
   41904:	d8c02a17 	ldw	r3,168(sp)
   41908:	002d883a 	mov	r22,zero
   4190c:	28800104 	addi	r2,r5,4
   41910:	2cc0000b 	ldhu	r19,0(r5)
   41914:	183fc90e 	bge	r3,zero,4183c <__alt_data_end+0xfffe547c>
   41918:	d8802e15 	stw	r2,184(sp)
   4191c:	0039883a 	mov	fp,zero
   41920:	9d84b03a 	or	r2,r19,r22
   41924:	103c1e1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffe45e0>
   41928:	00800044 	movi	r2,1
   4192c:	003e6c06 	br	412e0 <__alt_data_end+0xfffe4f20>
   41930:	d9002d17 	ldw	r4,180(sp)
   41934:	d9801e04 	addi	r6,sp,120
   41938:	b80b883a 	mov	r5,r23
   4193c:	00471200 	call	47120 <__sprint_r>
   41940:	103bbf1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41944:	d8c02017 	ldw	r3,128(sp)
   41948:	da000404 	addi	r8,sp,16
   4194c:	d9003217 	ldw	r4,200(sp)
   41950:	d8802617 	ldw	r2,152(sp)
   41954:	d9403317 	ldw	r5,204(sp)
   41958:	8123883a 	add	r17,r16,r4
   4195c:	11400216 	blt	r2,r5,41968 <___vfprintf_internal_r+0x1538>
   41960:	9100004c 	andi	r4,r18,1
   41964:	20000d26 	beq	r4,zero,4199c <___vfprintf_internal_r+0x156c>
   41968:	d9003717 	ldw	r4,220(sp)
   4196c:	d9403417 	ldw	r5,208(sp)
   41970:	1907883a 	add	r3,r3,r4
   41974:	d9001f17 	ldw	r4,124(sp)
   41978:	41400015 	stw	r5,0(r8)
   4197c:	d9403717 	ldw	r5,220(sp)
   41980:	21000044 	addi	r4,r4,1
   41984:	d8c02015 	stw	r3,128(sp)
   41988:	41400115 	stw	r5,4(r8)
   4198c:	d9001f15 	stw	r4,124(sp)
   41990:	014001c4 	movi	r5,7
   41994:	2901e816 	blt	r5,r4,42138 <___vfprintf_internal_r+0x1d08>
   41998:	42000204 	addi	r8,r8,8
   4199c:	d9003317 	ldw	r4,204(sp)
   419a0:	8121883a 	add	r16,r16,r4
   419a4:	2085c83a 	sub	r2,r4,r2
   419a8:	8461c83a 	sub	r16,r16,r17
   419ac:	1400010e 	bge	r2,r16,419b4 <___vfprintf_internal_r+0x1584>
   419b0:	1021883a 	mov	r16,r2
   419b4:	04000a0e 	bge	zero,r16,419e0 <___vfprintf_internal_r+0x15b0>
   419b8:	d9001f17 	ldw	r4,124(sp)
   419bc:	1c07883a 	add	r3,r3,r16
   419c0:	44400015 	stw	r17,0(r8)
   419c4:	21000044 	addi	r4,r4,1
   419c8:	44000115 	stw	r16,4(r8)
   419cc:	d8c02015 	stw	r3,128(sp)
   419d0:	d9001f15 	stw	r4,124(sp)
   419d4:	014001c4 	movi	r5,7
   419d8:	2901fb16 	blt	r5,r4,421c8 <___vfprintf_internal_r+0x1d98>
   419dc:	42000204 	addi	r8,r8,8
   419e0:	8001f716 	blt	r16,zero,421c0 <___vfprintf_internal_r+0x1d90>
   419e4:	1421c83a 	sub	r16,r2,r16
   419e8:	043d160e 	bge	zero,r16,40e44 <__alt_data_end+0xfffe4a84>
   419ec:	04400404 	movi	r17,16
   419f0:	d8801f17 	ldw	r2,124(sp)
   419f4:	8c3efb0e 	bge	r17,r16,415e4 <__alt_data_end+0xfffe5224>
   419f8:	01400174 	movhi	r5,5
   419fc:	297e4384 	addi	r5,r5,-1778
   41a00:	d9402c15 	stw	r5,176(sp)
   41a04:	058001c4 	movi	r22,7
   41a08:	dcc02d17 	ldw	r19,180(sp)
   41a0c:	00000306 	br	41a1c <___vfprintf_internal_r+0x15ec>
   41a10:	42000204 	addi	r8,r8,8
   41a14:	843ffc04 	addi	r16,r16,-16
   41a18:	8c3ef50e 	bge	r17,r16,415f0 <__alt_data_end+0xfffe5230>
   41a1c:	18c00404 	addi	r3,r3,16
   41a20:	10800044 	addi	r2,r2,1
   41a24:	45000015 	stw	r20,0(r8)
   41a28:	44400115 	stw	r17,4(r8)
   41a2c:	d8c02015 	stw	r3,128(sp)
   41a30:	d8801f15 	stw	r2,124(sp)
   41a34:	b0bff60e 	bge	r22,r2,41a10 <__alt_data_end+0xfffe5650>
   41a38:	d9801e04 	addi	r6,sp,120
   41a3c:	b80b883a 	mov	r5,r23
   41a40:	9809883a 	mov	r4,r19
   41a44:	00471200 	call	47120 <__sprint_r>
   41a48:	103b7d1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41a4c:	d8c02017 	ldw	r3,128(sp)
   41a50:	d8801f17 	ldw	r2,124(sp)
   41a54:	da000404 	addi	r8,sp,16
   41a58:	003fee06 	br	41a14 <__alt_data_end+0xfffe5654>
   41a5c:	9088703a 	and	r4,r18,r2
   41a60:	203eab1e 	bne	r4,zero,41510 <__alt_data_end+0xfffe5150>
   41a64:	dc401f17 	ldw	r17,124(sp)
   41a68:	40800115 	stw	r2,4(r8)
   41a6c:	44000015 	stw	r16,0(r8)
   41a70:	8c400044 	addi	r17,r17,1
   41a74:	d8c02015 	stw	r3,128(sp)
   41a78:	dc401f15 	stw	r17,124(sp)
   41a7c:	008001c4 	movi	r2,7
   41a80:	14400e16 	blt	r2,r17,41abc <___vfprintf_internal_r+0x168c>
   41a84:	45800204 	addi	r22,r8,8
   41a88:	003eca06 	br	415b4 <__alt_data_end+0xfffe51f4>
   41a8c:	01000174 	movhi	r4,5
   41a90:	213e4384 	addi	r4,r4,-1778
   41a94:	d9002c15 	stw	r4,176(sp)
   41a98:	d8802c17 	ldw	r2,176(sp)
   41a9c:	1c07883a 	add	r3,r3,r16
   41aa0:	8c400044 	addi	r17,r17,1
   41aa4:	b0800015 	stw	r2,0(r22)
   41aa8:	b4000115 	stw	r16,4(r22)
   41aac:	d8c02015 	stw	r3,128(sp)
   41ab0:	dc401f15 	stw	r17,124(sp)
   41ab4:	008001c4 	movi	r2,7
   41ab8:	147ebd0e 	bge	r2,r17,415b0 <__alt_data_end+0xfffe51f0>
   41abc:	d9002d17 	ldw	r4,180(sp)
   41ac0:	d9801e04 	addi	r6,sp,120
   41ac4:	b80b883a 	mov	r5,r23
   41ac8:	00471200 	call	47120 <__sprint_r>
   41acc:	103b5c1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41ad0:	d8c02017 	ldw	r3,128(sp)
   41ad4:	dc401f17 	ldw	r17,124(sp)
   41ad8:	dd800404 	addi	r22,sp,16
   41adc:	003eb506 	br	415b4 <__alt_data_end+0xfffe51f4>
   41ae0:	d9002d17 	ldw	r4,180(sp)
   41ae4:	d9801e04 	addi	r6,sp,120
   41ae8:	b80b883a 	mov	r5,r23
   41aec:	00471200 	call	47120 <__sprint_r>
   41af0:	103b531e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41af4:	d8c02017 	ldw	r3,128(sp)
   41af8:	dc401f17 	ldw	r17,124(sp)
   41afc:	da000404 	addi	r8,sp,16
   41b00:	003e8d06 	br	41538 <__alt_data_end+0xfffe5178>
   41b04:	d9002d17 	ldw	r4,180(sp)
   41b08:	d9801e04 	addi	r6,sp,120
   41b0c:	b80b883a 	mov	r5,r23
   41b10:	00471200 	call	47120 <__sprint_r>
   41b14:	103b4a1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41b18:	d8c02017 	ldw	r3,128(sp)
   41b1c:	dc401f17 	ldw	r17,124(sp)
   41b20:	dd800404 	addi	r22,sp,16
   41b24:	003e8f06 	br	41564 <__alt_data_end+0xfffe51a4>
   41b28:	0027883a 	mov	r19,zero
   41b2c:	003f4a06 	br	41858 <__alt_data_end+0xfffe5498>
   41b30:	d9002d17 	ldw	r4,180(sp)
   41b34:	d9801e04 	addi	r6,sp,120
   41b38:	b80b883a 	mov	r5,r23
   41b3c:	00471200 	call	47120 <__sprint_r>
   41b40:	103b3f1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41b44:	d8c02017 	ldw	r3,128(sp)
   41b48:	da000404 	addi	r8,sp,16
   41b4c:	003c7b06 	br	40d3c <__alt_data_end+0xfffe497c>
   41b50:	d9402a17 	ldw	r5,168(sp)
   41b54:	04e7c83a 	sub	r19,zero,r19
   41b58:	07000b44 	movi	fp,45
   41b5c:	9804c03a 	cmpne	r2,r19,zero
   41b60:	05adc83a 	sub	r22,zero,r22
   41b64:	df002785 	stb	fp,158(sp)
   41b68:	b0adc83a 	sub	r22,r22,r2
   41b6c:	28017b16 	blt	r5,zero,4215c <___vfprintf_internal_r+0x1d2c>
   41b70:	00bfdfc4 	movi	r2,-129
   41b74:	90a4703a 	and	r18,r18,r2
   41b78:	003b8906 	br	409a0 <__alt_data_end+0xfffe45e0>
   41b7c:	d9003617 	ldw	r4,216(sp)
   41b80:	d9403817 	ldw	r5,224(sp)
   41b84:	da003d15 	stw	r8,244(sp)
   41b88:	0046cac0 	call	46cac <__fpclassifyd>
   41b8c:	da003d17 	ldw	r8,244(sp)
   41b90:	1000f026 	beq	r2,zero,41f54 <___vfprintf_internal_r+0x1b24>
   41b94:	d9002a17 	ldw	r4,168(sp)
   41b98:	05bff7c4 	movi	r22,-33
   41b9c:	00bfffc4 	movi	r2,-1
   41ba0:	8dac703a 	and	r22,r17,r22
   41ba4:	20820026 	beq	r4,r2,423a8 <___vfprintf_internal_r+0x1f78>
   41ba8:	008011c4 	movi	r2,71
   41bac:	b081f726 	beq	r22,r2,4238c <___vfprintf_internal_r+0x1f5c>
   41bb0:	d9003817 	ldw	r4,224(sp)
   41bb4:	90c04014 	ori	r3,r18,256
   41bb8:	d8c02c15 	stw	r3,176(sp)
   41bbc:	20021516 	blt	r4,zero,42414 <___vfprintf_internal_r+0x1fe4>
   41bc0:	dcc03817 	ldw	r19,224(sp)
   41bc4:	d8002905 	stb	zero,164(sp)
   41bc8:	00801984 	movi	r2,102
   41bcc:	8881f926 	beq	r17,r2,423b4 <___vfprintf_internal_r+0x1f84>
   41bd0:	00801184 	movi	r2,70
   41bd4:	88821c26 	beq	r17,r2,42448 <___vfprintf_internal_r+0x2018>
   41bd8:	00801144 	movi	r2,69
   41bdc:	b081ef26 	beq	r22,r2,4239c <___vfprintf_internal_r+0x1f6c>
   41be0:	d8c02a17 	ldw	r3,168(sp)
   41be4:	d8802104 	addi	r2,sp,132
   41be8:	d8800315 	stw	r2,12(sp)
   41bec:	d9403617 	ldw	r5,216(sp)
   41bf0:	d8802504 	addi	r2,sp,148
   41bf4:	d9002d17 	ldw	r4,180(sp)
   41bf8:	d8800215 	stw	r2,8(sp)
   41bfc:	d8802604 	addi	r2,sp,152
   41c00:	d8c00015 	stw	r3,0(sp)
   41c04:	d8800115 	stw	r2,4(sp)
   41c08:	01c00084 	movi	r7,2
   41c0c:	980d883a 	mov	r6,r19
   41c10:	d8c03c15 	stw	r3,240(sp)
   41c14:	da003d15 	stw	r8,244(sp)
   41c18:	0042b600 	call	42b60 <_dtoa_r>
   41c1c:	1021883a 	mov	r16,r2
   41c20:	008019c4 	movi	r2,103
   41c24:	d8c03c17 	ldw	r3,240(sp)
   41c28:	da003d17 	ldw	r8,244(sp)
   41c2c:	88817126 	beq	r17,r2,421f4 <___vfprintf_internal_r+0x1dc4>
   41c30:	008011c4 	movi	r2,71
   41c34:	88829126 	beq	r17,r2,4267c <___vfprintf_internal_r+0x224c>
   41c38:	80f9883a 	add	fp,r16,r3
   41c3c:	d9003617 	ldw	r4,216(sp)
   41c40:	000d883a 	mov	r6,zero
   41c44:	000f883a 	mov	r7,zero
   41c48:	980b883a 	mov	r5,r19
   41c4c:	da003d15 	stw	r8,244(sp)
   41c50:	004bc080 	call	4bc08 <__eqdf2>
   41c54:	da003d17 	ldw	r8,244(sp)
   41c58:	10018d26 	beq	r2,zero,42290 <___vfprintf_internal_r+0x1e60>
   41c5c:	d8802117 	ldw	r2,132(sp)
   41c60:	1700062e 	bgeu	r2,fp,41c7c <___vfprintf_internal_r+0x184c>
   41c64:	01000c04 	movi	r4,48
   41c68:	10c00044 	addi	r3,r2,1
   41c6c:	d8c02115 	stw	r3,132(sp)
   41c70:	11000005 	stb	r4,0(r2)
   41c74:	d8802117 	ldw	r2,132(sp)
   41c78:	173ffb36 	bltu	r2,fp,41c68 <__alt_data_end+0xfffe58a8>
   41c7c:	1405c83a 	sub	r2,r2,r16
   41c80:	d8803315 	stw	r2,204(sp)
   41c84:	008011c4 	movi	r2,71
   41c88:	b0817626 	beq	r22,r2,42264 <___vfprintf_internal_r+0x1e34>
   41c8c:	00801944 	movi	r2,101
   41c90:	1442800e 	bge	r2,r17,42694 <___vfprintf_internal_r+0x2264>
   41c94:	d8c02617 	ldw	r3,152(sp)
   41c98:	00801984 	movi	r2,102
   41c9c:	d8c03215 	stw	r3,200(sp)
   41ca0:	8881fe26 	beq	r17,r2,4249c <___vfprintf_internal_r+0x206c>
   41ca4:	d8c03217 	ldw	r3,200(sp)
   41ca8:	d9003317 	ldw	r4,204(sp)
   41cac:	1901dd16 	blt	r3,r4,42424 <___vfprintf_internal_r+0x1ff4>
   41cb0:	9480004c 	andi	r18,r18,1
   41cb4:	90022b1e 	bne	r18,zero,42564 <___vfprintf_internal_r+0x2134>
   41cb8:	1805883a 	mov	r2,r3
   41cbc:	18028316 	blt	r3,zero,426cc <___vfprintf_internal_r+0x229c>
   41cc0:	d8c03217 	ldw	r3,200(sp)
   41cc4:	044019c4 	movi	r17,103
   41cc8:	d8c02b15 	stw	r3,172(sp)
   41ccc:	df002907 	ldb	fp,164(sp)
   41cd0:	e001531e 	bne	fp,zero,42220 <___vfprintf_internal_r+0x1df0>
   41cd4:	df002783 	ldbu	fp,158(sp)
   41cd8:	d8802915 	stw	r2,164(sp)
   41cdc:	dc802c17 	ldw	r18,176(sp)
   41ce0:	d8002a15 	stw	zero,168(sp)
   41ce4:	003baf06 	br	40ba4 <__alt_data_end+0xfffe47e4>
   41ce8:	d8c02e17 	ldw	r3,184(sp)
   41cec:	d9002e17 	ldw	r4,184(sp)
   41cf0:	d9402e17 	ldw	r5,184(sp)
   41cf4:	18c00017 	ldw	r3,0(r3)
   41cf8:	21000117 	ldw	r4,4(r4)
   41cfc:	29400204 	addi	r5,r5,8
   41d00:	d8c03615 	stw	r3,216(sp)
   41d04:	d9003815 	stw	r4,224(sp)
   41d08:	d9402e15 	stw	r5,184(sp)
   41d0c:	003b5006 	br	40a50 <__alt_data_end+0xfffe4690>
   41d10:	ac400007 	ldb	r17,0(r21)
   41d14:	003a2806 	br	405b8 <__alt_data_end+0xfffe41f8>
   41d18:	9080100c 	andi	r2,r18,64
   41d1c:	1000a826 	beq	r2,zero,41fc0 <___vfprintf_internal_r+0x1b90>
   41d20:	d8c02e17 	ldw	r3,184(sp)
   41d24:	002d883a 	mov	r22,zero
   41d28:	1cc0000b 	ldhu	r19,0(r3)
   41d2c:	18c00104 	addi	r3,r3,4
   41d30:	d8c02e15 	stw	r3,184(sp)
   41d34:	003caf06 	br	40ff4 <__alt_data_end+0xfffe4c34>
   41d38:	d9002e17 	ldw	r4,184(sp)
   41d3c:	d9402a17 	ldw	r5,168(sp)
   41d40:	002d883a 	mov	r22,zero
   41d44:	20800104 	addi	r2,r4,4
   41d48:	24c00017 	ldw	r19,0(r4)
   41d4c:	283ebb0e 	bge	r5,zero,4183c <__alt_data_end+0xfffe547c>
   41d50:	003ef106 	br	41918 <__alt_data_end+0xfffe5558>
   41d54:	9080040c 	andi	r2,r18,16
   41d58:	1000921e 	bne	r2,zero,41fa4 <___vfprintf_internal_r+0x1b74>
   41d5c:	9480100c 	andi	r18,r18,64
   41d60:	90013926 	beq	r18,zero,42248 <___vfprintf_internal_r+0x1e18>
   41d64:	d9402e17 	ldw	r5,184(sp)
   41d68:	d8c02f17 	ldw	r3,188(sp)
   41d6c:	28800017 	ldw	r2,0(r5)
   41d70:	29400104 	addi	r5,r5,4
   41d74:	d9402e15 	stw	r5,184(sp)
   41d78:	10c0000d 	sth	r3,0(r2)
   41d7c:	0039e406 	br	40510 <__alt_data_end+0xfffe4150>
   41d80:	9080100c 	andi	r2,r18,64
   41d84:	10008026 	beq	r2,zero,41f88 <___vfprintf_internal_r+0x1b58>
   41d88:	d8802e17 	ldw	r2,184(sp)
   41d8c:	14c0000f 	ldh	r19,0(r2)
   41d90:	10800104 	addi	r2,r2,4
   41d94:	d8802e15 	stw	r2,184(sp)
   41d98:	982dd7fa 	srai	r22,r19,31
   41d9c:	b005883a 	mov	r2,r22
   41da0:	003af706 	br	40980 <__alt_data_end+0xfffe45c0>
   41da4:	9080100c 	andi	r2,r18,64
   41da8:	d8002785 	stb	zero,158(sp)
   41dac:	10008a1e 	bne	r2,zero,41fd8 <___vfprintf_internal_r+0x1ba8>
   41db0:	d9002e17 	ldw	r4,184(sp)
   41db4:	d9402a17 	ldw	r5,168(sp)
   41db8:	002d883a 	mov	r22,zero
   41dbc:	20800104 	addi	r2,r4,4
   41dc0:	24c00017 	ldw	r19,0(r4)
   41dc4:	283e4b0e 	bge	r5,zero,416f4 <__alt_data_end+0xfffe5334>
   41dc8:	9d86b03a 	or	r3,r19,r22
   41dcc:	d8802e15 	stw	r2,184(sp)
   41dd0:	183e4c1e 	bne	r3,zero,41704 <__alt_data_end+0xfffe5344>
   41dd4:	0039883a 	mov	fp,zero
   41dd8:	0005883a 	mov	r2,zero
   41ddc:	003d4006 	br	412e0 <__alt_data_end+0xfffe4f20>
   41de0:	01400174 	movhi	r5,5
   41de4:	297e4384 	addi	r5,r5,-1778
   41de8:	d9402c15 	stw	r5,176(sp)
   41dec:	d9402c17 	ldw	r5,176(sp)
   41df0:	1c47883a 	add	r3,r3,r17
   41df4:	10800044 	addi	r2,r2,1
   41df8:	41400015 	stw	r5,0(r8)
   41dfc:	44400115 	stw	r17,4(r8)
   41e00:	d8c02015 	stw	r3,128(sp)
   41e04:	d8801f15 	stw	r2,124(sp)
   41e08:	010001c4 	movi	r4,7
   41e0c:	20bec816 	blt	r4,r2,41930 <__alt_data_end+0xfffe5570>
   41e10:	42000204 	addi	r8,r8,8
   41e14:	003ecd06 	br	4194c <__alt_data_end+0xfffe558c>
   41e18:	d9002a17 	ldw	r4,168(sp)
   41e1c:	d8002785 	stb	zero,158(sp)
   41e20:	203d2d16 	blt	r4,zero,412d8 <__alt_data_end+0xfffe4f18>
   41e24:	00bfdfc4 	movi	r2,-129
   41e28:	90a4703a 	and	r18,r18,r2
   41e2c:	003a6106 	br	407b4 <__alt_data_end+0xfffe43f4>
   41e30:	01000174 	movhi	r4,5
   41e34:	213e4384 	addi	r4,r4,-1778
   41e38:	d9002c15 	stw	r4,176(sp)
   41e3c:	003bea06 	br	40de8 <__alt_data_end+0xfffe4a28>
   41e40:	d9002d17 	ldw	r4,180(sp)
   41e44:	d9801e04 	addi	r6,sp,120
   41e48:	b80b883a 	mov	r5,r23
   41e4c:	00471200 	call	47120 <__sprint_r>
   41e50:	103a7b1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41e54:	d8c02017 	ldw	r3,128(sp)
   41e58:	da000404 	addi	r8,sp,16
   41e5c:	003d4106 	br	41364 <__alt_data_end+0xfffe4fa4>
   41e60:	d8801f17 	ldw	r2,124(sp)
   41e64:	01400174 	movhi	r5,5
   41e68:	01000044 	movi	r4,1
   41e6c:	18c00044 	addi	r3,r3,1
   41e70:	10800044 	addi	r2,r2,1
   41e74:	297e4304 	addi	r5,r5,-1780
   41e78:	41000115 	stw	r4,4(r8)
   41e7c:	41400015 	stw	r5,0(r8)
   41e80:	d8c02015 	stw	r3,128(sp)
   41e84:	d8801f15 	stw	r2,124(sp)
   41e88:	010001c4 	movi	r4,7
   41e8c:	20805c16 	blt	r4,r2,42000 <___vfprintf_internal_r+0x1bd0>
   41e90:	42000204 	addi	r8,r8,8
   41e94:	8800041e 	bne	r17,zero,41ea8 <___vfprintf_internal_r+0x1a78>
   41e98:	d8803317 	ldw	r2,204(sp)
   41e9c:	1000021e 	bne	r2,zero,41ea8 <___vfprintf_internal_r+0x1a78>
   41ea0:	9080004c 	andi	r2,r18,1
   41ea4:	103be726 	beq	r2,zero,40e44 <__alt_data_end+0xfffe4a84>
   41ea8:	d9003717 	ldw	r4,220(sp)
   41eac:	d8801f17 	ldw	r2,124(sp)
   41eb0:	d9403417 	ldw	r5,208(sp)
   41eb4:	20c7883a 	add	r3,r4,r3
   41eb8:	10800044 	addi	r2,r2,1
   41ebc:	41000115 	stw	r4,4(r8)
   41ec0:	41400015 	stw	r5,0(r8)
   41ec4:	d8c02015 	stw	r3,128(sp)
   41ec8:	d8801f15 	stw	r2,124(sp)
   41ecc:	010001c4 	movi	r4,7
   41ed0:	20812116 	blt	r4,r2,42358 <___vfprintf_internal_r+0x1f28>
   41ed4:	42000204 	addi	r8,r8,8
   41ed8:	0463c83a 	sub	r17,zero,r17
   41edc:	0440730e 	bge	zero,r17,420ac <___vfprintf_internal_r+0x1c7c>
   41ee0:	05800404 	movi	r22,16
   41ee4:	b440860e 	bge	r22,r17,42100 <___vfprintf_internal_r+0x1cd0>
   41ee8:	01400174 	movhi	r5,5
   41eec:	297e4384 	addi	r5,r5,-1778
   41ef0:	d9402c15 	stw	r5,176(sp)
   41ef4:	070001c4 	movi	fp,7
   41ef8:	dcc02d17 	ldw	r19,180(sp)
   41efc:	00000306 	br	41f0c <___vfprintf_internal_r+0x1adc>
   41f00:	42000204 	addi	r8,r8,8
   41f04:	8c7ffc04 	addi	r17,r17,-16
   41f08:	b440800e 	bge	r22,r17,4210c <___vfprintf_internal_r+0x1cdc>
   41f0c:	18c00404 	addi	r3,r3,16
   41f10:	10800044 	addi	r2,r2,1
   41f14:	45000015 	stw	r20,0(r8)
   41f18:	45800115 	stw	r22,4(r8)
   41f1c:	d8c02015 	stw	r3,128(sp)
   41f20:	d8801f15 	stw	r2,124(sp)
   41f24:	e0bff60e 	bge	fp,r2,41f00 <__alt_data_end+0xfffe5b40>
   41f28:	d9801e04 	addi	r6,sp,120
   41f2c:	b80b883a 	mov	r5,r23
   41f30:	9809883a 	mov	r4,r19
   41f34:	00471200 	call	47120 <__sprint_r>
   41f38:	103a411e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   41f3c:	d8c02017 	ldw	r3,128(sp)
   41f40:	d8801f17 	ldw	r2,124(sp)
   41f44:	da000404 	addi	r8,sp,16
   41f48:	003fee06 	br	41f04 <__alt_data_end+0xfffe5b44>
   41f4c:	00bfffc4 	movi	r2,-1
   41f50:	003a3f06 	br	40850 <__alt_data_end+0xfffe4490>
   41f54:	008011c4 	movi	r2,71
   41f58:	1440b816 	blt	r2,r17,4223c <___vfprintf_internal_r+0x1e0c>
   41f5c:	04000174 	movhi	r16,5
   41f60:	843e3504 	addi	r16,r16,-1836
   41f64:	00c000c4 	movi	r3,3
   41f68:	00bfdfc4 	movi	r2,-129
   41f6c:	d8c02915 	stw	r3,164(sp)
   41f70:	90a4703a 	and	r18,r18,r2
   41f74:	df002783 	ldbu	fp,158(sp)
   41f78:	d8c02b15 	stw	r3,172(sp)
   41f7c:	d8002a15 	stw	zero,168(sp)
   41f80:	d8003215 	stw	zero,200(sp)
   41f84:	003b0706 	br	40ba4 <__alt_data_end+0xfffe47e4>
   41f88:	d8c02e17 	ldw	r3,184(sp)
   41f8c:	1cc00017 	ldw	r19,0(r3)
   41f90:	18c00104 	addi	r3,r3,4
   41f94:	d8c02e15 	stw	r3,184(sp)
   41f98:	982dd7fa 	srai	r22,r19,31
   41f9c:	b005883a 	mov	r2,r22
   41fa0:	003a7706 	br	40980 <__alt_data_end+0xfffe45c0>
   41fa4:	d8c02e17 	ldw	r3,184(sp)
   41fa8:	d9002f17 	ldw	r4,188(sp)
   41fac:	18800017 	ldw	r2,0(r3)
   41fb0:	18c00104 	addi	r3,r3,4
   41fb4:	d8c02e15 	stw	r3,184(sp)
   41fb8:	11000015 	stw	r4,0(r2)
   41fbc:	00395406 	br	40510 <__alt_data_end+0xfffe4150>
   41fc0:	d9002e17 	ldw	r4,184(sp)
   41fc4:	002d883a 	mov	r22,zero
   41fc8:	24c00017 	ldw	r19,0(r4)
   41fcc:	21000104 	addi	r4,r4,4
   41fd0:	d9002e15 	stw	r4,184(sp)
   41fd4:	003c0706 	br	40ff4 <__alt_data_end+0xfffe4c34>
   41fd8:	d9402e17 	ldw	r5,184(sp)
   41fdc:	d8c02a17 	ldw	r3,168(sp)
   41fe0:	002d883a 	mov	r22,zero
   41fe4:	28800104 	addi	r2,r5,4
   41fe8:	2cc0000b 	ldhu	r19,0(r5)
   41fec:	183dc10e 	bge	r3,zero,416f4 <__alt_data_end+0xfffe5334>
   41ff0:	003f7506 	br	41dc8 <__alt_data_end+0xfffe5a08>
   41ff4:	04000174 	movhi	r16,5
   41ff8:	843e3304 	addi	r16,r16,-1844
   41ffc:	003aa706 	br	40a9c <__alt_data_end+0xfffe46dc>
   42000:	d9002d17 	ldw	r4,180(sp)
   42004:	d9801e04 	addi	r6,sp,120
   42008:	b80b883a 	mov	r5,r23
   4200c:	00471200 	call	47120 <__sprint_r>
   42010:	103a0b1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   42014:	dc402617 	ldw	r17,152(sp)
   42018:	d8c02017 	ldw	r3,128(sp)
   4201c:	da000404 	addi	r8,sp,16
   42020:	003f9c06 	br	41e94 <__alt_data_end+0xfffe5ad4>
   42024:	ac400043 	ldbu	r17,1(r21)
   42028:	84000814 	ori	r16,r16,32
   4202c:	ad400044 	addi	r21,r21,1
   42030:	8c403fcc 	andi	r17,r17,255
   42034:	8c40201c 	xori	r17,r17,128
   42038:	8c7fe004 	addi	r17,r17,-128
   4203c:	00395e06 	br	405b8 <__alt_data_end+0xfffe41f8>
   42040:	d8c02e15 	stw	r3,184(sp)
   42044:	0039883a 	mov	fp,zero
   42048:	003e3506 	br	41920 <__alt_data_end+0xfffe5560>
   4204c:	d9002d17 	ldw	r4,180(sp)
   42050:	d9801e04 	addi	r6,sp,120
   42054:	b80b883a 	mov	r5,r23
   42058:	00471200 	call	47120 <__sprint_r>
   4205c:	1039f81e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   42060:	d8c02017 	ldw	r3,128(sp)
   42064:	da000404 	addi	r8,sp,16
   42068:	003cd006 	br	413ac <__alt_data_end+0xfffe4fec>
   4206c:	8009883a 	mov	r4,r16
   42070:	df003d15 	stw	fp,244(sp)
   42074:	0046f8c0 	call	46f8c <strlen>
   42078:	d8802b15 	stw	r2,172(sp)
   4207c:	da003d17 	ldw	r8,244(sp)
   42080:	103c200e 	bge	r2,zero,41104 <__alt_data_end+0xfffe4d44>
   42084:	0005883a 	mov	r2,zero
   42088:	003c1e06 	br	41104 <__alt_data_end+0xfffe4d44>
   4208c:	d9002d17 	ldw	r4,180(sp)
   42090:	d9801e04 	addi	r6,sp,120
   42094:	b80b883a 	mov	r5,r23
   42098:	00471200 	call	47120 <__sprint_r>
   4209c:	1039e81e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   420a0:	d8c02017 	ldw	r3,128(sp)
   420a4:	d8801f17 	ldw	r2,124(sp)
   420a8:	da000404 	addi	r8,sp,16
   420ac:	d9403317 	ldw	r5,204(sp)
   420b0:	10800044 	addi	r2,r2,1
   420b4:	44000015 	stw	r16,0(r8)
   420b8:	28c7883a 	add	r3,r5,r3
   420bc:	003b5b06 	br	40e2c <__alt_data_end+0xfffe4a6c>
   420c0:	01000174 	movhi	r4,5
   420c4:	213e4784 	addi	r4,r4,-1762
   420c8:	d9003515 	stw	r4,212(sp)
   420cc:	003af206 	br	40c98 <__alt_data_end+0xfffe48d8>
   420d0:	013fffc4 	movi	r4,-1
   420d4:	003a0806 	br	408f8 <__alt_data_end+0xfffe4538>
   420d8:	0023883a 	mov	r17,zero
   420dc:	003d9d06 	br	41754 <__alt_data_end+0xfffe5394>
   420e0:	d9002d17 	ldw	r4,180(sp)
   420e4:	d9801e04 	addi	r6,sp,120
   420e8:	b80b883a 	mov	r5,r23
   420ec:	00471200 	call	47120 <__sprint_r>
   420f0:	1039d31e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   420f4:	d8c02017 	ldw	r3,128(sp)
   420f8:	da000404 	addi	r8,sp,16
   420fc:	003d9406 	br	41750 <__alt_data_end+0xfffe5390>
   42100:	01000174 	movhi	r4,5
   42104:	213e4384 	addi	r4,r4,-1778
   42108:	d9002c15 	stw	r4,176(sp)
   4210c:	d9002c17 	ldw	r4,176(sp)
   42110:	1c47883a 	add	r3,r3,r17
   42114:	10800044 	addi	r2,r2,1
   42118:	41000015 	stw	r4,0(r8)
   4211c:	44400115 	stw	r17,4(r8)
   42120:	d8c02015 	stw	r3,128(sp)
   42124:	d8801f15 	stw	r2,124(sp)
   42128:	010001c4 	movi	r4,7
   4212c:	20bfd716 	blt	r4,r2,4208c <__alt_data_end+0xfffe5ccc>
   42130:	42000204 	addi	r8,r8,8
   42134:	003fdd06 	br	420ac <__alt_data_end+0xfffe5cec>
   42138:	d9002d17 	ldw	r4,180(sp)
   4213c:	d9801e04 	addi	r6,sp,120
   42140:	b80b883a 	mov	r5,r23
   42144:	00471200 	call	47120 <__sprint_r>
   42148:	1039bd1e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   4214c:	d8802617 	ldw	r2,152(sp)
   42150:	d8c02017 	ldw	r3,128(sp)
   42154:	da000404 	addi	r8,sp,16
   42158:	003e1006 	br	4199c <__alt_data_end+0xfffe55dc>
   4215c:	00800044 	movi	r2,1
   42160:	10803fcc 	andi	r2,r2,255
   42164:	00c00044 	movi	r3,1
   42168:	10fa0d26 	beq	r2,r3,409a0 <__alt_data_end+0xfffe45e0>
   4216c:	00c00084 	movi	r3,2
   42170:	10fbaf26 	beq	r2,r3,41030 <__alt_data_end+0xfffe4c70>
   42174:	003a6d06 	br	40b2c <__alt_data_end+0xfffe476c>
   42178:	01000174 	movhi	r4,5
   4217c:	213e4784 	addi	r4,r4,-1762
   42180:	d9003515 	stw	r4,212(sp)
   42184:	003b5406 	br	40ed8 <__alt_data_end+0xfffe4b18>
   42188:	d8802a17 	ldw	r2,168(sp)
   4218c:	00c00184 	movi	r3,6
   42190:	1880012e 	bgeu	r3,r2,42198 <___vfprintf_internal_r+0x1d68>
   42194:	1805883a 	mov	r2,r3
   42198:	d8802b15 	stw	r2,172(sp)
   4219c:	1000ef16 	blt	r2,zero,4255c <___vfprintf_internal_r+0x212c>
   421a0:	04000174 	movhi	r16,5
   421a4:	d8802915 	stw	r2,164(sp)
   421a8:	dcc02e15 	stw	r19,184(sp)
   421ac:	d8002a15 	stw	zero,168(sp)
   421b0:	d8003215 	stw	zero,200(sp)
   421b4:	843e4104 	addi	r16,r16,-1788
   421b8:	0039883a 	mov	fp,zero
   421bc:	003a8006 	br	40bc0 <__alt_data_end+0xfffe4800>
   421c0:	0021883a 	mov	r16,zero
   421c4:	003e0706 	br	419e4 <__alt_data_end+0xfffe5624>
   421c8:	d9002d17 	ldw	r4,180(sp)
   421cc:	d9801e04 	addi	r6,sp,120
   421d0:	b80b883a 	mov	r5,r23
   421d4:	00471200 	call	47120 <__sprint_r>
   421d8:	1039991e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   421dc:	d8802617 	ldw	r2,152(sp)
   421e0:	d9403317 	ldw	r5,204(sp)
   421e4:	d8c02017 	ldw	r3,128(sp)
   421e8:	da000404 	addi	r8,sp,16
   421ec:	2885c83a 	sub	r2,r5,r2
   421f0:	003dfb06 	br	419e0 <__alt_data_end+0xfffe5620>
   421f4:	9080004c 	andi	r2,r18,1
   421f8:	103e8f1e 	bne	r2,zero,41c38 <__alt_data_end+0xfffe5878>
   421fc:	d8802117 	ldw	r2,132(sp)
   42200:	003e9e06 	br	41c7c <__alt_data_end+0xfffe58bc>
   42204:	1025883a 	mov	r18,r2
   42208:	0039883a 	mov	fp,zero
   4220c:	00800084 	movi	r2,2
   42210:	003fd306 	br	42160 <__alt_data_end+0xfffe5da0>
   42214:	07000b44 	movi	fp,45
   42218:	df002785 	stb	fp,158(sp)
   4221c:	003a1b06 	br	40a8c <__alt_data_end+0xfffe46cc>
   42220:	00c00b44 	movi	r3,45
   42224:	d8c02785 	stb	r3,158(sp)
   42228:	d8802915 	stw	r2,164(sp)
   4222c:	dc802c17 	ldw	r18,176(sp)
   42230:	d8002a15 	stw	zero,168(sp)
   42234:	07000b44 	movi	fp,45
   42238:	003a5e06 	br	40bb4 <__alt_data_end+0xfffe47f4>
   4223c:	04000174 	movhi	r16,5
   42240:	843e3604 	addi	r16,r16,-1832
   42244:	003f4706 	br	41f64 <__alt_data_end+0xfffe5ba4>
   42248:	d9002e17 	ldw	r4,184(sp)
   4224c:	d9402f17 	ldw	r5,188(sp)
   42250:	20800017 	ldw	r2,0(r4)
   42254:	21000104 	addi	r4,r4,4
   42258:	d9002e15 	stw	r4,184(sp)
   4225c:	11400015 	stw	r5,0(r2)
   42260:	0038ab06 	br	40510 <__alt_data_end+0xfffe4150>
   42264:	dd802617 	ldw	r22,152(sp)
   42268:	00bfff44 	movi	r2,-3
   4226c:	b0801c16 	blt	r22,r2,422e0 <___vfprintf_internal_r+0x1eb0>
   42270:	d9402a17 	ldw	r5,168(sp)
   42274:	2d801a16 	blt	r5,r22,422e0 <___vfprintf_internal_r+0x1eb0>
   42278:	dd803215 	stw	r22,200(sp)
   4227c:	003e8906 	br	41ca4 <__alt_data_end+0xfffe58e4>
   42280:	01000174 	movhi	r4,5
   42284:	213e4384 	addi	r4,r4,-1778
   42288:	d9002c15 	stw	r4,176(sp)
   4228c:	003c9106 	br	414d4 <__alt_data_end+0xfffe5114>
   42290:	e005883a 	mov	r2,fp
   42294:	003e7906 	br	41c7c <__alt_data_end+0xfffe58bc>
   42298:	d9002a17 	ldw	r4,168(sp)
   4229c:	df002783 	ldbu	fp,158(sp)
   422a0:	dcc02e15 	stw	r19,184(sp)
   422a4:	d9002915 	stw	r4,164(sp)
   422a8:	d9002b15 	stw	r4,172(sp)
   422ac:	d8002a15 	stw	zero,168(sp)
   422b0:	d8003215 	stw	zero,200(sp)
   422b4:	003a3b06 	br	40ba4 <__alt_data_end+0xfffe47e4>
   422b8:	9080004c 	andi	r2,r18,1
   422bc:	0039883a 	mov	fp,zero
   422c0:	10000426 	beq	r2,zero,422d4 <___vfprintf_internal_r+0x1ea4>
   422c4:	00800c04 	movi	r2,48
   422c8:	dc001dc4 	addi	r16,sp,119
   422cc:	d8801dc5 	stb	r2,119(sp)
   422d0:	003b6406 	br	41064 <__alt_data_end+0xfffe4ca4>
   422d4:	d8002b15 	stw	zero,172(sp)
   422d8:	dc001e04 	addi	r16,sp,120
   422dc:	003a2b06 	br	40b8c <__alt_data_end+0xfffe47cc>
   422e0:	8c7fff84 	addi	r17,r17,-2
   422e4:	b5bfffc4 	addi	r22,r22,-1
   422e8:	dd802615 	stw	r22,152(sp)
   422ec:	dc4022c5 	stb	r17,139(sp)
   422f0:	b000bf16 	blt	r22,zero,425f0 <___vfprintf_internal_r+0x21c0>
   422f4:	00800ac4 	movi	r2,43
   422f8:	d8802305 	stb	r2,140(sp)
   422fc:	00800244 	movi	r2,9
   42300:	15807016 	blt	r2,r22,424c4 <___vfprintf_internal_r+0x2094>
   42304:	00800c04 	movi	r2,48
   42308:	b5800c04 	addi	r22,r22,48
   4230c:	d8802345 	stb	r2,141(sp)
   42310:	dd802385 	stb	r22,142(sp)
   42314:	d88023c4 	addi	r2,sp,143
   42318:	df0022c4 	addi	fp,sp,139
   4231c:	d8c03317 	ldw	r3,204(sp)
   42320:	1739c83a 	sub	fp,r2,fp
   42324:	d9003317 	ldw	r4,204(sp)
   42328:	e0c7883a 	add	r3,fp,r3
   4232c:	df003a15 	stw	fp,232(sp)
   42330:	d8c02b15 	stw	r3,172(sp)
   42334:	00800044 	movi	r2,1
   42338:	1100b30e 	bge	r2,r4,42608 <___vfprintf_internal_r+0x21d8>
   4233c:	d8c02b17 	ldw	r3,172(sp)
   42340:	18c00044 	addi	r3,r3,1
   42344:	d8c02b15 	stw	r3,172(sp)
   42348:	1805883a 	mov	r2,r3
   4234c:	1800ac16 	blt	r3,zero,42600 <___vfprintf_internal_r+0x21d0>
   42350:	d8003215 	stw	zero,200(sp)
   42354:	003e5d06 	br	41ccc <__alt_data_end+0xfffe590c>
   42358:	d9002d17 	ldw	r4,180(sp)
   4235c:	d9801e04 	addi	r6,sp,120
   42360:	b80b883a 	mov	r5,r23
   42364:	00471200 	call	47120 <__sprint_r>
   42368:	1039351e 	bne	r2,zero,40840 <__alt_data_end+0xfffe4480>
   4236c:	dc402617 	ldw	r17,152(sp)
   42370:	d8c02017 	ldw	r3,128(sp)
   42374:	d8801f17 	ldw	r2,124(sp)
   42378:	da000404 	addi	r8,sp,16
   4237c:	003ed606 	br	41ed8 <__alt_data_end+0xfffe5b18>
   42380:	182b883a 	mov	r21,r3
   42384:	d8002a15 	stw	zero,168(sp)
   42388:	00388c06 	br	405bc <__alt_data_end+0xfffe41fc>
   4238c:	d8802a17 	ldw	r2,168(sp)
   42390:	103e071e 	bne	r2,zero,41bb0 <__alt_data_end+0xfffe57f0>
   42394:	dc002a15 	stw	r16,168(sp)
   42398:	003e0506 	br	41bb0 <__alt_data_end+0xfffe57f0>
   4239c:	d9002a17 	ldw	r4,168(sp)
   423a0:	20c00044 	addi	r3,r4,1
   423a4:	003e0f06 	br	41be4 <__alt_data_end+0xfffe5824>
   423a8:	01400184 	movi	r5,6
   423ac:	d9402a15 	stw	r5,168(sp)
   423b0:	003dff06 	br	41bb0 <__alt_data_end+0xfffe57f0>
   423b4:	d8802104 	addi	r2,sp,132
   423b8:	d8800315 	stw	r2,12(sp)
   423bc:	d8802504 	addi	r2,sp,148
   423c0:	d8800215 	stw	r2,8(sp)
   423c4:	d8802604 	addi	r2,sp,152
   423c8:	d8800115 	stw	r2,4(sp)
   423cc:	d8802a17 	ldw	r2,168(sp)
   423d0:	d9403617 	ldw	r5,216(sp)
   423d4:	d9002d17 	ldw	r4,180(sp)
   423d8:	d8800015 	stw	r2,0(sp)
   423dc:	01c000c4 	movi	r7,3
   423e0:	980d883a 	mov	r6,r19
   423e4:	da003d15 	stw	r8,244(sp)
   423e8:	0042b600 	call	42b60 <_dtoa_r>
   423ec:	d8c02a17 	ldw	r3,168(sp)
   423f0:	da003d17 	ldw	r8,244(sp)
   423f4:	1021883a 	mov	r16,r2
   423f8:	10f9883a 	add	fp,r2,r3
   423fc:	81000007 	ldb	r4,0(r16)
   42400:	00800c04 	movi	r2,48
   42404:	20805e26 	beq	r4,r2,42580 <___vfprintf_internal_r+0x2150>
   42408:	d8c02617 	ldw	r3,152(sp)
   4240c:	e0f9883a 	add	fp,fp,r3
   42410:	003e0a06 	br	41c3c <__alt_data_end+0xfffe587c>
   42414:	00c00b44 	movi	r3,45
   42418:	24e0003c 	xorhi	r19,r4,32768
   4241c:	d8c02905 	stb	r3,164(sp)
   42420:	003de906 	br	41bc8 <__alt_data_end+0xfffe5808>
   42424:	d8c03217 	ldw	r3,200(sp)
   42428:	00c07a0e 	bge	zero,r3,42614 <___vfprintf_internal_r+0x21e4>
   4242c:	00800044 	movi	r2,1
   42430:	d9003317 	ldw	r4,204(sp)
   42434:	1105883a 	add	r2,r2,r4
   42438:	d8802b15 	stw	r2,172(sp)
   4243c:	10004e16 	blt	r2,zero,42578 <___vfprintf_internal_r+0x2148>
   42440:	044019c4 	movi	r17,103
   42444:	003e2106 	br	41ccc <__alt_data_end+0xfffe590c>
   42448:	d9002a17 	ldw	r4,168(sp)
   4244c:	d8802104 	addi	r2,sp,132
   42450:	d8800315 	stw	r2,12(sp)
   42454:	d9000015 	stw	r4,0(sp)
   42458:	d8802504 	addi	r2,sp,148
   4245c:	d9403617 	ldw	r5,216(sp)
   42460:	d9002d17 	ldw	r4,180(sp)
   42464:	d8800215 	stw	r2,8(sp)
   42468:	d8802604 	addi	r2,sp,152
   4246c:	d8800115 	stw	r2,4(sp)
   42470:	01c000c4 	movi	r7,3
   42474:	980d883a 	mov	r6,r19
   42478:	da003d15 	stw	r8,244(sp)
   4247c:	0042b600 	call	42b60 <_dtoa_r>
   42480:	d8c02a17 	ldw	r3,168(sp)
   42484:	da003d17 	ldw	r8,244(sp)
   42488:	1021883a 	mov	r16,r2
   4248c:	00801184 	movi	r2,70
   42490:	80f9883a 	add	fp,r16,r3
   42494:	88bfd926 	beq	r17,r2,423fc <__alt_data_end+0xfffe603c>
   42498:	003de806 	br	41c3c <__alt_data_end+0xfffe587c>
   4249c:	d9002a17 	ldw	r4,168(sp)
   424a0:	00c04d0e 	bge	zero,r3,425d8 <___vfprintf_internal_r+0x21a8>
   424a4:	2000441e 	bne	r4,zero,425b8 <___vfprintf_internal_r+0x2188>
   424a8:	9480004c 	andi	r18,r18,1
   424ac:	9000421e 	bne	r18,zero,425b8 <___vfprintf_internal_r+0x2188>
   424b0:	1805883a 	mov	r2,r3
   424b4:	18006f16 	blt	r3,zero,42674 <___vfprintf_internal_r+0x2244>
   424b8:	d8c03217 	ldw	r3,200(sp)
   424bc:	d8c02b15 	stw	r3,172(sp)
   424c0:	003e0206 	br	41ccc <__alt_data_end+0xfffe590c>
   424c4:	df0022c4 	addi	fp,sp,139
   424c8:	dc002a15 	stw	r16,168(sp)
   424cc:	4027883a 	mov	r19,r8
   424d0:	e021883a 	mov	r16,fp
   424d4:	b009883a 	mov	r4,r22
   424d8:	01400284 	movi	r5,10
   424dc:	004a8340 	call	4a834 <__modsi3>
   424e0:	10800c04 	addi	r2,r2,48
   424e4:	843fffc4 	addi	r16,r16,-1
   424e8:	b009883a 	mov	r4,r22
   424ec:	01400284 	movi	r5,10
   424f0:	80800005 	stb	r2,0(r16)
   424f4:	004a7b00 	call	4a7b0 <__divsi3>
   424f8:	102d883a 	mov	r22,r2
   424fc:	00800244 	movi	r2,9
   42500:	15bff416 	blt	r2,r22,424d4 <__alt_data_end+0xfffe6114>
   42504:	9811883a 	mov	r8,r19
   42508:	b0800c04 	addi	r2,r22,48
   4250c:	8027883a 	mov	r19,r16
   42510:	997fffc4 	addi	r5,r19,-1
   42514:	98bfffc5 	stb	r2,-1(r19)
   42518:	dc002a17 	ldw	r16,168(sp)
   4251c:	2f006d2e 	bgeu	r5,fp,426d4 <___vfprintf_internal_r+0x22a4>
   42520:	d9c02384 	addi	r7,sp,142
   42524:	3ccfc83a 	sub	r7,r7,r19
   42528:	d9002344 	addi	r4,sp,141
   4252c:	e1cf883a 	add	r7,fp,r7
   42530:	00000106 	br	42538 <___vfprintf_internal_r+0x2108>
   42534:	28800003 	ldbu	r2,0(r5)
   42538:	20800005 	stb	r2,0(r4)
   4253c:	21000044 	addi	r4,r4,1
   42540:	29400044 	addi	r5,r5,1
   42544:	393ffb1e 	bne	r7,r4,42534 <__alt_data_end+0xfffe6174>
   42548:	d8802304 	addi	r2,sp,140
   4254c:	14c5c83a 	sub	r2,r2,r19
   42550:	d8c02344 	addi	r3,sp,141
   42554:	1885883a 	add	r2,r3,r2
   42558:	003f7006 	br	4231c <__alt_data_end+0xfffe5f5c>
   4255c:	0005883a 	mov	r2,zero
   42560:	003f0f06 	br	421a0 <__alt_data_end+0xfffe5de0>
   42564:	d8c03217 	ldw	r3,200(sp)
   42568:	18c00044 	addi	r3,r3,1
   4256c:	d8c02b15 	stw	r3,172(sp)
   42570:	1805883a 	mov	r2,r3
   42574:	183fb20e 	bge	r3,zero,42440 <__alt_data_end+0xfffe6080>
   42578:	0005883a 	mov	r2,zero
   4257c:	003fb006 	br	42440 <__alt_data_end+0xfffe6080>
   42580:	d9003617 	ldw	r4,216(sp)
   42584:	000d883a 	mov	r6,zero
   42588:	000f883a 	mov	r7,zero
   4258c:	980b883a 	mov	r5,r19
   42590:	d8c03c15 	stw	r3,240(sp)
   42594:	da003d15 	stw	r8,244(sp)
   42598:	004bc080 	call	4bc08 <__eqdf2>
   4259c:	d8c03c17 	ldw	r3,240(sp)
   425a0:	da003d17 	ldw	r8,244(sp)
   425a4:	103f9826 	beq	r2,zero,42408 <__alt_data_end+0xfffe6048>
   425a8:	00800044 	movi	r2,1
   425ac:	10c7c83a 	sub	r3,r2,r3
   425b0:	d8c02615 	stw	r3,152(sp)
   425b4:	003f9506 	br	4240c <__alt_data_end+0xfffe604c>
   425b8:	d9002a17 	ldw	r4,168(sp)
   425bc:	d8c03217 	ldw	r3,200(sp)
   425c0:	20800044 	addi	r2,r4,1
   425c4:	1885883a 	add	r2,r3,r2
   425c8:	d8802b15 	stw	r2,172(sp)
   425cc:	103dbf0e 	bge	r2,zero,41ccc <__alt_data_end+0xfffe590c>
   425d0:	0005883a 	mov	r2,zero
   425d4:	003dbd06 	br	41ccc <__alt_data_end+0xfffe590c>
   425d8:	2000201e 	bne	r4,zero,4265c <___vfprintf_internal_r+0x222c>
   425dc:	9480004c 	andi	r18,r18,1
   425e0:	90001e1e 	bne	r18,zero,4265c <___vfprintf_internal_r+0x222c>
   425e4:	00800044 	movi	r2,1
   425e8:	d8802b15 	stw	r2,172(sp)
   425ec:	003db706 	br	41ccc <__alt_data_end+0xfffe590c>
   425f0:	00800b44 	movi	r2,45
   425f4:	05adc83a 	sub	r22,zero,r22
   425f8:	d8802305 	stb	r2,140(sp)
   425fc:	003f3f06 	br	422fc <__alt_data_end+0xfffe5f3c>
   42600:	0005883a 	mov	r2,zero
   42604:	003f5206 	br	42350 <__alt_data_end+0xfffe5f90>
   42608:	90a4703a 	and	r18,r18,r2
   4260c:	903f4e26 	beq	r18,zero,42348 <__alt_data_end+0xfffe5f88>
   42610:	003f4a06 	br	4233c <__alt_data_end+0xfffe5f7c>
   42614:	00800084 	movi	r2,2
   42618:	10c5c83a 	sub	r2,r2,r3
   4261c:	003f8406 	br	42430 <__alt_data_end+0xfffe6070>
   42620:	d9402e17 	ldw	r5,184(sp)
   42624:	d9002e17 	ldw	r4,184(sp)
   42628:	ac400043 	ldbu	r17,1(r21)
   4262c:	29400017 	ldw	r5,0(r5)
   42630:	20800104 	addi	r2,r4,4
   42634:	d8802e15 	stw	r2,184(sp)
   42638:	d9402a15 	stw	r5,168(sp)
   4263c:	182b883a 	mov	r21,r3
   42640:	283e7b0e 	bge	r5,zero,42030 <__alt_data_end+0xfffe5c70>
   42644:	8c403fcc 	andi	r17,r17,255
   42648:	017fffc4 	movi	r5,-1
   4264c:	8c40201c 	xori	r17,r17,128
   42650:	d9402a15 	stw	r5,168(sp)
   42654:	8c7fe004 	addi	r17,r17,-128
   42658:	0037d706 	br	405b8 <__alt_data_end+0xfffe41f8>
   4265c:	d8c02a17 	ldw	r3,168(sp)
   42660:	18c00084 	addi	r3,r3,2
   42664:	d8c02b15 	stw	r3,172(sp)
   42668:	1805883a 	mov	r2,r3
   4266c:	183d970e 	bge	r3,zero,41ccc <__alt_data_end+0xfffe590c>
   42670:	003fd706 	br	425d0 <__alt_data_end+0xfffe6210>
   42674:	0005883a 	mov	r2,zero
   42678:	003f8f06 	br	424b8 <__alt_data_end+0xfffe60f8>
   4267c:	9080004c 	andi	r2,r18,1
   42680:	103f821e 	bne	r2,zero,4248c <__alt_data_end+0xfffe60cc>
   42684:	d8802117 	ldw	r2,132(sp)
   42688:	1405c83a 	sub	r2,r2,r16
   4268c:	d8803315 	stw	r2,204(sp)
   42690:	b47ef426 	beq	r22,r17,42264 <__alt_data_end+0xfffe5ea4>
   42694:	dd802617 	ldw	r22,152(sp)
   42698:	003f1206 	br	422e4 <__alt_data_end+0xfffe5f24>
   4269c:	d8c02b03 	ldbu	r3,172(sp)
   426a0:	d8c02785 	stb	r3,158(sp)
   426a4:	0038df06 	br	40a24 <__alt_data_end+0xfffe4664>
   426a8:	d8c02b03 	ldbu	r3,172(sp)
   426ac:	d8c02785 	stb	r3,158(sp)
   426b0:	0038aa06 	br	4095c <__alt_data_end+0xfffe459c>
   426b4:	d8c02b03 	ldbu	r3,172(sp)
   426b8:	d8c02785 	stb	r3,158(sp)
   426bc:	003a4306 	br	40fcc <__alt_data_end+0xfffe4c0c>
   426c0:	d8c02b03 	ldbu	r3,172(sp)
   426c4:	d8c02785 	stb	r3,158(sp)
   426c8:	003af506 	br	412a0 <__alt_data_end+0xfffe4ee0>
   426cc:	0005883a 	mov	r2,zero
   426d0:	003d7b06 	br	41cc0 <__alt_data_end+0xfffe5900>
   426d4:	d8802344 	addi	r2,sp,141
   426d8:	003f1006 	br	4231c <__alt_data_end+0xfffe5f5c>
   426dc:	d8c02b03 	ldbu	r3,172(sp)
   426e0:	d8c02785 	stb	r3,158(sp)
   426e4:	0038fd06 	br	40adc <__alt_data_end+0xfffe471c>
   426e8:	d8c02b03 	ldbu	r3,172(sp)
   426ec:	d8c02785 	stb	r3,158(sp)
   426f0:	003a9706 	br	41150 <__alt_data_end+0xfffe4d90>
   426f4:	d8c02b03 	ldbu	r3,172(sp)
   426f8:	d8c02785 	stb	r3,158(sp)
   426fc:	003a1806 	br	40f60 <__alt_data_end+0xfffe4ba0>
   42700:	d8c02b03 	ldbu	r3,172(sp)
   42704:	d8c02785 	stb	r3,158(sp)
   42708:	003abe06 	br	41204 <__alt_data_end+0xfffe4e44>

0004270c <__vfprintf_internal>:
   4270c:	00800174 	movhi	r2,5
   42710:	1085ef04 	addi	r2,r2,6076
   42714:	300f883a 	mov	r7,r6
   42718:	280d883a 	mov	r6,r5
   4271c:	200b883a 	mov	r5,r4
   42720:	11000017 	ldw	r4,0(r2)
   42724:	00404301 	jmpi	40430 <___vfprintf_internal_r>

00042728 <__sbprintf>:
   42728:	2880030b 	ldhu	r2,12(r5)
   4272c:	2ac01917 	ldw	r11,100(r5)
   42730:	2a80038b 	ldhu	r10,14(r5)
   42734:	2a400717 	ldw	r9,28(r5)
   42738:	2a000917 	ldw	r8,36(r5)
   4273c:	defee204 	addi	sp,sp,-1144
   42740:	00c10004 	movi	r3,1024
   42744:	dc011a15 	stw	r16,1128(sp)
   42748:	10bfff4c 	andi	r2,r2,65533
   4274c:	2821883a 	mov	r16,r5
   42750:	d8cb883a 	add	r5,sp,r3
   42754:	dc811c15 	stw	r18,1136(sp)
   42758:	dc411b15 	stw	r17,1132(sp)
   4275c:	dfc11d15 	stw	ra,1140(sp)
   42760:	2025883a 	mov	r18,r4
   42764:	d881030d 	sth	r2,1036(sp)
   42768:	dac11915 	stw	r11,1124(sp)
   4276c:	da81038d 	sth	r10,1038(sp)
   42770:	da410715 	stw	r9,1052(sp)
   42774:	da010915 	stw	r8,1060(sp)
   42778:	dec10015 	stw	sp,1024(sp)
   4277c:	dec10415 	stw	sp,1040(sp)
   42780:	d8c10215 	stw	r3,1032(sp)
   42784:	d8c10515 	stw	r3,1044(sp)
   42788:	d8010615 	stw	zero,1048(sp)
   4278c:	00404300 	call	40430 <___vfprintf_internal_r>
   42790:	1023883a 	mov	r17,r2
   42794:	10000416 	blt	r2,zero,427a8 <__sbprintf+0x80>
   42798:	d9410004 	addi	r5,sp,1024
   4279c:	9009883a 	mov	r4,r18
   427a0:	00444040 	call	44404 <_fflush_r>
   427a4:	10000d1e 	bne	r2,zero,427dc <__sbprintf+0xb4>
   427a8:	d881030b 	ldhu	r2,1036(sp)
   427ac:	1080100c 	andi	r2,r2,64
   427b0:	10000326 	beq	r2,zero,427c0 <__sbprintf+0x98>
   427b4:	8080030b 	ldhu	r2,12(r16)
   427b8:	10801014 	ori	r2,r2,64
   427bc:	8080030d 	sth	r2,12(r16)
   427c0:	8805883a 	mov	r2,r17
   427c4:	dfc11d17 	ldw	ra,1140(sp)
   427c8:	dc811c17 	ldw	r18,1136(sp)
   427cc:	dc411b17 	ldw	r17,1132(sp)
   427d0:	dc011a17 	ldw	r16,1128(sp)
   427d4:	dec11e04 	addi	sp,sp,1144
   427d8:	f800283a 	ret
   427dc:	047fffc4 	movi	r17,-1
   427e0:	003ff106 	br	427a8 <__alt_data_end+0xfffe63e8>

000427e4 <__swsetup_r>:
   427e4:	00800174 	movhi	r2,5
   427e8:	defffd04 	addi	sp,sp,-12
   427ec:	1085ef04 	addi	r2,r2,6076
   427f0:	dc400115 	stw	r17,4(sp)
   427f4:	2023883a 	mov	r17,r4
   427f8:	11000017 	ldw	r4,0(r2)
   427fc:	dc000015 	stw	r16,0(sp)
   42800:	dfc00215 	stw	ra,8(sp)
   42804:	2821883a 	mov	r16,r5
   42808:	20000226 	beq	r4,zero,42814 <__swsetup_r+0x30>
   4280c:	20800e17 	ldw	r2,56(r4)
   42810:	10003126 	beq	r2,zero,428d8 <__swsetup_r+0xf4>
   42814:	8080030b 	ldhu	r2,12(r16)
   42818:	10c0020c 	andi	r3,r2,8
   4281c:	1009883a 	mov	r4,r2
   42820:	18000f26 	beq	r3,zero,42860 <__swsetup_r+0x7c>
   42824:	80c00417 	ldw	r3,16(r16)
   42828:	18001526 	beq	r3,zero,42880 <__swsetup_r+0x9c>
   4282c:	1100004c 	andi	r4,r2,1
   42830:	20001c1e 	bne	r4,zero,428a4 <__swsetup_r+0xc0>
   42834:	1080008c 	andi	r2,r2,2
   42838:	1000291e 	bne	r2,zero,428e0 <__swsetup_r+0xfc>
   4283c:	80800517 	ldw	r2,20(r16)
   42840:	80800215 	stw	r2,8(r16)
   42844:	18001c26 	beq	r3,zero,428b8 <__swsetup_r+0xd4>
   42848:	0005883a 	mov	r2,zero
   4284c:	dfc00217 	ldw	ra,8(sp)
   42850:	dc400117 	ldw	r17,4(sp)
   42854:	dc000017 	ldw	r16,0(sp)
   42858:	dec00304 	addi	sp,sp,12
   4285c:	f800283a 	ret
   42860:	2080040c 	andi	r2,r4,16
   42864:	10002e26 	beq	r2,zero,42920 <__swsetup_r+0x13c>
   42868:	2080010c 	andi	r2,r4,4
   4286c:	10001e1e 	bne	r2,zero,428e8 <__swsetup_r+0x104>
   42870:	80c00417 	ldw	r3,16(r16)
   42874:	20800214 	ori	r2,r4,8
   42878:	8080030d 	sth	r2,12(r16)
   4287c:	183feb1e 	bne	r3,zero,4282c <__alt_data_end+0xfffe646c>
   42880:	1100a00c 	andi	r4,r2,640
   42884:	01408004 	movi	r5,512
   42888:	217fe826 	beq	r4,r5,4282c <__alt_data_end+0xfffe646c>
   4288c:	800b883a 	mov	r5,r16
   42890:	8809883a 	mov	r4,r17
   42894:	0044ed80 	call	44ed8 <__smakebuf_r>
   42898:	8080030b 	ldhu	r2,12(r16)
   4289c:	80c00417 	ldw	r3,16(r16)
   428a0:	003fe206 	br	4282c <__alt_data_end+0xfffe646c>
   428a4:	80800517 	ldw	r2,20(r16)
   428a8:	80000215 	stw	zero,8(r16)
   428ac:	0085c83a 	sub	r2,zero,r2
   428b0:	80800615 	stw	r2,24(r16)
   428b4:	183fe41e 	bne	r3,zero,42848 <__alt_data_end+0xfffe6488>
   428b8:	80c0030b 	ldhu	r3,12(r16)
   428bc:	0005883a 	mov	r2,zero
   428c0:	1900200c 	andi	r4,r3,128
   428c4:	203fe126 	beq	r4,zero,4284c <__alt_data_end+0xfffe648c>
   428c8:	18c01014 	ori	r3,r3,64
   428cc:	80c0030d 	sth	r3,12(r16)
   428d0:	00bfffc4 	movi	r2,-1
   428d4:	003fdd06 	br	4284c <__alt_data_end+0xfffe648c>
   428d8:	00447f00 	call	447f0 <__sinit>
   428dc:	003fcd06 	br	42814 <__alt_data_end+0xfffe6454>
   428e0:	0005883a 	mov	r2,zero
   428e4:	003fd606 	br	42840 <__alt_data_end+0xfffe6480>
   428e8:	81400c17 	ldw	r5,48(r16)
   428ec:	28000626 	beq	r5,zero,42908 <__swsetup_r+0x124>
   428f0:	80801004 	addi	r2,r16,64
   428f4:	28800326 	beq	r5,r2,42904 <__swsetup_r+0x120>
   428f8:	8809883a 	mov	r4,r17
   428fc:	00449640 	call	44964 <_free_r>
   42900:	8100030b 	ldhu	r4,12(r16)
   42904:	80000c15 	stw	zero,48(r16)
   42908:	80c00417 	ldw	r3,16(r16)
   4290c:	00bff6c4 	movi	r2,-37
   42910:	1108703a 	and	r4,r2,r4
   42914:	80000115 	stw	zero,4(r16)
   42918:	80c00015 	stw	r3,0(r16)
   4291c:	003fd506 	br	42874 <__alt_data_end+0xfffe64b4>
   42920:	00800244 	movi	r2,9
   42924:	88800015 	stw	r2,0(r17)
   42928:	20801014 	ori	r2,r4,64
   4292c:	8080030d 	sth	r2,12(r16)
   42930:	00bfffc4 	movi	r2,-1
   42934:	003fc506 	br	4284c <__alt_data_end+0xfffe648c>

00042938 <quorem>:
   42938:	defff204 	addi	sp,sp,-56
   4293c:	ddc00b15 	stw	r23,44(sp)
   42940:	20800417 	ldw	r2,16(r4)
   42944:	2dc00417 	ldw	r23,16(r5)
   42948:	dfc00d15 	stw	ra,52(sp)
   4294c:	df000c15 	stw	fp,48(sp)
   42950:	dd800a15 	stw	r22,40(sp)
   42954:	dd400915 	stw	r21,36(sp)
   42958:	dd000815 	stw	r20,32(sp)
   4295c:	dcc00715 	stw	r19,28(sp)
   42960:	dc800615 	stw	r18,24(sp)
   42964:	dc400515 	stw	r17,20(sp)
   42968:	dc000415 	stw	r16,16(sp)
   4296c:	15c07a16 	blt	r2,r23,42b58 <quorem+0x220>
   42970:	bdffffc4 	addi	r23,r23,-1
   42974:	bde9883a 	add	r20,r23,r23
   42978:	28c00504 	addi	r3,r5,20
   4297c:	a529883a 	add	r20,r20,r20
   42980:	1d39883a 	add	fp,r3,r20
   42984:	24c00504 	addi	r19,r4,20
   42988:	d9400215 	stw	r5,8(sp)
   4298c:	9d29883a 	add	r20,r19,r20
   42990:	e1400017 	ldw	r5,0(fp)
   42994:	d9000015 	stw	r4,0(sp)
   42998:	a1000017 	ldw	r4,0(r20)
   4299c:	29400044 	addi	r5,r5,1
   429a0:	d8c00115 	stw	r3,4(sp)
   429a4:	dd000315 	stw	r20,12(sp)
   429a8:	004a8a80 	call	4a8a8 <__udivsi3>
   429ac:	1025883a 	mov	r18,r2
   429b0:	10003026 	beq	r2,zero,42a74 <quorem+0x13c>
   429b4:	dc400117 	ldw	r17,4(sp)
   429b8:	9829883a 	mov	r20,r19
   429bc:	002d883a 	mov	r22,zero
   429c0:	0021883a 	mov	r16,zero
   429c4:	8d400017 	ldw	r21,0(r17)
   429c8:	900b883a 	mov	r5,r18
   429cc:	8c400104 	addi	r17,r17,4
   429d0:	a93fffcc 	andi	r4,r21,65535
   429d4:	004a9640 	call	4a964 <__mulsi3>
   429d8:	a808d43a 	srli	r4,r21,16
   429dc:	900b883a 	mov	r5,r18
   429e0:	15ad883a 	add	r22,r2,r22
   429e4:	004a9640 	call	4a964 <__mulsi3>
   429e8:	a1000017 	ldw	r4,0(r20)
   429ec:	b00cd43a 	srli	r6,r22,16
   429f0:	b0ffffcc 	andi	r3,r22,65535
   429f4:	217fffcc 	andi	r5,r4,65535
   429f8:	2c21883a 	add	r16,r5,r16
   429fc:	80c7c83a 	sub	r3,r16,r3
   42a00:	2008d43a 	srli	r4,r4,16
   42a04:	1185883a 	add	r2,r2,r6
   42a08:	1821d43a 	srai	r16,r3,16
   42a0c:	117fffcc 	andi	r5,r2,65535
   42a10:	2149c83a 	sub	r4,r4,r5
   42a14:	2421883a 	add	r16,r4,r16
   42a18:	8008943a 	slli	r4,r16,16
   42a1c:	18ffffcc 	andi	r3,r3,65535
   42a20:	102cd43a 	srli	r22,r2,16
   42a24:	20c8b03a 	or	r4,r4,r3
   42a28:	a1000015 	stw	r4,0(r20)
   42a2c:	8021d43a 	srai	r16,r16,16
   42a30:	a5000104 	addi	r20,r20,4
   42a34:	e47fe32e 	bgeu	fp,r17,429c4 <__alt_data_end+0xfffe6604>
   42a38:	d8c00317 	ldw	r3,12(sp)
   42a3c:	18800017 	ldw	r2,0(r3)
   42a40:	10000c1e 	bne	r2,zero,42a74 <quorem+0x13c>
   42a44:	18bfff04 	addi	r2,r3,-4
   42a48:	9880082e 	bgeu	r19,r2,42a6c <quorem+0x134>
   42a4c:	18ffff17 	ldw	r3,-4(r3)
   42a50:	18000326 	beq	r3,zero,42a60 <quorem+0x128>
   42a54:	00000506 	br	42a6c <quorem+0x134>
   42a58:	10c00017 	ldw	r3,0(r2)
   42a5c:	1800031e 	bne	r3,zero,42a6c <quorem+0x134>
   42a60:	10bfff04 	addi	r2,r2,-4
   42a64:	bdffffc4 	addi	r23,r23,-1
   42a68:	98bffb36 	bltu	r19,r2,42a58 <__alt_data_end+0xfffe6698>
   42a6c:	d8c00017 	ldw	r3,0(sp)
   42a70:	1dc00415 	stw	r23,16(r3)
   42a74:	d9400217 	ldw	r5,8(sp)
   42a78:	d9000017 	ldw	r4,0(sp)
   42a7c:	00465780 	call	46578 <__mcmp>
   42a80:	10002816 	blt	r2,zero,42b24 <quorem+0x1ec>
   42a84:	dc400117 	ldw	r17,4(sp)
   42a88:	94800044 	addi	r18,r18,1
   42a8c:	980d883a 	mov	r6,r19
   42a90:	0007883a 	mov	r3,zero
   42a94:	31000017 	ldw	r4,0(r6)
   42a98:	89400017 	ldw	r5,0(r17)
   42a9c:	31800104 	addi	r6,r6,4
   42aa0:	20bfffcc 	andi	r2,r4,65535
   42aa4:	10c7883a 	add	r3,r2,r3
   42aa8:	28bfffcc 	andi	r2,r5,65535
   42aac:	1885c83a 	sub	r2,r3,r2
   42ab0:	280ad43a 	srli	r5,r5,16
   42ab4:	2008d43a 	srli	r4,r4,16
   42ab8:	1007d43a 	srai	r3,r2,16
   42abc:	10bfffcc 	andi	r2,r2,65535
   42ac0:	2149c83a 	sub	r4,r4,r5
   42ac4:	20c9883a 	add	r4,r4,r3
   42ac8:	200a943a 	slli	r5,r4,16
   42acc:	8c400104 	addi	r17,r17,4
   42ad0:	2007d43a 	srai	r3,r4,16
   42ad4:	2884b03a 	or	r2,r5,r2
   42ad8:	30bfff15 	stw	r2,-4(r6)
   42adc:	e47fed2e 	bgeu	fp,r17,42a94 <__alt_data_end+0xfffe66d4>
   42ae0:	bdc5883a 	add	r2,r23,r23
   42ae4:	1085883a 	add	r2,r2,r2
   42ae8:	9887883a 	add	r3,r19,r2
   42aec:	18800017 	ldw	r2,0(r3)
   42af0:	10000c1e 	bne	r2,zero,42b24 <quorem+0x1ec>
   42af4:	18bfff04 	addi	r2,r3,-4
   42af8:	9880082e 	bgeu	r19,r2,42b1c <quorem+0x1e4>
   42afc:	18ffff17 	ldw	r3,-4(r3)
   42b00:	18000326 	beq	r3,zero,42b10 <quorem+0x1d8>
   42b04:	00000506 	br	42b1c <quorem+0x1e4>
   42b08:	10c00017 	ldw	r3,0(r2)
   42b0c:	1800031e 	bne	r3,zero,42b1c <quorem+0x1e4>
   42b10:	10bfff04 	addi	r2,r2,-4
   42b14:	bdffffc4 	addi	r23,r23,-1
   42b18:	98bffb36 	bltu	r19,r2,42b08 <__alt_data_end+0xfffe6748>
   42b1c:	d8c00017 	ldw	r3,0(sp)
   42b20:	1dc00415 	stw	r23,16(r3)
   42b24:	9005883a 	mov	r2,r18
   42b28:	dfc00d17 	ldw	ra,52(sp)
   42b2c:	df000c17 	ldw	fp,48(sp)
   42b30:	ddc00b17 	ldw	r23,44(sp)
   42b34:	dd800a17 	ldw	r22,40(sp)
   42b38:	dd400917 	ldw	r21,36(sp)
   42b3c:	dd000817 	ldw	r20,32(sp)
   42b40:	dcc00717 	ldw	r19,28(sp)
   42b44:	dc800617 	ldw	r18,24(sp)
   42b48:	dc400517 	ldw	r17,20(sp)
   42b4c:	dc000417 	ldw	r16,16(sp)
   42b50:	dec00e04 	addi	sp,sp,56
   42b54:	f800283a 	ret
   42b58:	0005883a 	mov	r2,zero
   42b5c:	003ff206 	br	42b28 <__alt_data_end+0xfffe6768>

00042b60 <_dtoa_r>:
   42b60:	20801017 	ldw	r2,64(r4)
   42b64:	deffde04 	addi	sp,sp,-136
   42b68:	df002015 	stw	fp,128(sp)
   42b6c:	dcc01b15 	stw	r19,108(sp)
   42b70:	dc801a15 	stw	r18,104(sp)
   42b74:	dc401915 	stw	r17,100(sp)
   42b78:	dc001815 	stw	r16,96(sp)
   42b7c:	dfc02115 	stw	ra,132(sp)
   42b80:	ddc01f15 	stw	r23,124(sp)
   42b84:	dd801e15 	stw	r22,120(sp)
   42b88:	dd401d15 	stw	r21,116(sp)
   42b8c:	dd001c15 	stw	r20,112(sp)
   42b90:	d9c00315 	stw	r7,12(sp)
   42b94:	2039883a 	mov	fp,r4
   42b98:	3023883a 	mov	r17,r6
   42b9c:	2825883a 	mov	r18,r5
   42ba0:	dc002417 	ldw	r16,144(sp)
   42ba4:	3027883a 	mov	r19,r6
   42ba8:	10000826 	beq	r2,zero,42bcc <_dtoa_r+0x6c>
   42bac:	21801117 	ldw	r6,68(r4)
   42bb0:	00c00044 	movi	r3,1
   42bb4:	100b883a 	mov	r5,r2
   42bb8:	1986983a 	sll	r3,r3,r6
   42bbc:	11800115 	stw	r6,4(r2)
   42bc0:	10c00215 	stw	r3,8(r2)
   42bc4:	0045c9c0 	call	45c9c <_Bfree>
   42bc8:	e0001015 	stw	zero,64(fp)
   42bcc:	88002e16 	blt	r17,zero,42c88 <_dtoa_r+0x128>
   42bd0:	80000015 	stw	zero,0(r16)
   42bd4:	889ffc2c 	andhi	r2,r17,32752
   42bd8:	00dffc34 	movhi	r3,32752
   42bdc:	10c01c26 	beq	r2,r3,42c50 <_dtoa_r+0xf0>
   42be0:	000d883a 	mov	r6,zero
   42be4:	000f883a 	mov	r7,zero
   42be8:	9009883a 	mov	r4,r18
   42bec:	980b883a 	mov	r5,r19
   42bf0:	004bc080 	call	4bc08 <__eqdf2>
   42bf4:	10002b1e 	bne	r2,zero,42ca4 <_dtoa_r+0x144>
   42bf8:	d9c02317 	ldw	r7,140(sp)
   42bfc:	00800044 	movi	r2,1
   42c00:	38800015 	stw	r2,0(r7)
   42c04:	d8802517 	ldw	r2,148(sp)
   42c08:	10019e26 	beq	r2,zero,43284 <_dtoa_r+0x724>
   42c0c:	d8c02517 	ldw	r3,148(sp)
   42c10:	00800174 	movhi	r2,5
   42c14:	10be4344 	addi	r2,r2,-1779
   42c18:	18800015 	stw	r2,0(r3)
   42c1c:	10bfffc4 	addi	r2,r2,-1
   42c20:	dfc02117 	ldw	ra,132(sp)
   42c24:	df002017 	ldw	fp,128(sp)
   42c28:	ddc01f17 	ldw	r23,124(sp)
   42c2c:	dd801e17 	ldw	r22,120(sp)
   42c30:	dd401d17 	ldw	r21,116(sp)
   42c34:	dd001c17 	ldw	r20,112(sp)
   42c38:	dcc01b17 	ldw	r19,108(sp)
   42c3c:	dc801a17 	ldw	r18,104(sp)
   42c40:	dc401917 	ldw	r17,100(sp)
   42c44:	dc001817 	ldw	r16,96(sp)
   42c48:	dec02204 	addi	sp,sp,136
   42c4c:	f800283a 	ret
   42c50:	d8c02317 	ldw	r3,140(sp)
   42c54:	0089c3c4 	movi	r2,9999
   42c58:	18800015 	stw	r2,0(r3)
   42c5c:	90017726 	beq	r18,zero,4323c <_dtoa_r+0x6dc>
   42c60:	00800174 	movhi	r2,5
   42c64:	10be4f04 	addi	r2,r2,-1732
   42c68:	d9002517 	ldw	r4,148(sp)
   42c6c:	203fec26 	beq	r4,zero,42c20 <__alt_data_end+0xfffe6860>
   42c70:	10c000c7 	ldb	r3,3(r2)
   42c74:	1801781e 	bne	r3,zero,43258 <_dtoa_r+0x6f8>
   42c78:	10c000c4 	addi	r3,r2,3
   42c7c:	d9802517 	ldw	r6,148(sp)
   42c80:	30c00015 	stw	r3,0(r6)
   42c84:	003fe606 	br	42c20 <__alt_data_end+0xfffe6860>
   42c88:	04e00034 	movhi	r19,32768
   42c8c:	9cffffc4 	addi	r19,r19,-1
   42c90:	00800044 	movi	r2,1
   42c94:	8ce6703a 	and	r19,r17,r19
   42c98:	80800015 	stw	r2,0(r16)
   42c9c:	9823883a 	mov	r17,r19
   42ca0:	003fcc06 	br	42bd4 <__alt_data_end+0xfffe6814>
   42ca4:	d8800204 	addi	r2,sp,8
   42ca8:	d8800015 	stw	r2,0(sp)
   42cac:	d9c00104 	addi	r7,sp,4
   42cb0:	900b883a 	mov	r5,r18
   42cb4:	980d883a 	mov	r6,r19
   42cb8:	e009883a 	mov	r4,fp
   42cbc:	8820d53a 	srli	r16,r17,20
   42cc0:	00469440 	call	46944 <__d2b>
   42cc4:	d8800915 	stw	r2,36(sp)
   42cc8:	8001651e 	bne	r16,zero,43260 <_dtoa_r+0x700>
   42ccc:	dd800217 	ldw	r22,8(sp)
   42cd0:	dc000117 	ldw	r16,4(sp)
   42cd4:	00800804 	movi	r2,32
   42cd8:	b421883a 	add	r16,r22,r16
   42cdc:	80c10c84 	addi	r3,r16,1074
   42ce0:	10c2d10e 	bge	r2,r3,43828 <_dtoa_r+0xcc8>
   42ce4:	00801004 	movi	r2,64
   42ce8:	81010484 	addi	r4,r16,1042
   42cec:	10c7c83a 	sub	r3,r2,r3
   42cf0:	9108d83a 	srl	r4,r18,r4
   42cf4:	88e2983a 	sll	r17,r17,r3
   42cf8:	2448b03a 	or	r4,r4,r17
   42cfc:	004d1240 	call	4d124 <__floatunsidf>
   42d00:	017f8434 	movhi	r5,65040
   42d04:	01800044 	movi	r6,1
   42d08:	1009883a 	mov	r4,r2
   42d0c:	194b883a 	add	r5,r3,r5
   42d10:	843fffc4 	addi	r16,r16,-1
   42d14:	d9801115 	stw	r6,68(sp)
   42d18:	000d883a 	mov	r6,zero
   42d1c:	01cffe34 	movhi	r7,16376
   42d20:	004c6cc0 	call	4c6cc <__subdf3>
   42d24:	0198dbf4 	movhi	r6,25455
   42d28:	01cff4f4 	movhi	r7,16339
   42d2c:	3190d844 	addi	r6,r6,17249
   42d30:	39e1e9c4 	addi	r7,r7,-30809
   42d34:	1009883a 	mov	r4,r2
   42d38:	180b883a 	mov	r5,r3
   42d3c:	004be600 	call	4be60 <__muldf3>
   42d40:	01a2d874 	movhi	r6,35681
   42d44:	01cff1f4 	movhi	r7,16327
   42d48:	31b22cc4 	addi	r6,r6,-14157
   42d4c:	39e28a04 	addi	r7,r7,-30168
   42d50:	180b883a 	mov	r5,r3
   42d54:	1009883a 	mov	r4,r2
   42d58:	004a98c0 	call	4a98c <__adddf3>
   42d5c:	8009883a 	mov	r4,r16
   42d60:	1029883a 	mov	r20,r2
   42d64:	1823883a 	mov	r17,r3
   42d68:	004d0480 	call	4d048 <__floatsidf>
   42d6c:	019427f4 	movhi	r6,20639
   42d70:	01cff4f4 	movhi	r7,16339
   42d74:	319e7ec4 	addi	r6,r6,31227
   42d78:	39d104c4 	addi	r7,r7,17427
   42d7c:	1009883a 	mov	r4,r2
   42d80:	180b883a 	mov	r5,r3
   42d84:	004be600 	call	4be60 <__muldf3>
   42d88:	100d883a 	mov	r6,r2
   42d8c:	180f883a 	mov	r7,r3
   42d90:	a009883a 	mov	r4,r20
   42d94:	880b883a 	mov	r5,r17
   42d98:	004a98c0 	call	4a98c <__adddf3>
   42d9c:	1009883a 	mov	r4,r2
   42da0:	180b883a 	mov	r5,r3
   42da4:	1029883a 	mov	r20,r2
   42da8:	1823883a 	mov	r17,r3
   42dac:	004cfc80 	call	4cfc8 <__fixdfsi>
   42db0:	000d883a 	mov	r6,zero
   42db4:	000f883a 	mov	r7,zero
   42db8:	a009883a 	mov	r4,r20
   42dbc:	880b883a 	mov	r5,r17
   42dc0:	d8800515 	stw	r2,20(sp)
   42dc4:	004bd6c0 	call	4bd6c <__ledf2>
   42dc8:	10028716 	blt	r2,zero,437e8 <_dtoa_r+0xc88>
   42dcc:	d8c00517 	ldw	r3,20(sp)
   42dd0:	00800584 	movi	r2,22
   42dd4:	10c27536 	bltu	r2,r3,437ac <_dtoa_r+0xc4c>
   42dd8:	180490fa 	slli	r2,r3,3
   42ddc:	00c00174 	movhi	r3,5
   42de0:	18fe6b04 	addi	r3,r3,-1620
   42de4:	1885883a 	add	r2,r3,r2
   42de8:	11000017 	ldw	r4,0(r2)
   42dec:	11400117 	ldw	r5,4(r2)
   42df0:	900d883a 	mov	r6,r18
   42df4:	980f883a 	mov	r7,r19
   42df8:	004bc900 	call	4bc90 <__gedf2>
   42dfc:	00828d0e 	bge	zero,r2,43834 <_dtoa_r+0xcd4>
   42e00:	d9000517 	ldw	r4,20(sp)
   42e04:	d8000e15 	stw	zero,56(sp)
   42e08:	213fffc4 	addi	r4,r4,-1
   42e0c:	d9000515 	stw	r4,20(sp)
   42e10:	b42dc83a 	sub	r22,r22,r16
   42e14:	b5bfffc4 	addi	r22,r22,-1
   42e18:	b0026f16 	blt	r22,zero,437d8 <_dtoa_r+0xc78>
   42e1c:	d8000815 	stw	zero,32(sp)
   42e20:	d9c00517 	ldw	r7,20(sp)
   42e24:	38026416 	blt	r7,zero,437b8 <_dtoa_r+0xc58>
   42e28:	b1ed883a 	add	r22,r22,r7
   42e2c:	d9c00d15 	stw	r7,52(sp)
   42e30:	d8000a15 	stw	zero,40(sp)
   42e34:	d9800317 	ldw	r6,12(sp)
   42e38:	00800244 	movi	r2,9
   42e3c:	11811436 	bltu	r2,r6,43290 <_dtoa_r+0x730>
   42e40:	00800144 	movi	r2,5
   42e44:	1184e10e 	bge	r2,r6,441cc <_dtoa_r+0x166c>
   42e48:	31bfff04 	addi	r6,r6,-4
   42e4c:	d9800315 	stw	r6,12(sp)
   42e50:	0023883a 	mov	r17,zero
   42e54:	d9800317 	ldw	r6,12(sp)
   42e58:	008000c4 	movi	r2,3
   42e5c:	30836726 	beq	r6,r2,43bfc <_dtoa_r+0x109c>
   42e60:	1183410e 	bge	r2,r6,43b68 <_dtoa_r+0x1008>
   42e64:	d9c00317 	ldw	r7,12(sp)
   42e68:	00800104 	movi	r2,4
   42e6c:	38827c26 	beq	r7,r2,43860 <_dtoa_r+0xd00>
   42e70:	00800144 	movi	r2,5
   42e74:	3884c41e 	bne	r7,r2,44188 <_dtoa_r+0x1628>
   42e78:	00800044 	movi	r2,1
   42e7c:	d8800b15 	stw	r2,44(sp)
   42e80:	d8c00517 	ldw	r3,20(sp)
   42e84:	d9002217 	ldw	r4,136(sp)
   42e88:	1907883a 	add	r3,r3,r4
   42e8c:	19800044 	addi	r6,r3,1
   42e90:	d8c00c15 	stw	r3,48(sp)
   42e94:	d9800615 	stw	r6,24(sp)
   42e98:	0183a40e 	bge	zero,r6,43d2c <_dtoa_r+0x11cc>
   42e9c:	d9800617 	ldw	r6,24(sp)
   42ea0:	3021883a 	mov	r16,r6
   42ea4:	e0001115 	stw	zero,68(fp)
   42ea8:	008005c4 	movi	r2,23
   42eac:	1184c92e 	bgeu	r2,r6,441d4 <_dtoa_r+0x1674>
   42eb0:	00c00044 	movi	r3,1
   42eb4:	00800104 	movi	r2,4
   42eb8:	1085883a 	add	r2,r2,r2
   42ebc:	11000504 	addi	r4,r2,20
   42ec0:	180b883a 	mov	r5,r3
   42ec4:	18c00044 	addi	r3,r3,1
   42ec8:	313ffb2e 	bgeu	r6,r4,42eb8 <__alt_data_end+0xfffe6af8>
   42ecc:	e1401115 	stw	r5,68(fp)
   42ed0:	e009883a 	mov	r4,fp
   42ed4:	0045bf40 	call	45bf4 <_Balloc>
   42ed8:	d8800715 	stw	r2,28(sp)
   42edc:	e0801015 	stw	r2,64(fp)
   42ee0:	00800384 	movi	r2,14
   42ee4:	1400f736 	bltu	r2,r16,432c4 <_dtoa_r+0x764>
   42ee8:	8800f626 	beq	r17,zero,432c4 <_dtoa_r+0x764>
   42eec:	d9c00517 	ldw	r7,20(sp)
   42ef0:	01c39a0e 	bge	zero,r7,43d5c <_dtoa_r+0x11fc>
   42ef4:	388003cc 	andi	r2,r7,15
   42ef8:	100490fa 	slli	r2,r2,3
   42efc:	382bd13a 	srai	r21,r7,4
   42f00:	00c00174 	movhi	r3,5
   42f04:	18fe6b04 	addi	r3,r3,-1620
   42f08:	1885883a 	add	r2,r3,r2
   42f0c:	a8c0040c 	andi	r3,r21,16
   42f10:	12400017 	ldw	r9,0(r2)
   42f14:	12000117 	ldw	r8,4(r2)
   42f18:	18037926 	beq	r3,zero,43d00 <_dtoa_r+0x11a0>
   42f1c:	00800174 	movhi	r2,5
   42f20:	10be6104 	addi	r2,r2,-1660
   42f24:	11800817 	ldw	r6,32(r2)
   42f28:	11c00917 	ldw	r7,36(r2)
   42f2c:	9009883a 	mov	r4,r18
   42f30:	980b883a 	mov	r5,r19
   42f34:	da001715 	stw	r8,92(sp)
   42f38:	da401615 	stw	r9,88(sp)
   42f3c:	004b2380 	call	4b238 <__divdf3>
   42f40:	da001717 	ldw	r8,92(sp)
   42f44:	da401617 	ldw	r9,88(sp)
   42f48:	ad4003cc 	andi	r21,r21,15
   42f4c:	040000c4 	movi	r16,3
   42f50:	1023883a 	mov	r17,r2
   42f54:	1829883a 	mov	r20,r3
   42f58:	a8001126 	beq	r21,zero,42fa0 <_dtoa_r+0x440>
   42f5c:	05c00174 	movhi	r23,5
   42f60:	bdfe6104 	addi	r23,r23,-1660
   42f64:	4805883a 	mov	r2,r9
   42f68:	4007883a 	mov	r3,r8
   42f6c:	a980004c 	andi	r6,r21,1
   42f70:	1009883a 	mov	r4,r2
   42f74:	a82bd07a 	srai	r21,r21,1
   42f78:	180b883a 	mov	r5,r3
   42f7c:	30000426 	beq	r6,zero,42f90 <_dtoa_r+0x430>
   42f80:	b9800017 	ldw	r6,0(r23)
   42f84:	b9c00117 	ldw	r7,4(r23)
   42f88:	84000044 	addi	r16,r16,1
   42f8c:	004be600 	call	4be60 <__muldf3>
   42f90:	bdc00204 	addi	r23,r23,8
   42f94:	a83ff51e 	bne	r21,zero,42f6c <__alt_data_end+0xfffe6bac>
   42f98:	1013883a 	mov	r9,r2
   42f9c:	1811883a 	mov	r8,r3
   42fa0:	480d883a 	mov	r6,r9
   42fa4:	400f883a 	mov	r7,r8
   42fa8:	8809883a 	mov	r4,r17
   42fac:	a00b883a 	mov	r5,r20
   42fb0:	004b2380 	call	4b238 <__divdf3>
   42fb4:	d8800f15 	stw	r2,60(sp)
   42fb8:	d8c01015 	stw	r3,64(sp)
   42fbc:	d8c00e17 	ldw	r3,56(sp)
   42fc0:	18000626 	beq	r3,zero,42fdc <_dtoa_r+0x47c>
   42fc4:	d9000f17 	ldw	r4,60(sp)
   42fc8:	d9401017 	ldw	r5,64(sp)
   42fcc:	000d883a 	mov	r6,zero
   42fd0:	01cffc34 	movhi	r7,16368
   42fd4:	004bd6c0 	call	4bd6c <__ledf2>
   42fd8:	10040b16 	blt	r2,zero,44008 <_dtoa_r+0x14a8>
   42fdc:	8009883a 	mov	r4,r16
   42fe0:	004d0480 	call	4d048 <__floatsidf>
   42fe4:	d9800f17 	ldw	r6,60(sp)
   42fe8:	d9c01017 	ldw	r7,64(sp)
   42fec:	1009883a 	mov	r4,r2
   42ff0:	180b883a 	mov	r5,r3
   42ff4:	004be600 	call	4be60 <__muldf3>
   42ff8:	000d883a 	mov	r6,zero
   42ffc:	01d00734 	movhi	r7,16412
   43000:	1009883a 	mov	r4,r2
   43004:	180b883a 	mov	r5,r3
   43008:	004a98c0 	call	4a98c <__adddf3>
   4300c:	1021883a 	mov	r16,r2
   43010:	d8800617 	ldw	r2,24(sp)
   43014:	047f3034 	movhi	r17,64704
   43018:	1c63883a 	add	r17,r3,r17
   4301c:	10031826 	beq	r2,zero,43c80 <_dtoa_r+0x1120>
   43020:	d8c00517 	ldw	r3,20(sp)
   43024:	db000617 	ldw	r12,24(sp)
   43028:	d8c01315 	stw	r3,76(sp)
   4302c:	d9000b17 	ldw	r4,44(sp)
   43030:	20038f26 	beq	r4,zero,43e70 <_dtoa_r+0x1310>
   43034:	60bfffc4 	addi	r2,r12,-1
   43038:	100490fa 	slli	r2,r2,3
   4303c:	00c00174 	movhi	r3,5
   43040:	18fe6b04 	addi	r3,r3,-1620
   43044:	1885883a 	add	r2,r3,r2
   43048:	11800017 	ldw	r6,0(r2)
   4304c:	11c00117 	ldw	r7,4(r2)
   43050:	d8800717 	ldw	r2,28(sp)
   43054:	0009883a 	mov	r4,zero
   43058:	014ff834 	movhi	r5,16352
   4305c:	db001615 	stw	r12,88(sp)
   43060:	15c00044 	addi	r23,r2,1
   43064:	004b2380 	call	4b238 <__divdf3>
   43068:	800d883a 	mov	r6,r16
   4306c:	880f883a 	mov	r7,r17
   43070:	1009883a 	mov	r4,r2
   43074:	180b883a 	mov	r5,r3
   43078:	004c6cc0 	call	4c6cc <__subdf3>
   4307c:	d9401017 	ldw	r5,64(sp)
   43080:	d9000f17 	ldw	r4,60(sp)
   43084:	102b883a 	mov	r21,r2
   43088:	d8c01215 	stw	r3,72(sp)
   4308c:	004cfc80 	call	4cfc8 <__fixdfsi>
   43090:	1009883a 	mov	r4,r2
   43094:	1029883a 	mov	r20,r2
   43098:	004d0480 	call	4d048 <__floatsidf>
   4309c:	d9000f17 	ldw	r4,60(sp)
   430a0:	d9401017 	ldw	r5,64(sp)
   430a4:	100d883a 	mov	r6,r2
   430a8:	180f883a 	mov	r7,r3
   430ac:	004c6cc0 	call	4c6cc <__subdf3>
   430b0:	1823883a 	mov	r17,r3
   430b4:	d8c00717 	ldw	r3,28(sp)
   430b8:	d9401217 	ldw	r5,72(sp)
   430bc:	a2000c04 	addi	r8,r20,48
   430c0:	1021883a 	mov	r16,r2
   430c4:	1a000005 	stb	r8,0(r3)
   430c8:	800d883a 	mov	r6,r16
   430cc:	880f883a 	mov	r7,r17
   430d0:	a809883a 	mov	r4,r21
   430d4:	4029883a 	mov	r20,r8
   430d8:	004bc900 	call	4bc90 <__gedf2>
   430dc:	00841d16 	blt	zero,r2,44154 <_dtoa_r+0x15f4>
   430e0:	800d883a 	mov	r6,r16
   430e4:	880f883a 	mov	r7,r17
   430e8:	0009883a 	mov	r4,zero
   430ec:	014ffc34 	movhi	r5,16368
   430f0:	004c6cc0 	call	4c6cc <__subdf3>
   430f4:	d9401217 	ldw	r5,72(sp)
   430f8:	100d883a 	mov	r6,r2
   430fc:	180f883a 	mov	r7,r3
   43100:	a809883a 	mov	r4,r21
   43104:	004bc900 	call	4bc90 <__gedf2>
   43108:	db001617 	ldw	r12,88(sp)
   4310c:	00840e16 	blt	zero,r2,44148 <_dtoa_r+0x15e8>
   43110:	00800044 	movi	r2,1
   43114:	13006b0e 	bge	r2,r12,432c4 <_dtoa_r+0x764>
   43118:	d9000717 	ldw	r4,28(sp)
   4311c:	dd800f15 	stw	r22,60(sp)
   43120:	dcc01015 	stw	r19,64(sp)
   43124:	2319883a 	add	r12,r4,r12
   43128:	dcc01217 	ldw	r19,72(sp)
   4312c:	602d883a 	mov	r22,r12
   43130:	dc801215 	stw	r18,72(sp)
   43134:	b825883a 	mov	r18,r23
   43138:	00000906 	br	43160 <_dtoa_r+0x600>
   4313c:	004c6cc0 	call	4c6cc <__subdf3>
   43140:	a80d883a 	mov	r6,r21
   43144:	980f883a 	mov	r7,r19
   43148:	1009883a 	mov	r4,r2
   4314c:	180b883a 	mov	r5,r3
   43150:	004bd6c0 	call	4bd6c <__ledf2>
   43154:	1003e816 	blt	r2,zero,440f8 <_dtoa_r+0x1598>
   43158:	b825883a 	mov	r18,r23
   4315c:	bd83e926 	beq	r23,r22,44104 <_dtoa_r+0x15a4>
   43160:	a809883a 	mov	r4,r21
   43164:	980b883a 	mov	r5,r19
   43168:	000d883a 	mov	r6,zero
   4316c:	01d00934 	movhi	r7,16420
   43170:	004be600 	call	4be60 <__muldf3>
   43174:	000d883a 	mov	r6,zero
   43178:	01d00934 	movhi	r7,16420
   4317c:	8009883a 	mov	r4,r16
   43180:	880b883a 	mov	r5,r17
   43184:	102b883a 	mov	r21,r2
   43188:	1827883a 	mov	r19,r3
   4318c:	004be600 	call	4be60 <__muldf3>
   43190:	180b883a 	mov	r5,r3
   43194:	1009883a 	mov	r4,r2
   43198:	1821883a 	mov	r16,r3
   4319c:	1023883a 	mov	r17,r2
   431a0:	004cfc80 	call	4cfc8 <__fixdfsi>
   431a4:	1009883a 	mov	r4,r2
   431a8:	1029883a 	mov	r20,r2
   431ac:	004d0480 	call	4d048 <__floatsidf>
   431b0:	8809883a 	mov	r4,r17
   431b4:	800b883a 	mov	r5,r16
   431b8:	100d883a 	mov	r6,r2
   431bc:	180f883a 	mov	r7,r3
   431c0:	004c6cc0 	call	4c6cc <__subdf3>
   431c4:	a5000c04 	addi	r20,r20,48
   431c8:	a80d883a 	mov	r6,r21
   431cc:	980f883a 	mov	r7,r19
   431d0:	1009883a 	mov	r4,r2
   431d4:	180b883a 	mov	r5,r3
   431d8:	95000005 	stb	r20,0(r18)
   431dc:	1021883a 	mov	r16,r2
   431e0:	1823883a 	mov	r17,r3
   431e4:	004bd6c0 	call	4bd6c <__ledf2>
   431e8:	bdc00044 	addi	r23,r23,1
   431ec:	800d883a 	mov	r6,r16
   431f0:	880f883a 	mov	r7,r17
   431f4:	0009883a 	mov	r4,zero
   431f8:	014ffc34 	movhi	r5,16368
   431fc:	103fcf0e 	bge	r2,zero,4313c <__alt_data_end+0xfffe6d7c>
   43200:	d8c01317 	ldw	r3,76(sp)
   43204:	d8c00515 	stw	r3,20(sp)
   43208:	d9400917 	ldw	r5,36(sp)
   4320c:	e009883a 	mov	r4,fp
   43210:	0045c9c0 	call	45c9c <_Bfree>
   43214:	d9000517 	ldw	r4,20(sp)
   43218:	d9802317 	ldw	r6,140(sp)
   4321c:	d9c02517 	ldw	r7,148(sp)
   43220:	b8000005 	stb	zero,0(r23)
   43224:	20800044 	addi	r2,r4,1
   43228:	30800015 	stw	r2,0(r6)
   4322c:	3802aa26 	beq	r7,zero,43cd8 <_dtoa_r+0x1178>
   43230:	3dc00015 	stw	r23,0(r7)
   43234:	d8800717 	ldw	r2,28(sp)
   43238:	003e7906 	br	42c20 <__alt_data_end+0xfffe6860>
   4323c:	00800434 	movhi	r2,16
   43240:	10bfffc4 	addi	r2,r2,-1
   43244:	88a2703a 	and	r17,r17,r2
   43248:	883e851e 	bne	r17,zero,42c60 <__alt_data_end+0xfffe68a0>
   4324c:	00800174 	movhi	r2,5
   43250:	10be4c04 	addi	r2,r2,-1744
   43254:	003e8406 	br	42c68 <__alt_data_end+0xfffe68a8>
   43258:	10c00204 	addi	r3,r2,8
   4325c:	003e8706 	br	42c7c <__alt_data_end+0xfffe68bc>
   43260:	01400434 	movhi	r5,16
   43264:	297fffc4 	addi	r5,r5,-1
   43268:	994a703a 	and	r5,r19,r5
   4326c:	9009883a 	mov	r4,r18
   43270:	843f0044 	addi	r16,r16,-1023
   43274:	294ffc34 	orhi	r5,r5,16368
   43278:	dd800217 	ldw	r22,8(sp)
   4327c:	d8001115 	stw	zero,68(sp)
   43280:	003ea506 	br	42d18 <__alt_data_end+0xfffe6958>
   43284:	00800174 	movhi	r2,5
   43288:	10be4304 	addi	r2,r2,-1780
   4328c:	003e6406 	br	42c20 <__alt_data_end+0xfffe6860>
   43290:	e0001115 	stw	zero,68(fp)
   43294:	000b883a 	mov	r5,zero
   43298:	e009883a 	mov	r4,fp
   4329c:	0045bf40 	call	45bf4 <_Balloc>
   432a0:	01bfffc4 	movi	r6,-1
   432a4:	01c00044 	movi	r7,1
   432a8:	d8800715 	stw	r2,28(sp)
   432ac:	d9800c15 	stw	r6,48(sp)
   432b0:	e0801015 	stw	r2,64(fp)
   432b4:	d8000315 	stw	zero,12(sp)
   432b8:	d9c00b15 	stw	r7,44(sp)
   432bc:	d9800615 	stw	r6,24(sp)
   432c0:	d8002215 	stw	zero,136(sp)
   432c4:	d8800117 	ldw	r2,4(sp)
   432c8:	10008916 	blt	r2,zero,434f0 <_dtoa_r+0x990>
   432cc:	d9000517 	ldw	r4,20(sp)
   432d0:	00c00384 	movi	r3,14
   432d4:	19008616 	blt	r3,r4,434f0 <_dtoa_r+0x990>
   432d8:	200490fa 	slli	r2,r4,3
   432dc:	00c00174 	movhi	r3,5
   432e0:	d9802217 	ldw	r6,136(sp)
   432e4:	18fe6b04 	addi	r3,r3,-1620
   432e8:	1885883a 	add	r2,r3,r2
   432ec:	14000017 	ldw	r16,0(r2)
   432f0:	14400117 	ldw	r17,4(r2)
   432f4:	30016316 	blt	r6,zero,43884 <_dtoa_r+0xd24>
   432f8:	800d883a 	mov	r6,r16
   432fc:	880f883a 	mov	r7,r17
   43300:	9009883a 	mov	r4,r18
   43304:	980b883a 	mov	r5,r19
   43308:	004b2380 	call	4b238 <__divdf3>
   4330c:	180b883a 	mov	r5,r3
   43310:	1009883a 	mov	r4,r2
   43314:	004cfc80 	call	4cfc8 <__fixdfsi>
   43318:	1009883a 	mov	r4,r2
   4331c:	102b883a 	mov	r21,r2
   43320:	004d0480 	call	4d048 <__floatsidf>
   43324:	800d883a 	mov	r6,r16
   43328:	880f883a 	mov	r7,r17
   4332c:	1009883a 	mov	r4,r2
   43330:	180b883a 	mov	r5,r3
   43334:	004be600 	call	4be60 <__muldf3>
   43338:	100d883a 	mov	r6,r2
   4333c:	180f883a 	mov	r7,r3
   43340:	9009883a 	mov	r4,r18
   43344:	980b883a 	mov	r5,r19
   43348:	004c6cc0 	call	4c6cc <__subdf3>
   4334c:	d9c00717 	ldw	r7,28(sp)
   43350:	1009883a 	mov	r4,r2
   43354:	a8800c04 	addi	r2,r21,48
   43358:	38800005 	stb	r2,0(r7)
   4335c:	3dc00044 	addi	r23,r7,1
   43360:	d9c00617 	ldw	r7,24(sp)
   43364:	01800044 	movi	r6,1
   43368:	180b883a 	mov	r5,r3
   4336c:	2005883a 	mov	r2,r4
   43370:	39803826 	beq	r7,r6,43454 <_dtoa_r+0x8f4>
   43374:	000d883a 	mov	r6,zero
   43378:	01d00934 	movhi	r7,16420
   4337c:	004be600 	call	4be60 <__muldf3>
   43380:	000d883a 	mov	r6,zero
   43384:	000f883a 	mov	r7,zero
   43388:	1009883a 	mov	r4,r2
   4338c:	180b883a 	mov	r5,r3
   43390:	1025883a 	mov	r18,r2
   43394:	1827883a 	mov	r19,r3
   43398:	004bc080 	call	4bc08 <__eqdf2>
   4339c:	103f9a26 	beq	r2,zero,43208 <__alt_data_end+0xfffe6e48>
   433a0:	d9c00617 	ldw	r7,24(sp)
   433a4:	d8c00717 	ldw	r3,28(sp)
   433a8:	b829883a 	mov	r20,r23
   433ac:	38bfffc4 	addi	r2,r7,-1
   433b0:	18ad883a 	add	r22,r3,r2
   433b4:	00000a06 	br	433e0 <_dtoa_r+0x880>
   433b8:	004be600 	call	4be60 <__muldf3>
   433bc:	000d883a 	mov	r6,zero
   433c0:	000f883a 	mov	r7,zero
   433c4:	1009883a 	mov	r4,r2
   433c8:	180b883a 	mov	r5,r3
   433cc:	1025883a 	mov	r18,r2
   433d0:	1827883a 	mov	r19,r3
   433d4:	b829883a 	mov	r20,r23
   433d8:	004bc080 	call	4bc08 <__eqdf2>
   433dc:	103f8a26 	beq	r2,zero,43208 <__alt_data_end+0xfffe6e48>
   433e0:	800d883a 	mov	r6,r16
   433e4:	880f883a 	mov	r7,r17
   433e8:	9009883a 	mov	r4,r18
   433ec:	980b883a 	mov	r5,r19
   433f0:	004b2380 	call	4b238 <__divdf3>
   433f4:	180b883a 	mov	r5,r3
   433f8:	1009883a 	mov	r4,r2
   433fc:	004cfc80 	call	4cfc8 <__fixdfsi>
   43400:	1009883a 	mov	r4,r2
   43404:	102b883a 	mov	r21,r2
   43408:	004d0480 	call	4d048 <__floatsidf>
   4340c:	800d883a 	mov	r6,r16
   43410:	880f883a 	mov	r7,r17
   43414:	1009883a 	mov	r4,r2
   43418:	180b883a 	mov	r5,r3
   4341c:	004be600 	call	4be60 <__muldf3>
   43420:	100d883a 	mov	r6,r2
   43424:	180f883a 	mov	r7,r3
   43428:	9009883a 	mov	r4,r18
   4342c:	980b883a 	mov	r5,r19
   43430:	004c6cc0 	call	4c6cc <__subdf3>
   43434:	aa000c04 	addi	r8,r21,48
   43438:	a2000005 	stb	r8,0(r20)
   4343c:	000d883a 	mov	r6,zero
   43440:	01d00934 	movhi	r7,16420
   43444:	1009883a 	mov	r4,r2
   43448:	180b883a 	mov	r5,r3
   4344c:	a5c00044 	addi	r23,r20,1
   43450:	b53fd91e 	bne	r22,r20,433b8 <__alt_data_end+0xfffe6ff8>
   43454:	100d883a 	mov	r6,r2
   43458:	180f883a 	mov	r7,r3
   4345c:	1009883a 	mov	r4,r2
   43460:	180b883a 	mov	r5,r3
   43464:	004a98c0 	call	4a98c <__adddf3>
   43468:	100d883a 	mov	r6,r2
   4346c:	180f883a 	mov	r7,r3
   43470:	8009883a 	mov	r4,r16
   43474:	880b883a 	mov	r5,r17
   43478:	1027883a 	mov	r19,r2
   4347c:	1825883a 	mov	r18,r3
   43480:	004bd6c0 	call	4bd6c <__ledf2>
   43484:	10000816 	blt	r2,zero,434a8 <_dtoa_r+0x948>
   43488:	980d883a 	mov	r6,r19
   4348c:	900f883a 	mov	r7,r18
   43490:	8009883a 	mov	r4,r16
   43494:	880b883a 	mov	r5,r17
   43498:	004bc080 	call	4bc08 <__eqdf2>
   4349c:	103f5a1e 	bne	r2,zero,43208 <__alt_data_end+0xfffe6e48>
   434a0:	ad40004c 	andi	r21,r21,1
   434a4:	a83f5826 	beq	r21,zero,43208 <__alt_data_end+0xfffe6e48>
   434a8:	bd3fffc3 	ldbu	r20,-1(r23)
   434ac:	b8bfffc4 	addi	r2,r23,-1
   434b0:	1007883a 	mov	r3,r2
   434b4:	01400e44 	movi	r5,57
   434b8:	d9800717 	ldw	r6,28(sp)
   434bc:	00000506 	br	434d4 <_dtoa_r+0x974>
   434c0:	18ffffc4 	addi	r3,r3,-1
   434c4:	11824726 	beq	r2,r6,43de4 <_dtoa_r+0x1284>
   434c8:	1d000003 	ldbu	r20,0(r3)
   434cc:	102f883a 	mov	r23,r2
   434d0:	10bfffc4 	addi	r2,r2,-1
   434d4:	a1003fcc 	andi	r4,r20,255
   434d8:	2100201c 	xori	r4,r4,128
   434dc:	213fe004 	addi	r4,r4,-128
   434e0:	217ff726 	beq	r4,r5,434c0 <__alt_data_end+0xfffe7100>
   434e4:	a2000044 	addi	r8,r20,1
   434e8:	12000005 	stb	r8,0(r2)
   434ec:	003f4606 	br	43208 <__alt_data_end+0xfffe6e48>
   434f0:	d9000b17 	ldw	r4,44(sp)
   434f4:	2000c826 	beq	r4,zero,43818 <_dtoa_r+0xcb8>
   434f8:	d9800317 	ldw	r6,12(sp)
   434fc:	00c00044 	movi	r3,1
   43500:	1980f90e 	bge	r3,r6,438e8 <_dtoa_r+0xd88>
   43504:	d8800617 	ldw	r2,24(sp)
   43508:	d8c00a17 	ldw	r3,40(sp)
   4350c:	157fffc4 	addi	r21,r2,-1
   43510:	1d41f316 	blt	r3,r21,43ce0 <_dtoa_r+0x1180>
   43514:	1d6bc83a 	sub	r21,r3,r21
   43518:	d9c00617 	ldw	r7,24(sp)
   4351c:	3802aa16 	blt	r7,zero,43fc8 <_dtoa_r+0x1468>
   43520:	dd000817 	ldw	r20,32(sp)
   43524:	d8800617 	ldw	r2,24(sp)
   43528:	d8c00817 	ldw	r3,32(sp)
   4352c:	01400044 	movi	r5,1
   43530:	e009883a 	mov	r4,fp
   43534:	1887883a 	add	r3,r3,r2
   43538:	d8c00815 	stw	r3,32(sp)
   4353c:	b0ad883a 	add	r22,r22,r2
   43540:	00460280 	call	46028 <__i2b>
   43544:	1023883a 	mov	r17,r2
   43548:	a0000826 	beq	r20,zero,4356c <_dtoa_r+0xa0c>
   4354c:	0580070e 	bge	zero,r22,4356c <_dtoa_r+0xa0c>
   43550:	a005883a 	mov	r2,r20
   43554:	b500b916 	blt	r22,r20,4383c <_dtoa_r+0xcdc>
   43558:	d9000817 	ldw	r4,32(sp)
   4355c:	a0a9c83a 	sub	r20,r20,r2
   43560:	b0adc83a 	sub	r22,r22,r2
   43564:	2089c83a 	sub	r4,r4,r2
   43568:	d9000815 	stw	r4,32(sp)
   4356c:	d9800a17 	ldw	r6,40(sp)
   43570:	0181810e 	bge	zero,r6,43b78 <_dtoa_r+0x1018>
   43574:	d9c00b17 	ldw	r7,44(sp)
   43578:	3800b326 	beq	r7,zero,43848 <_dtoa_r+0xce8>
   4357c:	a800b226 	beq	r21,zero,43848 <_dtoa_r+0xce8>
   43580:	880b883a 	mov	r5,r17
   43584:	a80d883a 	mov	r6,r21
   43588:	e009883a 	mov	r4,fp
   4358c:	00462f00 	call	462f0 <__pow5mult>
   43590:	d9800917 	ldw	r6,36(sp)
   43594:	100b883a 	mov	r5,r2
   43598:	e009883a 	mov	r4,fp
   4359c:	1023883a 	mov	r17,r2
   435a0:	00460640 	call	46064 <__multiply>
   435a4:	1021883a 	mov	r16,r2
   435a8:	d8800a17 	ldw	r2,40(sp)
   435ac:	d9400917 	ldw	r5,36(sp)
   435b0:	e009883a 	mov	r4,fp
   435b4:	1545c83a 	sub	r2,r2,r21
   435b8:	d8800a15 	stw	r2,40(sp)
   435bc:	0045c9c0 	call	45c9c <_Bfree>
   435c0:	d8c00a17 	ldw	r3,40(sp)
   435c4:	18009f1e 	bne	r3,zero,43844 <_dtoa_r+0xce4>
   435c8:	05c00044 	movi	r23,1
   435cc:	e009883a 	mov	r4,fp
   435d0:	b80b883a 	mov	r5,r23
   435d4:	00460280 	call	46028 <__i2b>
   435d8:	d9000d17 	ldw	r4,52(sp)
   435dc:	102b883a 	mov	r21,r2
   435e0:	2000ce26 	beq	r4,zero,4391c <_dtoa_r+0xdbc>
   435e4:	200d883a 	mov	r6,r4
   435e8:	100b883a 	mov	r5,r2
   435ec:	e009883a 	mov	r4,fp
   435f0:	00462f00 	call	462f0 <__pow5mult>
   435f4:	d9800317 	ldw	r6,12(sp)
   435f8:	102b883a 	mov	r21,r2
   435fc:	b981810e 	bge	r23,r6,43c04 <_dtoa_r+0x10a4>
   43600:	0027883a 	mov	r19,zero
   43604:	a8800417 	ldw	r2,16(r21)
   43608:	05c00804 	movi	r23,32
   4360c:	10800104 	addi	r2,r2,4
   43610:	1085883a 	add	r2,r2,r2
   43614:	1085883a 	add	r2,r2,r2
   43618:	a885883a 	add	r2,r21,r2
   4361c:	11000017 	ldw	r4,0(r2)
   43620:	0045f100 	call	45f10 <__hi0bits>
   43624:	b885c83a 	sub	r2,r23,r2
   43628:	1585883a 	add	r2,r2,r22
   4362c:	108007cc 	andi	r2,r2,31
   43630:	1000b326 	beq	r2,zero,43900 <_dtoa_r+0xda0>
   43634:	00c00804 	movi	r3,32
   43638:	1887c83a 	sub	r3,r3,r2
   4363c:	01000104 	movi	r4,4
   43640:	20c2cd0e 	bge	r4,r3,44178 <_dtoa_r+0x1618>
   43644:	00c00704 	movi	r3,28
   43648:	1885c83a 	sub	r2,r3,r2
   4364c:	d8c00817 	ldw	r3,32(sp)
   43650:	a0a9883a 	add	r20,r20,r2
   43654:	b0ad883a 	add	r22,r22,r2
   43658:	1887883a 	add	r3,r3,r2
   4365c:	d8c00815 	stw	r3,32(sp)
   43660:	d9800817 	ldw	r6,32(sp)
   43664:	0180040e 	bge	zero,r6,43678 <_dtoa_r+0xb18>
   43668:	800b883a 	mov	r5,r16
   4366c:	e009883a 	mov	r4,fp
   43670:	00464300 	call	46430 <__lshift>
   43674:	1021883a 	mov	r16,r2
   43678:	0580050e 	bge	zero,r22,43690 <_dtoa_r+0xb30>
   4367c:	a80b883a 	mov	r5,r21
   43680:	b00d883a 	mov	r6,r22
   43684:	e009883a 	mov	r4,fp
   43688:	00464300 	call	46430 <__lshift>
   4368c:	102b883a 	mov	r21,r2
   43690:	d9c00e17 	ldw	r7,56(sp)
   43694:	3801211e 	bne	r7,zero,43b1c <_dtoa_r+0xfbc>
   43698:	d9800617 	ldw	r6,24(sp)
   4369c:	0181380e 	bge	zero,r6,43b80 <_dtoa_r+0x1020>
   436a0:	d8c00b17 	ldw	r3,44(sp)
   436a4:	1800ab1e 	bne	r3,zero,43954 <_dtoa_r+0xdf4>
   436a8:	dc800717 	ldw	r18,28(sp)
   436ac:	dcc00617 	ldw	r19,24(sp)
   436b0:	9029883a 	mov	r20,r18
   436b4:	00000206 	br	436c0 <_dtoa_r+0xb60>
   436b8:	0045cc40 	call	45cc4 <__multadd>
   436bc:	1021883a 	mov	r16,r2
   436c0:	a80b883a 	mov	r5,r21
   436c4:	8009883a 	mov	r4,r16
   436c8:	00429380 	call	42938 <quorem>
   436cc:	10800c04 	addi	r2,r2,48
   436d0:	90800005 	stb	r2,0(r18)
   436d4:	94800044 	addi	r18,r18,1
   436d8:	9507c83a 	sub	r3,r18,r20
   436dc:	000f883a 	mov	r7,zero
   436e0:	01800284 	movi	r6,10
   436e4:	800b883a 	mov	r5,r16
   436e8:	e009883a 	mov	r4,fp
   436ec:	1cfff216 	blt	r3,r19,436b8 <__alt_data_end+0xfffe72f8>
   436f0:	1011883a 	mov	r8,r2
   436f4:	d8800617 	ldw	r2,24(sp)
   436f8:	0082370e 	bge	zero,r2,43fd8 <_dtoa_r+0x1478>
   436fc:	d9000717 	ldw	r4,28(sp)
   43700:	0025883a 	mov	r18,zero
   43704:	20af883a 	add	r23,r4,r2
   43708:	01800044 	movi	r6,1
   4370c:	800b883a 	mov	r5,r16
   43710:	e009883a 	mov	r4,fp
   43714:	da001715 	stw	r8,92(sp)
   43718:	00464300 	call	46430 <__lshift>
   4371c:	a80b883a 	mov	r5,r21
   43720:	1009883a 	mov	r4,r2
   43724:	d8800915 	stw	r2,36(sp)
   43728:	00465780 	call	46578 <__mcmp>
   4372c:	da001717 	ldw	r8,92(sp)
   43730:	0081800e 	bge	zero,r2,43d34 <_dtoa_r+0x11d4>
   43734:	b93fffc3 	ldbu	r4,-1(r23)
   43738:	b8bfffc4 	addi	r2,r23,-1
   4373c:	1007883a 	mov	r3,r2
   43740:	01800e44 	movi	r6,57
   43744:	d9c00717 	ldw	r7,28(sp)
   43748:	00000506 	br	43760 <_dtoa_r+0xc00>
   4374c:	18ffffc4 	addi	r3,r3,-1
   43750:	11c12326 	beq	r2,r7,43be0 <_dtoa_r+0x1080>
   43754:	19000003 	ldbu	r4,0(r3)
   43758:	102f883a 	mov	r23,r2
   4375c:	10bfffc4 	addi	r2,r2,-1
   43760:	21403fcc 	andi	r5,r4,255
   43764:	2940201c 	xori	r5,r5,128
   43768:	297fe004 	addi	r5,r5,-128
   4376c:	29bff726 	beq	r5,r6,4374c <__alt_data_end+0xfffe738c>
   43770:	21000044 	addi	r4,r4,1
   43774:	11000005 	stb	r4,0(r2)
   43778:	a80b883a 	mov	r5,r21
   4377c:	e009883a 	mov	r4,fp
   43780:	0045c9c0 	call	45c9c <_Bfree>
   43784:	883ea026 	beq	r17,zero,43208 <__alt_data_end+0xfffe6e48>
   43788:	90000426 	beq	r18,zero,4379c <_dtoa_r+0xc3c>
   4378c:	94400326 	beq	r18,r17,4379c <_dtoa_r+0xc3c>
   43790:	900b883a 	mov	r5,r18
   43794:	e009883a 	mov	r4,fp
   43798:	0045c9c0 	call	45c9c <_Bfree>
   4379c:	880b883a 	mov	r5,r17
   437a0:	e009883a 	mov	r4,fp
   437a4:	0045c9c0 	call	45c9c <_Bfree>
   437a8:	003e9706 	br	43208 <__alt_data_end+0xfffe6e48>
   437ac:	01800044 	movi	r6,1
   437b0:	d9800e15 	stw	r6,56(sp)
   437b4:	003d9606 	br	42e10 <__alt_data_end+0xfffe6a50>
   437b8:	d8800817 	ldw	r2,32(sp)
   437bc:	d8c00517 	ldw	r3,20(sp)
   437c0:	d8000d15 	stw	zero,52(sp)
   437c4:	10c5c83a 	sub	r2,r2,r3
   437c8:	00c9c83a 	sub	r4,zero,r3
   437cc:	d8800815 	stw	r2,32(sp)
   437d0:	d9000a15 	stw	r4,40(sp)
   437d4:	003d9706 	br	42e34 <__alt_data_end+0xfffe6a74>
   437d8:	05adc83a 	sub	r22,zero,r22
   437dc:	dd800815 	stw	r22,32(sp)
   437e0:	002d883a 	mov	r22,zero
   437e4:	003d8e06 	br	42e20 <__alt_data_end+0xfffe6a60>
   437e8:	d9000517 	ldw	r4,20(sp)
   437ec:	004d0480 	call	4d048 <__floatsidf>
   437f0:	100d883a 	mov	r6,r2
   437f4:	180f883a 	mov	r7,r3
   437f8:	a009883a 	mov	r4,r20
   437fc:	880b883a 	mov	r5,r17
   43800:	004bc080 	call	4bc08 <__eqdf2>
   43804:	103d7126 	beq	r2,zero,42dcc <__alt_data_end+0xfffe6a0c>
   43808:	d9c00517 	ldw	r7,20(sp)
   4380c:	39ffffc4 	addi	r7,r7,-1
   43810:	d9c00515 	stw	r7,20(sp)
   43814:	003d6d06 	br	42dcc <__alt_data_end+0xfffe6a0c>
   43818:	dd400a17 	ldw	r21,40(sp)
   4381c:	dd000817 	ldw	r20,32(sp)
   43820:	0023883a 	mov	r17,zero
   43824:	003f4806 	br	43548 <__alt_data_end+0xfffe7188>
   43828:	10e3c83a 	sub	r17,r2,r3
   4382c:	9448983a 	sll	r4,r18,r17
   43830:	003d3206 	br	42cfc <__alt_data_end+0xfffe693c>
   43834:	d8000e15 	stw	zero,56(sp)
   43838:	003d7506 	br	42e10 <__alt_data_end+0xfffe6a50>
   4383c:	b005883a 	mov	r2,r22
   43840:	003f4506 	br	43558 <__alt_data_end+0xfffe7198>
   43844:	dc000915 	stw	r16,36(sp)
   43848:	d9800a17 	ldw	r6,40(sp)
   4384c:	d9400917 	ldw	r5,36(sp)
   43850:	e009883a 	mov	r4,fp
   43854:	00462f00 	call	462f0 <__pow5mult>
   43858:	1021883a 	mov	r16,r2
   4385c:	003f5a06 	br	435c8 <__alt_data_end+0xfffe7208>
   43860:	01c00044 	movi	r7,1
   43864:	d9c00b15 	stw	r7,44(sp)
   43868:	d8802217 	ldw	r2,136(sp)
   4386c:	0081280e 	bge	zero,r2,43d10 <_dtoa_r+0x11b0>
   43870:	100d883a 	mov	r6,r2
   43874:	1021883a 	mov	r16,r2
   43878:	d8800c15 	stw	r2,48(sp)
   4387c:	d8800615 	stw	r2,24(sp)
   43880:	003d8806 	br	42ea4 <__alt_data_end+0xfffe6ae4>
   43884:	d8800617 	ldw	r2,24(sp)
   43888:	00be9b16 	blt	zero,r2,432f8 <__alt_data_end+0xfffe6f38>
   4388c:	10010f1e 	bne	r2,zero,43ccc <_dtoa_r+0x116c>
   43890:	880b883a 	mov	r5,r17
   43894:	000d883a 	mov	r6,zero
   43898:	01d00534 	movhi	r7,16404
   4389c:	8009883a 	mov	r4,r16
   438a0:	004be600 	call	4be60 <__muldf3>
   438a4:	900d883a 	mov	r6,r18
   438a8:	980f883a 	mov	r7,r19
   438ac:	1009883a 	mov	r4,r2
   438b0:	180b883a 	mov	r5,r3
   438b4:	004bc900 	call	4bc90 <__gedf2>
   438b8:	002b883a 	mov	r21,zero
   438bc:	0023883a 	mov	r17,zero
   438c0:	1000bf16 	blt	r2,zero,43bc0 <_dtoa_r+0x1060>
   438c4:	d9802217 	ldw	r6,136(sp)
   438c8:	ddc00717 	ldw	r23,28(sp)
   438cc:	018c303a 	nor	r6,zero,r6
   438d0:	d9800515 	stw	r6,20(sp)
   438d4:	a80b883a 	mov	r5,r21
   438d8:	e009883a 	mov	r4,fp
   438dc:	0045c9c0 	call	45c9c <_Bfree>
   438e0:	883e4926 	beq	r17,zero,43208 <__alt_data_end+0xfffe6e48>
   438e4:	003fad06 	br	4379c <__alt_data_end+0xfffe73dc>
   438e8:	d9c01117 	ldw	r7,68(sp)
   438ec:	3801bc26 	beq	r7,zero,43fe0 <_dtoa_r+0x1480>
   438f0:	10810cc4 	addi	r2,r2,1075
   438f4:	dd400a17 	ldw	r21,40(sp)
   438f8:	dd000817 	ldw	r20,32(sp)
   438fc:	003f0a06 	br	43528 <__alt_data_end+0xfffe7168>
   43900:	00800704 	movi	r2,28
   43904:	d9000817 	ldw	r4,32(sp)
   43908:	a0a9883a 	add	r20,r20,r2
   4390c:	b0ad883a 	add	r22,r22,r2
   43910:	2089883a 	add	r4,r4,r2
   43914:	d9000815 	stw	r4,32(sp)
   43918:	003f5106 	br	43660 <__alt_data_end+0xfffe72a0>
   4391c:	d8c00317 	ldw	r3,12(sp)
   43920:	b8c1fc0e 	bge	r23,r3,44114 <_dtoa_r+0x15b4>
   43924:	0027883a 	mov	r19,zero
   43928:	b805883a 	mov	r2,r23
   4392c:	003f3e06 	br	43628 <__alt_data_end+0xfffe7268>
   43930:	880b883a 	mov	r5,r17
   43934:	e009883a 	mov	r4,fp
   43938:	000f883a 	mov	r7,zero
   4393c:	01800284 	movi	r6,10
   43940:	0045cc40 	call	45cc4 <__multadd>
   43944:	d9000c17 	ldw	r4,48(sp)
   43948:	1023883a 	mov	r17,r2
   4394c:	0102040e 	bge	zero,r4,44160 <_dtoa_r+0x1600>
   43950:	d9000615 	stw	r4,24(sp)
   43954:	0500050e 	bge	zero,r20,4396c <_dtoa_r+0xe0c>
   43958:	880b883a 	mov	r5,r17
   4395c:	a00d883a 	mov	r6,r20
   43960:	e009883a 	mov	r4,fp
   43964:	00464300 	call	46430 <__lshift>
   43968:	1023883a 	mov	r17,r2
   4396c:	9801241e 	bne	r19,zero,43e00 <_dtoa_r+0x12a0>
   43970:	8829883a 	mov	r20,r17
   43974:	d9000617 	ldw	r4,24(sp)
   43978:	dcc00717 	ldw	r19,28(sp)
   4397c:	9480004c 	andi	r18,r18,1
   43980:	20bfffc4 	addi	r2,r4,-1
   43984:	9885883a 	add	r2,r19,r2
   43988:	d8800415 	stw	r2,16(sp)
   4398c:	dc800615 	stw	r18,24(sp)
   43990:	a80b883a 	mov	r5,r21
   43994:	8009883a 	mov	r4,r16
   43998:	00429380 	call	42938 <quorem>
   4399c:	880b883a 	mov	r5,r17
   439a0:	8009883a 	mov	r4,r16
   439a4:	102f883a 	mov	r23,r2
   439a8:	00465780 	call	46578 <__mcmp>
   439ac:	a80b883a 	mov	r5,r21
   439b0:	a00d883a 	mov	r6,r20
   439b4:	e009883a 	mov	r4,fp
   439b8:	102d883a 	mov	r22,r2
   439bc:	00465d80 	call	465d8 <__mdiff>
   439c0:	1007883a 	mov	r3,r2
   439c4:	10800317 	ldw	r2,12(r2)
   439c8:	bc800c04 	addi	r18,r23,48
   439cc:	180b883a 	mov	r5,r3
   439d0:	10004e1e 	bne	r2,zero,43b0c <_dtoa_r+0xfac>
   439d4:	8009883a 	mov	r4,r16
   439d8:	d8c01615 	stw	r3,88(sp)
   439dc:	00465780 	call	46578 <__mcmp>
   439e0:	d8c01617 	ldw	r3,88(sp)
   439e4:	e009883a 	mov	r4,fp
   439e8:	d8801615 	stw	r2,88(sp)
   439ec:	180b883a 	mov	r5,r3
   439f0:	0045c9c0 	call	45c9c <_Bfree>
   439f4:	d8801617 	ldw	r2,88(sp)
   439f8:	1000041e 	bne	r2,zero,43a0c <_dtoa_r+0xeac>
   439fc:	d9800317 	ldw	r6,12(sp)
   43a00:	3000021e 	bne	r6,zero,43a0c <_dtoa_r+0xeac>
   43a04:	d8c00617 	ldw	r3,24(sp)
   43a08:	18003726 	beq	r3,zero,43ae8 <_dtoa_r+0xf88>
   43a0c:	b0002016 	blt	r22,zero,43a90 <_dtoa_r+0xf30>
   43a10:	b000041e 	bne	r22,zero,43a24 <_dtoa_r+0xec4>
   43a14:	d9000317 	ldw	r4,12(sp)
   43a18:	2000021e 	bne	r4,zero,43a24 <_dtoa_r+0xec4>
   43a1c:	d8c00617 	ldw	r3,24(sp)
   43a20:	18001b26 	beq	r3,zero,43a90 <_dtoa_r+0xf30>
   43a24:	00810716 	blt	zero,r2,43e44 <_dtoa_r+0x12e4>
   43a28:	d8c00417 	ldw	r3,16(sp)
   43a2c:	9d800044 	addi	r22,r19,1
   43a30:	9c800005 	stb	r18,0(r19)
   43a34:	b02f883a 	mov	r23,r22
   43a38:	98c10626 	beq	r19,r3,43e54 <_dtoa_r+0x12f4>
   43a3c:	800b883a 	mov	r5,r16
   43a40:	000f883a 	mov	r7,zero
   43a44:	01800284 	movi	r6,10
   43a48:	e009883a 	mov	r4,fp
   43a4c:	0045cc40 	call	45cc4 <__multadd>
   43a50:	1021883a 	mov	r16,r2
   43a54:	000f883a 	mov	r7,zero
   43a58:	01800284 	movi	r6,10
   43a5c:	880b883a 	mov	r5,r17
   43a60:	e009883a 	mov	r4,fp
   43a64:	8d002526 	beq	r17,r20,43afc <_dtoa_r+0xf9c>
   43a68:	0045cc40 	call	45cc4 <__multadd>
   43a6c:	a00b883a 	mov	r5,r20
   43a70:	000f883a 	mov	r7,zero
   43a74:	01800284 	movi	r6,10
   43a78:	e009883a 	mov	r4,fp
   43a7c:	1023883a 	mov	r17,r2
   43a80:	0045cc40 	call	45cc4 <__multadd>
   43a84:	1029883a 	mov	r20,r2
   43a88:	b027883a 	mov	r19,r22
   43a8c:	003fc006 	br	43990 <__alt_data_end+0xfffe75d0>
   43a90:	9011883a 	mov	r8,r18
   43a94:	00800e0e 	bge	zero,r2,43ad0 <_dtoa_r+0xf70>
   43a98:	800b883a 	mov	r5,r16
   43a9c:	01800044 	movi	r6,1
   43aa0:	e009883a 	mov	r4,fp
   43aa4:	da001715 	stw	r8,92(sp)
   43aa8:	00464300 	call	46430 <__lshift>
   43aac:	a80b883a 	mov	r5,r21
   43ab0:	1009883a 	mov	r4,r2
   43ab4:	1021883a 	mov	r16,r2
   43ab8:	00465780 	call	46578 <__mcmp>
   43abc:	da001717 	ldw	r8,92(sp)
   43ac0:	0081960e 	bge	zero,r2,4411c <_dtoa_r+0x15bc>
   43ac4:	00800e44 	movi	r2,57
   43ac8:	40817026 	beq	r8,r2,4408c <_dtoa_r+0x152c>
   43acc:	ba000c44 	addi	r8,r23,49
   43ad0:	8825883a 	mov	r18,r17
   43ad4:	9dc00044 	addi	r23,r19,1
   43ad8:	9a000005 	stb	r8,0(r19)
   43adc:	a023883a 	mov	r17,r20
   43ae0:	dc000915 	stw	r16,36(sp)
   43ae4:	003f2406 	br	43778 <__alt_data_end+0xfffe73b8>
   43ae8:	00800e44 	movi	r2,57
   43aec:	9011883a 	mov	r8,r18
   43af0:	90816626 	beq	r18,r2,4408c <_dtoa_r+0x152c>
   43af4:	05bff516 	blt	zero,r22,43acc <__alt_data_end+0xfffe770c>
   43af8:	003ff506 	br	43ad0 <__alt_data_end+0xfffe7710>
   43afc:	0045cc40 	call	45cc4 <__multadd>
   43b00:	1023883a 	mov	r17,r2
   43b04:	1029883a 	mov	r20,r2
   43b08:	003fdf06 	br	43a88 <__alt_data_end+0xfffe76c8>
   43b0c:	e009883a 	mov	r4,fp
   43b10:	0045c9c0 	call	45c9c <_Bfree>
   43b14:	00800044 	movi	r2,1
   43b18:	003fbc06 	br	43a0c <__alt_data_end+0xfffe764c>
   43b1c:	a80b883a 	mov	r5,r21
   43b20:	8009883a 	mov	r4,r16
   43b24:	00465780 	call	46578 <__mcmp>
   43b28:	103edb0e 	bge	r2,zero,43698 <__alt_data_end+0xfffe72d8>
   43b2c:	800b883a 	mov	r5,r16
   43b30:	000f883a 	mov	r7,zero
   43b34:	01800284 	movi	r6,10
   43b38:	e009883a 	mov	r4,fp
   43b3c:	0045cc40 	call	45cc4 <__multadd>
   43b40:	1021883a 	mov	r16,r2
   43b44:	d8800517 	ldw	r2,20(sp)
   43b48:	d8c00b17 	ldw	r3,44(sp)
   43b4c:	10bfffc4 	addi	r2,r2,-1
   43b50:	d8800515 	stw	r2,20(sp)
   43b54:	183f761e 	bne	r3,zero,43930 <__alt_data_end+0xfffe7570>
   43b58:	d9000c17 	ldw	r4,48(sp)
   43b5c:	0101730e 	bge	zero,r4,4412c <_dtoa_r+0x15cc>
   43b60:	d9000615 	stw	r4,24(sp)
   43b64:	003ed006 	br	436a8 <__alt_data_end+0xfffe72e8>
   43b68:	00800084 	movi	r2,2
   43b6c:	3081861e 	bne	r6,r2,44188 <_dtoa_r+0x1628>
   43b70:	d8000b15 	stw	zero,44(sp)
   43b74:	003f3c06 	br	43868 <__alt_data_end+0xfffe74a8>
   43b78:	dc000917 	ldw	r16,36(sp)
   43b7c:	003e9206 	br	435c8 <__alt_data_end+0xfffe7208>
   43b80:	d9c00317 	ldw	r7,12(sp)
   43b84:	00800084 	movi	r2,2
   43b88:	11fec50e 	bge	r2,r7,436a0 <__alt_data_end+0xfffe72e0>
   43b8c:	d9000617 	ldw	r4,24(sp)
   43b90:	20013c1e 	bne	r4,zero,44084 <_dtoa_r+0x1524>
   43b94:	a80b883a 	mov	r5,r21
   43b98:	000f883a 	mov	r7,zero
   43b9c:	01800144 	movi	r6,5
   43ba0:	e009883a 	mov	r4,fp
   43ba4:	0045cc40 	call	45cc4 <__multadd>
   43ba8:	100b883a 	mov	r5,r2
   43bac:	8009883a 	mov	r4,r16
   43bb0:	102b883a 	mov	r21,r2
   43bb4:	00465780 	call	46578 <__mcmp>
   43bb8:	dc000915 	stw	r16,36(sp)
   43bbc:	00bf410e 	bge	zero,r2,438c4 <__alt_data_end+0xfffe7504>
   43bc0:	d9c00717 	ldw	r7,28(sp)
   43bc4:	00800c44 	movi	r2,49
   43bc8:	38800005 	stb	r2,0(r7)
   43bcc:	d8800517 	ldw	r2,20(sp)
   43bd0:	3dc00044 	addi	r23,r7,1
   43bd4:	10800044 	addi	r2,r2,1
   43bd8:	d8800515 	stw	r2,20(sp)
   43bdc:	003f3d06 	br	438d4 <__alt_data_end+0xfffe7514>
   43be0:	d9800517 	ldw	r6,20(sp)
   43be4:	d9c00717 	ldw	r7,28(sp)
   43be8:	00800c44 	movi	r2,49
   43bec:	31800044 	addi	r6,r6,1
   43bf0:	d9800515 	stw	r6,20(sp)
   43bf4:	38800005 	stb	r2,0(r7)
   43bf8:	003edf06 	br	43778 <__alt_data_end+0xfffe73b8>
   43bfc:	d8000b15 	stw	zero,44(sp)
   43c00:	003c9f06 	br	42e80 <__alt_data_end+0xfffe6ac0>
   43c04:	903e7e1e 	bne	r18,zero,43600 <__alt_data_end+0xfffe7240>
   43c08:	00800434 	movhi	r2,16
   43c0c:	10bfffc4 	addi	r2,r2,-1
   43c10:	9884703a 	and	r2,r19,r2
   43c14:	1000ea1e 	bne	r2,zero,43fc0 <_dtoa_r+0x1460>
   43c18:	9cdffc2c 	andhi	r19,r19,32752
   43c1c:	9800e826 	beq	r19,zero,43fc0 <_dtoa_r+0x1460>
   43c20:	d9c00817 	ldw	r7,32(sp)
   43c24:	b5800044 	addi	r22,r22,1
   43c28:	04c00044 	movi	r19,1
   43c2c:	39c00044 	addi	r7,r7,1
   43c30:	d9c00815 	stw	r7,32(sp)
   43c34:	d8800d17 	ldw	r2,52(sp)
   43c38:	103e721e 	bne	r2,zero,43604 <__alt_data_end+0xfffe7244>
   43c3c:	00800044 	movi	r2,1
   43c40:	003e7906 	br	43628 <__alt_data_end+0xfffe7268>
   43c44:	8009883a 	mov	r4,r16
   43c48:	004d0480 	call	4d048 <__floatsidf>
   43c4c:	d9800f17 	ldw	r6,60(sp)
   43c50:	d9c01017 	ldw	r7,64(sp)
   43c54:	1009883a 	mov	r4,r2
   43c58:	180b883a 	mov	r5,r3
   43c5c:	004be600 	call	4be60 <__muldf3>
   43c60:	000d883a 	mov	r6,zero
   43c64:	01d00734 	movhi	r7,16412
   43c68:	1009883a 	mov	r4,r2
   43c6c:	180b883a 	mov	r5,r3
   43c70:	004a98c0 	call	4a98c <__adddf3>
   43c74:	047f3034 	movhi	r17,64704
   43c78:	1021883a 	mov	r16,r2
   43c7c:	1c63883a 	add	r17,r3,r17
   43c80:	d9000f17 	ldw	r4,60(sp)
   43c84:	d9401017 	ldw	r5,64(sp)
   43c88:	000d883a 	mov	r6,zero
   43c8c:	01d00534 	movhi	r7,16404
   43c90:	004c6cc0 	call	4c6cc <__subdf3>
   43c94:	800d883a 	mov	r6,r16
   43c98:	880f883a 	mov	r7,r17
   43c9c:	1009883a 	mov	r4,r2
   43ca0:	180b883a 	mov	r5,r3
   43ca4:	102b883a 	mov	r21,r2
   43ca8:	1829883a 	mov	r20,r3
   43cac:	004bc900 	call	4bc90 <__gedf2>
   43cb0:	00806c16 	blt	zero,r2,43e64 <_dtoa_r+0x1304>
   43cb4:	89e0003c 	xorhi	r7,r17,32768
   43cb8:	800d883a 	mov	r6,r16
   43cbc:	a809883a 	mov	r4,r21
   43cc0:	a00b883a 	mov	r5,r20
   43cc4:	004bd6c0 	call	4bd6c <__ledf2>
   43cc8:	103d7e0e 	bge	r2,zero,432c4 <__alt_data_end+0xfffe6f04>
   43ccc:	002b883a 	mov	r21,zero
   43cd0:	0023883a 	mov	r17,zero
   43cd4:	003efb06 	br	438c4 <__alt_data_end+0xfffe7504>
   43cd8:	d8800717 	ldw	r2,28(sp)
   43cdc:	003bd006 	br	42c20 <__alt_data_end+0xfffe6860>
   43ce0:	d9000a17 	ldw	r4,40(sp)
   43ce4:	d9800d17 	ldw	r6,52(sp)
   43ce8:	dd400a15 	stw	r21,40(sp)
   43cec:	a905c83a 	sub	r2,r21,r4
   43cf0:	308d883a 	add	r6,r6,r2
   43cf4:	d9800d15 	stw	r6,52(sp)
   43cf8:	002b883a 	mov	r21,zero
   43cfc:	003e0606 	br	43518 <__alt_data_end+0xfffe7158>
   43d00:	9023883a 	mov	r17,r18
   43d04:	9829883a 	mov	r20,r19
   43d08:	04000084 	movi	r16,2
   43d0c:	003c9206 	br	42f58 <__alt_data_end+0xfffe6b98>
   43d10:	04000044 	movi	r16,1
   43d14:	dc000c15 	stw	r16,48(sp)
   43d18:	dc000615 	stw	r16,24(sp)
   43d1c:	dc002215 	stw	r16,136(sp)
   43d20:	e0001115 	stw	zero,68(fp)
   43d24:	000b883a 	mov	r5,zero
   43d28:	003c6906 	br	42ed0 <__alt_data_end+0xfffe6b10>
   43d2c:	3021883a 	mov	r16,r6
   43d30:	003ffb06 	br	43d20 <__alt_data_end+0xfffe7960>
   43d34:	1000021e 	bne	r2,zero,43d40 <_dtoa_r+0x11e0>
   43d38:	4200004c 	andi	r8,r8,1
   43d3c:	403e7d1e 	bne	r8,zero,43734 <__alt_data_end+0xfffe7374>
   43d40:	01000c04 	movi	r4,48
   43d44:	00000106 	br	43d4c <_dtoa_r+0x11ec>
   43d48:	102f883a 	mov	r23,r2
   43d4c:	b8bfffc4 	addi	r2,r23,-1
   43d50:	10c00007 	ldb	r3,0(r2)
   43d54:	193ffc26 	beq	r3,r4,43d48 <__alt_data_end+0xfffe7988>
   43d58:	003e8706 	br	43778 <__alt_data_end+0xfffe73b8>
   43d5c:	d8800517 	ldw	r2,20(sp)
   43d60:	00a3c83a 	sub	r17,zero,r2
   43d64:	8800a426 	beq	r17,zero,43ff8 <_dtoa_r+0x1498>
   43d68:	888003cc 	andi	r2,r17,15
   43d6c:	100490fa 	slli	r2,r2,3
   43d70:	00c00174 	movhi	r3,5
   43d74:	18fe6b04 	addi	r3,r3,-1620
   43d78:	1885883a 	add	r2,r3,r2
   43d7c:	11800017 	ldw	r6,0(r2)
   43d80:	11c00117 	ldw	r7,4(r2)
   43d84:	9009883a 	mov	r4,r18
   43d88:	980b883a 	mov	r5,r19
   43d8c:	8823d13a 	srai	r17,r17,4
   43d90:	004be600 	call	4be60 <__muldf3>
   43d94:	d8800f15 	stw	r2,60(sp)
   43d98:	d8c01015 	stw	r3,64(sp)
   43d9c:	8800e826 	beq	r17,zero,44140 <_dtoa_r+0x15e0>
   43da0:	05000174 	movhi	r20,5
   43da4:	a53e6104 	addi	r20,r20,-1660
   43da8:	04000084 	movi	r16,2
   43dac:	8980004c 	andi	r6,r17,1
   43db0:	1009883a 	mov	r4,r2
   43db4:	8823d07a 	srai	r17,r17,1
   43db8:	180b883a 	mov	r5,r3
   43dbc:	30000426 	beq	r6,zero,43dd0 <_dtoa_r+0x1270>
   43dc0:	a1800017 	ldw	r6,0(r20)
   43dc4:	a1c00117 	ldw	r7,4(r20)
   43dc8:	84000044 	addi	r16,r16,1
   43dcc:	004be600 	call	4be60 <__muldf3>
   43dd0:	a5000204 	addi	r20,r20,8
   43dd4:	883ff51e 	bne	r17,zero,43dac <__alt_data_end+0xfffe79ec>
   43dd8:	d8800f15 	stw	r2,60(sp)
   43ddc:	d8c01015 	stw	r3,64(sp)
   43de0:	003c7606 	br	42fbc <__alt_data_end+0xfffe6bfc>
   43de4:	00c00c04 	movi	r3,48
   43de8:	10c00005 	stb	r3,0(r2)
   43dec:	d8c00517 	ldw	r3,20(sp)
   43df0:	bd3fffc3 	ldbu	r20,-1(r23)
   43df4:	18c00044 	addi	r3,r3,1
   43df8:	d8c00515 	stw	r3,20(sp)
   43dfc:	003db906 	br	434e4 <__alt_data_end+0xfffe7124>
   43e00:	89400117 	ldw	r5,4(r17)
   43e04:	e009883a 	mov	r4,fp
   43e08:	0045bf40 	call	45bf4 <_Balloc>
   43e0c:	89800417 	ldw	r6,16(r17)
   43e10:	89400304 	addi	r5,r17,12
   43e14:	11000304 	addi	r4,r2,12
   43e18:	31800084 	addi	r6,r6,2
   43e1c:	318d883a 	add	r6,r6,r6
   43e20:	318d883a 	add	r6,r6,r6
   43e24:	1027883a 	mov	r19,r2
   43e28:	00459840 	call	45984 <memcpy>
   43e2c:	01800044 	movi	r6,1
   43e30:	980b883a 	mov	r5,r19
   43e34:	e009883a 	mov	r4,fp
   43e38:	00464300 	call	46430 <__lshift>
   43e3c:	1029883a 	mov	r20,r2
   43e40:	003ecc06 	br	43974 <__alt_data_end+0xfffe75b4>
   43e44:	00800e44 	movi	r2,57
   43e48:	90809026 	beq	r18,r2,4408c <_dtoa_r+0x152c>
   43e4c:	92000044 	addi	r8,r18,1
   43e50:	003f1f06 	br	43ad0 <__alt_data_end+0xfffe7710>
   43e54:	9011883a 	mov	r8,r18
   43e58:	8825883a 	mov	r18,r17
   43e5c:	a023883a 	mov	r17,r20
   43e60:	003e2906 	br	43708 <__alt_data_end+0xfffe7348>
   43e64:	002b883a 	mov	r21,zero
   43e68:	0023883a 	mov	r17,zero
   43e6c:	003f5406 	br	43bc0 <__alt_data_end+0xfffe7800>
   43e70:	61bfffc4 	addi	r6,r12,-1
   43e74:	300490fa 	slli	r2,r6,3
   43e78:	00c00174 	movhi	r3,5
   43e7c:	18fe6b04 	addi	r3,r3,-1620
   43e80:	1885883a 	add	r2,r3,r2
   43e84:	11000017 	ldw	r4,0(r2)
   43e88:	11400117 	ldw	r5,4(r2)
   43e8c:	d8800717 	ldw	r2,28(sp)
   43e90:	880f883a 	mov	r7,r17
   43e94:	d9801215 	stw	r6,72(sp)
   43e98:	800d883a 	mov	r6,r16
   43e9c:	db001615 	stw	r12,88(sp)
   43ea0:	15c00044 	addi	r23,r2,1
   43ea4:	004be600 	call	4be60 <__muldf3>
   43ea8:	d9401017 	ldw	r5,64(sp)
   43eac:	d9000f17 	ldw	r4,60(sp)
   43eb0:	d8c01515 	stw	r3,84(sp)
   43eb4:	d8801415 	stw	r2,80(sp)
   43eb8:	004cfc80 	call	4cfc8 <__fixdfsi>
   43ebc:	1009883a 	mov	r4,r2
   43ec0:	1021883a 	mov	r16,r2
   43ec4:	004d0480 	call	4d048 <__floatsidf>
   43ec8:	d9000f17 	ldw	r4,60(sp)
   43ecc:	d9401017 	ldw	r5,64(sp)
   43ed0:	100d883a 	mov	r6,r2
   43ed4:	180f883a 	mov	r7,r3
   43ed8:	004c6cc0 	call	4c6cc <__subdf3>
   43edc:	1829883a 	mov	r20,r3
   43ee0:	d8c00717 	ldw	r3,28(sp)
   43ee4:	84000c04 	addi	r16,r16,48
   43ee8:	1023883a 	mov	r17,r2
   43eec:	1c000005 	stb	r16,0(r3)
   43ef0:	db001617 	ldw	r12,88(sp)
   43ef4:	00800044 	movi	r2,1
   43ef8:	60802226 	beq	r12,r2,43f84 <_dtoa_r+0x1424>
   43efc:	d9c00717 	ldw	r7,28(sp)
   43f00:	8805883a 	mov	r2,r17
   43f04:	b82b883a 	mov	r21,r23
   43f08:	3b19883a 	add	r12,r7,r12
   43f0c:	6023883a 	mov	r17,r12
   43f10:	a007883a 	mov	r3,r20
   43f14:	dc800f15 	stw	r18,60(sp)
   43f18:	000d883a 	mov	r6,zero
   43f1c:	01d00934 	movhi	r7,16420
   43f20:	1009883a 	mov	r4,r2
   43f24:	180b883a 	mov	r5,r3
   43f28:	004be600 	call	4be60 <__muldf3>
   43f2c:	180b883a 	mov	r5,r3
   43f30:	1009883a 	mov	r4,r2
   43f34:	1829883a 	mov	r20,r3
   43f38:	1025883a 	mov	r18,r2
   43f3c:	004cfc80 	call	4cfc8 <__fixdfsi>
   43f40:	1009883a 	mov	r4,r2
   43f44:	1021883a 	mov	r16,r2
   43f48:	004d0480 	call	4d048 <__floatsidf>
   43f4c:	100d883a 	mov	r6,r2
   43f50:	180f883a 	mov	r7,r3
   43f54:	9009883a 	mov	r4,r18
   43f58:	a00b883a 	mov	r5,r20
   43f5c:	84000c04 	addi	r16,r16,48
   43f60:	004c6cc0 	call	4c6cc <__subdf3>
   43f64:	ad400044 	addi	r21,r21,1
   43f68:	ac3fffc5 	stb	r16,-1(r21)
   43f6c:	ac7fea1e 	bne	r21,r17,43f18 <__alt_data_end+0xfffe7b58>
   43f70:	1023883a 	mov	r17,r2
   43f74:	d8801217 	ldw	r2,72(sp)
   43f78:	dc800f17 	ldw	r18,60(sp)
   43f7c:	1829883a 	mov	r20,r3
   43f80:	b8af883a 	add	r23,r23,r2
   43f84:	d9001417 	ldw	r4,80(sp)
   43f88:	d9401517 	ldw	r5,84(sp)
   43f8c:	000d883a 	mov	r6,zero
   43f90:	01cff834 	movhi	r7,16352
   43f94:	004a98c0 	call	4a98c <__adddf3>
   43f98:	880d883a 	mov	r6,r17
   43f9c:	a00f883a 	mov	r7,r20
   43fa0:	1009883a 	mov	r4,r2
   43fa4:	180b883a 	mov	r5,r3
   43fa8:	004bd6c0 	call	4bd6c <__ledf2>
   43fac:	10003e0e 	bge	r2,zero,440a8 <_dtoa_r+0x1548>
   43fb0:	d9001317 	ldw	r4,76(sp)
   43fb4:	bd3fffc3 	ldbu	r20,-1(r23)
   43fb8:	d9000515 	stw	r4,20(sp)
   43fbc:	003d3b06 	br	434ac <__alt_data_end+0xfffe70ec>
   43fc0:	0027883a 	mov	r19,zero
   43fc4:	003f1b06 	br	43c34 <__alt_data_end+0xfffe7874>
   43fc8:	d8800817 	ldw	r2,32(sp)
   43fcc:	11e9c83a 	sub	r20,r2,r7
   43fd0:	0005883a 	mov	r2,zero
   43fd4:	003d5406 	br	43528 <__alt_data_end+0xfffe7168>
   43fd8:	00800044 	movi	r2,1
   43fdc:	003dc706 	br	436fc <__alt_data_end+0xfffe733c>
   43fe0:	d8c00217 	ldw	r3,8(sp)
   43fe4:	00800d84 	movi	r2,54
   43fe8:	dd400a17 	ldw	r21,40(sp)
   43fec:	10c5c83a 	sub	r2,r2,r3
   43ff0:	dd000817 	ldw	r20,32(sp)
   43ff4:	003d4c06 	br	43528 <__alt_data_end+0xfffe7168>
   43ff8:	dc800f15 	stw	r18,60(sp)
   43ffc:	dcc01015 	stw	r19,64(sp)
   44000:	04000084 	movi	r16,2
   44004:	003bed06 	br	42fbc <__alt_data_end+0xfffe6bfc>
   44008:	d9000617 	ldw	r4,24(sp)
   4400c:	203f0d26 	beq	r4,zero,43c44 <__alt_data_end+0xfffe7884>
   44010:	d9800c17 	ldw	r6,48(sp)
   44014:	01bcab0e 	bge	zero,r6,432c4 <__alt_data_end+0xfffe6f04>
   44018:	d9401017 	ldw	r5,64(sp)
   4401c:	d9000f17 	ldw	r4,60(sp)
   44020:	000d883a 	mov	r6,zero
   44024:	01d00934 	movhi	r7,16420
   44028:	004be600 	call	4be60 <__muldf3>
   4402c:	81000044 	addi	r4,r16,1
   44030:	d8800f15 	stw	r2,60(sp)
   44034:	d8c01015 	stw	r3,64(sp)
   44038:	004d0480 	call	4d048 <__floatsidf>
   4403c:	d9800f17 	ldw	r6,60(sp)
   44040:	d9c01017 	ldw	r7,64(sp)
   44044:	1009883a 	mov	r4,r2
   44048:	180b883a 	mov	r5,r3
   4404c:	004be600 	call	4be60 <__muldf3>
   44050:	01d00734 	movhi	r7,16412
   44054:	000d883a 	mov	r6,zero
   44058:	1009883a 	mov	r4,r2
   4405c:	180b883a 	mov	r5,r3
   44060:	004a98c0 	call	4a98c <__adddf3>
   44064:	d9c00517 	ldw	r7,20(sp)
   44068:	047f3034 	movhi	r17,64704
   4406c:	1021883a 	mov	r16,r2
   44070:	39ffffc4 	addi	r7,r7,-1
   44074:	d9c01315 	stw	r7,76(sp)
   44078:	1c63883a 	add	r17,r3,r17
   4407c:	db000c17 	ldw	r12,48(sp)
   44080:	003bea06 	br	4302c <__alt_data_end+0xfffe6c6c>
   44084:	dc000915 	stw	r16,36(sp)
   44088:	003e0e06 	br	438c4 <__alt_data_end+0xfffe7504>
   4408c:	01000e44 	movi	r4,57
   44090:	8825883a 	mov	r18,r17
   44094:	9dc00044 	addi	r23,r19,1
   44098:	99000005 	stb	r4,0(r19)
   4409c:	a023883a 	mov	r17,r20
   440a0:	dc000915 	stw	r16,36(sp)
   440a4:	003da406 	br	43738 <__alt_data_end+0xfffe7378>
   440a8:	d9801417 	ldw	r6,80(sp)
   440ac:	d9c01517 	ldw	r7,84(sp)
   440b0:	0009883a 	mov	r4,zero
   440b4:	014ff834 	movhi	r5,16352
   440b8:	004c6cc0 	call	4c6cc <__subdf3>
   440bc:	880d883a 	mov	r6,r17
   440c0:	a00f883a 	mov	r7,r20
   440c4:	1009883a 	mov	r4,r2
   440c8:	180b883a 	mov	r5,r3
   440cc:	004bc900 	call	4bc90 <__gedf2>
   440d0:	00bc7c0e 	bge	zero,r2,432c4 <__alt_data_end+0xfffe6f04>
   440d4:	01000c04 	movi	r4,48
   440d8:	00000106 	br	440e0 <_dtoa_r+0x1580>
   440dc:	102f883a 	mov	r23,r2
   440e0:	b8bfffc4 	addi	r2,r23,-1
   440e4:	10c00007 	ldb	r3,0(r2)
   440e8:	193ffc26 	beq	r3,r4,440dc <__alt_data_end+0xfffe7d1c>
   440ec:	d9801317 	ldw	r6,76(sp)
   440f0:	d9800515 	stw	r6,20(sp)
   440f4:	003c4406 	br	43208 <__alt_data_end+0xfffe6e48>
   440f8:	d9801317 	ldw	r6,76(sp)
   440fc:	d9800515 	stw	r6,20(sp)
   44100:	003cea06 	br	434ac <__alt_data_end+0xfffe70ec>
   44104:	dd800f17 	ldw	r22,60(sp)
   44108:	dcc01017 	ldw	r19,64(sp)
   4410c:	dc801217 	ldw	r18,72(sp)
   44110:	003c6c06 	br	432c4 <__alt_data_end+0xfffe6f04>
   44114:	903e031e 	bne	r18,zero,43924 <__alt_data_end+0xfffe7564>
   44118:	003ebb06 	br	43c08 <__alt_data_end+0xfffe7848>
   4411c:	103e6c1e 	bne	r2,zero,43ad0 <__alt_data_end+0xfffe7710>
   44120:	4080004c 	andi	r2,r8,1
   44124:	103e6a26 	beq	r2,zero,43ad0 <__alt_data_end+0xfffe7710>
   44128:	003e6606 	br	43ac4 <__alt_data_end+0xfffe7704>
   4412c:	d8c00317 	ldw	r3,12(sp)
   44130:	00800084 	movi	r2,2
   44134:	10c02916 	blt	r2,r3,441dc <_dtoa_r+0x167c>
   44138:	d9000c17 	ldw	r4,48(sp)
   4413c:	003e8806 	br	43b60 <__alt_data_end+0xfffe77a0>
   44140:	04000084 	movi	r16,2
   44144:	003b9d06 	br	42fbc <__alt_data_end+0xfffe6bfc>
   44148:	d9001317 	ldw	r4,76(sp)
   4414c:	d9000515 	stw	r4,20(sp)
   44150:	003cd606 	br	434ac <__alt_data_end+0xfffe70ec>
   44154:	d8801317 	ldw	r2,76(sp)
   44158:	d8800515 	stw	r2,20(sp)
   4415c:	003c2a06 	br	43208 <__alt_data_end+0xfffe6e48>
   44160:	d9800317 	ldw	r6,12(sp)
   44164:	00800084 	movi	r2,2
   44168:	11801516 	blt	r2,r6,441c0 <_dtoa_r+0x1660>
   4416c:	d9c00c17 	ldw	r7,48(sp)
   44170:	d9c00615 	stw	r7,24(sp)
   44174:	003df706 	br	43954 <__alt_data_end+0xfffe7594>
   44178:	193d3926 	beq	r3,r4,43660 <__alt_data_end+0xfffe72a0>
   4417c:	00c00f04 	movi	r3,60
   44180:	1885c83a 	sub	r2,r3,r2
   44184:	003ddf06 	br	43904 <__alt_data_end+0xfffe7544>
   44188:	e009883a 	mov	r4,fp
   4418c:	e0001115 	stw	zero,68(fp)
   44190:	000b883a 	mov	r5,zero
   44194:	0045bf40 	call	45bf4 <_Balloc>
   44198:	d8800715 	stw	r2,28(sp)
   4419c:	d8c00717 	ldw	r3,28(sp)
   441a0:	00bfffc4 	movi	r2,-1
   441a4:	01000044 	movi	r4,1
   441a8:	d8800c15 	stw	r2,48(sp)
   441ac:	e0c01015 	stw	r3,64(fp)
   441b0:	d9000b15 	stw	r4,44(sp)
   441b4:	d8800615 	stw	r2,24(sp)
   441b8:	d8002215 	stw	zero,136(sp)
   441bc:	003c4106 	br	432c4 <__alt_data_end+0xfffe6f04>
   441c0:	d8c00c17 	ldw	r3,48(sp)
   441c4:	d8c00615 	stw	r3,24(sp)
   441c8:	003e7006 	br	43b8c <__alt_data_end+0xfffe77cc>
   441cc:	04400044 	movi	r17,1
   441d0:	003b2006 	br	42e54 <__alt_data_end+0xfffe6a94>
   441d4:	000b883a 	mov	r5,zero
   441d8:	003b3d06 	br	42ed0 <__alt_data_end+0xfffe6b10>
   441dc:	d8800c17 	ldw	r2,48(sp)
   441e0:	d8800615 	stw	r2,24(sp)
   441e4:	003e6906 	br	43b8c <__alt_data_end+0xfffe77cc>

000441e8 <__sflush_r>:
   441e8:	2880030b 	ldhu	r2,12(r5)
   441ec:	defffb04 	addi	sp,sp,-20
   441f0:	dcc00315 	stw	r19,12(sp)
   441f4:	dc400115 	stw	r17,4(sp)
   441f8:	dfc00415 	stw	ra,16(sp)
   441fc:	dc800215 	stw	r18,8(sp)
   44200:	dc000015 	stw	r16,0(sp)
   44204:	10c0020c 	andi	r3,r2,8
   44208:	2823883a 	mov	r17,r5
   4420c:	2027883a 	mov	r19,r4
   44210:	1800311e 	bne	r3,zero,442d8 <__sflush_r+0xf0>
   44214:	28c00117 	ldw	r3,4(r5)
   44218:	10820014 	ori	r2,r2,2048
   4421c:	2880030d 	sth	r2,12(r5)
   44220:	00c04b0e 	bge	zero,r3,44350 <__sflush_r+0x168>
   44224:	8a000a17 	ldw	r8,40(r17)
   44228:	40002326 	beq	r8,zero,442b8 <__sflush_r+0xd0>
   4422c:	9c000017 	ldw	r16,0(r19)
   44230:	10c4000c 	andi	r3,r2,4096
   44234:	98000015 	stw	zero,0(r19)
   44238:	18004826 	beq	r3,zero,4435c <__sflush_r+0x174>
   4423c:	89801417 	ldw	r6,80(r17)
   44240:	10c0010c 	andi	r3,r2,4
   44244:	18000626 	beq	r3,zero,44260 <__sflush_r+0x78>
   44248:	88c00117 	ldw	r3,4(r17)
   4424c:	88800c17 	ldw	r2,48(r17)
   44250:	30cdc83a 	sub	r6,r6,r3
   44254:	10000226 	beq	r2,zero,44260 <__sflush_r+0x78>
   44258:	88800f17 	ldw	r2,60(r17)
   4425c:	308dc83a 	sub	r6,r6,r2
   44260:	89400717 	ldw	r5,28(r17)
   44264:	000f883a 	mov	r7,zero
   44268:	9809883a 	mov	r4,r19
   4426c:	403ee83a 	callr	r8
   44270:	00ffffc4 	movi	r3,-1
   44274:	10c04426 	beq	r2,r3,44388 <__sflush_r+0x1a0>
   44278:	88c0030b 	ldhu	r3,12(r17)
   4427c:	89000417 	ldw	r4,16(r17)
   44280:	88000115 	stw	zero,4(r17)
   44284:	197dffcc 	andi	r5,r3,63487
   44288:	8940030d 	sth	r5,12(r17)
   4428c:	89000015 	stw	r4,0(r17)
   44290:	18c4000c 	andi	r3,r3,4096
   44294:	18002c1e 	bne	r3,zero,44348 <__sflush_r+0x160>
   44298:	89400c17 	ldw	r5,48(r17)
   4429c:	9c000015 	stw	r16,0(r19)
   442a0:	28000526 	beq	r5,zero,442b8 <__sflush_r+0xd0>
   442a4:	88801004 	addi	r2,r17,64
   442a8:	28800226 	beq	r5,r2,442b4 <__sflush_r+0xcc>
   442ac:	9809883a 	mov	r4,r19
   442b0:	00449640 	call	44964 <_free_r>
   442b4:	88000c15 	stw	zero,48(r17)
   442b8:	0005883a 	mov	r2,zero
   442bc:	dfc00417 	ldw	ra,16(sp)
   442c0:	dcc00317 	ldw	r19,12(sp)
   442c4:	dc800217 	ldw	r18,8(sp)
   442c8:	dc400117 	ldw	r17,4(sp)
   442cc:	dc000017 	ldw	r16,0(sp)
   442d0:	dec00504 	addi	sp,sp,20
   442d4:	f800283a 	ret
   442d8:	2c800417 	ldw	r18,16(r5)
   442dc:	903ff626 	beq	r18,zero,442b8 <__alt_data_end+0xfffe7ef8>
   442e0:	2c000017 	ldw	r16,0(r5)
   442e4:	108000cc 	andi	r2,r2,3
   442e8:	2c800015 	stw	r18,0(r5)
   442ec:	84a1c83a 	sub	r16,r16,r18
   442f0:	1000131e 	bne	r2,zero,44340 <__sflush_r+0x158>
   442f4:	28800517 	ldw	r2,20(r5)
   442f8:	88800215 	stw	r2,8(r17)
   442fc:	04000316 	blt	zero,r16,4430c <__sflush_r+0x124>
   44300:	003fed06 	br	442b8 <__alt_data_end+0xfffe7ef8>
   44304:	90a5883a 	add	r18,r18,r2
   44308:	043feb0e 	bge	zero,r16,442b8 <__alt_data_end+0xfffe7ef8>
   4430c:	88800917 	ldw	r2,36(r17)
   44310:	89400717 	ldw	r5,28(r17)
   44314:	800f883a 	mov	r7,r16
   44318:	900d883a 	mov	r6,r18
   4431c:	9809883a 	mov	r4,r19
   44320:	103ee83a 	callr	r2
   44324:	80a1c83a 	sub	r16,r16,r2
   44328:	00bff616 	blt	zero,r2,44304 <__alt_data_end+0xfffe7f44>
   4432c:	88c0030b 	ldhu	r3,12(r17)
   44330:	00bfffc4 	movi	r2,-1
   44334:	18c01014 	ori	r3,r3,64
   44338:	88c0030d 	sth	r3,12(r17)
   4433c:	003fdf06 	br	442bc <__alt_data_end+0xfffe7efc>
   44340:	0005883a 	mov	r2,zero
   44344:	003fec06 	br	442f8 <__alt_data_end+0xfffe7f38>
   44348:	88801415 	stw	r2,80(r17)
   4434c:	003fd206 	br	44298 <__alt_data_end+0xfffe7ed8>
   44350:	28c00f17 	ldw	r3,60(r5)
   44354:	00ffb316 	blt	zero,r3,44224 <__alt_data_end+0xfffe7e64>
   44358:	003fd706 	br	442b8 <__alt_data_end+0xfffe7ef8>
   4435c:	89400717 	ldw	r5,28(r17)
   44360:	000d883a 	mov	r6,zero
   44364:	01c00044 	movi	r7,1
   44368:	9809883a 	mov	r4,r19
   4436c:	403ee83a 	callr	r8
   44370:	100d883a 	mov	r6,r2
   44374:	00bfffc4 	movi	r2,-1
   44378:	30801426 	beq	r6,r2,443cc <__sflush_r+0x1e4>
   4437c:	8880030b 	ldhu	r2,12(r17)
   44380:	8a000a17 	ldw	r8,40(r17)
   44384:	003fae06 	br	44240 <__alt_data_end+0xfffe7e80>
   44388:	98c00017 	ldw	r3,0(r19)
   4438c:	183fba26 	beq	r3,zero,44278 <__alt_data_end+0xfffe7eb8>
   44390:	01000744 	movi	r4,29
   44394:	19000626 	beq	r3,r4,443b0 <__sflush_r+0x1c8>
   44398:	01000584 	movi	r4,22
   4439c:	19000426 	beq	r3,r4,443b0 <__sflush_r+0x1c8>
   443a0:	88c0030b 	ldhu	r3,12(r17)
   443a4:	18c01014 	ori	r3,r3,64
   443a8:	88c0030d 	sth	r3,12(r17)
   443ac:	003fc306 	br	442bc <__alt_data_end+0xfffe7efc>
   443b0:	8880030b 	ldhu	r2,12(r17)
   443b4:	88c00417 	ldw	r3,16(r17)
   443b8:	88000115 	stw	zero,4(r17)
   443bc:	10bdffcc 	andi	r2,r2,63487
   443c0:	8880030d 	sth	r2,12(r17)
   443c4:	88c00015 	stw	r3,0(r17)
   443c8:	003fb306 	br	44298 <__alt_data_end+0xfffe7ed8>
   443cc:	98800017 	ldw	r2,0(r19)
   443d0:	103fea26 	beq	r2,zero,4437c <__alt_data_end+0xfffe7fbc>
   443d4:	00c00744 	movi	r3,29
   443d8:	10c00226 	beq	r2,r3,443e4 <__sflush_r+0x1fc>
   443dc:	00c00584 	movi	r3,22
   443e0:	10c0031e 	bne	r2,r3,443f0 <__sflush_r+0x208>
   443e4:	9c000015 	stw	r16,0(r19)
   443e8:	0005883a 	mov	r2,zero
   443ec:	003fb306 	br	442bc <__alt_data_end+0xfffe7efc>
   443f0:	88c0030b 	ldhu	r3,12(r17)
   443f4:	3005883a 	mov	r2,r6
   443f8:	18c01014 	ori	r3,r3,64
   443fc:	88c0030d 	sth	r3,12(r17)
   44400:	003fae06 	br	442bc <__alt_data_end+0xfffe7efc>

00044404 <_fflush_r>:
   44404:	defffd04 	addi	sp,sp,-12
   44408:	dc000115 	stw	r16,4(sp)
   4440c:	dfc00215 	stw	ra,8(sp)
   44410:	2021883a 	mov	r16,r4
   44414:	20000226 	beq	r4,zero,44420 <_fflush_r+0x1c>
   44418:	20800e17 	ldw	r2,56(r4)
   4441c:	10000c26 	beq	r2,zero,44450 <_fflush_r+0x4c>
   44420:	2880030f 	ldh	r2,12(r5)
   44424:	1000051e 	bne	r2,zero,4443c <_fflush_r+0x38>
   44428:	0005883a 	mov	r2,zero
   4442c:	dfc00217 	ldw	ra,8(sp)
   44430:	dc000117 	ldw	r16,4(sp)
   44434:	dec00304 	addi	sp,sp,12
   44438:	f800283a 	ret
   4443c:	8009883a 	mov	r4,r16
   44440:	dfc00217 	ldw	ra,8(sp)
   44444:	dc000117 	ldw	r16,4(sp)
   44448:	dec00304 	addi	sp,sp,12
   4444c:	00441e81 	jmpi	441e8 <__sflush_r>
   44450:	d9400015 	stw	r5,0(sp)
   44454:	00447f00 	call	447f0 <__sinit>
   44458:	d9400017 	ldw	r5,0(sp)
   4445c:	003ff006 	br	44420 <__alt_data_end+0xfffe8060>

00044460 <fflush>:
   44460:	20000526 	beq	r4,zero,44478 <fflush+0x18>
   44464:	00800174 	movhi	r2,5
   44468:	1085ef04 	addi	r2,r2,6076
   4446c:	200b883a 	mov	r5,r4
   44470:	11000017 	ldw	r4,0(r2)
   44474:	00444041 	jmpi	44404 <_fflush_r>
   44478:	00800174 	movhi	r2,5
   4447c:	1085ee04 	addi	r2,r2,6072
   44480:	11000017 	ldw	r4,0(r2)
   44484:	01400134 	movhi	r5,4
   44488:	29510104 	addi	r5,r5,17412
   4448c:	0044d381 	jmpi	44d38 <_fwalk_reent>

00044490 <__fp_unlock>:
   44490:	0005883a 	mov	r2,zero
   44494:	f800283a 	ret

00044498 <_cleanup_r>:
   44498:	01400174 	movhi	r5,5
   4449c:	29622b04 	addi	r5,r5,-30548
   444a0:	0044d381 	jmpi	44d38 <_fwalk_reent>

000444a4 <__sinit.part.1>:
   444a4:	defff704 	addi	sp,sp,-36
   444a8:	00c00134 	movhi	r3,4
   444ac:	dfc00815 	stw	ra,32(sp)
   444b0:	ddc00715 	stw	r23,28(sp)
   444b4:	dd800615 	stw	r22,24(sp)
   444b8:	dd400515 	stw	r21,20(sp)
   444bc:	dd000415 	stw	r20,16(sp)
   444c0:	dcc00315 	stw	r19,12(sp)
   444c4:	dc800215 	stw	r18,8(sp)
   444c8:	dc400115 	stw	r17,4(sp)
   444cc:	dc000015 	stw	r16,0(sp)
   444d0:	18d12604 	addi	r3,r3,17560
   444d4:	24000117 	ldw	r16,4(r4)
   444d8:	20c00f15 	stw	r3,60(r4)
   444dc:	2080bb04 	addi	r2,r4,748
   444e0:	00c000c4 	movi	r3,3
   444e4:	20c0b915 	stw	r3,740(r4)
   444e8:	2080ba15 	stw	r2,744(r4)
   444ec:	2000b815 	stw	zero,736(r4)
   444f0:	05c00204 	movi	r23,8
   444f4:	00800104 	movi	r2,4
   444f8:	2025883a 	mov	r18,r4
   444fc:	b80d883a 	mov	r6,r23
   44500:	81001704 	addi	r4,r16,92
   44504:	000b883a 	mov	r5,zero
   44508:	80000015 	stw	zero,0(r16)
   4450c:	80000115 	stw	zero,4(r16)
   44510:	80000215 	stw	zero,8(r16)
   44514:	8080030d 	sth	r2,12(r16)
   44518:	80001915 	stw	zero,100(r16)
   4451c:	8000038d 	sth	zero,14(r16)
   44520:	80000415 	stw	zero,16(r16)
   44524:	80000515 	stw	zero,20(r16)
   44528:	80000615 	stw	zero,24(r16)
   4452c:	0045acc0 	call	45acc <memset>
   44530:	05800134 	movhi	r22,4
   44534:	94400217 	ldw	r17,8(r18)
   44538:	05400134 	movhi	r21,4
   4453c:	05000134 	movhi	r20,4
   44540:	04c00134 	movhi	r19,4
   44544:	b59b5d04 	addi	r22,r22,28020
   44548:	ad5b7404 	addi	r21,r21,28112
   4454c:	a51b9304 	addi	r20,r20,28236
   44550:	9cdbaa04 	addi	r19,r19,28328
   44554:	85800815 	stw	r22,32(r16)
   44558:	85400915 	stw	r21,36(r16)
   4455c:	85000a15 	stw	r20,40(r16)
   44560:	84c00b15 	stw	r19,44(r16)
   44564:	84000715 	stw	r16,28(r16)
   44568:	00800284 	movi	r2,10
   4456c:	8880030d 	sth	r2,12(r17)
   44570:	00800044 	movi	r2,1
   44574:	b80d883a 	mov	r6,r23
   44578:	89001704 	addi	r4,r17,92
   4457c:	000b883a 	mov	r5,zero
   44580:	88000015 	stw	zero,0(r17)
   44584:	88000115 	stw	zero,4(r17)
   44588:	88000215 	stw	zero,8(r17)
   4458c:	88001915 	stw	zero,100(r17)
   44590:	8880038d 	sth	r2,14(r17)
   44594:	88000415 	stw	zero,16(r17)
   44598:	88000515 	stw	zero,20(r17)
   4459c:	88000615 	stw	zero,24(r17)
   445a0:	0045acc0 	call	45acc <memset>
   445a4:	94000317 	ldw	r16,12(r18)
   445a8:	00800484 	movi	r2,18
   445ac:	8c400715 	stw	r17,28(r17)
   445b0:	8d800815 	stw	r22,32(r17)
   445b4:	8d400915 	stw	r21,36(r17)
   445b8:	8d000a15 	stw	r20,40(r17)
   445bc:	8cc00b15 	stw	r19,44(r17)
   445c0:	8080030d 	sth	r2,12(r16)
   445c4:	00800084 	movi	r2,2
   445c8:	80000015 	stw	zero,0(r16)
   445cc:	80000115 	stw	zero,4(r16)
   445d0:	80000215 	stw	zero,8(r16)
   445d4:	80001915 	stw	zero,100(r16)
   445d8:	8080038d 	sth	r2,14(r16)
   445dc:	80000415 	stw	zero,16(r16)
   445e0:	80000515 	stw	zero,20(r16)
   445e4:	80000615 	stw	zero,24(r16)
   445e8:	b80d883a 	mov	r6,r23
   445ec:	000b883a 	mov	r5,zero
   445f0:	81001704 	addi	r4,r16,92
   445f4:	0045acc0 	call	45acc <memset>
   445f8:	00800044 	movi	r2,1
   445fc:	84000715 	stw	r16,28(r16)
   44600:	85800815 	stw	r22,32(r16)
   44604:	85400915 	stw	r21,36(r16)
   44608:	85000a15 	stw	r20,40(r16)
   4460c:	84c00b15 	stw	r19,44(r16)
   44610:	90800e15 	stw	r2,56(r18)
   44614:	dfc00817 	ldw	ra,32(sp)
   44618:	ddc00717 	ldw	r23,28(sp)
   4461c:	dd800617 	ldw	r22,24(sp)
   44620:	dd400517 	ldw	r21,20(sp)
   44624:	dd000417 	ldw	r20,16(sp)
   44628:	dcc00317 	ldw	r19,12(sp)
   4462c:	dc800217 	ldw	r18,8(sp)
   44630:	dc400117 	ldw	r17,4(sp)
   44634:	dc000017 	ldw	r16,0(sp)
   44638:	dec00904 	addi	sp,sp,36
   4463c:	f800283a 	ret

00044640 <__fp_lock>:
   44640:	0005883a 	mov	r2,zero
   44644:	f800283a 	ret

00044648 <__sfmoreglue>:
   44648:	defffc04 	addi	sp,sp,-16
   4464c:	dc800215 	stw	r18,8(sp)
   44650:	2825883a 	mov	r18,r5
   44654:	dc000015 	stw	r16,0(sp)
   44658:	01401a04 	movi	r5,104
   4465c:	2021883a 	mov	r16,r4
   44660:	913fffc4 	addi	r4,r18,-1
   44664:	dfc00315 	stw	ra,12(sp)
   44668:	dc400115 	stw	r17,4(sp)
   4466c:	004a9640 	call	4a964 <__mulsi3>
   44670:	8009883a 	mov	r4,r16
   44674:	11401d04 	addi	r5,r2,116
   44678:	1023883a 	mov	r17,r2
   4467c:	00450940 	call	45094 <_malloc_r>
   44680:	1021883a 	mov	r16,r2
   44684:	10000726 	beq	r2,zero,446a4 <__sfmoreglue+0x5c>
   44688:	11000304 	addi	r4,r2,12
   4468c:	10000015 	stw	zero,0(r2)
   44690:	14800115 	stw	r18,4(r2)
   44694:	11000215 	stw	r4,8(r2)
   44698:	89801a04 	addi	r6,r17,104
   4469c:	000b883a 	mov	r5,zero
   446a0:	0045acc0 	call	45acc <memset>
   446a4:	8005883a 	mov	r2,r16
   446a8:	dfc00317 	ldw	ra,12(sp)
   446ac:	dc800217 	ldw	r18,8(sp)
   446b0:	dc400117 	ldw	r17,4(sp)
   446b4:	dc000017 	ldw	r16,0(sp)
   446b8:	dec00404 	addi	sp,sp,16
   446bc:	f800283a 	ret

000446c0 <__sfp>:
   446c0:	defffb04 	addi	sp,sp,-20
   446c4:	dc000015 	stw	r16,0(sp)
   446c8:	04000174 	movhi	r16,5
   446cc:	8405ee04 	addi	r16,r16,6072
   446d0:	dcc00315 	stw	r19,12(sp)
   446d4:	2027883a 	mov	r19,r4
   446d8:	81000017 	ldw	r4,0(r16)
   446dc:	dfc00415 	stw	ra,16(sp)
   446e0:	dc800215 	stw	r18,8(sp)
   446e4:	20800e17 	ldw	r2,56(r4)
   446e8:	dc400115 	stw	r17,4(sp)
   446ec:	1000021e 	bne	r2,zero,446f8 <__sfp+0x38>
   446f0:	00444a40 	call	444a4 <__sinit.part.1>
   446f4:	81000017 	ldw	r4,0(r16)
   446f8:	2480b804 	addi	r18,r4,736
   446fc:	047fffc4 	movi	r17,-1
   44700:	91000117 	ldw	r4,4(r18)
   44704:	94000217 	ldw	r16,8(r18)
   44708:	213fffc4 	addi	r4,r4,-1
   4470c:	20000a16 	blt	r4,zero,44738 <__sfp+0x78>
   44710:	8080030f 	ldh	r2,12(r16)
   44714:	10000c26 	beq	r2,zero,44748 <__sfp+0x88>
   44718:	80c01d04 	addi	r3,r16,116
   4471c:	00000206 	br	44728 <__sfp+0x68>
   44720:	18bfe60f 	ldh	r2,-104(r3)
   44724:	10000826 	beq	r2,zero,44748 <__sfp+0x88>
   44728:	213fffc4 	addi	r4,r4,-1
   4472c:	1c3ffd04 	addi	r16,r3,-12
   44730:	18c01a04 	addi	r3,r3,104
   44734:	247ffa1e 	bne	r4,r17,44720 <__alt_data_end+0xfffe8360>
   44738:	90800017 	ldw	r2,0(r18)
   4473c:	10001d26 	beq	r2,zero,447b4 <__sfp+0xf4>
   44740:	1025883a 	mov	r18,r2
   44744:	003fee06 	br	44700 <__alt_data_end+0xfffe8340>
   44748:	00bfffc4 	movi	r2,-1
   4474c:	8080038d 	sth	r2,14(r16)
   44750:	00800044 	movi	r2,1
   44754:	8080030d 	sth	r2,12(r16)
   44758:	80001915 	stw	zero,100(r16)
   4475c:	80000015 	stw	zero,0(r16)
   44760:	80000215 	stw	zero,8(r16)
   44764:	80000115 	stw	zero,4(r16)
   44768:	80000415 	stw	zero,16(r16)
   4476c:	80000515 	stw	zero,20(r16)
   44770:	80000615 	stw	zero,24(r16)
   44774:	01800204 	movi	r6,8
   44778:	000b883a 	mov	r5,zero
   4477c:	81001704 	addi	r4,r16,92
   44780:	0045acc0 	call	45acc <memset>
   44784:	8005883a 	mov	r2,r16
   44788:	80000c15 	stw	zero,48(r16)
   4478c:	80000d15 	stw	zero,52(r16)
   44790:	80001115 	stw	zero,68(r16)
   44794:	80001215 	stw	zero,72(r16)
   44798:	dfc00417 	ldw	ra,16(sp)
   4479c:	dcc00317 	ldw	r19,12(sp)
   447a0:	dc800217 	ldw	r18,8(sp)
   447a4:	dc400117 	ldw	r17,4(sp)
   447a8:	dc000017 	ldw	r16,0(sp)
   447ac:	dec00504 	addi	sp,sp,20
   447b0:	f800283a 	ret
   447b4:	01400104 	movi	r5,4
   447b8:	9809883a 	mov	r4,r19
   447bc:	00446480 	call	44648 <__sfmoreglue>
   447c0:	90800015 	stw	r2,0(r18)
   447c4:	103fde1e 	bne	r2,zero,44740 <__alt_data_end+0xfffe8380>
   447c8:	00800304 	movi	r2,12
   447cc:	98800015 	stw	r2,0(r19)
   447d0:	0005883a 	mov	r2,zero
   447d4:	003ff006 	br	44798 <__alt_data_end+0xfffe83d8>

000447d8 <_cleanup>:
   447d8:	00800174 	movhi	r2,5
   447dc:	1085ee04 	addi	r2,r2,6072
   447e0:	11000017 	ldw	r4,0(r2)
   447e4:	01400174 	movhi	r5,5
   447e8:	29622b04 	addi	r5,r5,-30548
   447ec:	0044d381 	jmpi	44d38 <_fwalk_reent>

000447f0 <__sinit>:
   447f0:	20800e17 	ldw	r2,56(r4)
   447f4:	10000126 	beq	r2,zero,447fc <__sinit+0xc>
   447f8:	f800283a 	ret
   447fc:	00444a41 	jmpi	444a4 <__sinit.part.1>

00044800 <__sfp_lock_acquire>:
   44800:	f800283a 	ret

00044804 <__sfp_lock_release>:
   44804:	f800283a 	ret

00044808 <__sinit_lock_acquire>:
   44808:	f800283a 	ret

0004480c <__sinit_lock_release>:
   4480c:	f800283a 	ret

00044810 <__fp_lock_all>:
   44810:	00800174 	movhi	r2,5
   44814:	1085ef04 	addi	r2,r2,6076
   44818:	11000017 	ldw	r4,0(r2)
   4481c:	01400134 	movhi	r5,4
   44820:	29519004 	addi	r5,r5,17984
   44824:	0044c741 	jmpi	44c74 <_fwalk>

00044828 <__fp_unlock_all>:
   44828:	00800174 	movhi	r2,5
   4482c:	1085ef04 	addi	r2,r2,6076
   44830:	11000017 	ldw	r4,0(r2)
   44834:	01400134 	movhi	r5,4
   44838:	29512404 	addi	r5,r5,17552
   4483c:	0044c741 	jmpi	44c74 <_fwalk>

00044840 <_malloc_trim_r>:
   44840:	defffb04 	addi	sp,sp,-20
   44844:	dcc00315 	stw	r19,12(sp)
   44848:	04c00174 	movhi	r19,5
   4484c:	dc800215 	stw	r18,8(sp)
   44850:	dc400115 	stw	r17,4(sp)
   44854:	dc000015 	stw	r16,0(sp)
   44858:	dfc00415 	stw	ra,16(sp)
   4485c:	2821883a 	mov	r16,r5
   44860:	9cc06404 	addi	r19,r19,400
   44864:	2025883a 	mov	r18,r4
   44868:	004d7cc0 	call	4d7cc <__malloc_lock>
   4486c:	98800217 	ldw	r2,8(r19)
   44870:	14400117 	ldw	r17,4(r2)
   44874:	00bfff04 	movi	r2,-4
   44878:	88a2703a 	and	r17,r17,r2
   4487c:	8c21c83a 	sub	r16,r17,r16
   44880:	8403fbc4 	addi	r16,r16,4079
   44884:	8020d33a 	srli	r16,r16,12
   44888:	0083ffc4 	movi	r2,4095
   4488c:	843fffc4 	addi	r16,r16,-1
   44890:	8020933a 	slli	r16,r16,12
   44894:	1400060e 	bge	r2,r16,448b0 <_malloc_trim_r+0x70>
   44898:	000b883a 	mov	r5,zero
   4489c:	9009883a 	mov	r4,r18
   448a0:	0046d200 	call	46d20 <_sbrk_r>
   448a4:	98c00217 	ldw	r3,8(r19)
   448a8:	1c47883a 	add	r3,r3,r17
   448ac:	10c00a26 	beq	r2,r3,448d8 <_malloc_trim_r+0x98>
   448b0:	9009883a 	mov	r4,r18
   448b4:	004d7f00 	call	4d7f0 <__malloc_unlock>
   448b8:	0005883a 	mov	r2,zero
   448bc:	dfc00417 	ldw	ra,16(sp)
   448c0:	dcc00317 	ldw	r19,12(sp)
   448c4:	dc800217 	ldw	r18,8(sp)
   448c8:	dc400117 	ldw	r17,4(sp)
   448cc:	dc000017 	ldw	r16,0(sp)
   448d0:	dec00504 	addi	sp,sp,20
   448d4:	f800283a 	ret
   448d8:	040bc83a 	sub	r5,zero,r16
   448dc:	9009883a 	mov	r4,r18
   448e0:	0046d200 	call	46d20 <_sbrk_r>
   448e4:	00ffffc4 	movi	r3,-1
   448e8:	10c00d26 	beq	r2,r3,44920 <_malloc_trim_r+0xe0>
   448ec:	00c00174 	movhi	r3,5
   448f0:	18cd1b04 	addi	r3,r3,13420
   448f4:	18800017 	ldw	r2,0(r3)
   448f8:	99000217 	ldw	r4,8(r19)
   448fc:	8c23c83a 	sub	r17,r17,r16
   44900:	8c400054 	ori	r17,r17,1
   44904:	1421c83a 	sub	r16,r2,r16
   44908:	24400115 	stw	r17,4(r4)
   4490c:	9009883a 	mov	r4,r18
   44910:	1c000015 	stw	r16,0(r3)
   44914:	004d7f00 	call	4d7f0 <__malloc_unlock>
   44918:	00800044 	movi	r2,1
   4491c:	003fe706 	br	448bc <__alt_data_end+0xfffe84fc>
   44920:	000b883a 	mov	r5,zero
   44924:	9009883a 	mov	r4,r18
   44928:	0046d200 	call	46d20 <_sbrk_r>
   4492c:	99000217 	ldw	r4,8(r19)
   44930:	014003c4 	movi	r5,15
   44934:	1107c83a 	sub	r3,r2,r4
   44938:	28ffdd0e 	bge	r5,r3,448b0 <__alt_data_end+0xfffe84f0>
   4493c:	01400174 	movhi	r5,5
   44940:	2945f104 	addi	r5,r5,6084
   44944:	29400017 	ldw	r5,0(r5)
   44948:	18c00054 	ori	r3,r3,1
   4494c:	20c00115 	stw	r3,4(r4)
   44950:	00c00174 	movhi	r3,5
   44954:	1145c83a 	sub	r2,r2,r5
   44958:	18cd1b04 	addi	r3,r3,13420
   4495c:	18800015 	stw	r2,0(r3)
   44960:	003fd306 	br	448b0 <__alt_data_end+0xfffe84f0>

00044964 <_free_r>:
   44964:	28004126 	beq	r5,zero,44a6c <_free_r+0x108>
   44968:	defffd04 	addi	sp,sp,-12
   4496c:	dc400115 	stw	r17,4(sp)
   44970:	dc000015 	stw	r16,0(sp)
   44974:	2023883a 	mov	r17,r4
   44978:	2821883a 	mov	r16,r5
   4497c:	dfc00215 	stw	ra,8(sp)
   44980:	004d7cc0 	call	4d7cc <__malloc_lock>
   44984:	81ffff17 	ldw	r7,-4(r16)
   44988:	00bfff84 	movi	r2,-2
   4498c:	01000174 	movhi	r4,5
   44990:	81bffe04 	addi	r6,r16,-8
   44994:	3884703a 	and	r2,r7,r2
   44998:	21006404 	addi	r4,r4,400
   4499c:	308b883a 	add	r5,r6,r2
   449a0:	2a400117 	ldw	r9,4(r5)
   449a4:	22000217 	ldw	r8,8(r4)
   449a8:	00ffff04 	movi	r3,-4
   449ac:	48c6703a 	and	r3,r9,r3
   449b0:	2a005726 	beq	r5,r8,44b10 <_free_r+0x1ac>
   449b4:	28c00115 	stw	r3,4(r5)
   449b8:	39c0004c 	andi	r7,r7,1
   449bc:	3800091e 	bne	r7,zero,449e4 <_free_r+0x80>
   449c0:	823ffe17 	ldw	r8,-8(r16)
   449c4:	22400204 	addi	r9,r4,8
   449c8:	320dc83a 	sub	r6,r6,r8
   449cc:	31c00217 	ldw	r7,8(r6)
   449d0:	1205883a 	add	r2,r2,r8
   449d4:	3a406526 	beq	r7,r9,44b6c <_free_r+0x208>
   449d8:	32000317 	ldw	r8,12(r6)
   449dc:	3a000315 	stw	r8,12(r7)
   449e0:	41c00215 	stw	r7,8(r8)
   449e4:	28cf883a 	add	r7,r5,r3
   449e8:	39c00117 	ldw	r7,4(r7)
   449ec:	39c0004c 	andi	r7,r7,1
   449f0:	38003a26 	beq	r7,zero,44adc <_free_r+0x178>
   449f4:	10c00054 	ori	r3,r2,1
   449f8:	30c00115 	stw	r3,4(r6)
   449fc:	3087883a 	add	r3,r6,r2
   44a00:	18800015 	stw	r2,0(r3)
   44a04:	00c07fc4 	movi	r3,511
   44a08:	18801936 	bltu	r3,r2,44a70 <_free_r+0x10c>
   44a0c:	1004d0fa 	srli	r2,r2,3
   44a10:	01c00044 	movi	r7,1
   44a14:	21400117 	ldw	r5,4(r4)
   44a18:	10c00044 	addi	r3,r2,1
   44a1c:	18c7883a 	add	r3,r3,r3
   44a20:	1005d0ba 	srai	r2,r2,2
   44a24:	18c7883a 	add	r3,r3,r3
   44a28:	18c7883a 	add	r3,r3,r3
   44a2c:	1907883a 	add	r3,r3,r4
   44a30:	3884983a 	sll	r2,r7,r2
   44a34:	19c00017 	ldw	r7,0(r3)
   44a38:	1a3ffe04 	addi	r8,r3,-8
   44a3c:	1144b03a 	or	r2,r2,r5
   44a40:	32000315 	stw	r8,12(r6)
   44a44:	31c00215 	stw	r7,8(r6)
   44a48:	20800115 	stw	r2,4(r4)
   44a4c:	19800015 	stw	r6,0(r3)
   44a50:	39800315 	stw	r6,12(r7)
   44a54:	8809883a 	mov	r4,r17
   44a58:	dfc00217 	ldw	ra,8(sp)
   44a5c:	dc400117 	ldw	r17,4(sp)
   44a60:	dc000017 	ldw	r16,0(sp)
   44a64:	dec00304 	addi	sp,sp,12
   44a68:	004d7f01 	jmpi	4d7f0 <__malloc_unlock>
   44a6c:	f800283a 	ret
   44a70:	100ad27a 	srli	r5,r2,9
   44a74:	00c00104 	movi	r3,4
   44a78:	19404a36 	bltu	r3,r5,44ba4 <_free_r+0x240>
   44a7c:	100ad1ba 	srli	r5,r2,6
   44a80:	28c00e44 	addi	r3,r5,57
   44a84:	18c7883a 	add	r3,r3,r3
   44a88:	29400e04 	addi	r5,r5,56
   44a8c:	18c7883a 	add	r3,r3,r3
   44a90:	18c7883a 	add	r3,r3,r3
   44a94:	1909883a 	add	r4,r3,r4
   44a98:	20c00017 	ldw	r3,0(r4)
   44a9c:	01c00174 	movhi	r7,5
   44aa0:	213ffe04 	addi	r4,r4,-8
   44aa4:	39c06404 	addi	r7,r7,400
   44aa8:	20c04426 	beq	r4,r3,44bbc <_free_r+0x258>
   44aac:	01ffff04 	movi	r7,-4
   44ab0:	19400117 	ldw	r5,4(r3)
   44ab4:	29ca703a 	and	r5,r5,r7
   44ab8:	1140022e 	bgeu	r2,r5,44ac4 <_free_r+0x160>
   44abc:	18c00217 	ldw	r3,8(r3)
   44ac0:	20fffb1e 	bne	r4,r3,44ab0 <__alt_data_end+0xfffe86f0>
   44ac4:	19000317 	ldw	r4,12(r3)
   44ac8:	31000315 	stw	r4,12(r6)
   44acc:	30c00215 	stw	r3,8(r6)
   44ad0:	21800215 	stw	r6,8(r4)
   44ad4:	19800315 	stw	r6,12(r3)
   44ad8:	003fde06 	br	44a54 <__alt_data_end+0xfffe8694>
   44adc:	29c00217 	ldw	r7,8(r5)
   44ae0:	10c5883a 	add	r2,r2,r3
   44ae4:	00c00174 	movhi	r3,5
   44ae8:	18c06604 	addi	r3,r3,408
   44aec:	38c03b26 	beq	r7,r3,44bdc <_free_r+0x278>
   44af0:	2a000317 	ldw	r8,12(r5)
   44af4:	11400054 	ori	r5,r2,1
   44af8:	3087883a 	add	r3,r6,r2
   44afc:	3a000315 	stw	r8,12(r7)
   44b00:	41c00215 	stw	r7,8(r8)
   44b04:	31400115 	stw	r5,4(r6)
   44b08:	18800015 	stw	r2,0(r3)
   44b0c:	003fbd06 	br	44a04 <__alt_data_end+0xfffe8644>
   44b10:	39c0004c 	andi	r7,r7,1
   44b14:	10c5883a 	add	r2,r2,r3
   44b18:	3800071e 	bne	r7,zero,44b38 <_free_r+0x1d4>
   44b1c:	81fffe17 	ldw	r7,-8(r16)
   44b20:	31cdc83a 	sub	r6,r6,r7
   44b24:	30c00317 	ldw	r3,12(r6)
   44b28:	31400217 	ldw	r5,8(r6)
   44b2c:	11c5883a 	add	r2,r2,r7
   44b30:	28c00315 	stw	r3,12(r5)
   44b34:	19400215 	stw	r5,8(r3)
   44b38:	10c00054 	ori	r3,r2,1
   44b3c:	30c00115 	stw	r3,4(r6)
   44b40:	00c00174 	movhi	r3,5
   44b44:	18c5f204 	addi	r3,r3,6088
   44b48:	18c00017 	ldw	r3,0(r3)
   44b4c:	21800215 	stw	r6,8(r4)
   44b50:	10ffc036 	bltu	r2,r3,44a54 <__alt_data_end+0xfffe8694>
   44b54:	00800174 	movhi	r2,5
   44b58:	108d1204 	addi	r2,r2,13384
   44b5c:	11400017 	ldw	r5,0(r2)
   44b60:	8809883a 	mov	r4,r17
   44b64:	00448400 	call	44840 <_malloc_trim_r>
   44b68:	003fba06 	br	44a54 <__alt_data_end+0xfffe8694>
   44b6c:	28c9883a 	add	r4,r5,r3
   44b70:	21000117 	ldw	r4,4(r4)
   44b74:	2100004c 	andi	r4,r4,1
   44b78:	2000391e 	bne	r4,zero,44c60 <_free_r+0x2fc>
   44b7c:	29c00217 	ldw	r7,8(r5)
   44b80:	29000317 	ldw	r4,12(r5)
   44b84:	1885883a 	add	r2,r3,r2
   44b88:	10c00054 	ori	r3,r2,1
   44b8c:	39000315 	stw	r4,12(r7)
   44b90:	21c00215 	stw	r7,8(r4)
   44b94:	30c00115 	stw	r3,4(r6)
   44b98:	308d883a 	add	r6,r6,r2
   44b9c:	30800015 	stw	r2,0(r6)
   44ba0:	003fac06 	br	44a54 <__alt_data_end+0xfffe8694>
   44ba4:	00c00504 	movi	r3,20
   44ba8:	19401536 	bltu	r3,r5,44c00 <_free_r+0x29c>
   44bac:	28c01704 	addi	r3,r5,92
   44bb0:	18c7883a 	add	r3,r3,r3
   44bb4:	294016c4 	addi	r5,r5,91
   44bb8:	003fb406 	br	44a8c <__alt_data_end+0xfffe86cc>
   44bbc:	280bd0ba 	srai	r5,r5,2
   44bc0:	00c00044 	movi	r3,1
   44bc4:	38800117 	ldw	r2,4(r7)
   44bc8:	194a983a 	sll	r5,r3,r5
   44bcc:	2007883a 	mov	r3,r4
   44bd0:	2884b03a 	or	r2,r5,r2
   44bd4:	38800115 	stw	r2,4(r7)
   44bd8:	003fbb06 	br	44ac8 <__alt_data_end+0xfffe8708>
   44bdc:	21800515 	stw	r6,20(r4)
   44be0:	21800415 	stw	r6,16(r4)
   44be4:	10c00054 	ori	r3,r2,1
   44be8:	31c00315 	stw	r7,12(r6)
   44bec:	31c00215 	stw	r7,8(r6)
   44bf0:	30c00115 	stw	r3,4(r6)
   44bf4:	308d883a 	add	r6,r6,r2
   44bf8:	30800015 	stw	r2,0(r6)
   44bfc:	003f9506 	br	44a54 <__alt_data_end+0xfffe8694>
   44c00:	00c01504 	movi	r3,84
   44c04:	19400536 	bltu	r3,r5,44c1c <_free_r+0x2b8>
   44c08:	100ad33a 	srli	r5,r2,12
   44c0c:	28c01bc4 	addi	r3,r5,111
   44c10:	18c7883a 	add	r3,r3,r3
   44c14:	29401b84 	addi	r5,r5,110
   44c18:	003f9c06 	br	44a8c <__alt_data_end+0xfffe86cc>
   44c1c:	00c05504 	movi	r3,340
   44c20:	19400536 	bltu	r3,r5,44c38 <_free_r+0x2d4>
   44c24:	100ad3fa 	srli	r5,r2,15
   44c28:	28c01e04 	addi	r3,r5,120
   44c2c:	18c7883a 	add	r3,r3,r3
   44c30:	29401dc4 	addi	r5,r5,119
   44c34:	003f9506 	br	44a8c <__alt_data_end+0xfffe86cc>
   44c38:	00c15504 	movi	r3,1364
   44c3c:	19400536 	bltu	r3,r5,44c54 <_free_r+0x2f0>
   44c40:	100ad4ba 	srli	r5,r2,18
   44c44:	28c01f44 	addi	r3,r5,125
   44c48:	18c7883a 	add	r3,r3,r3
   44c4c:	29401f04 	addi	r5,r5,124
   44c50:	003f8e06 	br	44a8c <__alt_data_end+0xfffe86cc>
   44c54:	00c03f84 	movi	r3,254
   44c58:	01401f84 	movi	r5,126
   44c5c:	003f8b06 	br	44a8c <__alt_data_end+0xfffe86cc>
   44c60:	10c00054 	ori	r3,r2,1
   44c64:	30c00115 	stw	r3,4(r6)
   44c68:	308d883a 	add	r6,r6,r2
   44c6c:	30800015 	stw	r2,0(r6)
   44c70:	003f7806 	br	44a54 <__alt_data_end+0xfffe8694>

00044c74 <_fwalk>:
   44c74:	defff704 	addi	sp,sp,-36
   44c78:	dd000415 	stw	r20,16(sp)
   44c7c:	dfc00815 	stw	ra,32(sp)
   44c80:	ddc00715 	stw	r23,28(sp)
   44c84:	dd800615 	stw	r22,24(sp)
   44c88:	dd400515 	stw	r21,20(sp)
   44c8c:	dcc00315 	stw	r19,12(sp)
   44c90:	dc800215 	stw	r18,8(sp)
   44c94:	dc400115 	stw	r17,4(sp)
   44c98:	dc000015 	stw	r16,0(sp)
   44c9c:	2500b804 	addi	r20,r4,736
   44ca0:	a0002326 	beq	r20,zero,44d30 <_fwalk+0xbc>
   44ca4:	282b883a 	mov	r21,r5
   44ca8:	002f883a 	mov	r23,zero
   44cac:	05800044 	movi	r22,1
   44cb0:	04ffffc4 	movi	r19,-1
   44cb4:	a4400117 	ldw	r17,4(r20)
   44cb8:	a4800217 	ldw	r18,8(r20)
   44cbc:	8c7fffc4 	addi	r17,r17,-1
   44cc0:	88000d16 	blt	r17,zero,44cf8 <_fwalk+0x84>
   44cc4:	94000304 	addi	r16,r18,12
   44cc8:	94800384 	addi	r18,r18,14
   44ccc:	8080000b 	ldhu	r2,0(r16)
   44cd0:	8c7fffc4 	addi	r17,r17,-1
   44cd4:	813ffd04 	addi	r4,r16,-12
   44cd8:	b080042e 	bgeu	r22,r2,44cec <_fwalk+0x78>
   44cdc:	9080000f 	ldh	r2,0(r18)
   44ce0:	14c00226 	beq	r2,r19,44cec <_fwalk+0x78>
   44ce4:	a83ee83a 	callr	r21
   44ce8:	b8aeb03a 	or	r23,r23,r2
   44cec:	84001a04 	addi	r16,r16,104
   44cf0:	94801a04 	addi	r18,r18,104
   44cf4:	8cfff51e 	bne	r17,r19,44ccc <__alt_data_end+0xfffe890c>
   44cf8:	a5000017 	ldw	r20,0(r20)
   44cfc:	a03fed1e 	bne	r20,zero,44cb4 <__alt_data_end+0xfffe88f4>
   44d00:	b805883a 	mov	r2,r23
   44d04:	dfc00817 	ldw	ra,32(sp)
   44d08:	ddc00717 	ldw	r23,28(sp)
   44d0c:	dd800617 	ldw	r22,24(sp)
   44d10:	dd400517 	ldw	r21,20(sp)
   44d14:	dd000417 	ldw	r20,16(sp)
   44d18:	dcc00317 	ldw	r19,12(sp)
   44d1c:	dc800217 	ldw	r18,8(sp)
   44d20:	dc400117 	ldw	r17,4(sp)
   44d24:	dc000017 	ldw	r16,0(sp)
   44d28:	dec00904 	addi	sp,sp,36
   44d2c:	f800283a 	ret
   44d30:	002f883a 	mov	r23,zero
   44d34:	003ff206 	br	44d00 <__alt_data_end+0xfffe8940>

00044d38 <_fwalk_reent>:
   44d38:	defff704 	addi	sp,sp,-36
   44d3c:	dd000415 	stw	r20,16(sp)
   44d40:	dfc00815 	stw	ra,32(sp)
   44d44:	ddc00715 	stw	r23,28(sp)
   44d48:	dd800615 	stw	r22,24(sp)
   44d4c:	dd400515 	stw	r21,20(sp)
   44d50:	dcc00315 	stw	r19,12(sp)
   44d54:	dc800215 	stw	r18,8(sp)
   44d58:	dc400115 	stw	r17,4(sp)
   44d5c:	dc000015 	stw	r16,0(sp)
   44d60:	2500b804 	addi	r20,r4,736
   44d64:	a0002326 	beq	r20,zero,44df4 <_fwalk_reent+0xbc>
   44d68:	282b883a 	mov	r21,r5
   44d6c:	2027883a 	mov	r19,r4
   44d70:	002f883a 	mov	r23,zero
   44d74:	05800044 	movi	r22,1
   44d78:	04bfffc4 	movi	r18,-1
   44d7c:	a4400117 	ldw	r17,4(r20)
   44d80:	a4000217 	ldw	r16,8(r20)
   44d84:	8c7fffc4 	addi	r17,r17,-1
   44d88:	88000c16 	blt	r17,zero,44dbc <_fwalk_reent+0x84>
   44d8c:	84000304 	addi	r16,r16,12
   44d90:	8080000b 	ldhu	r2,0(r16)
   44d94:	8c7fffc4 	addi	r17,r17,-1
   44d98:	817ffd04 	addi	r5,r16,-12
   44d9c:	b080052e 	bgeu	r22,r2,44db4 <_fwalk_reent+0x7c>
   44da0:	8080008f 	ldh	r2,2(r16)
   44da4:	9809883a 	mov	r4,r19
   44da8:	14800226 	beq	r2,r18,44db4 <_fwalk_reent+0x7c>
   44dac:	a83ee83a 	callr	r21
   44db0:	b8aeb03a 	or	r23,r23,r2
   44db4:	84001a04 	addi	r16,r16,104
   44db8:	8cbff51e 	bne	r17,r18,44d90 <__alt_data_end+0xfffe89d0>
   44dbc:	a5000017 	ldw	r20,0(r20)
   44dc0:	a03fee1e 	bne	r20,zero,44d7c <__alt_data_end+0xfffe89bc>
   44dc4:	b805883a 	mov	r2,r23
   44dc8:	dfc00817 	ldw	ra,32(sp)
   44dcc:	ddc00717 	ldw	r23,28(sp)
   44dd0:	dd800617 	ldw	r22,24(sp)
   44dd4:	dd400517 	ldw	r21,20(sp)
   44dd8:	dd000417 	ldw	r20,16(sp)
   44ddc:	dcc00317 	ldw	r19,12(sp)
   44de0:	dc800217 	ldw	r18,8(sp)
   44de4:	dc400117 	ldw	r17,4(sp)
   44de8:	dc000017 	ldw	r16,0(sp)
   44dec:	dec00904 	addi	sp,sp,36
   44df0:	f800283a 	ret
   44df4:	002f883a 	mov	r23,zero
   44df8:	003ff206 	br	44dc4 <__alt_data_end+0xfffe8a04>

00044dfc <_setlocale_r>:
   44dfc:	30001b26 	beq	r6,zero,44e6c <_setlocale_r+0x70>
   44e00:	01400174 	movhi	r5,5
   44e04:	defffe04 	addi	sp,sp,-8
   44e08:	297e5104 	addi	r5,r5,-1724
   44e0c:	3009883a 	mov	r4,r6
   44e10:	dc000015 	stw	r16,0(sp)
   44e14:	dfc00115 	stw	ra,4(sp)
   44e18:	3021883a 	mov	r16,r6
   44e1c:	0046eb00 	call	46eb0 <strcmp>
   44e20:	1000061e 	bne	r2,zero,44e3c <_setlocale_r+0x40>
   44e24:	00800174 	movhi	r2,5
   44e28:	10be5004 	addi	r2,r2,-1728
   44e2c:	dfc00117 	ldw	ra,4(sp)
   44e30:	dc000017 	ldw	r16,0(sp)
   44e34:	dec00204 	addi	sp,sp,8
   44e38:	f800283a 	ret
   44e3c:	01400174 	movhi	r5,5
   44e40:	297e5004 	addi	r5,r5,-1728
   44e44:	8009883a 	mov	r4,r16
   44e48:	0046eb00 	call	46eb0 <strcmp>
   44e4c:	103ff526 	beq	r2,zero,44e24 <__alt_data_end+0xfffe8a64>
   44e50:	01400174 	movhi	r5,5
   44e54:	297e3b04 	addi	r5,r5,-1812
   44e58:	8009883a 	mov	r4,r16
   44e5c:	0046eb00 	call	46eb0 <strcmp>
   44e60:	103ff026 	beq	r2,zero,44e24 <__alt_data_end+0xfffe8a64>
   44e64:	0005883a 	mov	r2,zero
   44e68:	003ff006 	br	44e2c <__alt_data_end+0xfffe8a6c>
   44e6c:	00800174 	movhi	r2,5
   44e70:	10be5004 	addi	r2,r2,-1728
   44e74:	f800283a 	ret

00044e78 <__locale_charset>:
   44e78:	00800174 	movhi	r2,5
   44e7c:	10804e04 	addi	r2,r2,312
   44e80:	f800283a 	ret

00044e84 <__locale_mb_cur_max>:
   44e84:	00800174 	movhi	r2,5
   44e88:	1085f004 	addi	r2,r2,6080
   44e8c:	10800017 	ldw	r2,0(r2)
   44e90:	f800283a 	ret

00044e94 <__locale_msgcharset>:
   44e94:	00800174 	movhi	r2,5
   44e98:	10804604 	addi	r2,r2,280
   44e9c:	f800283a 	ret

00044ea0 <__locale_cjk_lang>:
   44ea0:	0005883a 	mov	r2,zero
   44ea4:	f800283a 	ret

00044ea8 <_localeconv_r>:
   44ea8:	00800174 	movhi	r2,5
   44eac:	10805604 	addi	r2,r2,344
   44eb0:	f800283a 	ret

00044eb4 <setlocale>:
   44eb4:	00800174 	movhi	r2,5
   44eb8:	1085ef04 	addi	r2,r2,6076
   44ebc:	280d883a 	mov	r6,r5
   44ec0:	200b883a 	mov	r5,r4
   44ec4:	11000017 	ldw	r4,0(r2)
   44ec8:	0044dfc1 	jmpi	44dfc <_setlocale_r>

00044ecc <localeconv>:
   44ecc:	00800174 	movhi	r2,5
   44ed0:	10805604 	addi	r2,r2,344
   44ed4:	f800283a 	ret

00044ed8 <__smakebuf_r>:
   44ed8:	2880030b 	ldhu	r2,12(r5)
   44edc:	10c0008c 	andi	r3,r2,2
   44ee0:	1800411e 	bne	r3,zero,44fe8 <__smakebuf_r+0x110>
   44ee4:	deffec04 	addi	sp,sp,-80
   44ee8:	dc000f15 	stw	r16,60(sp)
   44eec:	2821883a 	mov	r16,r5
   44ef0:	2940038f 	ldh	r5,14(r5)
   44ef4:	dc401015 	stw	r17,64(sp)
   44ef8:	dfc01315 	stw	ra,76(sp)
   44efc:	dcc01215 	stw	r19,72(sp)
   44f00:	dc801115 	stw	r18,68(sp)
   44f04:	2023883a 	mov	r17,r4
   44f08:	28001c16 	blt	r5,zero,44f7c <__smakebuf_r+0xa4>
   44f0c:	d80d883a 	mov	r6,sp
   44f10:	0048bb80 	call	48bb8 <_fstat_r>
   44f14:	10001816 	blt	r2,zero,44f78 <__smakebuf_r+0xa0>
   44f18:	d8800117 	ldw	r2,4(sp)
   44f1c:	00e00014 	movui	r3,32768
   44f20:	10bc000c 	andi	r2,r2,61440
   44f24:	14c80020 	cmpeqi	r19,r2,8192
   44f28:	10c03726 	beq	r2,r3,45008 <__smakebuf_r+0x130>
   44f2c:	80c0030b 	ldhu	r3,12(r16)
   44f30:	18c20014 	ori	r3,r3,2048
   44f34:	80c0030d 	sth	r3,12(r16)
   44f38:	00c80004 	movi	r3,8192
   44f3c:	10c0521e 	bne	r2,r3,45088 <__smakebuf_r+0x1b0>
   44f40:	8140038f 	ldh	r5,14(r16)
   44f44:	8809883a 	mov	r4,r17
   44f48:	00490dc0 	call	490dc <_isatty_r>
   44f4c:	10004c26 	beq	r2,zero,45080 <__smakebuf_r+0x1a8>
   44f50:	8080030b 	ldhu	r2,12(r16)
   44f54:	80c010c4 	addi	r3,r16,67
   44f58:	80c00015 	stw	r3,0(r16)
   44f5c:	10800054 	ori	r2,r2,1
   44f60:	8080030d 	sth	r2,12(r16)
   44f64:	00800044 	movi	r2,1
   44f68:	80c00415 	stw	r3,16(r16)
   44f6c:	80800515 	stw	r2,20(r16)
   44f70:	04810004 	movi	r18,1024
   44f74:	00000706 	br	44f94 <__smakebuf_r+0xbc>
   44f78:	8080030b 	ldhu	r2,12(r16)
   44f7c:	10c0200c 	andi	r3,r2,128
   44f80:	18001f1e 	bne	r3,zero,45000 <__smakebuf_r+0x128>
   44f84:	04810004 	movi	r18,1024
   44f88:	10820014 	ori	r2,r2,2048
   44f8c:	8080030d 	sth	r2,12(r16)
   44f90:	0027883a 	mov	r19,zero
   44f94:	900b883a 	mov	r5,r18
   44f98:	8809883a 	mov	r4,r17
   44f9c:	00450940 	call	45094 <_malloc_r>
   44fa0:	10002c26 	beq	r2,zero,45054 <__smakebuf_r+0x17c>
   44fa4:	80c0030b 	ldhu	r3,12(r16)
   44fa8:	01000134 	movhi	r4,4
   44fac:	21112604 	addi	r4,r4,17560
   44fb0:	89000f15 	stw	r4,60(r17)
   44fb4:	18c02014 	ori	r3,r3,128
   44fb8:	80c0030d 	sth	r3,12(r16)
   44fbc:	80800015 	stw	r2,0(r16)
   44fc0:	80800415 	stw	r2,16(r16)
   44fc4:	84800515 	stw	r18,20(r16)
   44fc8:	98001a1e 	bne	r19,zero,45034 <__smakebuf_r+0x15c>
   44fcc:	dfc01317 	ldw	ra,76(sp)
   44fd0:	dcc01217 	ldw	r19,72(sp)
   44fd4:	dc801117 	ldw	r18,68(sp)
   44fd8:	dc401017 	ldw	r17,64(sp)
   44fdc:	dc000f17 	ldw	r16,60(sp)
   44fe0:	dec01404 	addi	sp,sp,80
   44fe4:	f800283a 	ret
   44fe8:	288010c4 	addi	r2,r5,67
   44fec:	28800015 	stw	r2,0(r5)
   44ff0:	28800415 	stw	r2,16(r5)
   44ff4:	00800044 	movi	r2,1
   44ff8:	28800515 	stw	r2,20(r5)
   44ffc:	f800283a 	ret
   45000:	04801004 	movi	r18,64
   45004:	003fe006 	br	44f88 <__alt_data_end+0xfffe8bc8>
   45008:	81000a17 	ldw	r4,40(r16)
   4500c:	00c00134 	movhi	r3,4
   45010:	18db9304 	addi	r3,r3,28236
   45014:	20ffc51e 	bne	r4,r3,44f2c <__alt_data_end+0xfffe8b6c>
   45018:	8080030b 	ldhu	r2,12(r16)
   4501c:	04810004 	movi	r18,1024
   45020:	84801315 	stw	r18,76(r16)
   45024:	1484b03a 	or	r2,r2,r18
   45028:	8080030d 	sth	r2,12(r16)
   4502c:	0027883a 	mov	r19,zero
   45030:	003fd806 	br	44f94 <__alt_data_end+0xfffe8bd4>
   45034:	8140038f 	ldh	r5,14(r16)
   45038:	8809883a 	mov	r4,r17
   4503c:	00490dc0 	call	490dc <_isatty_r>
   45040:	103fe226 	beq	r2,zero,44fcc <__alt_data_end+0xfffe8c0c>
   45044:	8080030b 	ldhu	r2,12(r16)
   45048:	10800054 	ori	r2,r2,1
   4504c:	8080030d 	sth	r2,12(r16)
   45050:	003fde06 	br	44fcc <__alt_data_end+0xfffe8c0c>
   45054:	8080030b 	ldhu	r2,12(r16)
   45058:	10c0800c 	andi	r3,r2,512
   4505c:	183fdb1e 	bne	r3,zero,44fcc <__alt_data_end+0xfffe8c0c>
   45060:	10800094 	ori	r2,r2,2
   45064:	80c010c4 	addi	r3,r16,67
   45068:	8080030d 	sth	r2,12(r16)
   4506c:	00800044 	movi	r2,1
   45070:	80c00015 	stw	r3,0(r16)
   45074:	80c00415 	stw	r3,16(r16)
   45078:	80800515 	stw	r2,20(r16)
   4507c:	003fd306 	br	44fcc <__alt_data_end+0xfffe8c0c>
   45080:	04810004 	movi	r18,1024
   45084:	003fc306 	br	44f94 <__alt_data_end+0xfffe8bd4>
   45088:	0027883a 	mov	r19,zero
   4508c:	04810004 	movi	r18,1024
   45090:	003fc006 	br	44f94 <__alt_data_end+0xfffe8bd4>

00045094 <_malloc_r>:
   45094:	defff504 	addi	sp,sp,-44
   45098:	dc800315 	stw	r18,12(sp)
   4509c:	dfc00a15 	stw	ra,40(sp)
   450a0:	df000915 	stw	fp,36(sp)
   450a4:	ddc00815 	stw	r23,32(sp)
   450a8:	dd800715 	stw	r22,28(sp)
   450ac:	dd400615 	stw	r21,24(sp)
   450b0:	dd000515 	stw	r20,20(sp)
   450b4:	dcc00415 	stw	r19,16(sp)
   450b8:	dc400215 	stw	r17,8(sp)
   450bc:	dc000115 	stw	r16,4(sp)
   450c0:	288002c4 	addi	r2,r5,11
   450c4:	00c00584 	movi	r3,22
   450c8:	2025883a 	mov	r18,r4
   450cc:	18807f2e 	bgeu	r3,r2,452cc <_malloc_r+0x238>
   450d0:	047ffe04 	movi	r17,-8
   450d4:	1462703a 	and	r17,r2,r17
   450d8:	8800a316 	blt	r17,zero,45368 <_malloc_r+0x2d4>
   450dc:	8940a236 	bltu	r17,r5,45368 <_malloc_r+0x2d4>
   450e0:	004d7cc0 	call	4d7cc <__malloc_lock>
   450e4:	00807dc4 	movi	r2,503
   450e8:	1441e92e 	bgeu	r2,r17,45890 <_malloc_r+0x7fc>
   450ec:	8804d27a 	srli	r2,r17,9
   450f0:	1000a126 	beq	r2,zero,45378 <_malloc_r+0x2e4>
   450f4:	00c00104 	movi	r3,4
   450f8:	18811e36 	bltu	r3,r2,45574 <_malloc_r+0x4e0>
   450fc:	8804d1ba 	srli	r2,r17,6
   45100:	12000e44 	addi	r8,r2,57
   45104:	11c00e04 	addi	r7,r2,56
   45108:	4209883a 	add	r4,r8,r8
   4510c:	04c00174 	movhi	r19,5
   45110:	2109883a 	add	r4,r4,r4
   45114:	9cc06404 	addi	r19,r19,400
   45118:	2109883a 	add	r4,r4,r4
   4511c:	9909883a 	add	r4,r19,r4
   45120:	24000117 	ldw	r16,4(r4)
   45124:	213ffe04 	addi	r4,r4,-8
   45128:	24009726 	beq	r4,r16,45388 <_malloc_r+0x2f4>
   4512c:	80800117 	ldw	r2,4(r16)
   45130:	01bfff04 	movi	r6,-4
   45134:	014003c4 	movi	r5,15
   45138:	1184703a 	and	r2,r2,r6
   4513c:	1447c83a 	sub	r3,r2,r17
   45140:	28c00716 	blt	r5,r3,45160 <_malloc_r+0xcc>
   45144:	1800920e 	bge	r3,zero,45390 <_malloc_r+0x2fc>
   45148:	84000317 	ldw	r16,12(r16)
   4514c:	24008e26 	beq	r4,r16,45388 <_malloc_r+0x2f4>
   45150:	80800117 	ldw	r2,4(r16)
   45154:	1184703a 	and	r2,r2,r6
   45158:	1447c83a 	sub	r3,r2,r17
   4515c:	28fff90e 	bge	r5,r3,45144 <__alt_data_end+0xfffe8d84>
   45160:	3809883a 	mov	r4,r7
   45164:	01800174 	movhi	r6,5
   45168:	9c000417 	ldw	r16,16(r19)
   4516c:	31806404 	addi	r6,r6,400
   45170:	32000204 	addi	r8,r6,8
   45174:	82013426 	beq	r16,r8,45648 <_malloc_r+0x5b4>
   45178:	80c00117 	ldw	r3,4(r16)
   4517c:	00bfff04 	movi	r2,-4
   45180:	188e703a 	and	r7,r3,r2
   45184:	3c45c83a 	sub	r2,r7,r17
   45188:	00c003c4 	movi	r3,15
   4518c:	18811f16 	blt	r3,r2,4560c <_malloc_r+0x578>
   45190:	32000515 	stw	r8,20(r6)
   45194:	32000415 	stw	r8,16(r6)
   45198:	10007f0e 	bge	r2,zero,45398 <_malloc_r+0x304>
   4519c:	00807fc4 	movi	r2,511
   451a0:	11c0fd36 	bltu	r2,r7,45598 <_malloc_r+0x504>
   451a4:	3806d0fa 	srli	r3,r7,3
   451a8:	01c00044 	movi	r7,1
   451ac:	30800117 	ldw	r2,4(r6)
   451b0:	19400044 	addi	r5,r3,1
   451b4:	294b883a 	add	r5,r5,r5
   451b8:	1807d0ba 	srai	r3,r3,2
   451bc:	294b883a 	add	r5,r5,r5
   451c0:	294b883a 	add	r5,r5,r5
   451c4:	298b883a 	add	r5,r5,r6
   451c8:	38c6983a 	sll	r3,r7,r3
   451cc:	29c00017 	ldw	r7,0(r5)
   451d0:	2a7ffe04 	addi	r9,r5,-8
   451d4:	1886b03a 	or	r3,r3,r2
   451d8:	82400315 	stw	r9,12(r16)
   451dc:	81c00215 	stw	r7,8(r16)
   451e0:	30c00115 	stw	r3,4(r6)
   451e4:	2c000015 	stw	r16,0(r5)
   451e8:	3c000315 	stw	r16,12(r7)
   451ec:	2005d0ba 	srai	r2,r4,2
   451f0:	01400044 	movi	r5,1
   451f4:	288a983a 	sll	r5,r5,r2
   451f8:	19406f36 	bltu	r3,r5,453b8 <_malloc_r+0x324>
   451fc:	28c4703a 	and	r2,r5,r3
   45200:	10000a1e 	bne	r2,zero,4522c <_malloc_r+0x198>
   45204:	00bfff04 	movi	r2,-4
   45208:	294b883a 	add	r5,r5,r5
   4520c:	2088703a 	and	r4,r4,r2
   45210:	28c4703a 	and	r2,r5,r3
   45214:	21000104 	addi	r4,r4,4
   45218:	1000041e 	bne	r2,zero,4522c <_malloc_r+0x198>
   4521c:	294b883a 	add	r5,r5,r5
   45220:	28c4703a 	and	r2,r5,r3
   45224:	21000104 	addi	r4,r4,4
   45228:	103ffc26 	beq	r2,zero,4521c <__alt_data_end+0xfffe8e5c>
   4522c:	02bfff04 	movi	r10,-4
   45230:	024003c4 	movi	r9,15
   45234:	21800044 	addi	r6,r4,1
   45238:	318d883a 	add	r6,r6,r6
   4523c:	318d883a 	add	r6,r6,r6
   45240:	318d883a 	add	r6,r6,r6
   45244:	998d883a 	add	r6,r19,r6
   45248:	333ffe04 	addi	r12,r6,-8
   4524c:	2017883a 	mov	r11,r4
   45250:	31800104 	addi	r6,r6,4
   45254:	34000017 	ldw	r16,0(r6)
   45258:	31fffd04 	addi	r7,r6,-12
   4525c:	81c0041e 	bne	r16,r7,45270 <_malloc_r+0x1dc>
   45260:	0000fb06 	br	45650 <_malloc_r+0x5bc>
   45264:	1801030e 	bge	r3,zero,45674 <_malloc_r+0x5e0>
   45268:	84000317 	ldw	r16,12(r16)
   4526c:	81c0f826 	beq	r16,r7,45650 <_malloc_r+0x5bc>
   45270:	80800117 	ldw	r2,4(r16)
   45274:	1284703a 	and	r2,r2,r10
   45278:	1447c83a 	sub	r3,r2,r17
   4527c:	48fff90e 	bge	r9,r3,45264 <__alt_data_end+0xfffe8ea4>
   45280:	80800317 	ldw	r2,12(r16)
   45284:	81000217 	ldw	r4,8(r16)
   45288:	89400054 	ori	r5,r17,1
   4528c:	81400115 	stw	r5,4(r16)
   45290:	20800315 	stw	r2,12(r4)
   45294:	11000215 	stw	r4,8(r2)
   45298:	8463883a 	add	r17,r16,r17
   4529c:	9c400515 	stw	r17,20(r19)
   452a0:	9c400415 	stw	r17,16(r19)
   452a4:	18800054 	ori	r2,r3,1
   452a8:	88800115 	stw	r2,4(r17)
   452ac:	8a000315 	stw	r8,12(r17)
   452b0:	8a000215 	stw	r8,8(r17)
   452b4:	88e3883a 	add	r17,r17,r3
   452b8:	88c00015 	stw	r3,0(r17)
   452bc:	9009883a 	mov	r4,r18
   452c0:	004d7f00 	call	4d7f0 <__malloc_unlock>
   452c4:	80800204 	addi	r2,r16,8
   452c8:	00001b06 	br	45338 <_malloc_r+0x2a4>
   452cc:	04400404 	movi	r17,16
   452d0:	89402536 	bltu	r17,r5,45368 <_malloc_r+0x2d4>
   452d4:	004d7cc0 	call	4d7cc <__malloc_lock>
   452d8:	00800184 	movi	r2,6
   452dc:	01000084 	movi	r4,2
   452e0:	04c00174 	movhi	r19,5
   452e4:	1085883a 	add	r2,r2,r2
   452e8:	9cc06404 	addi	r19,r19,400
   452ec:	1085883a 	add	r2,r2,r2
   452f0:	9885883a 	add	r2,r19,r2
   452f4:	14000117 	ldw	r16,4(r2)
   452f8:	10fffe04 	addi	r3,r2,-8
   452fc:	80c0d926 	beq	r16,r3,45664 <_malloc_r+0x5d0>
   45300:	80c00117 	ldw	r3,4(r16)
   45304:	81000317 	ldw	r4,12(r16)
   45308:	00bfff04 	movi	r2,-4
   4530c:	1884703a 	and	r2,r3,r2
   45310:	81400217 	ldw	r5,8(r16)
   45314:	8085883a 	add	r2,r16,r2
   45318:	10c00117 	ldw	r3,4(r2)
   4531c:	29000315 	stw	r4,12(r5)
   45320:	21400215 	stw	r5,8(r4)
   45324:	18c00054 	ori	r3,r3,1
   45328:	10c00115 	stw	r3,4(r2)
   4532c:	9009883a 	mov	r4,r18
   45330:	004d7f00 	call	4d7f0 <__malloc_unlock>
   45334:	80800204 	addi	r2,r16,8
   45338:	dfc00a17 	ldw	ra,40(sp)
   4533c:	df000917 	ldw	fp,36(sp)
   45340:	ddc00817 	ldw	r23,32(sp)
   45344:	dd800717 	ldw	r22,28(sp)
   45348:	dd400617 	ldw	r21,24(sp)
   4534c:	dd000517 	ldw	r20,20(sp)
   45350:	dcc00417 	ldw	r19,16(sp)
   45354:	dc800317 	ldw	r18,12(sp)
   45358:	dc400217 	ldw	r17,8(sp)
   4535c:	dc000117 	ldw	r16,4(sp)
   45360:	dec00b04 	addi	sp,sp,44
   45364:	f800283a 	ret
   45368:	00800304 	movi	r2,12
   4536c:	90800015 	stw	r2,0(r18)
   45370:	0005883a 	mov	r2,zero
   45374:	003ff006 	br	45338 <__alt_data_end+0xfffe8f78>
   45378:	01002004 	movi	r4,128
   4537c:	02001004 	movi	r8,64
   45380:	01c00fc4 	movi	r7,63
   45384:	003f6106 	br	4510c <__alt_data_end+0xfffe8d4c>
   45388:	4009883a 	mov	r4,r8
   4538c:	003f7506 	br	45164 <__alt_data_end+0xfffe8da4>
   45390:	81000317 	ldw	r4,12(r16)
   45394:	003fde06 	br	45310 <__alt_data_end+0xfffe8f50>
   45398:	81c5883a 	add	r2,r16,r7
   4539c:	11400117 	ldw	r5,4(r2)
   453a0:	9009883a 	mov	r4,r18
   453a4:	29400054 	ori	r5,r5,1
   453a8:	11400115 	stw	r5,4(r2)
   453ac:	004d7f00 	call	4d7f0 <__malloc_unlock>
   453b0:	80800204 	addi	r2,r16,8
   453b4:	003fe006 	br	45338 <__alt_data_end+0xfffe8f78>
   453b8:	9c000217 	ldw	r16,8(r19)
   453bc:	00bfff04 	movi	r2,-4
   453c0:	85800117 	ldw	r22,4(r16)
   453c4:	b0ac703a 	and	r22,r22,r2
   453c8:	b4400336 	bltu	r22,r17,453d8 <_malloc_r+0x344>
   453cc:	b445c83a 	sub	r2,r22,r17
   453d0:	00c003c4 	movi	r3,15
   453d4:	18805d16 	blt	r3,r2,4554c <_malloc_r+0x4b8>
   453d8:	05c00174 	movhi	r23,5
   453dc:	00800174 	movhi	r2,5
   453e0:	108d1204 	addi	r2,r2,13384
   453e4:	bdc5f104 	addi	r23,r23,6084
   453e8:	15400017 	ldw	r21,0(r2)
   453ec:	b8c00017 	ldw	r3,0(r23)
   453f0:	00bfffc4 	movi	r2,-1
   453f4:	858d883a 	add	r6,r16,r22
   453f8:	8d6b883a 	add	r21,r17,r21
   453fc:	1880ea26 	beq	r3,r2,457a8 <_malloc_r+0x714>
   45400:	ad4403c4 	addi	r21,r21,4111
   45404:	00bc0004 	movi	r2,-4096
   45408:	a8aa703a 	and	r21,r21,r2
   4540c:	a80b883a 	mov	r5,r21
   45410:	9009883a 	mov	r4,r18
   45414:	d9800015 	stw	r6,0(sp)
   45418:	0046d200 	call	46d20 <_sbrk_r>
   4541c:	1029883a 	mov	r20,r2
   45420:	00bfffc4 	movi	r2,-1
   45424:	d9800017 	ldw	r6,0(sp)
   45428:	a080e826 	beq	r20,r2,457cc <_malloc_r+0x738>
   4542c:	a180a636 	bltu	r20,r6,456c8 <_malloc_r+0x634>
   45430:	07000174 	movhi	fp,5
   45434:	e70d1b04 	addi	fp,fp,13420
   45438:	e0800017 	ldw	r2,0(fp)
   4543c:	a887883a 	add	r3,r21,r2
   45440:	e0c00015 	stw	r3,0(fp)
   45444:	3500e626 	beq	r6,r20,457e0 <_malloc_r+0x74c>
   45448:	b9000017 	ldw	r4,0(r23)
   4544c:	00bfffc4 	movi	r2,-1
   45450:	2080ee26 	beq	r4,r2,4580c <_malloc_r+0x778>
   45454:	a185c83a 	sub	r2,r20,r6
   45458:	10c5883a 	add	r2,r2,r3
   4545c:	e0800015 	stw	r2,0(fp)
   45460:	a0c001cc 	andi	r3,r20,7
   45464:	1800bc26 	beq	r3,zero,45758 <_malloc_r+0x6c4>
   45468:	a0e9c83a 	sub	r20,r20,r3
   4546c:	00840204 	movi	r2,4104
   45470:	a5000204 	addi	r20,r20,8
   45474:	10c7c83a 	sub	r3,r2,r3
   45478:	a545883a 	add	r2,r20,r21
   4547c:	1083ffcc 	andi	r2,r2,4095
   45480:	18abc83a 	sub	r21,r3,r2
   45484:	a80b883a 	mov	r5,r21
   45488:	9009883a 	mov	r4,r18
   4548c:	0046d200 	call	46d20 <_sbrk_r>
   45490:	00ffffc4 	movi	r3,-1
   45494:	10c0e126 	beq	r2,r3,4581c <_malloc_r+0x788>
   45498:	1505c83a 	sub	r2,r2,r20
   4549c:	1545883a 	add	r2,r2,r21
   454a0:	10800054 	ori	r2,r2,1
   454a4:	e0c00017 	ldw	r3,0(fp)
   454a8:	9d000215 	stw	r20,8(r19)
   454ac:	a0800115 	stw	r2,4(r20)
   454b0:	a8c7883a 	add	r3,r21,r3
   454b4:	e0c00015 	stw	r3,0(fp)
   454b8:	84c00e26 	beq	r16,r19,454f4 <_malloc_r+0x460>
   454bc:	018003c4 	movi	r6,15
   454c0:	3580a72e 	bgeu	r6,r22,45760 <_malloc_r+0x6cc>
   454c4:	81400117 	ldw	r5,4(r16)
   454c8:	013ffe04 	movi	r4,-8
   454cc:	b0bffd04 	addi	r2,r22,-12
   454d0:	1104703a 	and	r2,r2,r4
   454d4:	2900004c 	andi	r4,r5,1
   454d8:	2088b03a 	or	r4,r4,r2
   454dc:	81000115 	stw	r4,4(r16)
   454e0:	01400144 	movi	r5,5
   454e4:	8089883a 	add	r4,r16,r2
   454e8:	21400115 	stw	r5,4(r4)
   454ec:	21400215 	stw	r5,8(r4)
   454f0:	3080cd36 	bltu	r6,r2,45828 <_malloc_r+0x794>
   454f4:	00800174 	movhi	r2,5
   454f8:	108d1104 	addi	r2,r2,13380
   454fc:	11000017 	ldw	r4,0(r2)
   45500:	20c0012e 	bgeu	r4,r3,45508 <_malloc_r+0x474>
   45504:	10c00015 	stw	r3,0(r2)
   45508:	00800174 	movhi	r2,5
   4550c:	108d1004 	addi	r2,r2,13376
   45510:	11000017 	ldw	r4,0(r2)
   45514:	9c000217 	ldw	r16,8(r19)
   45518:	20c0012e 	bgeu	r4,r3,45520 <_malloc_r+0x48c>
   4551c:	10c00015 	stw	r3,0(r2)
   45520:	80c00117 	ldw	r3,4(r16)
   45524:	00bfff04 	movi	r2,-4
   45528:	1886703a 	and	r3,r3,r2
   4552c:	1c45c83a 	sub	r2,r3,r17
   45530:	1c400236 	bltu	r3,r17,4553c <_malloc_r+0x4a8>
   45534:	00c003c4 	movi	r3,15
   45538:	18800416 	blt	r3,r2,4554c <_malloc_r+0x4b8>
   4553c:	9009883a 	mov	r4,r18
   45540:	004d7f00 	call	4d7f0 <__malloc_unlock>
   45544:	0005883a 	mov	r2,zero
   45548:	003f7b06 	br	45338 <__alt_data_end+0xfffe8f78>
   4554c:	88c00054 	ori	r3,r17,1
   45550:	80c00115 	stw	r3,4(r16)
   45554:	8463883a 	add	r17,r16,r17
   45558:	10800054 	ori	r2,r2,1
   4555c:	9c400215 	stw	r17,8(r19)
   45560:	88800115 	stw	r2,4(r17)
   45564:	9009883a 	mov	r4,r18
   45568:	004d7f00 	call	4d7f0 <__malloc_unlock>
   4556c:	80800204 	addi	r2,r16,8
   45570:	003f7106 	br	45338 <__alt_data_end+0xfffe8f78>
   45574:	00c00504 	movi	r3,20
   45578:	18804a2e 	bgeu	r3,r2,456a4 <_malloc_r+0x610>
   4557c:	00c01504 	movi	r3,84
   45580:	18806e36 	bltu	r3,r2,4573c <_malloc_r+0x6a8>
   45584:	8804d33a 	srli	r2,r17,12
   45588:	12001bc4 	addi	r8,r2,111
   4558c:	11c01b84 	addi	r7,r2,110
   45590:	4209883a 	add	r4,r8,r8
   45594:	003edd06 	br	4510c <__alt_data_end+0xfffe8d4c>
   45598:	3804d27a 	srli	r2,r7,9
   4559c:	00c00104 	movi	r3,4
   455a0:	1880442e 	bgeu	r3,r2,456b4 <_malloc_r+0x620>
   455a4:	00c00504 	movi	r3,20
   455a8:	18808136 	bltu	r3,r2,457b0 <_malloc_r+0x71c>
   455ac:	11401704 	addi	r5,r2,92
   455b0:	10c016c4 	addi	r3,r2,91
   455b4:	294b883a 	add	r5,r5,r5
   455b8:	294b883a 	add	r5,r5,r5
   455bc:	294b883a 	add	r5,r5,r5
   455c0:	994b883a 	add	r5,r19,r5
   455c4:	28800017 	ldw	r2,0(r5)
   455c8:	01800174 	movhi	r6,5
   455cc:	297ffe04 	addi	r5,r5,-8
   455d0:	31806404 	addi	r6,r6,400
   455d4:	28806526 	beq	r5,r2,4576c <_malloc_r+0x6d8>
   455d8:	01bfff04 	movi	r6,-4
   455dc:	10c00117 	ldw	r3,4(r2)
   455e0:	1986703a 	and	r3,r3,r6
   455e4:	38c0022e 	bgeu	r7,r3,455f0 <_malloc_r+0x55c>
   455e8:	10800217 	ldw	r2,8(r2)
   455ec:	28bffb1e 	bne	r5,r2,455dc <__alt_data_end+0xfffe921c>
   455f0:	11400317 	ldw	r5,12(r2)
   455f4:	98c00117 	ldw	r3,4(r19)
   455f8:	81400315 	stw	r5,12(r16)
   455fc:	80800215 	stw	r2,8(r16)
   45600:	2c000215 	stw	r16,8(r5)
   45604:	14000315 	stw	r16,12(r2)
   45608:	003ef806 	br	451ec <__alt_data_end+0xfffe8e2c>
   4560c:	88c00054 	ori	r3,r17,1
   45610:	80c00115 	stw	r3,4(r16)
   45614:	8463883a 	add	r17,r16,r17
   45618:	34400515 	stw	r17,20(r6)
   4561c:	34400415 	stw	r17,16(r6)
   45620:	10c00054 	ori	r3,r2,1
   45624:	8a000315 	stw	r8,12(r17)
   45628:	8a000215 	stw	r8,8(r17)
   4562c:	88c00115 	stw	r3,4(r17)
   45630:	88a3883a 	add	r17,r17,r2
   45634:	88800015 	stw	r2,0(r17)
   45638:	9009883a 	mov	r4,r18
   4563c:	004d7f00 	call	4d7f0 <__malloc_unlock>
   45640:	80800204 	addi	r2,r16,8
   45644:	003f3c06 	br	45338 <__alt_data_end+0xfffe8f78>
   45648:	30c00117 	ldw	r3,4(r6)
   4564c:	003ee706 	br	451ec <__alt_data_end+0xfffe8e2c>
   45650:	5ac00044 	addi	r11,r11,1
   45654:	588000cc 	andi	r2,r11,3
   45658:	31800204 	addi	r6,r6,8
   4565c:	103efd1e 	bne	r2,zero,45254 <__alt_data_end+0xfffe8e94>
   45660:	00002406 	br	456f4 <_malloc_r+0x660>
   45664:	14000317 	ldw	r16,12(r2)
   45668:	143f251e 	bne	r2,r16,45300 <__alt_data_end+0xfffe8f40>
   4566c:	21000084 	addi	r4,r4,2
   45670:	003ebc06 	br	45164 <__alt_data_end+0xfffe8da4>
   45674:	8085883a 	add	r2,r16,r2
   45678:	10c00117 	ldw	r3,4(r2)
   4567c:	81000317 	ldw	r4,12(r16)
   45680:	81400217 	ldw	r5,8(r16)
   45684:	18c00054 	ori	r3,r3,1
   45688:	10c00115 	stw	r3,4(r2)
   4568c:	29000315 	stw	r4,12(r5)
   45690:	21400215 	stw	r5,8(r4)
   45694:	9009883a 	mov	r4,r18
   45698:	004d7f00 	call	4d7f0 <__malloc_unlock>
   4569c:	80800204 	addi	r2,r16,8
   456a0:	003f2506 	br	45338 <__alt_data_end+0xfffe8f78>
   456a4:	12001704 	addi	r8,r2,92
   456a8:	11c016c4 	addi	r7,r2,91
   456ac:	4209883a 	add	r4,r8,r8
   456b0:	003e9606 	br	4510c <__alt_data_end+0xfffe8d4c>
   456b4:	3804d1ba 	srli	r2,r7,6
   456b8:	11400e44 	addi	r5,r2,57
   456bc:	10c00e04 	addi	r3,r2,56
   456c0:	294b883a 	add	r5,r5,r5
   456c4:	003fbc06 	br	455b8 <__alt_data_end+0xfffe91f8>
   456c8:	84ff5926 	beq	r16,r19,45430 <__alt_data_end+0xfffe9070>
   456cc:	00800174 	movhi	r2,5
   456d0:	10806404 	addi	r2,r2,400
   456d4:	14000217 	ldw	r16,8(r2)
   456d8:	00bfff04 	movi	r2,-4
   456dc:	80c00117 	ldw	r3,4(r16)
   456e0:	1886703a 	and	r3,r3,r2
   456e4:	003f9106 	br	4552c <__alt_data_end+0xfffe916c>
   456e8:	60800217 	ldw	r2,8(r12)
   456ec:	213fffc4 	addi	r4,r4,-1
   456f0:	1300651e 	bne	r2,r12,45888 <_malloc_r+0x7f4>
   456f4:	208000cc 	andi	r2,r4,3
   456f8:	633ffe04 	addi	r12,r12,-8
   456fc:	103ffa1e 	bne	r2,zero,456e8 <__alt_data_end+0xfffe9328>
   45700:	98800117 	ldw	r2,4(r19)
   45704:	0146303a 	nor	r3,zero,r5
   45708:	1884703a 	and	r2,r3,r2
   4570c:	98800115 	stw	r2,4(r19)
   45710:	294b883a 	add	r5,r5,r5
   45714:	117f2836 	bltu	r2,r5,453b8 <__alt_data_end+0xfffe8ff8>
   45718:	283f2726 	beq	r5,zero,453b8 <__alt_data_end+0xfffe8ff8>
   4571c:	2886703a 	and	r3,r5,r2
   45720:	5809883a 	mov	r4,r11
   45724:	183ec31e 	bne	r3,zero,45234 <__alt_data_end+0xfffe8e74>
   45728:	294b883a 	add	r5,r5,r5
   4572c:	2886703a 	and	r3,r5,r2
   45730:	21000104 	addi	r4,r4,4
   45734:	183ffc26 	beq	r3,zero,45728 <__alt_data_end+0xfffe9368>
   45738:	003ebe06 	br	45234 <__alt_data_end+0xfffe8e74>
   4573c:	00c05504 	movi	r3,340
   45740:	18801236 	bltu	r3,r2,4578c <_malloc_r+0x6f8>
   45744:	8804d3fa 	srli	r2,r17,15
   45748:	12001e04 	addi	r8,r2,120
   4574c:	11c01dc4 	addi	r7,r2,119
   45750:	4209883a 	add	r4,r8,r8
   45754:	003e6d06 	br	4510c <__alt_data_end+0xfffe8d4c>
   45758:	00c40004 	movi	r3,4096
   4575c:	003f4606 	br	45478 <__alt_data_end+0xfffe90b8>
   45760:	00800044 	movi	r2,1
   45764:	a0800115 	stw	r2,4(r20)
   45768:	003f7406 	br	4553c <__alt_data_end+0xfffe917c>
   4576c:	1805d0ba 	srai	r2,r3,2
   45770:	01c00044 	movi	r7,1
   45774:	30c00117 	ldw	r3,4(r6)
   45778:	388e983a 	sll	r7,r7,r2
   4577c:	2805883a 	mov	r2,r5
   45780:	38c6b03a 	or	r3,r7,r3
   45784:	30c00115 	stw	r3,4(r6)
   45788:	003f9b06 	br	455f8 <__alt_data_end+0xfffe9238>
   4578c:	00c15504 	movi	r3,1364
   45790:	18801a36 	bltu	r3,r2,457fc <_malloc_r+0x768>
   45794:	8804d4ba 	srli	r2,r17,18
   45798:	12001f44 	addi	r8,r2,125
   4579c:	11c01f04 	addi	r7,r2,124
   457a0:	4209883a 	add	r4,r8,r8
   457a4:	003e5906 	br	4510c <__alt_data_end+0xfffe8d4c>
   457a8:	ad400404 	addi	r21,r21,16
   457ac:	003f1706 	br	4540c <__alt_data_end+0xfffe904c>
   457b0:	00c01504 	movi	r3,84
   457b4:	18802336 	bltu	r3,r2,45844 <_malloc_r+0x7b0>
   457b8:	3804d33a 	srli	r2,r7,12
   457bc:	11401bc4 	addi	r5,r2,111
   457c0:	10c01b84 	addi	r3,r2,110
   457c4:	294b883a 	add	r5,r5,r5
   457c8:	003f7b06 	br	455b8 <__alt_data_end+0xfffe91f8>
   457cc:	9c000217 	ldw	r16,8(r19)
   457d0:	00bfff04 	movi	r2,-4
   457d4:	80c00117 	ldw	r3,4(r16)
   457d8:	1886703a 	and	r3,r3,r2
   457dc:	003f5306 	br	4552c <__alt_data_end+0xfffe916c>
   457e0:	3083ffcc 	andi	r2,r6,4095
   457e4:	103f181e 	bne	r2,zero,45448 <__alt_data_end+0xfffe9088>
   457e8:	99000217 	ldw	r4,8(r19)
   457ec:	b545883a 	add	r2,r22,r21
   457f0:	10800054 	ori	r2,r2,1
   457f4:	20800115 	stw	r2,4(r4)
   457f8:	003f3e06 	br	454f4 <__alt_data_end+0xfffe9134>
   457fc:	01003f84 	movi	r4,254
   45800:	02001fc4 	movi	r8,127
   45804:	01c01f84 	movi	r7,126
   45808:	003e4006 	br	4510c <__alt_data_end+0xfffe8d4c>
   4580c:	00800174 	movhi	r2,5
   45810:	1085f104 	addi	r2,r2,6084
   45814:	15000015 	stw	r20,0(r2)
   45818:	003f1106 	br	45460 <__alt_data_end+0xfffe90a0>
   4581c:	00800044 	movi	r2,1
   45820:	002b883a 	mov	r21,zero
   45824:	003f1f06 	br	454a4 <__alt_data_end+0xfffe90e4>
   45828:	81400204 	addi	r5,r16,8
   4582c:	9009883a 	mov	r4,r18
   45830:	00449640 	call	44964 <_free_r>
   45834:	00800174 	movhi	r2,5
   45838:	108d1b04 	addi	r2,r2,13420
   4583c:	10c00017 	ldw	r3,0(r2)
   45840:	003f2c06 	br	454f4 <__alt_data_end+0xfffe9134>
   45844:	00c05504 	movi	r3,340
   45848:	18800536 	bltu	r3,r2,45860 <_malloc_r+0x7cc>
   4584c:	3804d3fa 	srli	r2,r7,15
   45850:	11401e04 	addi	r5,r2,120
   45854:	10c01dc4 	addi	r3,r2,119
   45858:	294b883a 	add	r5,r5,r5
   4585c:	003f5606 	br	455b8 <__alt_data_end+0xfffe91f8>
   45860:	00c15504 	movi	r3,1364
   45864:	18800536 	bltu	r3,r2,4587c <_malloc_r+0x7e8>
   45868:	3804d4ba 	srli	r2,r7,18
   4586c:	11401f44 	addi	r5,r2,125
   45870:	10c01f04 	addi	r3,r2,124
   45874:	294b883a 	add	r5,r5,r5
   45878:	003f4f06 	br	455b8 <__alt_data_end+0xfffe91f8>
   4587c:	01403f84 	movi	r5,254
   45880:	00c01f84 	movi	r3,126
   45884:	003f4c06 	br	455b8 <__alt_data_end+0xfffe91f8>
   45888:	98800117 	ldw	r2,4(r19)
   4588c:	003fa006 	br	45710 <__alt_data_end+0xfffe9350>
   45890:	8808d0fa 	srli	r4,r17,3
   45894:	20800044 	addi	r2,r4,1
   45898:	1085883a 	add	r2,r2,r2
   4589c:	003e9006 	br	452e0 <__alt_data_end+0xfffe8f20>

000458a0 <memchr>:
   458a0:	208000cc 	andi	r2,r4,3
   458a4:	280f883a 	mov	r7,r5
   458a8:	10003426 	beq	r2,zero,4597c <memchr+0xdc>
   458ac:	30bfffc4 	addi	r2,r6,-1
   458b0:	30001a26 	beq	r6,zero,4591c <memchr+0x7c>
   458b4:	20c00003 	ldbu	r3,0(r4)
   458b8:	29803fcc 	andi	r6,r5,255
   458bc:	30c0051e 	bne	r6,r3,458d4 <memchr+0x34>
   458c0:	00001806 	br	45924 <memchr+0x84>
   458c4:	10001526 	beq	r2,zero,4591c <memchr+0x7c>
   458c8:	20c00003 	ldbu	r3,0(r4)
   458cc:	10bfffc4 	addi	r2,r2,-1
   458d0:	30c01426 	beq	r6,r3,45924 <memchr+0x84>
   458d4:	21000044 	addi	r4,r4,1
   458d8:	20c000cc 	andi	r3,r4,3
   458dc:	183ff91e 	bne	r3,zero,458c4 <__alt_data_end+0xfffe9504>
   458e0:	020000c4 	movi	r8,3
   458e4:	40801136 	bltu	r8,r2,4592c <memchr+0x8c>
   458e8:	10000c26 	beq	r2,zero,4591c <memchr+0x7c>
   458ec:	20c00003 	ldbu	r3,0(r4)
   458f0:	29403fcc 	andi	r5,r5,255
   458f4:	28c00b26 	beq	r5,r3,45924 <memchr+0x84>
   458f8:	20c00044 	addi	r3,r4,1
   458fc:	39803fcc 	andi	r6,r7,255
   45900:	2089883a 	add	r4,r4,r2
   45904:	00000306 	br	45914 <memchr+0x74>
   45908:	18c00044 	addi	r3,r3,1
   4590c:	197fffc3 	ldbu	r5,-1(r3)
   45910:	31400526 	beq	r6,r5,45928 <memchr+0x88>
   45914:	1805883a 	mov	r2,r3
   45918:	20fffb1e 	bne	r4,r3,45908 <__alt_data_end+0xfffe9548>
   4591c:	0005883a 	mov	r2,zero
   45920:	f800283a 	ret
   45924:	2005883a 	mov	r2,r4
   45928:	f800283a 	ret
   4592c:	28c03fcc 	andi	r3,r5,255
   45930:	1812923a 	slli	r9,r3,8
   45934:	02ffbff4 	movhi	r11,65279
   45938:	02a02074 	movhi	r10,32897
   4593c:	48d2b03a 	or	r9,r9,r3
   45940:	4806943a 	slli	r3,r9,16
   45944:	5affbfc4 	addi	r11,r11,-257
   45948:	52a02004 	addi	r10,r10,-32640
   4594c:	48d2b03a 	or	r9,r9,r3
   45950:	20c00017 	ldw	r3,0(r4)
   45954:	48c6f03a 	xor	r3,r9,r3
   45958:	1acd883a 	add	r6,r3,r11
   4595c:	00c6303a 	nor	r3,zero,r3
   45960:	30c6703a 	and	r3,r6,r3
   45964:	1a86703a 	and	r3,r3,r10
   45968:	183fe01e 	bne	r3,zero,458ec <__alt_data_end+0xfffe952c>
   4596c:	10bfff04 	addi	r2,r2,-4
   45970:	21000104 	addi	r4,r4,4
   45974:	40bff636 	bltu	r8,r2,45950 <__alt_data_end+0xfffe9590>
   45978:	003fdb06 	br	458e8 <__alt_data_end+0xfffe9528>
   4597c:	3005883a 	mov	r2,r6
   45980:	003fd706 	br	458e0 <__alt_data_end+0xfffe9520>

00045984 <memcpy>:
   45984:	defffd04 	addi	sp,sp,-12
   45988:	dfc00215 	stw	ra,8(sp)
   4598c:	dc400115 	stw	r17,4(sp)
   45990:	dc000015 	stw	r16,0(sp)
   45994:	00c003c4 	movi	r3,15
   45998:	2005883a 	mov	r2,r4
   4599c:	1980452e 	bgeu	r3,r6,45ab4 <memcpy+0x130>
   459a0:	2906b03a 	or	r3,r5,r4
   459a4:	18c000cc 	andi	r3,r3,3
   459a8:	1800441e 	bne	r3,zero,45abc <memcpy+0x138>
   459ac:	347ffc04 	addi	r17,r6,-16
   459b0:	8822d13a 	srli	r17,r17,4
   459b4:	28c00104 	addi	r3,r5,4
   459b8:	23400104 	addi	r13,r4,4
   459bc:	8820913a 	slli	r16,r17,4
   459c0:	2b000204 	addi	r12,r5,8
   459c4:	22c00204 	addi	r11,r4,8
   459c8:	84000504 	addi	r16,r16,20
   459cc:	2a800304 	addi	r10,r5,12
   459d0:	22400304 	addi	r9,r4,12
   459d4:	2c21883a 	add	r16,r5,r16
   459d8:	2811883a 	mov	r8,r5
   459dc:	200f883a 	mov	r7,r4
   459e0:	41000017 	ldw	r4,0(r8)
   459e4:	1fc00017 	ldw	ra,0(r3)
   459e8:	63c00017 	ldw	r15,0(r12)
   459ec:	39000015 	stw	r4,0(r7)
   459f0:	53800017 	ldw	r14,0(r10)
   459f4:	6fc00015 	stw	ra,0(r13)
   459f8:	5bc00015 	stw	r15,0(r11)
   459fc:	4b800015 	stw	r14,0(r9)
   45a00:	18c00404 	addi	r3,r3,16
   45a04:	39c00404 	addi	r7,r7,16
   45a08:	42000404 	addi	r8,r8,16
   45a0c:	6b400404 	addi	r13,r13,16
   45a10:	63000404 	addi	r12,r12,16
   45a14:	5ac00404 	addi	r11,r11,16
   45a18:	52800404 	addi	r10,r10,16
   45a1c:	4a400404 	addi	r9,r9,16
   45a20:	1c3fef1e 	bne	r3,r16,459e0 <__alt_data_end+0xfffe9620>
   45a24:	89c00044 	addi	r7,r17,1
   45a28:	380e913a 	slli	r7,r7,4
   45a2c:	310003cc 	andi	r4,r6,15
   45a30:	02c000c4 	movi	r11,3
   45a34:	11c7883a 	add	r3,r2,r7
   45a38:	29cb883a 	add	r5,r5,r7
   45a3c:	5900212e 	bgeu	r11,r4,45ac4 <memcpy+0x140>
   45a40:	1813883a 	mov	r9,r3
   45a44:	2811883a 	mov	r8,r5
   45a48:	200f883a 	mov	r7,r4
   45a4c:	42800017 	ldw	r10,0(r8)
   45a50:	4a400104 	addi	r9,r9,4
   45a54:	39ffff04 	addi	r7,r7,-4
   45a58:	4abfff15 	stw	r10,-4(r9)
   45a5c:	42000104 	addi	r8,r8,4
   45a60:	59fffa36 	bltu	r11,r7,45a4c <__alt_data_end+0xfffe968c>
   45a64:	213fff04 	addi	r4,r4,-4
   45a68:	2008d0ba 	srli	r4,r4,2
   45a6c:	318000cc 	andi	r6,r6,3
   45a70:	21000044 	addi	r4,r4,1
   45a74:	2109883a 	add	r4,r4,r4
   45a78:	2109883a 	add	r4,r4,r4
   45a7c:	1907883a 	add	r3,r3,r4
   45a80:	290b883a 	add	r5,r5,r4
   45a84:	30000626 	beq	r6,zero,45aa0 <memcpy+0x11c>
   45a88:	198d883a 	add	r6,r3,r6
   45a8c:	29c00003 	ldbu	r7,0(r5)
   45a90:	18c00044 	addi	r3,r3,1
   45a94:	29400044 	addi	r5,r5,1
   45a98:	19ffffc5 	stb	r7,-1(r3)
   45a9c:	19bffb1e 	bne	r3,r6,45a8c <__alt_data_end+0xfffe96cc>
   45aa0:	dfc00217 	ldw	ra,8(sp)
   45aa4:	dc400117 	ldw	r17,4(sp)
   45aa8:	dc000017 	ldw	r16,0(sp)
   45aac:	dec00304 	addi	sp,sp,12
   45ab0:	f800283a 	ret
   45ab4:	2007883a 	mov	r3,r4
   45ab8:	003ff206 	br	45a84 <__alt_data_end+0xfffe96c4>
   45abc:	2007883a 	mov	r3,r4
   45ac0:	003ff106 	br	45a88 <__alt_data_end+0xfffe96c8>
   45ac4:	200d883a 	mov	r6,r4
   45ac8:	003fee06 	br	45a84 <__alt_data_end+0xfffe96c4>

00045acc <memset>:
   45acc:	20c000cc 	andi	r3,r4,3
   45ad0:	2005883a 	mov	r2,r4
   45ad4:	18004426 	beq	r3,zero,45be8 <memset+0x11c>
   45ad8:	31ffffc4 	addi	r7,r6,-1
   45adc:	30004026 	beq	r6,zero,45be0 <memset+0x114>
   45ae0:	2813883a 	mov	r9,r5
   45ae4:	200d883a 	mov	r6,r4
   45ae8:	2007883a 	mov	r3,r4
   45aec:	00000406 	br	45b00 <memset+0x34>
   45af0:	3a3fffc4 	addi	r8,r7,-1
   45af4:	31800044 	addi	r6,r6,1
   45af8:	38003926 	beq	r7,zero,45be0 <memset+0x114>
   45afc:	400f883a 	mov	r7,r8
   45b00:	18c00044 	addi	r3,r3,1
   45b04:	32400005 	stb	r9,0(r6)
   45b08:	1a0000cc 	andi	r8,r3,3
   45b0c:	403ff81e 	bne	r8,zero,45af0 <__alt_data_end+0xfffe9730>
   45b10:	010000c4 	movi	r4,3
   45b14:	21c02d2e 	bgeu	r4,r7,45bcc <memset+0x100>
   45b18:	29003fcc 	andi	r4,r5,255
   45b1c:	200c923a 	slli	r6,r4,8
   45b20:	3108b03a 	or	r4,r6,r4
   45b24:	200c943a 	slli	r6,r4,16
   45b28:	218cb03a 	or	r6,r4,r6
   45b2c:	010003c4 	movi	r4,15
   45b30:	21c0182e 	bgeu	r4,r7,45b94 <memset+0xc8>
   45b34:	3b3ffc04 	addi	r12,r7,-16
   45b38:	6018d13a 	srli	r12,r12,4
   45b3c:	1a000104 	addi	r8,r3,4
   45b40:	1ac00204 	addi	r11,r3,8
   45b44:	6008913a 	slli	r4,r12,4
   45b48:	1a800304 	addi	r10,r3,12
   45b4c:	1813883a 	mov	r9,r3
   45b50:	21000504 	addi	r4,r4,20
   45b54:	1909883a 	add	r4,r3,r4
   45b58:	49800015 	stw	r6,0(r9)
   45b5c:	41800015 	stw	r6,0(r8)
   45b60:	59800015 	stw	r6,0(r11)
   45b64:	51800015 	stw	r6,0(r10)
   45b68:	42000404 	addi	r8,r8,16
   45b6c:	4a400404 	addi	r9,r9,16
   45b70:	5ac00404 	addi	r11,r11,16
   45b74:	52800404 	addi	r10,r10,16
   45b78:	413ff71e 	bne	r8,r4,45b58 <__alt_data_end+0xfffe9798>
   45b7c:	63000044 	addi	r12,r12,1
   45b80:	6018913a 	slli	r12,r12,4
   45b84:	39c003cc 	andi	r7,r7,15
   45b88:	010000c4 	movi	r4,3
   45b8c:	1b07883a 	add	r3,r3,r12
   45b90:	21c00e2e 	bgeu	r4,r7,45bcc <memset+0x100>
   45b94:	1813883a 	mov	r9,r3
   45b98:	3811883a 	mov	r8,r7
   45b9c:	010000c4 	movi	r4,3
   45ba0:	49800015 	stw	r6,0(r9)
   45ba4:	423fff04 	addi	r8,r8,-4
   45ba8:	4a400104 	addi	r9,r9,4
   45bac:	223ffc36 	bltu	r4,r8,45ba0 <__alt_data_end+0xfffe97e0>
   45bb0:	393fff04 	addi	r4,r7,-4
   45bb4:	2008d0ba 	srli	r4,r4,2
   45bb8:	39c000cc 	andi	r7,r7,3
   45bbc:	21000044 	addi	r4,r4,1
   45bc0:	2109883a 	add	r4,r4,r4
   45bc4:	2109883a 	add	r4,r4,r4
   45bc8:	1907883a 	add	r3,r3,r4
   45bcc:	38000526 	beq	r7,zero,45be4 <memset+0x118>
   45bd0:	19cf883a 	add	r7,r3,r7
   45bd4:	19400005 	stb	r5,0(r3)
   45bd8:	18c00044 	addi	r3,r3,1
   45bdc:	38fffd1e 	bne	r7,r3,45bd4 <__alt_data_end+0xfffe9814>
   45be0:	f800283a 	ret
   45be4:	f800283a 	ret
   45be8:	2007883a 	mov	r3,r4
   45bec:	300f883a 	mov	r7,r6
   45bf0:	003fc706 	br	45b10 <__alt_data_end+0xfffe9750>

00045bf4 <_Balloc>:
   45bf4:	20801317 	ldw	r2,76(r4)
   45bf8:	defffc04 	addi	sp,sp,-16
   45bfc:	dc400115 	stw	r17,4(sp)
   45c00:	dc000015 	stw	r16,0(sp)
   45c04:	dfc00315 	stw	ra,12(sp)
   45c08:	dc800215 	stw	r18,8(sp)
   45c0c:	2023883a 	mov	r17,r4
   45c10:	2821883a 	mov	r16,r5
   45c14:	10000f26 	beq	r2,zero,45c54 <_Balloc+0x60>
   45c18:	8407883a 	add	r3,r16,r16
   45c1c:	18c7883a 	add	r3,r3,r3
   45c20:	10c7883a 	add	r3,r2,r3
   45c24:	18800017 	ldw	r2,0(r3)
   45c28:	10001126 	beq	r2,zero,45c70 <_Balloc+0x7c>
   45c2c:	11000017 	ldw	r4,0(r2)
   45c30:	19000015 	stw	r4,0(r3)
   45c34:	10000415 	stw	zero,16(r2)
   45c38:	10000315 	stw	zero,12(r2)
   45c3c:	dfc00317 	ldw	ra,12(sp)
   45c40:	dc800217 	ldw	r18,8(sp)
   45c44:	dc400117 	ldw	r17,4(sp)
   45c48:	dc000017 	ldw	r16,0(sp)
   45c4c:	dec00404 	addi	sp,sp,16
   45c50:	f800283a 	ret
   45c54:	01800844 	movi	r6,33
   45c58:	01400104 	movi	r5,4
   45c5c:	00487d00 	call	487d0 <_calloc_r>
   45c60:	88801315 	stw	r2,76(r17)
   45c64:	103fec1e 	bne	r2,zero,45c18 <__alt_data_end+0xfffe9858>
   45c68:	0005883a 	mov	r2,zero
   45c6c:	003ff306 	br	45c3c <__alt_data_end+0xfffe987c>
   45c70:	01400044 	movi	r5,1
   45c74:	2c24983a 	sll	r18,r5,r16
   45c78:	8809883a 	mov	r4,r17
   45c7c:	91800144 	addi	r6,r18,5
   45c80:	318d883a 	add	r6,r6,r6
   45c84:	318d883a 	add	r6,r6,r6
   45c88:	00487d00 	call	487d0 <_calloc_r>
   45c8c:	103ff626 	beq	r2,zero,45c68 <__alt_data_end+0xfffe98a8>
   45c90:	14000115 	stw	r16,4(r2)
   45c94:	14800215 	stw	r18,8(r2)
   45c98:	003fe606 	br	45c34 <__alt_data_end+0xfffe9874>

00045c9c <_Bfree>:
   45c9c:	28000826 	beq	r5,zero,45cc0 <_Bfree+0x24>
   45ca0:	28c00117 	ldw	r3,4(r5)
   45ca4:	20801317 	ldw	r2,76(r4)
   45ca8:	18c7883a 	add	r3,r3,r3
   45cac:	18c7883a 	add	r3,r3,r3
   45cb0:	10c5883a 	add	r2,r2,r3
   45cb4:	10c00017 	ldw	r3,0(r2)
   45cb8:	28c00015 	stw	r3,0(r5)
   45cbc:	11400015 	stw	r5,0(r2)
   45cc0:	f800283a 	ret

00045cc4 <__multadd>:
   45cc4:	defff704 	addi	sp,sp,-36
   45cc8:	dc800215 	stw	r18,8(sp)
   45ccc:	2c800417 	ldw	r18,16(r5)
   45cd0:	dd800615 	stw	r22,24(sp)
   45cd4:	dd400515 	stw	r21,20(sp)
   45cd8:	dd000415 	stw	r20,16(sp)
   45cdc:	dcc00315 	stw	r19,12(sp)
   45ce0:	dc400115 	stw	r17,4(sp)
   45ce4:	dc000015 	stw	r16,0(sp)
   45ce8:	dfc00815 	stw	ra,32(sp)
   45cec:	ddc00715 	stw	r23,28(sp)
   45cf0:	2827883a 	mov	r19,r5
   45cf4:	2029883a 	mov	r20,r4
   45cf8:	3023883a 	mov	r17,r6
   45cfc:	3821883a 	mov	r16,r7
   45d00:	2d400504 	addi	r21,r5,20
   45d04:	002d883a 	mov	r22,zero
   45d08:	adc00017 	ldw	r23,0(r21)
   45d0c:	880b883a 	mov	r5,r17
   45d10:	ad400104 	addi	r21,r21,4
   45d14:	b93fffcc 	andi	r4,r23,65535
   45d18:	004a9640 	call	4a964 <__mulsi3>
   45d1c:	b808d43a 	srli	r4,r23,16
   45d20:	880b883a 	mov	r5,r17
   45d24:	1421883a 	add	r16,r2,r16
   45d28:	004a9640 	call	4a964 <__mulsi3>
   45d2c:	800ed43a 	srli	r7,r16,16
   45d30:	80ffffcc 	andi	r3,r16,65535
   45d34:	b5800044 	addi	r22,r22,1
   45d38:	11c5883a 	add	r2,r2,r7
   45d3c:	100e943a 	slli	r7,r2,16
   45d40:	1020d43a 	srli	r16,r2,16
   45d44:	38c7883a 	add	r3,r7,r3
   45d48:	a8ffff15 	stw	r3,-4(r21)
   45d4c:	b4bfee16 	blt	r22,r18,45d08 <__alt_data_end+0xfffe9948>
   45d50:	80000926 	beq	r16,zero,45d78 <__multadd+0xb4>
   45d54:	98800217 	ldw	r2,8(r19)
   45d58:	9080130e 	bge	r18,r2,45da8 <__multadd+0xe4>
   45d5c:	90800144 	addi	r2,r18,5
   45d60:	1085883a 	add	r2,r2,r2
   45d64:	1085883a 	add	r2,r2,r2
   45d68:	9885883a 	add	r2,r19,r2
   45d6c:	14000015 	stw	r16,0(r2)
   45d70:	94800044 	addi	r18,r18,1
   45d74:	9c800415 	stw	r18,16(r19)
   45d78:	9805883a 	mov	r2,r19
   45d7c:	dfc00817 	ldw	ra,32(sp)
   45d80:	ddc00717 	ldw	r23,28(sp)
   45d84:	dd800617 	ldw	r22,24(sp)
   45d88:	dd400517 	ldw	r21,20(sp)
   45d8c:	dd000417 	ldw	r20,16(sp)
   45d90:	dcc00317 	ldw	r19,12(sp)
   45d94:	dc800217 	ldw	r18,8(sp)
   45d98:	dc400117 	ldw	r17,4(sp)
   45d9c:	dc000017 	ldw	r16,0(sp)
   45da0:	dec00904 	addi	sp,sp,36
   45da4:	f800283a 	ret
   45da8:	99400117 	ldw	r5,4(r19)
   45dac:	a009883a 	mov	r4,r20
   45db0:	29400044 	addi	r5,r5,1
   45db4:	0045bf40 	call	45bf4 <_Balloc>
   45db8:	99800417 	ldw	r6,16(r19)
   45dbc:	99400304 	addi	r5,r19,12
   45dc0:	11000304 	addi	r4,r2,12
   45dc4:	31800084 	addi	r6,r6,2
   45dc8:	318d883a 	add	r6,r6,r6
   45dcc:	318d883a 	add	r6,r6,r6
   45dd0:	1023883a 	mov	r17,r2
   45dd4:	00459840 	call	45984 <memcpy>
   45dd8:	98000a26 	beq	r19,zero,45e04 <__multadd+0x140>
   45ddc:	98c00117 	ldw	r3,4(r19)
   45de0:	a0801317 	ldw	r2,76(r20)
   45de4:	18c7883a 	add	r3,r3,r3
   45de8:	18c7883a 	add	r3,r3,r3
   45dec:	10c5883a 	add	r2,r2,r3
   45df0:	10c00017 	ldw	r3,0(r2)
   45df4:	98c00015 	stw	r3,0(r19)
   45df8:	14c00015 	stw	r19,0(r2)
   45dfc:	8827883a 	mov	r19,r17
   45e00:	003fd606 	br	45d5c <__alt_data_end+0xfffe999c>
   45e04:	8827883a 	mov	r19,r17
   45e08:	003fd406 	br	45d5c <__alt_data_end+0xfffe999c>

00045e0c <__s2b>:
   45e0c:	defff904 	addi	sp,sp,-28
   45e10:	dc400115 	stw	r17,4(sp)
   45e14:	dc000015 	stw	r16,0(sp)
   45e18:	2023883a 	mov	r17,r4
   45e1c:	2821883a 	mov	r16,r5
   45e20:	39000204 	addi	r4,r7,8
   45e24:	01400244 	movi	r5,9
   45e28:	dcc00315 	stw	r19,12(sp)
   45e2c:	dc800215 	stw	r18,8(sp)
   45e30:	dfc00615 	stw	ra,24(sp)
   45e34:	dd400515 	stw	r21,20(sp)
   45e38:	dd000415 	stw	r20,16(sp)
   45e3c:	3825883a 	mov	r18,r7
   45e40:	3027883a 	mov	r19,r6
   45e44:	004a7b00 	call	4a7b0 <__divsi3>
   45e48:	00c00044 	movi	r3,1
   45e4c:	000b883a 	mov	r5,zero
   45e50:	1880030e 	bge	r3,r2,45e60 <__s2b+0x54>
   45e54:	18c7883a 	add	r3,r3,r3
   45e58:	29400044 	addi	r5,r5,1
   45e5c:	18bffd16 	blt	r3,r2,45e54 <__alt_data_end+0xfffe9a94>
   45e60:	8809883a 	mov	r4,r17
   45e64:	0045bf40 	call	45bf4 <_Balloc>
   45e68:	d8c00717 	ldw	r3,28(sp)
   45e6c:	10c00515 	stw	r3,20(r2)
   45e70:	00c00044 	movi	r3,1
   45e74:	10c00415 	stw	r3,16(r2)
   45e78:	00c00244 	movi	r3,9
   45e7c:	1cc0210e 	bge	r3,r19,45f04 <__s2b+0xf8>
   45e80:	80eb883a 	add	r21,r16,r3
   45e84:	a829883a 	mov	r20,r21
   45e88:	84e1883a 	add	r16,r16,r19
   45e8c:	a1c00007 	ldb	r7,0(r20)
   45e90:	01800284 	movi	r6,10
   45e94:	a5000044 	addi	r20,r20,1
   45e98:	100b883a 	mov	r5,r2
   45e9c:	39fff404 	addi	r7,r7,-48
   45ea0:	8809883a 	mov	r4,r17
   45ea4:	0045cc40 	call	45cc4 <__multadd>
   45ea8:	a43ff81e 	bne	r20,r16,45e8c <__alt_data_end+0xfffe9acc>
   45eac:	ace1883a 	add	r16,r21,r19
   45eb0:	843ffe04 	addi	r16,r16,-8
   45eb4:	9c800a0e 	bge	r19,r18,45ee0 <__s2b+0xd4>
   45eb8:	94e5c83a 	sub	r18,r18,r19
   45ebc:	84a5883a 	add	r18,r16,r18
   45ec0:	81c00007 	ldb	r7,0(r16)
   45ec4:	01800284 	movi	r6,10
   45ec8:	84000044 	addi	r16,r16,1
   45ecc:	100b883a 	mov	r5,r2
   45ed0:	39fff404 	addi	r7,r7,-48
   45ed4:	8809883a 	mov	r4,r17
   45ed8:	0045cc40 	call	45cc4 <__multadd>
   45edc:	84bff81e 	bne	r16,r18,45ec0 <__alt_data_end+0xfffe9b00>
   45ee0:	dfc00617 	ldw	ra,24(sp)
   45ee4:	dd400517 	ldw	r21,20(sp)
   45ee8:	dd000417 	ldw	r20,16(sp)
   45eec:	dcc00317 	ldw	r19,12(sp)
   45ef0:	dc800217 	ldw	r18,8(sp)
   45ef4:	dc400117 	ldw	r17,4(sp)
   45ef8:	dc000017 	ldw	r16,0(sp)
   45efc:	dec00704 	addi	sp,sp,28
   45f00:	f800283a 	ret
   45f04:	84000284 	addi	r16,r16,10
   45f08:	1827883a 	mov	r19,r3
   45f0c:	003fe906 	br	45eb4 <__alt_data_end+0xfffe9af4>

00045f10 <__hi0bits>:
   45f10:	20bfffec 	andhi	r2,r4,65535
   45f14:	1000141e 	bne	r2,zero,45f68 <__hi0bits+0x58>
   45f18:	2008943a 	slli	r4,r4,16
   45f1c:	00800404 	movi	r2,16
   45f20:	20ffc02c 	andhi	r3,r4,65280
   45f24:	1800021e 	bne	r3,zero,45f30 <__hi0bits+0x20>
   45f28:	2008923a 	slli	r4,r4,8
   45f2c:	10800204 	addi	r2,r2,8
   45f30:	20fc002c 	andhi	r3,r4,61440
   45f34:	1800021e 	bne	r3,zero,45f40 <__hi0bits+0x30>
   45f38:	2008913a 	slli	r4,r4,4
   45f3c:	10800104 	addi	r2,r2,4
   45f40:	20f0002c 	andhi	r3,r4,49152
   45f44:	1800031e 	bne	r3,zero,45f54 <__hi0bits+0x44>
   45f48:	2109883a 	add	r4,r4,r4
   45f4c:	10800084 	addi	r2,r2,2
   45f50:	2109883a 	add	r4,r4,r4
   45f54:	20000316 	blt	r4,zero,45f64 <__hi0bits+0x54>
   45f58:	2110002c 	andhi	r4,r4,16384
   45f5c:	2000041e 	bne	r4,zero,45f70 <__hi0bits+0x60>
   45f60:	00800804 	movi	r2,32
   45f64:	f800283a 	ret
   45f68:	0005883a 	mov	r2,zero
   45f6c:	003fec06 	br	45f20 <__alt_data_end+0xfffe9b60>
   45f70:	10800044 	addi	r2,r2,1
   45f74:	f800283a 	ret

00045f78 <__lo0bits>:
   45f78:	20c00017 	ldw	r3,0(r4)
   45f7c:	188001cc 	andi	r2,r3,7
   45f80:	10000826 	beq	r2,zero,45fa4 <__lo0bits+0x2c>
   45f84:	1880004c 	andi	r2,r3,1
   45f88:	1000211e 	bne	r2,zero,46010 <__lo0bits+0x98>
   45f8c:	1880008c 	andi	r2,r3,2
   45f90:	1000211e 	bne	r2,zero,46018 <__lo0bits+0xa0>
   45f94:	1806d0ba 	srli	r3,r3,2
   45f98:	00800084 	movi	r2,2
   45f9c:	20c00015 	stw	r3,0(r4)
   45fa0:	f800283a 	ret
   45fa4:	18bfffcc 	andi	r2,r3,65535
   45fa8:	10001326 	beq	r2,zero,45ff8 <__lo0bits+0x80>
   45fac:	0005883a 	mov	r2,zero
   45fb0:	19403fcc 	andi	r5,r3,255
   45fb4:	2800021e 	bne	r5,zero,45fc0 <__lo0bits+0x48>
   45fb8:	1806d23a 	srli	r3,r3,8
   45fbc:	10800204 	addi	r2,r2,8
   45fc0:	194003cc 	andi	r5,r3,15
   45fc4:	2800021e 	bne	r5,zero,45fd0 <__lo0bits+0x58>
   45fc8:	1806d13a 	srli	r3,r3,4
   45fcc:	10800104 	addi	r2,r2,4
   45fd0:	194000cc 	andi	r5,r3,3
   45fd4:	2800021e 	bne	r5,zero,45fe0 <__lo0bits+0x68>
   45fd8:	1806d0ba 	srli	r3,r3,2
   45fdc:	10800084 	addi	r2,r2,2
   45fe0:	1940004c 	andi	r5,r3,1
   45fe4:	2800081e 	bne	r5,zero,46008 <__lo0bits+0x90>
   45fe8:	1806d07a 	srli	r3,r3,1
   45fec:	1800051e 	bne	r3,zero,46004 <__lo0bits+0x8c>
   45ff0:	00800804 	movi	r2,32
   45ff4:	f800283a 	ret
   45ff8:	1806d43a 	srli	r3,r3,16
   45ffc:	00800404 	movi	r2,16
   46000:	003feb06 	br	45fb0 <__alt_data_end+0xfffe9bf0>
   46004:	10800044 	addi	r2,r2,1
   46008:	20c00015 	stw	r3,0(r4)
   4600c:	f800283a 	ret
   46010:	0005883a 	mov	r2,zero
   46014:	f800283a 	ret
   46018:	1806d07a 	srli	r3,r3,1
   4601c:	00800044 	movi	r2,1
   46020:	20c00015 	stw	r3,0(r4)
   46024:	f800283a 	ret

00046028 <__i2b>:
   46028:	defffd04 	addi	sp,sp,-12
   4602c:	dc000015 	stw	r16,0(sp)
   46030:	04000044 	movi	r16,1
   46034:	dc400115 	stw	r17,4(sp)
   46038:	2823883a 	mov	r17,r5
   4603c:	800b883a 	mov	r5,r16
   46040:	dfc00215 	stw	ra,8(sp)
   46044:	0045bf40 	call	45bf4 <_Balloc>
   46048:	14400515 	stw	r17,20(r2)
   4604c:	14000415 	stw	r16,16(r2)
   46050:	dfc00217 	ldw	ra,8(sp)
   46054:	dc400117 	ldw	r17,4(sp)
   46058:	dc000017 	ldw	r16,0(sp)
   4605c:	dec00304 	addi	sp,sp,12
   46060:	f800283a 	ret

00046064 <__multiply>:
   46064:	deffef04 	addi	sp,sp,-68
   46068:	dc400815 	stw	r17,32(sp)
   4606c:	dc000715 	stw	r16,28(sp)
   46070:	34400417 	ldw	r17,16(r6)
   46074:	2c000417 	ldw	r16,16(r5)
   46078:	dd800d15 	stw	r22,52(sp)
   4607c:	dc800915 	stw	r18,36(sp)
   46080:	dfc01015 	stw	ra,64(sp)
   46084:	df000f15 	stw	fp,60(sp)
   46088:	ddc00e15 	stw	r23,56(sp)
   4608c:	dd400c15 	stw	r21,48(sp)
   46090:	dd000b15 	stw	r20,44(sp)
   46094:	dcc00a15 	stw	r19,40(sp)
   46098:	2825883a 	mov	r18,r5
   4609c:	302d883a 	mov	r22,r6
   460a0:	8440050e 	bge	r16,r17,460b8 <__multiply+0x54>
   460a4:	8007883a 	mov	r3,r16
   460a8:	3025883a 	mov	r18,r6
   460ac:	8821883a 	mov	r16,r17
   460b0:	282d883a 	mov	r22,r5
   460b4:	1823883a 	mov	r17,r3
   460b8:	90800217 	ldw	r2,8(r18)
   460bc:	8447883a 	add	r3,r16,r17
   460c0:	d8c00215 	stw	r3,8(sp)
   460c4:	91400117 	ldw	r5,4(r18)
   460c8:	10c0010e 	bge	r2,r3,460d0 <__multiply+0x6c>
   460cc:	29400044 	addi	r5,r5,1
   460d0:	0045bf40 	call	45bf4 <_Balloc>
   460d4:	d8c00217 	ldw	r3,8(sp)
   460d8:	d8800615 	stw	r2,24(sp)
   460dc:	18eb883a 	add	r21,r3,r3
   460e0:	ad6b883a 	add	r21,r21,r21
   460e4:	10c00504 	addi	r3,r2,20
   460e8:	1d6b883a 	add	r21,r3,r21
   460ec:	d8c00115 	stw	r3,4(sp)
   460f0:	dd400315 	stw	r21,12(sp)
   460f4:	1805883a 	mov	r2,r3
   460f8:	1d40042e 	bgeu	r3,r21,4610c <__multiply+0xa8>
   460fc:	d8c00317 	ldw	r3,12(sp)
   46100:	10000015 	stw	zero,0(r2)
   46104:	10800104 	addi	r2,r2,4
   46108:	10fffc36 	bltu	r2,r3,460fc <__alt_data_end+0xfffe9d3c>
   4610c:	8c63883a 	add	r17,r17,r17
   46110:	b5800504 	addi	r22,r22,20
   46114:	8c63883a 	add	r17,r17,r17
   46118:	94800504 	addi	r18,r18,20
   4611c:	8421883a 	add	r16,r16,r16
   46120:	b463883a 	add	r17,r22,r17
   46124:	8421883a 	add	r16,r16,r16
   46128:	dd800015 	stw	r22,0(sp)
   4612c:	dc800415 	stw	r18,16(sp)
   46130:	dc400515 	stw	r17,20(sp)
   46134:	9429883a 	add	r20,r18,r16
   46138:	b4404f2e 	bgeu	r22,r17,46278 <__multiply+0x214>
   4613c:	d8c00017 	ldw	r3,0(sp)
   46140:	1c800017 	ldw	r18,0(r3)
   46144:	947fffcc 	andi	r17,r18,65535
   46148:	88001e26 	beq	r17,zero,461c4 <__multiply+0x160>
   4614c:	dd800117 	ldw	r22,4(sp)
   46150:	dd400417 	ldw	r21,16(sp)
   46154:	0027883a 	mov	r19,zero
   46158:	ac800017 	ldw	r18,0(r21)
   4615c:	b4000017 	ldw	r16,0(r22)
   46160:	880b883a 	mov	r5,r17
   46164:	913fffcc 	andi	r4,r18,65535
   46168:	004a9640 	call	4a964 <__mulsi3>
   4616c:	9008d43a 	srli	r4,r18,16
   46170:	84bfffcc 	andi	r18,r16,65535
   46174:	1485883a 	add	r2,r2,r18
   46178:	14e5883a 	add	r18,r2,r19
   4617c:	8020d43a 	srli	r16,r16,16
   46180:	9026d43a 	srli	r19,r18,16
   46184:	880b883a 	mov	r5,r17
   46188:	004a9640 	call	4a964 <__mulsi3>
   4618c:	1405883a 	add	r2,r2,r16
   46190:	14e1883a 	add	r16,r2,r19
   46194:	90ffffcc 	andi	r3,r18,65535
   46198:	8024943a 	slli	r18,r16,16
   4619c:	ad400104 	addi	r21,r21,4
   461a0:	b005883a 	mov	r2,r22
   461a4:	90c6b03a 	or	r3,r18,r3
   461a8:	b0c00015 	stw	r3,0(r22)
   461ac:	8026d43a 	srli	r19,r16,16
   461b0:	b5800104 	addi	r22,r22,4
   461b4:	ad3fe836 	bltu	r21,r20,46158 <__alt_data_end+0xfffe9d98>
   461b8:	d8c00017 	ldw	r3,0(sp)
   461bc:	14c00115 	stw	r19,4(r2)
   461c0:	1c800017 	ldw	r18,0(r3)
   461c4:	9024d43a 	srli	r18,r18,16
   461c8:	90002226 	beq	r18,zero,46254 <__multiply+0x1f0>
   461cc:	d8c00117 	ldw	r3,4(sp)
   461d0:	dd800417 	ldw	r22,16(sp)
   461d4:	002f883a 	mov	r23,zero
   461d8:	1f000017 	ldw	fp,0(r3)
   461dc:	1823883a 	mov	r17,r3
   461e0:	182b883a 	mov	r21,r3
   461e4:	e021883a 	mov	r16,fp
   461e8:	00000106 	br	461f0 <__multiply+0x18c>
   461ec:	982b883a 	mov	r21,r19
   461f0:	b100000b 	ldhu	r4,0(r22)
   461f4:	8020d43a 	srli	r16,r16,16
   461f8:	900b883a 	mov	r5,r18
   461fc:	004a9640 	call	4a964 <__mulsi3>
   46200:	1405883a 	add	r2,r2,r16
   46204:	15ef883a 	add	r23,r2,r23
   46208:	b804943a 	slli	r2,r23,16
   4620c:	e0ffffcc 	andi	r3,fp,65535
   46210:	8c400104 	addi	r17,r17,4
   46214:	10c6b03a 	or	r3,r2,r3
   46218:	88ffff15 	stw	r3,-4(r17)
   4621c:	b5800104 	addi	r22,r22,4
   46220:	b13fff17 	ldw	r4,-4(r22)
   46224:	acc00104 	addi	r19,r21,4
   46228:	900b883a 	mov	r5,r18
   4622c:	2008d43a 	srli	r4,r4,16
   46230:	9c000017 	ldw	r16,0(r19)
   46234:	004a9640 	call	4a964 <__mulsi3>
   46238:	b806d43a 	srli	r3,r23,16
   4623c:	813fffcc 	andi	r4,r16,65535
   46240:	1105883a 	add	r2,r2,r4
   46244:	10f9883a 	add	fp,r2,r3
   46248:	e02ed43a 	srli	r23,fp,16
   4624c:	b53fe736 	bltu	r22,r20,461ec <__alt_data_end+0xfffe9e2c>
   46250:	af000115 	stw	fp,4(r21)
   46254:	d8c00017 	ldw	r3,0(sp)
   46258:	d9000517 	ldw	r4,20(sp)
   4625c:	18c00104 	addi	r3,r3,4
   46260:	d8c00015 	stw	r3,0(sp)
   46264:	d8c00117 	ldw	r3,4(sp)
   46268:	18c00104 	addi	r3,r3,4
   4626c:	d8c00115 	stw	r3,4(sp)
   46270:	d8c00017 	ldw	r3,0(sp)
   46274:	193fb136 	bltu	r3,r4,4613c <__alt_data_end+0xfffe9d7c>
   46278:	d8c00217 	ldw	r3,8(sp)
   4627c:	00c00c0e 	bge	zero,r3,462b0 <__multiply+0x24c>
   46280:	d8c00317 	ldw	r3,12(sp)
   46284:	18bfff17 	ldw	r2,-4(r3)
   46288:	1d7fff04 	addi	r21,r3,-4
   4628c:	10000326 	beq	r2,zero,4629c <__multiply+0x238>
   46290:	00000706 	br	462b0 <__multiply+0x24c>
   46294:	a8800017 	ldw	r2,0(r21)
   46298:	1000051e 	bne	r2,zero,462b0 <__multiply+0x24c>
   4629c:	d8c00217 	ldw	r3,8(sp)
   462a0:	ad7fff04 	addi	r21,r21,-4
   462a4:	18ffffc4 	addi	r3,r3,-1
   462a8:	d8c00215 	stw	r3,8(sp)
   462ac:	183ff91e 	bne	r3,zero,46294 <__alt_data_end+0xfffe9ed4>
   462b0:	d8c00617 	ldw	r3,24(sp)
   462b4:	d9000217 	ldw	r4,8(sp)
   462b8:	1805883a 	mov	r2,r3
   462bc:	19000415 	stw	r4,16(r3)
   462c0:	dfc01017 	ldw	ra,64(sp)
   462c4:	df000f17 	ldw	fp,60(sp)
   462c8:	ddc00e17 	ldw	r23,56(sp)
   462cc:	dd800d17 	ldw	r22,52(sp)
   462d0:	dd400c17 	ldw	r21,48(sp)
   462d4:	dd000b17 	ldw	r20,44(sp)
   462d8:	dcc00a17 	ldw	r19,40(sp)
   462dc:	dc800917 	ldw	r18,36(sp)
   462e0:	dc400817 	ldw	r17,32(sp)
   462e4:	dc000717 	ldw	r16,28(sp)
   462e8:	dec01104 	addi	sp,sp,68
   462ec:	f800283a 	ret

000462f0 <__pow5mult>:
   462f0:	defffa04 	addi	sp,sp,-24
   462f4:	dcc00315 	stw	r19,12(sp)
   462f8:	dc000015 	stw	r16,0(sp)
   462fc:	dfc00515 	stw	ra,20(sp)
   46300:	dd000415 	stw	r20,16(sp)
   46304:	dc800215 	stw	r18,8(sp)
   46308:	dc400115 	stw	r17,4(sp)
   4630c:	308000cc 	andi	r2,r6,3
   46310:	3021883a 	mov	r16,r6
   46314:	2027883a 	mov	r19,r4
   46318:	10002f1e 	bne	r2,zero,463d8 <__pow5mult+0xe8>
   4631c:	2825883a 	mov	r18,r5
   46320:	8021d0ba 	srai	r16,r16,2
   46324:	80001a26 	beq	r16,zero,46390 <__pow5mult+0xa0>
   46328:	9c401217 	ldw	r17,72(r19)
   4632c:	8800061e 	bne	r17,zero,46348 <__pow5mult+0x58>
   46330:	00003406 	br	46404 <__pow5mult+0x114>
   46334:	8021d07a 	srai	r16,r16,1
   46338:	80001526 	beq	r16,zero,46390 <__pow5mult+0xa0>
   4633c:	88800017 	ldw	r2,0(r17)
   46340:	10001c26 	beq	r2,zero,463b4 <__pow5mult+0xc4>
   46344:	1023883a 	mov	r17,r2
   46348:	8080004c 	andi	r2,r16,1
   4634c:	103ff926 	beq	r2,zero,46334 <__alt_data_end+0xfffe9f74>
   46350:	880d883a 	mov	r6,r17
   46354:	900b883a 	mov	r5,r18
   46358:	9809883a 	mov	r4,r19
   4635c:	00460640 	call	46064 <__multiply>
   46360:	90001b26 	beq	r18,zero,463d0 <__pow5mult+0xe0>
   46364:	91000117 	ldw	r4,4(r18)
   46368:	98c01317 	ldw	r3,76(r19)
   4636c:	8021d07a 	srai	r16,r16,1
   46370:	2109883a 	add	r4,r4,r4
   46374:	2109883a 	add	r4,r4,r4
   46378:	1907883a 	add	r3,r3,r4
   4637c:	19000017 	ldw	r4,0(r3)
   46380:	91000015 	stw	r4,0(r18)
   46384:	1c800015 	stw	r18,0(r3)
   46388:	1025883a 	mov	r18,r2
   4638c:	803feb1e 	bne	r16,zero,4633c <__alt_data_end+0xfffe9f7c>
   46390:	9005883a 	mov	r2,r18
   46394:	dfc00517 	ldw	ra,20(sp)
   46398:	dd000417 	ldw	r20,16(sp)
   4639c:	dcc00317 	ldw	r19,12(sp)
   463a0:	dc800217 	ldw	r18,8(sp)
   463a4:	dc400117 	ldw	r17,4(sp)
   463a8:	dc000017 	ldw	r16,0(sp)
   463ac:	dec00604 	addi	sp,sp,24
   463b0:	f800283a 	ret
   463b4:	880d883a 	mov	r6,r17
   463b8:	880b883a 	mov	r5,r17
   463bc:	9809883a 	mov	r4,r19
   463c0:	00460640 	call	46064 <__multiply>
   463c4:	88800015 	stw	r2,0(r17)
   463c8:	10000015 	stw	zero,0(r2)
   463cc:	003fdd06 	br	46344 <__alt_data_end+0xfffe9f84>
   463d0:	1025883a 	mov	r18,r2
   463d4:	003fd706 	br	46334 <__alt_data_end+0xfffe9f74>
   463d8:	10bfffc4 	addi	r2,r2,-1
   463dc:	1085883a 	add	r2,r2,r2
   463e0:	00c00174 	movhi	r3,5
   463e4:	18fe5404 	addi	r3,r3,-1712
   463e8:	1085883a 	add	r2,r2,r2
   463ec:	1885883a 	add	r2,r3,r2
   463f0:	11800017 	ldw	r6,0(r2)
   463f4:	000f883a 	mov	r7,zero
   463f8:	0045cc40 	call	45cc4 <__multadd>
   463fc:	1025883a 	mov	r18,r2
   46400:	003fc706 	br	46320 <__alt_data_end+0xfffe9f60>
   46404:	05000044 	movi	r20,1
   46408:	a00b883a 	mov	r5,r20
   4640c:	9809883a 	mov	r4,r19
   46410:	0045bf40 	call	45bf4 <_Balloc>
   46414:	1023883a 	mov	r17,r2
   46418:	00809c44 	movi	r2,625
   4641c:	88800515 	stw	r2,20(r17)
   46420:	8d000415 	stw	r20,16(r17)
   46424:	9c401215 	stw	r17,72(r19)
   46428:	88000015 	stw	zero,0(r17)
   4642c:	003fc606 	br	46348 <__alt_data_end+0xfffe9f88>

00046430 <__lshift>:
   46430:	defff904 	addi	sp,sp,-28
   46434:	dd400515 	stw	r21,20(sp)
   46438:	dcc00315 	stw	r19,12(sp)
   4643c:	302bd17a 	srai	r21,r6,5
   46440:	2cc00417 	ldw	r19,16(r5)
   46444:	28800217 	ldw	r2,8(r5)
   46448:	dd000415 	stw	r20,16(sp)
   4644c:	ace7883a 	add	r19,r21,r19
   46450:	dc800215 	stw	r18,8(sp)
   46454:	dc400115 	stw	r17,4(sp)
   46458:	dc000015 	stw	r16,0(sp)
   4645c:	dfc00615 	stw	ra,24(sp)
   46460:	9c000044 	addi	r16,r19,1
   46464:	2823883a 	mov	r17,r5
   46468:	3029883a 	mov	r20,r6
   4646c:	2025883a 	mov	r18,r4
   46470:	29400117 	ldw	r5,4(r5)
   46474:	1400030e 	bge	r2,r16,46484 <__lshift+0x54>
   46478:	1085883a 	add	r2,r2,r2
   4647c:	29400044 	addi	r5,r5,1
   46480:	143ffd16 	blt	r2,r16,46478 <__alt_data_end+0xfffea0b8>
   46484:	9009883a 	mov	r4,r18
   46488:	0045bf40 	call	45bf4 <_Balloc>
   4648c:	10c00504 	addi	r3,r2,20
   46490:	0540070e 	bge	zero,r21,464b0 <__lshift+0x80>
   46494:	ad6b883a 	add	r21,r21,r21
   46498:	ad6b883a 	add	r21,r21,r21
   4649c:	1809883a 	mov	r4,r3
   464a0:	1d47883a 	add	r3,r3,r21
   464a4:	20000015 	stw	zero,0(r4)
   464a8:	21000104 	addi	r4,r4,4
   464ac:	193ffd1e 	bne	r3,r4,464a4 <__alt_data_end+0xfffea0e4>
   464b0:	8a000417 	ldw	r8,16(r17)
   464b4:	89000504 	addi	r4,r17,20
   464b8:	a18007cc 	andi	r6,r20,31
   464bc:	4211883a 	add	r8,r8,r8
   464c0:	4211883a 	add	r8,r8,r8
   464c4:	2211883a 	add	r8,r4,r8
   464c8:	30002326 	beq	r6,zero,46558 <__lshift+0x128>
   464cc:	02400804 	movi	r9,32
   464d0:	4993c83a 	sub	r9,r9,r6
   464d4:	000b883a 	mov	r5,zero
   464d8:	21c00017 	ldw	r7,0(r4)
   464dc:	1815883a 	mov	r10,r3
   464e0:	18c00104 	addi	r3,r3,4
   464e4:	398e983a 	sll	r7,r7,r6
   464e8:	21000104 	addi	r4,r4,4
   464ec:	394ab03a 	or	r5,r7,r5
   464f0:	197fff15 	stw	r5,-4(r3)
   464f4:	217fff17 	ldw	r5,-4(r4)
   464f8:	2a4ad83a 	srl	r5,r5,r9
   464fc:	223ff636 	bltu	r4,r8,464d8 <__alt_data_end+0xfffea118>
   46500:	51400115 	stw	r5,4(r10)
   46504:	28001a1e 	bne	r5,zero,46570 <__lshift+0x140>
   46508:	843fffc4 	addi	r16,r16,-1
   4650c:	14000415 	stw	r16,16(r2)
   46510:	88000826 	beq	r17,zero,46534 <__lshift+0x104>
   46514:	89000117 	ldw	r4,4(r17)
   46518:	90c01317 	ldw	r3,76(r18)
   4651c:	2109883a 	add	r4,r4,r4
   46520:	2109883a 	add	r4,r4,r4
   46524:	1907883a 	add	r3,r3,r4
   46528:	19000017 	ldw	r4,0(r3)
   4652c:	89000015 	stw	r4,0(r17)
   46530:	1c400015 	stw	r17,0(r3)
   46534:	dfc00617 	ldw	ra,24(sp)
   46538:	dd400517 	ldw	r21,20(sp)
   4653c:	dd000417 	ldw	r20,16(sp)
   46540:	dcc00317 	ldw	r19,12(sp)
   46544:	dc800217 	ldw	r18,8(sp)
   46548:	dc400117 	ldw	r17,4(sp)
   4654c:	dc000017 	ldw	r16,0(sp)
   46550:	dec00704 	addi	sp,sp,28
   46554:	f800283a 	ret
   46558:	21400017 	ldw	r5,0(r4)
   4655c:	18c00104 	addi	r3,r3,4
   46560:	21000104 	addi	r4,r4,4
   46564:	197fff15 	stw	r5,-4(r3)
   46568:	223ffb36 	bltu	r4,r8,46558 <__alt_data_end+0xfffea198>
   4656c:	003fe606 	br	46508 <__alt_data_end+0xfffea148>
   46570:	9c000084 	addi	r16,r19,2
   46574:	003fe406 	br	46508 <__alt_data_end+0xfffea148>

00046578 <__mcmp>:
   46578:	20800417 	ldw	r2,16(r4)
   4657c:	28c00417 	ldw	r3,16(r5)
   46580:	10c5c83a 	sub	r2,r2,r3
   46584:	1000111e 	bne	r2,zero,465cc <__mcmp+0x54>
   46588:	18c7883a 	add	r3,r3,r3
   4658c:	18c7883a 	add	r3,r3,r3
   46590:	21000504 	addi	r4,r4,20
   46594:	29400504 	addi	r5,r5,20
   46598:	20c5883a 	add	r2,r4,r3
   4659c:	28cb883a 	add	r5,r5,r3
   465a0:	00000106 	br	465a8 <__mcmp+0x30>
   465a4:	20800a2e 	bgeu	r4,r2,465d0 <__mcmp+0x58>
   465a8:	10bfff04 	addi	r2,r2,-4
   465ac:	297fff04 	addi	r5,r5,-4
   465b0:	11800017 	ldw	r6,0(r2)
   465b4:	28c00017 	ldw	r3,0(r5)
   465b8:	30fffa26 	beq	r6,r3,465a4 <__alt_data_end+0xfffea1e4>
   465bc:	30c00236 	bltu	r6,r3,465c8 <__mcmp+0x50>
   465c0:	00800044 	movi	r2,1
   465c4:	f800283a 	ret
   465c8:	00bfffc4 	movi	r2,-1
   465cc:	f800283a 	ret
   465d0:	0005883a 	mov	r2,zero
   465d4:	f800283a 	ret

000465d8 <__mdiff>:
   465d8:	28c00417 	ldw	r3,16(r5)
   465dc:	30800417 	ldw	r2,16(r6)
   465e0:	defffa04 	addi	sp,sp,-24
   465e4:	dcc00315 	stw	r19,12(sp)
   465e8:	dc800215 	stw	r18,8(sp)
   465ec:	dfc00515 	stw	ra,20(sp)
   465f0:	dd000415 	stw	r20,16(sp)
   465f4:	dc400115 	stw	r17,4(sp)
   465f8:	dc000015 	stw	r16,0(sp)
   465fc:	1887c83a 	sub	r3,r3,r2
   46600:	2825883a 	mov	r18,r5
   46604:	3027883a 	mov	r19,r6
   46608:	1800141e 	bne	r3,zero,4665c <__mdiff+0x84>
   4660c:	1085883a 	add	r2,r2,r2
   46610:	1085883a 	add	r2,r2,r2
   46614:	2a000504 	addi	r8,r5,20
   46618:	34000504 	addi	r16,r6,20
   4661c:	4087883a 	add	r3,r8,r2
   46620:	8085883a 	add	r2,r16,r2
   46624:	00000106 	br	4662c <__mdiff+0x54>
   46628:	40c0592e 	bgeu	r8,r3,46790 <__mdiff+0x1b8>
   4662c:	18ffff04 	addi	r3,r3,-4
   46630:	10bfff04 	addi	r2,r2,-4
   46634:	19c00017 	ldw	r7,0(r3)
   46638:	11400017 	ldw	r5,0(r2)
   4663c:	397ffa26 	beq	r7,r5,46628 <__alt_data_end+0xfffea268>
   46640:	3940592e 	bgeu	r7,r5,467a8 <__mdiff+0x1d0>
   46644:	9005883a 	mov	r2,r18
   46648:	4023883a 	mov	r17,r8
   4664c:	9825883a 	mov	r18,r19
   46650:	05000044 	movi	r20,1
   46654:	1027883a 	mov	r19,r2
   46658:	00000406 	br	4666c <__mdiff+0x94>
   4665c:	18005616 	blt	r3,zero,467b8 <__mdiff+0x1e0>
   46660:	34400504 	addi	r17,r6,20
   46664:	2c000504 	addi	r16,r5,20
   46668:	0029883a 	mov	r20,zero
   4666c:	91400117 	ldw	r5,4(r18)
   46670:	0045bf40 	call	45bf4 <_Balloc>
   46674:	92400417 	ldw	r9,16(r18)
   46678:	9b000417 	ldw	r12,16(r19)
   4667c:	12c00504 	addi	r11,r2,20
   46680:	4a51883a 	add	r8,r9,r9
   46684:	6319883a 	add	r12,r12,r12
   46688:	4211883a 	add	r8,r8,r8
   4668c:	6319883a 	add	r12,r12,r12
   46690:	15000315 	stw	r20,12(r2)
   46694:	8211883a 	add	r8,r16,r8
   46698:	8b19883a 	add	r12,r17,r12
   4669c:	0007883a 	mov	r3,zero
   466a0:	81400017 	ldw	r5,0(r16)
   466a4:	89c00017 	ldw	r7,0(r17)
   466a8:	59800104 	addi	r6,r11,4
   466ac:	293fffcc 	andi	r4,r5,65535
   466b0:	20c7883a 	add	r3,r4,r3
   466b4:	393fffcc 	andi	r4,r7,65535
   466b8:	1909c83a 	sub	r4,r3,r4
   466bc:	280ad43a 	srli	r5,r5,16
   466c0:	380ed43a 	srli	r7,r7,16
   466c4:	2007d43a 	srai	r3,r4,16
   466c8:	213fffcc 	andi	r4,r4,65535
   466cc:	29cbc83a 	sub	r5,r5,r7
   466d0:	28c7883a 	add	r3,r5,r3
   466d4:	180a943a 	slli	r5,r3,16
   466d8:	8c400104 	addi	r17,r17,4
   466dc:	84000104 	addi	r16,r16,4
   466e0:	2908b03a 	or	r4,r5,r4
   466e4:	59000015 	stw	r4,0(r11)
   466e8:	1807d43a 	srai	r3,r3,16
   466ec:	3015883a 	mov	r10,r6
   466f0:	3017883a 	mov	r11,r6
   466f4:	8b3fea36 	bltu	r17,r12,466a0 <__alt_data_end+0xfffea2e0>
   466f8:	8200162e 	bgeu	r16,r8,46754 <__mdiff+0x17c>
   466fc:	8017883a 	mov	r11,r16
   46700:	59400017 	ldw	r5,0(r11)
   46704:	31800104 	addi	r6,r6,4
   46708:	5ac00104 	addi	r11,r11,4
   4670c:	293fffcc 	andi	r4,r5,65535
   46710:	20c7883a 	add	r3,r4,r3
   46714:	280ed43a 	srli	r7,r5,16
   46718:	180bd43a 	srai	r5,r3,16
   4671c:	193fffcc 	andi	r4,r3,65535
   46720:	3947883a 	add	r3,r7,r5
   46724:	180a943a 	slli	r5,r3,16
   46728:	1807d43a 	srai	r3,r3,16
   4672c:	2908b03a 	or	r4,r5,r4
   46730:	313fff15 	stw	r4,-4(r6)
   46734:	5a3ff236 	bltu	r11,r8,46700 <__alt_data_end+0xfffea340>
   46738:	0406303a 	nor	r3,zero,r16
   4673c:	1a07883a 	add	r3,r3,r8
   46740:	1806d0ba 	srli	r3,r3,2
   46744:	18c00044 	addi	r3,r3,1
   46748:	18c7883a 	add	r3,r3,r3
   4674c:	18c7883a 	add	r3,r3,r3
   46750:	50d5883a 	add	r10,r10,r3
   46754:	50ffff04 	addi	r3,r10,-4
   46758:	2000041e 	bne	r4,zero,4676c <__mdiff+0x194>
   4675c:	18ffff04 	addi	r3,r3,-4
   46760:	19000017 	ldw	r4,0(r3)
   46764:	4a7fffc4 	addi	r9,r9,-1
   46768:	203ffc26 	beq	r4,zero,4675c <__alt_data_end+0xfffea39c>
   4676c:	12400415 	stw	r9,16(r2)
   46770:	dfc00517 	ldw	ra,20(sp)
   46774:	dd000417 	ldw	r20,16(sp)
   46778:	dcc00317 	ldw	r19,12(sp)
   4677c:	dc800217 	ldw	r18,8(sp)
   46780:	dc400117 	ldw	r17,4(sp)
   46784:	dc000017 	ldw	r16,0(sp)
   46788:	dec00604 	addi	sp,sp,24
   4678c:	f800283a 	ret
   46790:	000b883a 	mov	r5,zero
   46794:	0045bf40 	call	45bf4 <_Balloc>
   46798:	00c00044 	movi	r3,1
   4679c:	10c00415 	stw	r3,16(r2)
   467a0:	10000515 	stw	zero,20(r2)
   467a4:	003ff206 	br	46770 <__alt_data_end+0xfffea3b0>
   467a8:	8023883a 	mov	r17,r16
   467ac:	0029883a 	mov	r20,zero
   467b0:	4021883a 	mov	r16,r8
   467b4:	003fad06 	br	4666c <__alt_data_end+0xfffea2ac>
   467b8:	9005883a 	mov	r2,r18
   467bc:	94400504 	addi	r17,r18,20
   467c0:	9c000504 	addi	r16,r19,20
   467c4:	9825883a 	mov	r18,r19
   467c8:	05000044 	movi	r20,1
   467cc:	1027883a 	mov	r19,r2
   467d0:	003fa606 	br	4666c <__alt_data_end+0xfffea2ac>

000467d4 <__ulp>:
   467d4:	295ffc2c 	andhi	r5,r5,32752
   467d8:	00bf3034 	movhi	r2,64704
   467dc:	2887883a 	add	r3,r5,r2
   467e0:	00c0020e 	bge	zero,r3,467ec <__ulp+0x18>
   467e4:	0005883a 	mov	r2,zero
   467e8:	f800283a 	ret
   467ec:	00c7c83a 	sub	r3,zero,r3
   467f0:	1807d53a 	srai	r3,r3,20
   467f4:	008004c4 	movi	r2,19
   467f8:	10c00b0e 	bge	r2,r3,46828 <__ulp+0x54>
   467fc:	18bffb04 	addi	r2,r3,-20
   46800:	01000784 	movi	r4,30
   46804:	0007883a 	mov	r3,zero
   46808:	20800516 	blt	r4,r2,46820 <__ulp+0x4c>
   4680c:	010007c4 	movi	r4,31
   46810:	2089c83a 	sub	r4,r4,r2
   46814:	00800044 	movi	r2,1
   46818:	1104983a 	sll	r2,r2,r4
   4681c:	f800283a 	ret
   46820:	00800044 	movi	r2,1
   46824:	f800283a 	ret
   46828:	01400234 	movhi	r5,8
   4682c:	28c7d83a 	sra	r3,r5,r3
   46830:	0005883a 	mov	r2,zero
   46834:	f800283a 	ret

00046838 <__b2d>:
   46838:	defffa04 	addi	sp,sp,-24
   4683c:	dc000015 	stw	r16,0(sp)
   46840:	24000417 	ldw	r16,16(r4)
   46844:	dc400115 	stw	r17,4(sp)
   46848:	24400504 	addi	r17,r4,20
   4684c:	8421883a 	add	r16,r16,r16
   46850:	8421883a 	add	r16,r16,r16
   46854:	8c21883a 	add	r16,r17,r16
   46858:	dc800215 	stw	r18,8(sp)
   4685c:	84bfff17 	ldw	r18,-4(r16)
   46860:	dd000415 	stw	r20,16(sp)
   46864:	dcc00315 	stw	r19,12(sp)
   46868:	9009883a 	mov	r4,r18
   4686c:	2829883a 	mov	r20,r5
   46870:	dfc00515 	stw	ra,20(sp)
   46874:	0045f100 	call	45f10 <__hi0bits>
   46878:	00c00804 	movi	r3,32
   4687c:	1889c83a 	sub	r4,r3,r2
   46880:	a1000015 	stw	r4,0(r20)
   46884:	01000284 	movi	r4,10
   46888:	84ffff04 	addi	r19,r16,-4
   4688c:	20801216 	blt	r4,r2,468d8 <__b2d+0xa0>
   46890:	018002c4 	movi	r6,11
   46894:	308dc83a 	sub	r6,r6,r2
   46898:	9186d83a 	srl	r3,r18,r6
   4689c:	18cffc34 	orhi	r3,r3,16368
   468a0:	8cc0212e 	bgeu	r17,r19,46928 <__b2d+0xf0>
   468a4:	813ffe17 	ldw	r4,-8(r16)
   468a8:	218cd83a 	srl	r6,r4,r6
   468ac:	10800544 	addi	r2,r2,21
   468b0:	9084983a 	sll	r2,r18,r2
   468b4:	1184b03a 	or	r2,r2,r6
   468b8:	dfc00517 	ldw	ra,20(sp)
   468bc:	dd000417 	ldw	r20,16(sp)
   468c0:	dcc00317 	ldw	r19,12(sp)
   468c4:	dc800217 	ldw	r18,8(sp)
   468c8:	dc400117 	ldw	r17,4(sp)
   468cc:	dc000017 	ldw	r16,0(sp)
   468d0:	dec00604 	addi	sp,sp,24
   468d4:	f800283a 	ret
   468d8:	8cc00f2e 	bgeu	r17,r19,46918 <__b2d+0xe0>
   468dc:	117ffd44 	addi	r5,r2,-11
   468e0:	80bffe17 	ldw	r2,-8(r16)
   468e4:	28000e26 	beq	r5,zero,46920 <__b2d+0xe8>
   468e8:	1949c83a 	sub	r4,r3,r5
   468ec:	9164983a 	sll	r18,r18,r5
   468f0:	1106d83a 	srl	r3,r2,r4
   468f4:	81bffe04 	addi	r6,r16,-8
   468f8:	948ffc34 	orhi	r18,r18,16368
   468fc:	90c6b03a 	or	r3,r18,r3
   46900:	89800e2e 	bgeu	r17,r6,4693c <__b2d+0x104>
   46904:	81bffd17 	ldw	r6,-12(r16)
   46908:	1144983a 	sll	r2,r2,r5
   4690c:	310ad83a 	srl	r5,r6,r4
   46910:	2884b03a 	or	r2,r5,r2
   46914:	003fe806 	br	468b8 <__alt_data_end+0xfffea4f8>
   46918:	10bffd44 	addi	r2,r2,-11
   4691c:	1000041e 	bne	r2,zero,46930 <__b2d+0xf8>
   46920:	90cffc34 	orhi	r3,r18,16368
   46924:	003fe406 	br	468b8 <__alt_data_end+0xfffea4f8>
   46928:	000d883a 	mov	r6,zero
   4692c:	003fdf06 	br	468ac <__alt_data_end+0xfffea4ec>
   46930:	90a4983a 	sll	r18,r18,r2
   46934:	0005883a 	mov	r2,zero
   46938:	003ff906 	br	46920 <__alt_data_end+0xfffea560>
   4693c:	1144983a 	sll	r2,r2,r5
   46940:	003fdd06 	br	468b8 <__alt_data_end+0xfffea4f8>

00046944 <__d2b>:
   46944:	defff804 	addi	sp,sp,-32
   46948:	dc000215 	stw	r16,8(sp)
   4694c:	3021883a 	mov	r16,r6
   46950:	dc400315 	stw	r17,12(sp)
   46954:	8022907a 	slli	r17,r16,1
   46958:	dd000615 	stw	r20,24(sp)
   4695c:	2829883a 	mov	r20,r5
   46960:	01400044 	movi	r5,1
   46964:	dcc00515 	stw	r19,20(sp)
   46968:	dc800415 	stw	r18,16(sp)
   4696c:	dfc00715 	stw	ra,28(sp)
   46970:	3825883a 	mov	r18,r7
   46974:	8822d57a 	srli	r17,r17,21
   46978:	0045bf40 	call	45bf4 <_Balloc>
   4697c:	1027883a 	mov	r19,r2
   46980:	00800434 	movhi	r2,16
   46984:	10bfffc4 	addi	r2,r2,-1
   46988:	808c703a 	and	r6,r16,r2
   4698c:	88000126 	beq	r17,zero,46994 <__d2b+0x50>
   46990:	31800434 	orhi	r6,r6,16
   46994:	d9800015 	stw	r6,0(sp)
   46998:	a0002426 	beq	r20,zero,46a2c <__d2b+0xe8>
   4699c:	d9000104 	addi	r4,sp,4
   469a0:	dd000115 	stw	r20,4(sp)
   469a4:	0045f780 	call	45f78 <__lo0bits>
   469a8:	d8c00017 	ldw	r3,0(sp)
   469ac:	10002f1e 	bne	r2,zero,46a6c <__d2b+0x128>
   469b0:	d9000117 	ldw	r4,4(sp)
   469b4:	99000515 	stw	r4,20(r19)
   469b8:	1821003a 	cmpeq	r16,r3,zero
   469bc:	01000084 	movi	r4,2
   469c0:	2421c83a 	sub	r16,r4,r16
   469c4:	98c00615 	stw	r3,24(r19)
   469c8:	9c000415 	stw	r16,16(r19)
   469cc:	88001f1e 	bne	r17,zero,46a4c <__d2b+0x108>
   469d0:	10bef384 	addi	r2,r2,-1074
   469d4:	90800015 	stw	r2,0(r18)
   469d8:	00900034 	movhi	r2,16384
   469dc:	10bfffc4 	addi	r2,r2,-1
   469e0:	8085883a 	add	r2,r16,r2
   469e4:	1085883a 	add	r2,r2,r2
   469e8:	1085883a 	add	r2,r2,r2
   469ec:	9885883a 	add	r2,r19,r2
   469f0:	11000517 	ldw	r4,20(r2)
   469f4:	8020917a 	slli	r16,r16,5
   469f8:	0045f100 	call	45f10 <__hi0bits>
   469fc:	d8c00817 	ldw	r3,32(sp)
   46a00:	8085c83a 	sub	r2,r16,r2
   46a04:	18800015 	stw	r2,0(r3)
   46a08:	9805883a 	mov	r2,r19
   46a0c:	dfc00717 	ldw	ra,28(sp)
   46a10:	dd000617 	ldw	r20,24(sp)
   46a14:	dcc00517 	ldw	r19,20(sp)
   46a18:	dc800417 	ldw	r18,16(sp)
   46a1c:	dc400317 	ldw	r17,12(sp)
   46a20:	dc000217 	ldw	r16,8(sp)
   46a24:	dec00804 	addi	sp,sp,32
   46a28:	f800283a 	ret
   46a2c:	d809883a 	mov	r4,sp
   46a30:	0045f780 	call	45f78 <__lo0bits>
   46a34:	d8c00017 	ldw	r3,0(sp)
   46a38:	04000044 	movi	r16,1
   46a3c:	9c000415 	stw	r16,16(r19)
   46a40:	98c00515 	stw	r3,20(r19)
   46a44:	10800804 	addi	r2,r2,32
   46a48:	883fe126 	beq	r17,zero,469d0 <__alt_data_end+0xfffea610>
   46a4c:	00c00d44 	movi	r3,53
   46a50:	8c7ef344 	addi	r17,r17,-1075
   46a54:	88a3883a 	add	r17,r17,r2
   46a58:	1885c83a 	sub	r2,r3,r2
   46a5c:	d8c00817 	ldw	r3,32(sp)
   46a60:	94400015 	stw	r17,0(r18)
   46a64:	18800015 	stw	r2,0(r3)
   46a68:	003fe706 	br	46a08 <__alt_data_end+0xfffea648>
   46a6c:	01000804 	movi	r4,32
   46a70:	2089c83a 	sub	r4,r4,r2
   46a74:	1908983a 	sll	r4,r3,r4
   46a78:	d9400117 	ldw	r5,4(sp)
   46a7c:	1886d83a 	srl	r3,r3,r2
   46a80:	2148b03a 	or	r4,r4,r5
   46a84:	99000515 	stw	r4,20(r19)
   46a88:	d8c00015 	stw	r3,0(sp)
   46a8c:	003fca06 	br	469b8 <__alt_data_end+0xfffea5f8>

00046a90 <__ratio>:
   46a90:	defff904 	addi	sp,sp,-28
   46a94:	dc400315 	stw	r17,12(sp)
   46a98:	2823883a 	mov	r17,r5
   46a9c:	d9400104 	addi	r5,sp,4
   46aa0:	dfc00615 	stw	ra,24(sp)
   46aa4:	dcc00515 	stw	r19,20(sp)
   46aa8:	dc800415 	stw	r18,16(sp)
   46aac:	2027883a 	mov	r19,r4
   46ab0:	dc000215 	stw	r16,8(sp)
   46ab4:	00468380 	call	46838 <__b2d>
   46ab8:	d80b883a 	mov	r5,sp
   46abc:	8809883a 	mov	r4,r17
   46ac0:	1025883a 	mov	r18,r2
   46ac4:	1821883a 	mov	r16,r3
   46ac8:	00468380 	call	46838 <__b2d>
   46acc:	8a000417 	ldw	r8,16(r17)
   46ad0:	99000417 	ldw	r4,16(r19)
   46ad4:	d9400117 	ldw	r5,4(sp)
   46ad8:	2209c83a 	sub	r4,r4,r8
   46adc:	2010917a 	slli	r8,r4,5
   46ae0:	d9000017 	ldw	r4,0(sp)
   46ae4:	2909c83a 	sub	r4,r5,r4
   46ae8:	4109883a 	add	r4,r8,r4
   46aec:	01000e0e 	bge	zero,r4,46b28 <__ratio+0x98>
   46af0:	2008953a 	slli	r4,r4,20
   46af4:	2421883a 	add	r16,r4,r16
   46af8:	100d883a 	mov	r6,r2
   46afc:	180f883a 	mov	r7,r3
   46b00:	9009883a 	mov	r4,r18
   46b04:	800b883a 	mov	r5,r16
   46b08:	004b2380 	call	4b238 <__divdf3>
   46b0c:	dfc00617 	ldw	ra,24(sp)
   46b10:	dcc00517 	ldw	r19,20(sp)
   46b14:	dc800417 	ldw	r18,16(sp)
   46b18:	dc400317 	ldw	r17,12(sp)
   46b1c:	dc000217 	ldw	r16,8(sp)
   46b20:	dec00704 	addi	sp,sp,28
   46b24:	f800283a 	ret
   46b28:	2008953a 	slli	r4,r4,20
   46b2c:	1907c83a 	sub	r3,r3,r4
   46b30:	003ff106 	br	46af8 <__alt_data_end+0xfffea738>

00046b34 <_mprec_log10>:
   46b34:	defffe04 	addi	sp,sp,-8
   46b38:	dc000015 	stw	r16,0(sp)
   46b3c:	dfc00115 	stw	ra,4(sp)
   46b40:	008005c4 	movi	r2,23
   46b44:	2021883a 	mov	r16,r4
   46b48:	11000d0e 	bge	r2,r4,46b80 <_mprec_log10+0x4c>
   46b4c:	0005883a 	mov	r2,zero
   46b50:	00cffc34 	movhi	r3,16368
   46b54:	843fffc4 	addi	r16,r16,-1
   46b58:	000d883a 	mov	r6,zero
   46b5c:	01d00934 	movhi	r7,16420
   46b60:	1009883a 	mov	r4,r2
   46b64:	180b883a 	mov	r5,r3
   46b68:	004be600 	call	4be60 <__muldf3>
   46b6c:	803ff91e 	bne	r16,zero,46b54 <__alt_data_end+0xfffea794>
   46b70:	dfc00117 	ldw	ra,4(sp)
   46b74:	dc000017 	ldw	r16,0(sp)
   46b78:	dec00204 	addi	sp,sp,8
   46b7c:	f800283a 	ret
   46b80:	202090fa 	slli	r16,r4,3
   46b84:	00800174 	movhi	r2,5
   46b88:	10be6b04 	addi	r2,r2,-1620
   46b8c:	1421883a 	add	r16,r2,r16
   46b90:	80800017 	ldw	r2,0(r16)
   46b94:	80c00117 	ldw	r3,4(r16)
   46b98:	dfc00117 	ldw	ra,4(sp)
   46b9c:	dc000017 	ldw	r16,0(sp)
   46ba0:	dec00204 	addi	sp,sp,8
   46ba4:	f800283a 	ret

00046ba8 <__copybits>:
   46ba8:	297fffc4 	addi	r5,r5,-1
   46bac:	280fd17a 	srai	r7,r5,5
   46bb0:	30c00417 	ldw	r3,16(r6)
   46bb4:	30800504 	addi	r2,r6,20
   46bb8:	39c00044 	addi	r7,r7,1
   46bbc:	18c7883a 	add	r3,r3,r3
   46bc0:	39cf883a 	add	r7,r7,r7
   46bc4:	18c7883a 	add	r3,r3,r3
   46bc8:	39cf883a 	add	r7,r7,r7
   46bcc:	10c7883a 	add	r3,r2,r3
   46bd0:	21cf883a 	add	r7,r4,r7
   46bd4:	10c00d2e 	bgeu	r2,r3,46c0c <__copybits+0x64>
   46bd8:	200b883a 	mov	r5,r4
   46bdc:	12000017 	ldw	r8,0(r2)
   46be0:	29400104 	addi	r5,r5,4
   46be4:	10800104 	addi	r2,r2,4
   46be8:	2a3fff15 	stw	r8,-4(r5)
   46bec:	10fffb36 	bltu	r2,r3,46bdc <__alt_data_end+0xfffea81c>
   46bf0:	1985c83a 	sub	r2,r3,r6
   46bf4:	10bffac4 	addi	r2,r2,-21
   46bf8:	1004d0ba 	srli	r2,r2,2
   46bfc:	10800044 	addi	r2,r2,1
   46c00:	1085883a 	add	r2,r2,r2
   46c04:	1085883a 	add	r2,r2,r2
   46c08:	2089883a 	add	r4,r4,r2
   46c0c:	21c0032e 	bgeu	r4,r7,46c1c <__copybits+0x74>
   46c10:	20000015 	stw	zero,0(r4)
   46c14:	21000104 	addi	r4,r4,4
   46c18:	21fffd36 	bltu	r4,r7,46c10 <__alt_data_end+0xfffea850>
   46c1c:	f800283a 	ret

00046c20 <__any_on>:
   46c20:	20c00417 	ldw	r3,16(r4)
   46c24:	2805d17a 	srai	r2,r5,5
   46c28:	21000504 	addi	r4,r4,20
   46c2c:	18800d0e 	bge	r3,r2,46c64 <__any_on+0x44>
   46c30:	18c7883a 	add	r3,r3,r3
   46c34:	18c7883a 	add	r3,r3,r3
   46c38:	20c7883a 	add	r3,r4,r3
   46c3c:	20c0192e 	bgeu	r4,r3,46ca4 <__any_on+0x84>
   46c40:	18bfff17 	ldw	r2,-4(r3)
   46c44:	18ffff04 	addi	r3,r3,-4
   46c48:	1000041e 	bne	r2,zero,46c5c <__any_on+0x3c>
   46c4c:	20c0142e 	bgeu	r4,r3,46ca0 <__any_on+0x80>
   46c50:	18ffff04 	addi	r3,r3,-4
   46c54:	19400017 	ldw	r5,0(r3)
   46c58:	283ffc26 	beq	r5,zero,46c4c <__alt_data_end+0xfffea88c>
   46c5c:	00800044 	movi	r2,1
   46c60:	f800283a 	ret
   46c64:	10c00a0e 	bge	r2,r3,46c90 <__any_on+0x70>
   46c68:	1085883a 	add	r2,r2,r2
   46c6c:	1085883a 	add	r2,r2,r2
   46c70:	294007cc 	andi	r5,r5,31
   46c74:	2087883a 	add	r3,r4,r2
   46c78:	283ff026 	beq	r5,zero,46c3c <__alt_data_end+0xfffea87c>
   46c7c:	19800017 	ldw	r6,0(r3)
   46c80:	3144d83a 	srl	r2,r6,r5
   46c84:	114a983a 	sll	r5,r2,r5
   46c88:	317ff41e 	bne	r6,r5,46c5c <__alt_data_end+0xfffea89c>
   46c8c:	003feb06 	br	46c3c <__alt_data_end+0xfffea87c>
   46c90:	1085883a 	add	r2,r2,r2
   46c94:	1085883a 	add	r2,r2,r2
   46c98:	2087883a 	add	r3,r4,r2
   46c9c:	003fe706 	br	46c3c <__alt_data_end+0xfffea87c>
   46ca0:	f800283a 	ret
   46ca4:	0005883a 	mov	r2,zero
   46ca8:	f800283a 	ret

00046cac <__fpclassifyd>:
   46cac:	00a00034 	movhi	r2,32768
   46cb0:	10bfffc4 	addi	r2,r2,-1
   46cb4:	2884703a 	and	r2,r5,r2
   46cb8:	10000726 	beq	r2,zero,46cd8 <__fpclassifyd+0x2c>
   46cbc:	00fffc34 	movhi	r3,65520
   46cc0:	019ff834 	movhi	r6,32736
   46cc4:	28c7883a 	add	r3,r5,r3
   46cc8:	31bfffc4 	addi	r6,r6,-1
   46ccc:	30c00536 	bltu	r6,r3,46ce4 <__fpclassifyd+0x38>
   46cd0:	00800104 	movi	r2,4
   46cd4:	f800283a 	ret
   46cd8:	2000021e 	bne	r4,zero,46ce4 <__fpclassifyd+0x38>
   46cdc:	00800084 	movi	r2,2
   46ce0:	f800283a 	ret
   46ce4:	00dffc34 	movhi	r3,32752
   46ce8:	019ff834 	movhi	r6,32736
   46cec:	28cb883a 	add	r5,r5,r3
   46cf0:	31bfffc4 	addi	r6,r6,-1
   46cf4:	317ff62e 	bgeu	r6,r5,46cd0 <__alt_data_end+0xfffea910>
   46cf8:	01400434 	movhi	r5,16
   46cfc:	297fffc4 	addi	r5,r5,-1
   46d00:	28800236 	bltu	r5,r2,46d0c <__fpclassifyd+0x60>
   46d04:	008000c4 	movi	r2,3
   46d08:	f800283a 	ret
   46d0c:	10c00226 	beq	r2,r3,46d18 <__fpclassifyd+0x6c>
   46d10:	0005883a 	mov	r2,zero
   46d14:	f800283a 	ret
   46d18:	2005003a 	cmpeq	r2,r4,zero
   46d1c:	f800283a 	ret

00046d20 <_sbrk_r>:
   46d20:	defffd04 	addi	sp,sp,-12
   46d24:	dc000015 	stw	r16,0(sp)
   46d28:	04000174 	movhi	r16,5
   46d2c:	dc400115 	stw	r17,4(sp)
   46d30:	840d1304 	addi	r16,r16,13388
   46d34:	2023883a 	mov	r17,r4
   46d38:	2809883a 	mov	r4,r5
   46d3c:	dfc00215 	stw	ra,8(sp)
   46d40:	80000015 	stw	zero,0(r16)
   46d44:	004d9d80 	call	4d9d8 <sbrk>
   46d48:	00ffffc4 	movi	r3,-1
   46d4c:	10c00526 	beq	r2,r3,46d64 <_sbrk_r+0x44>
   46d50:	dfc00217 	ldw	ra,8(sp)
   46d54:	dc400117 	ldw	r17,4(sp)
   46d58:	dc000017 	ldw	r16,0(sp)
   46d5c:	dec00304 	addi	sp,sp,12
   46d60:	f800283a 	ret
   46d64:	80c00017 	ldw	r3,0(r16)
   46d68:	183ff926 	beq	r3,zero,46d50 <__alt_data_end+0xfffea990>
   46d6c:	88c00015 	stw	r3,0(r17)
   46d70:	003ff706 	br	46d50 <__alt_data_end+0xfffea990>

00046d74 <__sread>:
   46d74:	defffe04 	addi	sp,sp,-8
   46d78:	dc000015 	stw	r16,0(sp)
   46d7c:	2821883a 	mov	r16,r5
   46d80:	2940038f 	ldh	r5,14(r5)
   46d84:	dfc00115 	stw	ra,4(sp)
   46d88:	00492ec0 	call	492ec <_read_r>
   46d8c:	10000716 	blt	r2,zero,46dac <__sread+0x38>
   46d90:	80c01417 	ldw	r3,80(r16)
   46d94:	1887883a 	add	r3,r3,r2
   46d98:	80c01415 	stw	r3,80(r16)
   46d9c:	dfc00117 	ldw	ra,4(sp)
   46da0:	dc000017 	ldw	r16,0(sp)
   46da4:	dec00204 	addi	sp,sp,8
   46da8:	f800283a 	ret
   46dac:	80c0030b 	ldhu	r3,12(r16)
   46db0:	18fbffcc 	andi	r3,r3,61439
   46db4:	80c0030d 	sth	r3,12(r16)
   46db8:	dfc00117 	ldw	ra,4(sp)
   46dbc:	dc000017 	ldw	r16,0(sp)
   46dc0:	dec00204 	addi	sp,sp,8
   46dc4:	f800283a 	ret

00046dc8 <__seofread>:
   46dc8:	0005883a 	mov	r2,zero
   46dcc:	f800283a 	ret

00046dd0 <__swrite>:
   46dd0:	2880030b 	ldhu	r2,12(r5)
   46dd4:	defffb04 	addi	sp,sp,-20
   46dd8:	dcc00315 	stw	r19,12(sp)
   46ddc:	dc800215 	stw	r18,8(sp)
   46de0:	dc400115 	stw	r17,4(sp)
   46de4:	dc000015 	stw	r16,0(sp)
   46de8:	dfc00415 	stw	ra,16(sp)
   46dec:	10c0400c 	andi	r3,r2,256
   46df0:	2821883a 	mov	r16,r5
   46df4:	2023883a 	mov	r17,r4
   46df8:	3025883a 	mov	r18,r6
   46dfc:	3827883a 	mov	r19,r7
   46e00:	18000526 	beq	r3,zero,46e18 <__swrite+0x48>
   46e04:	2940038f 	ldh	r5,14(r5)
   46e08:	01c00084 	movi	r7,2
   46e0c:	000d883a 	mov	r6,zero
   46e10:	00491300 	call	49130 <_lseek_r>
   46e14:	8080030b 	ldhu	r2,12(r16)
   46e18:	8140038f 	ldh	r5,14(r16)
   46e1c:	10bbffcc 	andi	r2,r2,61439
   46e20:	980f883a 	mov	r7,r19
   46e24:	900d883a 	mov	r6,r18
   46e28:	8809883a 	mov	r4,r17
   46e2c:	8080030d 	sth	r2,12(r16)
   46e30:	dfc00417 	ldw	ra,16(sp)
   46e34:	dcc00317 	ldw	r19,12(sp)
   46e38:	dc800217 	ldw	r18,8(sp)
   46e3c:	dc400117 	ldw	r17,4(sp)
   46e40:	dc000017 	ldw	r16,0(sp)
   46e44:	dec00504 	addi	sp,sp,20
   46e48:	004871c1 	jmpi	4871c <_write_r>

00046e4c <__sseek>:
   46e4c:	defffe04 	addi	sp,sp,-8
   46e50:	dc000015 	stw	r16,0(sp)
   46e54:	2821883a 	mov	r16,r5
   46e58:	2940038f 	ldh	r5,14(r5)
   46e5c:	dfc00115 	stw	ra,4(sp)
   46e60:	00491300 	call	49130 <_lseek_r>
   46e64:	00ffffc4 	movi	r3,-1
   46e68:	10c00826 	beq	r2,r3,46e8c <__sseek+0x40>
   46e6c:	80c0030b 	ldhu	r3,12(r16)
   46e70:	80801415 	stw	r2,80(r16)
   46e74:	18c40014 	ori	r3,r3,4096
   46e78:	80c0030d 	sth	r3,12(r16)
   46e7c:	dfc00117 	ldw	ra,4(sp)
   46e80:	dc000017 	ldw	r16,0(sp)
   46e84:	dec00204 	addi	sp,sp,8
   46e88:	f800283a 	ret
   46e8c:	80c0030b 	ldhu	r3,12(r16)
   46e90:	18fbffcc 	andi	r3,r3,61439
   46e94:	80c0030d 	sth	r3,12(r16)
   46e98:	dfc00117 	ldw	ra,4(sp)
   46e9c:	dc000017 	ldw	r16,0(sp)
   46ea0:	dec00204 	addi	sp,sp,8
   46ea4:	f800283a 	ret

00046ea8 <__sclose>:
   46ea8:	2940038f 	ldh	r5,14(r5)
   46eac:	004877c1 	jmpi	4877c <_close_r>

00046eb0 <strcmp>:
   46eb0:	2144b03a 	or	r2,r4,r5
   46eb4:	108000cc 	andi	r2,r2,3
   46eb8:	1000171e 	bne	r2,zero,46f18 <strcmp+0x68>
   46ebc:	20800017 	ldw	r2,0(r4)
   46ec0:	28c00017 	ldw	r3,0(r5)
   46ec4:	10c0141e 	bne	r2,r3,46f18 <strcmp+0x68>
   46ec8:	027fbff4 	movhi	r9,65279
   46ecc:	4a7fbfc4 	addi	r9,r9,-257
   46ed0:	0086303a 	nor	r3,zero,r2
   46ed4:	02202074 	movhi	r8,32897
   46ed8:	1245883a 	add	r2,r2,r9
   46edc:	42202004 	addi	r8,r8,-32640
   46ee0:	10c4703a 	and	r2,r2,r3
   46ee4:	1204703a 	and	r2,r2,r8
   46ee8:	10000226 	beq	r2,zero,46ef4 <strcmp+0x44>
   46eec:	00002306 	br	46f7c <strcmp+0xcc>
   46ef0:	1000221e 	bne	r2,zero,46f7c <strcmp+0xcc>
   46ef4:	21000104 	addi	r4,r4,4
   46ef8:	20c00017 	ldw	r3,0(r4)
   46efc:	29400104 	addi	r5,r5,4
   46f00:	29800017 	ldw	r6,0(r5)
   46f04:	1a4f883a 	add	r7,r3,r9
   46f08:	00c4303a 	nor	r2,zero,r3
   46f0c:	3884703a 	and	r2,r7,r2
   46f10:	1204703a 	and	r2,r2,r8
   46f14:	19bff626 	beq	r3,r6,46ef0 <__alt_data_end+0xfffeab30>
   46f18:	20800003 	ldbu	r2,0(r4)
   46f1c:	10c03fcc 	andi	r3,r2,255
   46f20:	18c0201c 	xori	r3,r3,128
   46f24:	18ffe004 	addi	r3,r3,-128
   46f28:	18000c26 	beq	r3,zero,46f5c <strcmp+0xac>
   46f2c:	29800007 	ldb	r6,0(r5)
   46f30:	19800326 	beq	r3,r6,46f40 <strcmp+0x90>
   46f34:	00001306 	br	46f84 <strcmp+0xd4>
   46f38:	29800007 	ldb	r6,0(r5)
   46f3c:	11800b1e 	bne	r2,r6,46f6c <strcmp+0xbc>
   46f40:	21000044 	addi	r4,r4,1
   46f44:	20c00003 	ldbu	r3,0(r4)
   46f48:	29400044 	addi	r5,r5,1
   46f4c:	18803fcc 	andi	r2,r3,255
   46f50:	1080201c 	xori	r2,r2,128
   46f54:	10bfe004 	addi	r2,r2,-128
   46f58:	103ff71e 	bne	r2,zero,46f38 <__alt_data_end+0xfffeab78>
   46f5c:	0007883a 	mov	r3,zero
   46f60:	28800003 	ldbu	r2,0(r5)
   46f64:	1885c83a 	sub	r2,r3,r2
   46f68:	f800283a 	ret
   46f6c:	28800003 	ldbu	r2,0(r5)
   46f70:	18c03fcc 	andi	r3,r3,255
   46f74:	1885c83a 	sub	r2,r3,r2
   46f78:	f800283a 	ret
   46f7c:	0005883a 	mov	r2,zero
   46f80:	f800283a 	ret
   46f84:	10c03fcc 	andi	r3,r2,255
   46f88:	003ff506 	br	46f60 <__alt_data_end+0xfffeaba0>

00046f8c <strlen>:
   46f8c:	208000cc 	andi	r2,r4,3
   46f90:	10002026 	beq	r2,zero,47014 <strlen+0x88>
   46f94:	20800007 	ldb	r2,0(r4)
   46f98:	10002026 	beq	r2,zero,4701c <strlen+0x90>
   46f9c:	2005883a 	mov	r2,r4
   46fa0:	00000206 	br	46fac <strlen+0x20>
   46fa4:	10c00007 	ldb	r3,0(r2)
   46fa8:	18001826 	beq	r3,zero,4700c <strlen+0x80>
   46fac:	10800044 	addi	r2,r2,1
   46fb0:	10c000cc 	andi	r3,r2,3
   46fb4:	183ffb1e 	bne	r3,zero,46fa4 <__alt_data_end+0xfffeabe4>
   46fb8:	10c00017 	ldw	r3,0(r2)
   46fbc:	01ffbff4 	movhi	r7,65279
   46fc0:	39ffbfc4 	addi	r7,r7,-257
   46fc4:	00ca303a 	nor	r5,zero,r3
   46fc8:	01a02074 	movhi	r6,32897
   46fcc:	19c7883a 	add	r3,r3,r7
   46fd0:	31a02004 	addi	r6,r6,-32640
   46fd4:	1946703a 	and	r3,r3,r5
   46fd8:	1986703a 	and	r3,r3,r6
   46fdc:	1800091e 	bne	r3,zero,47004 <strlen+0x78>
   46fe0:	10800104 	addi	r2,r2,4
   46fe4:	10c00017 	ldw	r3,0(r2)
   46fe8:	19cb883a 	add	r5,r3,r7
   46fec:	00c6303a 	nor	r3,zero,r3
   46ff0:	28c6703a 	and	r3,r5,r3
   46ff4:	1986703a 	and	r3,r3,r6
   46ff8:	183ff926 	beq	r3,zero,46fe0 <__alt_data_end+0xfffeac20>
   46ffc:	00000106 	br	47004 <strlen+0x78>
   47000:	10800044 	addi	r2,r2,1
   47004:	10c00007 	ldb	r3,0(r2)
   47008:	183ffd1e 	bne	r3,zero,47000 <__alt_data_end+0xfffeac40>
   4700c:	1105c83a 	sub	r2,r2,r4
   47010:	f800283a 	ret
   47014:	2005883a 	mov	r2,r4
   47018:	003fe706 	br	46fb8 <__alt_data_end+0xfffeabf8>
   4701c:	0005883a 	mov	r2,zero
   47020:	f800283a 	ret

00047024 <__sprint_r.part.0>:
   47024:	28801917 	ldw	r2,100(r5)
   47028:	defff604 	addi	sp,sp,-40
   4702c:	dd400515 	stw	r21,20(sp)
   47030:	dfc00915 	stw	ra,36(sp)
   47034:	df000815 	stw	fp,32(sp)
   47038:	ddc00715 	stw	r23,28(sp)
   4703c:	dd800615 	stw	r22,24(sp)
   47040:	dd000415 	stw	r20,16(sp)
   47044:	dcc00315 	stw	r19,12(sp)
   47048:	dc800215 	stw	r18,8(sp)
   4704c:	dc400115 	stw	r17,4(sp)
   47050:	dc000015 	stw	r16,0(sp)
   47054:	1088000c 	andi	r2,r2,8192
   47058:	302b883a 	mov	r21,r6
   4705c:	10002e26 	beq	r2,zero,47118 <__sprint_r.part.0+0xf4>
   47060:	30800217 	ldw	r2,8(r6)
   47064:	35800017 	ldw	r22,0(r6)
   47068:	10002926 	beq	r2,zero,47110 <__sprint_r.part.0+0xec>
   4706c:	2827883a 	mov	r19,r5
   47070:	2029883a 	mov	r20,r4
   47074:	b5c00104 	addi	r23,r22,4
   47078:	04bfffc4 	movi	r18,-1
   4707c:	bc400017 	ldw	r17,0(r23)
   47080:	b4000017 	ldw	r16,0(r22)
   47084:	0039883a 	mov	fp,zero
   47088:	8822d0ba 	srli	r17,r17,2
   4708c:	8800031e 	bne	r17,zero,4709c <__sprint_r.part.0+0x78>
   47090:	00001806 	br	470f4 <__sprint_r.part.0+0xd0>
   47094:	84000104 	addi	r16,r16,4
   47098:	8f001526 	beq	r17,fp,470f0 <__sprint_r.part.0+0xcc>
   4709c:	81400017 	ldw	r5,0(r16)
   470a0:	980d883a 	mov	r6,r19
   470a4:	a009883a 	mov	r4,r20
   470a8:	0048b140 	call	48b14 <_fputwc_r>
   470ac:	e7000044 	addi	fp,fp,1
   470b0:	14bff81e 	bne	r2,r18,47094 <__alt_data_end+0xfffeacd4>
   470b4:	9005883a 	mov	r2,r18
   470b8:	a8000215 	stw	zero,8(r21)
   470bc:	a8000115 	stw	zero,4(r21)
   470c0:	dfc00917 	ldw	ra,36(sp)
   470c4:	df000817 	ldw	fp,32(sp)
   470c8:	ddc00717 	ldw	r23,28(sp)
   470cc:	dd800617 	ldw	r22,24(sp)
   470d0:	dd400517 	ldw	r21,20(sp)
   470d4:	dd000417 	ldw	r20,16(sp)
   470d8:	dcc00317 	ldw	r19,12(sp)
   470dc:	dc800217 	ldw	r18,8(sp)
   470e0:	dc400117 	ldw	r17,4(sp)
   470e4:	dc000017 	ldw	r16,0(sp)
   470e8:	dec00a04 	addi	sp,sp,40
   470ec:	f800283a 	ret
   470f0:	a8800217 	ldw	r2,8(r21)
   470f4:	8c63883a 	add	r17,r17,r17
   470f8:	8c63883a 	add	r17,r17,r17
   470fc:	1445c83a 	sub	r2,r2,r17
   47100:	a8800215 	stw	r2,8(r21)
   47104:	b5800204 	addi	r22,r22,8
   47108:	bdc00204 	addi	r23,r23,8
   4710c:	103fdb1e 	bne	r2,zero,4707c <__alt_data_end+0xfffeacbc>
   47110:	0005883a 	mov	r2,zero
   47114:	003fe806 	br	470b8 <__alt_data_end+0xfffeacf8>
   47118:	0048c140 	call	48c14 <__sfvwrite_r>
   4711c:	003fe606 	br	470b8 <__alt_data_end+0xfffeacf8>

00047120 <__sprint_r>:
   47120:	30c00217 	ldw	r3,8(r6)
   47124:	18000126 	beq	r3,zero,4712c <__sprint_r+0xc>
   47128:	00470241 	jmpi	47024 <__sprint_r.part.0>
   4712c:	30000115 	stw	zero,4(r6)
   47130:	0005883a 	mov	r2,zero
   47134:	f800283a 	ret

00047138 <___vfiprintf_internal_r>:
   47138:	deffca04 	addi	sp,sp,-216
   4713c:	dd403115 	stw	r21,196(sp)
   47140:	dfc03515 	stw	ra,212(sp)
   47144:	df003415 	stw	fp,208(sp)
   47148:	ddc03315 	stw	r23,204(sp)
   4714c:	dd803215 	stw	r22,200(sp)
   47150:	dd003015 	stw	r20,192(sp)
   47154:	dcc02f15 	stw	r19,188(sp)
   47158:	dc802e15 	stw	r18,184(sp)
   4715c:	dc402d15 	stw	r17,180(sp)
   47160:	dc002c15 	stw	r16,176(sp)
   47164:	d9002115 	stw	r4,132(sp)
   47168:	d9402015 	stw	r5,128(sp)
   4716c:	d9c02215 	stw	r7,136(sp)
   47170:	302b883a 	mov	r21,r6
   47174:	20000226 	beq	r4,zero,47180 <___vfiprintf_internal_r+0x48>
   47178:	20800e17 	ldw	r2,56(r4)
   4717c:	1000cf26 	beq	r2,zero,474bc <___vfiprintf_internal_r+0x384>
   47180:	d8c02017 	ldw	r3,128(sp)
   47184:	1880030b 	ldhu	r2,12(r3)
   47188:	10c8000c 	andi	r3,r2,8192
   4718c:	1800071e 	bne	r3,zero,471ac <___vfiprintf_internal_r+0x74>
   47190:	d9402017 	ldw	r5,128(sp)
   47194:	00f7ffc4 	movi	r3,-8193
   47198:	10880014 	ori	r2,r2,8192
   4719c:	29001917 	ldw	r4,100(r5)
   471a0:	2880030d 	sth	r2,12(r5)
   471a4:	20c6703a 	and	r3,r4,r3
   471a8:	28c01915 	stw	r3,100(r5)
   471ac:	10c0020c 	andi	r3,r2,8
   471b0:	1800a526 	beq	r3,zero,47448 <___vfiprintf_internal_r+0x310>
   471b4:	d9002017 	ldw	r4,128(sp)
   471b8:	20c00417 	ldw	r3,16(r4)
   471bc:	1800a226 	beq	r3,zero,47448 <___vfiprintf_internal_r+0x310>
   471c0:	1080068c 	andi	r2,r2,26
   471c4:	00c00284 	movi	r3,10
   471c8:	10c0a826 	beq	r2,r3,4746c <___vfiprintf_internal_r+0x334>
   471cc:	d9001a04 	addi	r4,sp,104
   471d0:	d94019c4 	addi	r5,sp,103
   471d4:	04800174 	movhi	r18,5
   471d8:	2145c83a 	sub	r2,r4,r5
   471dc:	94be9d04 	addi	r18,r18,-1420
   471e0:	d9001e15 	stw	r4,120(sp)
   471e4:	d9401f15 	stw	r5,124(sp)
   471e8:	dec01a15 	stw	sp,104(sp)
   471ec:	d8001c15 	stw	zero,112(sp)
   471f0:	d8001b15 	stw	zero,108(sp)
   471f4:	d811883a 	mov	r8,sp
   471f8:	d8002615 	stw	zero,152(sp)
   471fc:	d8002415 	stw	zero,144(sp)
   47200:	d8802815 	stw	r2,160(sp)
   47204:	a82d883a 	mov	r22,r21
   47208:	b0800007 	ldb	r2,0(r22)
   4720c:	10040d26 	beq	r2,zero,48244 <___vfiprintf_internal_r+0x110c>
   47210:	00c00944 	movi	r3,37
   47214:	b029883a 	mov	r20,r22
   47218:	10c0021e 	bne	r2,r3,47224 <___vfiprintf_internal_r+0xec>
   4721c:	00001606 	br	47278 <___vfiprintf_internal_r+0x140>
   47220:	10c00326 	beq	r2,r3,47230 <___vfiprintf_internal_r+0xf8>
   47224:	a5000044 	addi	r20,r20,1
   47228:	a0800007 	ldb	r2,0(r20)
   4722c:	103ffc1e 	bne	r2,zero,47220 <__alt_data_end+0xfffeae60>
   47230:	a5a1c83a 	sub	r16,r20,r22
   47234:	80001026 	beq	r16,zero,47278 <___vfiprintf_internal_r+0x140>
   47238:	d8c01c17 	ldw	r3,112(sp)
   4723c:	d8801b17 	ldw	r2,108(sp)
   47240:	45800015 	stw	r22,0(r8)
   47244:	80c7883a 	add	r3,r16,r3
   47248:	10800044 	addi	r2,r2,1
   4724c:	44000115 	stw	r16,4(r8)
   47250:	d8c01c15 	stw	r3,112(sp)
   47254:	d8801b15 	stw	r2,108(sp)
   47258:	010001c4 	movi	r4,7
   4725c:	2080750e 	bge	r4,r2,47434 <___vfiprintf_internal_r+0x2fc>
   47260:	1803951e 	bne	r3,zero,480b8 <___vfiprintf_internal_r+0xf80>
   47264:	d8c02417 	ldw	r3,144(sp)
   47268:	d8001b15 	stw	zero,108(sp)
   4726c:	d811883a 	mov	r8,sp
   47270:	1c07883a 	add	r3,r3,r16
   47274:	d8c02415 	stw	r3,144(sp)
   47278:	a0800007 	ldb	r2,0(r20)
   4727c:	1002e026 	beq	r2,zero,47e00 <___vfiprintf_internal_r+0xcc8>
   47280:	a5800044 	addi	r22,r20,1
   47284:	a0c00047 	ldb	r3,1(r20)
   47288:	d8001d85 	stb	zero,118(sp)
   4728c:	0027883a 	mov	r19,zero
   47290:	d8002305 	stb	zero,140(sp)
   47294:	043fffc4 	movi	r16,-1
   47298:	d8002515 	stw	zero,148(sp)
   4729c:	0023883a 	mov	r17,zero
   472a0:	05001604 	movi	r20,88
   472a4:	05400244 	movi	r21,9
   472a8:	402f883a 	mov	r23,r8
   472ac:	b5800044 	addi	r22,r22,1
   472b0:	18bff804 	addi	r2,r3,-32
   472b4:	a0827736 	bltu	r20,r2,47c94 <___vfiprintf_internal_r+0xb5c>
   472b8:	100490ba 	slli	r2,r2,2
   472bc:	01000134 	movhi	r4,4
   472c0:	211cb404 	addi	r4,r4,29392
   472c4:	1105883a 	add	r2,r2,r4
   472c8:	10800017 	ldw	r2,0(r2)
   472cc:	1000683a 	jmp	r2
   472d0:	00047994 	movui	zero,4582
   472d4:	00047c94 	movui	zero,4594
   472d8:	00047c94 	movui	zero,4594
   472dc:	000479b0 	cmpltui	zero,zero,4582
   472e0:	00047c94 	movui	zero,4594
   472e4:	00047c94 	movui	zero,4594
   472e8:	00047c94 	movui	zero,4594
   472ec:	00047c94 	movui	zero,4594
   472f0:	00047c94 	movui	zero,4594
   472f4:	00047c94 	movui	zero,4594
   472f8:	00047bb8 	rdprs	zero,zero,4590
   472fc:	00047bdc 	xori	zero,zero,4591
   47300:	00047c94 	movui	zero,4594
   47304:	000474d4 	movui	zero,4563
   47308:	00047bf0 	cmpltui	zero,zero,4591
   4730c:	00047c94 	movui	zero,4594
   47310:	000479bc 	xorhi	zero,zero,4582
   47314:	000479c8 	cmpgei	zero,zero,4583
   47318:	000479c8 	cmpgei	zero,zero,4583
   4731c:	000479c8 	cmpgei	zero,zero,4583
   47320:	000479c8 	cmpgei	zero,zero,4583
   47324:	000479c8 	cmpgei	zero,zero,4583
   47328:	000479c8 	cmpgei	zero,zero,4583
   4732c:	000479c8 	cmpgei	zero,zero,4583
   47330:	000479c8 	cmpgei	zero,zero,4583
   47334:	000479c8 	cmpgei	zero,zero,4583
   47338:	00047c94 	movui	zero,4594
   4733c:	00047c94 	movui	zero,4594
   47340:	00047c94 	movui	zero,4594
   47344:	00047c94 	movui	zero,4594
   47348:	00047c94 	movui	zero,4594
   4734c:	00047c94 	movui	zero,4594
   47350:	00047c94 	movui	zero,4594
   47354:	00047c94 	movui	zero,4594
   47358:	00047c94 	movui	zero,4594
   4735c:	00047c94 	movui	zero,4594
   47360:	00047a08 	cmpgei	zero,zero,4584
   47364:	00047c94 	movui	zero,4594
   47368:	00047c94 	movui	zero,4594
   4736c:	00047c94 	movui	zero,4594
   47370:	00047c94 	movui	zero,4594
   47374:	00047c94 	movui	zero,4594
   47378:	00047c94 	movui	zero,4594
   4737c:	00047c94 	movui	zero,4594
   47380:	00047c94 	movui	zero,4594
   47384:	00047c94 	movui	zero,4594
   47388:	00047c94 	movui	zero,4594
   4738c:	00047a44 	movi	zero,4585
   47390:	00047c94 	movui	zero,4594
   47394:	00047c94 	movui	zero,4594
   47398:	00047c94 	movui	zero,4594
   4739c:	00047c94 	movui	zero,4594
   473a0:	00047c94 	movui	zero,4594
   473a4:	00047aa0 	cmpeqi	zero,zero,4586
   473a8:	00047c94 	movui	zero,4594
   473ac:	00047c94 	movui	zero,4594
   473b0:	00047b14 	movui	zero,4588
   473b4:	00047c94 	movui	zero,4594
   473b8:	00047c94 	movui	zero,4594
   473bc:	00047c94 	movui	zero,4594
   473c0:	00047c94 	movui	zero,4594
   473c4:	00047c94 	movui	zero,4594
   473c8:	00047c94 	movui	zero,4594
   473cc:	00047c94 	movui	zero,4594
   473d0:	00047c94 	movui	zero,4594
   473d4:	00047c94 	movui	zero,4594
   473d8:	00047c94 	movui	zero,4594
   473dc:	000478bc 	xorhi	zero,zero,4578
   473e0:	000478ec 	andhi	zero,zero,4579
   473e4:	00047c94 	movui	zero,4594
   473e8:	00047c94 	movui	zero,4594
   473ec:	00047c94 	movui	zero,4594
   473f0:	00047c3c 	xorhi	zero,zero,4592
   473f4:	000478ec 	andhi	zero,zero,4579
   473f8:	00047c94 	movui	zero,4594
   473fc:	00047c94 	movui	zero,4594
   47400:	00047794 	movui	zero,4574
   47404:	00047c94 	movui	zero,4594
   47408:	000477a8 	cmpgeui	zero,zero,4574
   4740c:	000477e0 	cmpeqi	zero,zero,4575
   47410:	000474e0 	cmpeqi	zero,zero,4563
   47414:	00047788 	cmpgei	zero,zero,4574
   47418:	00047c94 	movui	zero,4594
   4741c:	00047b54 	movui	zero,4589
   47420:	00047c94 	movui	zero,4594
   47424:	00047ba0 	cmpeqi	zero,zero,4590
   47428:	00047c94 	movui	zero,4594
   4742c:	00047c94 	movui	zero,4594
   47430:	00047864 	muli	zero,zero,4577
   47434:	42000204 	addi	r8,r8,8
   47438:	d8c02417 	ldw	r3,144(sp)
   4743c:	1c07883a 	add	r3,r3,r16
   47440:	d8c02415 	stw	r3,144(sp)
   47444:	003f8c06 	br	47278 <__alt_data_end+0xfffeaeb8>
   47448:	d9402017 	ldw	r5,128(sp)
   4744c:	d9002117 	ldw	r4,132(sp)
   47450:	00427e40 	call	427e4 <__swsetup_r>
   47454:	1003c11e 	bne	r2,zero,4835c <___vfiprintf_internal_r+0x1224>
   47458:	d9402017 	ldw	r5,128(sp)
   4745c:	00c00284 	movi	r3,10
   47460:	2880030b 	ldhu	r2,12(r5)
   47464:	1080068c 	andi	r2,r2,26
   47468:	10ff581e 	bne	r2,r3,471cc <__alt_data_end+0xfffeae0c>
   4746c:	d8c02017 	ldw	r3,128(sp)
   47470:	1880038f 	ldh	r2,14(r3)
   47474:	103f5516 	blt	r2,zero,471cc <__alt_data_end+0xfffeae0c>
   47478:	d9c02217 	ldw	r7,136(sp)
   4747c:	d9002117 	ldw	r4,132(sp)
   47480:	a80d883a 	mov	r6,r21
   47484:	180b883a 	mov	r5,r3
   47488:	00486600 	call	48660 <__sbprintf>
   4748c:	dfc03517 	ldw	ra,212(sp)
   47490:	df003417 	ldw	fp,208(sp)
   47494:	ddc03317 	ldw	r23,204(sp)
   47498:	dd803217 	ldw	r22,200(sp)
   4749c:	dd403117 	ldw	r21,196(sp)
   474a0:	dd003017 	ldw	r20,192(sp)
   474a4:	dcc02f17 	ldw	r19,188(sp)
   474a8:	dc802e17 	ldw	r18,184(sp)
   474ac:	dc402d17 	ldw	r17,180(sp)
   474b0:	dc002c17 	ldw	r16,176(sp)
   474b4:	dec03604 	addi	sp,sp,216
   474b8:	f800283a 	ret
   474bc:	00447f00 	call	447f0 <__sinit>
   474c0:	003f2f06 	br	47180 <__alt_data_end+0xfffeadc0>
   474c4:	d8c02517 	ldw	r3,148(sp)
   474c8:	d8802215 	stw	r2,136(sp)
   474cc:	00c7c83a 	sub	r3,zero,r3
   474d0:	d8c02515 	stw	r3,148(sp)
   474d4:	8c400114 	ori	r17,r17,4
   474d8:	b0c00007 	ldb	r3,0(r22)
   474dc:	003f7306 	br	472ac <__alt_data_end+0xfffeaeec>
   474e0:	00800c04 	movi	r2,48
   474e4:	d9402217 	ldw	r5,136(sp)
   474e8:	d8801d05 	stb	r2,116(sp)
   474ec:	00801e04 	movi	r2,120
   474f0:	d8801d45 	stb	r2,117(sp)
   474f4:	d8001d85 	stb	zero,118(sp)
   474f8:	b811883a 	mov	r8,r23
   474fc:	28c00104 	addi	r3,r5,4
   47500:	2cc00017 	ldw	r19,0(r5)
   47504:	0029883a 	mov	r20,zero
   47508:	88800094 	ori	r2,r17,2
   4750c:	80032516 	blt	r16,zero,481a4 <___vfiprintf_internal_r+0x106c>
   47510:	00bfdfc4 	movi	r2,-129
   47514:	88a2703a 	and	r17,r17,r2
   47518:	d8c02215 	stw	r3,136(sp)
   4751c:	8c400094 	ori	r17,r17,2
   47520:	98032a1e 	bne	r19,zero,481cc <___vfiprintf_internal_r+0x1094>
   47524:	00800174 	movhi	r2,5
   47528:	10be3c04 	addi	r2,r2,-1808
   4752c:	d8802615 	stw	r2,152(sp)
   47530:	002b883a 	mov	r21,zero
   47534:	8001741e 	bne	r16,zero,47b08 <___vfiprintf_internal_r+0x9d0>
   47538:	0021883a 	mov	r16,zero
   4753c:	0029883a 	mov	r20,zero
   47540:	ddc01a04 	addi	r23,sp,104
   47544:	8027883a 	mov	r19,r16
   47548:	8500010e 	bge	r16,r20,47550 <___vfiprintf_internal_r+0x418>
   4754c:	a027883a 	mov	r19,r20
   47550:	ad403fcc 	andi	r21,r21,255
   47554:	ad40201c 	xori	r21,r21,128
   47558:	ad7fe004 	addi	r21,r21,-128
   4755c:	a8000126 	beq	r21,zero,47564 <___vfiprintf_internal_r+0x42c>
   47560:	9cc00044 	addi	r19,r19,1
   47564:	89c0008c 	andi	r7,r17,2
   47568:	38000126 	beq	r7,zero,47570 <___vfiprintf_internal_r+0x438>
   4756c:	9cc00084 	addi	r19,r19,2
   47570:	88c0210c 	andi	r3,r17,132
   47574:	1801dd1e 	bne	r3,zero,47cec <___vfiprintf_internal_r+0xbb4>
   47578:	d9402517 	ldw	r5,148(sp)
   4757c:	2cebc83a 	sub	r21,r5,r19
   47580:	0541da0e 	bge	zero,r21,47cec <___vfiprintf_internal_r+0xbb4>
   47584:	07000404 	movi	fp,16
   47588:	d8801c17 	ldw	r2,112(sp)
   4758c:	e543be0e 	bge	fp,r21,48488 <___vfiprintf_internal_r+0x1350>
   47590:	01400174 	movhi	r5,5
   47594:	297ea104 	addi	r5,r5,-1404
   47598:	dc002715 	stw	r16,156(sp)
   4759c:	d9801b17 	ldw	r6,108(sp)
   475a0:	a821883a 	mov	r16,r21
   475a4:	d9402315 	stw	r5,140(sp)
   475a8:	028001c4 	movi	r10,7
   475ac:	d9c02915 	stw	r7,164(sp)
   475b0:	182b883a 	mov	r21,r3
   475b4:	00000506 	br	475cc <___vfiprintf_internal_r+0x494>
   475b8:	31000084 	addi	r4,r6,2
   475bc:	42000204 	addi	r8,r8,8
   475c0:	180d883a 	mov	r6,r3
   475c4:	843ffc04 	addi	r16,r16,-16
   475c8:	e4000f0e 	bge	fp,r16,47608 <___vfiprintf_internal_r+0x4d0>
   475cc:	01000174 	movhi	r4,5
   475d0:	10800404 	addi	r2,r2,16
   475d4:	30c00044 	addi	r3,r6,1
   475d8:	213ea104 	addi	r4,r4,-1404
   475dc:	41000015 	stw	r4,0(r8)
   475e0:	47000115 	stw	fp,4(r8)
   475e4:	d8801c15 	stw	r2,112(sp)
   475e8:	d8c01b15 	stw	r3,108(sp)
   475ec:	50fff20e 	bge	r10,r3,475b8 <__alt_data_end+0xfffeb1f8>
   475f0:	1001b21e 	bne	r2,zero,47cbc <___vfiprintf_internal_r+0xb84>
   475f4:	843ffc04 	addi	r16,r16,-16
   475f8:	000d883a 	mov	r6,zero
   475fc:	01000044 	movi	r4,1
   47600:	d811883a 	mov	r8,sp
   47604:	e43ff116 	blt	fp,r16,475cc <__alt_data_end+0xfffeb20c>
   47608:	a807883a 	mov	r3,r21
   4760c:	d9c02917 	ldw	r7,164(sp)
   47610:	802b883a 	mov	r21,r16
   47614:	dc002717 	ldw	r16,156(sp)
   47618:	d9402317 	ldw	r5,140(sp)
   4761c:	a885883a 	add	r2,r21,r2
   47620:	45400115 	stw	r21,4(r8)
   47624:	41400015 	stw	r5,0(r8)
   47628:	d8801c15 	stw	r2,112(sp)
   4762c:	d9001b15 	stw	r4,108(sp)
   47630:	014001c4 	movi	r5,7
   47634:	29026216 	blt	r5,r4,47fc0 <___vfiprintf_internal_r+0xe88>
   47638:	d9801d87 	ldb	r6,118(sp)
   4763c:	42000204 	addi	r8,r8,8
   47640:	21400044 	addi	r5,r4,1
   47644:	3001ae1e 	bne	r6,zero,47d00 <___vfiprintf_internal_r+0xbc8>
   47648:	3801bb26 	beq	r7,zero,47d38 <___vfiprintf_internal_r+0xc00>
   4764c:	d9001d04 	addi	r4,sp,116
   47650:	10800084 	addi	r2,r2,2
   47654:	41000015 	stw	r4,0(r8)
   47658:	01000084 	movi	r4,2
   4765c:	41000115 	stw	r4,4(r8)
   47660:	d8801c15 	stw	r2,112(sp)
   47664:	d9401b15 	stw	r5,108(sp)
   47668:	010001c4 	movi	r4,7
   4766c:	2142680e 	bge	r4,r5,48010 <___vfiprintf_internal_r+0xed8>
   47670:	1002b11e 	bne	r2,zero,48138 <___vfiprintf_internal_r+0x1000>
   47674:	01802004 	movi	r6,128
   47678:	01400044 	movi	r5,1
   4767c:	0009883a 	mov	r4,zero
   47680:	d811883a 	mov	r8,sp
   47684:	1981ae1e 	bne	r3,r6,47d40 <___vfiprintf_internal_r+0xc08>
   47688:	d8c02517 	ldw	r3,148(sp)
   4768c:	1cf9c83a 	sub	fp,r3,r19
   47690:	0701ab0e 	bge	zero,fp,47d40 <___vfiprintf_internal_r+0xc08>
   47694:	05400404 	movi	r21,16
   47698:	af03a90e 	bge	r21,fp,48540 <___vfiprintf_internal_r+0x1408>
   4769c:	01400174 	movhi	r5,5
   476a0:	297e9d04 	addi	r5,r5,-1420
   476a4:	d9402315 	stw	r5,140(sp)
   476a8:	01c001c4 	movi	r7,7
   476ac:	00000506 	br	476c4 <___vfiprintf_internal_r+0x58c>
   476b0:	21800084 	addi	r6,r4,2
   476b4:	42000204 	addi	r8,r8,8
   476b8:	1809883a 	mov	r4,r3
   476bc:	e73ffc04 	addi	fp,fp,-16
   476c0:	af000d0e 	bge	r21,fp,476f8 <___vfiprintf_internal_r+0x5c0>
   476c4:	10800404 	addi	r2,r2,16
   476c8:	20c00044 	addi	r3,r4,1
   476cc:	44800015 	stw	r18,0(r8)
   476d0:	45400115 	stw	r21,4(r8)
   476d4:	d8801c15 	stw	r2,112(sp)
   476d8:	d8c01b15 	stw	r3,108(sp)
   476dc:	38fff40e 	bge	r7,r3,476b0 <__alt_data_end+0xfffeb2f0>
   476e0:	10022b1e 	bne	r2,zero,47f90 <___vfiprintf_internal_r+0xe58>
   476e4:	e73ffc04 	addi	fp,fp,-16
   476e8:	01800044 	movi	r6,1
   476ec:	0009883a 	mov	r4,zero
   476f0:	d811883a 	mov	r8,sp
   476f4:	af3ff316 	blt	r21,fp,476c4 <__alt_data_end+0xfffeb304>
   476f8:	d8c02317 	ldw	r3,140(sp)
   476fc:	1705883a 	add	r2,r2,fp
   47700:	47000115 	stw	fp,4(r8)
   47704:	40c00015 	stw	r3,0(r8)
   47708:	d8801c15 	stw	r2,112(sp)
   4770c:	d9801b15 	stw	r6,108(sp)
   47710:	00c001c4 	movi	r3,7
   47714:	19829416 	blt	r3,r6,48168 <___vfiprintf_internal_r+0x1030>
   47718:	8521c83a 	sub	r16,r16,r20
   4771c:	42000204 	addi	r8,r8,8
   47720:	31400044 	addi	r5,r6,1
   47724:	3009883a 	mov	r4,r6
   47728:	04018716 	blt	zero,r16,47d48 <___vfiprintf_internal_r+0xc10>
   4772c:	a085883a 	add	r2,r20,r2
   47730:	45c00015 	stw	r23,0(r8)
   47734:	45000115 	stw	r20,4(r8)
   47738:	d8801c15 	stw	r2,112(sp)
   4773c:	d9401b15 	stw	r5,108(sp)
   47740:	00c001c4 	movi	r3,7
   47744:	1941c20e 	bge	r3,r5,47e50 <___vfiprintf_internal_r+0xd18>
   47748:	1002531e 	bne	r2,zero,48098 <___vfiprintf_internal_r+0xf60>
   4774c:	d8001b15 	stw	zero,108(sp)
   47750:	8c40010c 	andi	r17,r17,4
   47754:	88023226 	beq	r17,zero,48020 <___vfiprintf_internal_r+0xee8>
   47758:	d9002517 	ldw	r4,148(sp)
   4775c:	24e3c83a 	sub	r17,r4,r19
   47760:	04432916 	blt	zero,r17,48408 <___vfiprintf_internal_r+0x12d0>
   47764:	d8802517 	ldw	r2,148(sp)
   47768:	14c0010e 	bge	r2,r19,47770 <___vfiprintf_internal_r+0x638>
   4776c:	9805883a 	mov	r2,r19
   47770:	d8c02417 	ldw	r3,144(sp)
   47774:	1887883a 	add	r3,r3,r2
   47778:	d8c02415 	stw	r3,144(sp)
   4777c:	d8001b15 	stw	zero,108(sp)
   47780:	d811883a 	mov	r8,sp
   47784:	003ea006 	br	47208 <__alt_data_end+0xfffeae48>
   47788:	8c400814 	ori	r17,r17,32
   4778c:	b0c00007 	ldb	r3,0(r22)
   47790:	003ec606 	br	472ac <__alt_data_end+0xfffeaeec>
   47794:	b0c00007 	ldb	r3,0(r22)
   47798:	00801b04 	movi	r2,108
   4779c:	18832026 	beq	r3,r2,48420 <___vfiprintf_internal_r+0x12e8>
   477a0:	8c400414 	ori	r17,r17,16
   477a4:	003ec106 	br	472ac <__alt_data_end+0xfffeaeec>
   477a8:	9cc03fcc 	andi	r19,r19,255
   477ac:	b811883a 	mov	r8,r23
   477b0:	9803981e 	bne	r19,zero,48614 <___vfiprintf_internal_r+0x14dc>
   477b4:	8880080c 	andi	r2,r17,32
   477b8:	1002be26 	beq	r2,zero,482b4 <___vfiprintf_internal_r+0x117c>
   477bc:	d9002217 	ldw	r4,136(sp)
   477c0:	d9402417 	ldw	r5,144(sp)
   477c4:	20800017 	ldw	r2,0(r4)
   477c8:	2807d7fa 	srai	r3,r5,31
   477cc:	21000104 	addi	r4,r4,4
   477d0:	d9002215 	stw	r4,136(sp)
   477d4:	11400015 	stw	r5,0(r2)
   477d8:	10c00115 	stw	r3,4(r2)
   477dc:	003e8a06 	br	47208 <__alt_data_end+0xfffeae48>
   477e0:	9cc03fcc 	andi	r19,r19,255
   477e4:	b811883a 	mov	r8,r23
   477e8:	9803871e 	bne	r19,zero,48608 <___vfiprintf_internal_r+0x14d0>
   477ec:	8880080c 	andi	r2,r17,32
   477f0:	10009a26 	beq	r2,zero,47a5c <___vfiprintf_internal_r+0x924>
   477f4:	d9002217 	ldw	r4,136(sp)
   477f8:	d8001d85 	stb	zero,118(sp)
   477fc:	20800204 	addi	r2,r4,8
   47800:	24c00017 	ldw	r19,0(r4)
   47804:	25000117 	ldw	r20,4(r4)
   47808:	8002a416 	blt	r16,zero,4829c <___vfiprintf_internal_r+0x1164>
   4780c:	013fdfc4 	movi	r4,-129
   47810:	9d06b03a 	or	r3,r19,r20
   47814:	d8802215 	stw	r2,136(sp)
   47818:	8922703a 	and	r17,r17,r4
   4781c:	18009b26 	beq	r3,zero,47a8c <___vfiprintf_internal_r+0x954>
   47820:	002b883a 	mov	r21,zero
   47824:	ddc01a04 	addi	r23,sp,104
   47828:	9806d0fa 	srli	r3,r19,3
   4782c:	a008977a 	slli	r4,r20,29
   47830:	a028d0fa 	srli	r20,r20,3
   47834:	9cc001cc 	andi	r19,r19,7
   47838:	98800c04 	addi	r2,r19,48
   4783c:	bdffffc4 	addi	r23,r23,-1
   47840:	20e6b03a 	or	r19,r4,r3
   47844:	b8800005 	stb	r2,0(r23)
   47848:	9d06b03a 	or	r3,r19,r20
   4784c:	183ff61e 	bne	r3,zero,47828 <__alt_data_end+0xfffeb468>
   47850:	88c0004c 	andi	r3,r17,1
   47854:	18021f1e 	bne	r3,zero,480d4 <___vfiprintf_internal_r+0xf9c>
   47858:	d9401e17 	ldw	r5,120(sp)
   4785c:	2de9c83a 	sub	r20,r5,r23
   47860:	003f3806 	br	47544 <__alt_data_end+0xfffeb184>
   47864:	9cc03fcc 	andi	r19,r19,255
   47868:	b811883a 	mov	r8,r23
   4786c:	98034f1e 	bne	r19,zero,485ac <___vfiprintf_internal_r+0x1474>
   47870:	00800174 	movhi	r2,5
   47874:	10be3c04 	addi	r2,r2,-1808
   47878:	d8802615 	stw	r2,152(sp)
   4787c:	8880080c 	andi	r2,r17,32
   47880:	1000ac26 	beq	r2,zero,47b34 <___vfiprintf_internal_r+0x9fc>
   47884:	d9002217 	ldw	r4,136(sp)
   47888:	24c00017 	ldw	r19,0(r4)
   4788c:	25000117 	ldw	r20,4(r4)
   47890:	21000204 	addi	r4,r4,8
   47894:	d9002215 	stw	r4,136(sp)
   47898:	8880004c 	andi	r2,r17,1
   4789c:	1001e726 	beq	r2,zero,4803c <___vfiprintf_internal_r+0xf04>
   478a0:	9d04b03a 	or	r2,r19,r20
   478a4:	10025c1e 	bne	r2,zero,48218 <___vfiprintf_internal_r+0x10e0>
   478a8:	d8001d85 	stb	zero,118(sp)
   478ac:	80024416 	blt	r16,zero,481c0 <___vfiprintf_internal_r+0x1088>
   478b0:	00bfdfc4 	movi	r2,-129
   478b4:	88a2703a 	and	r17,r17,r2
   478b8:	003f1d06 	br	47530 <__alt_data_end+0xfffeb170>
   478bc:	d8c02217 	ldw	r3,136(sp)
   478c0:	04c00044 	movi	r19,1
   478c4:	b811883a 	mov	r8,r23
   478c8:	18800017 	ldw	r2,0(r3)
   478cc:	18c00104 	addi	r3,r3,4
   478d0:	d8001d85 	stb	zero,118(sp)
   478d4:	d8801005 	stb	r2,64(sp)
   478d8:	d8c02215 	stw	r3,136(sp)
   478dc:	9829883a 	mov	r20,r19
   478e0:	ddc01004 	addi	r23,sp,64
   478e4:	0021883a 	mov	r16,zero
   478e8:	003f1e06 	br	47564 <__alt_data_end+0xfffeb1a4>
   478ec:	9cc03fcc 	andi	r19,r19,255
   478f0:	b811883a 	mov	r8,r23
   478f4:	9803331e 	bne	r19,zero,485c4 <___vfiprintf_internal_r+0x148c>
   478f8:	8880080c 	andi	r2,r17,32
   478fc:	10004826 	beq	r2,zero,47a20 <___vfiprintf_internal_r+0x8e8>
   47900:	d9002217 	ldw	r4,136(sp)
   47904:	20800117 	ldw	r2,4(r4)
   47908:	24c00017 	ldw	r19,0(r4)
   4790c:	21000204 	addi	r4,r4,8
   47910:	d9002215 	stw	r4,136(sp)
   47914:	1029883a 	mov	r20,r2
   47918:	10024c16 	blt	r2,zero,4824c <___vfiprintf_internal_r+0x1114>
   4791c:	dd401d83 	ldbu	r21,118(sp)
   47920:	80007116 	blt	r16,zero,47ae8 <___vfiprintf_internal_r+0x9b0>
   47924:	00ffdfc4 	movi	r3,-129
   47928:	9d04b03a 	or	r2,r19,r20
   4792c:	88e2703a 	and	r17,r17,r3
   47930:	1000d126 	beq	r2,zero,47c78 <___vfiprintf_internal_r+0xb40>
   47934:	a0023526 	beq	r20,zero,4820c <___vfiprintf_internal_r+0x10d4>
   47938:	ddc01a04 	addi	r23,sp,104
   4793c:	4039883a 	mov	fp,r8
   47940:	9809883a 	mov	r4,r19
   47944:	a00b883a 	mov	r5,r20
   47948:	01800284 	movi	r6,10
   4794c:	000f883a 	mov	r7,zero
   47950:	004a1ec0 	call	4a1ec <__umoddi3>
   47954:	10800c04 	addi	r2,r2,48
   47958:	bdffffc4 	addi	r23,r23,-1
   4795c:	9809883a 	mov	r4,r19
   47960:	a00b883a 	mov	r5,r20
   47964:	b8800005 	stb	r2,0(r23)
   47968:	01800284 	movi	r6,10
   4796c:	000f883a 	mov	r7,zero
   47970:	0049bf00 	call	49bf0 <__udivdi3>
   47974:	1027883a 	mov	r19,r2
   47978:	10c4b03a 	or	r2,r2,r3
   4797c:	1829883a 	mov	r20,r3
   47980:	103fef1e 	bne	r2,zero,47940 <__alt_data_end+0xfffeb580>
   47984:	d9001e17 	ldw	r4,120(sp)
   47988:	e011883a 	mov	r8,fp
   4798c:	25e9c83a 	sub	r20,r4,r23
   47990:	003eec06 	br	47544 <__alt_data_end+0xfffeb184>
   47994:	d8802307 	ldb	r2,140(sp)
   47998:	1002361e 	bne	r2,zero,48274 <___vfiprintf_internal_r+0x113c>
   4799c:	00c00804 	movi	r3,32
   479a0:	d8c02305 	stb	r3,140(sp)
   479a4:	04c00044 	movi	r19,1
   479a8:	b0c00007 	ldb	r3,0(r22)
   479ac:	003e3f06 	br	472ac <__alt_data_end+0xfffeaeec>
   479b0:	8c400054 	ori	r17,r17,1
   479b4:	b0c00007 	ldb	r3,0(r22)
   479b8:	003e3c06 	br	472ac <__alt_data_end+0xfffeaeec>
   479bc:	8c402014 	ori	r17,r17,128
   479c0:	b0c00007 	ldb	r3,0(r22)
   479c4:	003e3906 	br	472ac <__alt_data_end+0xfffeaeec>
   479c8:	dc002715 	stw	r16,156(sp)
   479cc:	d8002515 	stw	zero,148(sp)
   479d0:	1f3ff404 	addi	fp,r3,-48
   479d4:	0009883a 	mov	r4,zero
   479d8:	b021883a 	mov	r16,r22
   479dc:	01400284 	movi	r5,10
   479e0:	004a9640 	call	4a964 <__mulsi3>
   479e4:	80c00007 	ldb	r3,0(r16)
   479e8:	e089883a 	add	r4,fp,r2
   479ec:	b5800044 	addi	r22,r22,1
   479f0:	1f3ff404 	addi	fp,r3,-48
   479f4:	b021883a 	mov	r16,r22
   479f8:	af3ff82e 	bgeu	r21,fp,479dc <__alt_data_end+0xfffeb61c>
   479fc:	d9002515 	stw	r4,148(sp)
   47a00:	dc002717 	ldw	r16,156(sp)
   47a04:	003e2a06 	br	472b0 <__alt_data_end+0xfffeaef0>
   47a08:	9cc03fcc 	andi	r19,r19,255
   47a0c:	b811883a 	mov	r8,r23
   47a10:	9802e91e 	bne	r19,zero,485b8 <___vfiprintf_internal_r+0x1480>
   47a14:	8c400414 	ori	r17,r17,16
   47a18:	8880080c 	andi	r2,r17,32
   47a1c:	103fb81e 	bne	r2,zero,47900 <__alt_data_end+0xfffeb540>
   47a20:	8880040c 	andi	r2,r17,16
   47a24:	10022e26 	beq	r2,zero,482e0 <___vfiprintf_internal_r+0x11a8>
   47a28:	d9402217 	ldw	r5,136(sp)
   47a2c:	2cc00017 	ldw	r19,0(r5)
   47a30:	29400104 	addi	r5,r5,4
   47a34:	d9402215 	stw	r5,136(sp)
   47a38:	9829d7fa 	srai	r20,r19,31
   47a3c:	a005883a 	mov	r2,r20
   47a40:	003fb506 	br	47918 <__alt_data_end+0xfffeb558>
   47a44:	9cc03fcc 	andi	r19,r19,255
   47a48:	b811883a 	mov	r8,r23
   47a4c:	9802fa1e 	bne	r19,zero,48638 <___vfiprintf_internal_r+0x1500>
   47a50:	8c400414 	ori	r17,r17,16
   47a54:	8880080c 	andi	r2,r17,32
   47a58:	103f661e 	bne	r2,zero,477f4 <__alt_data_end+0xfffeb434>
   47a5c:	8880040c 	andi	r2,r17,16
   47a60:	10020626 	beq	r2,zero,4827c <___vfiprintf_internal_r+0x1144>
   47a64:	d9402217 	ldw	r5,136(sp)
   47a68:	d8001d85 	stb	zero,118(sp)
   47a6c:	0029883a 	mov	r20,zero
   47a70:	28800104 	addi	r2,r5,4
   47a74:	2cc00017 	ldw	r19,0(r5)
   47a78:	80020816 	blt	r16,zero,4829c <___vfiprintf_internal_r+0x1164>
   47a7c:	00ffdfc4 	movi	r3,-129
   47a80:	d8802215 	stw	r2,136(sp)
   47a84:	88e2703a 	and	r17,r17,r3
   47a88:	983f651e 	bne	r19,zero,47820 <__alt_data_end+0xfffeb460>
   47a8c:	002b883a 	mov	r21,zero
   47a90:	8002cf26 	beq	r16,zero,485d0 <___vfiprintf_internal_r+0x1498>
   47a94:	0027883a 	mov	r19,zero
   47a98:	0029883a 	mov	r20,zero
   47a9c:	003f6106 	br	47824 <__alt_data_end+0xfffeb464>
   47aa0:	9cc03fcc 	andi	r19,r19,255
   47aa4:	b811883a 	mov	r8,r23
   47aa8:	9802e01e 	bne	r19,zero,4862c <___vfiprintf_internal_r+0x14f4>
   47aac:	8c400414 	ori	r17,r17,16
   47ab0:	8880080c 	andi	r2,r17,32
   47ab4:	1000641e 	bne	r2,zero,47c48 <___vfiprintf_internal_r+0xb10>
   47ab8:	8880040c 	andi	r2,r17,16
   47abc:	1001c81e 	bne	r2,zero,481e0 <___vfiprintf_internal_r+0x10a8>
   47ac0:	8880100c 	andi	r2,r17,64
   47ac4:	d8001d85 	stb	zero,118(sp)
   47ac8:	1002281e 	bne	r2,zero,4836c <___vfiprintf_internal_r+0x1234>
   47acc:	d9002217 	ldw	r4,136(sp)
   47ad0:	0029883a 	mov	r20,zero
   47ad4:	20800104 	addi	r2,r4,4
   47ad8:	24c00017 	ldw	r19,0(r4)
   47adc:	8001c60e 	bge	r16,zero,481f8 <___vfiprintf_internal_r+0x10c0>
   47ae0:	d8802215 	stw	r2,136(sp)
   47ae4:	002b883a 	mov	r21,zero
   47ae8:	9d04b03a 	or	r2,r19,r20
   47aec:	103f911e 	bne	r2,zero,47934 <__alt_data_end+0xfffeb574>
   47af0:	00800044 	movi	r2,1
   47af4:	10803fcc 	andi	r2,r2,255
   47af8:	00c00044 	movi	r3,1
   47afc:	10c05f26 	beq	r2,r3,47c7c <___vfiprintf_internal_r+0xb44>
   47b00:	00c00084 	movi	r3,2
   47b04:	10ffe31e 	bne	r2,r3,47a94 <__alt_data_end+0xfffeb6d4>
   47b08:	0027883a 	mov	r19,zero
   47b0c:	0029883a 	mov	r20,zero
   47b10:	00015106 	br	48058 <___vfiprintf_internal_r+0xf20>
   47b14:	9cc03fcc 	andi	r19,r19,255
   47b18:	b811883a 	mov	r8,r23
   47b1c:	9802c01e 	bne	r19,zero,48620 <___vfiprintf_internal_r+0x14e8>
   47b20:	01400174 	movhi	r5,5
   47b24:	297e3704 	addi	r5,r5,-1828
   47b28:	d9402615 	stw	r5,152(sp)
   47b2c:	8880080c 	andi	r2,r17,32
   47b30:	103f541e 	bne	r2,zero,47884 <__alt_data_end+0xfffeb4c4>
   47b34:	8880040c 	andi	r2,r17,16
   47b38:	1001f226 	beq	r2,zero,48304 <___vfiprintf_internal_r+0x11cc>
   47b3c:	d9402217 	ldw	r5,136(sp)
   47b40:	0029883a 	mov	r20,zero
   47b44:	2cc00017 	ldw	r19,0(r5)
   47b48:	29400104 	addi	r5,r5,4
   47b4c:	d9402215 	stw	r5,136(sp)
   47b50:	003f5106 	br	47898 <__alt_data_end+0xfffeb4d8>
   47b54:	d8c02217 	ldw	r3,136(sp)
   47b58:	b811883a 	mov	r8,r23
   47b5c:	d8001d85 	stb	zero,118(sp)
   47b60:	1dc00017 	ldw	r23,0(r3)
   47b64:	1f000104 	addi	fp,r3,4
   47b68:	b8025926 	beq	r23,zero,484d0 <___vfiprintf_internal_r+0x1398>
   47b6c:	80023316 	blt	r16,zero,4843c <___vfiprintf_internal_r+0x1304>
   47b70:	800d883a 	mov	r6,r16
   47b74:	000b883a 	mov	r5,zero
   47b78:	b809883a 	mov	r4,r23
   47b7c:	da002a15 	stw	r8,168(sp)
   47b80:	00458a00 	call	458a0 <memchr>
   47b84:	da002a17 	ldw	r8,168(sp)
   47b88:	10026826 	beq	r2,zero,4852c <___vfiprintf_internal_r+0x13f4>
   47b8c:	15e9c83a 	sub	r20,r2,r23
   47b90:	dd401d83 	ldbu	r21,118(sp)
   47b94:	df002215 	stw	fp,136(sp)
   47b98:	0021883a 	mov	r16,zero
   47b9c:	003e6906 	br	47544 <__alt_data_end+0xfffeb184>
   47ba0:	9cc03fcc 	andi	r19,r19,255
   47ba4:	b811883a 	mov	r8,r23
   47ba8:	983fc126 	beq	r19,zero,47ab0 <__alt_data_end+0xfffeb6f0>
   47bac:	d8c02303 	ldbu	r3,140(sp)
   47bb0:	d8c01d85 	stb	r3,118(sp)
   47bb4:	003fbe06 	br	47ab0 <__alt_data_end+0xfffeb6f0>
   47bb8:	d9002217 	ldw	r4,136(sp)
   47bbc:	d9402217 	ldw	r5,136(sp)
   47bc0:	21000017 	ldw	r4,0(r4)
   47bc4:	28800104 	addi	r2,r5,4
   47bc8:	d9002515 	stw	r4,148(sp)
   47bcc:	203e3d16 	blt	r4,zero,474c4 <__alt_data_end+0xfffeb104>
   47bd0:	d8802215 	stw	r2,136(sp)
   47bd4:	b0c00007 	ldb	r3,0(r22)
   47bd8:	003db406 	br	472ac <__alt_data_end+0xfffeaeec>
   47bdc:	00c00ac4 	movi	r3,43
   47be0:	d8c02305 	stb	r3,140(sp)
   47be4:	04c00044 	movi	r19,1
   47be8:	b0c00007 	ldb	r3,0(r22)
   47bec:	003daf06 	br	472ac <__alt_data_end+0xfffeaeec>
   47bf0:	b0c00007 	ldb	r3,0(r22)
   47bf4:	01000a84 	movi	r4,42
   47bf8:	b4000044 	addi	r16,r22,1
   47bfc:	19025e26 	beq	r3,r4,48578 <___vfiprintf_internal_r+0x1440>
   47c00:	1f3ff404 	addi	fp,r3,-48
   47c04:	0009883a 	mov	r4,zero
   47c08:	af025236 	bltu	r21,fp,48554 <___vfiprintf_internal_r+0x141c>
   47c0c:	01400284 	movi	r5,10
   47c10:	004a9640 	call	4a964 <__mulsi3>
   47c14:	80c00007 	ldb	r3,0(r16)
   47c18:	1709883a 	add	r4,r2,fp
   47c1c:	85800044 	addi	r22,r16,1
   47c20:	1f3ff404 	addi	fp,r3,-48
   47c24:	b021883a 	mov	r16,r22
   47c28:	af3ff82e 	bgeu	r21,fp,47c0c <__alt_data_end+0xfffeb84c>
   47c2c:	2021883a 	mov	r16,r4
   47c30:	203d9f0e 	bge	r4,zero,472b0 <__alt_data_end+0xfffeaef0>
   47c34:	043fffc4 	movi	r16,-1
   47c38:	003d9d06 	br	472b0 <__alt_data_end+0xfffeaef0>
   47c3c:	8c401014 	ori	r17,r17,64
   47c40:	b0c00007 	ldb	r3,0(r22)
   47c44:	003d9906 	br	472ac <__alt_data_end+0xfffeaeec>
   47c48:	d9002217 	ldw	r4,136(sp)
   47c4c:	d8001d85 	stb	zero,118(sp)
   47c50:	20c00204 	addi	r3,r4,8
   47c54:	24c00017 	ldw	r19,0(r4)
   47c58:	25000117 	ldw	r20,4(r4)
   47c5c:	8001e716 	blt	r16,zero,483fc <___vfiprintf_internal_r+0x12c4>
   47c60:	013fdfc4 	movi	r4,-129
   47c64:	9d04b03a 	or	r2,r19,r20
   47c68:	d8c02215 	stw	r3,136(sp)
   47c6c:	8922703a 	and	r17,r17,r4
   47c70:	002b883a 	mov	r21,zero
   47c74:	103f2f1e 	bne	r2,zero,47934 <__alt_data_end+0xfffeb574>
   47c78:	803e2f26 	beq	r16,zero,47538 <__alt_data_end+0xfffeb178>
   47c7c:	0027883a 	mov	r19,zero
   47c80:	9cc00c04 	addi	r19,r19,48
   47c84:	dcc019c5 	stb	r19,103(sp)
   47c88:	dd002817 	ldw	r20,160(sp)
   47c8c:	ddc019c4 	addi	r23,sp,103
   47c90:	003e2c06 	br	47544 <__alt_data_end+0xfffeb184>
   47c94:	9cc03fcc 	andi	r19,r19,255
   47c98:	b811883a 	mov	r8,r23
   47c9c:	9802571e 	bne	r19,zero,485fc <___vfiprintf_internal_r+0x14c4>
   47ca0:	18005726 	beq	r3,zero,47e00 <___vfiprintf_internal_r+0xcc8>
   47ca4:	04c00044 	movi	r19,1
   47ca8:	d8c01005 	stb	r3,64(sp)
   47cac:	d8001d85 	stb	zero,118(sp)
   47cb0:	9829883a 	mov	r20,r19
   47cb4:	ddc01004 	addi	r23,sp,64
   47cb8:	003f0a06 	br	478e4 <__alt_data_end+0xfffeb524>
   47cbc:	d9402017 	ldw	r5,128(sp)
   47cc0:	d9002117 	ldw	r4,132(sp)
   47cc4:	d9801a04 	addi	r6,sp,104
   47cc8:	da802a15 	stw	r10,168(sp)
   47ccc:	00470240 	call	47024 <__sprint_r.part.0>
   47cd0:	da802a17 	ldw	r10,168(sp)
   47cd4:	1000501e 	bne	r2,zero,47e18 <___vfiprintf_internal_r+0xce0>
   47cd8:	d9801b17 	ldw	r6,108(sp)
   47cdc:	d8801c17 	ldw	r2,112(sp)
   47ce0:	d811883a 	mov	r8,sp
   47ce4:	31000044 	addi	r4,r6,1
   47ce8:	003e3606 	br	475c4 <__alt_data_end+0xfffeb204>
   47cec:	d9001b17 	ldw	r4,108(sp)
   47cf0:	d8801c17 	ldw	r2,112(sp)
   47cf4:	21400044 	addi	r5,r4,1
   47cf8:	d9801d87 	ldb	r6,118(sp)
   47cfc:	303e5226 	beq	r6,zero,47648 <__alt_data_end+0xfffeb288>
   47d00:	01800044 	movi	r6,1
   47d04:	d9001d84 	addi	r4,sp,118
   47d08:	1185883a 	add	r2,r2,r6
   47d0c:	41000015 	stw	r4,0(r8)
   47d10:	41800115 	stw	r6,4(r8)
   47d14:	d8801c15 	stw	r2,112(sp)
   47d18:	d9401b15 	stw	r5,108(sp)
   47d1c:	010001c4 	movi	r4,7
   47d20:	2140b00e 	bge	r4,r5,47fe4 <___vfiprintf_internal_r+0xeac>
   47d24:	1000f61e 	bne	r2,zero,48100 <___vfiprintf_internal_r+0xfc8>
   47d28:	3800b31e 	bne	r7,zero,47ff8 <___vfiprintf_internal_r+0xec0>
   47d2c:	0009883a 	mov	r4,zero
   47d30:	300b883a 	mov	r5,r6
   47d34:	d811883a 	mov	r8,sp
   47d38:	01802004 	movi	r6,128
   47d3c:	19be5226 	beq	r3,r6,47688 <__alt_data_end+0xfffeb2c8>
   47d40:	8521c83a 	sub	r16,r16,r20
   47d44:	043e790e 	bge	zero,r16,4772c <__alt_data_end+0xfffeb36c>
   47d48:	05400404 	movi	r21,16
   47d4c:	ac01b00e 	bge	r21,r16,48410 <___vfiprintf_internal_r+0x12d8>
   47d50:	01400174 	movhi	r5,5
   47d54:	297e9d04 	addi	r5,r5,-1420
   47d58:	d9402315 	stw	r5,140(sp)
   47d5c:	070001c4 	movi	fp,7
   47d60:	00000506 	br	47d78 <___vfiprintf_internal_r+0xc40>
   47d64:	21400084 	addi	r5,r4,2
   47d68:	42000204 	addi	r8,r8,8
   47d6c:	1809883a 	mov	r4,r3
   47d70:	843ffc04 	addi	r16,r16,-16
   47d74:	ac000d0e 	bge	r21,r16,47dac <___vfiprintf_internal_r+0xc74>
   47d78:	10800404 	addi	r2,r2,16
   47d7c:	20c00044 	addi	r3,r4,1
   47d80:	44800015 	stw	r18,0(r8)
   47d84:	45400115 	stw	r21,4(r8)
   47d88:	d8801c15 	stw	r2,112(sp)
   47d8c:	d8c01b15 	stw	r3,108(sp)
   47d90:	e0fff40e 	bge	fp,r3,47d64 <__alt_data_end+0xfffeb9a4>
   47d94:	1000101e 	bne	r2,zero,47dd8 <___vfiprintf_internal_r+0xca0>
   47d98:	843ffc04 	addi	r16,r16,-16
   47d9c:	01400044 	movi	r5,1
   47da0:	0009883a 	mov	r4,zero
   47da4:	d811883a 	mov	r8,sp
   47da8:	ac3ff316 	blt	r21,r16,47d78 <__alt_data_end+0xfffeb9b8>
   47dac:	d8c02317 	ldw	r3,140(sp)
   47db0:	1405883a 	add	r2,r2,r16
   47db4:	44000115 	stw	r16,4(r8)
   47db8:	40c00015 	stw	r3,0(r8)
   47dbc:	d8801c15 	stw	r2,112(sp)
   47dc0:	d9401b15 	stw	r5,108(sp)
   47dc4:	00c001c4 	movi	r3,7
   47dc8:	19401916 	blt	r3,r5,47e30 <___vfiprintf_internal_r+0xcf8>
   47dcc:	42000204 	addi	r8,r8,8
   47dd0:	29400044 	addi	r5,r5,1
   47dd4:	003e5506 	br	4772c <__alt_data_end+0xfffeb36c>
   47dd8:	d9402017 	ldw	r5,128(sp)
   47ddc:	d9002117 	ldw	r4,132(sp)
   47de0:	d9801a04 	addi	r6,sp,104
   47de4:	00470240 	call	47024 <__sprint_r.part.0>
   47de8:	10000b1e 	bne	r2,zero,47e18 <___vfiprintf_internal_r+0xce0>
   47dec:	d9001b17 	ldw	r4,108(sp)
   47df0:	d8801c17 	ldw	r2,112(sp)
   47df4:	d811883a 	mov	r8,sp
   47df8:	21400044 	addi	r5,r4,1
   47dfc:	003fdc06 	br	47d70 <__alt_data_end+0xfffeb9b0>
   47e00:	d8801c17 	ldw	r2,112(sp)
   47e04:	10000426 	beq	r2,zero,47e18 <___vfiprintf_internal_r+0xce0>
   47e08:	d9402017 	ldw	r5,128(sp)
   47e0c:	d9002117 	ldw	r4,132(sp)
   47e10:	d9801a04 	addi	r6,sp,104
   47e14:	00470240 	call	47024 <__sprint_r.part.0>
   47e18:	d9402017 	ldw	r5,128(sp)
   47e1c:	2880030b 	ldhu	r2,12(r5)
   47e20:	1080100c 	andi	r2,r2,64
   47e24:	10014d1e 	bne	r2,zero,4835c <___vfiprintf_internal_r+0x1224>
   47e28:	d8802417 	ldw	r2,144(sp)
   47e2c:	003d9706 	br	4748c <__alt_data_end+0xfffeb0cc>
   47e30:	1000d21e 	bne	r2,zero,4817c <___vfiprintf_internal_r+0x1044>
   47e34:	00c00044 	movi	r3,1
   47e38:	a005883a 	mov	r2,r20
   47e3c:	ddc00015 	stw	r23,0(sp)
   47e40:	dd000115 	stw	r20,4(sp)
   47e44:	dd001c15 	stw	r20,112(sp)
   47e48:	d8c01b15 	stw	r3,108(sp)
   47e4c:	d811883a 	mov	r8,sp
   47e50:	42000204 	addi	r8,r8,8
   47e54:	8c40010c 	andi	r17,r17,4
   47e58:	88004026 	beq	r17,zero,47f5c <___vfiprintf_internal_r+0xe24>
   47e5c:	d9002517 	ldw	r4,148(sp)
   47e60:	24e3c83a 	sub	r17,r4,r19
   47e64:	04403d0e 	bge	zero,r17,47f5c <___vfiprintf_internal_r+0xe24>
   47e68:	04000404 	movi	r16,16
   47e6c:	8441a90e 	bge	r16,r17,48514 <___vfiprintf_internal_r+0x13dc>
   47e70:	00c00174 	movhi	r3,5
   47e74:	18fea104 	addi	r3,r3,-1404
   47e78:	d9001b17 	ldw	r4,108(sp)
   47e7c:	d8c02315 	stw	r3,140(sp)
   47e80:	050001c4 	movi	r20,7
   47e84:	dd402117 	ldw	r21,132(sp)
   47e88:	ddc02017 	ldw	r23,128(sp)
   47e8c:	00000506 	br	47ea4 <___vfiprintf_internal_r+0xd6c>
   47e90:	21400084 	addi	r5,r4,2
   47e94:	42000204 	addi	r8,r8,8
   47e98:	1809883a 	mov	r4,r3
   47e9c:	8c7ffc04 	addi	r17,r17,-16
   47ea0:	84400f0e 	bge	r16,r17,47ee0 <___vfiprintf_internal_r+0xda8>
   47ea4:	01400174 	movhi	r5,5
   47ea8:	10800404 	addi	r2,r2,16
   47eac:	20c00044 	addi	r3,r4,1
   47eb0:	297ea104 	addi	r5,r5,-1404
   47eb4:	41400015 	stw	r5,0(r8)
   47eb8:	44000115 	stw	r16,4(r8)
   47ebc:	d8801c15 	stw	r2,112(sp)
   47ec0:	d8c01b15 	stw	r3,108(sp)
   47ec4:	a0fff20e 	bge	r20,r3,47e90 <__alt_data_end+0xfffebad0>
   47ec8:	1000141e 	bne	r2,zero,47f1c <___vfiprintf_internal_r+0xde4>
   47ecc:	8c7ffc04 	addi	r17,r17,-16
   47ed0:	01400044 	movi	r5,1
   47ed4:	0009883a 	mov	r4,zero
   47ed8:	d811883a 	mov	r8,sp
   47edc:	847ff116 	blt	r16,r17,47ea4 <__alt_data_end+0xfffebae4>
   47ee0:	d8c02317 	ldw	r3,140(sp)
   47ee4:	1445883a 	add	r2,r2,r17
   47ee8:	44400115 	stw	r17,4(r8)
   47eec:	40c00015 	stw	r3,0(r8)
   47ef0:	d8801c15 	stw	r2,112(sp)
   47ef4:	d9401b15 	stw	r5,108(sp)
   47ef8:	00c001c4 	movi	r3,7
   47efc:	1940170e 	bge	r3,r5,47f5c <___vfiprintf_internal_r+0xe24>
   47f00:	1000101e 	bne	r2,zero,47f44 <___vfiprintf_internal_r+0xe0c>
   47f04:	d8802517 	ldw	r2,148(sp)
   47f08:	14c11616 	blt	r2,r19,48364 <___vfiprintf_internal_r+0x122c>
   47f0c:	d9002417 	ldw	r4,144(sp)
   47f10:	2089883a 	add	r4,r4,r2
   47f14:	d9002415 	stw	r4,144(sp)
   47f18:	003e1806 	br	4777c <__alt_data_end+0xfffeb3bc>
   47f1c:	d9801a04 	addi	r6,sp,104
   47f20:	b80b883a 	mov	r5,r23
   47f24:	a809883a 	mov	r4,r21
   47f28:	00470240 	call	47024 <__sprint_r.part.0>
   47f2c:	103fba1e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   47f30:	d9001b17 	ldw	r4,108(sp)
   47f34:	d8801c17 	ldw	r2,112(sp)
   47f38:	d811883a 	mov	r8,sp
   47f3c:	21400044 	addi	r5,r4,1
   47f40:	003fd606 	br	47e9c <__alt_data_end+0xfffebadc>
   47f44:	d9402017 	ldw	r5,128(sp)
   47f48:	d9002117 	ldw	r4,132(sp)
   47f4c:	d9801a04 	addi	r6,sp,104
   47f50:	00470240 	call	47024 <__sprint_r.part.0>
   47f54:	103fb01e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   47f58:	d8801c17 	ldw	r2,112(sp)
   47f5c:	d8c02517 	ldw	r3,148(sp)
   47f60:	1cc0010e 	bge	r3,r19,47f68 <___vfiprintf_internal_r+0xe30>
   47f64:	9807883a 	mov	r3,r19
   47f68:	d9002417 	ldw	r4,144(sp)
   47f6c:	20c9883a 	add	r4,r4,r3
   47f70:	d9002415 	stw	r4,144(sp)
   47f74:	103e0126 	beq	r2,zero,4777c <__alt_data_end+0xfffeb3bc>
   47f78:	d9402017 	ldw	r5,128(sp)
   47f7c:	d9002117 	ldw	r4,132(sp)
   47f80:	d9801a04 	addi	r6,sp,104
   47f84:	00470240 	call	47024 <__sprint_r.part.0>
   47f88:	103dfc26 	beq	r2,zero,4777c <__alt_data_end+0xfffeb3bc>
   47f8c:	003fa206 	br	47e18 <__alt_data_end+0xfffeba58>
   47f90:	d9402017 	ldw	r5,128(sp)
   47f94:	d9002117 	ldw	r4,132(sp)
   47f98:	d9801a04 	addi	r6,sp,104
   47f9c:	d9c02b15 	stw	r7,172(sp)
   47fa0:	00470240 	call	47024 <__sprint_r.part.0>
   47fa4:	d9c02b17 	ldw	r7,172(sp)
   47fa8:	103f9b1e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   47fac:	d9001b17 	ldw	r4,108(sp)
   47fb0:	d8801c17 	ldw	r2,112(sp)
   47fb4:	d811883a 	mov	r8,sp
   47fb8:	21800044 	addi	r6,r4,1
   47fbc:	003dbf06 	br	476bc <__alt_data_end+0xfffeb2fc>
   47fc0:	1000d81e 	bne	r2,zero,48324 <___vfiprintf_internal_r+0x11ec>
   47fc4:	d9001d87 	ldb	r4,118(sp)
   47fc8:	20000a26 	beq	r4,zero,47ff4 <___vfiprintf_internal_r+0xebc>
   47fcc:	00800044 	movi	r2,1
   47fd0:	d9001d84 	addi	r4,sp,118
   47fd4:	100b883a 	mov	r5,r2
   47fd8:	d9000015 	stw	r4,0(sp)
   47fdc:	d8800115 	stw	r2,4(sp)
   47fe0:	d811883a 	mov	r8,sp
   47fe4:	2809883a 	mov	r4,r5
   47fe8:	42000204 	addi	r8,r8,8
   47fec:	29400044 	addi	r5,r5,1
   47ff0:	003d9506 	br	47648 <__alt_data_end+0xfffeb288>
   47ff4:	3800fd26 	beq	r7,zero,483ec <___vfiprintf_internal_r+0x12b4>
   47ff8:	00800084 	movi	r2,2
   47ffc:	d9001d04 	addi	r4,sp,116
   48000:	d9000015 	stw	r4,0(sp)
   48004:	d8800115 	stw	r2,4(sp)
   48008:	01400044 	movi	r5,1
   4800c:	d811883a 	mov	r8,sp
   48010:	2809883a 	mov	r4,r5
   48014:	42000204 	addi	r8,r8,8
   48018:	29400044 	addi	r5,r5,1
   4801c:	003f4606 	br	47d38 <__alt_data_end+0xfffeb978>
   48020:	d8802517 	ldw	r2,148(sp)
   48024:	14c0010e 	bge	r2,r19,4802c <___vfiprintf_internal_r+0xef4>
   48028:	9805883a 	mov	r2,r19
   4802c:	d9402417 	ldw	r5,144(sp)
   48030:	288b883a 	add	r5,r5,r2
   48034:	d9402415 	stw	r5,144(sp)
   48038:	003dd006 	br	4777c <__alt_data_end+0xfffeb3bc>
   4803c:	d8001d85 	stb	zero,118(sp)
   48040:	80005d16 	blt	r16,zero,481b8 <___vfiprintf_internal_r+0x1080>
   48044:	00ffdfc4 	movi	r3,-129
   48048:	9d04b03a 	or	r2,r19,r20
   4804c:	88e2703a 	and	r17,r17,r3
   48050:	103d3726 	beq	r2,zero,47530 <__alt_data_end+0xfffeb170>
   48054:	002b883a 	mov	r21,zero
   48058:	d9002617 	ldw	r4,152(sp)
   4805c:	ddc01a04 	addi	r23,sp,104
   48060:	988003cc 	andi	r2,r19,15
   48064:	a006973a 	slli	r3,r20,28
   48068:	2085883a 	add	r2,r4,r2
   4806c:	9826d13a 	srli	r19,r19,4
   48070:	10800003 	ldbu	r2,0(r2)
   48074:	a028d13a 	srli	r20,r20,4
   48078:	bdffffc4 	addi	r23,r23,-1
   4807c:	1ce6b03a 	or	r19,r3,r19
   48080:	b8800005 	stb	r2,0(r23)
   48084:	9d04b03a 	or	r2,r19,r20
   48088:	103ff51e 	bne	r2,zero,48060 <__alt_data_end+0xfffebca0>
   4808c:	d8801e17 	ldw	r2,120(sp)
   48090:	15e9c83a 	sub	r20,r2,r23
   48094:	003d2b06 	br	47544 <__alt_data_end+0xfffeb184>
   48098:	d9402017 	ldw	r5,128(sp)
   4809c:	d9002117 	ldw	r4,132(sp)
   480a0:	d9801a04 	addi	r6,sp,104
   480a4:	00470240 	call	47024 <__sprint_r.part.0>
   480a8:	103f5b1e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   480ac:	d8801c17 	ldw	r2,112(sp)
   480b0:	d811883a 	mov	r8,sp
   480b4:	003f6706 	br	47e54 <__alt_data_end+0xfffeba94>
   480b8:	d9402017 	ldw	r5,128(sp)
   480bc:	d9002117 	ldw	r4,132(sp)
   480c0:	d9801a04 	addi	r6,sp,104
   480c4:	00470240 	call	47024 <__sprint_r.part.0>
   480c8:	103f531e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   480cc:	d811883a 	mov	r8,sp
   480d0:	003cd906 	br	47438 <__alt_data_end+0xfffeb078>
   480d4:	10803fcc 	andi	r2,r2,255
   480d8:	1080201c 	xori	r2,r2,128
   480dc:	10bfe004 	addi	r2,r2,-128
   480e0:	00c00c04 	movi	r3,48
   480e4:	10ffe926 	beq	r2,r3,4808c <__alt_data_end+0xfffebccc>
   480e8:	b8ffffc5 	stb	r3,-1(r23)
   480ec:	d8c01e17 	ldw	r3,120(sp)
   480f0:	b8bfffc4 	addi	r2,r23,-1
   480f4:	102f883a 	mov	r23,r2
   480f8:	18a9c83a 	sub	r20,r3,r2
   480fc:	003d1106 	br	47544 <__alt_data_end+0xfffeb184>
   48100:	d9402017 	ldw	r5,128(sp)
   48104:	d9002117 	ldw	r4,132(sp)
   48108:	d9801a04 	addi	r6,sp,104
   4810c:	d8c02a15 	stw	r3,168(sp)
   48110:	d9c02b15 	stw	r7,172(sp)
   48114:	00470240 	call	47024 <__sprint_r.part.0>
   48118:	d8c02a17 	ldw	r3,168(sp)
   4811c:	d9c02b17 	ldw	r7,172(sp)
   48120:	103f3d1e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   48124:	d9001b17 	ldw	r4,108(sp)
   48128:	d8801c17 	ldw	r2,112(sp)
   4812c:	d811883a 	mov	r8,sp
   48130:	21400044 	addi	r5,r4,1
   48134:	003d4406 	br	47648 <__alt_data_end+0xfffeb288>
   48138:	d9402017 	ldw	r5,128(sp)
   4813c:	d9002117 	ldw	r4,132(sp)
   48140:	d9801a04 	addi	r6,sp,104
   48144:	d8c02a15 	stw	r3,168(sp)
   48148:	00470240 	call	47024 <__sprint_r.part.0>
   4814c:	d8c02a17 	ldw	r3,168(sp)
   48150:	103f311e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   48154:	d9001b17 	ldw	r4,108(sp)
   48158:	d8801c17 	ldw	r2,112(sp)
   4815c:	d811883a 	mov	r8,sp
   48160:	21400044 	addi	r5,r4,1
   48164:	003ef406 	br	47d38 <__alt_data_end+0xfffeb978>
   48168:	1000bd1e 	bne	r2,zero,48460 <___vfiprintf_internal_r+0x1328>
   4816c:	01400044 	movi	r5,1
   48170:	0009883a 	mov	r4,zero
   48174:	d811883a 	mov	r8,sp
   48178:	003ef106 	br	47d40 <__alt_data_end+0xfffeb980>
   4817c:	d9402017 	ldw	r5,128(sp)
   48180:	d9002117 	ldw	r4,132(sp)
   48184:	d9801a04 	addi	r6,sp,104
   48188:	00470240 	call	47024 <__sprint_r.part.0>
   4818c:	103f221e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   48190:	d9401b17 	ldw	r5,108(sp)
   48194:	d8801c17 	ldw	r2,112(sp)
   48198:	d811883a 	mov	r8,sp
   4819c:	29400044 	addi	r5,r5,1
   481a0:	003d6206 	br	4772c <__alt_data_end+0xfffeb36c>
   481a4:	01400174 	movhi	r5,5
   481a8:	297e3c04 	addi	r5,r5,-1808
   481ac:	d9402615 	stw	r5,152(sp)
   481b0:	d8c02215 	stw	r3,136(sp)
   481b4:	1023883a 	mov	r17,r2
   481b8:	9d04b03a 	or	r2,r19,r20
   481bc:	103fa51e 	bne	r2,zero,48054 <__alt_data_end+0xfffebc94>
   481c0:	002b883a 	mov	r21,zero
   481c4:	00800084 	movi	r2,2
   481c8:	003e4a06 	br	47af4 <__alt_data_end+0xfffeb734>
   481cc:	01400174 	movhi	r5,5
   481d0:	297e3c04 	addi	r5,r5,-1808
   481d4:	002b883a 	mov	r21,zero
   481d8:	d9402615 	stw	r5,152(sp)
   481dc:	003f9e06 	br	48058 <__alt_data_end+0xfffebc98>
   481e0:	d9402217 	ldw	r5,136(sp)
   481e4:	d8001d85 	stb	zero,118(sp)
   481e8:	0029883a 	mov	r20,zero
   481ec:	28800104 	addi	r2,r5,4
   481f0:	2cc00017 	ldw	r19,0(r5)
   481f4:	803e3a16 	blt	r16,zero,47ae0 <__alt_data_end+0xfffeb720>
   481f8:	00ffdfc4 	movi	r3,-129
   481fc:	d8802215 	stw	r2,136(sp)
   48200:	88e2703a 	and	r17,r17,r3
   48204:	002b883a 	mov	r21,zero
   48208:	983e9b26 	beq	r19,zero,47c78 <__alt_data_end+0xfffeb8b8>
   4820c:	00800244 	movi	r2,9
   48210:	14fdc936 	bltu	r2,r19,47938 <__alt_data_end+0xfffeb578>
   48214:	003e9a06 	br	47c80 <__alt_data_end+0xfffeb8c0>
   48218:	00800c04 	movi	r2,48
   4821c:	d8c01d45 	stb	r3,117(sp)
   48220:	d8801d05 	stb	r2,116(sp)
   48224:	d8001d85 	stb	zero,118(sp)
   48228:	88c00094 	ori	r3,r17,2
   4822c:	80009c16 	blt	r16,zero,484a0 <___vfiprintf_internal_r+0x1368>
   48230:	00bfdfc4 	movi	r2,-129
   48234:	88a2703a 	and	r17,r17,r2
   48238:	8c400094 	ori	r17,r17,2
   4823c:	002b883a 	mov	r21,zero
   48240:	003f8506 	br	48058 <__alt_data_end+0xfffebc98>
   48244:	b029883a 	mov	r20,r22
   48248:	003c0b06 	br	47278 <__alt_data_end+0xfffeaeb8>
   4824c:	04e7c83a 	sub	r19,zero,r19
   48250:	05400b44 	movi	r21,45
   48254:	9804c03a 	cmpne	r2,r19,zero
   48258:	0529c83a 	sub	r20,zero,r20
   4825c:	dd401d85 	stb	r21,118(sp)
   48260:	a0a9c83a 	sub	r20,r20,r2
   48264:	80009716 	blt	r16,zero,484c4 <___vfiprintf_internal_r+0x138c>
   48268:	00bfdfc4 	movi	r2,-129
   4826c:	88a2703a 	and	r17,r17,r2
   48270:	003db006 	br	47934 <__alt_data_end+0xfffeb574>
   48274:	b0c00007 	ldb	r3,0(r22)
   48278:	003c0c06 	br	472ac <__alt_data_end+0xfffeaeec>
   4827c:	8880100c 	andi	r2,r17,64
   48280:	d8001d85 	stb	zero,118(sp)
   48284:	1000461e 	bne	r2,zero,483a0 <___vfiprintf_internal_r+0x1268>
   48288:	d9002217 	ldw	r4,136(sp)
   4828c:	0029883a 	mov	r20,zero
   48290:	20800104 	addi	r2,r4,4
   48294:	24c00017 	ldw	r19,0(r4)
   48298:	803df80e 	bge	r16,zero,47a7c <__alt_data_end+0xfffeb6bc>
   4829c:	9d06b03a 	or	r3,r19,r20
   482a0:	d8802215 	stw	r2,136(sp)
   482a4:	183d5e1e 	bne	r3,zero,47820 <__alt_data_end+0xfffeb460>
   482a8:	002b883a 	mov	r21,zero
   482ac:	0005883a 	mov	r2,zero
   482b0:	003e1006 	br	47af4 <__alt_data_end+0xfffeb734>
   482b4:	8880040c 	andi	r2,r17,16
   482b8:	1000321e 	bne	r2,zero,48384 <___vfiprintf_internal_r+0x124c>
   482bc:	8c40100c 	andi	r17,r17,64
   482c0:	88008d26 	beq	r17,zero,484f8 <___vfiprintf_internal_r+0x13c0>
   482c4:	d9402217 	ldw	r5,136(sp)
   482c8:	d8c02417 	ldw	r3,144(sp)
   482cc:	28800017 	ldw	r2,0(r5)
   482d0:	29400104 	addi	r5,r5,4
   482d4:	d9402215 	stw	r5,136(sp)
   482d8:	10c0000d 	sth	r3,0(r2)
   482dc:	003bca06 	br	47208 <__alt_data_end+0xfffeae48>
   482e0:	8880100c 	andi	r2,r17,64
   482e4:	10003a26 	beq	r2,zero,483d0 <___vfiprintf_internal_r+0x1298>
   482e8:	d8802217 	ldw	r2,136(sp)
   482ec:	14c0000f 	ldh	r19,0(r2)
   482f0:	10800104 	addi	r2,r2,4
   482f4:	d8802215 	stw	r2,136(sp)
   482f8:	9829d7fa 	srai	r20,r19,31
   482fc:	a005883a 	mov	r2,r20
   48300:	003d8506 	br	47918 <__alt_data_end+0xfffeb558>
   48304:	8880100c 	andi	r2,r17,64
   48308:	10002b26 	beq	r2,zero,483b8 <___vfiprintf_internal_r+0x1280>
   4830c:	d8802217 	ldw	r2,136(sp)
   48310:	0029883a 	mov	r20,zero
   48314:	14c0000b 	ldhu	r19,0(r2)
   48318:	10800104 	addi	r2,r2,4
   4831c:	d8802215 	stw	r2,136(sp)
   48320:	003d5d06 	br	47898 <__alt_data_end+0xfffeb4d8>
   48324:	d9402017 	ldw	r5,128(sp)
   48328:	d9002117 	ldw	r4,132(sp)
   4832c:	d9801a04 	addi	r6,sp,104
   48330:	d8c02a15 	stw	r3,168(sp)
   48334:	d9c02b15 	stw	r7,172(sp)
   48338:	00470240 	call	47024 <__sprint_r.part.0>
   4833c:	d8c02a17 	ldw	r3,168(sp)
   48340:	d9c02b17 	ldw	r7,172(sp)
   48344:	103eb41e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   48348:	d9001b17 	ldw	r4,108(sp)
   4834c:	d8801c17 	ldw	r2,112(sp)
   48350:	d811883a 	mov	r8,sp
   48354:	21400044 	addi	r5,r4,1
   48358:	003e6706 	br	47cf8 <__alt_data_end+0xfffeb938>
   4835c:	00bfffc4 	movi	r2,-1
   48360:	003c4a06 	br	4748c <__alt_data_end+0xfffeb0cc>
   48364:	9805883a 	mov	r2,r19
   48368:	003ee806 	br	47f0c <__alt_data_end+0xfffebb4c>
   4836c:	d8c02217 	ldw	r3,136(sp)
   48370:	0029883a 	mov	r20,zero
   48374:	18800104 	addi	r2,r3,4
   48378:	1cc0000b 	ldhu	r19,0(r3)
   4837c:	803f9e0e 	bge	r16,zero,481f8 <__alt_data_end+0xfffebe38>
   48380:	003dd706 	br	47ae0 <__alt_data_end+0xfffeb720>
   48384:	d8c02217 	ldw	r3,136(sp)
   48388:	d9002417 	ldw	r4,144(sp)
   4838c:	18800017 	ldw	r2,0(r3)
   48390:	18c00104 	addi	r3,r3,4
   48394:	d8c02215 	stw	r3,136(sp)
   48398:	11000015 	stw	r4,0(r2)
   4839c:	003b9a06 	br	47208 <__alt_data_end+0xfffeae48>
   483a0:	d8c02217 	ldw	r3,136(sp)
   483a4:	0029883a 	mov	r20,zero
   483a8:	18800104 	addi	r2,r3,4
   483ac:	1cc0000b 	ldhu	r19,0(r3)
   483b0:	803db20e 	bge	r16,zero,47a7c <__alt_data_end+0xfffeb6bc>
   483b4:	003fb906 	br	4829c <__alt_data_end+0xfffebedc>
   483b8:	d9002217 	ldw	r4,136(sp)
   483bc:	0029883a 	mov	r20,zero
   483c0:	24c00017 	ldw	r19,0(r4)
   483c4:	21000104 	addi	r4,r4,4
   483c8:	d9002215 	stw	r4,136(sp)
   483cc:	003d3206 	br	47898 <__alt_data_end+0xfffeb4d8>
   483d0:	d8c02217 	ldw	r3,136(sp)
   483d4:	1cc00017 	ldw	r19,0(r3)
   483d8:	18c00104 	addi	r3,r3,4
   483dc:	d8c02215 	stw	r3,136(sp)
   483e0:	9829d7fa 	srai	r20,r19,31
   483e4:	a005883a 	mov	r2,r20
   483e8:	003d4b06 	br	47918 <__alt_data_end+0xfffeb558>
   483ec:	0009883a 	mov	r4,zero
   483f0:	01400044 	movi	r5,1
   483f4:	d811883a 	mov	r8,sp
   483f8:	003e4f06 	br	47d38 <__alt_data_end+0xfffeb978>
   483fc:	d8c02215 	stw	r3,136(sp)
   48400:	002b883a 	mov	r21,zero
   48404:	003db806 	br	47ae8 <__alt_data_end+0xfffeb728>
   48408:	d811883a 	mov	r8,sp
   4840c:	003e9606 	br	47e68 <__alt_data_end+0xfffebaa8>
   48410:	01000174 	movhi	r4,5
   48414:	213e9d04 	addi	r4,r4,-1420
   48418:	d9002315 	stw	r4,140(sp)
   4841c:	003e6306 	br	47dac <__alt_data_end+0xfffeb9ec>
   48420:	b0c00043 	ldbu	r3,1(r22)
   48424:	8c400814 	ori	r17,r17,32
   48428:	b5800044 	addi	r22,r22,1
   4842c:	18c03fcc 	andi	r3,r3,255
   48430:	18c0201c 	xori	r3,r3,128
   48434:	18ffe004 	addi	r3,r3,-128
   48438:	003b9c06 	br	472ac <__alt_data_end+0xfffeaeec>
   4843c:	b809883a 	mov	r4,r23
   48440:	da002a15 	stw	r8,168(sp)
   48444:	0046f8c0 	call	46f8c <strlen>
   48448:	1029883a 	mov	r20,r2
   4844c:	dd401d83 	ldbu	r21,118(sp)
   48450:	df002215 	stw	fp,136(sp)
   48454:	0021883a 	mov	r16,zero
   48458:	da002a17 	ldw	r8,168(sp)
   4845c:	003c3906 	br	47544 <__alt_data_end+0xfffeb184>
   48460:	d9402017 	ldw	r5,128(sp)
   48464:	d9002117 	ldw	r4,132(sp)
   48468:	d9801a04 	addi	r6,sp,104
   4846c:	00470240 	call	47024 <__sprint_r.part.0>
   48470:	103e691e 	bne	r2,zero,47e18 <__alt_data_end+0xfffeba58>
   48474:	d9001b17 	ldw	r4,108(sp)
   48478:	d8801c17 	ldw	r2,112(sp)
   4847c:	d811883a 	mov	r8,sp
   48480:	21400044 	addi	r5,r4,1
   48484:	003e2e06 	br	47d40 <__alt_data_end+0xfffeb980>
   48488:	01000174 	movhi	r4,5
   4848c:	213ea104 	addi	r4,r4,-1404
   48490:	d9002315 	stw	r4,140(sp)
   48494:	d9001b17 	ldw	r4,108(sp)
   48498:	21000044 	addi	r4,r4,1
   4849c:	003c5e06 	br	47618 <__alt_data_end+0xfffeb258>
   484a0:	002b883a 	mov	r21,zero
   484a4:	00800084 	movi	r2,2
   484a8:	10803fcc 	andi	r2,r2,255
   484ac:	01000044 	movi	r4,1
   484b0:	11002b26 	beq	r2,r4,48560 <___vfiprintf_internal_r+0x1428>
   484b4:	01000084 	movi	r4,2
   484b8:	11002b1e 	bne	r2,r4,48568 <___vfiprintf_internal_r+0x1430>
   484bc:	1823883a 	mov	r17,r3
   484c0:	003ee506 	br	48058 <__alt_data_end+0xfffebc98>
   484c4:	8807883a 	mov	r3,r17
   484c8:	00800044 	movi	r2,1
   484cc:	003ff606 	br	484a8 <__alt_data_end+0xfffec0e8>
   484d0:	00800184 	movi	r2,6
   484d4:	1400012e 	bgeu	r2,r16,484dc <___vfiprintf_internal_r+0x13a4>
   484d8:	1021883a 	mov	r16,r2
   484dc:	8029883a 	mov	r20,r16
   484e0:	8027883a 	mov	r19,r16
   484e4:	80002216 	blt	r16,zero,48570 <___vfiprintf_internal_r+0x1438>
   484e8:	05c00174 	movhi	r23,5
   484ec:	df002215 	stw	fp,136(sp)
   484f0:	bdfe4104 	addi	r23,r23,-1788
   484f4:	003cfb06 	br	478e4 <__alt_data_end+0xfffeb524>
   484f8:	d9002217 	ldw	r4,136(sp)
   484fc:	d9402417 	ldw	r5,144(sp)
   48500:	20800017 	ldw	r2,0(r4)
   48504:	21000104 	addi	r4,r4,4
   48508:	d9002215 	stw	r4,136(sp)
   4850c:	11400015 	stw	r5,0(r2)
   48510:	003b3d06 	br	47208 <__alt_data_end+0xfffeae48>
   48514:	01400174 	movhi	r5,5
   48518:	297ea104 	addi	r5,r5,-1404
   4851c:	d9402315 	stw	r5,140(sp)
   48520:	d9401b17 	ldw	r5,108(sp)
   48524:	29400044 	addi	r5,r5,1
   48528:	003e6d06 	br	47ee0 <__alt_data_end+0xfffebb20>
   4852c:	8029883a 	mov	r20,r16
   48530:	dd401d83 	ldbu	r21,118(sp)
   48534:	df002215 	stw	fp,136(sp)
   48538:	0021883a 	mov	r16,zero
   4853c:	003c0106 	br	47544 <__alt_data_end+0xfffeb184>
   48540:	00c00174 	movhi	r3,5
   48544:	18fe9d04 	addi	r3,r3,-1420
   48548:	d8c02315 	stw	r3,140(sp)
   4854c:	280d883a 	mov	r6,r5
   48550:	003c6906 	br	476f8 <__alt_data_end+0xfffeb338>
   48554:	802d883a 	mov	r22,r16
   48558:	0021883a 	mov	r16,zero
   4855c:	003b5406 	br	472b0 <__alt_data_end+0xfffeaef0>
   48560:	1823883a 	mov	r17,r3
   48564:	003cf306 	br	47934 <__alt_data_end+0xfffeb574>
   48568:	1823883a 	mov	r17,r3
   4856c:	003cad06 	br	47824 <__alt_data_end+0xfffeb464>
   48570:	0027883a 	mov	r19,zero
   48574:	003fdc06 	br	484e8 <__alt_data_end+0xfffec128>
   48578:	d9402217 	ldw	r5,136(sp)
   4857c:	8005883a 	mov	r2,r16
   48580:	b0c00043 	ldbu	r3,1(r22)
   48584:	2c000017 	ldw	r16,0(r5)
   48588:	29000104 	addi	r4,r5,4
   4858c:	d9002215 	stw	r4,136(sp)
   48590:	102d883a 	mov	r22,r2
   48594:	803fa50e 	bge	r16,zero,4842c <__alt_data_end+0xfffec06c>
   48598:	18c03fcc 	andi	r3,r3,255
   4859c:	18c0201c 	xori	r3,r3,128
   485a0:	043fffc4 	movi	r16,-1
   485a4:	18ffe004 	addi	r3,r3,-128
   485a8:	003b4006 	br	472ac <__alt_data_end+0xfffeaeec>
   485ac:	d9402303 	ldbu	r5,140(sp)
   485b0:	d9401d85 	stb	r5,118(sp)
   485b4:	003cae06 	br	47870 <__alt_data_end+0xfffeb4b0>
   485b8:	d8c02303 	ldbu	r3,140(sp)
   485bc:	d8c01d85 	stb	r3,118(sp)
   485c0:	003d1406 	br	47a14 <__alt_data_end+0xfffeb654>
   485c4:	d8c02303 	ldbu	r3,140(sp)
   485c8:	d8c01d85 	stb	r3,118(sp)
   485cc:	003cca06 	br	478f8 <__alt_data_end+0xfffeb538>
   485d0:	8880004c 	andi	r2,r17,1
   485d4:	002b883a 	mov	r21,zero
   485d8:	10000526 	beq	r2,zero,485f0 <___vfiprintf_internal_r+0x14b8>
   485dc:	00800c04 	movi	r2,48
   485e0:	d88019c5 	stb	r2,103(sp)
   485e4:	dd002817 	ldw	r20,160(sp)
   485e8:	ddc019c4 	addi	r23,sp,103
   485ec:	003bd506 	br	47544 <__alt_data_end+0xfffeb184>
   485f0:	0029883a 	mov	r20,zero
   485f4:	ddc01a04 	addi	r23,sp,104
   485f8:	003bd206 	br	47544 <__alt_data_end+0xfffeb184>
   485fc:	d9002303 	ldbu	r4,140(sp)
   48600:	d9001d85 	stb	r4,118(sp)
   48604:	003da606 	br	47ca0 <__alt_data_end+0xfffeb8e0>
   48608:	d8c02303 	ldbu	r3,140(sp)
   4860c:	d8c01d85 	stb	r3,118(sp)
   48610:	003c7606 	br	477ec <__alt_data_end+0xfffeb42c>
   48614:	d8c02303 	ldbu	r3,140(sp)
   48618:	d8c01d85 	stb	r3,118(sp)
   4861c:	003c6506 	br	477b4 <__alt_data_end+0xfffeb3f4>
   48620:	d9002303 	ldbu	r4,140(sp)
   48624:	d9001d85 	stb	r4,118(sp)
   48628:	003d3d06 	br	47b20 <__alt_data_end+0xfffeb760>
   4862c:	d8c02303 	ldbu	r3,140(sp)
   48630:	d8c01d85 	stb	r3,118(sp)
   48634:	003d1d06 	br	47aac <__alt_data_end+0xfffeb6ec>
   48638:	d8c02303 	ldbu	r3,140(sp)
   4863c:	d8c01d85 	stb	r3,118(sp)
   48640:	003d0306 	br	47a50 <__alt_data_end+0xfffeb690>

00048644 <__vfiprintf_internal>:
   48644:	00800174 	movhi	r2,5
   48648:	1085ef04 	addi	r2,r2,6076
   4864c:	300f883a 	mov	r7,r6
   48650:	280d883a 	mov	r6,r5
   48654:	200b883a 	mov	r5,r4
   48658:	11000017 	ldw	r4,0(r2)
   4865c:	00471381 	jmpi	47138 <___vfiprintf_internal_r>

00048660 <__sbprintf>:
   48660:	2880030b 	ldhu	r2,12(r5)
   48664:	2ac01917 	ldw	r11,100(r5)
   48668:	2a80038b 	ldhu	r10,14(r5)
   4866c:	2a400717 	ldw	r9,28(r5)
   48670:	2a000917 	ldw	r8,36(r5)
   48674:	defee204 	addi	sp,sp,-1144
   48678:	00c10004 	movi	r3,1024
   4867c:	dc011a15 	stw	r16,1128(sp)
   48680:	10bfff4c 	andi	r2,r2,65533
   48684:	2821883a 	mov	r16,r5
   48688:	d8cb883a 	add	r5,sp,r3
   4868c:	dc811c15 	stw	r18,1136(sp)
   48690:	dc411b15 	stw	r17,1132(sp)
   48694:	dfc11d15 	stw	ra,1140(sp)
   48698:	2025883a 	mov	r18,r4
   4869c:	d881030d 	sth	r2,1036(sp)
   486a0:	dac11915 	stw	r11,1124(sp)
   486a4:	da81038d 	sth	r10,1038(sp)
   486a8:	da410715 	stw	r9,1052(sp)
   486ac:	da010915 	stw	r8,1060(sp)
   486b0:	dec10015 	stw	sp,1024(sp)
   486b4:	dec10415 	stw	sp,1040(sp)
   486b8:	d8c10215 	stw	r3,1032(sp)
   486bc:	d8c10515 	stw	r3,1044(sp)
   486c0:	d8010615 	stw	zero,1048(sp)
   486c4:	00471380 	call	47138 <___vfiprintf_internal_r>
   486c8:	1023883a 	mov	r17,r2
   486cc:	10000416 	blt	r2,zero,486e0 <__sbprintf+0x80>
   486d0:	d9410004 	addi	r5,sp,1024
   486d4:	9009883a 	mov	r4,r18
   486d8:	00444040 	call	44404 <_fflush_r>
   486dc:	10000d1e 	bne	r2,zero,48714 <__sbprintf+0xb4>
   486e0:	d881030b 	ldhu	r2,1036(sp)
   486e4:	1080100c 	andi	r2,r2,64
   486e8:	10000326 	beq	r2,zero,486f8 <__sbprintf+0x98>
   486ec:	8080030b 	ldhu	r2,12(r16)
   486f0:	10801014 	ori	r2,r2,64
   486f4:	8080030d 	sth	r2,12(r16)
   486f8:	8805883a 	mov	r2,r17
   486fc:	dfc11d17 	ldw	ra,1140(sp)
   48700:	dc811c17 	ldw	r18,1136(sp)
   48704:	dc411b17 	ldw	r17,1132(sp)
   48708:	dc011a17 	ldw	r16,1128(sp)
   4870c:	dec11e04 	addi	sp,sp,1144
   48710:	f800283a 	ret
   48714:	047fffc4 	movi	r17,-1
   48718:	003ff106 	br	486e0 <__alt_data_end+0xfffec320>

0004871c <_write_r>:
   4871c:	defffd04 	addi	sp,sp,-12
   48720:	2805883a 	mov	r2,r5
   48724:	dc000015 	stw	r16,0(sp)
   48728:	04000174 	movhi	r16,5
   4872c:	dc400115 	stw	r17,4(sp)
   48730:	300b883a 	mov	r5,r6
   48734:	840d1304 	addi	r16,r16,13388
   48738:	2023883a 	mov	r17,r4
   4873c:	380d883a 	mov	r6,r7
   48740:	1009883a 	mov	r4,r2
   48744:	dfc00215 	stw	ra,8(sp)
   48748:	80000015 	stw	zero,0(r16)
   4874c:	004dac40 	call	4dac4 <write>
   48750:	00ffffc4 	movi	r3,-1
   48754:	10c00526 	beq	r2,r3,4876c <_write_r+0x50>
   48758:	dfc00217 	ldw	ra,8(sp)
   4875c:	dc400117 	ldw	r17,4(sp)
   48760:	dc000017 	ldw	r16,0(sp)
   48764:	dec00304 	addi	sp,sp,12
   48768:	f800283a 	ret
   4876c:	80c00017 	ldw	r3,0(r16)
   48770:	183ff926 	beq	r3,zero,48758 <__alt_data_end+0xfffec398>
   48774:	88c00015 	stw	r3,0(r17)
   48778:	003ff706 	br	48758 <__alt_data_end+0xfffec398>

0004877c <_close_r>:
   4877c:	defffd04 	addi	sp,sp,-12
   48780:	dc000015 	stw	r16,0(sp)
   48784:	04000174 	movhi	r16,5
   48788:	dc400115 	stw	r17,4(sp)
   4878c:	840d1304 	addi	r16,r16,13388
   48790:	2023883a 	mov	r17,r4
   48794:	2809883a 	mov	r4,r5
   48798:	dfc00215 	stw	ra,8(sp)
   4879c:	80000015 	stw	zero,0(r16)
   487a0:	004d26c0 	call	4d26c <close>
   487a4:	00ffffc4 	movi	r3,-1
   487a8:	10c00526 	beq	r2,r3,487c0 <_close_r+0x44>
   487ac:	dfc00217 	ldw	ra,8(sp)
   487b0:	dc400117 	ldw	r17,4(sp)
   487b4:	dc000017 	ldw	r16,0(sp)
   487b8:	dec00304 	addi	sp,sp,12
   487bc:	f800283a 	ret
   487c0:	80c00017 	ldw	r3,0(r16)
   487c4:	183ff926 	beq	r3,zero,487ac <__alt_data_end+0xfffec3ec>
   487c8:	88c00015 	stw	r3,0(r17)
   487cc:	003ff706 	br	487ac <__alt_data_end+0xfffec3ec>

000487d0 <_calloc_r>:
   487d0:	defffe04 	addi	sp,sp,-8
   487d4:	2805883a 	mov	r2,r5
   487d8:	dc000015 	stw	r16,0(sp)
   487dc:	300b883a 	mov	r5,r6
   487e0:	2021883a 	mov	r16,r4
   487e4:	1009883a 	mov	r4,r2
   487e8:	dfc00115 	stw	ra,4(sp)
   487ec:	004a9640 	call	4a964 <__mulsi3>
   487f0:	100b883a 	mov	r5,r2
   487f4:	8009883a 	mov	r4,r16
   487f8:	00450940 	call	45094 <_malloc_r>
   487fc:	10002926 	beq	r2,zero,488a4 <_calloc_r+0xd4>
   48800:	11bfff17 	ldw	r6,-4(r2)
   48804:	1021883a 	mov	r16,r2
   48808:	00bfff04 	movi	r2,-4
   4880c:	308c703a 	and	r6,r6,r2
   48810:	00c00904 	movi	r3,36
   48814:	308d883a 	add	r6,r6,r2
   48818:	19801636 	bltu	r3,r6,48874 <_calloc_r+0xa4>
   4881c:	008004c4 	movi	r2,19
   48820:	11800b2e 	bgeu	r2,r6,48850 <_calloc_r+0x80>
   48824:	80000015 	stw	zero,0(r16)
   48828:	80000115 	stw	zero,4(r16)
   4882c:	008006c4 	movi	r2,27
   48830:	11801a2e 	bgeu	r2,r6,4889c <_calloc_r+0xcc>
   48834:	80000215 	stw	zero,8(r16)
   48838:	80000315 	stw	zero,12(r16)
   4883c:	30c0151e 	bne	r6,r3,48894 <_calloc_r+0xc4>
   48840:	80000415 	stw	zero,16(r16)
   48844:	80800604 	addi	r2,r16,24
   48848:	80000515 	stw	zero,20(r16)
   4884c:	00000106 	br	48854 <_calloc_r+0x84>
   48850:	8005883a 	mov	r2,r16
   48854:	10000015 	stw	zero,0(r2)
   48858:	10000115 	stw	zero,4(r2)
   4885c:	10000215 	stw	zero,8(r2)
   48860:	8005883a 	mov	r2,r16
   48864:	dfc00117 	ldw	ra,4(sp)
   48868:	dc000017 	ldw	r16,0(sp)
   4886c:	dec00204 	addi	sp,sp,8
   48870:	f800283a 	ret
   48874:	000b883a 	mov	r5,zero
   48878:	8009883a 	mov	r4,r16
   4887c:	0045acc0 	call	45acc <memset>
   48880:	8005883a 	mov	r2,r16
   48884:	dfc00117 	ldw	ra,4(sp)
   48888:	dc000017 	ldw	r16,0(sp)
   4888c:	dec00204 	addi	sp,sp,8
   48890:	f800283a 	ret
   48894:	80800404 	addi	r2,r16,16
   48898:	003fee06 	br	48854 <__alt_data_end+0xfffec494>
   4889c:	80800204 	addi	r2,r16,8
   488a0:	003fec06 	br	48854 <__alt_data_end+0xfffec494>
   488a4:	0005883a 	mov	r2,zero
   488a8:	003fee06 	br	48864 <__alt_data_end+0xfffec4a4>

000488ac <_fclose_r>:
   488ac:	28003926 	beq	r5,zero,48994 <_fclose_r+0xe8>
   488b0:	defffc04 	addi	sp,sp,-16
   488b4:	dc400115 	stw	r17,4(sp)
   488b8:	dc000015 	stw	r16,0(sp)
   488bc:	dfc00315 	stw	ra,12(sp)
   488c0:	dc800215 	stw	r18,8(sp)
   488c4:	2023883a 	mov	r17,r4
   488c8:	2821883a 	mov	r16,r5
   488cc:	20000226 	beq	r4,zero,488d8 <_fclose_r+0x2c>
   488d0:	20800e17 	ldw	r2,56(r4)
   488d4:	10002726 	beq	r2,zero,48974 <_fclose_r+0xc8>
   488d8:	8080030f 	ldh	r2,12(r16)
   488dc:	1000071e 	bne	r2,zero,488fc <_fclose_r+0x50>
   488e0:	0005883a 	mov	r2,zero
   488e4:	dfc00317 	ldw	ra,12(sp)
   488e8:	dc800217 	ldw	r18,8(sp)
   488ec:	dc400117 	ldw	r17,4(sp)
   488f0:	dc000017 	ldw	r16,0(sp)
   488f4:	dec00404 	addi	sp,sp,16
   488f8:	f800283a 	ret
   488fc:	800b883a 	mov	r5,r16
   48900:	8809883a 	mov	r4,r17
   48904:	00441e80 	call	441e8 <__sflush_r>
   48908:	1025883a 	mov	r18,r2
   4890c:	80800b17 	ldw	r2,44(r16)
   48910:	10000426 	beq	r2,zero,48924 <_fclose_r+0x78>
   48914:	81400717 	ldw	r5,28(r16)
   48918:	8809883a 	mov	r4,r17
   4891c:	103ee83a 	callr	r2
   48920:	10001616 	blt	r2,zero,4897c <_fclose_r+0xd0>
   48924:	8080030b 	ldhu	r2,12(r16)
   48928:	1080200c 	andi	r2,r2,128
   4892c:	1000151e 	bne	r2,zero,48984 <_fclose_r+0xd8>
   48930:	81400c17 	ldw	r5,48(r16)
   48934:	28000526 	beq	r5,zero,4894c <_fclose_r+0xa0>
   48938:	80801004 	addi	r2,r16,64
   4893c:	28800226 	beq	r5,r2,48948 <_fclose_r+0x9c>
   48940:	8809883a 	mov	r4,r17
   48944:	00449640 	call	44964 <_free_r>
   48948:	80000c15 	stw	zero,48(r16)
   4894c:	81401117 	ldw	r5,68(r16)
   48950:	28000326 	beq	r5,zero,48960 <_fclose_r+0xb4>
   48954:	8809883a 	mov	r4,r17
   48958:	00449640 	call	44964 <_free_r>
   4895c:	80001115 	stw	zero,68(r16)
   48960:	00448000 	call	44800 <__sfp_lock_acquire>
   48964:	8000030d 	sth	zero,12(r16)
   48968:	00448040 	call	44804 <__sfp_lock_release>
   4896c:	9005883a 	mov	r2,r18
   48970:	003fdc06 	br	488e4 <__alt_data_end+0xfffec524>
   48974:	00447f00 	call	447f0 <__sinit>
   48978:	003fd706 	br	488d8 <__alt_data_end+0xfffec518>
   4897c:	04bfffc4 	movi	r18,-1
   48980:	003fe806 	br	48924 <__alt_data_end+0xfffec564>
   48984:	81400417 	ldw	r5,16(r16)
   48988:	8809883a 	mov	r4,r17
   4898c:	00449640 	call	44964 <_free_r>
   48990:	003fe706 	br	48930 <__alt_data_end+0xfffec570>
   48994:	0005883a 	mov	r2,zero
   48998:	f800283a 	ret

0004899c <fclose>:
   4899c:	00800174 	movhi	r2,5
   489a0:	1085ef04 	addi	r2,r2,6076
   489a4:	200b883a 	mov	r5,r4
   489a8:	11000017 	ldw	r4,0(r2)
   489ac:	00488ac1 	jmpi	488ac <_fclose_r>

000489b0 <__fputwc>:
   489b0:	defff804 	addi	sp,sp,-32
   489b4:	dcc00415 	stw	r19,16(sp)
   489b8:	dc800315 	stw	r18,12(sp)
   489bc:	dc000115 	stw	r16,4(sp)
   489c0:	dfc00715 	stw	ra,28(sp)
   489c4:	dd400615 	stw	r21,24(sp)
   489c8:	dd000515 	stw	r20,20(sp)
   489cc:	dc400215 	stw	r17,8(sp)
   489d0:	2027883a 	mov	r19,r4
   489d4:	2825883a 	mov	r18,r5
   489d8:	3021883a 	mov	r16,r6
   489dc:	0044e840 	call	44e84 <__locale_mb_cur_max>
   489e0:	00c00044 	movi	r3,1
   489e4:	10c03e26 	beq	r2,r3,48ae0 <__fputwc+0x130>
   489e8:	81c01704 	addi	r7,r16,92
   489ec:	900d883a 	mov	r6,r18
   489f0:	d80b883a 	mov	r5,sp
   489f4:	9809883a 	mov	r4,r19
   489f8:	0049a080 	call	49a08 <_wcrtomb_r>
   489fc:	1029883a 	mov	r20,r2
   48a00:	00bfffc4 	movi	r2,-1
   48a04:	a0802026 	beq	r20,r2,48a88 <__fputwc+0xd8>
   48a08:	d9400003 	ldbu	r5,0(sp)
   48a0c:	a0001c26 	beq	r20,zero,48a80 <__fputwc+0xd0>
   48a10:	0023883a 	mov	r17,zero
   48a14:	05400284 	movi	r21,10
   48a18:	00000906 	br	48a40 <__fputwc+0x90>
   48a1c:	80800017 	ldw	r2,0(r16)
   48a20:	11400005 	stb	r5,0(r2)
   48a24:	80c00017 	ldw	r3,0(r16)
   48a28:	18c00044 	addi	r3,r3,1
   48a2c:	80c00015 	stw	r3,0(r16)
   48a30:	8c400044 	addi	r17,r17,1
   48a34:	dc45883a 	add	r2,sp,r17
   48a38:	8d00112e 	bgeu	r17,r20,48a80 <__fputwc+0xd0>
   48a3c:	11400003 	ldbu	r5,0(r2)
   48a40:	80c00217 	ldw	r3,8(r16)
   48a44:	18ffffc4 	addi	r3,r3,-1
   48a48:	80c00215 	stw	r3,8(r16)
   48a4c:	183ff30e 	bge	r3,zero,48a1c <__alt_data_end+0xfffec65c>
   48a50:	80800617 	ldw	r2,24(r16)
   48a54:	18801916 	blt	r3,r2,48abc <__fputwc+0x10c>
   48a58:	80800017 	ldw	r2,0(r16)
   48a5c:	11400005 	stb	r5,0(r2)
   48a60:	80800017 	ldw	r2,0(r16)
   48a64:	10c00003 	ldbu	r3,0(r2)
   48a68:	10800044 	addi	r2,r2,1
   48a6c:	1d402326 	beq	r3,r21,48afc <__fputwc+0x14c>
   48a70:	80800015 	stw	r2,0(r16)
   48a74:	8c400044 	addi	r17,r17,1
   48a78:	dc45883a 	add	r2,sp,r17
   48a7c:	8d3fef36 	bltu	r17,r20,48a3c <__alt_data_end+0xfffec67c>
   48a80:	9005883a 	mov	r2,r18
   48a84:	00000406 	br	48a98 <__fputwc+0xe8>
   48a88:	80c0030b 	ldhu	r3,12(r16)
   48a8c:	a005883a 	mov	r2,r20
   48a90:	18c01014 	ori	r3,r3,64
   48a94:	80c0030d 	sth	r3,12(r16)
   48a98:	dfc00717 	ldw	ra,28(sp)
   48a9c:	dd400617 	ldw	r21,24(sp)
   48aa0:	dd000517 	ldw	r20,20(sp)
   48aa4:	dcc00417 	ldw	r19,16(sp)
   48aa8:	dc800317 	ldw	r18,12(sp)
   48aac:	dc400217 	ldw	r17,8(sp)
   48ab0:	dc000117 	ldw	r16,4(sp)
   48ab4:	dec00804 	addi	sp,sp,32
   48ab8:	f800283a 	ret
   48abc:	800d883a 	mov	r6,r16
   48ac0:	29403fcc 	andi	r5,r5,255
   48ac4:	9809883a 	mov	r4,r19
   48ac8:	00498b00 	call	498b0 <__swbuf_r>
   48acc:	10bfffe0 	cmpeqi	r2,r2,-1
   48ad0:	10803fcc 	andi	r2,r2,255
   48ad4:	103fd626 	beq	r2,zero,48a30 <__alt_data_end+0xfffec670>
   48ad8:	00bfffc4 	movi	r2,-1
   48adc:	003fee06 	br	48a98 <__alt_data_end+0xfffec6d8>
   48ae0:	90ffffc4 	addi	r3,r18,-1
   48ae4:	01003f84 	movi	r4,254
   48ae8:	20ffbf36 	bltu	r4,r3,489e8 <__alt_data_end+0xfffec628>
   48aec:	900b883a 	mov	r5,r18
   48af0:	dc800005 	stb	r18,0(sp)
   48af4:	1029883a 	mov	r20,r2
   48af8:	003fc506 	br	48a10 <__alt_data_end+0xfffec650>
   48afc:	800d883a 	mov	r6,r16
   48b00:	a80b883a 	mov	r5,r21
   48b04:	9809883a 	mov	r4,r19
   48b08:	00498b00 	call	498b0 <__swbuf_r>
   48b0c:	10bfffe0 	cmpeqi	r2,r2,-1
   48b10:	003fef06 	br	48ad0 <__alt_data_end+0xfffec710>

00048b14 <_fputwc_r>:
   48b14:	3080030b 	ldhu	r2,12(r6)
   48b18:	10c8000c 	andi	r3,r2,8192
   48b1c:	1800051e 	bne	r3,zero,48b34 <_fputwc_r+0x20>
   48b20:	30c01917 	ldw	r3,100(r6)
   48b24:	10880014 	ori	r2,r2,8192
   48b28:	3080030d 	sth	r2,12(r6)
   48b2c:	18880014 	ori	r2,r3,8192
   48b30:	30801915 	stw	r2,100(r6)
   48b34:	00489b01 	jmpi	489b0 <__fputwc>

00048b38 <fputwc>:
   48b38:	00800174 	movhi	r2,5
   48b3c:	defffc04 	addi	sp,sp,-16
   48b40:	1085ef04 	addi	r2,r2,6076
   48b44:	dc000115 	stw	r16,4(sp)
   48b48:	14000017 	ldw	r16,0(r2)
   48b4c:	dc400215 	stw	r17,8(sp)
   48b50:	dfc00315 	stw	ra,12(sp)
   48b54:	2023883a 	mov	r17,r4
   48b58:	80000226 	beq	r16,zero,48b64 <fputwc+0x2c>
   48b5c:	80800e17 	ldw	r2,56(r16)
   48b60:	10001026 	beq	r2,zero,48ba4 <fputwc+0x6c>
   48b64:	2880030b 	ldhu	r2,12(r5)
   48b68:	10c8000c 	andi	r3,r2,8192
   48b6c:	1800051e 	bne	r3,zero,48b84 <fputwc+0x4c>
   48b70:	28c01917 	ldw	r3,100(r5)
   48b74:	10880014 	ori	r2,r2,8192
   48b78:	2880030d 	sth	r2,12(r5)
   48b7c:	18880014 	ori	r2,r3,8192
   48b80:	28801915 	stw	r2,100(r5)
   48b84:	280d883a 	mov	r6,r5
   48b88:	8009883a 	mov	r4,r16
   48b8c:	880b883a 	mov	r5,r17
   48b90:	dfc00317 	ldw	ra,12(sp)
   48b94:	dc400217 	ldw	r17,8(sp)
   48b98:	dc000117 	ldw	r16,4(sp)
   48b9c:	dec00404 	addi	sp,sp,16
   48ba0:	00489b01 	jmpi	489b0 <__fputwc>
   48ba4:	8009883a 	mov	r4,r16
   48ba8:	d9400015 	stw	r5,0(sp)
   48bac:	00447f00 	call	447f0 <__sinit>
   48bb0:	d9400017 	ldw	r5,0(sp)
   48bb4:	003feb06 	br	48b64 <__alt_data_end+0xfffec7a4>

00048bb8 <_fstat_r>:
   48bb8:	defffd04 	addi	sp,sp,-12
   48bbc:	2805883a 	mov	r2,r5
   48bc0:	dc000015 	stw	r16,0(sp)
   48bc4:	04000174 	movhi	r16,5
   48bc8:	dc400115 	stw	r17,4(sp)
   48bcc:	840d1304 	addi	r16,r16,13388
   48bd0:	2023883a 	mov	r17,r4
   48bd4:	300b883a 	mov	r5,r6
   48bd8:	1009883a 	mov	r4,r2
   48bdc:	dfc00215 	stw	ra,8(sp)
   48be0:	80000015 	stw	zero,0(r16)
   48be4:	004d3ac0 	call	4d3ac <fstat>
   48be8:	00ffffc4 	movi	r3,-1
   48bec:	10c00526 	beq	r2,r3,48c04 <_fstat_r+0x4c>
   48bf0:	dfc00217 	ldw	ra,8(sp)
   48bf4:	dc400117 	ldw	r17,4(sp)
   48bf8:	dc000017 	ldw	r16,0(sp)
   48bfc:	dec00304 	addi	sp,sp,12
   48c00:	f800283a 	ret
   48c04:	80c00017 	ldw	r3,0(r16)
   48c08:	183ff926 	beq	r3,zero,48bf0 <__alt_data_end+0xfffec830>
   48c0c:	88c00015 	stw	r3,0(r17)
   48c10:	003ff706 	br	48bf0 <__alt_data_end+0xfffec830>

00048c14 <__sfvwrite_r>:
   48c14:	30800217 	ldw	r2,8(r6)
   48c18:	10006726 	beq	r2,zero,48db8 <__sfvwrite_r+0x1a4>
   48c1c:	28c0030b 	ldhu	r3,12(r5)
   48c20:	defff404 	addi	sp,sp,-48
   48c24:	dd400715 	stw	r21,28(sp)
   48c28:	dd000615 	stw	r20,24(sp)
   48c2c:	dc000215 	stw	r16,8(sp)
   48c30:	dfc00b15 	stw	ra,44(sp)
   48c34:	df000a15 	stw	fp,40(sp)
   48c38:	ddc00915 	stw	r23,36(sp)
   48c3c:	dd800815 	stw	r22,32(sp)
   48c40:	dcc00515 	stw	r19,20(sp)
   48c44:	dc800415 	stw	r18,16(sp)
   48c48:	dc400315 	stw	r17,12(sp)
   48c4c:	1880020c 	andi	r2,r3,8
   48c50:	2821883a 	mov	r16,r5
   48c54:	202b883a 	mov	r21,r4
   48c58:	3029883a 	mov	r20,r6
   48c5c:	10002726 	beq	r2,zero,48cfc <__sfvwrite_r+0xe8>
   48c60:	28800417 	ldw	r2,16(r5)
   48c64:	10002526 	beq	r2,zero,48cfc <__sfvwrite_r+0xe8>
   48c68:	1880008c 	andi	r2,r3,2
   48c6c:	a4400017 	ldw	r17,0(r20)
   48c70:	10002a26 	beq	r2,zero,48d1c <__sfvwrite_r+0x108>
   48c74:	05a00034 	movhi	r22,32768
   48c78:	0027883a 	mov	r19,zero
   48c7c:	0025883a 	mov	r18,zero
   48c80:	b5bf0004 	addi	r22,r22,-1024
   48c84:	980d883a 	mov	r6,r19
   48c88:	a809883a 	mov	r4,r21
   48c8c:	90004626 	beq	r18,zero,48da8 <__sfvwrite_r+0x194>
   48c90:	900f883a 	mov	r7,r18
   48c94:	b480022e 	bgeu	r22,r18,48ca0 <__sfvwrite_r+0x8c>
   48c98:	01e00034 	movhi	r7,32768
   48c9c:	39ff0004 	addi	r7,r7,-1024
   48ca0:	80800917 	ldw	r2,36(r16)
   48ca4:	81400717 	ldw	r5,28(r16)
   48ca8:	103ee83a 	callr	r2
   48cac:	00805a0e 	bge	zero,r2,48e18 <__sfvwrite_r+0x204>
   48cb0:	a0c00217 	ldw	r3,8(r20)
   48cb4:	98a7883a 	add	r19,r19,r2
   48cb8:	90a5c83a 	sub	r18,r18,r2
   48cbc:	1885c83a 	sub	r2,r3,r2
   48cc0:	a0800215 	stw	r2,8(r20)
   48cc4:	103fef1e 	bne	r2,zero,48c84 <__alt_data_end+0xfffec8c4>
   48cc8:	0005883a 	mov	r2,zero
   48ccc:	dfc00b17 	ldw	ra,44(sp)
   48cd0:	df000a17 	ldw	fp,40(sp)
   48cd4:	ddc00917 	ldw	r23,36(sp)
   48cd8:	dd800817 	ldw	r22,32(sp)
   48cdc:	dd400717 	ldw	r21,28(sp)
   48ce0:	dd000617 	ldw	r20,24(sp)
   48ce4:	dcc00517 	ldw	r19,20(sp)
   48ce8:	dc800417 	ldw	r18,16(sp)
   48cec:	dc400317 	ldw	r17,12(sp)
   48cf0:	dc000217 	ldw	r16,8(sp)
   48cf4:	dec00c04 	addi	sp,sp,48
   48cf8:	f800283a 	ret
   48cfc:	800b883a 	mov	r5,r16
   48d00:	a809883a 	mov	r4,r21
   48d04:	00427e40 	call	427e4 <__swsetup_r>
   48d08:	1000ee1e 	bne	r2,zero,490c4 <__sfvwrite_r+0x4b0>
   48d0c:	80c0030b 	ldhu	r3,12(r16)
   48d10:	a4400017 	ldw	r17,0(r20)
   48d14:	1880008c 	andi	r2,r3,2
   48d18:	103fd61e 	bne	r2,zero,48c74 <__alt_data_end+0xfffec8b4>
   48d1c:	1880004c 	andi	r2,r3,1
   48d20:	1000421e 	bne	r2,zero,48e2c <__sfvwrite_r+0x218>
   48d24:	0039883a 	mov	fp,zero
   48d28:	0025883a 	mov	r18,zero
   48d2c:	90001a26 	beq	r18,zero,48d98 <__sfvwrite_r+0x184>
   48d30:	1880800c 	andi	r2,r3,512
   48d34:	84c00217 	ldw	r19,8(r16)
   48d38:	10002126 	beq	r2,zero,48dc0 <__sfvwrite_r+0x1ac>
   48d3c:	982f883a 	mov	r23,r19
   48d40:	94c09636 	bltu	r18,r19,48f9c <__sfvwrite_r+0x388>
   48d44:	1881200c 	andi	r2,r3,1152
   48d48:	1000a11e 	bne	r2,zero,48fd0 <__sfvwrite_r+0x3bc>
   48d4c:	81000017 	ldw	r4,0(r16)
   48d50:	b80d883a 	mov	r6,r23
   48d54:	e00b883a 	mov	r5,fp
   48d58:	00491900 	call	49190 <memmove>
   48d5c:	80c00217 	ldw	r3,8(r16)
   48d60:	81000017 	ldw	r4,0(r16)
   48d64:	9005883a 	mov	r2,r18
   48d68:	1ce7c83a 	sub	r19,r3,r19
   48d6c:	25cf883a 	add	r7,r4,r23
   48d70:	84c00215 	stw	r19,8(r16)
   48d74:	81c00015 	stw	r7,0(r16)
   48d78:	a0c00217 	ldw	r3,8(r20)
   48d7c:	e0b9883a 	add	fp,fp,r2
   48d80:	90a5c83a 	sub	r18,r18,r2
   48d84:	18a7c83a 	sub	r19,r3,r2
   48d88:	a4c00215 	stw	r19,8(r20)
   48d8c:	983fce26 	beq	r19,zero,48cc8 <__alt_data_end+0xfffec908>
   48d90:	80c0030b 	ldhu	r3,12(r16)
   48d94:	903fe61e 	bne	r18,zero,48d30 <__alt_data_end+0xfffec970>
   48d98:	8f000017 	ldw	fp,0(r17)
   48d9c:	8c800117 	ldw	r18,4(r17)
   48da0:	8c400204 	addi	r17,r17,8
   48da4:	003fe106 	br	48d2c <__alt_data_end+0xfffec96c>
   48da8:	8cc00017 	ldw	r19,0(r17)
   48dac:	8c800117 	ldw	r18,4(r17)
   48db0:	8c400204 	addi	r17,r17,8
   48db4:	003fb306 	br	48c84 <__alt_data_end+0xfffec8c4>
   48db8:	0005883a 	mov	r2,zero
   48dbc:	f800283a 	ret
   48dc0:	81000017 	ldw	r4,0(r16)
   48dc4:	80800417 	ldw	r2,16(r16)
   48dc8:	11005a36 	bltu	r2,r4,48f34 <__sfvwrite_r+0x320>
   48dcc:	85c00517 	ldw	r23,20(r16)
   48dd0:	95c05836 	bltu	r18,r23,48f34 <__sfvwrite_r+0x320>
   48dd4:	00a00034 	movhi	r2,32768
   48dd8:	10bfffc4 	addi	r2,r2,-1
   48ddc:	9009883a 	mov	r4,r18
   48de0:	1480012e 	bgeu	r2,r18,48de8 <__sfvwrite_r+0x1d4>
   48de4:	1009883a 	mov	r4,r2
   48de8:	b80b883a 	mov	r5,r23
   48dec:	004a7b00 	call	4a7b0 <__divsi3>
   48df0:	b80b883a 	mov	r5,r23
   48df4:	1009883a 	mov	r4,r2
   48df8:	004a9640 	call	4a964 <__mulsi3>
   48dfc:	81400717 	ldw	r5,28(r16)
   48e00:	80c00917 	ldw	r3,36(r16)
   48e04:	100f883a 	mov	r7,r2
   48e08:	e00d883a 	mov	r6,fp
   48e0c:	a809883a 	mov	r4,r21
   48e10:	183ee83a 	callr	r3
   48e14:	00bfd816 	blt	zero,r2,48d78 <__alt_data_end+0xfffec9b8>
   48e18:	8080030b 	ldhu	r2,12(r16)
   48e1c:	10801014 	ori	r2,r2,64
   48e20:	8080030d 	sth	r2,12(r16)
   48e24:	00bfffc4 	movi	r2,-1
   48e28:	003fa806 	br	48ccc <__alt_data_end+0xfffec90c>
   48e2c:	0027883a 	mov	r19,zero
   48e30:	0011883a 	mov	r8,zero
   48e34:	0039883a 	mov	fp,zero
   48e38:	0025883a 	mov	r18,zero
   48e3c:	90001f26 	beq	r18,zero,48ebc <__sfvwrite_r+0x2a8>
   48e40:	40005a26 	beq	r8,zero,48fac <__sfvwrite_r+0x398>
   48e44:	982d883a 	mov	r22,r19
   48e48:	94c0012e 	bgeu	r18,r19,48e50 <__sfvwrite_r+0x23c>
   48e4c:	902d883a 	mov	r22,r18
   48e50:	81000017 	ldw	r4,0(r16)
   48e54:	80800417 	ldw	r2,16(r16)
   48e58:	b02f883a 	mov	r23,r22
   48e5c:	81c00517 	ldw	r7,20(r16)
   48e60:	1100032e 	bgeu	r2,r4,48e70 <__sfvwrite_r+0x25c>
   48e64:	80c00217 	ldw	r3,8(r16)
   48e68:	38c7883a 	add	r3,r7,r3
   48e6c:	1d801816 	blt	r3,r22,48ed0 <__sfvwrite_r+0x2bc>
   48e70:	b1c03e16 	blt	r22,r7,48f6c <__sfvwrite_r+0x358>
   48e74:	80800917 	ldw	r2,36(r16)
   48e78:	81400717 	ldw	r5,28(r16)
   48e7c:	e00d883a 	mov	r6,fp
   48e80:	da000115 	stw	r8,4(sp)
   48e84:	a809883a 	mov	r4,r21
   48e88:	103ee83a 	callr	r2
   48e8c:	102f883a 	mov	r23,r2
   48e90:	da000117 	ldw	r8,4(sp)
   48e94:	00bfe00e 	bge	zero,r2,48e18 <__alt_data_end+0xfffeca58>
   48e98:	9de7c83a 	sub	r19,r19,r23
   48e9c:	98001f26 	beq	r19,zero,48f1c <__sfvwrite_r+0x308>
   48ea0:	a0800217 	ldw	r2,8(r20)
   48ea4:	e5f9883a 	add	fp,fp,r23
   48ea8:	95e5c83a 	sub	r18,r18,r23
   48eac:	15efc83a 	sub	r23,r2,r23
   48eb0:	a5c00215 	stw	r23,8(r20)
   48eb4:	b83f8426 	beq	r23,zero,48cc8 <__alt_data_end+0xfffec908>
   48eb8:	903fe11e 	bne	r18,zero,48e40 <__alt_data_end+0xfffeca80>
   48ebc:	8f000017 	ldw	fp,0(r17)
   48ec0:	8c800117 	ldw	r18,4(r17)
   48ec4:	0011883a 	mov	r8,zero
   48ec8:	8c400204 	addi	r17,r17,8
   48ecc:	003fdb06 	br	48e3c <__alt_data_end+0xfffeca7c>
   48ed0:	180d883a 	mov	r6,r3
   48ed4:	e00b883a 	mov	r5,fp
   48ed8:	da000115 	stw	r8,4(sp)
   48edc:	d8c00015 	stw	r3,0(sp)
   48ee0:	00491900 	call	49190 <memmove>
   48ee4:	d8c00017 	ldw	r3,0(sp)
   48ee8:	80800017 	ldw	r2,0(r16)
   48eec:	800b883a 	mov	r5,r16
   48ef0:	a809883a 	mov	r4,r21
   48ef4:	10c5883a 	add	r2,r2,r3
   48ef8:	80800015 	stw	r2,0(r16)
   48efc:	d8c00015 	stw	r3,0(sp)
   48f00:	00444040 	call	44404 <_fflush_r>
   48f04:	d8c00017 	ldw	r3,0(sp)
   48f08:	da000117 	ldw	r8,4(sp)
   48f0c:	103fc21e 	bne	r2,zero,48e18 <__alt_data_end+0xfffeca58>
   48f10:	182f883a 	mov	r23,r3
   48f14:	9de7c83a 	sub	r19,r19,r23
   48f18:	983fe11e 	bne	r19,zero,48ea0 <__alt_data_end+0xfffecae0>
   48f1c:	800b883a 	mov	r5,r16
   48f20:	a809883a 	mov	r4,r21
   48f24:	00444040 	call	44404 <_fflush_r>
   48f28:	103fbb1e 	bne	r2,zero,48e18 <__alt_data_end+0xfffeca58>
   48f2c:	0011883a 	mov	r8,zero
   48f30:	003fdb06 	br	48ea0 <__alt_data_end+0xfffecae0>
   48f34:	94c0012e 	bgeu	r18,r19,48f3c <__sfvwrite_r+0x328>
   48f38:	9027883a 	mov	r19,r18
   48f3c:	980d883a 	mov	r6,r19
   48f40:	e00b883a 	mov	r5,fp
   48f44:	00491900 	call	49190 <memmove>
   48f48:	80800217 	ldw	r2,8(r16)
   48f4c:	80c00017 	ldw	r3,0(r16)
   48f50:	14c5c83a 	sub	r2,r2,r19
   48f54:	1cc7883a 	add	r3,r3,r19
   48f58:	80800215 	stw	r2,8(r16)
   48f5c:	80c00015 	stw	r3,0(r16)
   48f60:	10004326 	beq	r2,zero,49070 <__sfvwrite_r+0x45c>
   48f64:	9805883a 	mov	r2,r19
   48f68:	003f8306 	br	48d78 <__alt_data_end+0xfffec9b8>
   48f6c:	b00d883a 	mov	r6,r22
   48f70:	e00b883a 	mov	r5,fp
   48f74:	da000115 	stw	r8,4(sp)
   48f78:	00491900 	call	49190 <memmove>
   48f7c:	80800217 	ldw	r2,8(r16)
   48f80:	80c00017 	ldw	r3,0(r16)
   48f84:	da000117 	ldw	r8,4(sp)
   48f88:	1585c83a 	sub	r2,r2,r22
   48f8c:	1dad883a 	add	r22,r3,r22
   48f90:	80800215 	stw	r2,8(r16)
   48f94:	85800015 	stw	r22,0(r16)
   48f98:	003fbf06 	br	48e98 <__alt_data_end+0xfffecad8>
   48f9c:	81000017 	ldw	r4,0(r16)
   48fa0:	9027883a 	mov	r19,r18
   48fa4:	902f883a 	mov	r23,r18
   48fa8:	003f6906 	br	48d50 <__alt_data_end+0xfffec990>
   48fac:	900d883a 	mov	r6,r18
   48fb0:	01400284 	movi	r5,10
   48fb4:	e009883a 	mov	r4,fp
   48fb8:	00458a00 	call	458a0 <memchr>
   48fbc:	10003e26 	beq	r2,zero,490b8 <__sfvwrite_r+0x4a4>
   48fc0:	10800044 	addi	r2,r2,1
   48fc4:	1727c83a 	sub	r19,r2,fp
   48fc8:	02000044 	movi	r8,1
   48fcc:	003f9d06 	br	48e44 <__alt_data_end+0xfffeca84>
   48fd0:	80800517 	ldw	r2,20(r16)
   48fd4:	81400417 	ldw	r5,16(r16)
   48fd8:	81c00017 	ldw	r7,0(r16)
   48fdc:	10a7883a 	add	r19,r2,r2
   48fe0:	9885883a 	add	r2,r19,r2
   48fe4:	1026d7fa 	srli	r19,r2,31
   48fe8:	396dc83a 	sub	r22,r7,r5
   48fec:	b1000044 	addi	r4,r22,1
   48ff0:	9885883a 	add	r2,r19,r2
   48ff4:	1027d07a 	srai	r19,r2,1
   48ff8:	2485883a 	add	r2,r4,r18
   48ffc:	980d883a 	mov	r6,r19
   49000:	9880022e 	bgeu	r19,r2,4900c <__sfvwrite_r+0x3f8>
   49004:	1027883a 	mov	r19,r2
   49008:	100d883a 	mov	r6,r2
   4900c:	18c1000c 	andi	r3,r3,1024
   49010:	18001c26 	beq	r3,zero,49084 <__sfvwrite_r+0x470>
   49014:	300b883a 	mov	r5,r6
   49018:	a809883a 	mov	r4,r21
   4901c:	00450940 	call	45094 <_malloc_r>
   49020:	102f883a 	mov	r23,r2
   49024:	10002926 	beq	r2,zero,490cc <__sfvwrite_r+0x4b8>
   49028:	81400417 	ldw	r5,16(r16)
   4902c:	b00d883a 	mov	r6,r22
   49030:	1009883a 	mov	r4,r2
   49034:	00459840 	call	45984 <memcpy>
   49038:	8080030b 	ldhu	r2,12(r16)
   4903c:	00fedfc4 	movi	r3,-1153
   49040:	10c4703a 	and	r2,r2,r3
   49044:	10802014 	ori	r2,r2,128
   49048:	8080030d 	sth	r2,12(r16)
   4904c:	bd89883a 	add	r4,r23,r22
   49050:	9d8fc83a 	sub	r7,r19,r22
   49054:	85c00415 	stw	r23,16(r16)
   49058:	84c00515 	stw	r19,20(r16)
   4905c:	81000015 	stw	r4,0(r16)
   49060:	9027883a 	mov	r19,r18
   49064:	81c00215 	stw	r7,8(r16)
   49068:	902f883a 	mov	r23,r18
   4906c:	003f3806 	br	48d50 <__alt_data_end+0xfffec990>
   49070:	800b883a 	mov	r5,r16
   49074:	a809883a 	mov	r4,r21
   49078:	00444040 	call	44404 <_fflush_r>
   4907c:	103fb926 	beq	r2,zero,48f64 <__alt_data_end+0xfffecba4>
   49080:	003f6506 	br	48e18 <__alt_data_end+0xfffeca58>
   49084:	a809883a 	mov	r4,r21
   49088:	004934c0 	call	4934c <_realloc_r>
   4908c:	102f883a 	mov	r23,r2
   49090:	103fee1e 	bne	r2,zero,4904c <__alt_data_end+0xfffecc8c>
   49094:	81400417 	ldw	r5,16(r16)
   49098:	a809883a 	mov	r4,r21
   4909c:	00449640 	call	44964 <_free_r>
   490a0:	8080030b 	ldhu	r2,12(r16)
   490a4:	00ffdfc4 	movi	r3,-129
   490a8:	1884703a 	and	r2,r3,r2
   490ac:	00c00304 	movi	r3,12
   490b0:	a8c00015 	stw	r3,0(r21)
   490b4:	003f5906 	br	48e1c <__alt_data_end+0xfffeca5c>
   490b8:	94c00044 	addi	r19,r18,1
   490bc:	02000044 	movi	r8,1
   490c0:	003f6006 	br	48e44 <__alt_data_end+0xfffeca84>
   490c4:	00bfffc4 	movi	r2,-1
   490c8:	003f0006 	br	48ccc <__alt_data_end+0xfffec90c>
   490cc:	00800304 	movi	r2,12
   490d0:	a8800015 	stw	r2,0(r21)
   490d4:	8080030b 	ldhu	r2,12(r16)
   490d8:	003f5006 	br	48e1c <__alt_data_end+0xfffeca5c>

000490dc <_isatty_r>:
   490dc:	defffd04 	addi	sp,sp,-12
   490e0:	dc000015 	stw	r16,0(sp)
   490e4:	04000174 	movhi	r16,5
   490e8:	dc400115 	stw	r17,4(sp)
   490ec:	840d1304 	addi	r16,r16,13388
   490f0:	2023883a 	mov	r17,r4
   490f4:	2809883a 	mov	r4,r5
   490f8:	dfc00215 	stw	ra,8(sp)
   490fc:	80000015 	stw	zero,0(r16)
   49100:	004d4a00 	call	4d4a0 <isatty>
   49104:	00ffffc4 	movi	r3,-1
   49108:	10c00526 	beq	r2,r3,49120 <_isatty_r+0x44>
   4910c:	dfc00217 	ldw	ra,8(sp)
   49110:	dc400117 	ldw	r17,4(sp)
   49114:	dc000017 	ldw	r16,0(sp)
   49118:	dec00304 	addi	sp,sp,12
   4911c:	f800283a 	ret
   49120:	80c00017 	ldw	r3,0(r16)
   49124:	183ff926 	beq	r3,zero,4910c <__alt_data_end+0xfffecd4c>
   49128:	88c00015 	stw	r3,0(r17)
   4912c:	003ff706 	br	4910c <__alt_data_end+0xfffecd4c>

00049130 <_lseek_r>:
   49130:	defffd04 	addi	sp,sp,-12
   49134:	2805883a 	mov	r2,r5
   49138:	dc000015 	stw	r16,0(sp)
   4913c:	04000174 	movhi	r16,5
   49140:	dc400115 	stw	r17,4(sp)
   49144:	300b883a 	mov	r5,r6
   49148:	840d1304 	addi	r16,r16,13388
   4914c:	2023883a 	mov	r17,r4
   49150:	380d883a 	mov	r6,r7
   49154:	1009883a 	mov	r4,r2
   49158:	dfc00215 	stw	ra,8(sp)
   4915c:	80000015 	stw	zero,0(r16)
   49160:	004d6740 	call	4d674 <lseek>
   49164:	00ffffc4 	movi	r3,-1
   49168:	10c00526 	beq	r2,r3,49180 <_lseek_r+0x50>
   4916c:	dfc00217 	ldw	ra,8(sp)
   49170:	dc400117 	ldw	r17,4(sp)
   49174:	dc000017 	ldw	r16,0(sp)
   49178:	dec00304 	addi	sp,sp,12
   4917c:	f800283a 	ret
   49180:	80c00017 	ldw	r3,0(r16)
   49184:	183ff926 	beq	r3,zero,4916c <__alt_data_end+0xfffecdac>
   49188:	88c00015 	stw	r3,0(r17)
   4918c:	003ff706 	br	4916c <__alt_data_end+0xfffecdac>

00049190 <memmove>:
   49190:	2005883a 	mov	r2,r4
   49194:	29000b2e 	bgeu	r5,r4,491c4 <memmove+0x34>
   49198:	298f883a 	add	r7,r5,r6
   4919c:	21c0092e 	bgeu	r4,r7,491c4 <memmove+0x34>
   491a0:	2187883a 	add	r3,r4,r6
   491a4:	198bc83a 	sub	r5,r3,r6
   491a8:	30004826 	beq	r6,zero,492cc <memmove+0x13c>
   491ac:	39ffffc4 	addi	r7,r7,-1
   491b0:	39000003 	ldbu	r4,0(r7)
   491b4:	18ffffc4 	addi	r3,r3,-1
   491b8:	19000005 	stb	r4,0(r3)
   491bc:	28fffb1e 	bne	r5,r3,491ac <__alt_data_end+0xfffecdec>
   491c0:	f800283a 	ret
   491c4:	00c003c4 	movi	r3,15
   491c8:	1980412e 	bgeu	r3,r6,492d0 <memmove+0x140>
   491cc:	2886b03a 	or	r3,r5,r2
   491d0:	18c000cc 	andi	r3,r3,3
   491d4:	1800401e 	bne	r3,zero,492d8 <memmove+0x148>
   491d8:	33fffc04 	addi	r15,r6,-16
   491dc:	781ed13a 	srli	r15,r15,4
   491e0:	28c00104 	addi	r3,r5,4
   491e4:	13400104 	addi	r13,r2,4
   491e8:	781c913a 	slli	r14,r15,4
   491ec:	2b000204 	addi	r12,r5,8
   491f0:	12c00204 	addi	r11,r2,8
   491f4:	73800504 	addi	r14,r14,20
   491f8:	2a800304 	addi	r10,r5,12
   491fc:	12400304 	addi	r9,r2,12
   49200:	2b9d883a 	add	r14,r5,r14
   49204:	2811883a 	mov	r8,r5
   49208:	100f883a 	mov	r7,r2
   4920c:	41000017 	ldw	r4,0(r8)
   49210:	39c00404 	addi	r7,r7,16
   49214:	18c00404 	addi	r3,r3,16
   49218:	393ffc15 	stw	r4,-16(r7)
   4921c:	193ffc17 	ldw	r4,-16(r3)
   49220:	6b400404 	addi	r13,r13,16
   49224:	5ac00404 	addi	r11,r11,16
   49228:	693ffc15 	stw	r4,-16(r13)
   4922c:	61000017 	ldw	r4,0(r12)
   49230:	4a400404 	addi	r9,r9,16
   49234:	42000404 	addi	r8,r8,16
   49238:	593ffc15 	stw	r4,-16(r11)
   4923c:	51000017 	ldw	r4,0(r10)
   49240:	63000404 	addi	r12,r12,16
   49244:	52800404 	addi	r10,r10,16
   49248:	493ffc15 	stw	r4,-16(r9)
   4924c:	1bbfef1e 	bne	r3,r14,4920c <__alt_data_end+0xfffece4c>
   49250:	79000044 	addi	r4,r15,1
   49254:	2008913a 	slli	r4,r4,4
   49258:	328003cc 	andi	r10,r6,15
   4925c:	02c000c4 	movi	r11,3
   49260:	1107883a 	add	r3,r2,r4
   49264:	290b883a 	add	r5,r5,r4
   49268:	5a801e2e 	bgeu	r11,r10,492e4 <memmove+0x154>
   4926c:	1813883a 	mov	r9,r3
   49270:	2811883a 	mov	r8,r5
   49274:	500f883a 	mov	r7,r10
   49278:	41000017 	ldw	r4,0(r8)
   4927c:	4a400104 	addi	r9,r9,4
   49280:	39ffff04 	addi	r7,r7,-4
   49284:	493fff15 	stw	r4,-4(r9)
   49288:	42000104 	addi	r8,r8,4
   4928c:	59fffa36 	bltu	r11,r7,49278 <__alt_data_end+0xfffeceb8>
   49290:	513fff04 	addi	r4,r10,-4
   49294:	2008d0ba 	srli	r4,r4,2
   49298:	318000cc 	andi	r6,r6,3
   4929c:	21000044 	addi	r4,r4,1
   492a0:	2109883a 	add	r4,r4,r4
   492a4:	2109883a 	add	r4,r4,r4
   492a8:	1907883a 	add	r3,r3,r4
   492ac:	290b883a 	add	r5,r5,r4
   492b0:	30000b26 	beq	r6,zero,492e0 <memmove+0x150>
   492b4:	198d883a 	add	r6,r3,r6
   492b8:	29c00003 	ldbu	r7,0(r5)
   492bc:	18c00044 	addi	r3,r3,1
   492c0:	29400044 	addi	r5,r5,1
   492c4:	19ffffc5 	stb	r7,-1(r3)
   492c8:	19bffb1e 	bne	r3,r6,492b8 <__alt_data_end+0xfffecef8>
   492cc:	f800283a 	ret
   492d0:	1007883a 	mov	r3,r2
   492d4:	003ff606 	br	492b0 <__alt_data_end+0xfffecef0>
   492d8:	1007883a 	mov	r3,r2
   492dc:	003ff506 	br	492b4 <__alt_data_end+0xfffecef4>
   492e0:	f800283a 	ret
   492e4:	500d883a 	mov	r6,r10
   492e8:	003ff106 	br	492b0 <__alt_data_end+0xfffecef0>

000492ec <_read_r>:
   492ec:	defffd04 	addi	sp,sp,-12
   492f0:	2805883a 	mov	r2,r5
   492f4:	dc000015 	stw	r16,0(sp)
   492f8:	04000174 	movhi	r16,5
   492fc:	dc400115 	stw	r17,4(sp)
   49300:	300b883a 	mov	r5,r6
   49304:	840d1304 	addi	r16,r16,13388
   49308:	2023883a 	mov	r17,r4
   4930c:	380d883a 	mov	r6,r7
   49310:	1009883a 	mov	r4,r2
   49314:	dfc00215 	stw	ra,8(sp)
   49318:	80000015 	stw	zero,0(r16)
   4931c:	004d8500 	call	4d850 <read>
   49320:	00ffffc4 	movi	r3,-1
   49324:	10c00526 	beq	r2,r3,4933c <_read_r+0x50>
   49328:	dfc00217 	ldw	ra,8(sp)
   4932c:	dc400117 	ldw	r17,4(sp)
   49330:	dc000017 	ldw	r16,0(sp)
   49334:	dec00304 	addi	sp,sp,12
   49338:	f800283a 	ret
   4933c:	80c00017 	ldw	r3,0(r16)
   49340:	183ff926 	beq	r3,zero,49328 <__alt_data_end+0xfffecf68>
   49344:	88c00015 	stw	r3,0(r17)
   49348:	003ff706 	br	49328 <__alt_data_end+0xfffecf68>

0004934c <_realloc_r>:
   4934c:	defff604 	addi	sp,sp,-40
   49350:	dc800215 	stw	r18,8(sp)
   49354:	dfc00915 	stw	ra,36(sp)
   49358:	df000815 	stw	fp,32(sp)
   4935c:	ddc00715 	stw	r23,28(sp)
   49360:	dd800615 	stw	r22,24(sp)
   49364:	dd400515 	stw	r21,20(sp)
   49368:	dd000415 	stw	r20,16(sp)
   4936c:	dcc00315 	stw	r19,12(sp)
   49370:	dc400115 	stw	r17,4(sp)
   49374:	dc000015 	stw	r16,0(sp)
   49378:	3025883a 	mov	r18,r6
   4937c:	2800b726 	beq	r5,zero,4965c <_realloc_r+0x310>
   49380:	282b883a 	mov	r21,r5
   49384:	2029883a 	mov	r20,r4
   49388:	004d7cc0 	call	4d7cc <__malloc_lock>
   4938c:	a8bfff17 	ldw	r2,-4(r21)
   49390:	043fff04 	movi	r16,-4
   49394:	90c002c4 	addi	r3,r18,11
   49398:	01000584 	movi	r4,22
   4939c:	acfffe04 	addi	r19,r21,-8
   493a0:	1420703a 	and	r16,r2,r16
   493a4:	20c0332e 	bgeu	r4,r3,49474 <_realloc_r+0x128>
   493a8:	047ffe04 	movi	r17,-8
   493ac:	1c62703a 	and	r17,r3,r17
   493b0:	8807883a 	mov	r3,r17
   493b4:	88005816 	blt	r17,zero,49518 <_realloc_r+0x1cc>
   493b8:	8c805736 	bltu	r17,r18,49518 <_realloc_r+0x1cc>
   493bc:	80c0300e 	bge	r16,r3,49480 <_realloc_r+0x134>
   493c0:	07000174 	movhi	fp,5
   493c4:	e7006404 	addi	fp,fp,400
   493c8:	e1c00217 	ldw	r7,8(fp)
   493cc:	9c09883a 	add	r4,r19,r16
   493d0:	22000117 	ldw	r8,4(r4)
   493d4:	21c06326 	beq	r4,r7,49564 <_realloc_r+0x218>
   493d8:	017fff84 	movi	r5,-2
   493dc:	414a703a 	and	r5,r8,r5
   493e0:	214b883a 	add	r5,r4,r5
   493e4:	29800117 	ldw	r6,4(r5)
   493e8:	3180004c 	andi	r6,r6,1
   493ec:	30003f26 	beq	r6,zero,494ec <_realloc_r+0x1a0>
   493f0:	1080004c 	andi	r2,r2,1
   493f4:	10008326 	beq	r2,zero,49604 <_realloc_r+0x2b8>
   493f8:	900b883a 	mov	r5,r18
   493fc:	a009883a 	mov	r4,r20
   49400:	00450940 	call	45094 <_malloc_r>
   49404:	1025883a 	mov	r18,r2
   49408:	10011e26 	beq	r2,zero,49884 <_realloc_r+0x538>
   4940c:	a93fff17 	ldw	r4,-4(r21)
   49410:	10fffe04 	addi	r3,r2,-8
   49414:	00bfff84 	movi	r2,-2
   49418:	2084703a 	and	r2,r4,r2
   4941c:	9885883a 	add	r2,r19,r2
   49420:	1880ee26 	beq	r3,r2,497dc <_realloc_r+0x490>
   49424:	81bfff04 	addi	r6,r16,-4
   49428:	00800904 	movi	r2,36
   4942c:	1180b836 	bltu	r2,r6,49710 <_realloc_r+0x3c4>
   49430:	00c004c4 	movi	r3,19
   49434:	19809636 	bltu	r3,r6,49690 <_realloc_r+0x344>
   49438:	9005883a 	mov	r2,r18
   4943c:	a807883a 	mov	r3,r21
   49440:	19000017 	ldw	r4,0(r3)
   49444:	11000015 	stw	r4,0(r2)
   49448:	19000117 	ldw	r4,4(r3)
   4944c:	11000115 	stw	r4,4(r2)
   49450:	18c00217 	ldw	r3,8(r3)
   49454:	10c00215 	stw	r3,8(r2)
   49458:	a80b883a 	mov	r5,r21
   4945c:	a009883a 	mov	r4,r20
   49460:	00449640 	call	44964 <_free_r>
   49464:	a009883a 	mov	r4,r20
   49468:	004d7f00 	call	4d7f0 <__malloc_unlock>
   4946c:	9005883a 	mov	r2,r18
   49470:	00001206 	br	494bc <_realloc_r+0x170>
   49474:	00c00404 	movi	r3,16
   49478:	1823883a 	mov	r17,r3
   4947c:	003fce06 	br	493b8 <__alt_data_end+0xfffecff8>
   49480:	a825883a 	mov	r18,r21
   49484:	8445c83a 	sub	r2,r16,r17
   49488:	00c003c4 	movi	r3,15
   4948c:	18802636 	bltu	r3,r2,49528 <_realloc_r+0x1dc>
   49490:	99800117 	ldw	r6,4(r19)
   49494:	9c07883a 	add	r3,r19,r16
   49498:	3180004c 	andi	r6,r6,1
   4949c:	3420b03a 	or	r16,r6,r16
   494a0:	9c000115 	stw	r16,4(r19)
   494a4:	18800117 	ldw	r2,4(r3)
   494a8:	10800054 	ori	r2,r2,1
   494ac:	18800115 	stw	r2,4(r3)
   494b0:	a009883a 	mov	r4,r20
   494b4:	004d7f00 	call	4d7f0 <__malloc_unlock>
   494b8:	9005883a 	mov	r2,r18
   494bc:	dfc00917 	ldw	ra,36(sp)
   494c0:	df000817 	ldw	fp,32(sp)
   494c4:	ddc00717 	ldw	r23,28(sp)
   494c8:	dd800617 	ldw	r22,24(sp)
   494cc:	dd400517 	ldw	r21,20(sp)
   494d0:	dd000417 	ldw	r20,16(sp)
   494d4:	dcc00317 	ldw	r19,12(sp)
   494d8:	dc800217 	ldw	r18,8(sp)
   494dc:	dc400117 	ldw	r17,4(sp)
   494e0:	dc000017 	ldw	r16,0(sp)
   494e4:	dec00a04 	addi	sp,sp,40
   494e8:	f800283a 	ret
   494ec:	017fff04 	movi	r5,-4
   494f0:	414a703a 	and	r5,r8,r5
   494f4:	814d883a 	add	r6,r16,r5
   494f8:	30c01f16 	blt	r6,r3,49578 <_realloc_r+0x22c>
   494fc:	20800317 	ldw	r2,12(r4)
   49500:	20c00217 	ldw	r3,8(r4)
   49504:	a825883a 	mov	r18,r21
   49508:	3021883a 	mov	r16,r6
   4950c:	18800315 	stw	r2,12(r3)
   49510:	10c00215 	stw	r3,8(r2)
   49514:	003fdb06 	br	49484 <__alt_data_end+0xfffed0c4>
   49518:	00800304 	movi	r2,12
   4951c:	a0800015 	stw	r2,0(r20)
   49520:	0005883a 	mov	r2,zero
   49524:	003fe506 	br	494bc <__alt_data_end+0xfffed0fc>
   49528:	98c00117 	ldw	r3,4(r19)
   4952c:	9c4b883a 	add	r5,r19,r17
   49530:	11000054 	ori	r4,r2,1
   49534:	18c0004c 	andi	r3,r3,1
   49538:	1c62b03a 	or	r17,r3,r17
   4953c:	9c400115 	stw	r17,4(r19)
   49540:	29000115 	stw	r4,4(r5)
   49544:	2885883a 	add	r2,r5,r2
   49548:	10c00117 	ldw	r3,4(r2)
   4954c:	29400204 	addi	r5,r5,8
   49550:	a009883a 	mov	r4,r20
   49554:	18c00054 	ori	r3,r3,1
   49558:	10c00115 	stw	r3,4(r2)
   4955c:	00449640 	call	44964 <_free_r>
   49560:	003fd306 	br	494b0 <__alt_data_end+0xfffed0f0>
   49564:	017fff04 	movi	r5,-4
   49568:	414a703a 	and	r5,r8,r5
   4956c:	89800404 	addi	r6,r17,16
   49570:	8151883a 	add	r8,r16,r5
   49574:	4180590e 	bge	r8,r6,496dc <_realloc_r+0x390>
   49578:	1080004c 	andi	r2,r2,1
   4957c:	103f9e1e 	bne	r2,zero,493f8 <__alt_data_end+0xfffed038>
   49580:	adbffe17 	ldw	r22,-8(r21)
   49584:	00bfff04 	movi	r2,-4
   49588:	9dadc83a 	sub	r22,r19,r22
   4958c:	b1800117 	ldw	r6,4(r22)
   49590:	3084703a 	and	r2,r6,r2
   49594:	20002026 	beq	r4,zero,49618 <_realloc_r+0x2cc>
   49598:	80af883a 	add	r23,r16,r2
   4959c:	b96f883a 	add	r23,r23,r5
   495a0:	21c05f26 	beq	r4,r7,49720 <_realloc_r+0x3d4>
   495a4:	b8c01c16 	blt	r23,r3,49618 <_realloc_r+0x2cc>
   495a8:	20800317 	ldw	r2,12(r4)
   495ac:	20c00217 	ldw	r3,8(r4)
   495b0:	81bfff04 	addi	r6,r16,-4
   495b4:	01000904 	movi	r4,36
   495b8:	18800315 	stw	r2,12(r3)
   495bc:	10c00215 	stw	r3,8(r2)
   495c0:	b0c00217 	ldw	r3,8(r22)
   495c4:	b0800317 	ldw	r2,12(r22)
   495c8:	b4800204 	addi	r18,r22,8
   495cc:	18800315 	stw	r2,12(r3)
   495d0:	10c00215 	stw	r3,8(r2)
   495d4:	21801b36 	bltu	r4,r6,49644 <_realloc_r+0x2f8>
   495d8:	008004c4 	movi	r2,19
   495dc:	1180352e 	bgeu	r2,r6,496b4 <_realloc_r+0x368>
   495e0:	a8800017 	ldw	r2,0(r21)
   495e4:	b0800215 	stw	r2,8(r22)
   495e8:	a8800117 	ldw	r2,4(r21)
   495ec:	b0800315 	stw	r2,12(r22)
   495f0:	008006c4 	movi	r2,27
   495f4:	11807f36 	bltu	r2,r6,497f4 <_realloc_r+0x4a8>
   495f8:	b0800404 	addi	r2,r22,16
   495fc:	ad400204 	addi	r21,r21,8
   49600:	00002d06 	br	496b8 <_realloc_r+0x36c>
   49604:	adbffe17 	ldw	r22,-8(r21)
   49608:	00bfff04 	movi	r2,-4
   4960c:	9dadc83a 	sub	r22,r19,r22
   49610:	b1000117 	ldw	r4,4(r22)
   49614:	2084703a 	and	r2,r4,r2
   49618:	b03f7726 	beq	r22,zero,493f8 <__alt_data_end+0xfffed038>
   4961c:	80af883a 	add	r23,r16,r2
   49620:	b8ff7516 	blt	r23,r3,493f8 <__alt_data_end+0xfffed038>
   49624:	b0800317 	ldw	r2,12(r22)
   49628:	b0c00217 	ldw	r3,8(r22)
   4962c:	81bfff04 	addi	r6,r16,-4
   49630:	01000904 	movi	r4,36
   49634:	18800315 	stw	r2,12(r3)
   49638:	10c00215 	stw	r3,8(r2)
   4963c:	b4800204 	addi	r18,r22,8
   49640:	21bfe52e 	bgeu	r4,r6,495d8 <__alt_data_end+0xfffed218>
   49644:	a80b883a 	mov	r5,r21
   49648:	9009883a 	mov	r4,r18
   4964c:	00491900 	call	49190 <memmove>
   49650:	b821883a 	mov	r16,r23
   49654:	b027883a 	mov	r19,r22
   49658:	003f8a06 	br	49484 <__alt_data_end+0xfffed0c4>
   4965c:	300b883a 	mov	r5,r6
   49660:	dfc00917 	ldw	ra,36(sp)
   49664:	df000817 	ldw	fp,32(sp)
   49668:	ddc00717 	ldw	r23,28(sp)
   4966c:	dd800617 	ldw	r22,24(sp)
   49670:	dd400517 	ldw	r21,20(sp)
   49674:	dd000417 	ldw	r20,16(sp)
   49678:	dcc00317 	ldw	r19,12(sp)
   4967c:	dc800217 	ldw	r18,8(sp)
   49680:	dc400117 	ldw	r17,4(sp)
   49684:	dc000017 	ldw	r16,0(sp)
   49688:	dec00a04 	addi	sp,sp,40
   4968c:	00450941 	jmpi	45094 <_malloc_r>
   49690:	a8c00017 	ldw	r3,0(r21)
   49694:	90c00015 	stw	r3,0(r18)
   49698:	a8c00117 	ldw	r3,4(r21)
   4969c:	90c00115 	stw	r3,4(r18)
   496a0:	00c006c4 	movi	r3,27
   496a4:	19804536 	bltu	r3,r6,497bc <_realloc_r+0x470>
   496a8:	90800204 	addi	r2,r18,8
   496ac:	a8c00204 	addi	r3,r21,8
   496b0:	003f6306 	br	49440 <__alt_data_end+0xfffed080>
   496b4:	9005883a 	mov	r2,r18
   496b8:	a8c00017 	ldw	r3,0(r21)
   496bc:	b821883a 	mov	r16,r23
   496c0:	b027883a 	mov	r19,r22
   496c4:	10c00015 	stw	r3,0(r2)
   496c8:	a8c00117 	ldw	r3,4(r21)
   496cc:	10c00115 	stw	r3,4(r2)
   496d0:	a8c00217 	ldw	r3,8(r21)
   496d4:	10c00215 	stw	r3,8(r2)
   496d8:	003f6a06 	br	49484 <__alt_data_end+0xfffed0c4>
   496dc:	9c67883a 	add	r19,r19,r17
   496e0:	4445c83a 	sub	r2,r8,r17
   496e4:	e4c00215 	stw	r19,8(fp)
   496e8:	10800054 	ori	r2,r2,1
   496ec:	98800115 	stw	r2,4(r19)
   496f0:	a8bfff17 	ldw	r2,-4(r21)
   496f4:	a009883a 	mov	r4,r20
   496f8:	1080004c 	andi	r2,r2,1
   496fc:	1462b03a 	or	r17,r2,r17
   49700:	ac7fff15 	stw	r17,-4(r21)
   49704:	004d7f00 	call	4d7f0 <__malloc_unlock>
   49708:	a805883a 	mov	r2,r21
   4970c:	003f6b06 	br	494bc <__alt_data_end+0xfffed0fc>
   49710:	a80b883a 	mov	r5,r21
   49714:	9009883a 	mov	r4,r18
   49718:	00491900 	call	49190 <memmove>
   4971c:	003f4e06 	br	49458 <__alt_data_end+0xfffed098>
   49720:	89000404 	addi	r4,r17,16
   49724:	b93fbc16 	blt	r23,r4,49618 <__alt_data_end+0xfffed258>
   49728:	b0800317 	ldw	r2,12(r22)
   4972c:	b0c00217 	ldw	r3,8(r22)
   49730:	81bfff04 	addi	r6,r16,-4
   49734:	01000904 	movi	r4,36
   49738:	18800315 	stw	r2,12(r3)
   4973c:	10c00215 	stw	r3,8(r2)
   49740:	b4800204 	addi	r18,r22,8
   49744:	21804336 	bltu	r4,r6,49854 <_realloc_r+0x508>
   49748:	008004c4 	movi	r2,19
   4974c:	11803f2e 	bgeu	r2,r6,4984c <_realloc_r+0x500>
   49750:	a8800017 	ldw	r2,0(r21)
   49754:	b0800215 	stw	r2,8(r22)
   49758:	a8800117 	ldw	r2,4(r21)
   4975c:	b0800315 	stw	r2,12(r22)
   49760:	008006c4 	movi	r2,27
   49764:	11803f36 	bltu	r2,r6,49864 <_realloc_r+0x518>
   49768:	b0800404 	addi	r2,r22,16
   4976c:	ad400204 	addi	r21,r21,8
   49770:	a8c00017 	ldw	r3,0(r21)
   49774:	10c00015 	stw	r3,0(r2)
   49778:	a8c00117 	ldw	r3,4(r21)
   4977c:	10c00115 	stw	r3,4(r2)
   49780:	a8c00217 	ldw	r3,8(r21)
   49784:	10c00215 	stw	r3,8(r2)
   49788:	b447883a 	add	r3,r22,r17
   4978c:	bc45c83a 	sub	r2,r23,r17
   49790:	e0c00215 	stw	r3,8(fp)
   49794:	10800054 	ori	r2,r2,1
   49798:	18800115 	stw	r2,4(r3)
   4979c:	b0800117 	ldw	r2,4(r22)
   497a0:	a009883a 	mov	r4,r20
   497a4:	1080004c 	andi	r2,r2,1
   497a8:	1462b03a 	or	r17,r2,r17
   497ac:	b4400115 	stw	r17,4(r22)
   497b0:	004d7f00 	call	4d7f0 <__malloc_unlock>
   497b4:	9005883a 	mov	r2,r18
   497b8:	003f4006 	br	494bc <__alt_data_end+0xfffed0fc>
   497bc:	a8c00217 	ldw	r3,8(r21)
   497c0:	90c00215 	stw	r3,8(r18)
   497c4:	a8c00317 	ldw	r3,12(r21)
   497c8:	90c00315 	stw	r3,12(r18)
   497cc:	30801126 	beq	r6,r2,49814 <_realloc_r+0x4c8>
   497d0:	90800404 	addi	r2,r18,16
   497d4:	a8c00404 	addi	r3,r21,16
   497d8:	003f1906 	br	49440 <__alt_data_end+0xfffed080>
   497dc:	90ffff17 	ldw	r3,-4(r18)
   497e0:	00bfff04 	movi	r2,-4
   497e4:	a825883a 	mov	r18,r21
   497e8:	1884703a 	and	r2,r3,r2
   497ec:	80a1883a 	add	r16,r16,r2
   497f0:	003f2406 	br	49484 <__alt_data_end+0xfffed0c4>
   497f4:	a8800217 	ldw	r2,8(r21)
   497f8:	b0800415 	stw	r2,16(r22)
   497fc:	a8800317 	ldw	r2,12(r21)
   49800:	b0800515 	stw	r2,20(r22)
   49804:	31000a26 	beq	r6,r4,49830 <_realloc_r+0x4e4>
   49808:	b0800604 	addi	r2,r22,24
   4980c:	ad400404 	addi	r21,r21,16
   49810:	003fa906 	br	496b8 <__alt_data_end+0xfffed2f8>
   49814:	a9000417 	ldw	r4,16(r21)
   49818:	90800604 	addi	r2,r18,24
   4981c:	a8c00604 	addi	r3,r21,24
   49820:	91000415 	stw	r4,16(r18)
   49824:	a9000517 	ldw	r4,20(r21)
   49828:	91000515 	stw	r4,20(r18)
   4982c:	003f0406 	br	49440 <__alt_data_end+0xfffed080>
   49830:	a8c00417 	ldw	r3,16(r21)
   49834:	ad400604 	addi	r21,r21,24
   49838:	b0800804 	addi	r2,r22,32
   4983c:	b0c00615 	stw	r3,24(r22)
   49840:	a8ffff17 	ldw	r3,-4(r21)
   49844:	b0c00715 	stw	r3,28(r22)
   49848:	003f9b06 	br	496b8 <__alt_data_end+0xfffed2f8>
   4984c:	9005883a 	mov	r2,r18
   49850:	003fc706 	br	49770 <__alt_data_end+0xfffed3b0>
   49854:	a80b883a 	mov	r5,r21
   49858:	9009883a 	mov	r4,r18
   4985c:	00491900 	call	49190 <memmove>
   49860:	003fc906 	br	49788 <__alt_data_end+0xfffed3c8>
   49864:	a8800217 	ldw	r2,8(r21)
   49868:	b0800415 	stw	r2,16(r22)
   4986c:	a8800317 	ldw	r2,12(r21)
   49870:	b0800515 	stw	r2,20(r22)
   49874:	31000726 	beq	r6,r4,49894 <_realloc_r+0x548>
   49878:	b0800604 	addi	r2,r22,24
   4987c:	ad400404 	addi	r21,r21,16
   49880:	003fbb06 	br	49770 <__alt_data_end+0xfffed3b0>
   49884:	a009883a 	mov	r4,r20
   49888:	004d7f00 	call	4d7f0 <__malloc_unlock>
   4988c:	0005883a 	mov	r2,zero
   49890:	003f0a06 	br	494bc <__alt_data_end+0xfffed0fc>
   49894:	a8c00417 	ldw	r3,16(r21)
   49898:	ad400604 	addi	r21,r21,24
   4989c:	b0800804 	addi	r2,r22,32
   498a0:	b0c00615 	stw	r3,24(r22)
   498a4:	a8ffff17 	ldw	r3,-4(r21)
   498a8:	b0c00715 	stw	r3,28(r22)
   498ac:	003fb006 	br	49770 <__alt_data_end+0xfffed3b0>

000498b0 <__swbuf_r>:
   498b0:	defffb04 	addi	sp,sp,-20
   498b4:	dcc00315 	stw	r19,12(sp)
   498b8:	dc800215 	stw	r18,8(sp)
   498bc:	dc000015 	stw	r16,0(sp)
   498c0:	dfc00415 	stw	ra,16(sp)
   498c4:	dc400115 	stw	r17,4(sp)
   498c8:	2025883a 	mov	r18,r4
   498cc:	2827883a 	mov	r19,r5
   498d0:	3021883a 	mov	r16,r6
   498d4:	20000226 	beq	r4,zero,498e0 <__swbuf_r+0x30>
   498d8:	20800e17 	ldw	r2,56(r4)
   498dc:	10004226 	beq	r2,zero,499e8 <__swbuf_r+0x138>
   498e0:	80800617 	ldw	r2,24(r16)
   498e4:	8100030b 	ldhu	r4,12(r16)
   498e8:	80800215 	stw	r2,8(r16)
   498ec:	2080020c 	andi	r2,r4,8
   498f0:	10003626 	beq	r2,zero,499cc <__swbuf_r+0x11c>
   498f4:	80c00417 	ldw	r3,16(r16)
   498f8:	18003426 	beq	r3,zero,499cc <__swbuf_r+0x11c>
   498fc:	2088000c 	andi	r2,r4,8192
   49900:	9c403fcc 	andi	r17,r19,255
   49904:	10001a26 	beq	r2,zero,49970 <__swbuf_r+0xc0>
   49908:	80800017 	ldw	r2,0(r16)
   4990c:	81000517 	ldw	r4,20(r16)
   49910:	10c7c83a 	sub	r3,r2,r3
   49914:	1900200e 	bge	r3,r4,49998 <__swbuf_r+0xe8>
   49918:	18c00044 	addi	r3,r3,1
   4991c:	81000217 	ldw	r4,8(r16)
   49920:	11400044 	addi	r5,r2,1
   49924:	81400015 	stw	r5,0(r16)
   49928:	213fffc4 	addi	r4,r4,-1
   4992c:	81000215 	stw	r4,8(r16)
   49930:	14c00005 	stb	r19,0(r2)
   49934:	80800517 	ldw	r2,20(r16)
   49938:	10c01e26 	beq	r2,r3,499b4 <__swbuf_r+0x104>
   4993c:	8080030b 	ldhu	r2,12(r16)
   49940:	1080004c 	andi	r2,r2,1
   49944:	10000226 	beq	r2,zero,49950 <__swbuf_r+0xa0>
   49948:	00800284 	movi	r2,10
   4994c:	88801926 	beq	r17,r2,499b4 <__swbuf_r+0x104>
   49950:	8805883a 	mov	r2,r17
   49954:	dfc00417 	ldw	ra,16(sp)
   49958:	dcc00317 	ldw	r19,12(sp)
   4995c:	dc800217 	ldw	r18,8(sp)
   49960:	dc400117 	ldw	r17,4(sp)
   49964:	dc000017 	ldw	r16,0(sp)
   49968:	dec00504 	addi	sp,sp,20
   4996c:	f800283a 	ret
   49970:	81401917 	ldw	r5,100(r16)
   49974:	00b7ffc4 	movi	r2,-8193
   49978:	21080014 	ori	r4,r4,8192
   4997c:	2884703a 	and	r2,r5,r2
   49980:	80801915 	stw	r2,100(r16)
   49984:	80800017 	ldw	r2,0(r16)
   49988:	8100030d 	sth	r4,12(r16)
   4998c:	81000517 	ldw	r4,20(r16)
   49990:	10c7c83a 	sub	r3,r2,r3
   49994:	193fe016 	blt	r3,r4,49918 <__alt_data_end+0xfffed558>
   49998:	800b883a 	mov	r5,r16
   4999c:	9009883a 	mov	r4,r18
   499a0:	00444040 	call	44404 <_fflush_r>
   499a4:	1000071e 	bne	r2,zero,499c4 <__swbuf_r+0x114>
   499a8:	80800017 	ldw	r2,0(r16)
   499ac:	00c00044 	movi	r3,1
   499b0:	003fda06 	br	4991c <__alt_data_end+0xfffed55c>
   499b4:	800b883a 	mov	r5,r16
   499b8:	9009883a 	mov	r4,r18
   499bc:	00444040 	call	44404 <_fflush_r>
   499c0:	103fe326 	beq	r2,zero,49950 <__alt_data_end+0xfffed590>
   499c4:	00bfffc4 	movi	r2,-1
   499c8:	003fe206 	br	49954 <__alt_data_end+0xfffed594>
   499cc:	800b883a 	mov	r5,r16
   499d0:	9009883a 	mov	r4,r18
   499d4:	00427e40 	call	427e4 <__swsetup_r>
   499d8:	103ffa1e 	bne	r2,zero,499c4 <__alt_data_end+0xfffed604>
   499dc:	8100030b 	ldhu	r4,12(r16)
   499e0:	80c00417 	ldw	r3,16(r16)
   499e4:	003fc506 	br	498fc <__alt_data_end+0xfffed53c>
   499e8:	00447f00 	call	447f0 <__sinit>
   499ec:	003fbc06 	br	498e0 <__alt_data_end+0xfffed520>

000499f0 <__swbuf>:
   499f0:	00800174 	movhi	r2,5
   499f4:	1085ef04 	addi	r2,r2,6076
   499f8:	280d883a 	mov	r6,r5
   499fc:	200b883a 	mov	r5,r4
   49a00:	11000017 	ldw	r4,0(r2)
   49a04:	00498b01 	jmpi	498b0 <__swbuf_r>

00049a08 <_wcrtomb_r>:
   49a08:	defff604 	addi	sp,sp,-40
   49a0c:	00800174 	movhi	r2,5
   49a10:	dc800815 	stw	r18,32(sp)
   49a14:	dc400715 	stw	r17,28(sp)
   49a18:	dc000615 	stw	r16,24(sp)
   49a1c:	1085f304 	addi	r2,r2,6092
   49a20:	dfc00915 	stw	ra,36(sp)
   49a24:	2021883a 	mov	r16,r4
   49a28:	3823883a 	mov	r17,r7
   49a2c:	14800017 	ldw	r18,0(r2)
   49a30:	28001426 	beq	r5,zero,49a84 <_wcrtomb_r+0x7c>
   49a34:	d9400415 	stw	r5,16(sp)
   49a38:	d9800515 	stw	r6,20(sp)
   49a3c:	0044e780 	call	44e78 <__locale_charset>
   49a40:	d9800517 	ldw	r6,20(sp)
   49a44:	d9400417 	ldw	r5,16(sp)
   49a48:	100f883a 	mov	r7,r2
   49a4c:	dc400015 	stw	r17,0(sp)
   49a50:	8009883a 	mov	r4,r16
   49a54:	903ee83a 	callr	r18
   49a58:	00ffffc4 	movi	r3,-1
   49a5c:	10c0031e 	bne	r2,r3,49a6c <_wcrtomb_r+0x64>
   49a60:	88000015 	stw	zero,0(r17)
   49a64:	00c02284 	movi	r3,138
   49a68:	80c00015 	stw	r3,0(r16)
   49a6c:	dfc00917 	ldw	ra,36(sp)
   49a70:	dc800817 	ldw	r18,32(sp)
   49a74:	dc400717 	ldw	r17,28(sp)
   49a78:	dc000617 	ldw	r16,24(sp)
   49a7c:	dec00a04 	addi	sp,sp,40
   49a80:	f800283a 	ret
   49a84:	0044e780 	call	44e78 <__locale_charset>
   49a88:	100f883a 	mov	r7,r2
   49a8c:	dc400015 	stw	r17,0(sp)
   49a90:	000d883a 	mov	r6,zero
   49a94:	d9400104 	addi	r5,sp,4
   49a98:	8009883a 	mov	r4,r16
   49a9c:	903ee83a 	callr	r18
   49aa0:	003fed06 	br	49a58 <__alt_data_end+0xfffed698>

00049aa4 <wcrtomb>:
   49aa4:	defff604 	addi	sp,sp,-40
   49aa8:	00800174 	movhi	r2,5
   49aac:	dc800615 	stw	r18,24(sp)
   49ab0:	dc400515 	stw	r17,20(sp)
   49ab4:	1085ef04 	addi	r2,r2,6076
   49ab8:	dfc00915 	stw	ra,36(sp)
   49abc:	dd000815 	stw	r20,32(sp)
   49ac0:	dcc00715 	stw	r19,28(sp)
   49ac4:	dc000415 	stw	r16,16(sp)
   49ac8:	3025883a 	mov	r18,r6
   49acc:	14400017 	ldw	r17,0(r2)
   49ad0:	20001926 	beq	r4,zero,49b38 <wcrtomb+0x94>
   49ad4:	00800174 	movhi	r2,5
   49ad8:	1085f304 	addi	r2,r2,6092
   49adc:	15000017 	ldw	r20,0(r2)
   49ae0:	2021883a 	mov	r16,r4
   49ae4:	2827883a 	mov	r19,r5
   49ae8:	0044e780 	call	44e78 <__locale_charset>
   49aec:	100f883a 	mov	r7,r2
   49af0:	dc800015 	stw	r18,0(sp)
   49af4:	980d883a 	mov	r6,r19
   49af8:	800b883a 	mov	r5,r16
   49afc:	8809883a 	mov	r4,r17
   49b00:	a03ee83a 	callr	r20
   49b04:	00ffffc4 	movi	r3,-1
   49b08:	10c0031e 	bne	r2,r3,49b18 <wcrtomb+0x74>
   49b0c:	90000015 	stw	zero,0(r18)
   49b10:	00c02284 	movi	r3,138
   49b14:	88c00015 	stw	r3,0(r17)
   49b18:	dfc00917 	ldw	ra,36(sp)
   49b1c:	dd000817 	ldw	r20,32(sp)
   49b20:	dcc00717 	ldw	r19,28(sp)
   49b24:	dc800617 	ldw	r18,24(sp)
   49b28:	dc400517 	ldw	r17,20(sp)
   49b2c:	dc000417 	ldw	r16,16(sp)
   49b30:	dec00a04 	addi	sp,sp,40
   49b34:	f800283a 	ret
   49b38:	00800174 	movhi	r2,5
   49b3c:	1085f304 	addi	r2,r2,6092
   49b40:	14000017 	ldw	r16,0(r2)
   49b44:	0044e780 	call	44e78 <__locale_charset>
   49b48:	100f883a 	mov	r7,r2
   49b4c:	dc800015 	stw	r18,0(sp)
   49b50:	000d883a 	mov	r6,zero
   49b54:	d9400104 	addi	r5,sp,4
   49b58:	8809883a 	mov	r4,r17
   49b5c:	803ee83a 	callr	r16
   49b60:	003fe806 	br	49b04 <__alt_data_end+0xfffed744>

00049b64 <__ascii_wctomb>:
   49b64:	28000526 	beq	r5,zero,49b7c <__ascii_wctomb+0x18>
   49b68:	00803fc4 	movi	r2,255
   49b6c:	11800536 	bltu	r2,r6,49b84 <__ascii_wctomb+0x20>
   49b70:	29800005 	stb	r6,0(r5)
   49b74:	00800044 	movi	r2,1
   49b78:	f800283a 	ret
   49b7c:	0005883a 	mov	r2,zero
   49b80:	f800283a 	ret
   49b84:	00802284 	movi	r2,138
   49b88:	20800015 	stw	r2,0(r4)
   49b8c:	00bfffc4 	movi	r2,-1
   49b90:	f800283a 	ret

00049b94 <_wctomb_r>:
   49b94:	00800174 	movhi	r2,5
   49b98:	defff904 	addi	sp,sp,-28
   49b9c:	1085f304 	addi	r2,r2,6092
   49ba0:	dfc00615 	stw	ra,24(sp)
   49ba4:	dc400515 	stw	r17,20(sp)
   49ba8:	dc000415 	stw	r16,16(sp)
   49bac:	3823883a 	mov	r17,r7
   49bb0:	14000017 	ldw	r16,0(r2)
   49bb4:	d9000115 	stw	r4,4(sp)
   49bb8:	d9400215 	stw	r5,8(sp)
   49bbc:	d9800315 	stw	r6,12(sp)
   49bc0:	0044e780 	call	44e78 <__locale_charset>
   49bc4:	d9800317 	ldw	r6,12(sp)
   49bc8:	d9400217 	ldw	r5,8(sp)
   49bcc:	d9000117 	ldw	r4,4(sp)
   49bd0:	100f883a 	mov	r7,r2
   49bd4:	dc400015 	stw	r17,0(sp)
   49bd8:	803ee83a 	callr	r16
   49bdc:	dfc00617 	ldw	ra,24(sp)
   49be0:	dc400517 	ldw	r17,20(sp)
   49be4:	dc000417 	ldw	r16,16(sp)
   49be8:	dec00704 	addi	sp,sp,28
   49bec:	f800283a 	ret

00049bf0 <__udivdi3>:
   49bf0:	defff404 	addi	sp,sp,-48
   49bf4:	dcc00515 	stw	r19,20(sp)
   49bf8:	dc000215 	stw	r16,8(sp)
   49bfc:	dfc00b15 	stw	ra,44(sp)
   49c00:	df000a15 	stw	fp,40(sp)
   49c04:	ddc00915 	stw	r23,36(sp)
   49c08:	dd800815 	stw	r22,32(sp)
   49c0c:	dd400715 	stw	r21,28(sp)
   49c10:	dd000615 	stw	r20,24(sp)
   49c14:	dc800415 	stw	r18,16(sp)
   49c18:	dc400315 	stw	r17,12(sp)
   49c1c:	2027883a 	mov	r19,r4
   49c20:	2821883a 	mov	r16,r5
   49c24:	3800461e 	bne	r7,zero,49d40 <__udivdi3+0x150>
   49c28:	3023883a 	mov	r17,r6
   49c2c:	2025883a 	mov	r18,r4
   49c30:	2980572e 	bgeu	r5,r6,49d90 <__udivdi3+0x1a0>
   49c34:	00bfffd4 	movui	r2,65535
   49c38:	282d883a 	mov	r22,r5
   49c3c:	1180b236 	bltu	r2,r6,49f08 <__udivdi3+0x318>
   49c40:	00803fc4 	movi	r2,255
   49c44:	1185803a 	cmpltu	r2,r2,r6
   49c48:	100490fa 	slli	r2,r2,3
   49c4c:	3086d83a 	srl	r3,r6,r2
   49c50:	01000174 	movhi	r4,5
   49c54:	213ea504 	addi	r4,r4,-1388
   49c58:	20c7883a 	add	r3,r4,r3
   49c5c:	18c00003 	ldbu	r3,0(r3)
   49c60:	1885883a 	add	r2,r3,r2
   49c64:	00c00804 	movi	r3,32
   49c68:	1887c83a 	sub	r3,r3,r2
   49c6c:	18000526 	beq	r3,zero,49c84 <__udivdi3+0x94>
   49c70:	80e0983a 	sll	r16,r16,r3
   49c74:	9884d83a 	srl	r2,r19,r2
   49c78:	30e2983a 	sll	r17,r6,r3
   49c7c:	98e4983a 	sll	r18,r19,r3
   49c80:	142cb03a 	or	r22,r2,r16
   49c84:	882ad43a 	srli	r21,r17,16
   49c88:	b009883a 	mov	r4,r22
   49c8c:	8d3fffcc 	andi	r20,r17,65535
   49c90:	a80b883a 	mov	r5,r21
   49c94:	004a90c0 	call	4a90c <__umodsi3>
   49c98:	b009883a 	mov	r4,r22
   49c9c:	a80b883a 	mov	r5,r21
   49ca0:	1027883a 	mov	r19,r2
   49ca4:	004a8a80 	call	4a8a8 <__udivsi3>
   49ca8:	100b883a 	mov	r5,r2
   49cac:	a009883a 	mov	r4,r20
   49cb0:	102d883a 	mov	r22,r2
   49cb4:	004a9640 	call	4a964 <__mulsi3>
   49cb8:	9826943a 	slli	r19,r19,16
   49cbc:	9006d43a 	srli	r3,r18,16
   49cc0:	1cc6b03a 	or	r3,r3,r19
   49cc4:	1880052e 	bgeu	r3,r2,49cdc <__udivdi3+0xec>
   49cc8:	1c47883a 	add	r3,r3,r17
   49ccc:	b13fffc4 	addi	r4,r22,-1
   49cd0:	1c400136 	bltu	r3,r17,49cd8 <__udivdi3+0xe8>
   49cd4:	18814236 	bltu	r3,r2,4a1e0 <__udivdi3+0x5f0>
   49cd8:	202d883a 	mov	r22,r4
   49cdc:	18a1c83a 	sub	r16,r3,r2
   49ce0:	8009883a 	mov	r4,r16
   49ce4:	a80b883a 	mov	r5,r21
   49ce8:	004a90c0 	call	4a90c <__umodsi3>
   49cec:	1027883a 	mov	r19,r2
   49cf0:	8009883a 	mov	r4,r16
   49cf4:	a80b883a 	mov	r5,r21
   49cf8:	9826943a 	slli	r19,r19,16
   49cfc:	004a8a80 	call	4a8a8 <__udivsi3>
   49d00:	100b883a 	mov	r5,r2
   49d04:	a009883a 	mov	r4,r20
   49d08:	94bfffcc 	andi	r18,r18,65535
   49d0c:	1021883a 	mov	r16,r2
   49d10:	94e4b03a 	or	r18,r18,r19
   49d14:	004a9640 	call	4a964 <__mulsi3>
   49d18:	9080052e 	bgeu	r18,r2,49d30 <__udivdi3+0x140>
   49d1c:	8ca5883a 	add	r18,r17,r18
   49d20:	80ffffc4 	addi	r3,r16,-1
   49d24:	94410c36 	bltu	r18,r17,4a158 <__udivdi3+0x568>
   49d28:	90810b2e 	bgeu	r18,r2,4a158 <__udivdi3+0x568>
   49d2c:	843fff84 	addi	r16,r16,-2
   49d30:	b004943a 	slli	r2,r22,16
   49d34:	0007883a 	mov	r3,zero
   49d38:	1404b03a 	or	r2,r2,r16
   49d3c:	00005e06 	br	49eb8 <__udivdi3+0x2c8>
   49d40:	29c05b36 	bltu	r5,r7,49eb0 <__udivdi3+0x2c0>
   49d44:	00bfffd4 	movui	r2,65535
   49d48:	11c0672e 	bgeu	r2,r7,49ee8 <__udivdi3+0x2f8>
   49d4c:	00804034 	movhi	r2,256
   49d50:	10bfffc4 	addi	r2,r2,-1
   49d54:	11c10a36 	bltu	r2,r7,4a180 <__udivdi3+0x590>
   49d58:	00800404 	movi	r2,16
   49d5c:	3886d83a 	srl	r3,r7,r2
   49d60:	01000174 	movhi	r4,5
   49d64:	213ea504 	addi	r4,r4,-1388
   49d68:	20c7883a 	add	r3,r4,r3
   49d6c:	18c00003 	ldbu	r3,0(r3)
   49d70:	05c00804 	movi	r23,32
   49d74:	1885883a 	add	r2,r3,r2
   49d78:	b8afc83a 	sub	r23,r23,r2
   49d7c:	b800671e 	bne	r23,zero,49f1c <__udivdi3+0x32c>
   49d80:	3c010536 	bltu	r7,r16,4a198 <__udivdi3+0x5a8>
   49d84:	9985403a 	cmpgeu	r2,r19,r6
   49d88:	0007883a 	mov	r3,zero
   49d8c:	00004a06 	br	49eb8 <__udivdi3+0x2c8>
   49d90:	3000041e 	bne	r6,zero,49da4 <__udivdi3+0x1b4>
   49d94:	000b883a 	mov	r5,zero
   49d98:	01000044 	movi	r4,1
   49d9c:	004a8a80 	call	4a8a8 <__udivsi3>
   49da0:	1023883a 	mov	r17,r2
   49da4:	00bfffd4 	movui	r2,65535
   49da8:	1440532e 	bgeu	r2,r17,49ef8 <__udivdi3+0x308>
   49dac:	00804034 	movhi	r2,256
   49db0:	10bfffc4 	addi	r2,r2,-1
   49db4:	1440f436 	bltu	r2,r17,4a188 <__udivdi3+0x598>
   49db8:	00800404 	movi	r2,16
   49dbc:	8886d83a 	srl	r3,r17,r2
   49dc0:	01000174 	movhi	r4,5
   49dc4:	213ea504 	addi	r4,r4,-1388
   49dc8:	20c7883a 	add	r3,r4,r3
   49dcc:	18c00003 	ldbu	r3,0(r3)
   49dd0:	1885883a 	add	r2,r3,r2
   49dd4:	00c00804 	movi	r3,32
   49dd8:	1887c83a 	sub	r3,r3,r2
   49ddc:	1800a51e 	bne	r3,zero,4a074 <__udivdi3+0x484>
   49de0:	882ad43a 	srli	r21,r17,16
   49de4:	8461c83a 	sub	r16,r16,r17
   49de8:	8d3fffcc 	andi	r20,r17,65535
   49dec:	00c00044 	movi	r3,1
   49df0:	a80b883a 	mov	r5,r21
   49df4:	8009883a 	mov	r4,r16
   49df8:	d8c00115 	stw	r3,4(sp)
   49dfc:	004a90c0 	call	4a90c <__umodsi3>
   49e00:	a80b883a 	mov	r5,r21
   49e04:	8009883a 	mov	r4,r16
   49e08:	1027883a 	mov	r19,r2
   49e0c:	004a8a80 	call	4a8a8 <__udivsi3>
   49e10:	a00b883a 	mov	r5,r20
   49e14:	1009883a 	mov	r4,r2
   49e18:	102d883a 	mov	r22,r2
   49e1c:	004a9640 	call	4a964 <__mulsi3>
   49e20:	9826943a 	slli	r19,r19,16
   49e24:	900ed43a 	srli	r7,r18,16
   49e28:	d8c00117 	ldw	r3,4(sp)
   49e2c:	3cceb03a 	or	r7,r7,r19
   49e30:	3880052e 	bgeu	r7,r2,49e48 <__udivdi3+0x258>
   49e34:	3c4f883a 	add	r7,r7,r17
   49e38:	b13fffc4 	addi	r4,r22,-1
   49e3c:	3c400136 	bltu	r7,r17,49e44 <__udivdi3+0x254>
   49e40:	3880e436 	bltu	r7,r2,4a1d4 <__udivdi3+0x5e4>
   49e44:	202d883a 	mov	r22,r4
   49e48:	38a1c83a 	sub	r16,r7,r2
   49e4c:	8009883a 	mov	r4,r16
   49e50:	a80b883a 	mov	r5,r21
   49e54:	d8c00115 	stw	r3,4(sp)
   49e58:	004a90c0 	call	4a90c <__umodsi3>
   49e5c:	1027883a 	mov	r19,r2
   49e60:	8009883a 	mov	r4,r16
   49e64:	a80b883a 	mov	r5,r21
   49e68:	9826943a 	slli	r19,r19,16
   49e6c:	004a8a80 	call	4a8a8 <__udivsi3>
   49e70:	a00b883a 	mov	r5,r20
   49e74:	1009883a 	mov	r4,r2
   49e78:	94bfffcc 	andi	r18,r18,65535
   49e7c:	1021883a 	mov	r16,r2
   49e80:	94e4b03a 	or	r18,r18,r19
   49e84:	004a9640 	call	4a964 <__mulsi3>
   49e88:	d8c00117 	ldw	r3,4(sp)
   49e8c:	9080052e 	bgeu	r18,r2,49ea4 <__udivdi3+0x2b4>
   49e90:	8ca5883a 	add	r18,r17,r18
   49e94:	813fffc4 	addi	r4,r16,-1
   49e98:	9440ad36 	bltu	r18,r17,4a150 <__udivdi3+0x560>
   49e9c:	9080ac2e 	bgeu	r18,r2,4a150 <__udivdi3+0x560>
   49ea0:	843fff84 	addi	r16,r16,-2
   49ea4:	b004943a 	slli	r2,r22,16
   49ea8:	1404b03a 	or	r2,r2,r16
   49eac:	00000206 	br	49eb8 <__udivdi3+0x2c8>
   49eb0:	0007883a 	mov	r3,zero
   49eb4:	0005883a 	mov	r2,zero
   49eb8:	dfc00b17 	ldw	ra,44(sp)
   49ebc:	df000a17 	ldw	fp,40(sp)
   49ec0:	ddc00917 	ldw	r23,36(sp)
   49ec4:	dd800817 	ldw	r22,32(sp)
   49ec8:	dd400717 	ldw	r21,28(sp)
   49ecc:	dd000617 	ldw	r20,24(sp)
   49ed0:	dcc00517 	ldw	r19,20(sp)
   49ed4:	dc800417 	ldw	r18,16(sp)
   49ed8:	dc400317 	ldw	r17,12(sp)
   49edc:	dc000217 	ldw	r16,8(sp)
   49ee0:	dec00c04 	addi	sp,sp,48
   49ee4:	f800283a 	ret
   49ee8:	00803fc4 	movi	r2,255
   49eec:	11c5803a 	cmpltu	r2,r2,r7
   49ef0:	100490fa 	slli	r2,r2,3
   49ef4:	003f9906 	br	49d5c <__alt_data_end+0xfffed99c>
   49ef8:	00803fc4 	movi	r2,255
   49efc:	1445803a 	cmpltu	r2,r2,r17
   49f00:	100490fa 	slli	r2,r2,3
   49f04:	003fad06 	br	49dbc <__alt_data_end+0xfffed9fc>
   49f08:	00804034 	movhi	r2,256
   49f0c:	10bfffc4 	addi	r2,r2,-1
   49f10:	11809f36 	bltu	r2,r6,4a190 <__udivdi3+0x5a0>
   49f14:	00800404 	movi	r2,16
   49f18:	003f4c06 	br	49c4c <__alt_data_end+0xfffed88c>
   49f1c:	3dce983a 	sll	r7,r7,r23
   49f20:	30b8d83a 	srl	fp,r6,r2
   49f24:	80a2d83a 	srl	r17,r16,r2
   49f28:	35cc983a 	sll	r6,r6,r23
   49f2c:	3f38b03a 	or	fp,r7,fp
   49f30:	e024d43a 	srli	r18,fp,16
   49f34:	9884d83a 	srl	r2,r19,r2
   49f38:	85e0983a 	sll	r16,r16,r23
   49f3c:	8809883a 	mov	r4,r17
   49f40:	900b883a 	mov	r5,r18
   49f44:	d9800015 	stw	r6,0(sp)
   49f48:	1420b03a 	or	r16,r2,r16
   49f4c:	004a90c0 	call	4a90c <__umodsi3>
   49f50:	900b883a 	mov	r5,r18
   49f54:	8809883a 	mov	r4,r17
   49f58:	1029883a 	mov	r20,r2
   49f5c:	e5bfffcc 	andi	r22,fp,65535
   49f60:	004a8a80 	call	4a8a8 <__udivsi3>
   49f64:	100b883a 	mov	r5,r2
   49f68:	b009883a 	mov	r4,r22
   49f6c:	102b883a 	mov	r21,r2
   49f70:	004a9640 	call	4a964 <__mulsi3>
   49f74:	a028943a 	slli	r20,r20,16
   49f78:	8006d43a 	srli	r3,r16,16
   49f7c:	1d06b03a 	or	r3,r3,r20
   49f80:	1880042e 	bgeu	r3,r2,49f94 <__udivdi3+0x3a4>
   49f84:	1f07883a 	add	r3,r3,fp
   49f88:	a93fffc4 	addi	r4,r21,-1
   49f8c:	1f00892e 	bgeu	r3,fp,4a1b4 <__udivdi3+0x5c4>
   49f90:	202b883a 	mov	r21,r4
   49f94:	18a3c83a 	sub	r17,r3,r2
   49f98:	8809883a 	mov	r4,r17
   49f9c:	900b883a 	mov	r5,r18
   49fa0:	004a90c0 	call	4a90c <__umodsi3>
   49fa4:	1029883a 	mov	r20,r2
   49fa8:	8809883a 	mov	r4,r17
   49fac:	900b883a 	mov	r5,r18
   49fb0:	a028943a 	slli	r20,r20,16
   49fb4:	004a8a80 	call	4a8a8 <__udivsi3>
   49fb8:	100b883a 	mov	r5,r2
   49fbc:	b009883a 	mov	r4,r22
   49fc0:	843fffcc 	andi	r16,r16,65535
   49fc4:	1023883a 	mov	r17,r2
   49fc8:	8520b03a 	or	r16,r16,r20
   49fcc:	004a9640 	call	4a964 <__mulsi3>
   49fd0:	8080042e 	bgeu	r16,r2,49fe4 <__udivdi3+0x3f4>
   49fd4:	8721883a 	add	r16,r16,fp
   49fd8:	88ffffc4 	addi	r3,r17,-1
   49fdc:	8700712e 	bgeu	r16,fp,4a1a4 <__udivdi3+0x5b4>
   49fe0:	1823883a 	mov	r17,r3
   49fe4:	a80e943a 	slli	r7,r21,16
   49fe8:	d8c00017 	ldw	r3,0(sp)
   49fec:	80a1c83a 	sub	r16,r16,r2
   49ff0:	3c64b03a 	or	r18,r7,r17
   49ff4:	1d3fffcc 	andi	r20,r3,65535
   49ff8:	9022d43a 	srli	r17,r18,16
   49ffc:	95bfffcc 	andi	r22,r18,65535
   4a000:	a00b883a 	mov	r5,r20
   4a004:	b009883a 	mov	r4,r22
   4a008:	182ad43a 	srli	r21,r3,16
   4a00c:	004a9640 	call	4a964 <__mulsi3>
   4a010:	a00b883a 	mov	r5,r20
   4a014:	8809883a 	mov	r4,r17
   4a018:	1039883a 	mov	fp,r2
   4a01c:	004a9640 	call	4a964 <__mulsi3>
   4a020:	8809883a 	mov	r4,r17
   4a024:	a80b883a 	mov	r5,r21
   4a028:	1029883a 	mov	r20,r2
   4a02c:	004a9640 	call	4a964 <__mulsi3>
   4a030:	a80b883a 	mov	r5,r21
   4a034:	b009883a 	mov	r4,r22
   4a038:	1023883a 	mov	r17,r2
   4a03c:	004a9640 	call	4a964 <__mulsi3>
   4a040:	e006d43a 	srli	r3,fp,16
   4a044:	1505883a 	add	r2,r2,r20
   4a048:	1887883a 	add	r3,r3,r2
   4a04c:	1d00022e 	bgeu	r3,r20,4a058 <__udivdi3+0x468>
   4a050:	00800074 	movhi	r2,1
   4a054:	88a3883a 	add	r17,r17,r2
   4a058:	1804d43a 	srli	r2,r3,16
   4a05c:	1463883a 	add	r17,r2,r17
   4a060:	84404436 	bltu	r16,r17,4a174 <__udivdi3+0x584>
   4a064:	84403e26 	beq	r16,r17,4a160 <__udivdi3+0x570>
   4a068:	9005883a 	mov	r2,r18
   4a06c:	0007883a 	mov	r3,zero
   4a070:	003f9106 	br	49eb8 <__alt_data_end+0xfffedaf8>
   4a074:	88e2983a 	sll	r17,r17,r3
   4a078:	80aed83a 	srl	r23,r16,r2
   4a07c:	80e0983a 	sll	r16,r16,r3
   4a080:	882ad43a 	srli	r21,r17,16
   4a084:	9884d83a 	srl	r2,r19,r2
   4a088:	b809883a 	mov	r4,r23
   4a08c:	a80b883a 	mov	r5,r21
   4a090:	98e4983a 	sll	r18,r19,r3
   4a094:	142cb03a 	or	r22,r2,r16
   4a098:	004a90c0 	call	4a90c <__umodsi3>
   4a09c:	b809883a 	mov	r4,r23
   4a0a0:	a80b883a 	mov	r5,r21
   4a0a4:	1027883a 	mov	r19,r2
   4a0a8:	8d3fffcc 	andi	r20,r17,65535
   4a0ac:	004a8a80 	call	4a8a8 <__udivsi3>
   4a0b0:	a009883a 	mov	r4,r20
   4a0b4:	100b883a 	mov	r5,r2
   4a0b8:	102f883a 	mov	r23,r2
   4a0bc:	004a9640 	call	4a964 <__mulsi3>
   4a0c0:	9826943a 	slli	r19,r19,16
   4a0c4:	b008d43a 	srli	r4,r22,16
   4a0c8:	24c8b03a 	or	r4,r4,r19
   4a0cc:	2080062e 	bgeu	r4,r2,4a0e8 <__udivdi3+0x4f8>
   4a0d0:	2449883a 	add	r4,r4,r17
   4a0d4:	b8ffffc4 	addi	r3,r23,-1
   4a0d8:	24403c36 	bltu	r4,r17,4a1cc <__udivdi3+0x5dc>
   4a0dc:	20803b2e 	bgeu	r4,r2,4a1cc <__udivdi3+0x5dc>
   4a0e0:	bdffff84 	addi	r23,r23,-2
   4a0e4:	2449883a 	add	r4,r4,r17
   4a0e8:	20a1c83a 	sub	r16,r4,r2
   4a0ec:	a80b883a 	mov	r5,r21
   4a0f0:	8009883a 	mov	r4,r16
   4a0f4:	004a90c0 	call	4a90c <__umodsi3>
   4a0f8:	a80b883a 	mov	r5,r21
   4a0fc:	8009883a 	mov	r4,r16
   4a100:	1027883a 	mov	r19,r2
   4a104:	004a8a80 	call	4a8a8 <__udivsi3>
   4a108:	a009883a 	mov	r4,r20
   4a10c:	100b883a 	mov	r5,r2
   4a110:	9826943a 	slli	r19,r19,16
   4a114:	1039883a 	mov	fp,r2
   4a118:	004a9640 	call	4a964 <__mulsi3>
   4a11c:	b13fffcc 	andi	r4,r22,65535
   4a120:	24c8b03a 	or	r4,r4,r19
   4a124:	2080062e 	bgeu	r4,r2,4a140 <__udivdi3+0x550>
   4a128:	2449883a 	add	r4,r4,r17
   4a12c:	e0ffffc4 	addi	r3,fp,-1
   4a130:	24402436 	bltu	r4,r17,4a1c4 <__udivdi3+0x5d4>
   4a134:	2080232e 	bgeu	r4,r2,4a1c4 <__udivdi3+0x5d4>
   4a138:	e73fff84 	addi	fp,fp,-2
   4a13c:	2449883a 	add	r4,r4,r17
   4a140:	b82e943a 	slli	r23,r23,16
   4a144:	20a1c83a 	sub	r16,r4,r2
   4a148:	bf06b03a 	or	r3,r23,fp
   4a14c:	003f2806 	br	49df0 <__alt_data_end+0xfffeda30>
   4a150:	2021883a 	mov	r16,r4
   4a154:	003f5306 	br	49ea4 <__alt_data_end+0xfffedae4>
   4a158:	1821883a 	mov	r16,r3
   4a15c:	003ef406 	br	49d30 <__alt_data_end+0xfffed970>
   4a160:	1806943a 	slli	r3,r3,16
   4a164:	9de6983a 	sll	r19,r19,r23
   4a168:	e73fffcc 	andi	fp,fp,65535
   4a16c:	1f07883a 	add	r3,r3,fp
   4a170:	98ffbd2e 	bgeu	r19,r3,4a068 <__alt_data_end+0xfffedca8>
   4a174:	90bfffc4 	addi	r2,r18,-1
   4a178:	0007883a 	mov	r3,zero
   4a17c:	003f4e06 	br	49eb8 <__alt_data_end+0xfffedaf8>
   4a180:	00800604 	movi	r2,24
   4a184:	003ef506 	br	49d5c <__alt_data_end+0xfffed99c>
   4a188:	00800604 	movi	r2,24
   4a18c:	003f0b06 	br	49dbc <__alt_data_end+0xfffed9fc>
   4a190:	00800604 	movi	r2,24
   4a194:	003ead06 	br	49c4c <__alt_data_end+0xfffed88c>
   4a198:	0007883a 	mov	r3,zero
   4a19c:	00800044 	movi	r2,1
   4a1a0:	003f4506 	br	49eb8 <__alt_data_end+0xfffedaf8>
   4a1a4:	80bf8e2e 	bgeu	r16,r2,49fe0 <__alt_data_end+0xfffedc20>
   4a1a8:	8c7fff84 	addi	r17,r17,-2
   4a1ac:	8721883a 	add	r16,r16,fp
   4a1b0:	003f8c06 	br	49fe4 <__alt_data_end+0xfffedc24>
   4a1b4:	18bf762e 	bgeu	r3,r2,49f90 <__alt_data_end+0xfffedbd0>
   4a1b8:	ad7fff84 	addi	r21,r21,-2
   4a1bc:	1f07883a 	add	r3,r3,fp
   4a1c0:	003f7406 	br	49f94 <__alt_data_end+0xfffedbd4>
   4a1c4:	1839883a 	mov	fp,r3
   4a1c8:	003fdd06 	br	4a140 <__alt_data_end+0xfffedd80>
   4a1cc:	182f883a 	mov	r23,r3
   4a1d0:	003fc506 	br	4a0e8 <__alt_data_end+0xfffedd28>
   4a1d4:	b5bfff84 	addi	r22,r22,-2
   4a1d8:	3c4f883a 	add	r7,r7,r17
   4a1dc:	003f1a06 	br	49e48 <__alt_data_end+0xfffeda88>
   4a1e0:	b5bfff84 	addi	r22,r22,-2
   4a1e4:	1c47883a 	add	r3,r3,r17
   4a1e8:	003ebc06 	br	49cdc <__alt_data_end+0xfffed91c>

0004a1ec <__umoddi3>:
   4a1ec:	defff304 	addi	sp,sp,-52
   4a1f0:	df000b15 	stw	fp,44(sp)
   4a1f4:	dc400415 	stw	r17,16(sp)
   4a1f8:	dc000315 	stw	r16,12(sp)
   4a1fc:	dfc00c15 	stw	ra,48(sp)
   4a200:	ddc00a15 	stw	r23,40(sp)
   4a204:	dd800915 	stw	r22,36(sp)
   4a208:	dd400815 	stw	r21,32(sp)
   4a20c:	dd000715 	stw	r20,28(sp)
   4a210:	dcc00615 	stw	r19,24(sp)
   4a214:	dc800515 	stw	r18,20(sp)
   4a218:	2021883a 	mov	r16,r4
   4a21c:	2823883a 	mov	r17,r5
   4a220:	2839883a 	mov	fp,r5
   4a224:	3800401e 	bne	r7,zero,4a328 <__umoddi3+0x13c>
   4a228:	3027883a 	mov	r19,r6
   4a22c:	2029883a 	mov	r20,r4
   4a230:	2980552e 	bgeu	r5,r6,4a388 <__umoddi3+0x19c>
   4a234:	00bfffd4 	movui	r2,65535
   4a238:	1180a236 	bltu	r2,r6,4a4c4 <__umoddi3+0x2d8>
   4a23c:	01003fc4 	movi	r4,255
   4a240:	2189803a 	cmpltu	r4,r4,r6
   4a244:	200890fa 	slli	r4,r4,3
   4a248:	3104d83a 	srl	r2,r6,r4
   4a24c:	00c00174 	movhi	r3,5
   4a250:	18fea504 	addi	r3,r3,-1388
   4a254:	1885883a 	add	r2,r3,r2
   4a258:	10c00003 	ldbu	r3,0(r2)
   4a25c:	00800804 	movi	r2,32
   4a260:	1909883a 	add	r4,r3,r4
   4a264:	1125c83a 	sub	r18,r2,r4
   4a268:	90000526 	beq	r18,zero,4a280 <__umoddi3+0x94>
   4a26c:	8ca2983a 	sll	r17,r17,r18
   4a270:	8108d83a 	srl	r4,r16,r4
   4a274:	34a6983a 	sll	r19,r6,r18
   4a278:	84a8983a 	sll	r20,r16,r18
   4a27c:	2478b03a 	or	fp,r4,r17
   4a280:	982cd43a 	srli	r22,r19,16
   4a284:	e009883a 	mov	r4,fp
   4a288:	9dffffcc 	andi	r23,r19,65535
   4a28c:	b00b883a 	mov	r5,r22
   4a290:	004a90c0 	call	4a90c <__umodsi3>
   4a294:	b00b883a 	mov	r5,r22
   4a298:	e009883a 	mov	r4,fp
   4a29c:	102b883a 	mov	r21,r2
   4a2a0:	004a8a80 	call	4a8a8 <__udivsi3>
   4a2a4:	100b883a 	mov	r5,r2
   4a2a8:	b809883a 	mov	r4,r23
   4a2ac:	004a9640 	call	4a964 <__mulsi3>
   4a2b0:	a82a943a 	slli	r21,r21,16
   4a2b4:	a006d43a 	srli	r3,r20,16
   4a2b8:	1d46b03a 	or	r3,r3,r21
   4a2bc:	1880032e 	bgeu	r3,r2,4a2cc <__umoddi3+0xe0>
   4a2c0:	1cc7883a 	add	r3,r3,r19
   4a2c4:	1cc00136 	bltu	r3,r19,4a2cc <__umoddi3+0xe0>
   4a2c8:	18813136 	bltu	r3,r2,4a790 <__umoddi3+0x5a4>
   4a2cc:	18a1c83a 	sub	r16,r3,r2
   4a2d0:	b00b883a 	mov	r5,r22
   4a2d4:	8009883a 	mov	r4,r16
   4a2d8:	004a90c0 	call	4a90c <__umodsi3>
   4a2dc:	b00b883a 	mov	r5,r22
   4a2e0:	8009883a 	mov	r4,r16
   4a2e4:	1023883a 	mov	r17,r2
   4a2e8:	004a8a80 	call	4a8a8 <__udivsi3>
   4a2ec:	100b883a 	mov	r5,r2
   4a2f0:	b809883a 	mov	r4,r23
   4a2f4:	8822943a 	slli	r17,r17,16
   4a2f8:	004a9640 	call	4a964 <__mulsi3>
   4a2fc:	a0ffffcc 	andi	r3,r20,65535
   4a300:	1c46b03a 	or	r3,r3,r17
   4a304:	1880042e 	bgeu	r3,r2,4a318 <__umoddi3+0x12c>
   4a308:	1cc7883a 	add	r3,r3,r19
   4a30c:	1cc00236 	bltu	r3,r19,4a318 <__umoddi3+0x12c>
   4a310:	1880012e 	bgeu	r3,r2,4a318 <__umoddi3+0x12c>
   4a314:	1cc7883a 	add	r3,r3,r19
   4a318:	1885c83a 	sub	r2,r3,r2
   4a31c:	1484d83a 	srl	r2,r2,r18
   4a320:	0007883a 	mov	r3,zero
   4a324:	00005306 	br	4a474 <__umoddi3+0x288>
   4a328:	29c05036 	bltu	r5,r7,4a46c <__umoddi3+0x280>
   4a32c:	00bfffd4 	movui	r2,65535
   4a330:	11c05c2e 	bgeu	r2,r7,4a4a4 <__umoddi3+0x2b8>
   4a334:	00804034 	movhi	r2,256
   4a338:	10bfffc4 	addi	r2,r2,-1
   4a33c:	11c10636 	bltu	r2,r7,4a758 <__umoddi3+0x56c>
   4a340:	01000404 	movi	r4,16
   4a344:	3904d83a 	srl	r2,r7,r4
   4a348:	00c00174 	movhi	r3,5
   4a34c:	18fea504 	addi	r3,r3,-1388
   4a350:	1885883a 	add	r2,r3,r2
   4a354:	14c00003 	ldbu	r19,0(r2)
   4a358:	00c00804 	movi	r3,32
   4a35c:	9927883a 	add	r19,r19,r4
   4a360:	1ce9c83a 	sub	r20,r3,r19
   4a364:	a0005c1e 	bne	r20,zero,4a4d8 <__umoddi3+0x2ec>
   4a368:	3c400136 	bltu	r7,r17,4a370 <__umoddi3+0x184>
   4a36c:	81810a36 	bltu	r16,r6,4a798 <__umoddi3+0x5ac>
   4a370:	8185c83a 	sub	r2,r16,r6
   4a374:	89e3c83a 	sub	r17,r17,r7
   4a378:	8089803a 	cmpltu	r4,r16,r2
   4a37c:	8939c83a 	sub	fp,r17,r4
   4a380:	e007883a 	mov	r3,fp
   4a384:	00003b06 	br	4a474 <__umoddi3+0x288>
   4a388:	3000041e 	bne	r6,zero,4a39c <__umoddi3+0x1b0>
   4a38c:	000b883a 	mov	r5,zero
   4a390:	01000044 	movi	r4,1
   4a394:	004a8a80 	call	4a8a8 <__udivsi3>
   4a398:	1027883a 	mov	r19,r2
   4a39c:	00bfffd4 	movui	r2,65535
   4a3a0:	14c0442e 	bgeu	r2,r19,4a4b4 <__umoddi3+0x2c8>
   4a3a4:	00804034 	movhi	r2,256
   4a3a8:	10bfffc4 	addi	r2,r2,-1
   4a3ac:	14c0ec36 	bltu	r2,r19,4a760 <__umoddi3+0x574>
   4a3b0:	00800404 	movi	r2,16
   4a3b4:	9886d83a 	srl	r3,r19,r2
   4a3b8:	01000174 	movhi	r4,5
   4a3bc:	213ea504 	addi	r4,r4,-1388
   4a3c0:	20c7883a 	add	r3,r4,r3
   4a3c4:	18c00003 	ldbu	r3,0(r3)
   4a3c8:	1887883a 	add	r3,r3,r2
   4a3cc:	00800804 	movi	r2,32
   4a3d0:	10e5c83a 	sub	r18,r2,r3
   4a3d4:	9000ab1e 	bne	r18,zero,4a684 <__umoddi3+0x498>
   4a3d8:	982cd43a 	srli	r22,r19,16
   4a3dc:	8ce3c83a 	sub	r17,r17,r19
   4a3e0:	9dffffcc 	andi	r23,r19,65535
   4a3e4:	b00b883a 	mov	r5,r22
   4a3e8:	8809883a 	mov	r4,r17
   4a3ec:	004a90c0 	call	4a90c <__umodsi3>
   4a3f0:	b00b883a 	mov	r5,r22
   4a3f4:	8809883a 	mov	r4,r17
   4a3f8:	102b883a 	mov	r21,r2
   4a3fc:	004a8a80 	call	4a8a8 <__udivsi3>
   4a400:	b80b883a 	mov	r5,r23
   4a404:	1009883a 	mov	r4,r2
   4a408:	004a9640 	call	4a964 <__mulsi3>
   4a40c:	a82a943a 	slli	r21,r21,16
   4a410:	a006d43a 	srli	r3,r20,16
   4a414:	1d46b03a 	or	r3,r3,r21
   4a418:	1880042e 	bgeu	r3,r2,4a42c <__umoddi3+0x240>
   4a41c:	1cc7883a 	add	r3,r3,r19
   4a420:	1cc00236 	bltu	r3,r19,4a42c <__umoddi3+0x240>
   4a424:	1880012e 	bgeu	r3,r2,4a42c <__umoddi3+0x240>
   4a428:	1cc7883a 	add	r3,r3,r19
   4a42c:	18a1c83a 	sub	r16,r3,r2
   4a430:	b00b883a 	mov	r5,r22
   4a434:	8009883a 	mov	r4,r16
   4a438:	004a90c0 	call	4a90c <__umodsi3>
   4a43c:	1023883a 	mov	r17,r2
   4a440:	b00b883a 	mov	r5,r22
   4a444:	8009883a 	mov	r4,r16
   4a448:	004a8a80 	call	4a8a8 <__udivsi3>
   4a44c:	8822943a 	slli	r17,r17,16
   4a450:	b80b883a 	mov	r5,r23
   4a454:	1009883a 	mov	r4,r2
   4a458:	004a9640 	call	4a964 <__mulsi3>
   4a45c:	a53fffcc 	andi	r20,r20,65535
   4a460:	a446b03a 	or	r3,r20,r17
   4a464:	18bfac2e 	bgeu	r3,r2,4a318 <__alt_data_end+0xfffedf58>
   4a468:	003fa706 	br	4a308 <__alt_data_end+0xfffedf48>
   4a46c:	2005883a 	mov	r2,r4
   4a470:	2807883a 	mov	r3,r5
   4a474:	dfc00c17 	ldw	ra,48(sp)
   4a478:	df000b17 	ldw	fp,44(sp)
   4a47c:	ddc00a17 	ldw	r23,40(sp)
   4a480:	dd800917 	ldw	r22,36(sp)
   4a484:	dd400817 	ldw	r21,32(sp)
   4a488:	dd000717 	ldw	r20,28(sp)
   4a48c:	dcc00617 	ldw	r19,24(sp)
   4a490:	dc800517 	ldw	r18,20(sp)
   4a494:	dc400417 	ldw	r17,16(sp)
   4a498:	dc000317 	ldw	r16,12(sp)
   4a49c:	dec00d04 	addi	sp,sp,52
   4a4a0:	f800283a 	ret
   4a4a4:	04c03fc4 	movi	r19,255
   4a4a8:	99c9803a 	cmpltu	r4,r19,r7
   4a4ac:	200890fa 	slli	r4,r4,3
   4a4b0:	003fa406 	br	4a344 <__alt_data_end+0xfffedf84>
   4a4b4:	00803fc4 	movi	r2,255
   4a4b8:	14c5803a 	cmpltu	r2,r2,r19
   4a4bc:	100490fa 	slli	r2,r2,3
   4a4c0:	003fbc06 	br	4a3b4 <__alt_data_end+0xfffedff4>
   4a4c4:	00804034 	movhi	r2,256
   4a4c8:	10bfffc4 	addi	r2,r2,-1
   4a4cc:	1180a636 	bltu	r2,r6,4a768 <__umoddi3+0x57c>
   4a4d0:	01000404 	movi	r4,16
   4a4d4:	003f5c06 	br	4a248 <__alt_data_end+0xfffede88>
   4a4d8:	3d0e983a 	sll	r7,r7,r20
   4a4dc:	34ead83a 	srl	r21,r6,r19
   4a4e0:	8cc6d83a 	srl	r3,r17,r19
   4a4e4:	8d10983a 	sll	r8,r17,r20
   4a4e8:	3d6ab03a 	or	r21,r7,r21
   4a4ec:	a82cd43a 	srli	r22,r21,16
   4a4f0:	84e2d83a 	srl	r17,r16,r19
   4a4f4:	1809883a 	mov	r4,r3
   4a4f8:	b00b883a 	mov	r5,r22
   4a4fc:	8a22b03a 	or	r17,r17,r8
   4a500:	3524983a 	sll	r18,r6,r20
   4a504:	dc400015 	stw	r17,0(sp)
   4a508:	d8c00115 	stw	r3,4(sp)
   4a50c:	004a90c0 	call	4a90c <__umodsi3>
   4a510:	d8c00117 	ldw	r3,4(sp)
   4a514:	b00b883a 	mov	r5,r22
   4a518:	1039883a 	mov	fp,r2
   4a51c:	1809883a 	mov	r4,r3
   4a520:	004a8a80 	call	4a8a8 <__udivsi3>
   4a524:	adffffcc 	andi	r23,r21,65535
   4a528:	100b883a 	mov	r5,r2
   4a52c:	b809883a 	mov	r4,r23
   4a530:	1023883a 	mov	r17,r2
   4a534:	004a9640 	call	4a964 <__mulsi3>
   4a538:	d9400017 	ldw	r5,0(sp)
   4a53c:	e008943a 	slli	r4,fp,16
   4a540:	8520983a 	sll	r16,r16,r20
   4a544:	2806d43a 	srli	r3,r5,16
   4a548:	1906b03a 	or	r3,r3,r4
   4a54c:	1880042e 	bgeu	r3,r2,4a560 <__umoddi3+0x374>
   4a550:	1d47883a 	add	r3,r3,r21
   4a554:	893fffc4 	addi	r4,r17,-1
   4a558:	1d40892e 	bgeu	r3,r21,4a780 <__umoddi3+0x594>
   4a55c:	2023883a 	mov	r17,r4
   4a560:	18b9c83a 	sub	fp,r3,r2
   4a564:	b00b883a 	mov	r5,r22
   4a568:	e009883a 	mov	r4,fp
   4a56c:	004a90c0 	call	4a90c <__umodsi3>
   4a570:	b00b883a 	mov	r5,r22
   4a574:	e009883a 	mov	r4,fp
   4a578:	d8800215 	stw	r2,8(sp)
   4a57c:	004a8a80 	call	4a8a8 <__udivsi3>
   4a580:	100b883a 	mov	r5,r2
   4a584:	b809883a 	mov	r4,r23
   4a588:	102d883a 	mov	r22,r2
   4a58c:	004a9640 	call	4a964 <__mulsi3>
   4a590:	d9800217 	ldw	r6,8(sp)
   4a594:	d8c00017 	ldw	r3,0(sp)
   4a598:	300c943a 	slli	r6,r6,16
   4a59c:	1a3fffcc 	andi	r8,r3,65535
   4a5a0:	4190b03a 	or	r8,r8,r6
   4a5a4:	4080042e 	bgeu	r8,r2,4a5b8 <__umoddi3+0x3cc>
   4a5a8:	4551883a 	add	r8,r8,r21
   4a5ac:	b0ffffc4 	addi	r3,r22,-1
   4a5b0:	45406f2e 	bgeu	r8,r21,4a770 <__umoddi3+0x584>
   4a5b4:	182d883a 	mov	r22,r3
   4a5b8:	880e943a 	slli	r7,r17,16
   4a5bc:	9006d43a 	srli	r3,r18,16
   4a5c0:	91bfffcc 	andi	r6,r18,65535
   4a5c4:	3dacb03a 	or	r22,r7,r22
   4a5c8:	b02ed43a 	srli	r23,r22,16
   4a5cc:	b5bfffcc 	andi	r22,r22,65535
   4a5d0:	300b883a 	mov	r5,r6
   4a5d4:	b009883a 	mov	r4,r22
   4a5d8:	40a3c83a 	sub	r17,r8,r2
   4a5dc:	d8c00115 	stw	r3,4(sp)
   4a5e0:	d9800215 	stw	r6,8(sp)
   4a5e4:	004a9640 	call	4a964 <__mulsi3>
   4a5e8:	d9800217 	ldw	r6,8(sp)
   4a5ec:	b809883a 	mov	r4,r23
   4a5f0:	1039883a 	mov	fp,r2
   4a5f4:	300b883a 	mov	r5,r6
   4a5f8:	004a9640 	call	4a964 <__mulsi3>
   4a5fc:	d8c00117 	ldw	r3,4(sp)
   4a600:	b809883a 	mov	r4,r23
   4a604:	d8800215 	stw	r2,8(sp)
   4a608:	180b883a 	mov	r5,r3
   4a60c:	004a9640 	call	4a964 <__mulsi3>
   4a610:	d8c00117 	ldw	r3,4(sp)
   4a614:	b009883a 	mov	r4,r22
   4a618:	102f883a 	mov	r23,r2
   4a61c:	180b883a 	mov	r5,r3
   4a620:	004a9640 	call	4a964 <__mulsi3>
   4a624:	d9800217 	ldw	r6,8(sp)
   4a628:	e006d43a 	srli	r3,fp,16
   4a62c:	1185883a 	add	r2,r2,r6
   4a630:	1885883a 	add	r2,r3,r2
   4a634:	1180022e 	bgeu	r2,r6,4a640 <__umoddi3+0x454>
   4a638:	00c00074 	movhi	r3,1
   4a63c:	b8ef883a 	add	r23,r23,r3
   4a640:	1006d43a 	srli	r3,r2,16
   4a644:	1004943a 	slli	r2,r2,16
   4a648:	e73fffcc 	andi	fp,fp,65535
   4a64c:	1dc7883a 	add	r3,r3,r23
   4a650:	1739883a 	add	fp,r2,fp
   4a654:	88c03a36 	bltu	r17,r3,4a740 <__umoddi3+0x554>
   4a658:	88c05126 	beq	r17,r3,4a7a0 <__umoddi3+0x5b4>
   4a65c:	88c9c83a 	sub	r4,r17,r3
   4a660:	e00f883a 	mov	r7,fp
   4a664:	81cfc83a 	sub	r7,r16,r7
   4a668:	81c7803a 	cmpltu	r3,r16,r7
   4a66c:	20c7c83a 	sub	r3,r4,r3
   4a670:	1cc4983a 	sll	r2,r3,r19
   4a674:	3d0ed83a 	srl	r7,r7,r20
   4a678:	1d06d83a 	srl	r3,r3,r20
   4a67c:	11c4b03a 	or	r2,r2,r7
   4a680:	003f7c06 	br	4a474 <__alt_data_end+0xfffee0b4>
   4a684:	9ca6983a 	sll	r19,r19,r18
   4a688:	88f8d83a 	srl	fp,r17,r3
   4a68c:	80c4d83a 	srl	r2,r16,r3
   4a690:	982cd43a 	srli	r22,r19,16
   4a694:	8ca2983a 	sll	r17,r17,r18
   4a698:	e009883a 	mov	r4,fp
   4a69c:	b00b883a 	mov	r5,r22
   4a6a0:	146ab03a 	or	r21,r2,r17
   4a6a4:	004a90c0 	call	4a90c <__umodsi3>
   4a6a8:	b00b883a 	mov	r5,r22
   4a6ac:	e009883a 	mov	r4,fp
   4a6b0:	1029883a 	mov	r20,r2
   4a6b4:	9dffffcc 	andi	r23,r19,65535
   4a6b8:	004a8a80 	call	4a8a8 <__udivsi3>
   4a6bc:	b809883a 	mov	r4,r23
   4a6c0:	100b883a 	mov	r5,r2
   4a6c4:	004a9640 	call	4a964 <__mulsi3>
   4a6c8:	a008943a 	slli	r4,r20,16
   4a6cc:	a806d43a 	srli	r3,r21,16
   4a6d0:	84a8983a 	sll	r20,r16,r18
   4a6d4:	1906b03a 	or	r3,r3,r4
   4a6d8:	1880042e 	bgeu	r3,r2,4a6ec <__umoddi3+0x500>
   4a6dc:	1cc7883a 	add	r3,r3,r19
   4a6e0:	1cc00236 	bltu	r3,r19,4a6ec <__umoddi3+0x500>
   4a6e4:	1880012e 	bgeu	r3,r2,4a6ec <__umoddi3+0x500>
   4a6e8:	1cc7883a 	add	r3,r3,r19
   4a6ec:	18a3c83a 	sub	r17,r3,r2
   4a6f0:	b00b883a 	mov	r5,r22
   4a6f4:	8809883a 	mov	r4,r17
   4a6f8:	004a90c0 	call	4a90c <__umodsi3>
   4a6fc:	b00b883a 	mov	r5,r22
   4a700:	8809883a 	mov	r4,r17
   4a704:	1021883a 	mov	r16,r2
   4a708:	004a8a80 	call	4a8a8 <__udivsi3>
   4a70c:	100b883a 	mov	r5,r2
   4a710:	b809883a 	mov	r4,r23
   4a714:	8020943a 	slli	r16,r16,16
   4a718:	004a9640 	call	4a964 <__mulsi3>
   4a71c:	a8ffffcc 	andi	r3,r21,65535
   4a720:	1c06b03a 	or	r3,r3,r16
   4a724:	1880042e 	bgeu	r3,r2,4a738 <__umoddi3+0x54c>
   4a728:	1cc7883a 	add	r3,r3,r19
   4a72c:	1cc00236 	bltu	r3,r19,4a738 <__umoddi3+0x54c>
   4a730:	1880012e 	bgeu	r3,r2,4a738 <__umoddi3+0x54c>
   4a734:	1cc7883a 	add	r3,r3,r19
   4a738:	18a3c83a 	sub	r17,r3,r2
   4a73c:	003f2906 	br	4a3e4 <__alt_data_end+0xfffee024>
   4a740:	e48fc83a 	sub	r7,fp,r18
   4a744:	1d49c83a 	sub	r4,r3,r21
   4a748:	e1f9803a 	cmpltu	fp,fp,r7
   4a74c:	2739c83a 	sub	fp,r4,fp
   4a750:	8f09c83a 	sub	r4,r17,fp
   4a754:	003fc306 	br	4a664 <__alt_data_end+0xfffee2a4>
   4a758:	01000604 	movi	r4,24
   4a75c:	003ef906 	br	4a344 <__alt_data_end+0xfffedf84>
   4a760:	00800604 	movi	r2,24
   4a764:	003f1306 	br	4a3b4 <__alt_data_end+0xfffedff4>
   4a768:	01000604 	movi	r4,24
   4a76c:	003eb606 	br	4a248 <__alt_data_end+0xfffede88>
   4a770:	40bf902e 	bgeu	r8,r2,4a5b4 <__alt_data_end+0xfffee1f4>
   4a774:	b5bfff84 	addi	r22,r22,-2
   4a778:	4551883a 	add	r8,r8,r21
   4a77c:	003f8e06 	br	4a5b8 <__alt_data_end+0xfffee1f8>
   4a780:	18bf762e 	bgeu	r3,r2,4a55c <__alt_data_end+0xfffee19c>
   4a784:	8c7fff84 	addi	r17,r17,-2
   4a788:	1d47883a 	add	r3,r3,r21
   4a78c:	003f7406 	br	4a560 <__alt_data_end+0xfffee1a0>
   4a790:	1cc7883a 	add	r3,r3,r19
   4a794:	003ecd06 	br	4a2cc <__alt_data_end+0xfffedf0c>
   4a798:	8005883a 	mov	r2,r16
   4a79c:	003ef806 	br	4a380 <__alt_data_end+0xfffedfc0>
   4a7a0:	873fe736 	bltu	r16,fp,4a740 <__alt_data_end+0xfffee380>
   4a7a4:	e00f883a 	mov	r7,fp
   4a7a8:	0009883a 	mov	r4,zero
   4a7ac:	003fad06 	br	4a664 <__alt_data_end+0xfffee2a4>

0004a7b0 <__divsi3>:
   4a7b0:	20001b16 	blt	r4,zero,4a820 <__divsi3+0x70>
   4a7b4:	000f883a 	mov	r7,zero
   4a7b8:	28001616 	blt	r5,zero,4a814 <__divsi3+0x64>
   4a7bc:	200d883a 	mov	r6,r4
   4a7c0:	29001a2e 	bgeu	r5,r4,4a82c <__divsi3+0x7c>
   4a7c4:	00800804 	movi	r2,32
   4a7c8:	00c00044 	movi	r3,1
   4a7cc:	00000106 	br	4a7d4 <__divsi3+0x24>
   4a7d0:	10000d26 	beq	r2,zero,4a808 <__divsi3+0x58>
   4a7d4:	294b883a 	add	r5,r5,r5
   4a7d8:	10bfffc4 	addi	r2,r2,-1
   4a7dc:	18c7883a 	add	r3,r3,r3
   4a7e0:	293ffb36 	bltu	r5,r4,4a7d0 <__alt_data_end+0xfffee410>
   4a7e4:	0005883a 	mov	r2,zero
   4a7e8:	18000726 	beq	r3,zero,4a808 <__divsi3+0x58>
   4a7ec:	0005883a 	mov	r2,zero
   4a7f0:	31400236 	bltu	r6,r5,4a7fc <__divsi3+0x4c>
   4a7f4:	314dc83a 	sub	r6,r6,r5
   4a7f8:	10c4b03a 	or	r2,r2,r3
   4a7fc:	1806d07a 	srli	r3,r3,1
   4a800:	280ad07a 	srli	r5,r5,1
   4a804:	183ffa1e 	bne	r3,zero,4a7f0 <__alt_data_end+0xfffee430>
   4a808:	38000126 	beq	r7,zero,4a810 <__divsi3+0x60>
   4a80c:	0085c83a 	sub	r2,zero,r2
   4a810:	f800283a 	ret
   4a814:	014bc83a 	sub	r5,zero,r5
   4a818:	39c0005c 	xori	r7,r7,1
   4a81c:	003fe706 	br	4a7bc <__alt_data_end+0xfffee3fc>
   4a820:	0109c83a 	sub	r4,zero,r4
   4a824:	01c00044 	movi	r7,1
   4a828:	003fe306 	br	4a7b8 <__alt_data_end+0xfffee3f8>
   4a82c:	00c00044 	movi	r3,1
   4a830:	003fee06 	br	4a7ec <__alt_data_end+0xfffee42c>

0004a834 <__modsi3>:
   4a834:	20001716 	blt	r4,zero,4a894 <__modsi3+0x60>
   4a838:	000f883a 	mov	r7,zero
   4a83c:	2005883a 	mov	r2,r4
   4a840:	28001216 	blt	r5,zero,4a88c <__modsi3+0x58>
   4a844:	2900162e 	bgeu	r5,r4,4a8a0 <__modsi3+0x6c>
   4a848:	01800804 	movi	r6,32
   4a84c:	00c00044 	movi	r3,1
   4a850:	00000106 	br	4a858 <__modsi3+0x24>
   4a854:	30000a26 	beq	r6,zero,4a880 <__modsi3+0x4c>
   4a858:	294b883a 	add	r5,r5,r5
   4a85c:	31bfffc4 	addi	r6,r6,-1
   4a860:	18c7883a 	add	r3,r3,r3
   4a864:	293ffb36 	bltu	r5,r4,4a854 <__alt_data_end+0xfffee494>
   4a868:	18000526 	beq	r3,zero,4a880 <__modsi3+0x4c>
   4a86c:	1806d07a 	srli	r3,r3,1
   4a870:	11400136 	bltu	r2,r5,4a878 <__modsi3+0x44>
   4a874:	1145c83a 	sub	r2,r2,r5
   4a878:	280ad07a 	srli	r5,r5,1
   4a87c:	183ffb1e 	bne	r3,zero,4a86c <__alt_data_end+0xfffee4ac>
   4a880:	38000126 	beq	r7,zero,4a888 <__modsi3+0x54>
   4a884:	0085c83a 	sub	r2,zero,r2
   4a888:	f800283a 	ret
   4a88c:	014bc83a 	sub	r5,zero,r5
   4a890:	003fec06 	br	4a844 <__alt_data_end+0xfffee484>
   4a894:	0109c83a 	sub	r4,zero,r4
   4a898:	01c00044 	movi	r7,1
   4a89c:	003fe706 	br	4a83c <__alt_data_end+0xfffee47c>
   4a8a0:	00c00044 	movi	r3,1
   4a8a4:	003ff106 	br	4a86c <__alt_data_end+0xfffee4ac>

0004a8a8 <__udivsi3>:
   4a8a8:	200d883a 	mov	r6,r4
   4a8ac:	2900152e 	bgeu	r5,r4,4a904 <__udivsi3+0x5c>
   4a8b0:	28001416 	blt	r5,zero,4a904 <__udivsi3+0x5c>
   4a8b4:	00800804 	movi	r2,32
   4a8b8:	00c00044 	movi	r3,1
   4a8bc:	00000206 	br	4a8c8 <__udivsi3+0x20>
   4a8c0:	10000e26 	beq	r2,zero,4a8fc <__udivsi3+0x54>
   4a8c4:	28000516 	blt	r5,zero,4a8dc <__udivsi3+0x34>
   4a8c8:	294b883a 	add	r5,r5,r5
   4a8cc:	10bfffc4 	addi	r2,r2,-1
   4a8d0:	18c7883a 	add	r3,r3,r3
   4a8d4:	293ffa36 	bltu	r5,r4,4a8c0 <__alt_data_end+0xfffee500>
   4a8d8:	18000826 	beq	r3,zero,4a8fc <__udivsi3+0x54>
   4a8dc:	0005883a 	mov	r2,zero
   4a8e0:	31400236 	bltu	r6,r5,4a8ec <__udivsi3+0x44>
   4a8e4:	314dc83a 	sub	r6,r6,r5
   4a8e8:	10c4b03a 	or	r2,r2,r3
   4a8ec:	1806d07a 	srli	r3,r3,1
   4a8f0:	280ad07a 	srli	r5,r5,1
   4a8f4:	183ffa1e 	bne	r3,zero,4a8e0 <__alt_data_end+0xfffee520>
   4a8f8:	f800283a 	ret
   4a8fc:	0005883a 	mov	r2,zero
   4a900:	f800283a 	ret
   4a904:	00c00044 	movi	r3,1
   4a908:	003ff406 	br	4a8dc <__alt_data_end+0xfffee51c>

0004a90c <__umodsi3>:
   4a90c:	2005883a 	mov	r2,r4
   4a910:	2900122e 	bgeu	r5,r4,4a95c <__umodsi3+0x50>
   4a914:	28001116 	blt	r5,zero,4a95c <__umodsi3+0x50>
   4a918:	01800804 	movi	r6,32
   4a91c:	00c00044 	movi	r3,1
   4a920:	00000206 	br	4a92c <__umodsi3+0x20>
   4a924:	30000c26 	beq	r6,zero,4a958 <__umodsi3+0x4c>
   4a928:	28000516 	blt	r5,zero,4a940 <__umodsi3+0x34>
   4a92c:	294b883a 	add	r5,r5,r5
   4a930:	31bfffc4 	addi	r6,r6,-1
   4a934:	18c7883a 	add	r3,r3,r3
   4a938:	293ffa36 	bltu	r5,r4,4a924 <__alt_data_end+0xfffee564>
   4a93c:	18000626 	beq	r3,zero,4a958 <__umodsi3+0x4c>
   4a940:	1806d07a 	srli	r3,r3,1
   4a944:	11400136 	bltu	r2,r5,4a94c <__umodsi3+0x40>
   4a948:	1145c83a 	sub	r2,r2,r5
   4a94c:	280ad07a 	srli	r5,r5,1
   4a950:	183ffb1e 	bne	r3,zero,4a940 <__alt_data_end+0xfffee580>
   4a954:	f800283a 	ret
   4a958:	f800283a 	ret
   4a95c:	00c00044 	movi	r3,1
   4a960:	003ff706 	br	4a940 <__alt_data_end+0xfffee580>

0004a964 <__mulsi3>:
   4a964:	0005883a 	mov	r2,zero
   4a968:	20000726 	beq	r4,zero,4a988 <__mulsi3+0x24>
   4a96c:	20c0004c 	andi	r3,r4,1
   4a970:	2008d07a 	srli	r4,r4,1
   4a974:	18000126 	beq	r3,zero,4a97c <__mulsi3+0x18>
   4a978:	1145883a 	add	r2,r2,r5
   4a97c:	294b883a 	add	r5,r5,r5
   4a980:	203ffa1e 	bne	r4,zero,4a96c <__alt_data_end+0xfffee5ac>
   4a984:	f800283a 	ret
   4a988:	f800283a 	ret

0004a98c <__adddf3>:
   4a98c:	02c00434 	movhi	r11,16
   4a990:	5affffc4 	addi	r11,r11,-1
   4a994:	2806d7fa 	srli	r3,r5,31
   4a998:	2ad4703a 	and	r10,r5,r11
   4a99c:	3ad2703a 	and	r9,r7,r11
   4a9a0:	3804d53a 	srli	r2,r7,20
   4a9a4:	3018d77a 	srli	r12,r6,29
   4a9a8:	280ad53a 	srli	r5,r5,20
   4a9ac:	501490fa 	slli	r10,r10,3
   4a9b0:	2010d77a 	srli	r8,r4,29
   4a9b4:	481290fa 	slli	r9,r9,3
   4a9b8:	380ed7fa 	srli	r7,r7,31
   4a9bc:	defffb04 	addi	sp,sp,-20
   4a9c0:	dc800215 	stw	r18,8(sp)
   4a9c4:	dc400115 	stw	r17,4(sp)
   4a9c8:	dc000015 	stw	r16,0(sp)
   4a9cc:	dfc00415 	stw	ra,16(sp)
   4a9d0:	dcc00315 	stw	r19,12(sp)
   4a9d4:	1c803fcc 	andi	r18,r3,255
   4a9d8:	2c01ffcc 	andi	r16,r5,2047
   4a9dc:	5210b03a 	or	r8,r10,r8
   4a9e0:	202290fa 	slli	r17,r4,3
   4a9e4:	1081ffcc 	andi	r2,r2,2047
   4a9e8:	4b12b03a 	or	r9,r9,r12
   4a9ec:	300c90fa 	slli	r6,r6,3
   4a9f0:	91c07526 	beq	r18,r7,4abc8 <__adddf3+0x23c>
   4a9f4:	8087c83a 	sub	r3,r16,r2
   4a9f8:	00c0ab0e 	bge	zero,r3,4aca8 <__adddf3+0x31c>
   4a9fc:	10002a1e 	bne	r2,zero,4aaa8 <__adddf3+0x11c>
   4aa00:	4984b03a 	or	r2,r9,r6
   4aa04:	1000961e 	bne	r2,zero,4ac60 <__adddf3+0x2d4>
   4aa08:	888001cc 	andi	r2,r17,7
   4aa0c:	10000726 	beq	r2,zero,4aa2c <__adddf3+0xa0>
   4aa10:	888003cc 	andi	r2,r17,15
   4aa14:	00c00104 	movi	r3,4
   4aa18:	10c00426 	beq	r2,r3,4aa2c <__adddf3+0xa0>
   4aa1c:	88c7883a 	add	r3,r17,r3
   4aa20:	1c63803a 	cmpltu	r17,r3,r17
   4aa24:	4451883a 	add	r8,r8,r17
   4aa28:	1823883a 	mov	r17,r3
   4aa2c:	4080202c 	andhi	r2,r8,128
   4aa30:	10005926 	beq	r2,zero,4ab98 <__adddf3+0x20c>
   4aa34:	84000044 	addi	r16,r16,1
   4aa38:	0081ffc4 	movi	r2,2047
   4aa3c:	8080ba26 	beq	r16,r2,4ad28 <__adddf3+0x39c>
   4aa40:	00bfe034 	movhi	r2,65408
   4aa44:	10bfffc4 	addi	r2,r2,-1
   4aa48:	4090703a 	and	r8,r8,r2
   4aa4c:	4004977a 	slli	r2,r8,29
   4aa50:	4010927a 	slli	r8,r8,9
   4aa54:	8822d0fa 	srli	r17,r17,3
   4aa58:	8401ffcc 	andi	r16,r16,2047
   4aa5c:	4010d33a 	srli	r8,r8,12
   4aa60:	9007883a 	mov	r3,r18
   4aa64:	1444b03a 	or	r2,r2,r17
   4aa68:	8401ffcc 	andi	r16,r16,2047
   4aa6c:	8020953a 	slli	r16,r16,20
   4aa70:	18c03fcc 	andi	r3,r3,255
   4aa74:	01000434 	movhi	r4,16
   4aa78:	213fffc4 	addi	r4,r4,-1
   4aa7c:	180697fa 	slli	r3,r3,31
   4aa80:	4110703a 	and	r8,r8,r4
   4aa84:	4410b03a 	or	r8,r8,r16
   4aa88:	40c6b03a 	or	r3,r8,r3
   4aa8c:	dfc00417 	ldw	ra,16(sp)
   4aa90:	dcc00317 	ldw	r19,12(sp)
   4aa94:	dc800217 	ldw	r18,8(sp)
   4aa98:	dc400117 	ldw	r17,4(sp)
   4aa9c:	dc000017 	ldw	r16,0(sp)
   4aaa0:	dec00504 	addi	sp,sp,20
   4aaa4:	f800283a 	ret
   4aaa8:	0081ffc4 	movi	r2,2047
   4aaac:	80bfd626 	beq	r16,r2,4aa08 <__alt_data_end+0xfffee648>
   4aab0:	4a402034 	orhi	r9,r9,128
   4aab4:	00800e04 	movi	r2,56
   4aab8:	10c09f16 	blt	r2,r3,4ad38 <__adddf3+0x3ac>
   4aabc:	008007c4 	movi	r2,31
   4aac0:	10c0c216 	blt	r2,r3,4adcc <__adddf3+0x440>
   4aac4:	00800804 	movi	r2,32
   4aac8:	10c5c83a 	sub	r2,r2,r3
   4aacc:	488a983a 	sll	r5,r9,r2
   4aad0:	30c8d83a 	srl	r4,r6,r3
   4aad4:	3084983a 	sll	r2,r6,r2
   4aad8:	48c6d83a 	srl	r3,r9,r3
   4aadc:	290cb03a 	or	r6,r5,r4
   4aae0:	1004c03a 	cmpne	r2,r2,zero
   4aae4:	308cb03a 	or	r6,r6,r2
   4aae8:	898dc83a 	sub	r6,r17,r6
   4aaec:	89a3803a 	cmpltu	r17,r17,r6
   4aaf0:	40d1c83a 	sub	r8,r8,r3
   4aaf4:	4451c83a 	sub	r8,r8,r17
   4aaf8:	3023883a 	mov	r17,r6
   4aafc:	4080202c 	andhi	r2,r8,128
   4ab00:	10002326 	beq	r2,zero,4ab90 <__adddf3+0x204>
   4ab04:	04c02034 	movhi	r19,128
   4ab08:	9cffffc4 	addi	r19,r19,-1
   4ab0c:	44e6703a 	and	r19,r8,r19
   4ab10:	98007626 	beq	r19,zero,4acec <__adddf3+0x360>
   4ab14:	9809883a 	mov	r4,r19
   4ab18:	004d1cc0 	call	4d1cc <__clzsi2>
   4ab1c:	10fffe04 	addi	r3,r2,-8
   4ab20:	010007c4 	movi	r4,31
   4ab24:	20c07716 	blt	r4,r3,4ad04 <__adddf3+0x378>
   4ab28:	00800804 	movi	r2,32
   4ab2c:	10c5c83a 	sub	r2,r2,r3
   4ab30:	8884d83a 	srl	r2,r17,r2
   4ab34:	98d0983a 	sll	r8,r19,r3
   4ab38:	88e2983a 	sll	r17,r17,r3
   4ab3c:	1204b03a 	or	r2,r2,r8
   4ab40:	1c007416 	blt	r3,r16,4ad14 <__adddf3+0x388>
   4ab44:	1c21c83a 	sub	r16,r3,r16
   4ab48:	82000044 	addi	r8,r16,1
   4ab4c:	00c007c4 	movi	r3,31
   4ab50:	1a009116 	blt	r3,r8,4ad98 <__adddf3+0x40c>
   4ab54:	00c00804 	movi	r3,32
   4ab58:	1a07c83a 	sub	r3,r3,r8
   4ab5c:	8a08d83a 	srl	r4,r17,r8
   4ab60:	88e2983a 	sll	r17,r17,r3
   4ab64:	10c6983a 	sll	r3,r2,r3
   4ab68:	1210d83a 	srl	r8,r2,r8
   4ab6c:	8804c03a 	cmpne	r2,r17,zero
   4ab70:	1906b03a 	or	r3,r3,r4
   4ab74:	18a2b03a 	or	r17,r3,r2
   4ab78:	0021883a 	mov	r16,zero
   4ab7c:	003fa206 	br	4aa08 <__alt_data_end+0xfffee648>
   4ab80:	1890b03a 	or	r8,r3,r2
   4ab84:	40017d26 	beq	r8,zero,4b17c <__adddf3+0x7f0>
   4ab88:	1011883a 	mov	r8,r2
   4ab8c:	1823883a 	mov	r17,r3
   4ab90:	888001cc 	andi	r2,r17,7
   4ab94:	103f9e1e 	bne	r2,zero,4aa10 <__alt_data_end+0xfffee650>
   4ab98:	4004977a 	slli	r2,r8,29
   4ab9c:	8822d0fa 	srli	r17,r17,3
   4aba0:	4010d0fa 	srli	r8,r8,3
   4aba4:	9007883a 	mov	r3,r18
   4aba8:	1444b03a 	or	r2,r2,r17
   4abac:	0101ffc4 	movi	r4,2047
   4abb0:	81002426 	beq	r16,r4,4ac44 <__adddf3+0x2b8>
   4abb4:	8120703a 	and	r16,r16,r4
   4abb8:	01000434 	movhi	r4,16
   4abbc:	213fffc4 	addi	r4,r4,-1
   4abc0:	4110703a 	and	r8,r8,r4
   4abc4:	003fa806 	br	4aa68 <__alt_data_end+0xfffee6a8>
   4abc8:	8089c83a 	sub	r4,r16,r2
   4abcc:	01005e0e 	bge	zero,r4,4ad48 <__adddf3+0x3bc>
   4abd0:	10002b26 	beq	r2,zero,4ac80 <__adddf3+0x2f4>
   4abd4:	0081ffc4 	movi	r2,2047
   4abd8:	80bf8b26 	beq	r16,r2,4aa08 <__alt_data_end+0xfffee648>
   4abdc:	4a402034 	orhi	r9,r9,128
   4abe0:	00800e04 	movi	r2,56
   4abe4:	1100a40e 	bge	r2,r4,4ae78 <__adddf3+0x4ec>
   4abe8:	498cb03a 	or	r6,r9,r6
   4abec:	300ac03a 	cmpne	r5,r6,zero
   4abf0:	0013883a 	mov	r9,zero
   4abf4:	2c4b883a 	add	r5,r5,r17
   4abf8:	2c63803a 	cmpltu	r17,r5,r17
   4abfc:	4a11883a 	add	r8,r9,r8
   4ac00:	8a11883a 	add	r8,r17,r8
   4ac04:	2823883a 	mov	r17,r5
   4ac08:	4080202c 	andhi	r2,r8,128
   4ac0c:	103fe026 	beq	r2,zero,4ab90 <__alt_data_end+0xfffee7d0>
   4ac10:	84000044 	addi	r16,r16,1
   4ac14:	0081ffc4 	movi	r2,2047
   4ac18:	8080d226 	beq	r16,r2,4af64 <__adddf3+0x5d8>
   4ac1c:	00bfe034 	movhi	r2,65408
   4ac20:	10bfffc4 	addi	r2,r2,-1
   4ac24:	4090703a 	and	r8,r8,r2
   4ac28:	880ad07a 	srli	r5,r17,1
   4ac2c:	400897fa 	slli	r4,r8,31
   4ac30:	88c0004c 	andi	r3,r17,1
   4ac34:	28e2b03a 	or	r17,r5,r3
   4ac38:	4010d07a 	srli	r8,r8,1
   4ac3c:	2462b03a 	or	r17,r4,r17
   4ac40:	003f7106 	br	4aa08 <__alt_data_end+0xfffee648>
   4ac44:	4088b03a 	or	r4,r8,r2
   4ac48:	20014526 	beq	r4,zero,4b160 <__adddf3+0x7d4>
   4ac4c:	01000434 	movhi	r4,16
   4ac50:	42000234 	orhi	r8,r8,8
   4ac54:	213fffc4 	addi	r4,r4,-1
   4ac58:	4110703a 	and	r8,r8,r4
   4ac5c:	003f8206 	br	4aa68 <__alt_data_end+0xfffee6a8>
   4ac60:	18ffffc4 	addi	r3,r3,-1
   4ac64:	1800491e 	bne	r3,zero,4ad8c <__adddf3+0x400>
   4ac68:	898bc83a 	sub	r5,r17,r6
   4ac6c:	8963803a 	cmpltu	r17,r17,r5
   4ac70:	4251c83a 	sub	r8,r8,r9
   4ac74:	4451c83a 	sub	r8,r8,r17
   4ac78:	2823883a 	mov	r17,r5
   4ac7c:	003f9f06 	br	4aafc <__alt_data_end+0xfffee73c>
   4ac80:	4984b03a 	or	r2,r9,r6
   4ac84:	103f6026 	beq	r2,zero,4aa08 <__alt_data_end+0xfffee648>
   4ac88:	213fffc4 	addi	r4,r4,-1
   4ac8c:	2000931e 	bne	r4,zero,4aedc <__adddf3+0x550>
   4ac90:	898d883a 	add	r6,r17,r6
   4ac94:	3463803a 	cmpltu	r17,r6,r17
   4ac98:	4251883a 	add	r8,r8,r9
   4ac9c:	8a11883a 	add	r8,r17,r8
   4aca0:	3023883a 	mov	r17,r6
   4aca4:	003fd806 	br	4ac08 <__alt_data_end+0xfffee848>
   4aca8:	1800541e 	bne	r3,zero,4adfc <__adddf3+0x470>
   4acac:	80800044 	addi	r2,r16,1
   4acb0:	1081ffcc 	andi	r2,r2,2047
   4acb4:	00c00044 	movi	r3,1
   4acb8:	1880a00e 	bge	r3,r2,4af3c <__adddf3+0x5b0>
   4acbc:	8989c83a 	sub	r4,r17,r6
   4acc0:	8905803a 	cmpltu	r2,r17,r4
   4acc4:	4267c83a 	sub	r19,r8,r9
   4acc8:	98a7c83a 	sub	r19,r19,r2
   4accc:	9880202c 	andhi	r2,r19,128
   4acd0:	10006326 	beq	r2,zero,4ae60 <__adddf3+0x4d4>
   4acd4:	3463c83a 	sub	r17,r6,r17
   4acd8:	4a07c83a 	sub	r3,r9,r8
   4acdc:	344d803a 	cmpltu	r6,r6,r17
   4ace0:	19a7c83a 	sub	r19,r3,r6
   4ace4:	3825883a 	mov	r18,r7
   4ace8:	983f8a1e 	bne	r19,zero,4ab14 <__alt_data_end+0xfffee754>
   4acec:	8809883a 	mov	r4,r17
   4acf0:	004d1cc0 	call	4d1cc <__clzsi2>
   4acf4:	10800804 	addi	r2,r2,32
   4acf8:	10fffe04 	addi	r3,r2,-8
   4acfc:	010007c4 	movi	r4,31
   4ad00:	20ff890e 	bge	r4,r3,4ab28 <__alt_data_end+0xfffee768>
   4ad04:	10bff604 	addi	r2,r2,-40
   4ad08:	8884983a 	sll	r2,r17,r2
   4ad0c:	0023883a 	mov	r17,zero
   4ad10:	1c3f8c0e 	bge	r3,r16,4ab44 <__alt_data_end+0xfffee784>
   4ad14:	023fe034 	movhi	r8,65408
   4ad18:	423fffc4 	addi	r8,r8,-1
   4ad1c:	80e1c83a 	sub	r16,r16,r3
   4ad20:	1210703a 	and	r8,r2,r8
   4ad24:	003f3806 	br	4aa08 <__alt_data_end+0xfffee648>
   4ad28:	9007883a 	mov	r3,r18
   4ad2c:	0011883a 	mov	r8,zero
   4ad30:	0005883a 	mov	r2,zero
   4ad34:	003f4c06 	br	4aa68 <__alt_data_end+0xfffee6a8>
   4ad38:	498cb03a 	or	r6,r9,r6
   4ad3c:	300cc03a 	cmpne	r6,r6,zero
   4ad40:	0007883a 	mov	r3,zero
   4ad44:	003f6806 	br	4aae8 <__alt_data_end+0xfffee728>
   4ad48:	20009c1e 	bne	r4,zero,4afbc <__adddf3+0x630>
   4ad4c:	80800044 	addi	r2,r16,1
   4ad50:	1141ffcc 	andi	r5,r2,2047
   4ad54:	01000044 	movi	r4,1
   4ad58:	2140670e 	bge	r4,r5,4aef8 <__adddf3+0x56c>
   4ad5c:	0101ffc4 	movi	r4,2047
   4ad60:	11007f26 	beq	r2,r4,4af60 <__adddf3+0x5d4>
   4ad64:	898d883a 	add	r6,r17,r6
   4ad68:	4247883a 	add	r3,r8,r9
   4ad6c:	3451803a 	cmpltu	r8,r6,r17
   4ad70:	40d1883a 	add	r8,r8,r3
   4ad74:	402297fa 	slli	r17,r8,31
   4ad78:	300cd07a 	srli	r6,r6,1
   4ad7c:	4010d07a 	srli	r8,r8,1
   4ad80:	1021883a 	mov	r16,r2
   4ad84:	89a2b03a 	or	r17,r17,r6
   4ad88:	003f1f06 	br	4aa08 <__alt_data_end+0xfffee648>
   4ad8c:	0081ffc4 	movi	r2,2047
   4ad90:	80bf481e 	bne	r16,r2,4aab4 <__alt_data_end+0xfffee6f4>
   4ad94:	003f1c06 	br	4aa08 <__alt_data_end+0xfffee648>
   4ad98:	843ff844 	addi	r16,r16,-31
   4ad9c:	01000804 	movi	r4,32
   4ada0:	1406d83a 	srl	r3,r2,r16
   4ada4:	41005026 	beq	r8,r4,4aee8 <__adddf3+0x55c>
   4ada8:	01001004 	movi	r4,64
   4adac:	2211c83a 	sub	r8,r4,r8
   4adb0:	1204983a 	sll	r2,r2,r8
   4adb4:	88a2b03a 	or	r17,r17,r2
   4adb8:	8822c03a 	cmpne	r17,r17,zero
   4adbc:	1c62b03a 	or	r17,r3,r17
   4adc0:	0011883a 	mov	r8,zero
   4adc4:	0021883a 	mov	r16,zero
   4adc8:	003f7106 	br	4ab90 <__alt_data_end+0xfffee7d0>
   4adcc:	193ff804 	addi	r4,r3,-32
   4add0:	00800804 	movi	r2,32
   4add4:	4908d83a 	srl	r4,r9,r4
   4add8:	18804526 	beq	r3,r2,4aef0 <__adddf3+0x564>
   4addc:	00801004 	movi	r2,64
   4ade0:	10c5c83a 	sub	r2,r2,r3
   4ade4:	4886983a 	sll	r3,r9,r2
   4ade8:	198cb03a 	or	r6,r3,r6
   4adec:	300cc03a 	cmpne	r6,r6,zero
   4adf0:	218cb03a 	or	r6,r4,r6
   4adf4:	0007883a 	mov	r3,zero
   4adf8:	003f3b06 	br	4aae8 <__alt_data_end+0xfffee728>
   4adfc:	80002a26 	beq	r16,zero,4aea8 <__adddf3+0x51c>
   4ae00:	0101ffc4 	movi	r4,2047
   4ae04:	11006826 	beq	r2,r4,4afa8 <__adddf3+0x61c>
   4ae08:	00c7c83a 	sub	r3,zero,r3
   4ae0c:	42002034 	orhi	r8,r8,128
   4ae10:	01000e04 	movi	r4,56
   4ae14:	20c07c16 	blt	r4,r3,4b008 <__adddf3+0x67c>
   4ae18:	010007c4 	movi	r4,31
   4ae1c:	20c0da16 	blt	r4,r3,4b188 <__adddf3+0x7fc>
   4ae20:	01000804 	movi	r4,32
   4ae24:	20c9c83a 	sub	r4,r4,r3
   4ae28:	4114983a 	sll	r10,r8,r4
   4ae2c:	88cad83a 	srl	r5,r17,r3
   4ae30:	8908983a 	sll	r4,r17,r4
   4ae34:	40c6d83a 	srl	r3,r8,r3
   4ae38:	5162b03a 	or	r17,r10,r5
   4ae3c:	2008c03a 	cmpne	r4,r4,zero
   4ae40:	8922b03a 	or	r17,r17,r4
   4ae44:	3463c83a 	sub	r17,r6,r17
   4ae48:	48c7c83a 	sub	r3,r9,r3
   4ae4c:	344d803a 	cmpltu	r6,r6,r17
   4ae50:	1991c83a 	sub	r8,r3,r6
   4ae54:	1021883a 	mov	r16,r2
   4ae58:	3825883a 	mov	r18,r7
   4ae5c:	003f2706 	br	4aafc <__alt_data_end+0xfffee73c>
   4ae60:	24d0b03a 	or	r8,r4,r19
   4ae64:	40001b1e 	bne	r8,zero,4aed4 <__adddf3+0x548>
   4ae68:	0005883a 	mov	r2,zero
   4ae6c:	0007883a 	mov	r3,zero
   4ae70:	0021883a 	mov	r16,zero
   4ae74:	003f4d06 	br	4abac <__alt_data_end+0xfffee7ec>
   4ae78:	008007c4 	movi	r2,31
   4ae7c:	11003c16 	blt	r2,r4,4af70 <__adddf3+0x5e4>
   4ae80:	00800804 	movi	r2,32
   4ae84:	1105c83a 	sub	r2,r2,r4
   4ae88:	488e983a 	sll	r7,r9,r2
   4ae8c:	310ad83a 	srl	r5,r6,r4
   4ae90:	3084983a 	sll	r2,r6,r2
   4ae94:	4912d83a 	srl	r9,r9,r4
   4ae98:	394ab03a 	or	r5,r7,r5
   4ae9c:	1004c03a 	cmpne	r2,r2,zero
   4aea0:	288ab03a 	or	r5,r5,r2
   4aea4:	003f5306 	br	4abf4 <__alt_data_end+0xfffee834>
   4aea8:	4448b03a 	or	r4,r8,r17
   4aeac:	20003e26 	beq	r4,zero,4afa8 <__adddf3+0x61c>
   4aeb0:	00c6303a 	nor	r3,zero,r3
   4aeb4:	18003a1e 	bne	r3,zero,4afa0 <__adddf3+0x614>
   4aeb8:	3463c83a 	sub	r17,r6,r17
   4aebc:	4a07c83a 	sub	r3,r9,r8
   4aec0:	344d803a 	cmpltu	r6,r6,r17
   4aec4:	1991c83a 	sub	r8,r3,r6
   4aec8:	1021883a 	mov	r16,r2
   4aecc:	3825883a 	mov	r18,r7
   4aed0:	003f0a06 	br	4aafc <__alt_data_end+0xfffee73c>
   4aed4:	2023883a 	mov	r17,r4
   4aed8:	003f0d06 	br	4ab10 <__alt_data_end+0xfffee750>
   4aedc:	0081ffc4 	movi	r2,2047
   4aee0:	80bf3f1e 	bne	r16,r2,4abe0 <__alt_data_end+0xfffee820>
   4aee4:	003ec806 	br	4aa08 <__alt_data_end+0xfffee648>
   4aee8:	0005883a 	mov	r2,zero
   4aeec:	003fb106 	br	4adb4 <__alt_data_end+0xfffee9f4>
   4aef0:	0007883a 	mov	r3,zero
   4aef4:	003fbc06 	br	4ade8 <__alt_data_end+0xfffeea28>
   4aef8:	4444b03a 	or	r2,r8,r17
   4aefc:	8000871e 	bne	r16,zero,4b11c <__adddf3+0x790>
   4af00:	1000ba26 	beq	r2,zero,4b1ec <__adddf3+0x860>
   4af04:	4984b03a 	or	r2,r9,r6
   4af08:	103ebf26 	beq	r2,zero,4aa08 <__alt_data_end+0xfffee648>
   4af0c:	8985883a 	add	r2,r17,r6
   4af10:	4247883a 	add	r3,r8,r9
   4af14:	1451803a 	cmpltu	r8,r2,r17
   4af18:	40d1883a 	add	r8,r8,r3
   4af1c:	40c0202c 	andhi	r3,r8,128
   4af20:	1023883a 	mov	r17,r2
   4af24:	183f1a26 	beq	r3,zero,4ab90 <__alt_data_end+0xfffee7d0>
   4af28:	00bfe034 	movhi	r2,65408
   4af2c:	10bfffc4 	addi	r2,r2,-1
   4af30:	2021883a 	mov	r16,r4
   4af34:	4090703a 	and	r8,r8,r2
   4af38:	003eb306 	br	4aa08 <__alt_data_end+0xfffee648>
   4af3c:	4444b03a 	or	r2,r8,r17
   4af40:	8000291e 	bne	r16,zero,4afe8 <__adddf3+0x65c>
   4af44:	10004b1e 	bne	r2,zero,4b074 <__adddf3+0x6e8>
   4af48:	4990b03a 	or	r8,r9,r6
   4af4c:	40008b26 	beq	r8,zero,4b17c <__adddf3+0x7f0>
   4af50:	4811883a 	mov	r8,r9
   4af54:	3023883a 	mov	r17,r6
   4af58:	3825883a 	mov	r18,r7
   4af5c:	003eaa06 	br	4aa08 <__alt_data_end+0xfffee648>
   4af60:	1021883a 	mov	r16,r2
   4af64:	0011883a 	mov	r8,zero
   4af68:	0005883a 	mov	r2,zero
   4af6c:	003f0f06 	br	4abac <__alt_data_end+0xfffee7ec>
   4af70:	217ff804 	addi	r5,r4,-32
   4af74:	00800804 	movi	r2,32
   4af78:	494ad83a 	srl	r5,r9,r5
   4af7c:	20807d26 	beq	r4,r2,4b174 <__adddf3+0x7e8>
   4af80:	00801004 	movi	r2,64
   4af84:	1109c83a 	sub	r4,r2,r4
   4af88:	4912983a 	sll	r9,r9,r4
   4af8c:	498cb03a 	or	r6,r9,r6
   4af90:	300cc03a 	cmpne	r6,r6,zero
   4af94:	298ab03a 	or	r5,r5,r6
   4af98:	0013883a 	mov	r9,zero
   4af9c:	003f1506 	br	4abf4 <__alt_data_end+0xfffee834>
   4afa0:	0101ffc4 	movi	r4,2047
   4afa4:	113f9a1e 	bne	r2,r4,4ae10 <__alt_data_end+0xfffeea50>
   4afa8:	4811883a 	mov	r8,r9
   4afac:	3023883a 	mov	r17,r6
   4afb0:	1021883a 	mov	r16,r2
   4afb4:	3825883a 	mov	r18,r7
   4afb8:	003e9306 	br	4aa08 <__alt_data_end+0xfffee648>
   4afbc:	8000161e 	bne	r16,zero,4b018 <__adddf3+0x68c>
   4afc0:	444ab03a 	or	r5,r8,r17
   4afc4:	28005126 	beq	r5,zero,4b10c <__adddf3+0x780>
   4afc8:	0108303a 	nor	r4,zero,r4
   4afcc:	20004d1e 	bne	r4,zero,4b104 <__adddf3+0x778>
   4afd0:	89a3883a 	add	r17,r17,r6
   4afd4:	4253883a 	add	r9,r8,r9
   4afd8:	898d803a 	cmpltu	r6,r17,r6
   4afdc:	3251883a 	add	r8,r6,r9
   4afe0:	1021883a 	mov	r16,r2
   4afe4:	003f0806 	br	4ac08 <__alt_data_end+0xfffee848>
   4afe8:	1000301e 	bne	r2,zero,4b0ac <__adddf3+0x720>
   4afec:	4984b03a 	or	r2,r9,r6
   4aff0:	10007126 	beq	r2,zero,4b1b8 <__adddf3+0x82c>
   4aff4:	4811883a 	mov	r8,r9
   4aff8:	3023883a 	mov	r17,r6
   4affc:	3825883a 	mov	r18,r7
   4b000:	0401ffc4 	movi	r16,2047
   4b004:	003e8006 	br	4aa08 <__alt_data_end+0xfffee648>
   4b008:	4462b03a 	or	r17,r8,r17
   4b00c:	8822c03a 	cmpne	r17,r17,zero
   4b010:	0007883a 	mov	r3,zero
   4b014:	003f8b06 	br	4ae44 <__alt_data_end+0xfffeea84>
   4b018:	0141ffc4 	movi	r5,2047
   4b01c:	11403b26 	beq	r2,r5,4b10c <__adddf3+0x780>
   4b020:	0109c83a 	sub	r4,zero,r4
   4b024:	42002034 	orhi	r8,r8,128
   4b028:	01400e04 	movi	r5,56
   4b02c:	29006716 	blt	r5,r4,4b1cc <__adddf3+0x840>
   4b030:	014007c4 	movi	r5,31
   4b034:	29007016 	blt	r5,r4,4b1f8 <__adddf3+0x86c>
   4b038:	01400804 	movi	r5,32
   4b03c:	290bc83a 	sub	r5,r5,r4
   4b040:	4154983a 	sll	r10,r8,r5
   4b044:	890ed83a 	srl	r7,r17,r4
   4b048:	894a983a 	sll	r5,r17,r5
   4b04c:	4108d83a 	srl	r4,r8,r4
   4b050:	51e2b03a 	or	r17,r10,r7
   4b054:	280ac03a 	cmpne	r5,r5,zero
   4b058:	8962b03a 	or	r17,r17,r5
   4b05c:	89a3883a 	add	r17,r17,r6
   4b060:	2253883a 	add	r9,r4,r9
   4b064:	898d803a 	cmpltu	r6,r17,r6
   4b068:	3251883a 	add	r8,r6,r9
   4b06c:	1021883a 	mov	r16,r2
   4b070:	003ee506 	br	4ac08 <__alt_data_end+0xfffee848>
   4b074:	4984b03a 	or	r2,r9,r6
   4b078:	103e6326 	beq	r2,zero,4aa08 <__alt_data_end+0xfffee648>
   4b07c:	8987c83a 	sub	r3,r17,r6
   4b080:	88c9803a 	cmpltu	r4,r17,r3
   4b084:	4245c83a 	sub	r2,r8,r9
   4b088:	1105c83a 	sub	r2,r2,r4
   4b08c:	1100202c 	andhi	r4,r2,128
   4b090:	203ebb26 	beq	r4,zero,4ab80 <__alt_data_end+0xfffee7c0>
   4b094:	3463c83a 	sub	r17,r6,r17
   4b098:	4a07c83a 	sub	r3,r9,r8
   4b09c:	344d803a 	cmpltu	r6,r6,r17
   4b0a0:	1991c83a 	sub	r8,r3,r6
   4b0a4:	3825883a 	mov	r18,r7
   4b0a8:	003e5706 	br	4aa08 <__alt_data_end+0xfffee648>
   4b0ac:	4984b03a 	or	r2,r9,r6
   4b0b0:	10002e26 	beq	r2,zero,4b16c <__adddf3+0x7e0>
   4b0b4:	4004d0fa 	srli	r2,r8,3
   4b0b8:	8822d0fa 	srli	r17,r17,3
   4b0bc:	4010977a 	slli	r8,r8,29
   4b0c0:	10c0022c 	andhi	r3,r2,8
   4b0c4:	4462b03a 	or	r17,r8,r17
   4b0c8:	18000826 	beq	r3,zero,4b0ec <__adddf3+0x760>
   4b0cc:	4808d0fa 	srli	r4,r9,3
   4b0d0:	20c0022c 	andhi	r3,r4,8
   4b0d4:	1800051e 	bne	r3,zero,4b0ec <__adddf3+0x760>
   4b0d8:	300cd0fa 	srli	r6,r6,3
   4b0dc:	4806977a 	slli	r3,r9,29
   4b0e0:	2005883a 	mov	r2,r4
   4b0e4:	3825883a 	mov	r18,r7
   4b0e8:	19a2b03a 	or	r17,r3,r6
   4b0ec:	8810d77a 	srli	r8,r17,29
   4b0f0:	100490fa 	slli	r2,r2,3
   4b0f4:	882290fa 	slli	r17,r17,3
   4b0f8:	0401ffc4 	movi	r16,2047
   4b0fc:	4090b03a 	or	r8,r8,r2
   4b100:	003e4106 	br	4aa08 <__alt_data_end+0xfffee648>
   4b104:	0141ffc4 	movi	r5,2047
   4b108:	117fc71e 	bne	r2,r5,4b028 <__alt_data_end+0xfffeec68>
   4b10c:	4811883a 	mov	r8,r9
   4b110:	3023883a 	mov	r17,r6
   4b114:	1021883a 	mov	r16,r2
   4b118:	003e3b06 	br	4aa08 <__alt_data_end+0xfffee648>
   4b11c:	10002f26 	beq	r2,zero,4b1dc <__adddf3+0x850>
   4b120:	4984b03a 	or	r2,r9,r6
   4b124:	10001126 	beq	r2,zero,4b16c <__adddf3+0x7e0>
   4b128:	4004d0fa 	srli	r2,r8,3
   4b12c:	8822d0fa 	srli	r17,r17,3
   4b130:	4010977a 	slli	r8,r8,29
   4b134:	10c0022c 	andhi	r3,r2,8
   4b138:	4462b03a 	or	r17,r8,r17
   4b13c:	183feb26 	beq	r3,zero,4b0ec <__alt_data_end+0xfffeed2c>
   4b140:	4808d0fa 	srli	r4,r9,3
   4b144:	20c0022c 	andhi	r3,r4,8
   4b148:	183fe81e 	bne	r3,zero,4b0ec <__alt_data_end+0xfffeed2c>
   4b14c:	300cd0fa 	srli	r6,r6,3
   4b150:	4806977a 	slli	r3,r9,29
   4b154:	2005883a 	mov	r2,r4
   4b158:	19a2b03a 	or	r17,r3,r6
   4b15c:	003fe306 	br	4b0ec <__alt_data_end+0xfffeed2c>
   4b160:	0011883a 	mov	r8,zero
   4b164:	0005883a 	mov	r2,zero
   4b168:	003e3f06 	br	4aa68 <__alt_data_end+0xfffee6a8>
   4b16c:	0401ffc4 	movi	r16,2047
   4b170:	003e2506 	br	4aa08 <__alt_data_end+0xfffee648>
   4b174:	0013883a 	mov	r9,zero
   4b178:	003f8406 	br	4af8c <__alt_data_end+0xfffeebcc>
   4b17c:	0005883a 	mov	r2,zero
   4b180:	0007883a 	mov	r3,zero
   4b184:	003e8906 	br	4abac <__alt_data_end+0xfffee7ec>
   4b188:	197ff804 	addi	r5,r3,-32
   4b18c:	01000804 	movi	r4,32
   4b190:	414ad83a 	srl	r5,r8,r5
   4b194:	19002426 	beq	r3,r4,4b228 <__adddf3+0x89c>
   4b198:	01001004 	movi	r4,64
   4b19c:	20c7c83a 	sub	r3,r4,r3
   4b1a0:	40c6983a 	sll	r3,r8,r3
   4b1a4:	1c46b03a 	or	r3,r3,r17
   4b1a8:	1806c03a 	cmpne	r3,r3,zero
   4b1ac:	28e2b03a 	or	r17,r5,r3
   4b1b0:	0007883a 	mov	r3,zero
   4b1b4:	003f2306 	br	4ae44 <__alt_data_end+0xfffeea84>
   4b1b8:	0007883a 	mov	r3,zero
   4b1bc:	5811883a 	mov	r8,r11
   4b1c0:	00bfffc4 	movi	r2,-1
   4b1c4:	0401ffc4 	movi	r16,2047
   4b1c8:	003e7806 	br	4abac <__alt_data_end+0xfffee7ec>
   4b1cc:	4462b03a 	or	r17,r8,r17
   4b1d0:	8822c03a 	cmpne	r17,r17,zero
   4b1d4:	0009883a 	mov	r4,zero
   4b1d8:	003fa006 	br	4b05c <__alt_data_end+0xfffeec9c>
   4b1dc:	4811883a 	mov	r8,r9
   4b1e0:	3023883a 	mov	r17,r6
   4b1e4:	0401ffc4 	movi	r16,2047
   4b1e8:	003e0706 	br	4aa08 <__alt_data_end+0xfffee648>
   4b1ec:	4811883a 	mov	r8,r9
   4b1f0:	3023883a 	mov	r17,r6
   4b1f4:	003e0406 	br	4aa08 <__alt_data_end+0xfffee648>
   4b1f8:	21fff804 	addi	r7,r4,-32
   4b1fc:	01400804 	movi	r5,32
   4b200:	41ced83a 	srl	r7,r8,r7
   4b204:	21400a26 	beq	r4,r5,4b230 <__adddf3+0x8a4>
   4b208:	01401004 	movi	r5,64
   4b20c:	2909c83a 	sub	r4,r5,r4
   4b210:	4108983a 	sll	r4,r8,r4
   4b214:	2448b03a 	or	r4,r4,r17
   4b218:	2008c03a 	cmpne	r4,r4,zero
   4b21c:	3922b03a 	or	r17,r7,r4
   4b220:	0009883a 	mov	r4,zero
   4b224:	003f8d06 	br	4b05c <__alt_data_end+0xfffeec9c>
   4b228:	0007883a 	mov	r3,zero
   4b22c:	003fdd06 	br	4b1a4 <__alt_data_end+0xfffeede4>
   4b230:	0009883a 	mov	r4,zero
   4b234:	003ff706 	br	4b214 <__alt_data_end+0xfffeee54>

0004b238 <__divdf3>:
   4b238:	defff004 	addi	sp,sp,-64
   4b23c:	dc800815 	stw	r18,32(sp)
   4b240:	2824d53a 	srli	r18,r5,20
   4b244:	dd800c15 	stw	r22,48(sp)
   4b248:	282cd7fa 	srli	r22,r5,31
   4b24c:	dc000615 	stw	r16,24(sp)
   4b250:	04000434 	movhi	r16,16
   4b254:	843fffc4 	addi	r16,r16,-1
   4b258:	dfc00f15 	stw	ra,60(sp)
   4b25c:	df000e15 	stw	fp,56(sp)
   4b260:	ddc00d15 	stw	r23,52(sp)
   4b264:	dd400b15 	stw	r21,44(sp)
   4b268:	dd000a15 	stw	r20,40(sp)
   4b26c:	dcc00915 	stw	r19,36(sp)
   4b270:	dc400715 	stw	r17,28(sp)
   4b274:	9481ffcc 	andi	r18,r18,2047
   4b278:	2c20703a 	and	r16,r5,r16
   4b27c:	b2003fcc 	andi	r8,r22,255
   4b280:	90006126 	beq	r18,zero,4b408 <__divdf3+0x1d0>
   4b284:	0081ffc4 	movi	r2,2047
   4b288:	202b883a 	mov	r21,r4
   4b28c:	90803726 	beq	r18,r2,4b36c <__divdf3+0x134>
   4b290:	80800434 	orhi	r2,r16,16
   4b294:	100490fa 	slli	r2,r2,3
   4b298:	2020d77a 	srli	r16,r4,29
   4b29c:	202a90fa 	slli	r21,r4,3
   4b2a0:	94bf0044 	addi	r18,r18,-1023
   4b2a4:	80a0b03a 	or	r16,r16,r2
   4b2a8:	0013883a 	mov	r9,zero
   4b2ac:	000b883a 	mov	r5,zero
   4b2b0:	3806d53a 	srli	r3,r7,20
   4b2b4:	382ed7fa 	srli	r23,r7,31
   4b2b8:	04400434 	movhi	r17,16
   4b2bc:	8c7fffc4 	addi	r17,r17,-1
   4b2c0:	18c1ffcc 	andi	r3,r3,2047
   4b2c4:	3029883a 	mov	r20,r6
   4b2c8:	3c62703a 	and	r17,r7,r17
   4b2cc:	bf003fcc 	andi	fp,r23,255
   4b2d0:	18006e26 	beq	r3,zero,4b48c <__divdf3+0x254>
   4b2d4:	0081ffc4 	movi	r2,2047
   4b2d8:	18806626 	beq	r3,r2,4b474 <__divdf3+0x23c>
   4b2dc:	88800434 	orhi	r2,r17,16
   4b2e0:	100490fa 	slli	r2,r2,3
   4b2e4:	3022d77a 	srli	r17,r6,29
   4b2e8:	302890fa 	slli	r20,r6,3
   4b2ec:	18ff0044 	addi	r3,r3,-1023
   4b2f0:	88a2b03a 	or	r17,r17,r2
   4b2f4:	000f883a 	mov	r7,zero
   4b2f8:	b5e6f03a 	xor	r19,r22,r23
   4b2fc:	3a4cb03a 	or	r6,r7,r9
   4b300:	008003c4 	movi	r2,15
   4b304:	9809883a 	mov	r4,r19
   4b308:	90c7c83a 	sub	r3,r18,r3
   4b30c:	9cc03fcc 	andi	r19,r19,255
   4b310:	11809636 	bltu	r2,r6,4b56c <__divdf3+0x334>
   4b314:	300c90ba 	slli	r6,r6,2
   4b318:	00800174 	movhi	r2,5
   4b31c:	10accb04 	addi	r2,r2,-19668
   4b320:	308d883a 	add	r6,r6,r2
   4b324:	30800017 	ldw	r2,0(r6)
   4b328:	1000683a 	jmp	r2
   4b32c:	0004b56c 	andhi	zero,zero,4821
   4b330:	0004b3a4 	muli	zero,zero,4814
   4b334:	0004b55c 	xori	zero,zero,4821
   4b338:	0004b398 	cmpnei	zero,zero,4814
   4b33c:	0004b55c 	xori	zero,zero,4821
   4b340:	0004b530 	cmpltui	zero,zero,4820
   4b344:	0004b55c 	xori	zero,zero,4821
   4b348:	0004b398 	cmpnei	zero,zero,4814
   4b34c:	0004b3a4 	muli	zero,zero,4814
   4b350:	0004b3a4 	muli	zero,zero,4814
   4b354:	0004b530 	cmpltui	zero,zero,4820
   4b358:	0004b398 	cmpnei	zero,zero,4814
   4b35c:	0004b388 	cmpgei	zero,zero,4814
   4b360:	0004b388 	cmpgei	zero,zero,4814
   4b364:	0004b388 	cmpgei	zero,zero,4814
   4b368:	0004b8f4 	movhi	zero,4835
   4b36c:	2404b03a 	or	r2,r4,r16
   4b370:	10006c1e 	bne	r2,zero,4b524 <__divdf3+0x2ec>
   4b374:	02400204 	movi	r9,8
   4b378:	0021883a 	mov	r16,zero
   4b37c:	002b883a 	mov	r21,zero
   4b380:	01400084 	movi	r5,2
   4b384:	003fca06 	br	4b2b0 <__alt_data_end+0xfffeeef0>
   4b388:	8023883a 	mov	r17,r16
   4b38c:	a829883a 	mov	r20,r21
   4b390:	4039883a 	mov	fp,r8
   4b394:	280f883a 	mov	r7,r5
   4b398:	00800084 	movi	r2,2
   4b39c:	3881601e 	bne	r7,r2,4b920 <__divdf3+0x6e8>
   4b3a0:	e027883a 	mov	r19,fp
   4b3a4:	9900004c 	andi	r4,r19,1
   4b3a8:	0081ffc4 	movi	r2,2047
   4b3ac:	0021883a 	mov	r16,zero
   4b3b0:	002b883a 	mov	r21,zero
   4b3b4:	1004953a 	slli	r2,r2,20
   4b3b8:	20c03fcc 	andi	r3,r4,255
   4b3bc:	01400434 	movhi	r5,16
   4b3c0:	297fffc4 	addi	r5,r5,-1
   4b3c4:	180697fa 	slli	r3,r3,31
   4b3c8:	8160703a 	and	r16,r16,r5
   4b3cc:	80a0b03a 	or	r16,r16,r2
   4b3d0:	80c6b03a 	or	r3,r16,r3
   4b3d4:	a805883a 	mov	r2,r21
   4b3d8:	dfc00f17 	ldw	ra,60(sp)
   4b3dc:	df000e17 	ldw	fp,56(sp)
   4b3e0:	ddc00d17 	ldw	r23,52(sp)
   4b3e4:	dd800c17 	ldw	r22,48(sp)
   4b3e8:	dd400b17 	ldw	r21,44(sp)
   4b3ec:	dd000a17 	ldw	r20,40(sp)
   4b3f0:	dcc00917 	ldw	r19,36(sp)
   4b3f4:	dc800817 	ldw	r18,32(sp)
   4b3f8:	dc400717 	ldw	r17,28(sp)
   4b3fc:	dc000617 	ldw	r16,24(sp)
   4b400:	dec01004 	addi	sp,sp,64
   4b404:	f800283a 	ret
   4b408:	2404b03a 	or	r2,r4,r16
   4b40c:	2023883a 	mov	r17,r4
   4b410:	10003f26 	beq	r2,zero,4b510 <__divdf3+0x2d8>
   4b414:	80015e26 	beq	r16,zero,4b990 <__divdf3+0x758>
   4b418:	8009883a 	mov	r4,r16
   4b41c:	d9800215 	stw	r6,8(sp)
   4b420:	d9c00515 	stw	r7,20(sp)
   4b424:	da000415 	stw	r8,16(sp)
   4b428:	004d1cc0 	call	4d1cc <__clzsi2>
   4b42c:	d9800217 	ldw	r6,8(sp)
   4b430:	d9c00517 	ldw	r7,20(sp)
   4b434:	da000417 	ldw	r8,16(sp)
   4b438:	113ffd44 	addi	r4,r2,-11
   4b43c:	00c00704 	movi	r3,28
   4b440:	19014f16 	blt	r3,r4,4b980 <__divdf3+0x748>
   4b444:	00c00744 	movi	r3,29
   4b448:	157ffe04 	addi	r21,r2,-8
   4b44c:	1907c83a 	sub	r3,r3,r4
   4b450:	8560983a 	sll	r16,r16,r21
   4b454:	88c6d83a 	srl	r3,r17,r3
   4b458:	8d6a983a 	sll	r21,r17,r21
   4b45c:	1c20b03a 	or	r16,r3,r16
   4b460:	1080fcc4 	addi	r2,r2,1011
   4b464:	00a5c83a 	sub	r18,zero,r2
   4b468:	0013883a 	mov	r9,zero
   4b46c:	000b883a 	mov	r5,zero
   4b470:	003f8f06 	br	4b2b0 <__alt_data_end+0xfffeeef0>
   4b474:	3444b03a 	or	r2,r6,r17
   4b478:	1000231e 	bne	r2,zero,4b508 <__divdf3+0x2d0>
   4b47c:	0023883a 	mov	r17,zero
   4b480:	0029883a 	mov	r20,zero
   4b484:	01c00084 	movi	r7,2
   4b488:	003f9b06 	br	4b2f8 <__alt_data_end+0xfffeef38>
   4b48c:	3444b03a 	or	r2,r6,r17
   4b490:	10001926 	beq	r2,zero,4b4f8 <__divdf3+0x2c0>
   4b494:	88014b26 	beq	r17,zero,4b9c4 <__divdf3+0x78c>
   4b498:	8809883a 	mov	r4,r17
   4b49c:	d9400115 	stw	r5,4(sp)
   4b4a0:	d9800215 	stw	r6,8(sp)
   4b4a4:	da000415 	stw	r8,16(sp)
   4b4a8:	da400315 	stw	r9,12(sp)
   4b4ac:	004d1cc0 	call	4d1cc <__clzsi2>
   4b4b0:	d9400117 	ldw	r5,4(sp)
   4b4b4:	d9800217 	ldw	r6,8(sp)
   4b4b8:	da000417 	ldw	r8,16(sp)
   4b4bc:	da400317 	ldw	r9,12(sp)
   4b4c0:	113ffd44 	addi	r4,r2,-11
   4b4c4:	00c00704 	movi	r3,28
   4b4c8:	19013a16 	blt	r3,r4,4b9b4 <__divdf3+0x77c>
   4b4cc:	00c00744 	movi	r3,29
   4b4d0:	153ffe04 	addi	r20,r2,-8
   4b4d4:	1907c83a 	sub	r3,r3,r4
   4b4d8:	8d22983a 	sll	r17,r17,r20
   4b4dc:	30c6d83a 	srl	r3,r6,r3
   4b4e0:	3528983a 	sll	r20,r6,r20
   4b4e4:	1c62b03a 	or	r17,r3,r17
   4b4e8:	1080fcc4 	addi	r2,r2,1011
   4b4ec:	0087c83a 	sub	r3,zero,r2
   4b4f0:	000f883a 	mov	r7,zero
   4b4f4:	003f8006 	br	4b2f8 <__alt_data_end+0xfffeef38>
   4b4f8:	0023883a 	mov	r17,zero
   4b4fc:	0029883a 	mov	r20,zero
   4b500:	01c00044 	movi	r7,1
   4b504:	003f7c06 	br	4b2f8 <__alt_data_end+0xfffeef38>
   4b508:	01c000c4 	movi	r7,3
   4b50c:	003f7a06 	br	4b2f8 <__alt_data_end+0xfffeef38>
   4b510:	02400104 	movi	r9,4
   4b514:	0021883a 	mov	r16,zero
   4b518:	002b883a 	mov	r21,zero
   4b51c:	01400044 	movi	r5,1
   4b520:	003f6306 	br	4b2b0 <__alt_data_end+0xfffeeef0>
   4b524:	02400304 	movi	r9,12
   4b528:	014000c4 	movi	r5,3
   4b52c:	003f6006 	br	4b2b0 <__alt_data_end+0xfffeeef0>
   4b530:	04000434 	movhi	r16,16
   4b534:	0009883a 	mov	r4,zero
   4b538:	843fffc4 	addi	r16,r16,-1
   4b53c:	057fffc4 	movi	r21,-1
   4b540:	0081ffc4 	movi	r2,2047
   4b544:	003f9b06 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4b548:	00c00044 	movi	r3,1
   4b54c:	1887c83a 	sub	r3,r3,r2
   4b550:	01000e04 	movi	r4,56
   4b554:	20c1530e 	bge	r4,r3,4baa4 <__divdf3+0x86c>
   4b558:	9900004c 	andi	r4,r19,1
   4b55c:	0005883a 	mov	r2,zero
   4b560:	0021883a 	mov	r16,zero
   4b564:	002b883a 	mov	r21,zero
   4b568:	003f9206 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4b56c:	8c012e36 	bltu	r17,r16,4ba28 <__divdf3+0x7f0>
   4b570:	84412c26 	beq	r16,r17,4ba24 <__divdf3+0x7ec>
   4b574:	a82f883a 	mov	r23,r21
   4b578:	18ffffc4 	addi	r3,r3,-1
   4b57c:	002b883a 	mov	r21,zero
   4b580:	a004d63a 	srli	r2,r20,24
   4b584:	8822923a 	slli	r17,r17,8
   4b588:	a028923a 	slli	r20,r20,8
   4b58c:	8009883a 	mov	r4,r16
   4b590:	88acb03a 	or	r22,r17,r2
   4b594:	dd000015 	stw	r20,0(sp)
   4b598:	b028d43a 	srli	r20,r22,16
   4b59c:	d8c00215 	stw	r3,8(sp)
   4b5a0:	b4bfffcc 	andi	r18,r22,65535
   4b5a4:	a00b883a 	mov	r5,r20
   4b5a8:	004a8a80 	call	4a8a8 <__udivsi3>
   4b5ac:	100b883a 	mov	r5,r2
   4b5b0:	9009883a 	mov	r4,r18
   4b5b4:	1023883a 	mov	r17,r2
   4b5b8:	004a9640 	call	4a964 <__mulsi3>
   4b5bc:	8009883a 	mov	r4,r16
   4b5c0:	a00b883a 	mov	r5,r20
   4b5c4:	1039883a 	mov	fp,r2
   4b5c8:	004a90c0 	call	4a90c <__umodsi3>
   4b5cc:	1004943a 	slli	r2,r2,16
   4b5d0:	b808d43a 	srli	r4,r23,16
   4b5d4:	d8c00217 	ldw	r3,8(sp)
   4b5d8:	2084b03a 	or	r2,r4,r2
   4b5dc:	1700062e 	bgeu	r2,fp,4b5f8 <__divdf3+0x3c0>
   4b5e0:	1585883a 	add	r2,r2,r22
   4b5e4:	893fffc4 	addi	r4,r17,-1
   4b5e8:	15811d36 	bltu	r2,r22,4ba60 <__divdf3+0x828>
   4b5ec:	17011c2e 	bgeu	r2,fp,4ba60 <__divdf3+0x828>
   4b5f0:	8c7fff84 	addi	r17,r17,-2
   4b5f4:	1585883a 	add	r2,r2,r22
   4b5f8:	1739c83a 	sub	fp,r2,fp
   4b5fc:	a00b883a 	mov	r5,r20
   4b600:	e009883a 	mov	r4,fp
   4b604:	d8c00215 	stw	r3,8(sp)
   4b608:	004a8a80 	call	4a8a8 <__udivsi3>
   4b60c:	100b883a 	mov	r5,r2
   4b610:	9009883a 	mov	r4,r18
   4b614:	1021883a 	mov	r16,r2
   4b618:	004a9640 	call	4a964 <__mulsi3>
   4b61c:	a00b883a 	mov	r5,r20
   4b620:	e009883a 	mov	r4,fp
   4b624:	d8800415 	stw	r2,16(sp)
   4b628:	004a90c0 	call	4a90c <__umodsi3>
   4b62c:	1004943a 	slli	r2,r2,16
   4b630:	da000417 	ldw	r8,16(sp)
   4b634:	bdffffcc 	andi	r23,r23,65535
   4b638:	b884b03a 	or	r2,r23,r2
   4b63c:	d8c00217 	ldw	r3,8(sp)
   4b640:	1200062e 	bgeu	r2,r8,4b65c <__divdf3+0x424>
   4b644:	1585883a 	add	r2,r2,r22
   4b648:	813fffc4 	addi	r4,r16,-1
   4b64c:	15810236 	bltu	r2,r22,4ba58 <__divdf3+0x820>
   4b650:	1201012e 	bgeu	r2,r8,4ba58 <__divdf3+0x820>
   4b654:	843fff84 	addi	r16,r16,-2
   4b658:	1585883a 	add	r2,r2,r22
   4b65c:	8822943a 	slli	r17,r17,16
   4b660:	d9800017 	ldw	r6,0(sp)
   4b664:	1211c83a 	sub	r8,r2,r8
   4b668:	8c22b03a 	or	r17,r17,r16
   4b66c:	373fffcc 	andi	fp,r6,65535
   4b670:	8abfffcc 	andi	r10,r17,65535
   4b674:	8820d43a 	srli	r16,r17,16
   4b678:	5009883a 	mov	r4,r10
   4b67c:	e00b883a 	mov	r5,fp
   4b680:	302ed43a 	srli	r23,r6,16
   4b684:	d8c00215 	stw	r3,8(sp)
   4b688:	da000415 	stw	r8,16(sp)
   4b68c:	da800115 	stw	r10,4(sp)
   4b690:	004a9640 	call	4a964 <__mulsi3>
   4b694:	800b883a 	mov	r5,r16
   4b698:	e009883a 	mov	r4,fp
   4b69c:	d8800515 	stw	r2,20(sp)
   4b6a0:	004a9640 	call	4a964 <__mulsi3>
   4b6a4:	8009883a 	mov	r4,r16
   4b6a8:	b80b883a 	mov	r5,r23
   4b6ac:	d8800315 	stw	r2,12(sp)
   4b6b0:	004a9640 	call	4a964 <__mulsi3>
   4b6b4:	da800117 	ldw	r10,4(sp)
   4b6b8:	b80b883a 	mov	r5,r23
   4b6bc:	1021883a 	mov	r16,r2
   4b6c0:	5009883a 	mov	r4,r10
   4b6c4:	004a9640 	call	4a964 <__mulsi3>
   4b6c8:	d9c00517 	ldw	r7,20(sp)
   4b6cc:	da400317 	ldw	r9,12(sp)
   4b6d0:	d8c00217 	ldw	r3,8(sp)
   4b6d4:	3808d43a 	srli	r4,r7,16
   4b6d8:	1245883a 	add	r2,r2,r9
   4b6dc:	da000417 	ldw	r8,16(sp)
   4b6e0:	2085883a 	add	r2,r4,r2
   4b6e4:	1240022e 	bgeu	r2,r9,4b6f0 <__divdf3+0x4b8>
   4b6e8:	01000074 	movhi	r4,1
   4b6ec:	8121883a 	add	r16,r16,r4
   4b6f0:	1008d43a 	srli	r4,r2,16
   4b6f4:	1004943a 	slli	r2,r2,16
   4b6f8:	39ffffcc 	andi	r7,r7,65535
   4b6fc:	2409883a 	add	r4,r4,r16
   4b700:	11c5883a 	add	r2,r2,r7
   4b704:	4100bb36 	bltu	r8,r4,4b9f4 <__divdf3+0x7bc>
   4b708:	4100d726 	beq	r8,r4,4ba68 <__divdf3+0x830>
   4b70c:	4109c83a 	sub	r4,r8,r4
   4b710:	a8a1c83a 	sub	r16,r21,r2
   4b714:	ac2b803a 	cmpltu	r21,r21,r16
   4b718:	256bc83a 	sub	r21,r4,r21
   4b71c:	b540d926 	beq	r22,r21,4ba84 <__divdf3+0x84c>
   4b720:	a00b883a 	mov	r5,r20
   4b724:	a809883a 	mov	r4,r21
   4b728:	d8c00215 	stw	r3,8(sp)
   4b72c:	004a8a80 	call	4a8a8 <__udivsi3>
   4b730:	100b883a 	mov	r5,r2
   4b734:	9009883a 	mov	r4,r18
   4b738:	d8800515 	stw	r2,20(sp)
   4b73c:	004a9640 	call	4a964 <__mulsi3>
   4b740:	a809883a 	mov	r4,r21
   4b744:	a00b883a 	mov	r5,r20
   4b748:	d8800415 	stw	r2,16(sp)
   4b74c:	004a90c0 	call	4a90c <__umodsi3>
   4b750:	1004943a 	slli	r2,r2,16
   4b754:	8008d43a 	srli	r4,r16,16
   4b758:	da000417 	ldw	r8,16(sp)
   4b75c:	d8c00217 	ldw	r3,8(sp)
   4b760:	2084b03a 	or	r2,r4,r2
   4b764:	d9c00517 	ldw	r7,20(sp)
   4b768:	1200062e 	bgeu	r2,r8,4b784 <__divdf3+0x54c>
   4b76c:	1585883a 	add	r2,r2,r22
   4b770:	393fffc4 	addi	r4,r7,-1
   4b774:	1580c536 	bltu	r2,r22,4ba8c <__divdf3+0x854>
   4b778:	1200c42e 	bgeu	r2,r8,4ba8c <__divdf3+0x854>
   4b77c:	39ffff84 	addi	r7,r7,-2
   4b780:	1585883a 	add	r2,r2,r22
   4b784:	122bc83a 	sub	r21,r2,r8
   4b788:	a00b883a 	mov	r5,r20
   4b78c:	a809883a 	mov	r4,r21
   4b790:	d8c00215 	stw	r3,8(sp)
   4b794:	d9c00515 	stw	r7,20(sp)
   4b798:	004a8a80 	call	4a8a8 <__udivsi3>
   4b79c:	9009883a 	mov	r4,r18
   4b7a0:	100b883a 	mov	r5,r2
   4b7a4:	d8800415 	stw	r2,16(sp)
   4b7a8:	004a9640 	call	4a964 <__mulsi3>
   4b7ac:	a809883a 	mov	r4,r21
   4b7b0:	a00b883a 	mov	r5,r20
   4b7b4:	1025883a 	mov	r18,r2
   4b7b8:	004a90c0 	call	4a90c <__umodsi3>
   4b7bc:	1004943a 	slli	r2,r2,16
   4b7c0:	813fffcc 	andi	r4,r16,65535
   4b7c4:	d8c00217 	ldw	r3,8(sp)
   4b7c8:	20a0b03a 	or	r16,r4,r2
   4b7cc:	d9c00517 	ldw	r7,20(sp)
   4b7d0:	da000417 	ldw	r8,16(sp)
   4b7d4:	8480062e 	bgeu	r16,r18,4b7f0 <__divdf3+0x5b8>
   4b7d8:	85a1883a 	add	r16,r16,r22
   4b7dc:	40bfffc4 	addi	r2,r8,-1
   4b7e0:	8580ac36 	bltu	r16,r22,4ba94 <__divdf3+0x85c>
   4b7e4:	8480ab2e 	bgeu	r16,r18,4ba94 <__divdf3+0x85c>
   4b7e8:	423fff84 	addi	r8,r8,-2
   4b7ec:	85a1883a 	add	r16,r16,r22
   4b7f0:	3804943a 	slli	r2,r7,16
   4b7f4:	84a1c83a 	sub	r16,r16,r18
   4b7f8:	e009883a 	mov	r4,fp
   4b7fc:	1228b03a 	or	r20,r2,r8
   4b800:	a1ffffcc 	andi	r7,r20,65535
   4b804:	a024d43a 	srli	r18,r20,16
   4b808:	380b883a 	mov	r5,r7
   4b80c:	d8c00215 	stw	r3,8(sp)
   4b810:	d9c00515 	stw	r7,20(sp)
   4b814:	004a9640 	call	4a964 <__mulsi3>
   4b818:	900b883a 	mov	r5,r18
   4b81c:	e009883a 	mov	r4,fp
   4b820:	102b883a 	mov	r21,r2
   4b824:	004a9640 	call	4a964 <__mulsi3>
   4b828:	900b883a 	mov	r5,r18
   4b82c:	b809883a 	mov	r4,r23
   4b830:	1039883a 	mov	fp,r2
   4b834:	004a9640 	call	4a964 <__mulsi3>
   4b838:	d9c00517 	ldw	r7,20(sp)
   4b83c:	b80b883a 	mov	r5,r23
   4b840:	1025883a 	mov	r18,r2
   4b844:	3809883a 	mov	r4,r7
   4b848:	004a9640 	call	4a964 <__mulsi3>
   4b84c:	a808d43a 	srli	r4,r21,16
   4b850:	1705883a 	add	r2,r2,fp
   4b854:	d8c00217 	ldw	r3,8(sp)
   4b858:	2085883a 	add	r2,r4,r2
   4b85c:	1700022e 	bgeu	r2,fp,4b868 <__divdf3+0x630>
   4b860:	01000074 	movhi	r4,1
   4b864:	9125883a 	add	r18,r18,r4
   4b868:	1008d43a 	srli	r4,r2,16
   4b86c:	1004943a 	slli	r2,r2,16
   4b870:	ad7fffcc 	andi	r21,r21,65535
   4b874:	2489883a 	add	r4,r4,r18
   4b878:	1545883a 	add	r2,r2,r21
   4b87c:	81003836 	bltu	r16,r4,4b960 <__divdf3+0x728>
   4b880:	81003626 	beq	r16,r4,4b95c <__divdf3+0x724>
   4b884:	a5000054 	ori	r20,r20,1
   4b888:	1880ffc4 	addi	r2,r3,1023
   4b88c:	00bf2e0e 	bge	zero,r2,4b548 <__alt_data_end+0xfffef188>
   4b890:	a10001cc 	andi	r4,r20,7
   4b894:	20000726 	beq	r4,zero,4b8b4 <__divdf3+0x67c>
   4b898:	a10003cc 	andi	r4,r20,15
   4b89c:	01400104 	movi	r5,4
   4b8a0:	21400426 	beq	r4,r5,4b8b4 <__divdf3+0x67c>
   4b8a4:	a149883a 	add	r4,r20,r5
   4b8a8:	2529803a 	cmpltu	r20,r4,r20
   4b8ac:	8d23883a 	add	r17,r17,r20
   4b8b0:	2029883a 	mov	r20,r4
   4b8b4:	8900402c 	andhi	r4,r17,256
   4b8b8:	20000426 	beq	r4,zero,4b8cc <__divdf3+0x694>
   4b8bc:	18810004 	addi	r2,r3,1024
   4b8c0:	00ffc034 	movhi	r3,65280
   4b8c4:	18ffffc4 	addi	r3,r3,-1
   4b8c8:	88e2703a 	and	r17,r17,r3
   4b8cc:	00c1ff84 	movi	r3,2046
   4b8d0:	18beb416 	blt	r3,r2,4b3a4 <__alt_data_end+0xfffeefe4>
   4b8d4:	a028d0fa 	srli	r20,r20,3
   4b8d8:	882a977a 	slli	r21,r17,29
   4b8dc:	8820927a 	slli	r16,r17,9
   4b8e0:	1081ffcc 	andi	r2,r2,2047
   4b8e4:	ad2ab03a 	or	r21,r21,r20
   4b8e8:	8020d33a 	srli	r16,r16,12
   4b8ec:	9900004c 	andi	r4,r19,1
   4b8f0:	003eb006 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4b8f4:	8080022c 	andhi	r2,r16,8
   4b8f8:	10001226 	beq	r2,zero,4b944 <__divdf3+0x70c>
   4b8fc:	8880022c 	andhi	r2,r17,8
   4b900:	1000101e 	bne	r2,zero,4b944 <__divdf3+0x70c>
   4b904:	00800434 	movhi	r2,16
   4b908:	8c000234 	orhi	r16,r17,8
   4b90c:	10bfffc4 	addi	r2,r2,-1
   4b910:	b809883a 	mov	r4,r23
   4b914:	80a0703a 	and	r16,r16,r2
   4b918:	a02b883a 	mov	r21,r20
   4b91c:	003f0806 	br	4b540 <__alt_data_end+0xfffef180>
   4b920:	008000c4 	movi	r2,3
   4b924:	3880b126 	beq	r7,r2,4bbec <__divdf3+0x9b4>
   4b928:	00800044 	movi	r2,1
   4b92c:	38805b1e 	bne	r7,r2,4ba9c <__divdf3+0x864>
   4b930:	e009883a 	mov	r4,fp
   4b934:	0005883a 	mov	r2,zero
   4b938:	0021883a 	mov	r16,zero
   4b93c:	002b883a 	mov	r21,zero
   4b940:	003e9c06 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4b944:	00800434 	movhi	r2,16
   4b948:	84000234 	orhi	r16,r16,8
   4b94c:	10bfffc4 	addi	r2,r2,-1
   4b950:	b009883a 	mov	r4,r22
   4b954:	80a0703a 	and	r16,r16,r2
   4b958:	003ef906 	br	4b540 <__alt_data_end+0xfffef180>
   4b95c:	103fca26 	beq	r2,zero,4b888 <__alt_data_end+0xfffef4c8>
   4b960:	b421883a 	add	r16,r22,r16
   4b964:	a17fffc4 	addi	r5,r20,-1
   4b968:	8580422e 	bgeu	r16,r22,4ba74 <__divdf3+0x83c>
   4b96c:	2829883a 	mov	r20,r5
   4b970:	813fc41e 	bne	r16,r4,4b884 <__alt_data_end+0xfffef4c4>
   4b974:	d9800017 	ldw	r6,0(sp)
   4b978:	30bfc21e 	bne	r6,r2,4b884 <__alt_data_end+0xfffef4c4>
   4b97c:	003fc206 	br	4b888 <__alt_data_end+0xfffef4c8>
   4b980:	143ff604 	addi	r16,r2,-40
   4b984:	8c20983a 	sll	r16,r17,r16
   4b988:	002b883a 	mov	r21,zero
   4b98c:	003eb406 	br	4b460 <__alt_data_end+0xfffef0a0>
   4b990:	d9800215 	stw	r6,8(sp)
   4b994:	d9c00515 	stw	r7,20(sp)
   4b998:	da000415 	stw	r8,16(sp)
   4b99c:	004d1cc0 	call	4d1cc <__clzsi2>
   4b9a0:	10800804 	addi	r2,r2,32
   4b9a4:	da000417 	ldw	r8,16(sp)
   4b9a8:	d9c00517 	ldw	r7,20(sp)
   4b9ac:	d9800217 	ldw	r6,8(sp)
   4b9b0:	003ea106 	br	4b438 <__alt_data_end+0xfffef078>
   4b9b4:	147ff604 	addi	r17,r2,-40
   4b9b8:	3462983a 	sll	r17,r6,r17
   4b9bc:	0029883a 	mov	r20,zero
   4b9c0:	003ec906 	br	4b4e8 <__alt_data_end+0xfffef128>
   4b9c4:	3009883a 	mov	r4,r6
   4b9c8:	d9400115 	stw	r5,4(sp)
   4b9cc:	d9800215 	stw	r6,8(sp)
   4b9d0:	da000415 	stw	r8,16(sp)
   4b9d4:	da400315 	stw	r9,12(sp)
   4b9d8:	004d1cc0 	call	4d1cc <__clzsi2>
   4b9dc:	10800804 	addi	r2,r2,32
   4b9e0:	da400317 	ldw	r9,12(sp)
   4b9e4:	da000417 	ldw	r8,16(sp)
   4b9e8:	d9800217 	ldw	r6,8(sp)
   4b9ec:	d9400117 	ldw	r5,4(sp)
   4b9f0:	003eb306 	br	4b4c0 <__alt_data_end+0xfffef100>
   4b9f4:	d9800017 	ldw	r6,0(sp)
   4b9f8:	a9ab883a 	add	r21,r21,r6
   4b9fc:	a98b803a 	cmpltu	r5,r21,r6
   4ba00:	2d8b883a 	add	r5,r5,r22
   4ba04:	2a11883a 	add	r8,r5,r8
   4ba08:	897fffc4 	addi	r5,r17,-1
   4ba0c:	b2000c2e 	bgeu	r22,r8,4ba40 <__divdf3+0x808>
   4ba10:	41003f36 	bltu	r8,r4,4bb10 <__divdf3+0x8d8>
   4ba14:	22006c26 	beq	r4,r8,4bbc8 <__divdf3+0x990>
   4ba18:	4109c83a 	sub	r4,r8,r4
   4ba1c:	2823883a 	mov	r17,r5
   4ba20:	003f3b06 	br	4b710 <__alt_data_end+0xfffef350>
   4ba24:	ad3ed336 	bltu	r21,r20,4b574 <__alt_data_end+0xfffef1b4>
   4ba28:	a804d07a 	srli	r2,r21,1
   4ba2c:	802e97fa 	slli	r23,r16,31
   4ba30:	a82a97fa 	slli	r21,r21,31
   4ba34:	8020d07a 	srli	r16,r16,1
   4ba38:	b8aeb03a 	or	r23,r23,r2
   4ba3c:	003ed006 	br	4b580 <__alt_data_end+0xfffef1c0>
   4ba40:	b23ff51e 	bne	r22,r8,4ba18 <__alt_data_end+0xfffef658>
   4ba44:	d9800017 	ldw	r6,0(sp)
   4ba48:	a9bff12e 	bgeu	r21,r6,4ba10 <__alt_data_end+0xfffef650>
   4ba4c:	b109c83a 	sub	r4,r22,r4
   4ba50:	2823883a 	mov	r17,r5
   4ba54:	003f2e06 	br	4b710 <__alt_data_end+0xfffef350>
   4ba58:	2021883a 	mov	r16,r4
   4ba5c:	003eff06 	br	4b65c <__alt_data_end+0xfffef29c>
   4ba60:	2023883a 	mov	r17,r4
   4ba64:	003ee406 	br	4b5f8 <__alt_data_end+0xfffef238>
   4ba68:	a8bfe236 	bltu	r21,r2,4b9f4 <__alt_data_end+0xfffef634>
   4ba6c:	0009883a 	mov	r4,zero
   4ba70:	003f2706 	br	4b710 <__alt_data_end+0xfffef350>
   4ba74:	81002d36 	bltu	r16,r4,4bb2c <__divdf3+0x8f4>
   4ba78:	24005626 	beq	r4,r16,4bbd4 <__divdf3+0x99c>
   4ba7c:	2829883a 	mov	r20,r5
   4ba80:	003f8006 	br	4b884 <__alt_data_end+0xfffef4c4>
   4ba84:	053fffc4 	movi	r20,-1
   4ba88:	003f7f06 	br	4b888 <__alt_data_end+0xfffef4c8>
   4ba8c:	200f883a 	mov	r7,r4
   4ba90:	003f3c06 	br	4b784 <__alt_data_end+0xfffef3c4>
   4ba94:	1011883a 	mov	r8,r2
   4ba98:	003f5506 	br	4b7f0 <__alt_data_end+0xfffef430>
   4ba9c:	e027883a 	mov	r19,fp
   4baa0:	003f7906 	br	4b888 <__alt_data_end+0xfffef4c8>
   4baa4:	010007c4 	movi	r4,31
   4baa8:	20c02816 	blt	r4,r3,4bb4c <__divdf3+0x914>
   4baac:	00800804 	movi	r2,32
   4bab0:	10c5c83a 	sub	r2,r2,r3
   4bab4:	888a983a 	sll	r5,r17,r2
   4bab8:	a0c8d83a 	srl	r4,r20,r3
   4babc:	a084983a 	sll	r2,r20,r2
   4bac0:	88e2d83a 	srl	r17,r17,r3
   4bac4:	2906b03a 	or	r3,r5,r4
   4bac8:	1004c03a 	cmpne	r2,r2,zero
   4bacc:	1886b03a 	or	r3,r3,r2
   4bad0:	188001cc 	andi	r2,r3,7
   4bad4:	10000726 	beq	r2,zero,4baf4 <__divdf3+0x8bc>
   4bad8:	188003cc 	andi	r2,r3,15
   4badc:	01000104 	movi	r4,4
   4bae0:	11000426 	beq	r2,r4,4baf4 <__divdf3+0x8bc>
   4bae4:	1805883a 	mov	r2,r3
   4bae8:	10c00104 	addi	r3,r2,4
   4baec:	1885803a 	cmpltu	r2,r3,r2
   4baf0:	88a3883a 	add	r17,r17,r2
   4baf4:	8880202c 	andhi	r2,r17,128
   4baf8:	10002926 	beq	r2,zero,4bba0 <__divdf3+0x968>
   4bafc:	9900004c 	andi	r4,r19,1
   4bb00:	00800044 	movi	r2,1
   4bb04:	0021883a 	mov	r16,zero
   4bb08:	002b883a 	mov	r21,zero
   4bb0c:	003e2906 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4bb10:	d9800017 	ldw	r6,0(sp)
   4bb14:	8c7fff84 	addi	r17,r17,-2
   4bb18:	a9ab883a 	add	r21,r21,r6
   4bb1c:	a98b803a 	cmpltu	r5,r21,r6
   4bb20:	2d8b883a 	add	r5,r5,r22
   4bb24:	2a11883a 	add	r8,r5,r8
   4bb28:	003ef806 	br	4b70c <__alt_data_end+0xfffef34c>
   4bb2c:	d9800017 	ldw	r6,0(sp)
   4bb30:	318f883a 	add	r7,r6,r6
   4bb34:	398b803a 	cmpltu	r5,r7,r6
   4bb38:	2d8d883a 	add	r6,r5,r22
   4bb3c:	81a1883a 	add	r16,r16,r6
   4bb40:	a17fff84 	addi	r5,r20,-2
   4bb44:	d9c00015 	stw	r7,0(sp)
   4bb48:	003f8806 	br	4b96c <__alt_data_end+0xfffef5ac>
   4bb4c:	013ff844 	movi	r4,-31
   4bb50:	2085c83a 	sub	r2,r4,r2
   4bb54:	8888d83a 	srl	r4,r17,r2
   4bb58:	00800804 	movi	r2,32
   4bb5c:	18802126 	beq	r3,r2,4bbe4 <__divdf3+0x9ac>
   4bb60:	04001004 	movi	r16,64
   4bb64:	80c7c83a 	sub	r3,r16,r3
   4bb68:	88e0983a 	sll	r16,r17,r3
   4bb6c:	8504b03a 	or	r2,r16,r20
   4bb70:	1004c03a 	cmpne	r2,r2,zero
   4bb74:	2084b03a 	or	r2,r4,r2
   4bb78:	144001cc 	andi	r17,r2,7
   4bb7c:	88000d1e 	bne	r17,zero,4bbb4 <__divdf3+0x97c>
   4bb80:	0021883a 	mov	r16,zero
   4bb84:	102ad0fa 	srli	r21,r2,3
   4bb88:	9900004c 	andi	r4,r19,1
   4bb8c:	0005883a 	mov	r2,zero
   4bb90:	ac6ab03a 	or	r21,r21,r17
   4bb94:	003e0706 	br	4b3b4 <__alt_data_end+0xfffeeff4>
   4bb98:	1007883a 	mov	r3,r2
   4bb9c:	0023883a 	mov	r17,zero
   4bba0:	8820927a 	slli	r16,r17,9
   4bba4:	1805883a 	mov	r2,r3
   4bba8:	8822977a 	slli	r17,r17,29
   4bbac:	8020d33a 	srli	r16,r16,12
   4bbb0:	003ff406 	br	4bb84 <__alt_data_end+0xfffef7c4>
   4bbb4:	10c003cc 	andi	r3,r2,15
   4bbb8:	01000104 	movi	r4,4
   4bbbc:	193ff626 	beq	r3,r4,4bb98 <__alt_data_end+0xfffef7d8>
   4bbc0:	0023883a 	mov	r17,zero
   4bbc4:	003fc806 	br	4bae8 <__alt_data_end+0xfffef728>
   4bbc8:	a8bfd136 	bltu	r21,r2,4bb10 <__alt_data_end+0xfffef750>
   4bbcc:	2823883a 	mov	r17,r5
   4bbd0:	003fa606 	br	4ba6c <__alt_data_end+0xfffef6ac>
   4bbd4:	d9800017 	ldw	r6,0(sp)
   4bbd8:	30bfd436 	bltu	r6,r2,4bb2c <__alt_data_end+0xfffef76c>
   4bbdc:	2829883a 	mov	r20,r5
   4bbe0:	003f6406 	br	4b974 <__alt_data_end+0xfffef5b4>
   4bbe4:	0021883a 	mov	r16,zero
   4bbe8:	003fe006 	br	4bb6c <__alt_data_end+0xfffef7ac>
   4bbec:	00800434 	movhi	r2,16
   4bbf0:	8c000234 	orhi	r16,r17,8
   4bbf4:	10bfffc4 	addi	r2,r2,-1
   4bbf8:	e009883a 	mov	r4,fp
   4bbfc:	80a0703a 	and	r16,r16,r2
   4bc00:	a02b883a 	mov	r21,r20
   4bc04:	003e4e06 	br	4b540 <__alt_data_end+0xfffef180>

0004bc08 <__eqdf2>:
   4bc08:	2804d53a 	srli	r2,r5,20
   4bc0c:	3806d53a 	srli	r3,r7,20
   4bc10:	02000434 	movhi	r8,16
   4bc14:	423fffc4 	addi	r8,r8,-1
   4bc18:	1081ffcc 	andi	r2,r2,2047
   4bc1c:	0281ffc4 	movi	r10,2047
   4bc20:	2a12703a 	and	r9,r5,r8
   4bc24:	18c1ffcc 	andi	r3,r3,2047
   4bc28:	3a10703a 	and	r8,r7,r8
   4bc2c:	280ad7fa 	srli	r5,r5,31
   4bc30:	380ed7fa 	srli	r7,r7,31
   4bc34:	12801026 	beq	r2,r10,4bc78 <__eqdf2+0x70>
   4bc38:	0281ffc4 	movi	r10,2047
   4bc3c:	1a800a26 	beq	r3,r10,4bc68 <__eqdf2+0x60>
   4bc40:	10c00226 	beq	r2,r3,4bc4c <__eqdf2+0x44>
   4bc44:	00800044 	movi	r2,1
   4bc48:	f800283a 	ret
   4bc4c:	4a3ffd1e 	bne	r9,r8,4bc44 <__alt_data_end+0xfffef884>
   4bc50:	21bffc1e 	bne	r4,r6,4bc44 <__alt_data_end+0xfffef884>
   4bc54:	29c00c26 	beq	r5,r7,4bc88 <__eqdf2+0x80>
   4bc58:	103ffa1e 	bne	r2,zero,4bc44 <__alt_data_end+0xfffef884>
   4bc5c:	2244b03a 	or	r2,r4,r9
   4bc60:	1004c03a 	cmpne	r2,r2,zero
   4bc64:	f800283a 	ret
   4bc68:	3214b03a 	or	r10,r6,r8
   4bc6c:	503ff426 	beq	r10,zero,4bc40 <__alt_data_end+0xfffef880>
   4bc70:	00800044 	movi	r2,1
   4bc74:	f800283a 	ret
   4bc78:	2254b03a 	or	r10,r4,r9
   4bc7c:	503fee26 	beq	r10,zero,4bc38 <__alt_data_end+0xfffef878>
   4bc80:	00800044 	movi	r2,1
   4bc84:	f800283a 	ret
   4bc88:	0005883a 	mov	r2,zero
   4bc8c:	f800283a 	ret

0004bc90 <__gedf2>:
   4bc90:	2804d53a 	srli	r2,r5,20
   4bc94:	3806d53a 	srli	r3,r7,20
   4bc98:	02000434 	movhi	r8,16
   4bc9c:	423fffc4 	addi	r8,r8,-1
   4bca0:	1081ffcc 	andi	r2,r2,2047
   4bca4:	0241ffc4 	movi	r9,2047
   4bca8:	2a14703a 	and	r10,r5,r8
   4bcac:	18c1ffcc 	andi	r3,r3,2047
   4bcb0:	3a10703a 	and	r8,r7,r8
   4bcb4:	280ad7fa 	srli	r5,r5,31
   4bcb8:	380ed7fa 	srli	r7,r7,31
   4bcbc:	12401d26 	beq	r2,r9,4bd34 <__gedf2+0xa4>
   4bcc0:	0241ffc4 	movi	r9,2047
   4bcc4:	1a401226 	beq	r3,r9,4bd10 <__gedf2+0x80>
   4bcc8:	1000081e 	bne	r2,zero,4bcec <__gedf2+0x5c>
   4bccc:	2296b03a 	or	r11,r4,r10
   4bcd0:	5813003a 	cmpeq	r9,r11,zero
   4bcd4:	1800091e 	bne	r3,zero,4bcfc <__gedf2+0x6c>
   4bcd8:	3218b03a 	or	r12,r6,r8
   4bcdc:	6000071e 	bne	r12,zero,4bcfc <__gedf2+0x6c>
   4bce0:	0005883a 	mov	r2,zero
   4bce4:	5800101e 	bne	r11,zero,4bd28 <__gedf2+0x98>
   4bce8:	f800283a 	ret
   4bcec:	18000c1e 	bne	r3,zero,4bd20 <__gedf2+0x90>
   4bcf0:	3212b03a 	or	r9,r6,r8
   4bcf4:	48000c26 	beq	r9,zero,4bd28 <__gedf2+0x98>
   4bcf8:	0013883a 	mov	r9,zero
   4bcfc:	39c03fcc 	andi	r7,r7,255
   4bd00:	48000826 	beq	r9,zero,4bd24 <__gedf2+0x94>
   4bd04:	38000926 	beq	r7,zero,4bd2c <__gedf2+0x9c>
   4bd08:	00800044 	movi	r2,1
   4bd0c:	f800283a 	ret
   4bd10:	3212b03a 	or	r9,r6,r8
   4bd14:	483fec26 	beq	r9,zero,4bcc8 <__alt_data_end+0xfffef908>
   4bd18:	00bfff84 	movi	r2,-2
   4bd1c:	f800283a 	ret
   4bd20:	39c03fcc 	andi	r7,r7,255
   4bd24:	29c00626 	beq	r5,r7,4bd40 <__gedf2+0xb0>
   4bd28:	283ff726 	beq	r5,zero,4bd08 <__alt_data_end+0xfffef948>
   4bd2c:	00bfffc4 	movi	r2,-1
   4bd30:	f800283a 	ret
   4bd34:	2292b03a 	or	r9,r4,r10
   4bd38:	483fe126 	beq	r9,zero,4bcc0 <__alt_data_end+0xfffef900>
   4bd3c:	003ff606 	br	4bd18 <__alt_data_end+0xfffef958>
   4bd40:	18bff916 	blt	r3,r2,4bd28 <__alt_data_end+0xfffef968>
   4bd44:	10c00316 	blt	r2,r3,4bd54 <__gedf2+0xc4>
   4bd48:	42bff736 	bltu	r8,r10,4bd28 <__alt_data_end+0xfffef968>
   4bd4c:	52000326 	beq	r10,r8,4bd5c <__gedf2+0xcc>
   4bd50:	5200042e 	bgeu	r10,r8,4bd64 <__gedf2+0xd4>
   4bd54:	283fec1e 	bne	r5,zero,4bd08 <__alt_data_end+0xfffef948>
   4bd58:	003ff406 	br	4bd2c <__alt_data_end+0xfffef96c>
   4bd5c:	313ff236 	bltu	r6,r4,4bd28 <__alt_data_end+0xfffef968>
   4bd60:	21bffc36 	bltu	r4,r6,4bd54 <__alt_data_end+0xfffef994>
   4bd64:	0005883a 	mov	r2,zero
   4bd68:	f800283a 	ret

0004bd6c <__ledf2>:
   4bd6c:	2804d53a 	srli	r2,r5,20
   4bd70:	3810d53a 	srli	r8,r7,20
   4bd74:	00c00434 	movhi	r3,16
   4bd78:	18ffffc4 	addi	r3,r3,-1
   4bd7c:	1081ffcc 	andi	r2,r2,2047
   4bd80:	0241ffc4 	movi	r9,2047
   4bd84:	28d4703a 	and	r10,r5,r3
   4bd88:	4201ffcc 	andi	r8,r8,2047
   4bd8c:	38c6703a 	and	r3,r7,r3
   4bd90:	280ad7fa 	srli	r5,r5,31
   4bd94:	380ed7fa 	srli	r7,r7,31
   4bd98:	12401f26 	beq	r2,r9,4be18 <__ledf2+0xac>
   4bd9c:	0241ffc4 	movi	r9,2047
   4bda0:	42401426 	beq	r8,r9,4bdf4 <__ledf2+0x88>
   4bda4:	1000091e 	bne	r2,zero,4bdcc <__ledf2+0x60>
   4bda8:	2296b03a 	or	r11,r4,r10
   4bdac:	5813003a 	cmpeq	r9,r11,zero
   4bdb0:	29403fcc 	andi	r5,r5,255
   4bdb4:	40000a1e 	bne	r8,zero,4bde0 <__ledf2+0x74>
   4bdb8:	30d8b03a 	or	r12,r6,r3
   4bdbc:	6000081e 	bne	r12,zero,4bde0 <__ledf2+0x74>
   4bdc0:	0005883a 	mov	r2,zero
   4bdc4:	5800111e 	bne	r11,zero,4be0c <__ledf2+0xa0>
   4bdc8:	f800283a 	ret
   4bdcc:	29403fcc 	andi	r5,r5,255
   4bdd0:	40000c1e 	bne	r8,zero,4be04 <__ledf2+0x98>
   4bdd4:	30d2b03a 	or	r9,r6,r3
   4bdd8:	48000c26 	beq	r9,zero,4be0c <__ledf2+0xa0>
   4bddc:	0013883a 	mov	r9,zero
   4bde0:	39c03fcc 	andi	r7,r7,255
   4bde4:	48000826 	beq	r9,zero,4be08 <__ledf2+0x9c>
   4bde8:	38001126 	beq	r7,zero,4be30 <__ledf2+0xc4>
   4bdec:	00800044 	movi	r2,1
   4bdf0:	f800283a 	ret
   4bdf4:	30d2b03a 	or	r9,r6,r3
   4bdf8:	483fea26 	beq	r9,zero,4bda4 <__alt_data_end+0xfffef9e4>
   4bdfc:	00800084 	movi	r2,2
   4be00:	f800283a 	ret
   4be04:	39c03fcc 	andi	r7,r7,255
   4be08:	39400726 	beq	r7,r5,4be28 <__ledf2+0xbc>
   4be0c:	2800081e 	bne	r5,zero,4be30 <__ledf2+0xc4>
   4be10:	00800044 	movi	r2,1
   4be14:	f800283a 	ret
   4be18:	2292b03a 	or	r9,r4,r10
   4be1c:	483fdf26 	beq	r9,zero,4bd9c <__alt_data_end+0xfffef9dc>
   4be20:	00800084 	movi	r2,2
   4be24:	f800283a 	ret
   4be28:	4080030e 	bge	r8,r2,4be38 <__ledf2+0xcc>
   4be2c:	383fef26 	beq	r7,zero,4bdec <__alt_data_end+0xfffefa2c>
   4be30:	00bfffc4 	movi	r2,-1
   4be34:	f800283a 	ret
   4be38:	123feb16 	blt	r2,r8,4bde8 <__alt_data_end+0xfffefa28>
   4be3c:	1abff336 	bltu	r3,r10,4be0c <__alt_data_end+0xfffefa4c>
   4be40:	50c00326 	beq	r10,r3,4be50 <__ledf2+0xe4>
   4be44:	50c0042e 	bgeu	r10,r3,4be58 <__ledf2+0xec>
   4be48:	283fe81e 	bne	r5,zero,4bdec <__alt_data_end+0xfffefa2c>
   4be4c:	003ff806 	br	4be30 <__alt_data_end+0xfffefa70>
   4be50:	313fee36 	bltu	r6,r4,4be0c <__alt_data_end+0xfffefa4c>
   4be54:	21bffc36 	bltu	r4,r6,4be48 <__alt_data_end+0xfffefa88>
   4be58:	0005883a 	mov	r2,zero
   4be5c:	f800283a 	ret

0004be60 <__muldf3>:
   4be60:	deffee04 	addi	sp,sp,-72
   4be64:	dd000c15 	stw	r20,48(sp)
   4be68:	2828d53a 	srli	r20,r5,20
   4be6c:	ddc00f15 	stw	r23,60(sp)
   4be70:	282ed7fa 	srli	r23,r5,31
   4be74:	dc000815 	stw	r16,32(sp)
   4be78:	04000434 	movhi	r16,16
   4be7c:	dcc00b15 	stw	r19,44(sp)
   4be80:	843fffc4 	addi	r16,r16,-1
   4be84:	dfc01115 	stw	ra,68(sp)
   4be88:	df001015 	stw	fp,64(sp)
   4be8c:	dd800e15 	stw	r22,56(sp)
   4be90:	dd400d15 	stw	r21,52(sp)
   4be94:	dc800a15 	stw	r18,40(sp)
   4be98:	dc400915 	stw	r17,36(sp)
   4be9c:	a501ffcc 	andi	r20,r20,2047
   4bea0:	2c20703a 	and	r16,r5,r16
   4bea4:	b827883a 	mov	r19,r23
   4bea8:	ba403fcc 	andi	r9,r23,255
   4beac:	a0006026 	beq	r20,zero,4c030 <__muldf3+0x1d0>
   4beb0:	0081ffc4 	movi	r2,2047
   4beb4:	202d883a 	mov	r22,r4
   4beb8:	a0803626 	beq	r20,r2,4bf94 <__muldf3+0x134>
   4bebc:	84000434 	orhi	r16,r16,16
   4bec0:	200ad77a 	srli	r5,r4,29
   4bec4:	800490fa 	slli	r2,r16,3
   4bec8:	202c90fa 	slli	r22,r4,3
   4becc:	a53f0044 	addi	r20,r20,-1023
   4bed0:	28a0b03a 	or	r16,r5,r2
   4bed4:	002b883a 	mov	r21,zero
   4bed8:	000b883a 	mov	r5,zero
   4bedc:	3804d53a 	srli	r2,r7,20
   4bee0:	3838d7fa 	srli	fp,r7,31
   4bee4:	04400434 	movhi	r17,16
   4bee8:	8c7fffc4 	addi	r17,r17,-1
   4beec:	1081ffcc 	andi	r2,r2,2047
   4bef0:	3025883a 	mov	r18,r6
   4bef4:	3c62703a 	and	r17,r7,r17
   4bef8:	e2803fcc 	andi	r10,fp,255
   4befc:	10006d26 	beq	r2,zero,4c0b4 <__muldf3+0x254>
   4bf00:	00c1ffc4 	movi	r3,2047
   4bf04:	10c06526 	beq	r2,r3,4c09c <__muldf3+0x23c>
   4bf08:	8c400434 	orhi	r17,r17,16
   4bf0c:	300ed77a 	srli	r7,r6,29
   4bf10:	880690fa 	slli	r3,r17,3
   4bf14:	302490fa 	slli	r18,r6,3
   4bf18:	10bf0044 	addi	r2,r2,-1023
   4bf1c:	38e2b03a 	or	r17,r7,r3
   4bf20:	000f883a 	mov	r7,zero
   4bf24:	a087883a 	add	r3,r20,r2
   4bf28:	010003c4 	movi	r4,15
   4bf2c:	3d44b03a 	or	r2,r7,r21
   4bf30:	e5ccf03a 	xor	r6,fp,r23
   4bf34:	1a000044 	addi	r8,r3,1
   4bf38:	20809b36 	bltu	r4,r2,4c1a8 <__muldf3+0x348>
   4bf3c:	100490ba 	slli	r2,r2,2
   4bf40:	01000174 	movhi	r4,5
   4bf44:	212fd504 	addi	r4,r4,-16556
   4bf48:	1105883a 	add	r2,r2,r4
   4bf4c:	10800017 	ldw	r2,0(r2)
   4bf50:	1000683a 	jmp	r2
   4bf54:	0004c1a8 	cmpgeui	zero,zero,4870
   4bf58:	0004bfb4 	movhi	zero,4862
   4bf5c:	0004bfb4 	movhi	zero,4862
   4bf60:	0004bfb0 	cmpltui	zero,zero,4862
   4bf64:	0004c184 	movi	zero,4870
   4bf68:	0004c184 	movi	zero,4870
   4bf6c:	0004c16c 	andhi	zero,zero,4869
   4bf70:	0004bfb0 	cmpltui	zero,zero,4862
   4bf74:	0004c184 	movi	zero,4870
   4bf78:	0004c16c 	andhi	zero,zero,4869
   4bf7c:	0004c184 	movi	zero,4870
   4bf80:	0004bfb0 	cmpltui	zero,zero,4862
   4bf84:	0004c194 	movui	zero,4870
   4bf88:	0004c194 	movui	zero,4870
   4bf8c:	0004c194 	movui	zero,4870
   4bf90:	0004c4f4 	movhi	zero,4883
   4bf94:	2404b03a 	or	r2,r4,r16
   4bf98:	1000711e 	bne	r2,zero,4c160 <__muldf3+0x300>
   4bf9c:	05400204 	movi	r21,8
   4bfa0:	0021883a 	mov	r16,zero
   4bfa4:	002d883a 	mov	r22,zero
   4bfa8:	01400084 	movi	r5,2
   4bfac:	003fcb06 	br	4bedc <__alt_data_end+0xfffefb1c>
   4bfb0:	500d883a 	mov	r6,r10
   4bfb4:	00800084 	movi	r2,2
   4bfb8:	38805926 	beq	r7,r2,4c120 <__muldf3+0x2c0>
   4bfbc:	008000c4 	movi	r2,3
   4bfc0:	3881bb26 	beq	r7,r2,4c6b0 <__muldf3+0x850>
   4bfc4:	00800044 	movi	r2,1
   4bfc8:	3881961e 	bne	r7,r2,4c624 <__muldf3+0x7c4>
   4bfcc:	3027883a 	mov	r19,r6
   4bfd0:	0005883a 	mov	r2,zero
   4bfd4:	0021883a 	mov	r16,zero
   4bfd8:	002d883a 	mov	r22,zero
   4bfdc:	1004953a 	slli	r2,r2,20
   4bfe0:	98c03fcc 	andi	r3,r19,255
   4bfe4:	04400434 	movhi	r17,16
   4bfe8:	8c7fffc4 	addi	r17,r17,-1
   4bfec:	180697fa 	slli	r3,r3,31
   4bff0:	8460703a 	and	r16,r16,r17
   4bff4:	80a0b03a 	or	r16,r16,r2
   4bff8:	80c6b03a 	or	r3,r16,r3
   4bffc:	b005883a 	mov	r2,r22
   4c000:	dfc01117 	ldw	ra,68(sp)
   4c004:	df001017 	ldw	fp,64(sp)
   4c008:	ddc00f17 	ldw	r23,60(sp)
   4c00c:	dd800e17 	ldw	r22,56(sp)
   4c010:	dd400d17 	ldw	r21,52(sp)
   4c014:	dd000c17 	ldw	r20,48(sp)
   4c018:	dcc00b17 	ldw	r19,44(sp)
   4c01c:	dc800a17 	ldw	r18,40(sp)
   4c020:	dc400917 	ldw	r17,36(sp)
   4c024:	dc000817 	ldw	r16,32(sp)
   4c028:	dec01204 	addi	sp,sp,72
   4c02c:	f800283a 	ret
   4c030:	2404b03a 	or	r2,r4,r16
   4c034:	202b883a 	mov	r21,r4
   4c038:	10004426 	beq	r2,zero,4c14c <__muldf3+0x2ec>
   4c03c:	80015126 	beq	r16,zero,4c584 <__muldf3+0x724>
   4c040:	8009883a 	mov	r4,r16
   4c044:	d9800715 	stw	r6,28(sp)
   4c048:	d9c00215 	stw	r7,8(sp)
   4c04c:	da400415 	stw	r9,16(sp)
   4c050:	004d1cc0 	call	4d1cc <__clzsi2>
   4c054:	d9800717 	ldw	r6,28(sp)
   4c058:	d9c00217 	ldw	r7,8(sp)
   4c05c:	da400417 	ldw	r9,16(sp)
   4c060:	113ffd44 	addi	r4,r2,-11
   4c064:	00c00704 	movi	r3,28
   4c068:	19014216 	blt	r3,r4,4c574 <__muldf3+0x714>
   4c06c:	00c00744 	movi	r3,29
   4c070:	15bffe04 	addi	r22,r2,-8
   4c074:	1907c83a 	sub	r3,r3,r4
   4c078:	85a0983a 	sll	r16,r16,r22
   4c07c:	a8c6d83a 	srl	r3,r21,r3
   4c080:	adac983a 	sll	r22,r21,r22
   4c084:	1c20b03a 	or	r16,r3,r16
   4c088:	1080fcc4 	addi	r2,r2,1011
   4c08c:	00a9c83a 	sub	r20,zero,r2
   4c090:	002b883a 	mov	r21,zero
   4c094:	000b883a 	mov	r5,zero
   4c098:	003f9006 	br	4bedc <__alt_data_end+0xfffefb1c>
   4c09c:	3446b03a 	or	r3,r6,r17
   4c0a0:	1800281e 	bne	r3,zero,4c144 <__muldf3+0x2e4>
   4c0a4:	0023883a 	mov	r17,zero
   4c0a8:	0025883a 	mov	r18,zero
   4c0ac:	01c00084 	movi	r7,2
   4c0b0:	003f9c06 	br	4bf24 <__alt_data_end+0xfffefb64>
   4c0b4:	3446b03a 	or	r3,r6,r17
   4c0b8:	18001e26 	beq	r3,zero,4c134 <__muldf3+0x2d4>
   4c0bc:	88012126 	beq	r17,zero,4c544 <__muldf3+0x6e4>
   4c0c0:	8809883a 	mov	r4,r17
   4c0c4:	d9400215 	stw	r5,8(sp)
   4c0c8:	d9800715 	stw	r6,28(sp)
   4c0cc:	da400415 	stw	r9,16(sp)
   4c0d0:	da800315 	stw	r10,12(sp)
   4c0d4:	004d1cc0 	call	4d1cc <__clzsi2>
   4c0d8:	d9400217 	ldw	r5,8(sp)
   4c0dc:	d9800717 	ldw	r6,28(sp)
   4c0e0:	da400417 	ldw	r9,16(sp)
   4c0e4:	da800317 	ldw	r10,12(sp)
   4c0e8:	113ffd44 	addi	r4,r2,-11
   4c0ec:	00c00704 	movi	r3,28
   4c0f0:	19011016 	blt	r3,r4,4c534 <__muldf3+0x6d4>
   4c0f4:	00c00744 	movi	r3,29
   4c0f8:	14bffe04 	addi	r18,r2,-8
   4c0fc:	1907c83a 	sub	r3,r3,r4
   4c100:	8ca2983a 	sll	r17,r17,r18
   4c104:	30c6d83a 	srl	r3,r6,r3
   4c108:	34a4983a 	sll	r18,r6,r18
   4c10c:	1c62b03a 	or	r17,r3,r17
   4c110:	1080fcc4 	addi	r2,r2,1011
   4c114:	0085c83a 	sub	r2,zero,r2
   4c118:	000f883a 	mov	r7,zero
   4c11c:	003f8106 	br	4bf24 <__alt_data_end+0xfffefb64>
   4c120:	3027883a 	mov	r19,r6
   4c124:	0081ffc4 	movi	r2,2047
   4c128:	0021883a 	mov	r16,zero
   4c12c:	002d883a 	mov	r22,zero
   4c130:	003faa06 	br	4bfdc <__alt_data_end+0xfffefc1c>
   4c134:	0023883a 	mov	r17,zero
   4c138:	0025883a 	mov	r18,zero
   4c13c:	01c00044 	movi	r7,1
   4c140:	003f7806 	br	4bf24 <__alt_data_end+0xfffefb64>
   4c144:	01c000c4 	movi	r7,3
   4c148:	003f7606 	br	4bf24 <__alt_data_end+0xfffefb64>
   4c14c:	05400104 	movi	r21,4
   4c150:	0021883a 	mov	r16,zero
   4c154:	002d883a 	mov	r22,zero
   4c158:	01400044 	movi	r5,1
   4c15c:	003f5f06 	br	4bedc <__alt_data_end+0xfffefb1c>
   4c160:	05400304 	movi	r21,12
   4c164:	014000c4 	movi	r5,3
   4c168:	003f5c06 	br	4bedc <__alt_data_end+0xfffefb1c>
   4c16c:	04000434 	movhi	r16,16
   4c170:	0027883a 	mov	r19,zero
   4c174:	843fffc4 	addi	r16,r16,-1
   4c178:	05bfffc4 	movi	r22,-1
   4c17c:	0081ffc4 	movi	r2,2047
   4c180:	003f9606 	br	4bfdc <__alt_data_end+0xfffefc1c>
   4c184:	8023883a 	mov	r17,r16
   4c188:	b025883a 	mov	r18,r22
   4c18c:	280f883a 	mov	r7,r5
   4c190:	003f8806 	br	4bfb4 <__alt_data_end+0xfffefbf4>
   4c194:	8023883a 	mov	r17,r16
   4c198:	b025883a 	mov	r18,r22
   4c19c:	480d883a 	mov	r6,r9
   4c1a0:	280f883a 	mov	r7,r5
   4c1a4:	003f8306 	br	4bfb4 <__alt_data_end+0xfffefbf4>
   4c1a8:	b026d43a 	srli	r19,r22,16
   4c1ac:	902ed43a 	srli	r23,r18,16
   4c1b0:	b5bfffcc 	andi	r22,r22,65535
   4c1b4:	94bfffcc 	andi	r18,r18,65535
   4c1b8:	b00b883a 	mov	r5,r22
   4c1bc:	9009883a 	mov	r4,r18
   4c1c0:	d8c00515 	stw	r3,20(sp)
   4c1c4:	d9800715 	stw	r6,28(sp)
   4c1c8:	da000615 	stw	r8,24(sp)
   4c1cc:	004a9640 	call	4a964 <__mulsi3>
   4c1d0:	980b883a 	mov	r5,r19
   4c1d4:	9009883a 	mov	r4,r18
   4c1d8:	1029883a 	mov	r20,r2
   4c1dc:	004a9640 	call	4a964 <__mulsi3>
   4c1e0:	b80b883a 	mov	r5,r23
   4c1e4:	9809883a 	mov	r4,r19
   4c1e8:	102b883a 	mov	r21,r2
   4c1ec:	004a9640 	call	4a964 <__mulsi3>
   4c1f0:	b809883a 	mov	r4,r23
   4c1f4:	b00b883a 	mov	r5,r22
   4c1f8:	1039883a 	mov	fp,r2
   4c1fc:	004a9640 	call	4a964 <__mulsi3>
   4c200:	a008d43a 	srli	r4,r20,16
   4c204:	1545883a 	add	r2,r2,r21
   4c208:	d8c00517 	ldw	r3,20(sp)
   4c20c:	2085883a 	add	r2,r4,r2
   4c210:	d9800717 	ldw	r6,28(sp)
   4c214:	da000617 	ldw	r8,24(sp)
   4c218:	1540022e 	bgeu	r2,r21,4c224 <__muldf3+0x3c4>
   4c21c:	01000074 	movhi	r4,1
   4c220:	e139883a 	add	fp,fp,r4
   4c224:	100e943a 	slli	r7,r2,16
   4c228:	1004d43a 	srli	r2,r2,16
   4c22c:	882ad43a 	srli	r21,r17,16
   4c230:	a53fffcc 	andi	r20,r20,65535
   4c234:	8c7fffcc 	andi	r17,r17,65535
   4c238:	3d29883a 	add	r20,r7,r20
   4c23c:	b00b883a 	mov	r5,r22
   4c240:	8809883a 	mov	r4,r17
   4c244:	d8c00515 	stw	r3,20(sp)
   4c248:	d9800715 	stw	r6,28(sp)
   4c24c:	da000615 	stw	r8,24(sp)
   4c250:	dd000115 	stw	r20,4(sp)
   4c254:	d8800015 	stw	r2,0(sp)
   4c258:	004a9640 	call	4a964 <__mulsi3>
   4c25c:	980b883a 	mov	r5,r19
   4c260:	8809883a 	mov	r4,r17
   4c264:	d8800215 	stw	r2,8(sp)
   4c268:	004a9640 	call	4a964 <__mulsi3>
   4c26c:	9809883a 	mov	r4,r19
   4c270:	a80b883a 	mov	r5,r21
   4c274:	1029883a 	mov	r20,r2
   4c278:	004a9640 	call	4a964 <__mulsi3>
   4c27c:	b00b883a 	mov	r5,r22
   4c280:	a809883a 	mov	r4,r21
   4c284:	d8800415 	stw	r2,16(sp)
   4c288:	004a9640 	call	4a964 <__mulsi3>
   4c28c:	d9c00217 	ldw	r7,8(sp)
   4c290:	1505883a 	add	r2,r2,r20
   4c294:	d8c00517 	ldw	r3,20(sp)
   4c298:	3826d43a 	srli	r19,r7,16
   4c29c:	d9800717 	ldw	r6,28(sp)
   4c2a0:	da000617 	ldw	r8,24(sp)
   4c2a4:	9885883a 	add	r2,r19,r2
   4c2a8:	da400417 	ldw	r9,16(sp)
   4c2ac:	1500022e 	bgeu	r2,r20,4c2b8 <__muldf3+0x458>
   4c2b0:	01000074 	movhi	r4,1
   4c2b4:	4913883a 	add	r9,r9,r4
   4c2b8:	1028d43a 	srli	r20,r2,16
   4c2bc:	1004943a 	slli	r2,r2,16
   4c2c0:	802cd43a 	srli	r22,r16,16
   4c2c4:	843fffcc 	andi	r16,r16,65535
   4c2c8:	3cffffcc 	andi	r19,r7,65535
   4c2cc:	9009883a 	mov	r4,r18
   4c2d0:	800b883a 	mov	r5,r16
   4c2d4:	a269883a 	add	r20,r20,r9
   4c2d8:	d8c00515 	stw	r3,20(sp)
   4c2dc:	d9800715 	stw	r6,28(sp)
   4c2e0:	da000615 	stw	r8,24(sp)
   4c2e4:	14e7883a 	add	r19,r2,r19
   4c2e8:	004a9640 	call	4a964 <__mulsi3>
   4c2ec:	9009883a 	mov	r4,r18
   4c2f0:	b00b883a 	mov	r5,r22
   4c2f4:	d8800315 	stw	r2,12(sp)
   4c2f8:	004a9640 	call	4a964 <__mulsi3>
   4c2fc:	b809883a 	mov	r4,r23
   4c300:	b00b883a 	mov	r5,r22
   4c304:	d8800215 	stw	r2,8(sp)
   4c308:	004a9640 	call	4a964 <__mulsi3>
   4c30c:	b80b883a 	mov	r5,r23
   4c310:	8009883a 	mov	r4,r16
   4c314:	d8800415 	stw	r2,16(sp)
   4c318:	004a9640 	call	4a964 <__mulsi3>
   4c31c:	da800317 	ldw	r10,12(sp)
   4c320:	d9c00217 	ldw	r7,8(sp)
   4c324:	d9000017 	ldw	r4,0(sp)
   4c328:	502ed43a 	srli	r23,r10,16
   4c32c:	11c5883a 	add	r2,r2,r7
   4c330:	24e5883a 	add	r18,r4,r19
   4c334:	b885883a 	add	r2,r23,r2
   4c338:	d8c00517 	ldw	r3,20(sp)
   4c33c:	d9800717 	ldw	r6,28(sp)
   4c340:	da000617 	ldw	r8,24(sp)
   4c344:	da400417 	ldw	r9,16(sp)
   4c348:	11c0022e 	bgeu	r2,r7,4c354 <__muldf3+0x4f4>
   4c34c:	01000074 	movhi	r4,1
   4c350:	4913883a 	add	r9,r9,r4
   4c354:	100ed43a 	srli	r7,r2,16
   4c358:	1004943a 	slli	r2,r2,16
   4c35c:	55ffffcc 	andi	r23,r10,65535
   4c360:	3a53883a 	add	r9,r7,r9
   4c364:	8809883a 	mov	r4,r17
   4c368:	800b883a 	mov	r5,r16
   4c36c:	d8c00515 	stw	r3,20(sp)
   4c370:	d9800715 	stw	r6,28(sp)
   4c374:	da000615 	stw	r8,24(sp)
   4c378:	da400415 	stw	r9,16(sp)
   4c37c:	15ef883a 	add	r23,r2,r23
   4c380:	004a9640 	call	4a964 <__mulsi3>
   4c384:	8809883a 	mov	r4,r17
   4c388:	b00b883a 	mov	r5,r22
   4c38c:	d8800215 	stw	r2,8(sp)
   4c390:	004a9640 	call	4a964 <__mulsi3>
   4c394:	b00b883a 	mov	r5,r22
   4c398:	a809883a 	mov	r4,r21
   4c39c:	d8800315 	stw	r2,12(sp)
   4c3a0:	004a9640 	call	4a964 <__mulsi3>
   4c3a4:	8009883a 	mov	r4,r16
   4c3a8:	a80b883a 	mov	r5,r21
   4c3ac:	1023883a 	mov	r17,r2
   4c3b0:	004a9640 	call	4a964 <__mulsi3>
   4c3b4:	d9c00217 	ldw	r7,8(sp)
   4c3b8:	da800317 	ldw	r10,12(sp)
   4c3bc:	d8c00517 	ldw	r3,20(sp)
   4c3c0:	3808d43a 	srli	r4,r7,16
   4c3c4:	1285883a 	add	r2,r2,r10
   4c3c8:	d9800717 	ldw	r6,28(sp)
   4c3cc:	2085883a 	add	r2,r4,r2
   4c3d0:	da000617 	ldw	r8,24(sp)
   4c3d4:	da400417 	ldw	r9,16(sp)
   4c3d8:	1280022e 	bgeu	r2,r10,4c3e4 <__muldf3+0x584>
   4c3dc:	01000074 	movhi	r4,1
   4c3e0:	8923883a 	add	r17,r17,r4
   4c3e4:	1008943a 	slli	r4,r2,16
   4c3e8:	39ffffcc 	andi	r7,r7,65535
   4c3ec:	e4b9883a 	add	fp,fp,r18
   4c3f0:	21cf883a 	add	r7,r4,r7
   4c3f4:	e4e7803a 	cmpltu	r19,fp,r19
   4c3f8:	3d0f883a 	add	r7,r7,r20
   4c3fc:	bf39883a 	add	fp,r23,fp
   4c400:	99c9883a 	add	r4,r19,r7
   4c404:	e5ef803a 	cmpltu	r23,fp,r23
   4c408:	490b883a 	add	r5,r9,r4
   4c40c:	1004d43a 	srli	r2,r2,16
   4c410:	b965883a 	add	r18,r23,r5
   4c414:	24c9803a 	cmpltu	r4,r4,r19
   4c418:	3d29803a 	cmpltu	r20,r7,r20
   4c41c:	a128b03a 	or	r20,r20,r4
   4c420:	95ef803a 	cmpltu	r23,r18,r23
   4c424:	2a53803a 	cmpltu	r9,r5,r9
   4c428:	a0a9883a 	add	r20,r20,r2
   4c42c:	4deeb03a 	or	r23,r9,r23
   4c430:	a5ef883a 	add	r23,r20,r23
   4c434:	bc63883a 	add	r17,r23,r17
   4c438:	e004927a 	slli	r2,fp,9
   4c43c:	d9000117 	ldw	r4,4(sp)
   4c440:	882e927a 	slli	r23,r17,9
   4c444:	9022d5fa 	srli	r17,r18,23
   4c448:	e038d5fa 	srli	fp,fp,23
   4c44c:	1104b03a 	or	r2,r2,r4
   4c450:	9024927a 	slli	r18,r18,9
   4c454:	1004c03a 	cmpne	r2,r2,zero
   4c458:	bc62b03a 	or	r17,r23,r17
   4c45c:	1738b03a 	or	fp,r2,fp
   4c460:	8880402c 	andhi	r2,r17,256
   4c464:	e4a4b03a 	or	r18,fp,r18
   4c468:	10000726 	beq	r2,zero,4c488 <__muldf3+0x628>
   4c46c:	9006d07a 	srli	r3,r18,1
   4c470:	880497fa 	slli	r2,r17,31
   4c474:	9480004c 	andi	r18,r18,1
   4c478:	8822d07a 	srli	r17,r17,1
   4c47c:	1ca4b03a 	or	r18,r3,r18
   4c480:	14a4b03a 	or	r18,r2,r18
   4c484:	4007883a 	mov	r3,r8
   4c488:	1880ffc4 	addi	r2,r3,1023
   4c48c:	0080460e 	bge	zero,r2,4c5a8 <__muldf3+0x748>
   4c490:	910001cc 	andi	r4,r18,7
   4c494:	20000726 	beq	r4,zero,4c4b4 <__muldf3+0x654>
   4c498:	910003cc 	andi	r4,r18,15
   4c49c:	01400104 	movi	r5,4
   4c4a0:	21400426 	beq	r4,r5,4c4b4 <__muldf3+0x654>
   4c4a4:	9149883a 	add	r4,r18,r5
   4c4a8:	24a5803a 	cmpltu	r18,r4,r18
   4c4ac:	8ca3883a 	add	r17,r17,r18
   4c4b0:	2025883a 	mov	r18,r4
   4c4b4:	8900402c 	andhi	r4,r17,256
   4c4b8:	20000426 	beq	r4,zero,4c4cc <__muldf3+0x66c>
   4c4bc:	18810004 	addi	r2,r3,1024
   4c4c0:	00ffc034 	movhi	r3,65280
   4c4c4:	18ffffc4 	addi	r3,r3,-1
   4c4c8:	88e2703a 	and	r17,r17,r3
   4c4cc:	00c1ff84 	movi	r3,2046
   4c4d0:	18bf1316 	blt	r3,r2,4c120 <__alt_data_end+0xfffefd60>
   4c4d4:	882c977a 	slli	r22,r17,29
   4c4d8:	9024d0fa 	srli	r18,r18,3
   4c4dc:	8822927a 	slli	r17,r17,9
   4c4e0:	1081ffcc 	andi	r2,r2,2047
   4c4e4:	b4acb03a 	or	r22,r22,r18
   4c4e8:	8820d33a 	srli	r16,r17,12
   4c4ec:	3027883a 	mov	r19,r6
   4c4f0:	003eba06 	br	4bfdc <__alt_data_end+0xfffefc1c>
   4c4f4:	8080022c 	andhi	r2,r16,8
   4c4f8:	10000926 	beq	r2,zero,4c520 <__muldf3+0x6c0>
   4c4fc:	8880022c 	andhi	r2,r17,8
   4c500:	1000071e 	bne	r2,zero,4c520 <__muldf3+0x6c0>
   4c504:	00800434 	movhi	r2,16
   4c508:	8c000234 	orhi	r16,r17,8
   4c50c:	10bfffc4 	addi	r2,r2,-1
   4c510:	e027883a 	mov	r19,fp
   4c514:	80a0703a 	and	r16,r16,r2
   4c518:	902d883a 	mov	r22,r18
   4c51c:	003f1706 	br	4c17c <__alt_data_end+0xfffefdbc>
   4c520:	00800434 	movhi	r2,16
   4c524:	84000234 	orhi	r16,r16,8
   4c528:	10bfffc4 	addi	r2,r2,-1
   4c52c:	80a0703a 	and	r16,r16,r2
   4c530:	003f1206 	br	4c17c <__alt_data_end+0xfffefdbc>
   4c534:	147ff604 	addi	r17,r2,-40
   4c538:	3462983a 	sll	r17,r6,r17
   4c53c:	0025883a 	mov	r18,zero
   4c540:	003ef306 	br	4c110 <__alt_data_end+0xfffefd50>
   4c544:	3009883a 	mov	r4,r6
   4c548:	d9400215 	stw	r5,8(sp)
   4c54c:	d9800715 	stw	r6,28(sp)
   4c550:	da400415 	stw	r9,16(sp)
   4c554:	da800315 	stw	r10,12(sp)
   4c558:	004d1cc0 	call	4d1cc <__clzsi2>
   4c55c:	10800804 	addi	r2,r2,32
   4c560:	da800317 	ldw	r10,12(sp)
   4c564:	da400417 	ldw	r9,16(sp)
   4c568:	d9800717 	ldw	r6,28(sp)
   4c56c:	d9400217 	ldw	r5,8(sp)
   4c570:	003edd06 	br	4c0e8 <__alt_data_end+0xfffefd28>
   4c574:	143ff604 	addi	r16,r2,-40
   4c578:	ac20983a 	sll	r16,r21,r16
   4c57c:	002d883a 	mov	r22,zero
   4c580:	003ec106 	br	4c088 <__alt_data_end+0xfffefcc8>
   4c584:	d9800715 	stw	r6,28(sp)
   4c588:	d9c00215 	stw	r7,8(sp)
   4c58c:	da400415 	stw	r9,16(sp)
   4c590:	004d1cc0 	call	4d1cc <__clzsi2>
   4c594:	10800804 	addi	r2,r2,32
   4c598:	da400417 	ldw	r9,16(sp)
   4c59c:	d9c00217 	ldw	r7,8(sp)
   4c5a0:	d9800717 	ldw	r6,28(sp)
   4c5a4:	003eae06 	br	4c060 <__alt_data_end+0xfffefca0>
   4c5a8:	00c00044 	movi	r3,1
   4c5ac:	1887c83a 	sub	r3,r3,r2
   4c5b0:	01000e04 	movi	r4,56
   4c5b4:	20fe8516 	blt	r4,r3,4bfcc <__alt_data_end+0xfffefc0c>
   4c5b8:	010007c4 	movi	r4,31
   4c5bc:	20c01b16 	blt	r4,r3,4c62c <__muldf3+0x7cc>
   4c5c0:	00800804 	movi	r2,32
   4c5c4:	10c5c83a 	sub	r2,r2,r3
   4c5c8:	888a983a 	sll	r5,r17,r2
   4c5cc:	90c8d83a 	srl	r4,r18,r3
   4c5d0:	9084983a 	sll	r2,r18,r2
   4c5d4:	88e2d83a 	srl	r17,r17,r3
   4c5d8:	2906b03a 	or	r3,r5,r4
   4c5dc:	1004c03a 	cmpne	r2,r2,zero
   4c5e0:	1886b03a 	or	r3,r3,r2
   4c5e4:	188001cc 	andi	r2,r3,7
   4c5e8:	10000726 	beq	r2,zero,4c608 <__muldf3+0x7a8>
   4c5ec:	188003cc 	andi	r2,r3,15
   4c5f0:	01000104 	movi	r4,4
   4c5f4:	11000426 	beq	r2,r4,4c608 <__muldf3+0x7a8>
   4c5f8:	1805883a 	mov	r2,r3
   4c5fc:	10c00104 	addi	r3,r2,4
   4c600:	1885803a 	cmpltu	r2,r3,r2
   4c604:	88a3883a 	add	r17,r17,r2
   4c608:	8880202c 	andhi	r2,r17,128
   4c60c:	10001c26 	beq	r2,zero,4c680 <__muldf3+0x820>
   4c610:	3027883a 	mov	r19,r6
   4c614:	00800044 	movi	r2,1
   4c618:	0021883a 	mov	r16,zero
   4c61c:	002d883a 	mov	r22,zero
   4c620:	003e6e06 	br	4bfdc <__alt_data_end+0xfffefc1c>
   4c624:	4007883a 	mov	r3,r8
   4c628:	003f9706 	br	4c488 <__alt_data_end+0xffff00c8>
   4c62c:	017ff844 	movi	r5,-31
   4c630:	2885c83a 	sub	r2,r5,r2
   4c634:	888ad83a 	srl	r5,r17,r2
   4c638:	00800804 	movi	r2,32
   4c63c:	18801a26 	beq	r3,r2,4c6a8 <__muldf3+0x848>
   4c640:	01001004 	movi	r4,64
   4c644:	20c7c83a 	sub	r3,r4,r3
   4c648:	88e2983a 	sll	r17,r17,r3
   4c64c:	8ca4b03a 	or	r18,r17,r18
   4c650:	9004c03a 	cmpne	r2,r18,zero
   4c654:	2884b03a 	or	r2,r5,r2
   4c658:	144001cc 	andi	r17,r2,7
   4c65c:	88000d1e 	bne	r17,zero,4c694 <__muldf3+0x834>
   4c660:	0021883a 	mov	r16,zero
   4c664:	102cd0fa 	srli	r22,r2,3
   4c668:	3027883a 	mov	r19,r6
   4c66c:	0005883a 	mov	r2,zero
   4c670:	b46cb03a 	or	r22,r22,r17
   4c674:	003e5906 	br	4bfdc <__alt_data_end+0xfffefc1c>
   4c678:	1007883a 	mov	r3,r2
   4c67c:	0023883a 	mov	r17,zero
   4c680:	8820927a 	slli	r16,r17,9
   4c684:	1805883a 	mov	r2,r3
   4c688:	8822977a 	slli	r17,r17,29
   4c68c:	8020d33a 	srli	r16,r16,12
   4c690:	003ff406 	br	4c664 <__alt_data_end+0xffff02a4>
   4c694:	10c003cc 	andi	r3,r2,15
   4c698:	01000104 	movi	r4,4
   4c69c:	193ff626 	beq	r3,r4,4c678 <__alt_data_end+0xffff02b8>
   4c6a0:	0023883a 	mov	r17,zero
   4c6a4:	003fd506 	br	4c5fc <__alt_data_end+0xffff023c>
   4c6a8:	0023883a 	mov	r17,zero
   4c6ac:	003fe706 	br	4c64c <__alt_data_end+0xffff028c>
   4c6b0:	00800434 	movhi	r2,16
   4c6b4:	8c000234 	orhi	r16,r17,8
   4c6b8:	10bfffc4 	addi	r2,r2,-1
   4c6bc:	3027883a 	mov	r19,r6
   4c6c0:	80a0703a 	and	r16,r16,r2
   4c6c4:	902d883a 	mov	r22,r18
   4c6c8:	003eac06 	br	4c17c <__alt_data_end+0xfffefdbc>

0004c6cc <__subdf3>:
   4c6cc:	02000434 	movhi	r8,16
   4c6d0:	423fffc4 	addi	r8,r8,-1
   4c6d4:	defffb04 	addi	sp,sp,-20
   4c6d8:	2a14703a 	and	r10,r5,r8
   4c6dc:	3812d53a 	srli	r9,r7,20
   4c6e0:	3a10703a 	and	r8,r7,r8
   4c6e4:	2006d77a 	srli	r3,r4,29
   4c6e8:	3004d77a 	srli	r2,r6,29
   4c6ec:	dc000015 	stw	r16,0(sp)
   4c6f0:	501490fa 	slli	r10,r10,3
   4c6f4:	2820d53a 	srli	r16,r5,20
   4c6f8:	401090fa 	slli	r8,r8,3
   4c6fc:	dc800215 	stw	r18,8(sp)
   4c700:	dc400115 	stw	r17,4(sp)
   4c704:	dfc00415 	stw	ra,16(sp)
   4c708:	202290fa 	slli	r17,r4,3
   4c70c:	dcc00315 	stw	r19,12(sp)
   4c710:	4a41ffcc 	andi	r9,r9,2047
   4c714:	0101ffc4 	movi	r4,2047
   4c718:	2824d7fa 	srli	r18,r5,31
   4c71c:	8401ffcc 	andi	r16,r16,2047
   4c720:	50c6b03a 	or	r3,r10,r3
   4c724:	380ed7fa 	srli	r7,r7,31
   4c728:	408ab03a 	or	r5,r8,r2
   4c72c:	300c90fa 	slli	r6,r6,3
   4c730:	49009626 	beq	r9,r4,4c98c <__subdf3+0x2c0>
   4c734:	39c0005c 	xori	r7,r7,1
   4c738:	8245c83a 	sub	r2,r16,r9
   4c73c:	3c807426 	beq	r7,r18,4c910 <__subdf3+0x244>
   4c740:	0080af0e 	bge	zero,r2,4ca00 <__subdf3+0x334>
   4c744:	48002a1e 	bne	r9,zero,4c7f0 <__subdf3+0x124>
   4c748:	2988b03a 	or	r4,r5,r6
   4c74c:	20009a1e 	bne	r4,zero,4c9b8 <__subdf3+0x2ec>
   4c750:	888001cc 	andi	r2,r17,7
   4c754:	10000726 	beq	r2,zero,4c774 <__subdf3+0xa8>
   4c758:	888003cc 	andi	r2,r17,15
   4c75c:	01000104 	movi	r4,4
   4c760:	11000426 	beq	r2,r4,4c774 <__subdf3+0xa8>
   4c764:	890b883a 	add	r5,r17,r4
   4c768:	2c63803a 	cmpltu	r17,r5,r17
   4c76c:	1c47883a 	add	r3,r3,r17
   4c770:	2823883a 	mov	r17,r5
   4c774:	1880202c 	andhi	r2,r3,128
   4c778:	10005926 	beq	r2,zero,4c8e0 <__subdf3+0x214>
   4c77c:	84000044 	addi	r16,r16,1
   4c780:	0081ffc4 	movi	r2,2047
   4c784:	8080be26 	beq	r16,r2,4ca80 <__subdf3+0x3b4>
   4c788:	017fe034 	movhi	r5,65408
   4c78c:	297fffc4 	addi	r5,r5,-1
   4c790:	1946703a 	and	r3,r3,r5
   4c794:	1804977a 	slli	r2,r3,29
   4c798:	1806927a 	slli	r3,r3,9
   4c79c:	8822d0fa 	srli	r17,r17,3
   4c7a0:	8401ffcc 	andi	r16,r16,2047
   4c7a4:	180ad33a 	srli	r5,r3,12
   4c7a8:	9100004c 	andi	r4,r18,1
   4c7ac:	1444b03a 	or	r2,r2,r17
   4c7b0:	80c1ffcc 	andi	r3,r16,2047
   4c7b4:	1820953a 	slli	r16,r3,20
   4c7b8:	20c03fcc 	andi	r3,r4,255
   4c7bc:	180897fa 	slli	r4,r3,31
   4c7c0:	00c00434 	movhi	r3,16
   4c7c4:	18ffffc4 	addi	r3,r3,-1
   4c7c8:	28c6703a 	and	r3,r5,r3
   4c7cc:	1c06b03a 	or	r3,r3,r16
   4c7d0:	1906b03a 	or	r3,r3,r4
   4c7d4:	dfc00417 	ldw	ra,16(sp)
   4c7d8:	dcc00317 	ldw	r19,12(sp)
   4c7dc:	dc800217 	ldw	r18,8(sp)
   4c7e0:	dc400117 	ldw	r17,4(sp)
   4c7e4:	dc000017 	ldw	r16,0(sp)
   4c7e8:	dec00504 	addi	sp,sp,20
   4c7ec:	f800283a 	ret
   4c7f0:	0101ffc4 	movi	r4,2047
   4c7f4:	813fd626 	beq	r16,r4,4c750 <__alt_data_end+0xffff0390>
   4c7f8:	29402034 	orhi	r5,r5,128
   4c7fc:	01000e04 	movi	r4,56
   4c800:	2080a316 	blt	r4,r2,4ca90 <__subdf3+0x3c4>
   4c804:	010007c4 	movi	r4,31
   4c808:	2080c616 	blt	r4,r2,4cb24 <__subdf3+0x458>
   4c80c:	01000804 	movi	r4,32
   4c810:	2089c83a 	sub	r4,r4,r2
   4c814:	2910983a 	sll	r8,r5,r4
   4c818:	308ed83a 	srl	r7,r6,r2
   4c81c:	3108983a 	sll	r4,r6,r4
   4c820:	2884d83a 	srl	r2,r5,r2
   4c824:	41ccb03a 	or	r6,r8,r7
   4c828:	2008c03a 	cmpne	r4,r4,zero
   4c82c:	310cb03a 	or	r6,r6,r4
   4c830:	898dc83a 	sub	r6,r17,r6
   4c834:	89a3803a 	cmpltu	r17,r17,r6
   4c838:	1887c83a 	sub	r3,r3,r2
   4c83c:	1c47c83a 	sub	r3,r3,r17
   4c840:	3023883a 	mov	r17,r6
   4c844:	1880202c 	andhi	r2,r3,128
   4c848:	10002326 	beq	r2,zero,4c8d8 <__subdf3+0x20c>
   4c84c:	04c02034 	movhi	r19,128
   4c850:	9cffffc4 	addi	r19,r19,-1
   4c854:	1ce6703a 	and	r19,r3,r19
   4c858:	98007a26 	beq	r19,zero,4ca44 <__subdf3+0x378>
   4c85c:	9809883a 	mov	r4,r19
   4c860:	004d1cc0 	call	4d1cc <__clzsi2>
   4c864:	113ffe04 	addi	r4,r2,-8
   4c868:	00c007c4 	movi	r3,31
   4c86c:	19007b16 	blt	r3,r4,4ca5c <__subdf3+0x390>
   4c870:	00800804 	movi	r2,32
   4c874:	1105c83a 	sub	r2,r2,r4
   4c878:	8884d83a 	srl	r2,r17,r2
   4c87c:	9906983a 	sll	r3,r19,r4
   4c880:	8922983a 	sll	r17,r17,r4
   4c884:	10c4b03a 	or	r2,r2,r3
   4c888:	24007816 	blt	r4,r16,4ca6c <__subdf3+0x3a0>
   4c88c:	2421c83a 	sub	r16,r4,r16
   4c890:	80c00044 	addi	r3,r16,1
   4c894:	010007c4 	movi	r4,31
   4c898:	20c09516 	blt	r4,r3,4caf0 <__subdf3+0x424>
   4c89c:	01400804 	movi	r5,32
   4c8a0:	28cbc83a 	sub	r5,r5,r3
   4c8a4:	88c8d83a 	srl	r4,r17,r3
   4c8a8:	8962983a 	sll	r17,r17,r5
   4c8ac:	114a983a 	sll	r5,r2,r5
   4c8b0:	10c6d83a 	srl	r3,r2,r3
   4c8b4:	8804c03a 	cmpne	r2,r17,zero
   4c8b8:	290ab03a 	or	r5,r5,r4
   4c8bc:	28a2b03a 	or	r17,r5,r2
   4c8c0:	0021883a 	mov	r16,zero
   4c8c4:	003fa206 	br	4c750 <__alt_data_end+0xffff0390>
   4c8c8:	2090b03a 	or	r8,r4,r2
   4c8cc:	40018e26 	beq	r8,zero,4cf08 <__subdf3+0x83c>
   4c8d0:	1007883a 	mov	r3,r2
   4c8d4:	2023883a 	mov	r17,r4
   4c8d8:	888001cc 	andi	r2,r17,7
   4c8dc:	103f9e1e 	bne	r2,zero,4c758 <__alt_data_end+0xffff0398>
   4c8e0:	1804977a 	slli	r2,r3,29
   4c8e4:	8822d0fa 	srli	r17,r17,3
   4c8e8:	1810d0fa 	srli	r8,r3,3
   4c8ec:	9100004c 	andi	r4,r18,1
   4c8f0:	1444b03a 	or	r2,r2,r17
   4c8f4:	00c1ffc4 	movi	r3,2047
   4c8f8:	80c02826 	beq	r16,r3,4c99c <__subdf3+0x2d0>
   4c8fc:	01400434 	movhi	r5,16
   4c900:	297fffc4 	addi	r5,r5,-1
   4c904:	80e0703a 	and	r16,r16,r3
   4c908:	414a703a 	and	r5,r8,r5
   4c90c:	003fa806 	br	4c7b0 <__alt_data_end+0xffff03f0>
   4c910:	0080630e 	bge	zero,r2,4caa0 <__subdf3+0x3d4>
   4c914:	48003026 	beq	r9,zero,4c9d8 <__subdf3+0x30c>
   4c918:	0101ffc4 	movi	r4,2047
   4c91c:	813f8c26 	beq	r16,r4,4c750 <__alt_data_end+0xffff0390>
   4c920:	29402034 	orhi	r5,r5,128
   4c924:	01000e04 	movi	r4,56
   4c928:	2080a90e 	bge	r4,r2,4cbd0 <__subdf3+0x504>
   4c92c:	298cb03a 	or	r6,r5,r6
   4c930:	3012c03a 	cmpne	r9,r6,zero
   4c934:	0005883a 	mov	r2,zero
   4c938:	4c53883a 	add	r9,r9,r17
   4c93c:	4c63803a 	cmpltu	r17,r9,r17
   4c940:	10c7883a 	add	r3,r2,r3
   4c944:	88c7883a 	add	r3,r17,r3
   4c948:	4823883a 	mov	r17,r9
   4c94c:	1880202c 	andhi	r2,r3,128
   4c950:	1000d026 	beq	r2,zero,4cc94 <__subdf3+0x5c8>
   4c954:	84000044 	addi	r16,r16,1
   4c958:	0081ffc4 	movi	r2,2047
   4c95c:	8080fe26 	beq	r16,r2,4cd58 <__subdf3+0x68c>
   4c960:	00bfe034 	movhi	r2,65408
   4c964:	10bfffc4 	addi	r2,r2,-1
   4c968:	1886703a 	and	r3,r3,r2
   4c96c:	880ad07a 	srli	r5,r17,1
   4c970:	180497fa 	slli	r2,r3,31
   4c974:	8900004c 	andi	r4,r17,1
   4c978:	2922b03a 	or	r17,r5,r4
   4c97c:	1806d07a 	srli	r3,r3,1
   4c980:	1462b03a 	or	r17,r2,r17
   4c984:	3825883a 	mov	r18,r7
   4c988:	003f7106 	br	4c750 <__alt_data_end+0xffff0390>
   4c98c:	2984b03a 	or	r2,r5,r6
   4c990:	103f6826 	beq	r2,zero,4c734 <__alt_data_end+0xffff0374>
   4c994:	39c03fcc 	andi	r7,r7,255
   4c998:	003f6706 	br	4c738 <__alt_data_end+0xffff0378>
   4c99c:	4086b03a 	or	r3,r8,r2
   4c9a0:	18015226 	beq	r3,zero,4ceec <__subdf3+0x820>
   4c9a4:	00c00434 	movhi	r3,16
   4c9a8:	41400234 	orhi	r5,r8,8
   4c9ac:	18ffffc4 	addi	r3,r3,-1
   4c9b0:	28ca703a 	and	r5,r5,r3
   4c9b4:	003f7e06 	br	4c7b0 <__alt_data_end+0xffff03f0>
   4c9b8:	10bfffc4 	addi	r2,r2,-1
   4c9bc:	1000491e 	bne	r2,zero,4cae4 <__subdf3+0x418>
   4c9c0:	898fc83a 	sub	r7,r17,r6
   4c9c4:	89e3803a 	cmpltu	r17,r17,r7
   4c9c8:	1947c83a 	sub	r3,r3,r5
   4c9cc:	1c47c83a 	sub	r3,r3,r17
   4c9d0:	3823883a 	mov	r17,r7
   4c9d4:	003f9b06 	br	4c844 <__alt_data_end+0xffff0484>
   4c9d8:	2988b03a 	or	r4,r5,r6
   4c9dc:	203f5c26 	beq	r4,zero,4c750 <__alt_data_end+0xffff0390>
   4c9e0:	10bfffc4 	addi	r2,r2,-1
   4c9e4:	1000931e 	bne	r2,zero,4cc34 <__subdf3+0x568>
   4c9e8:	898d883a 	add	r6,r17,r6
   4c9ec:	3463803a 	cmpltu	r17,r6,r17
   4c9f0:	1947883a 	add	r3,r3,r5
   4c9f4:	88c7883a 	add	r3,r17,r3
   4c9f8:	3023883a 	mov	r17,r6
   4c9fc:	003fd306 	br	4c94c <__alt_data_end+0xffff058c>
   4ca00:	1000541e 	bne	r2,zero,4cb54 <__subdf3+0x488>
   4ca04:	80800044 	addi	r2,r16,1
   4ca08:	1081ffcc 	andi	r2,r2,2047
   4ca0c:	01000044 	movi	r4,1
   4ca10:	2080a20e 	bge	r4,r2,4cc9c <__subdf3+0x5d0>
   4ca14:	8989c83a 	sub	r4,r17,r6
   4ca18:	8905803a 	cmpltu	r2,r17,r4
   4ca1c:	1967c83a 	sub	r19,r3,r5
   4ca20:	98a7c83a 	sub	r19,r19,r2
   4ca24:	9880202c 	andhi	r2,r19,128
   4ca28:	10006326 	beq	r2,zero,4cbb8 <__subdf3+0x4ec>
   4ca2c:	3463c83a 	sub	r17,r6,r17
   4ca30:	28c7c83a 	sub	r3,r5,r3
   4ca34:	344d803a 	cmpltu	r6,r6,r17
   4ca38:	19a7c83a 	sub	r19,r3,r6
   4ca3c:	3825883a 	mov	r18,r7
   4ca40:	983f861e 	bne	r19,zero,4c85c <__alt_data_end+0xffff049c>
   4ca44:	8809883a 	mov	r4,r17
   4ca48:	004d1cc0 	call	4d1cc <__clzsi2>
   4ca4c:	10800804 	addi	r2,r2,32
   4ca50:	113ffe04 	addi	r4,r2,-8
   4ca54:	00c007c4 	movi	r3,31
   4ca58:	193f850e 	bge	r3,r4,4c870 <__alt_data_end+0xffff04b0>
   4ca5c:	10bff604 	addi	r2,r2,-40
   4ca60:	8884983a 	sll	r2,r17,r2
   4ca64:	0023883a 	mov	r17,zero
   4ca68:	243f880e 	bge	r4,r16,4c88c <__alt_data_end+0xffff04cc>
   4ca6c:	00ffe034 	movhi	r3,65408
   4ca70:	18ffffc4 	addi	r3,r3,-1
   4ca74:	8121c83a 	sub	r16,r16,r4
   4ca78:	10c6703a 	and	r3,r2,r3
   4ca7c:	003f3406 	br	4c750 <__alt_data_end+0xffff0390>
   4ca80:	9100004c 	andi	r4,r18,1
   4ca84:	000b883a 	mov	r5,zero
   4ca88:	0005883a 	mov	r2,zero
   4ca8c:	003f4806 	br	4c7b0 <__alt_data_end+0xffff03f0>
   4ca90:	298cb03a 	or	r6,r5,r6
   4ca94:	300cc03a 	cmpne	r6,r6,zero
   4ca98:	0005883a 	mov	r2,zero
   4ca9c:	003f6406 	br	4c830 <__alt_data_end+0xffff0470>
   4caa0:	10009a1e 	bne	r2,zero,4cd0c <__subdf3+0x640>
   4caa4:	82400044 	addi	r9,r16,1
   4caa8:	4881ffcc 	andi	r2,r9,2047
   4caac:	02800044 	movi	r10,1
   4cab0:	5080670e 	bge	r10,r2,4cc50 <__subdf3+0x584>
   4cab4:	0081ffc4 	movi	r2,2047
   4cab8:	4880af26 	beq	r9,r2,4cd78 <__subdf3+0x6ac>
   4cabc:	898d883a 	add	r6,r17,r6
   4cac0:	1945883a 	add	r2,r3,r5
   4cac4:	3447803a 	cmpltu	r3,r6,r17
   4cac8:	1887883a 	add	r3,r3,r2
   4cacc:	182297fa 	slli	r17,r3,31
   4cad0:	300cd07a 	srli	r6,r6,1
   4cad4:	1806d07a 	srli	r3,r3,1
   4cad8:	4821883a 	mov	r16,r9
   4cadc:	89a2b03a 	or	r17,r17,r6
   4cae0:	003f1b06 	br	4c750 <__alt_data_end+0xffff0390>
   4cae4:	0101ffc4 	movi	r4,2047
   4cae8:	813f441e 	bne	r16,r4,4c7fc <__alt_data_end+0xffff043c>
   4caec:	003f1806 	br	4c750 <__alt_data_end+0xffff0390>
   4caf0:	843ff844 	addi	r16,r16,-31
   4caf4:	01400804 	movi	r5,32
   4caf8:	1408d83a 	srl	r4,r2,r16
   4cafc:	19405026 	beq	r3,r5,4cc40 <__subdf3+0x574>
   4cb00:	01401004 	movi	r5,64
   4cb04:	28c7c83a 	sub	r3,r5,r3
   4cb08:	10c4983a 	sll	r2,r2,r3
   4cb0c:	88a2b03a 	or	r17,r17,r2
   4cb10:	8822c03a 	cmpne	r17,r17,zero
   4cb14:	2462b03a 	or	r17,r4,r17
   4cb18:	0007883a 	mov	r3,zero
   4cb1c:	0021883a 	mov	r16,zero
   4cb20:	003f6d06 	br	4c8d8 <__alt_data_end+0xffff0518>
   4cb24:	11fff804 	addi	r7,r2,-32
   4cb28:	01000804 	movi	r4,32
   4cb2c:	29ced83a 	srl	r7,r5,r7
   4cb30:	11004526 	beq	r2,r4,4cc48 <__subdf3+0x57c>
   4cb34:	01001004 	movi	r4,64
   4cb38:	2089c83a 	sub	r4,r4,r2
   4cb3c:	2904983a 	sll	r2,r5,r4
   4cb40:	118cb03a 	or	r6,r2,r6
   4cb44:	300cc03a 	cmpne	r6,r6,zero
   4cb48:	398cb03a 	or	r6,r7,r6
   4cb4c:	0005883a 	mov	r2,zero
   4cb50:	003f3706 	br	4c830 <__alt_data_end+0xffff0470>
   4cb54:	80002a26 	beq	r16,zero,4cc00 <__subdf3+0x534>
   4cb58:	0101ffc4 	movi	r4,2047
   4cb5c:	49006626 	beq	r9,r4,4ccf8 <__subdf3+0x62c>
   4cb60:	0085c83a 	sub	r2,zero,r2
   4cb64:	18c02034 	orhi	r3,r3,128
   4cb68:	01000e04 	movi	r4,56
   4cb6c:	20807e16 	blt	r4,r2,4cd68 <__subdf3+0x69c>
   4cb70:	010007c4 	movi	r4,31
   4cb74:	2080e716 	blt	r4,r2,4cf14 <__subdf3+0x848>
   4cb78:	01000804 	movi	r4,32
   4cb7c:	2089c83a 	sub	r4,r4,r2
   4cb80:	1914983a 	sll	r10,r3,r4
   4cb84:	8890d83a 	srl	r8,r17,r2
   4cb88:	8908983a 	sll	r4,r17,r4
   4cb8c:	1884d83a 	srl	r2,r3,r2
   4cb90:	5222b03a 	or	r17,r10,r8
   4cb94:	2006c03a 	cmpne	r3,r4,zero
   4cb98:	88e2b03a 	or	r17,r17,r3
   4cb9c:	3463c83a 	sub	r17,r6,r17
   4cba0:	2885c83a 	sub	r2,r5,r2
   4cba4:	344d803a 	cmpltu	r6,r6,r17
   4cba8:	1187c83a 	sub	r3,r2,r6
   4cbac:	4821883a 	mov	r16,r9
   4cbb0:	3825883a 	mov	r18,r7
   4cbb4:	003f2306 	br	4c844 <__alt_data_end+0xffff0484>
   4cbb8:	24d0b03a 	or	r8,r4,r19
   4cbbc:	40001b1e 	bne	r8,zero,4cc2c <__subdf3+0x560>
   4cbc0:	0005883a 	mov	r2,zero
   4cbc4:	0009883a 	mov	r4,zero
   4cbc8:	0021883a 	mov	r16,zero
   4cbcc:	003f4906 	br	4c8f4 <__alt_data_end+0xffff0534>
   4cbd0:	010007c4 	movi	r4,31
   4cbd4:	20803a16 	blt	r4,r2,4ccc0 <__subdf3+0x5f4>
   4cbd8:	01000804 	movi	r4,32
   4cbdc:	2089c83a 	sub	r4,r4,r2
   4cbe0:	2912983a 	sll	r9,r5,r4
   4cbe4:	3090d83a 	srl	r8,r6,r2
   4cbe8:	3108983a 	sll	r4,r6,r4
   4cbec:	2884d83a 	srl	r2,r5,r2
   4cbf0:	4a12b03a 	or	r9,r9,r8
   4cbf4:	2008c03a 	cmpne	r4,r4,zero
   4cbf8:	4912b03a 	or	r9,r9,r4
   4cbfc:	003f4e06 	br	4c938 <__alt_data_end+0xffff0578>
   4cc00:	1c48b03a 	or	r4,r3,r17
   4cc04:	20003c26 	beq	r4,zero,4ccf8 <__subdf3+0x62c>
   4cc08:	0084303a 	nor	r2,zero,r2
   4cc0c:	1000381e 	bne	r2,zero,4ccf0 <__subdf3+0x624>
   4cc10:	3463c83a 	sub	r17,r6,r17
   4cc14:	28c5c83a 	sub	r2,r5,r3
   4cc18:	344d803a 	cmpltu	r6,r6,r17
   4cc1c:	1187c83a 	sub	r3,r2,r6
   4cc20:	4821883a 	mov	r16,r9
   4cc24:	3825883a 	mov	r18,r7
   4cc28:	003f0606 	br	4c844 <__alt_data_end+0xffff0484>
   4cc2c:	2023883a 	mov	r17,r4
   4cc30:	003f0906 	br	4c858 <__alt_data_end+0xffff0498>
   4cc34:	0101ffc4 	movi	r4,2047
   4cc38:	813f3a1e 	bne	r16,r4,4c924 <__alt_data_end+0xffff0564>
   4cc3c:	003ec406 	br	4c750 <__alt_data_end+0xffff0390>
   4cc40:	0005883a 	mov	r2,zero
   4cc44:	003fb106 	br	4cb0c <__alt_data_end+0xffff074c>
   4cc48:	0005883a 	mov	r2,zero
   4cc4c:	003fbc06 	br	4cb40 <__alt_data_end+0xffff0780>
   4cc50:	1c44b03a 	or	r2,r3,r17
   4cc54:	80008e1e 	bne	r16,zero,4ce90 <__subdf3+0x7c4>
   4cc58:	1000c826 	beq	r2,zero,4cf7c <__subdf3+0x8b0>
   4cc5c:	2984b03a 	or	r2,r5,r6
   4cc60:	103ebb26 	beq	r2,zero,4c750 <__alt_data_end+0xffff0390>
   4cc64:	8989883a 	add	r4,r17,r6
   4cc68:	1945883a 	add	r2,r3,r5
   4cc6c:	2447803a 	cmpltu	r3,r4,r17
   4cc70:	1887883a 	add	r3,r3,r2
   4cc74:	1880202c 	andhi	r2,r3,128
   4cc78:	2023883a 	mov	r17,r4
   4cc7c:	103f1626 	beq	r2,zero,4c8d8 <__alt_data_end+0xffff0518>
   4cc80:	00bfe034 	movhi	r2,65408
   4cc84:	10bfffc4 	addi	r2,r2,-1
   4cc88:	5021883a 	mov	r16,r10
   4cc8c:	1886703a 	and	r3,r3,r2
   4cc90:	003eaf06 	br	4c750 <__alt_data_end+0xffff0390>
   4cc94:	3825883a 	mov	r18,r7
   4cc98:	003f0f06 	br	4c8d8 <__alt_data_end+0xffff0518>
   4cc9c:	1c44b03a 	or	r2,r3,r17
   4cca0:	8000251e 	bne	r16,zero,4cd38 <__subdf3+0x66c>
   4cca4:	1000661e 	bne	r2,zero,4ce40 <__subdf3+0x774>
   4cca8:	2990b03a 	or	r8,r5,r6
   4ccac:	40009626 	beq	r8,zero,4cf08 <__subdf3+0x83c>
   4ccb0:	2807883a 	mov	r3,r5
   4ccb4:	3023883a 	mov	r17,r6
   4ccb8:	3825883a 	mov	r18,r7
   4ccbc:	003ea406 	br	4c750 <__alt_data_end+0xffff0390>
   4ccc0:	127ff804 	addi	r9,r2,-32
   4ccc4:	01000804 	movi	r4,32
   4ccc8:	2a52d83a 	srl	r9,r5,r9
   4cccc:	11008c26 	beq	r2,r4,4cf00 <__subdf3+0x834>
   4ccd0:	01001004 	movi	r4,64
   4ccd4:	2085c83a 	sub	r2,r4,r2
   4ccd8:	2884983a 	sll	r2,r5,r2
   4ccdc:	118cb03a 	or	r6,r2,r6
   4cce0:	300cc03a 	cmpne	r6,r6,zero
   4cce4:	4992b03a 	or	r9,r9,r6
   4cce8:	0005883a 	mov	r2,zero
   4ccec:	003f1206 	br	4c938 <__alt_data_end+0xffff0578>
   4ccf0:	0101ffc4 	movi	r4,2047
   4ccf4:	493f9c1e 	bne	r9,r4,4cb68 <__alt_data_end+0xffff07a8>
   4ccf8:	2807883a 	mov	r3,r5
   4ccfc:	3023883a 	mov	r17,r6
   4cd00:	4821883a 	mov	r16,r9
   4cd04:	3825883a 	mov	r18,r7
   4cd08:	003e9106 	br	4c750 <__alt_data_end+0xffff0390>
   4cd0c:	80001f1e 	bne	r16,zero,4cd8c <__subdf3+0x6c0>
   4cd10:	1c48b03a 	or	r4,r3,r17
   4cd14:	20005a26 	beq	r4,zero,4ce80 <__subdf3+0x7b4>
   4cd18:	0084303a 	nor	r2,zero,r2
   4cd1c:	1000561e 	bne	r2,zero,4ce78 <__subdf3+0x7ac>
   4cd20:	89a3883a 	add	r17,r17,r6
   4cd24:	1945883a 	add	r2,r3,r5
   4cd28:	898d803a 	cmpltu	r6,r17,r6
   4cd2c:	3087883a 	add	r3,r6,r2
   4cd30:	4821883a 	mov	r16,r9
   4cd34:	003f0506 	br	4c94c <__alt_data_end+0xffff058c>
   4cd38:	10002b1e 	bne	r2,zero,4cde8 <__subdf3+0x71c>
   4cd3c:	2984b03a 	or	r2,r5,r6
   4cd40:	10008026 	beq	r2,zero,4cf44 <__subdf3+0x878>
   4cd44:	2807883a 	mov	r3,r5
   4cd48:	3023883a 	mov	r17,r6
   4cd4c:	3825883a 	mov	r18,r7
   4cd50:	0401ffc4 	movi	r16,2047
   4cd54:	003e7e06 	br	4c750 <__alt_data_end+0xffff0390>
   4cd58:	3809883a 	mov	r4,r7
   4cd5c:	0011883a 	mov	r8,zero
   4cd60:	0005883a 	mov	r2,zero
   4cd64:	003ee306 	br	4c8f4 <__alt_data_end+0xffff0534>
   4cd68:	1c62b03a 	or	r17,r3,r17
   4cd6c:	8822c03a 	cmpne	r17,r17,zero
   4cd70:	0005883a 	mov	r2,zero
   4cd74:	003f8906 	br	4cb9c <__alt_data_end+0xffff07dc>
   4cd78:	3809883a 	mov	r4,r7
   4cd7c:	4821883a 	mov	r16,r9
   4cd80:	0011883a 	mov	r8,zero
   4cd84:	0005883a 	mov	r2,zero
   4cd88:	003eda06 	br	4c8f4 <__alt_data_end+0xffff0534>
   4cd8c:	0101ffc4 	movi	r4,2047
   4cd90:	49003b26 	beq	r9,r4,4ce80 <__subdf3+0x7b4>
   4cd94:	0085c83a 	sub	r2,zero,r2
   4cd98:	18c02034 	orhi	r3,r3,128
   4cd9c:	01000e04 	movi	r4,56
   4cda0:	20806e16 	blt	r4,r2,4cf5c <__subdf3+0x890>
   4cda4:	010007c4 	movi	r4,31
   4cda8:	20807716 	blt	r4,r2,4cf88 <__subdf3+0x8bc>
   4cdac:	01000804 	movi	r4,32
   4cdb0:	2089c83a 	sub	r4,r4,r2
   4cdb4:	1914983a 	sll	r10,r3,r4
   4cdb8:	8890d83a 	srl	r8,r17,r2
   4cdbc:	8908983a 	sll	r4,r17,r4
   4cdc0:	1884d83a 	srl	r2,r3,r2
   4cdc4:	5222b03a 	or	r17,r10,r8
   4cdc8:	2006c03a 	cmpne	r3,r4,zero
   4cdcc:	88e2b03a 	or	r17,r17,r3
   4cdd0:	89a3883a 	add	r17,r17,r6
   4cdd4:	1145883a 	add	r2,r2,r5
   4cdd8:	898d803a 	cmpltu	r6,r17,r6
   4cddc:	3087883a 	add	r3,r6,r2
   4cde0:	4821883a 	mov	r16,r9
   4cde4:	003ed906 	br	4c94c <__alt_data_end+0xffff058c>
   4cde8:	2984b03a 	or	r2,r5,r6
   4cdec:	10004226 	beq	r2,zero,4cef8 <__subdf3+0x82c>
   4cdf0:	1808d0fa 	srli	r4,r3,3
   4cdf4:	8822d0fa 	srli	r17,r17,3
   4cdf8:	1806977a 	slli	r3,r3,29
   4cdfc:	2080022c 	andhi	r2,r4,8
   4ce00:	1c62b03a 	or	r17,r3,r17
   4ce04:	10000826 	beq	r2,zero,4ce28 <__subdf3+0x75c>
   4ce08:	2812d0fa 	srli	r9,r5,3
   4ce0c:	4880022c 	andhi	r2,r9,8
   4ce10:	1000051e 	bne	r2,zero,4ce28 <__subdf3+0x75c>
   4ce14:	300cd0fa 	srli	r6,r6,3
   4ce18:	2804977a 	slli	r2,r5,29
   4ce1c:	4809883a 	mov	r4,r9
   4ce20:	3825883a 	mov	r18,r7
   4ce24:	11a2b03a 	or	r17,r2,r6
   4ce28:	8806d77a 	srli	r3,r17,29
   4ce2c:	200890fa 	slli	r4,r4,3
   4ce30:	882290fa 	slli	r17,r17,3
   4ce34:	0401ffc4 	movi	r16,2047
   4ce38:	1906b03a 	or	r3,r3,r4
   4ce3c:	003e4406 	br	4c750 <__alt_data_end+0xffff0390>
   4ce40:	2984b03a 	or	r2,r5,r6
   4ce44:	103e4226 	beq	r2,zero,4c750 <__alt_data_end+0xffff0390>
   4ce48:	8989c83a 	sub	r4,r17,r6
   4ce4c:	8911803a 	cmpltu	r8,r17,r4
   4ce50:	1945c83a 	sub	r2,r3,r5
   4ce54:	1205c83a 	sub	r2,r2,r8
   4ce58:	1200202c 	andhi	r8,r2,128
   4ce5c:	403e9a26 	beq	r8,zero,4c8c8 <__alt_data_end+0xffff0508>
   4ce60:	3463c83a 	sub	r17,r6,r17
   4ce64:	28c5c83a 	sub	r2,r5,r3
   4ce68:	344d803a 	cmpltu	r6,r6,r17
   4ce6c:	1187c83a 	sub	r3,r2,r6
   4ce70:	3825883a 	mov	r18,r7
   4ce74:	003e3606 	br	4c750 <__alt_data_end+0xffff0390>
   4ce78:	0101ffc4 	movi	r4,2047
   4ce7c:	493fc71e 	bne	r9,r4,4cd9c <__alt_data_end+0xffff09dc>
   4ce80:	2807883a 	mov	r3,r5
   4ce84:	3023883a 	mov	r17,r6
   4ce88:	4821883a 	mov	r16,r9
   4ce8c:	003e3006 	br	4c750 <__alt_data_end+0xffff0390>
   4ce90:	10003626 	beq	r2,zero,4cf6c <__subdf3+0x8a0>
   4ce94:	2984b03a 	or	r2,r5,r6
   4ce98:	10001726 	beq	r2,zero,4cef8 <__subdf3+0x82c>
   4ce9c:	1808d0fa 	srli	r4,r3,3
   4cea0:	8822d0fa 	srli	r17,r17,3
   4cea4:	1806977a 	slli	r3,r3,29
   4cea8:	2080022c 	andhi	r2,r4,8
   4ceac:	1c62b03a 	or	r17,r3,r17
   4ceb0:	10000726 	beq	r2,zero,4ced0 <__subdf3+0x804>
   4ceb4:	2812d0fa 	srli	r9,r5,3
   4ceb8:	4880022c 	andhi	r2,r9,8
   4cebc:	1000041e 	bne	r2,zero,4ced0 <__subdf3+0x804>
   4cec0:	300cd0fa 	srli	r6,r6,3
   4cec4:	2804977a 	slli	r2,r5,29
   4cec8:	4809883a 	mov	r4,r9
   4cecc:	11a2b03a 	or	r17,r2,r6
   4ced0:	8806d77a 	srli	r3,r17,29
   4ced4:	200890fa 	slli	r4,r4,3
   4ced8:	882290fa 	slli	r17,r17,3
   4cedc:	3825883a 	mov	r18,r7
   4cee0:	1906b03a 	or	r3,r3,r4
   4cee4:	0401ffc4 	movi	r16,2047
   4cee8:	003e1906 	br	4c750 <__alt_data_end+0xffff0390>
   4ceec:	000b883a 	mov	r5,zero
   4cef0:	0005883a 	mov	r2,zero
   4cef4:	003e2e06 	br	4c7b0 <__alt_data_end+0xffff03f0>
   4cef8:	0401ffc4 	movi	r16,2047
   4cefc:	003e1406 	br	4c750 <__alt_data_end+0xffff0390>
   4cf00:	0005883a 	mov	r2,zero
   4cf04:	003f7506 	br	4ccdc <__alt_data_end+0xffff091c>
   4cf08:	0005883a 	mov	r2,zero
   4cf0c:	0009883a 	mov	r4,zero
   4cf10:	003e7806 	br	4c8f4 <__alt_data_end+0xffff0534>
   4cf14:	123ff804 	addi	r8,r2,-32
   4cf18:	01000804 	movi	r4,32
   4cf1c:	1a10d83a 	srl	r8,r3,r8
   4cf20:	11002526 	beq	r2,r4,4cfb8 <__subdf3+0x8ec>
   4cf24:	01001004 	movi	r4,64
   4cf28:	2085c83a 	sub	r2,r4,r2
   4cf2c:	1884983a 	sll	r2,r3,r2
   4cf30:	1444b03a 	or	r2,r2,r17
   4cf34:	1004c03a 	cmpne	r2,r2,zero
   4cf38:	40a2b03a 	or	r17,r8,r2
   4cf3c:	0005883a 	mov	r2,zero
   4cf40:	003f1606 	br	4cb9c <__alt_data_end+0xffff07dc>
   4cf44:	02000434 	movhi	r8,16
   4cf48:	0009883a 	mov	r4,zero
   4cf4c:	423fffc4 	addi	r8,r8,-1
   4cf50:	00bfffc4 	movi	r2,-1
   4cf54:	0401ffc4 	movi	r16,2047
   4cf58:	003e6606 	br	4c8f4 <__alt_data_end+0xffff0534>
   4cf5c:	1c62b03a 	or	r17,r3,r17
   4cf60:	8822c03a 	cmpne	r17,r17,zero
   4cf64:	0005883a 	mov	r2,zero
   4cf68:	003f9906 	br	4cdd0 <__alt_data_end+0xffff0a10>
   4cf6c:	2807883a 	mov	r3,r5
   4cf70:	3023883a 	mov	r17,r6
   4cf74:	0401ffc4 	movi	r16,2047
   4cf78:	003df506 	br	4c750 <__alt_data_end+0xffff0390>
   4cf7c:	2807883a 	mov	r3,r5
   4cf80:	3023883a 	mov	r17,r6
   4cf84:	003df206 	br	4c750 <__alt_data_end+0xffff0390>
   4cf88:	123ff804 	addi	r8,r2,-32
   4cf8c:	01000804 	movi	r4,32
   4cf90:	1a10d83a 	srl	r8,r3,r8
   4cf94:	11000a26 	beq	r2,r4,4cfc0 <__subdf3+0x8f4>
   4cf98:	01001004 	movi	r4,64
   4cf9c:	2085c83a 	sub	r2,r4,r2
   4cfa0:	1884983a 	sll	r2,r3,r2
   4cfa4:	1444b03a 	or	r2,r2,r17
   4cfa8:	1004c03a 	cmpne	r2,r2,zero
   4cfac:	40a2b03a 	or	r17,r8,r2
   4cfb0:	0005883a 	mov	r2,zero
   4cfb4:	003f8606 	br	4cdd0 <__alt_data_end+0xffff0a10>
   4cfb8:	0005883a 	mov	r2,zero
   4cfbc:	003fdc06 	br	4cf30 <__alt_data_end+0xffff0b70>
   4cfc0:	0005883a 	mov	r2,zero
   4cfc4:	003ff706 	br	4cfa4 <__alt_data_end+0xffff0be4>

0004cfc8 <__fixdfsi>:
   4cfc8:	280cd53a 	srli	r6,r5,20
   4cfcc:	00c00434 	movhi	r3,16
   4cfd0:	18ffffc4 	addi	r3,r3,-1
   4cfd4:	3181ffcc 	andi	r6,r6,2047
   4cfd8:	01c0ff84 	movi	r7,1022
   4cfdc:	28c6703a 	and	r3,r5,r3
   4cfe0:	280ad7fa 	srli	r5,r5,31
   4cfe4:	3980120e 	bge	r7,r6,4d030 <__fixdfsi+0x68>
   4cfe8:	00810744 	movi	r2,1053
   4cfec:	11800c16 	blt	r2,r6,4d020 <__fixdfsi+0x58>
   4cff0:	00810cc4 	movi	r2,1075
   4cff4:	1185c83a 	sub	r2,r2,r6
   4cff8:	01c007c4 	movi	r7,31
   4cffc:	18c00434 	orhi	r3,r3,16
   4d000:	38800d16 	blt	r7,r2,4d038 <__fixdfsi+0x70>
   4d004:	31befb44 	addi	r6,r6,-1043
   4d008:	2084d83a 	srl	r2,r4,r2
   4d00c:	1986983a 	sll	r3,r3,r6
   4d010:	1884b03a 	or	r2,r3,r2
   4d014:	28000726 	beq	r5,zero,4d034 <__fixdfsi+0x6c>
   4d018:	0085c83a 	sub	r2,zero,r2
   4d01c:	f800283a 	ret
   4d020:	00a00034 	movhi	r2,32768
   4d024:	10bfffc4 	addi	r2,r2,-1
   4d028:	2885883a 	add	r2,r5,r2
   4d02c:	f800283a 	ret
   4d030:	0005883a 	mov	r2,zero
   4d034:	f800283a 	ret
   4d038:	008104c4 	movi	r2,1043
   4d03c:	1185c83a 	sub	r2,r2,r6
   4d040:	1884d83a 	srl	r2,r3,r2
   4d044:	003ff306 	br	4d014 <__alt_data_end+0xffff0c54>

0004d048 <__floatsidf>:
   4d048:	defffd04 	addi	sp,sp,-12
   4d04c:	dfc00215 	stw	ra,8(sp)
   4d050:	dc400115 	stw	r17,4(sp)
   4d054:	dc000015 	stw	r16,0(sp)
   4d058:	20002b26 	beq	r4,zero,4d108 <__floatsidf+0xc0>
   4d05c:	2023883a 	mov	r17,r4
   4d060:	2020d7fa 	srli	r16,r4,31
   4d064:	20002d16 	blt	r4,zero,4d11c <__floatsidf+0xd4>
   4d068:	8809883a 	mov	r4,r17
   4d06c:	004d1cc0 	call	4d1cc <__clzsi2>
   4d070:	01410784 	movi	r5,1054
   4d074:	288bc83a 	sub	r5,r5,r2
   4d078:	01010cc4 	movi	r4,1075
   4d07c:	2149c83a 	sub	r4,r4,r5
   4d080:	00c007c4 	movi	r3,31
   4d084:	1900160e 	bge	r3,r4,4d0e0 <__floatsidf+0x98>
   4d088:	00c104c4 	movi	r3,1043
   4d08c:	1947c83a 	sub	r3,r3,r5
   4d090:	88c6983a 	sll	r3,r17,r3
   4d094:	00800434 	movhi	r2,16
   4d098:	10bfffc4 	addi	r2,r2,-1
   4d09c:	1886703a 	and	r3,r3,r2
   4d0a0:	2941ffcc 	andi	r5,r5,2047
   4d0a4:	800d883a 	mov	r6,r16
   4d0a8:	0005883a 	mov	r2,zero
   4d0ac:	280a953a 	slli	r5,r5,20
   4d0b0:	31803fcc 	andi	r6,r6,255
   4d0b4:	01000434 	movhi	r4,16
   4d0b8:	300c97fa 	slli	r6,r6,31
   4d0bc:	213fffc4 	addi	r4,r4,-1
   4d0c0:	1906703a 	and	r3,r3,r4
   4d0c4:	1946b03a 	or	r3,r3,r5
   4d0c8:	1986b03a 	or	r3,r3,r6
   4d0cc:	dfc00217 	ldw	ra,8(sp)
   4d0d0:	dc400117 	ldw	r17,4(sp)
   4d0d4:	dc000017 	ldw	r16,0(sp)
   4d0d8:	dec00304 	addi	sp,sp,12
   4d0dc:	f800283a 	ret
   4d0e0:	00c002c4 	movi	r3,11
   4d0e4:	1887c83a 	sub	r3,r3,r2
   4d0e8:	88c6d83a 	srl	r3,r17,r3
   4d0ec:	8904983a 	sll	r2,r17,r4
   4d0f0:	01000434 	movhi	r4,16
   4d0f4:	213fffc4 	addi	r4,r4,-1
   4d0f8:	2941ffcc 	andi	r5,r5,2047
   4d0fc:	1906703a 	and	r3,r3,r4
   4d100:	800d883a 	mov	r6,r16
   4d104:	003fe906 	br	4d0ac <__alt_data_end+0xffff0cec>
   4d108:	000d883a 	mov	r6,zero
   4d10c:	000b883a 	mov	r5,zero
   4d110:	0007883a 	mov	r3,zero
   4d114:	0005883a 	mov	r2,zero
   4d118:	003fe406 	br	4d0ac <__alt_data_end+0xffff0cec>
   4d11c:	0123c83a 	sub	r17,zero,r4
   4d120:	003fd106 	br	4d068 <__alt_data_end+0xffff0ca8>

0004d124 <__floatunsidf>:
   4d124:	defffe04 	addi	sp,sp,-8
   4d128:	dc000015 	stw	r16,0(sp)
   4d12c:	dfc00115 	stw	ra,4(sp)
   4d130:	2021883a 	mov	r16,r4
   4d134:	20002226 	beq	r4,zero,4d1c0 <__floatunsidf+0x9c>
   4d138:	004d1cc0 	call	4d1cc <__clzsi2>
   4d13c:	01010784 	movi	r4,1054
   4d140:	2089c83a 	sub	r4,r4,r2
   4d144:	01810cc4 	movi	r6,1075
   4d148:	310dc83a 	sub	r6,r6,r4
   4d14c:	00c007c4 	movi	r3,31
   4d150:	1980120e 	bge	r3,r6,4d19c <__floatunsidf+0x78>
   4d154:	00c104c4 	movi	r3,1043
   4d158:	1907c83a 	sub	r3,r3,r4
   4d15c:	80ca983a 	sll	r5,r16,r3
   4d160:	00800434 	movhi	r2,16
   4d164:	10bfffc4 	addi	r2,r2,-1
   4d168:	2101ffcc 	andi	r4,r4,2047
   4d16c:	0021883a 	mov	r16,zero
   4d170:	288a703a 	and	r5,r5,r2
   4d174:	2008953a 	slli	r4,r4,20
   4d178:	00c00434 	movhi	r3,16
   4d17c:	18ffffc4 	addi	r3,r3,-1
   4d180:	28c6703a 	and	r3,r5,r3
   4d184:	8005883a 	mov	r2,r16
   4d188:	1906b03a 	or	r3,r3,r4
   4d18c:	dfc00117 	ldw	ra,4(sp)
   4d190:	dc000017 	ldw	r16,0(sp)
   4d194:	dec00204 	addi	sp,sp,8
   4d198:	f800283a 	ret
   4d19c:	00c002c4 	movi	r3,11
   4d1a0:	188bc83a 	sub	r5,r3,r2
   4d1a4:	814ad83a 	srl	r5,r16,r5
   4d1a8:	00c00434 	movhi	r3,16
   4d1ac:	18ffffc4 	addi	r3,r3,-1
   4d1b0:	81a0983a 	sll	r16,r16,r6
   4d1b4:	2101ffcc 	andi	r4,r4,2047
   4d1b8:	28ca703a 	and	r5,r5,r3
   4d1bc:	003fed06 	br	4d174 <__alt_data_end+0xffff0db4>
   4d1c0:	0009883a 	mov	r4,zero
   4d1c4:	000b883a 	mov	r5,zero
   4d1c8:	003fea06 	br	4d174 <__alt_data_end+0xffff0db4>

0004d1cc <__clzsi2>:
   4d1cc:	00bfffd4 	movui	r2,65535
   4d1d0:	11000536 	bltu	r2,r4,4d1e8 <__clzsi2+0x1c>
   4d1d4:	00803fc4 	movi	r2,255
   4d1d8:	11000f36 	bltu	r2,r4,4d218 <__clzsi2+0x4c>
   4d1dc:	00800804 	movi	r2,32
   4d1e0:	0007883a 	mov	r3,zero
   4d1e4:	00000506 	br	4d1fc <__clzsi2+0x30>
   4d1e8:	00804034 	movhi	r2,256
   4d1ec:	10bfffc4 	addi	r2,r2,-1
   4d1f0:	11000c2e 	bgeu	r2,r4,4d224 <__clzsi2+0x58>
   4d1f4:	00800204 	movi	r2,8
   4d1f8:	00c00604 	movi	r3,24
   4d1fc:	20c8d83a 	srl	r4,r4,r3
   4d200:	00c00174 	movhi	r3,5
   4d204:	18fea504 	addi	r3,r3,-1388
   4d208:	1909883a 	add	r4,r3,r4
   4d20c:	20c00003 	ldbu	r3,0(r4)
   4d210:	10c5c83a 	sub	r2,r2,r3
   4d214:	f800283a 	ret
   4d218:	00800604 	movi	r2,24
   4d21c:	00c00204 	movi	r3,8
   4d220:	003ff606 	br	4d1fc <__alt_data_end+0xffff0e3c>
   4d224:	00800404 	movi	r2,16
   4d228:	1007883a 	mov	r3,r2
   4d22c:	003ff306 	br	4d1fc <__alt_data_end+0xffff0e3c>

0004d230 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d230:	defffe04 	addi	sp,sp,-8
   4d234:	dfc00115 	stw	ra,4(sp)
   4d238:	df000015 	stw	fp,0(sp)
   4d23c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d240:	d0a01117 	ldw	r2,-32700(gp)
   4d244:	10000326 	beq	r2,zero,4d254 <alt_get_errno+0x24>
   4d248:	d0a01117 	ldw	r2,-32700(gp)
   4d24c:	103ee83a 	callr	r2
   4d250:	00000106 	br	4d258 <alt_get_errno+0x28>
   4d254:	d0a72b04 	addi	r2,gp,-25428
}
   4d258:	e037883a 	mov	sp,fp
   4d25c:	dfc00117 	ldw	ra,4(sp)
   4d260:	df000017 	ldw	fp,0(sp)
   4d264:	dec00204 	addi	sp,sp,8
   4d268:	f800283a 	ret

0004d26c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d26c:	defffb04 	addi	sp,sp,-20
   4d270:	dfc00415 	stw	ra,16(sp)
   4d274:	df000315 	stw	fp,12(sp)
   4d278:	df000304 	addi	fp,sp,12
   4d27c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d280:	e0bfff17 	ldw	r2,-4(fp)
   4d284:	10000816 	blt	r2,zero,4d2a8 <close+0x3c>
   4d288:	01400304 	movi	r5,12
   4d28c:	e13fff17 	ldw	r4,-4(fp)
   4d290:	004a9640 	call	4a964 <__mulsi3>
   4d294:	1007883a 	mov	r3,r2
   4d298:	00800174 	movhi	r2,5
   4d29c:	10817004 	addi	r2,r2,1472
   4d2a0:	1885883a 	add	r2,r3,r2
   4d2a4:	00000106 	br	4d2ac <close+0x40>
   4d2a8:	0005883a 	mov	r2,zero
   4d2ac:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4d2b0:	e0bffd17 	ldw	r2,-12(fp)
   4d2b4:	10001926 	beq	r2,zero,4d31c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d2b8:	e0bffd17 	ldw	r2,-12(fp)
   4d2bc:	10800017 	ldw	r2,0(r2)
   4d2c0:	10800417 	ldw	r2,16(r2)
   4d2c4:	10000626 	beq	r2,zero,4d2e0 <close+0x74>
   4d2c8:	e0bffd17 	ldw	r2,-12(fp)
   4d2cc:	10800017 	ldw	r2,0(r2)
   4d2d0:	10800417 	ldw	r2,16(r2)
   4d2d4:	e13ffd17 	ldw	r4,-12(fp)
   4d2d8:	103ee83a 	callr	r2
   4d2dc:	00000106 	br	4d2e4 <close+0x78>
   4d2e0:	0005883a 	mov	r2,zero
   4d2e4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d2e8:	e13fff17 	ldw	r4,-4(fp)
   4d2ec:	004d9540 	call	4d954 <alt_release_fd>
    if (rval < 0)
   4d2f0:	e0bffe17 	ldw	r2,-8(fp)
   4d2f4:	1000070e 	bge	r2,zero,4d314 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   4d2f8:	004d2300 	call	4d230 <alt_get_errno>
   4d2fc:	1007883a 	mov	r3,r2
   4d300:	e0bffe17 	ldw	r2,-8(fp)
   4d304:	0085c83a 	sub	r2,zero,r2
   4d308:	18800015 	stw	r2,0(r3)
      return -1;
   4d30c:	00bfffc4 	movi	r2,-1
   4d310:	00000706 	br	4d330 <close+0xc4>
    }
    return 0;
   4d314:	0005883a 	mov	r2,zero
   4d318:	00000506 	br	4d330 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d31c:	004d2300 	call	4d230 <alt_get_errno>
   4d320:	1007883a 	mov	r3,r2
   4d324:	00801444 	movi	r2,81
   4d328:	18800015 	stw	r2,0(r3)
    return -1;
   4d32c:	00bfffc4 	movi	r2,-1
  }
}
   4d330:	e037883a 	mov	sp,fp
   4d334:	dfc00117 	ldw	ra,4(sp)
   4d338:	df000017 	ldw	fp,0(sp)
   4d33c:	dec00204 	addi	sp,sp,8
   4d340:	f800283a 	ret

0004d344 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d344:	defffc04 	addi	sp,sp,-16
   4d348:	df000315 	stw	fp,12(sp)
   4d34c:	df000304 	addi	fp,sp,12
   4d350:	e13ffd15 	stw	r4,-12(fp)
   4d354:	e17ffe15 	stw	r5,-8(fp)
   4d358:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d35c:	e0bfff17 	ldw	r2,-4(fp)
}
   4d360:	e037883a 	mov	sp,fp
   4d364:	df000017 	ldw	fp,0(sp)
   4d368:	dec00104 	addi	sp,sp,4
   4d36c:	f800283a 	ret

0004d370 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d370:	defffe04 	addi	sp,sp,-8
   4d374:	dfc00115 	stw	ra,4(sp)
   4d378:	df000015 	stw	fp,0(sp)
   4d37c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d380:	d0a01117 	ldw	r2,-32700(gp)
   4d384:	10000326 	beq	r2,zero,4d394 <alt_get_errno+0x24>
   4d388:	d0a01117 	ldw	r2,-32700(gp)
   4d38c:	103ee83a 	callr	r2
   4d390:	00000106 	br	4d398 <alt_get_errno+0x28>
   4d394:	d0a72b04 	addi	r2,gp,-25428
}
   4d398:	e037883a 	mov	sp,fp
   4d39c:	dfc00117 	ldw	ra,4(sp)
   4d3a0:	df000017 	ldw	fp,0(sp)
   4d3a4:	dec00204 	addi	sp,sp,8
   4d3a8:	f800283a 	ret

0004d3ac <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d3ac:	defffb04 	addi	sp,sp,-20
   4d3b0:	dfc00415 	stw	ra,16(sp)
   4d3b4:	df000315 	stw	fp,12(sp)
   4d3b8:	df000304 	addi	fp,sp,12
   4d3bc:	e13ffe15 	stw	r4,-8(fp)
   4d3c0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d3c4:	e0bffe17 	ldw	r2,-8(fp)
   4d3c8:	10000816 	blt	r2,zero,4d3ec <fstat+0x40>
   4d3cc:	01400304 	movi	r5,12
   4d3d0:	e13ffe17 	ldw	r4,-8(fp)
   4d3d4:	004a9640 	call	4a964 <__mulsi3>
   4d3d8:	1007883a 	mov	r3,r2
   4d3dc:	00800174 	movhi	r2,5
   4d3e0:	10817004 	addi	r2,r2,1472
   4d3e4:	1885883a 	add	r2,r3,r2
   4d3e8:	00000106 	br	4d3f0 <fstat+0x44>
   4d3ec:	0005883a 	mov	r2,zero
   4d3f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d3f4:	e0bffd17 	ldw	r2,-12(fp)
   4d3f8:	10001026 	beq	r2,zero,4d43c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d3fc:	e0bffd17 	ldw	r2,-12(fp)
   4d400:	10800017 	ldw	r2,0(r2)
   4d404:	10800817 	ldw	r2,32(r2)
   4d408:	10000726 	beq	r2,zero,4d428 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   4d40c:	e0bffd17 	ldw	r2,-12(fp)
   4d410:	10800017 	ldw	r2,0(r2)
   4d414:	10800817 	ldw	r2,32(r2)
   4d418:	e17fff17 	ldw	r5,-4(fp)
   4d41c:	e13ffd17 	ldw	r4,-12(fp)
   4d420:	103ee83a 	callr	r2
   4d424:	00000a06 	br	4d450 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d428:	e0bfff17 	ldw	r2,-4(fp)
   4d42c:	00c80004 	movi	r3,8192
   4d430:	10c00115 	stw	r3,4(r2)
      return 0;
   4d434:	0005883a 	mov	r2,zero
   4d438:	00000506 	br	4d450 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d43c:	004d3700 	call	4d370 <alt_get_errno>
   4d440:	1007883a 	mov	r3,r2
   4d444:	00801444 	movi	r2,81
   4d448:	18800015 	stw	r2,0(r3)
    return -1;
   4d44c:	00bfffc4 	movi	r2,-1
  }
}
   4d450:	e037883a 	mov	sp,fp
   4d454:	dfc00117 	ldw	ra,4(sp)
   4d458:	df000017 	ldw	fp,0(sp)
   4d45c:	dec00204 	addi	sp,sp,8
   4d460:	f800283a 	ret

0004d464 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d464:	defffe04 	addi	sp,sp,-8
   4d468:	dfc00115 	stw	ra,4(sp)
   4d46c:	df000015 	stw	fp,0(sp)
   4d470:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d474:	d0a01117 	ldw	r2,-32700(gp)
   4d478:	10000326 	beq	r2,zero,4d488 <alt_get_errno+0x24>
   4d47c:	d0a01117 	ldw	r2,-32700(gp)
   4d480:	103ee83a 	callr	r2
   4d484:	00000106 	br	4d48c <alt_get_errno+0x28>
   4d488:	d0a72b04 	addi	r2,gp,-25428
}
   4d48c:	e037883a 	mov	sp,fp
   4d490:	dfc00117 	ldw	ra,4(sp)
   4d494:	df000017 	ldw	fp,0(sp)
   4d498:	dec00204 	addi	sp,sp,8
   4d49c:	f800283a 	ret

0004d4a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d4a0:	deffed04 	addi	sp,sp,-76
   4d4a4:	dfc01215 	stw	ra,72(sp)
   4d4a8:	df001115 	stw	fp,68(sp)
   4d4ac:	df001104 	addi	fp,sp,68
   4d4b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d4b4:	e0bfff17 	ldw	r2,-4(fp)
   4d4b8:	10000816 	blt	r2,zero,4d4dc <isatty+0x3c>
   4d4bc:	01400304 	movi	r5,12
   4d4c0:	e13fff17 	ldw	r4,-4(fp)
   4d4c4:	004a9640 	call	4a964 <__mulsi3>
   4d4c8:	1007883a 	mov	r3,r2
   4d4cc:	00800174 	movhi	r2,5
   4d4d0:	10817004 	addi	r2,r2,1472
   4d4d4:	1885883a 	add	r2,r3,r2
   4d4d8:	00000106 	br	4d4e0 <isatty+0x40>
   4d4dc:	0005883a 	mov	r2,zero
   4d4e0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d4e4:	e0bfef17 	ldw	r2,-68(fp)
   4d4e8:	10000e26 	beq	r2,zero,4d524 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d4ec:	e0bfef17 	ldw	r2,-68(fp)
   4d4f0:	10800017 	ldw	r2,0(r2)
   4d4f4:	10800817 	ldw	r2,32(r2)
   4d4f8:	1000021e 	bne	r2,zero,4d504 <isatty+0x64>
    {
      return 1;
   4d4fc:	00800044 	movi	r2,1
   4d500:	00000d06 	br	4d538 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d504:	e0bff004 	addi	r2,fp,-64
   4d508:	100b883a 	mov	r5,r2
   4d50c:	e13fff17 	ldw	r4,-4(fp)
   4d510:	004d3ac0 	call	4d3ac <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d514:	e0bff117 	ldw	r2,-60(fp)
   4d518:	10880020 	cmpeqi	r2,r2,8192
   4d51c:	10803fcc 	andi	r2,r2,255
   4d520:	00000506 	br	4d538 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d524:	004d4640 	call	4d464 <alt_get_errno>
   4d528:	1007883a 	mov	r3,r2
   4d52c:	00801444 	movi	r2,81
   4d530:	18800015 	stw	r2,0(r3)
    return 0;
   4d534:	0005883a 	mov	r2,zero
  }
}
   4d538:	e037883a 	mov	sp,fp
   4d53c:	dfc00117 	ldw	ra,4(sp)
   4d540:	df000017 	ldw	fp,0(sp)
   4d544:	dec00204 	addi	sp,sp,8
   4d548:	f800283a 	ret

0004d54c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d54c:	defffc04 	addi	sp,sp,-16
   4d550:	df000315 	stw	fp,12(sp)
   4d554:	df000304 	addi	fp,sp,12
   4d558:	e13ffd15 	stw	r4,-12(fp)
   4d55c:	e17ffe15 	stw	r5,-8(fp)
   4d560:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d564:	e0fffe17 	ldw	r3,-8(fp)
   4d568:	e0bffd17 	ldw	r2,-12(fp)
   4d56c:	18800c26 	beq	r3,r2,4d5a0 <alt_load_section+0x54>
  {
    while( to != end )
   4d570:	00000806 	br	4d594 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d574:	e0bffe17 	ldw	r2,-8(fp)
   4d578:	10c00104 	addi	r3,r2,4
   4d57c:	e0fffe15 	stw	r3,-8(fp)
   4d580:	e0fffd17 	ldw	r3,-12(fp)
   4d584:	19000104 	addi	r4,r3,4
   4d588:	e13ffd15 	stw	r4,-12(fp)
   4d58c:	18c00017 	ldw	r3,0(r3)
   4d590:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d594:	e0fffe17 	ldw	r3,-8(fp)
   4d598:	e0bfff17 	ldw	r2,-4(fp)
   4d59c:	18bff51e 	bne	r3,r2,4d574 <__alt_data_end+0xffff11b4>
    {
      *to++ = *from++;
    }
  }
}
   4d5a0:	0001883a 	nop
   4d5a4:	e037883a 	mov	sp,fp
   4d5a8:	df000017 	ldw	fp,0(sp)
   4d5ac:	dec00104 	addi	sp,sp,4
   4d5b0:	f800283a 	ret

0004d5b4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d5b4:	defffe04 	addi	sp,sp,-8
   4d5b8:	dfc00115 	stw	ra,4(sp)
   4d5bc:	df000015 	stw	fp,0(sp)
   4d5c0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d5c4:	01800174 	movhi	r6,5
   4d5c8:	3185fe04 	addi	r6,r6,6136
   4d5cc:	01400174 	movhi	r5,5
   4d5d0:	297ef004 	addi	r5,r5,-1088
   4d5d4:	01000174 	movhi	r4,5
   4d5d8:	2105fe04 	addi	r4,r4,6136
   4d5dc:	004d54c0 	call	4d54c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d5e0:	01800134 	movhi	r6,4
   4d5e4:	31808c04 	addi	r6,r6,560
   4d5e8:	01400134 	movhi	r5,4
   4d5ec:	29400804 	addi	r5,r5,32
   4d5f0:	01000134 	movhi	r4,4
   4d5f4:	21000804 	addi	r4,r4,32
   4d5f8:	004d54c0 	call	4d54c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d5fc:	01800174 	movhi	r6,5
   4d600:	31bef004 	addi	r6,r6,-1088
   4d604:	01400174 	movhi	r5,5
   4d608:	297e3104 	addi	r5,r5,-1852
   4d60c:	01000174 	movhi	r4,5
   4d610:	213e3104 	addi	r4,r4,-1852
   4d614:	004d54c0 	call	4d54c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d618:	004e80c0 	call	4e80c <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d61c:	004e9cc0 	call	4e9cc <alt_icache_flush_all>
}
   4d620:	0001883a 	nop
   4d624:	e037883a 	mov	sp,fp
   4d628:	dfc00117 	ldw	ra,4(sp)
   4d62c:	df000017 	ldw	fp,0(sp)
   4d630:	dec00204 	addi	sp,sp,8
   4d634:	f800283a 	ret

0004d638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d638:	defffe04 	addi	sp,sp,-8
   4d63c:	dfc00115 	stw	ra,4(sp)
   4d640:	df000015 	stw	fp,0(sp)
   4d644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d648:	d0a01117 	ldw	r2,-32700(gp)
   4d64c:	10000326 	beq	r2,zero,4d65c <alt_get_errno+0x24>
   4d650:	d0a01117 	ldw	r2,-32700(gp)
   4d654:	103ee83a 	callr	r2
   4d658:	00000106 	br	4d660 <alt_get_errno+0x28>
   4d65c:	d0a72b04 	addi	r2,gp,-25428
}
   4d660:	e037883a 	mov	sp,fp
   4d664:	dfc00117 	ldw	ra,4(sp)
   4d668:	df000017 	ldw	fp,0(sp)
   4d66c:	dec00204 	addi	sp,sp,8
   4d670:	f800283a 	ret

0004d674 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d674:	defff904 	addi	sp,sp,-28
   4d678:	dfc00615 	stw	ra,24(sp)
   4d67c:	df000515 	stw	fp,20(sp)
   4d680:	df000504 	addi	fp,sp,20
   4d684:	e13ffd15 	stw	r4,-12(fp)
   4d688:	e17ffe15 	stw	r5,-8(fp)
   4d68c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d690:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d694:	e0bffd17 	ldw	r2,-12(fp)
   4d698:	10000816 	blt	r2,zero,4d6bc <lseek+0x48>
   4d69c:	01400304 	movi	r5,12
   4d6a0:	e13ffd17 	ldw	r4,-12(fp)
   4d6a4:	004a9640 	call	4a964 <__mulsi3>
   4d6a8:	1007883a 	mov	r3,r2
   4d6ac:	00800174 	movhi	r2,5
   4d6b0:	10817004 	addi	r2,r2,1472
   4d6b4:	1885883a 	add	r2,r3,r2
   4d6b8:	00000106 	br	4d6c0 <lseek+0x4c>
   4d6bc:	0005883a 	mov	r2,zero
   4d6c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d6c4:	e0bffc17 	ldw	r2,-16(fp)
   4d6c8:	10001026 	beq	r2,zero,4d70c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d6cc:	e0bffc17 	ldw	r2,-16(fp)
   4d6d0:	10800017 	ldw	r2,0(r2)
   4d6d4:	10800717 	ldw	r2,28(r2)
   4d6d8:	10000926 	beq	r2,zero,4d700 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d6dc:	e0bffc17 	ldw	r2,-16(fp)
   4d6e0:	10800017 	ldw	r2,0(r2)
   4d6e4:	10800717 	ldw	r2,28(r2)
   4d6e8:	e1bfff17 	ldw	r6,-4(fp)
   4d6ec:	e17ffe17 	ldw	r5,-8(fp)
   4d6f0:	e13ffc17 	ldw	r4,-16(fp)
   4d6f4:	103ee83a 	callr	r2
   4d6f8:	e0bffb15 	stw	r2,-20(fp)
   4d6fc:	00000506 	br	4d714 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d700:	00bfde84 	movi	r2,-134
   4d704:	e0bffb15 	stw	r2,-20(fp)
   4d708:	00000206 	br	4d714 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d70c:	00bfebc4 	movi	r2,-81
   4d710:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d714:	e0bffb17 	ldw	r2,-20(fp)
   4d718:	1000070e 	bge	r2,zero,4d738 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   4d71c:	004d6380 	call	4d638 <alt_get_errno>
   4d720:	1007883a 	mov	r3,r2
   4d724:	e0bffb17 	ldw	r2,-20(fp)
   4d728:	0085c83a 	sub	r2,zero,r2
   4d72c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d730:	00bfffc4 	movi	r2,-1
   4d734:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d738:	e0bffb17 	ldw	r2,-20(fp)
}
   4d73c:	e037883a 	mov	sp,fp
   4d740:	dfc00117 	ldw	ra,4(sp)
   4d744:	df000017 	ldw	fp,0(sp)
   4d748:	dec00204 	addi	sp,sp,8
   4d74c:	f800283a 	ret

0004d750 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d750:	defffd04 	addi	sp,sp,-12
   4d754:	dfc00215 	stw	ra,8(sp)
   4d758:	df000115 	stw	fp,4(sp)
   4d75c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d760:	0009883a 	mov	r4,zero
   4d764:	004dbf80 	call	4dbf8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d768:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d76c:	004dc300 	call	4dc30 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d770:	01800174 	movhi	r6,5
   4d774:	31bee804 	addi	r6,r6,-1120
   4d778:	01400174 	movhi	r5,5
   4d77c:	297ee804 	addi	r5,r5,-1120
   4d780:	01000174 	movhi	r4,5
   4d784:	213ee804 	addi	r4,r4,-1120
   4d788:	004ed700 	call	4ed70 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d78c:	004e90c0 	call	4e90c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d790:	01000174 	movhi	r4,5
   4d794:	213a5b04 	addi	r4,r4,-5780
   4d798:	004f5300 	call	4f530 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d79c:	d0a72c17 	ldw	r2,-25424(gp)
   4d7a0:	d0e72d17 	ldw	r3,-25420(gp)
   4d7a4:	d1272e17 	ldw	r4,-25416(gp)
   4d7a8:	200d883a 	mov	r6,r4
   4d7ac:	180b883a 	mov	r5,r3
   4d7b0:	1009883a 	mov	r4,r2
   4d7b4:	004026c0 	call	4026c <main>
   4d7b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d7bc:	01000044 	movi	r4,1
   4d7c0:	004d26c0 	call	4d26c <close>
  exit (result);
   4d7c4:	e13fff17 	ldw	r4,-4(fp)
   4d7c8:	004f5440 	call	4f544 <exit>

0004d7cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4d7cc:	defffe04 	addi	sp,sp,-8
   4d7d0:	df000115 	stw	fp,4(sp)
   4d7d4:	df000104 	addi	fp,sp,4
   4d7d8:	e13fff15 	stw	r4,-4(fp)
}
   4d7dc:	0001883a 	nop
   4d7e0:	e037883a 	mov	sp,fp
   4d7e4:	df000017 	ldw	fp,0(sp)
   4d7e8:	dec00104 	addi	sp,sp,4
   4d7ec:	f800283a 	ret

0004d7f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4d7f0:	defffe04 	addi	sp,sp,-8
   4d7f4:	df000115 	stw	fp,4(sp)
   4d7f8:	df000104 	addi	fp,sp,4
   4d7fc:	e13fff15 	stw	r4,-4(fp)
}
   4d800:	0001883a 	nop
   4d804:	e037883a 	mov	sp,fp
   4d808:	df000017 	ldw	fp,0(sp)
   4d80c:	dec00104 	addi	sp,sp,4
   4d810:	f800283a 	ret

0004d814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d814:	defffe04 	addi	sp,sp,-8
   4d818:	dfc00115 	stw	ra,4(sp)
   4d81c:	df000015 	stw	fp,0(sp)
   4d820:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d824:	d0a01117 	ldw	r2,-32700(gp)
   4d828:	10000326 	beq	r2,zero,4d838 <alt_get_errno+0x24>
   4d82c:	d0a01117 	ldw	r2,-32700(gp)
   4d830:	103ee83a 	callr	r2
   4d834:	00000106 	br	4d83c <alt_get_errno+0x28>
   4d838:	d0a72b04 	addi	r2,gp,-25428
}
   4d83c:	e037883a 	mov	sp,fp
   4d840:	dfc00117 	ldw	ra,4(sp)
   4d844:	df000017 	ldw	fp,0(sp)
   4d848:	dec00204 	addi	sp,sp,8
   4d84c:	f800283a 	ret

0004d850 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d850:	defff904 	addi	sp,sp,-28
   4d854:	dfc00615 	stw	ra,24(sp)
   4d858:	df000515 	stw	fp,20(sp)
   4d85c:	df000504 	addi	fp,sp,20
   4d860:	e13ffd15 	stw	r4,-12(fp)
   4d864:	e17ffe15 	stw	r5,-8(fp)
   4d868:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d86c:	e0bffd17 	ldw	r2,-12(fp)
   4d870:	10000816 	blt	r2,zero,4d894 <read+0x44>
   4d874:	01400304 	movi	r5,12
   4d878:	e13ffd17 	ldw	r4,-12(fp)
   4d87c:	004a9640 	call	4a964 <__mulsi3>
   4d880:	1007883a 	mov	r3,r2
   4d884:	00800174 	movhi	r2,5
   4d888:	10817004 	addi	r2,r2,1472
   4d88c:	1885883a 	add	r2,r3,r2
   4d890:	00000106 	br	4d898 <read+0x48>
   4d894:	0005883a 	mov	r2,zero
   4d898:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d89c:	e0bffb17 	ldw	r2,-20(fp)
   4d8a0:	10002226 	beq	r2,zero,4d92c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8a4:	e0bffb17 	ldw	r2,-20(fp)
   4d8a8:	10800217 	ldw	r2,8(r2)
   4d8ac:	108000cc 	andi	r2,r2,3
   4d8b0:	10800060 	cmpeqi	r2,r2,1
   4d8b4:	1000181e 	bne	r2,zero,4d918 <read+0xc8>
        (fd->dev->read))
   4d8b8:	e0bffb17 	ldw	r2,-20(fp)
   4d8bc:	10800017 	ldw	r2,0(r2)
   4d8c0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8c4:	10001426 	beq	r2,zero,4d918 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d8c8:	e0bffb17 	ldw	r2,-20(fp)
   4d8cc:	10800017 	ldw	r2,0(r2)
   4d8d0:	10800517 	ldw	r2,20(r2)
   4d8d4:	e0ffff17 	ldw	r3,-4(fp)
   4d8d8:	180d883a 	mov	r6,r3
   4d8dc:	e17ffe17 	ldw	r5,-8(fp)
   4d8e0:	e13ffb17 	ldw	r4,-20(fp)
   4d8e4:	103ee83a 	callr	r2
   4d8e8:	e0bffc15 	stw	r2,-16(fp)
   4d8ec:	e0bffc17 	ldw	r2,-16(fp)
   4d8f0:	1000070e 	bge	r2,zero,4d910 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   4d8f4:	004d8140 	call	4d814 <alt_get_errno>
   4d8f8:	1007883a 	mov	r3,r2
   4d8fc:	e0bffc17 	ldw	r2,-16(fp)
   4d900:	0085c83a 	sub	r2,zero,r2
   4d904:	18800015 	stw	r2,0(r3)
          return -1;
   4d908:	00bfffc4 	movi	r2,-1
   4d90c:	00000c06 	br	4d940 <read+0xf0>
        }
        return rval;
   4d910:	e0bffc17 	ldw	r2,-16(fp)
   4d914:	00000a06 	br	4d940 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d918:	004d8140 	call	4d814 <alt_get_errno>
   4d91c:	1007883a 	mov	r3,r2
   4d920:	00800344 	movi	r2,13
   4d924:	18800015 	stw	r2,0(r3)
   4d928:	00000406 	br	4d93c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d92c:	004d8140 	call	4d814 <alt_get_errno>
   4d930:	1007883a 	mov	r3,r2
   4d934:	00801444 	movi	r2,81
   4d938:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d93c:	00bfffc4 	movi	r2,-1
}
   4d940:	e037883a 	mov	sp,fp
   4d944:	dfc00117 	ldw	ra,4(sp)
   4d948:	df000017 	ldw	fp,0(sp)
   4d94c:	dec00204 	addi	sp,sp,8
   4d950:	f800283a 	ret

0004d954 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d954:	defffc04 	addi	sp,sp,-16
   4d958:	dfc00315 	stw	ra,12(sp)
   4d95c:	df000215 	stw	fp,8(sp)
   4d960:	dc000115 	stw	r16,4(sp)
   4d964:	df000204 	addi	fp,sp,8
   4d968:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   4d96c:	e0bffe17 	ldw	r2,-8(fp)
   4d970:	108000d0 	cmplti	r2,r2,3
   4d974:	1000111e 	bne	r2,zero,4d9bc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d978:	04000174 	movhi	r16,5
   4d97c:	84017004 	addi	r16,r16,1472
   4d980:	e0bffe17 	ldw	r2,-8(fp)
   4d984:	01400304 	movi	r5,12
   4d988:	1009883a 	mov	r4,r2
   4d98c:	004a9640 	call	4a964 <__mulsi3>
   4d990:	8085883a 	add	r2,r16,r2
   4d994:	10800204 	addi	r2,r2,8
   4d998:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d99c:	04000174 	movhi	r16,5
   4d9a0:	84017004 	addi	r16,r16,1472
   4d9a4:	e0bffe17 	ldw	r2,-8(fp)
   4d9a8:	01400304 	movi	r5,12
   4d9ac:	1009883a 	mov	r4,r2
   4d9b0:	004a9640 	call	4a964 <__mulsi3>
   4d9b4:	8085883a 	add	r2,r16,r2
   4d9b8:	10000015 	stw	zero,0(r2)
  }
}
   4d9bc:	0001883a 	nop
   4d9c0:	e6ffff04 	addi	sp,fp,-4
   4d9c4:	dfc00217 	ldw	ra,8(sp)
   4d9c8:	df000117 	ldw	fp,4(sp)
   4d9cc:	dc000017 	ldw	r16,0(sp)
   4d9d0:	dec00304 	addi	sp,sp,12
   4d9d4:	f800283a 	ret

0004d9d8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4d9d8:	defff904 	addi	sp,sp,-28
   4d9dc:	df000615 	stw	fp,24(sp)
   4d9e0:	df000604 	addi	fp,sp,24
   4d9e4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d9e8:	0005303a 	rdctl	r2,status
   4d9ec:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d9f0:	e0fffe17 	ldw	r3,-8(fp)
   4d9f4:	00bfff84 	movi	r2,-2
   4d9f8:	1884703a 	and	r2,r3,r2
   4d9fc:	1001703a 	wrctl	status,r2
  
  return context;
   4da00:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4da04:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4da08:	d0a01217 	ldw	r2,-32696(gp)
   4da0c:	10c000c4 	addi	r3,r2,3
   4da10:	00bfff04 	movi	r2,-4
   4da14:	1884703a 	and	r2,r3,r2
   4da18:	d0a01215 	stw	r2,-32696(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4da1c:	d0e01217 	ldw	r3,-32696(gp)
   4da20:	e0bfff17 	ldw	r2,-4(fp)
   4da24:	1887883a 	add	r3,r3,r2
   4da28:	008001b4 	movhi	r2,6
   4da2c:	10b0f004 	addi	r2,r2,-15424
   4da30:	10c0062e 	bgeu	r2,r3,4da4c <sbrk+0x74>
   4da34:	e0bffb17 	ldw	r2,-20(fp)
   4da38:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4da3c:	e0bffa17 	ldw	r2,-24(fp)
   4da40:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4da44:	00bfffc4 	movi	r2,-1
   4da48:	00000b06 	br	4da78 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4da4c:	d0a01217 	ldw	r2,-32696(gp)
   4da50:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4da54:	d0e01217 	ldw	r3,-32696(gp)
   4da58:	e0bfff17 	ldw	r2,-4(fp)
   4da5c:	1885883a 	add	r2,r3,r2
   4da60:	d0a01215 	stw	r2,-32696(gp)
   4da64:	e0bffb17 	ldw	r2,-20(fp)
   4da68:	e0bffc15 	stw	r2,-16(fp)
   4da6c:	e0bffc17 	ldw	r2,-16(fp)
   4da70:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4da74:	e0bffd17 	ldw	r2,-12(fp)
} 
   4da78:	e037883a 	mov	sp,fp
   4da7c:	df000017 	ldw	fp,0(sp)
   4da80:	dec00104 	addi	sp,sp,4
   4da84:	f800283a 	ret

0004da88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4da88:	defffe04 	addi	sp,sp,-8
   4da8c:	dfc00115 	stw	ra,4(sp)
   4da90:	df000015 	stw	fp,0(sp)
   4da94:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4da98:	d0a01117 	ldw	r2,-32700(gp)
   4da9c:	10000326 	beq	r2,zero,4daac <alt_get_errno+0x24>
   4daa0:	d0a01117 	ldw	r2,-32700(gp)
   4daa4:	103ee83a 	callr	r2
   4daa8:	00000106 	br	4dab0 <alt_get_errno+0x28>
   4daac:	d0a72b04 	addi	r2,gp,-25428
}
   4dab0:	e037883a 	mov	sp,fp
   4dab4:	dfc00117 	ldw	ra,4(sp)
   4dab8:	df000017 	ldw	fp,0(sp)
   4dabc:	dec00204 	addi	sp,sp,8
   4dac0:	f800283a 	ret

0004dac4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4dac4:	defff904 	addi	sp,sp,-28
   4dac8:	dfc00615 	stw	ra,24(sp)
   4dacc:	df000515 	stw	fp,20(sp)
   4dad0:	df000504 	addi	fp,sp,20
   4dad4:	e13ffd15 	stw	r4,-12(fp)
   4dad8:	e17ffe15 	stw	r5,-8(fp)
   4dadc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4dae0:	e0bffd17 	ldw	r2,-12(fp)
   4dae4:	10000816 	blt	r2,zero,4db08 <write+0x44>
   4dae8:	01400304 	movi	r5,12
   4daec:	e13ffd17 	ldw	r4,-12(fp)
   4daf0:	004a9640 	call	4a964 <__mulsi3>
   4daf4:	1007883a 	mov	r3,r2
   4daf8:	00800174 	movhi	r2,5
   4dafc:	10817004 	addi	r2,r2,1472
   4db00:	1885883a 	add	r2,r3,r2
   4db04:	00000106 	br	4db0c <write+0x48>
   4db08:	0005883a 	mov	r2,zero
   4db0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4db10:	e0bffb17 	ldw	r2,-20(fp)
   4db14:	10002126 	beq	r2,zero,4db9c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4db18:	e0bffb17 	ldw	r2,-20(fp)
   4db1c:	10800217 	ldw	r2,8(r2)
   4db20:	108000cc 	andi	r2,r2,3
   4db24:	10001826 	beq	r2,zero,4db88 <write+0xc4>
   4db28:	e0bffb17 	ldw	r2,-20(fp)
   4db2c:	10800017 	ldw	r2,0(r2)
   4db30:	10800617 	ldw	r2,24(r2)
   4db34:	10001426 	beq	r2,zero,4db88 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4db38:	e0bffb17 	ldw	r2,-20(fp)
   4db3c:	10800017 	ldw	r2,0(r2)
   4db40:	10800617 	ldw	r2,24(r2)
   4db44:	e0ffff17 	ldw	r3,-4(fp)
   4db48:	180d883a 	mov	r6,r3
   4db4c:	e17ffe17 	ldw	r5,-8(fp)
   4db50:	e13ffb17 	ldw	r4,-20(fp)
   4db54:	103ee83a 	callr	r2
   4db58:	e0bffc15 	stw	r2,-16(fp)
   4db5c:	e0bffc17 	ldw	r2,-16(fp)
   4db60:	1000070e 	bge	r2,zero,4db80 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   4db64:	004da880 	call	4da88 <alt_get_errno>
   4db68:	1007883a 	mov	r3,r2
   4db6c:	e0bffc17 	ldw	r2,-16(fp)
   4db70:	0085c83a 	sub	r2,zero,r2
   4db74:	18800015 	stw	r2,0(r3)
        return -1;
   4db78:	00bfffc4 	movi	r2,-1
   4db7c:	00000c06 	br	4dbb0 <write+0xec>
      }
      return rval;
   4db80:	e0bffc17 	ldw	r2,-16(fp)
   4db84:	00000a06 	br	4dbb0 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4db88:	004da880 	call	4da88 <alt_get_errno>
   4db8c:	1007883a 	mov	r3,r2
   4db90:	00800344 	movi	r2,13
   4db94:	18800015 	stw	r2,0(r3)
   4db98:	00000406 	br	4dbac <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4db9c:	004da880 	call	4da88 <alt_get_errno>
   4dba0:	1007883a 	mov	r3,r2
   4dba4:	00801444 	movi	r2,81
   4dba8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4dbac:	00bfffc4 	movi	r2,-1
}
   4dbb0:	e037883a 	mov	sp,fp
   4dbb4:	dfc00117 	ldw	ra,4(sp)
   4dbb8:	df000017 	ldw	fp,0(sp)
   4dbbc:	dec00204 	addi	sp,sp,8
   4dbc0:	f800283a 	ret

0004dbc4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4dbc4:	defffd04 	addi	sp,sp,-12
   4dbc8:	dfc00215 	stw	ra,8(sp)
   4dbcc:	df000115 	stw	fp,4(sp)
   4dbd0:	df000104 	addi	fp,sp,4
   4dbd4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4dbd8:	d1600e04 	addi	r5,gp,-32712
   4dbdc:	e13fff17 	ldw	r4,-4(fp)
   4dbe0:	004e8680 	call	4e868 <alt_dev_llist_insert>
}
   4dbe4:	e037883a 	mov	sp,fp
   4dbe8:	dfc00117 	ldw	ra,4(sp)
   4dbec:	df000017 	ldw	fp,0(sp)
   4dbf0:	dec00204 	addi	sp,sp,8
   4dbf4:	f800283a 	ret

0004dbf8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4dbf8:	defffd04 	addi	sp,sp,-12
   4dbfc:	dfc00215 	stw	ra,8(sp)
   4dc00:	df000115 	stw	fp,4(sp)
   4dc04:	df000104 	addi	fp,sp,4
   4dc08:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( PROCESSADOR, Processador);
   4dc0c:	004f2140 	call	4f214 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4dc10:	00800044 	movi	r2,1
   4dc14:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4dc18:	0001883a 	nop
   4dc1c:	e037883a 	mov	sp,fp
   4dc20:	dfc00117 	ldw	ra,4(sp)
   4dc24:	df000017 	ldw	fp,0(sp)
   4dc28:	dec00204 	addi	sp,sp,8
   4dc2c:	f800283a 	ret

0004dc30 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4dc30:	defffe04 	addi	sp,sp,-8
   4dc34:	dfc00115 	stw	ra,4(sp)
   4dc38:	df000015 	stw	fp,0(sp)
   4dc3c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4dc40:	01800184 	movi	r6,6
   4dc44:	000b883a 	mov	r5,zero
   4dc48:	01000174 	movhi	r4,5
   4dc4c:	2101da04 	addi	r4,r4,1896
   4dc50:	004dddc0 	call	4dddc <altera_avalon_jtag_uart_init>
   4dc54:	01000174 	movhi	r4,5
   4dc58:	2101d004 	addi	r4,r4,1856
   4dc5c:	004dbc40 	call	4dbc4 <alt_dev_reg>
}
   4dc60:	0001883a 	nop
   4dc64:	e037883a 	mov	sp,fp
   4dc68:	dfc00117 	ldw	ra,4(sp)
   4dc6c:	df000017 	ldw	fp,0(sp)
   4dc70:	dec00204 	addi	sp,sp,8
   4dc74:	f800283a 	ret

0004dc78 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4dc78:	defffa04 	addi	sp,sp,-24
   4dc7c:	dfc00515 	stw	ra,20(sp)
   4dc80:	df000415 	stw	fp,16(sp)
   4dc84:	df000404 	addi	fp,sp,16
   4dc88:	e13ffd15 	stw	r4,-12(fp)
   4dc8c:	e17ffe15 	stw	r5,-8(fp)
   4dc90:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dc94:	e0bffd17 	ldw	r2,-12(fp)
   4dc98:	10800017 	ldw	r2,0(r2)
   4dc9c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4dca0:	e0bffc17 	ldw	r2,-16(fp)
   4dca4:	10c00a04 	addi	r3,r2,40
   4dca8:	e0bffd17 	ldw	r2,-12(fp)
   4dcac:	10800217 	ldw	r2,8(r2)
   4dcb0:	100f883a 	mov	r7,r2
   4dcb4:	e1bfff17 	ldw	r6,-4(fp)
   4dcb8:	e17ffe17 	ldw	r5,-8(fp)
   4dcbc:	1809883a 	mov	r4,r3
   4dcc0:	004e2a00 	call	4e2a0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4dcc4:	e037883a 	mov	sp,fp
   4dcc8:	dfc00117 	ldw	ra,4(sp)
   4dccc:	df000017 	ldw	fp,0(sp)
   4dcd0:	dec00204 	addi	sp,sp,8
   4dcd4:	f800283a 	ret

0004dcd8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4dcd8:	defffa04 	addi	sp,sp,-24
   4dcdc:	dfc00515 	stw	ra,20(sp)
   4dce0:	df000415 	stw	fp,16(sp)
   4dce4:	df000404 	addi	fp,sp,16
   4dce8:	e13ffd15 	stw	r4,-12(fp)
   4dcec:	e17ffe15 	stw	r5,-8(fp)
   4dcf0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dcf4:	e0bffd17 	ldw	r2,-12(fp)
   4dcf8:	10800017 	ldw	r2,0(r2)
   4dcfc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4dd00:	e0bffc17 	ldw	r2,-16(fp)
   4dd04:	10c00a04 	addi	r3,r2,40
   4dd08:	e0bffd17 	ldw	r2,-12(fp)
   4dd0c:	10800217 	ldw	r2,8(r2)
   4dd10:	100f883a 	mov	r7,r2
   4dd14:	e1bfff17 	ldw	r6,-4(fp)
   4dd18:	e17ffe17 	ldw	r5,-8(fp)
   4dd1c:	1809883a 	mov	r4,r3
   4dd20:	004e4bc0 	call	4e4bc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4dd24:	e037883a 	mov	sp,fp
   4dd28:	dfc00117 	ldw	ra,4(sp)
   4dd2c:	df000017 	ldw	fp,0(sp)
   4dd30:	dec00204 	addi	sp,sp,8
   4dd34:	f800283a 	ret

0004dd38 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4dd38:	defffc04 	addi	sp,sp,-16
   4dd3c:	dfc00315 	stw	ra,12(sp)
   4dd40:	df000215 	stw	fp,8(sp)
   4dd44:	df000204 	addi	fp,sp,8
   4dd48:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dd4c:	e0bfff17 	ldw	r2,-4(fp)
   4dd50:	10800017 	ldw	r2,0(r2)
   4dd54:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4dd58:	e0bffe17 	ldw	r2,-8(fp)
   4dd5c:	10c00a04 	addi	r3,r2,40
   4dd60:	e0bfff17 	ldw	r2,-4(fp)
   4dd64:	10800217 	ldw	r2,8(r2)
   4dd68:	100b883a 	mov	r5,r2
   4dd6c:	1809883a 	mov	r4,r3
   4dd70:	004e1480 	call	4e148 <altera_avalon_jtag_uart_close>
}
   4dd74:	e037883a 	mov	sp,fp
   4dd78:	dfc00117 	ldw	ra,4(sp)
   4dd7c:	df000017 	ldw	fp,0(sp)
   4dd80:	dec00204 	addi	sp,sp,8
   4dd84:	f800283a 	ret

0004dd88 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4dd88:	defffa04 	addi	sp,sp,-24
   4dd8c:	dfc00515 	stw	ra,20(sp)
   4dd90:	df000415 	stw	fp,16(sp)
   4dd94:	df000404 	addi	fp,sp,16
   4dd98:	e13ffd15 	stw	r4,-12(fp)
   4dd9c:	e17ffe15 	stw	r5,-8(fp)
   4dda0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4dda4:	e0bffd17 	ldw	r2,-12(fp)
   4dda8:	10800017 	ldw	r2,0(r2)
   4ddac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4ddb0:	e0bffc17 	ldw	r2,-16(fp)
   4ddb4:	10800a04 	addi	r2,r2,40
   4ddb8:	e1bfff17 	ldw	r6,-4(fp)
   4ddbc:	e17ffe17 	ldw	r5,-8(fp)
   4ddc0:	1009883a 	mov	r4,r2
   4ddc4:	004e1b00 	call	4e1b0 <altera_avalon_jtag_uart_ioctl>
}
   4ddc8:	e037883a 	mov	sp,fp
   4ddcc:	dfc00117 	ldw	ra,4(sp)
   4ddd0:	df000017 	ldw	fp,0(sp)
   4ddd4:	dec00204 	addi	sp,sp,8
   4ddd8:	f800283a 	ret

0004dddc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4dddc:	defffa04 	addi	sp,sp,-24
   4dde0:	dfc00515 	stw	ra,20(sp)
   4dde4:	df000415 	stw	fp,16(sp)
   4dde8:	df000404 	addi	fp,sp,16
   4ddec:	e13ffd15 	stw	r4,-12(fp)
   4ddf0:	e17ffe15 	stw	r5,-8(fp)
   4ddf4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ddf8:	e0bffd17 	ldw	r2,-12(fp)
   4ddfc:	00c00044 	movi	r3,1
   4de00:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4de04:	e0bffd17 	ldw	r2,-12(fp)
   4de08:	10800017 	ldw	r2,0(r2)
   4de0c:	10800104 	addi	r2,r2,4
   4de10:	1007883a 	mov	r3,r2
   4de14:	e0bffd17 	ldw	r2,-12(fp)
   4de18:	10800817 	ldw	r2,32(r2)
   4de1c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4de20:	e0bffe17 	ldw	r2,-8(fp)
   4de24:	e0ffff17 	ldw	r3,-4(fp)
   4de28:	d8000015 	stw	zero,0(sp)
   4de2c:	e1fffd17 	ldw	r7,-12(fp)
   4de30:	01800174 	movhi	r6,5
   4de34:	31b7a704 	addi	r6,r6,-8548
   4de38:	180b883a 	mov	r5,r3
   4de3c:	1009883a 	mov	r4,r2
   4de40:	004e9ec0 	call	4e9ec <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4de44:	e0bffd17 	ldw	r2,-12(fp)
   4de48:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4de4c:	e0bffd17 	ldw	r2,-12(fp)
   4de50:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4de54:	d0e73017 	ldw	r3,-25408(gp)
   4de58:	e1fffd17 	ldw	r7,-12(fp)
   4de5c:	01800174 	movhi	r6,5
   4de60:	31b82a04 	addi	r6,r6,-8024
   4de64:	180b883a 	mov	r5,r3
   4de68:	1009883a 	mov	r4,r2
   4de6c:	004e6e00 	call	4e6e0 <alt_alarm_start>
   4de70:	1000040e 	bge	r2,zero,4de84 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4de74:	e0fffd17 	ldw	r3,-12(fp)
   4de78:	00a00034 	movhi	r2,32768
   4de7c:	10bfffc4 	addi	r2,r2,-1
   4de80:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4de84:	0001883a 	nop
   4de88:	e037883a 	mov	sp,fp
   4de8c:	dfc00117 	ldw	ra,4(sp)
   4de90:	df000017 	ldw	fp,0(sp)
   4de94:	dec00204 	addi	sp,sp,8
   4de98:	f800283a 	ret

0004de9c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4de9c:	defff804 	addi	sp,sp,-32
   4dea0:	df000715 	stw	fp,28(sp)
   4dea4:	df000704 	addi	fp,sp,28
   4dea8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4deac:	e0bfff17 	ldw	r2,-4(fp)
   4deb0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4deb4:	e0bffb17 	ldw	r2,-20(fp)
   4deb8:	10800017 	ldw	r2,0(r2)
   4debc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dec0:	e0bffc17 	ldw	r2,-16(fp)
   4dec4:	10800104 	addi	r2,r2,4
   4dec8:	10800037 	ldwio	r2,0(r2)
   4decc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4ded0:	e0bffd17 	ldw	r2,-12(fp)
   4ded4:	1080c00c 	andi	r2,r2,768
   4ded8:	10006d26 	beq	r2,zero,4e090 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4dedc:	e0bffd17 	ldw	r2,-12(fp)
   4dee0:	1080400c 	andi	r2,r2,256
   4dee4:	10003526 	beq	r2,zero,4dfbc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4dee8:	00800074 	movhi	r2,1
   4deec:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4def0:	e0bffb17 	ldw	r2,-20(fp)
   4def4:	10800a17 	ldw	r2,40(r2)
   4def8:	10800044 	addi	r2,r2,1
   4defc:	1081ffcc 	andi	r2,r2,2047
   4df00:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4df04:	e0bffb17 	ldw	r2,-20(fp)
   4df08:	10c00b17 	ldw	r3,44(r2)
   4df0c:	e0bffe17 	ldw	r2,-8(fp)
   4df10:	18801526 	beq	r3,r2,4df68 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4df14:	e0bffc17 	ldw	r2,-16(fp)
   4df18:	10800037 	ldwio	r2,0(r2)
   4df1c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4df20:	e0bff917 	ldw	r2,-28(fp)
   4df24:	10a0000c 	andi	r2,r2,32768
   4df28:	10001126 	beq	r2,zero,4df70 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4df2c:	e0bffb17 	ldw	r2,-20(fp)
   4df30:	10800a17 	ldw	r2,40(r2)
   4df34:	e0fff917 	ldw	r3,-28(fp)
   4df38:	1809883a 	mov	r4,r3
   4df3c:	e0fffb17 	ldw	r3,-20(fp)
   4df40:	1885883a 	add	r2,r3,r2
   4df44:	10800e04 	addi	r2,r2,56
   4df48:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4df4c:	e0bffb17 	ldw	r2,-20(fp)
   4df50:	10800a17 	ldw	r2,40(r2)
   4df54:	10800044 	addi	r2,r2,1
   4df58:	10c1ffcc 	andi	r3,r2,2047
   4df5c:	e0bffb17 	ldw	r2,-20(fp)
   4df60:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4df64:	003fe206 	br	4def0 <__alt_data_end+0xffff1b30>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4df68:	0001883a 	nop
   4df6c:	00000106 	br	4df74 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4df70:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4df74:	e0bff917 	ldw	r2,-28(fp)
   4df78:	10bfffec 	andhi	r2,r2,65535
   4df7c:	10000f26 	beq	r2,zero,4dfbc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4df80:	e0bffb17 	ldw	r2,-20(fp)
   4df84:	10c00817 	ldw	r3,32(r2)
   4df88:	00bfff84 	movi	r2,-2
   4df8c:	1886703a 	and	r3,r3,r2
   4df90:	e0bffb17 	ldw	r2,-20(fp)
   4df94:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4df98:	e0bffc17 	ldw	r2,-16(fp)
   4df9c:	10800104 	addi	r2,r2,4
   4dfa0:	1007883a 	mov	r3,r2
   4dfa4:	e0bffb17 	ldw	r2,-20(fp)
   4dfa8:	10800817 	ldw	r2,32(r2)
   4dfac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dfb0:	e0bffc17 	ldw	r2,-16(fp)
   4dfb4:	10800104 	addi	r2,r2,4
   4dfb8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4dfbc:	e0bffd17 	ldw	r2,-12(fp)
   4dfc0:	1080800c 	andi	r2,r2,512
   4dfc4:	103fbe26 	beq	r2,zero,4dec0 <__alt_data_end+0xffff1b00>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4dfc8:	e0bffd17 	ldw	r2,-12(fp)
   4dfcc:	1004d43a 	srli	r2,r2,16
   4dfd0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4dfd4:	00001406 	br	4e028 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4dfd8:	e0bffc17 	ldw	r2,-16(fp)
   4dfdc:	e0fffb17 	ldw	r3,-20(fp)
   4dfe0:	18c00d17 	ldw	r3,52(r3)
   4dfe4:	e13ffb17 	ldw	r4,-20(fp)
   4dfe8:	20c7883a 	add	r3,r4,r3
   4dfec:	18c20e04 	addi	r3,r3,2104
   4dff0:	18c00003 	ldbu	r3,0(r3)
   4dff4:	18c03fcc 	andi	r3,r3,255
   4dff8:	18c0201c 	xori	r3,r3,128
   4dffc:	18ffe004 	addi	r3,r3,-128
   4e000:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e004:	e0bffb17 	ldw	r2,-20(fp)
   4e008:	10800d17 	ldw	r2,52(r2)
   4e00c:	10800044 	addi	r2,r2,1
   4e010:	10c1ffcc 	andi	r3,r2,2047
   4e014:	e0bffb17 	ldw	r2,-20(fp)
   4e018:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4e01c:	e0bffa17 	ldw	r2,-24(fp)
   4e020:	10bfffc4 	addi	r2,r2,-1
   4e024:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e028:	e0bffa17 	ldw	r2,-24(fp)
   4e02c:	10000526 	beq	r2,zero,4e044 <altera_avalon_jtag_uart_irq+0x1a8>
   4e030:	e0bffb17 	ldw	r2,-20(fp)
   4e034:	10c00d17 	ldw	r3,52(r2)
   4e038:	e0bffb17 	ldw	r2,-20(fp)
   4e03c:	10800c17 	ldw	r2,48(r2)
   4e040:	18bfe51e 	bne	r3,r2,4dfd8 <__alt_data_end+0xffff1c18>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4e044:	e0bffa17 	ldw	r2,-24(fp)
   4e048:	103f9d26 	beq	r2,zero,4dec0 <__alt_data_end+0xffff1b00>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e04c:	e0bffb17 	ldw	r2,-20(fp)
   4e050:	10c00817 	ldw	r3,32(r2)
   4e054:	00bfff44 	movi	r2,-3
   4e058:	1886703a 	and	r3,r3,r2
   4e05c:	e0bffb17 	ldw	r2,-20(fp)
   4e060:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e064:	e0bffb17 	ldw	r2,-20(fp)
   4e068:	10800017 	ldw	r2,0(r2)
   4e06c:	10800104 	addi	r2,r2,4
   4e070:	1007883a 	mov	r3,r2
   4e074:	e0bffb17 	ldw	r2,-20(fp)
   4e078:	10800817 	ldw	r2,32(r2)
   4e07c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e080:	e0bffc17 	ldw	r2,-16(fp)
   4e084:	10800104 	addi	r2,r2,4
   4e088:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4e08c:	003f8c06 	br	4dec0 <__alt_data_end+0xffff1b00>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4e090:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4e094:	0001883a 	nop
   4e098:	e037883a 	mov	sp,fp
   4e09c:	df000017 	ldw	fp,0(sp)
   4e0a0:	dec00104 	addi	sp,sp,4
   4e0a4:	f800283a 	ret

0004e0a8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e0a8:	defff804 	addi	sp,sp,-32
   4e0ac:	df000715 	stw	fp,28(sp)
   4e0b0:	df000704 	addi	fp,sp,28
   4e0b4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e0b8:	e0bffb17 	ldw	r2,-20(fp)
   4e0bc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e0c0:	e0bff917 	ldw	r2,-28(fp)
   4e0c4:	10800017 	ldw	r2,0(r2)
   4e0c8:	10800104 	addi	r2,r2,4
   4e0cc:	10800037 	ldwio	r2,0(r2)
   4e0d0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e0d4:	e0bffa17 	ldw	r2,-24(fp)
   4e0d8:	1081000c 	andi	r2,r2,1024
   4e0dc:	10000b26 	beq	r2,zero,4e10c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e0e0:	e0bff917 	ldw	r2,-28(fp)
   4e0e4:	10800017 	ldw	r2,0(r2)
   4e0e8:	10800104 	addi	r2,r2,4
   4e0ec:	1007883a 	mov	r3,r2
   4e0f0:	e0bff917 	ldw	r2,-28(fp)
   4e0f4:	10800817 	ldw	r2,32(r2)
   4e0f8:	10810014 	ori	r2,r2,1024
   4e0fc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e100:	e0bff917 	ldw	r2,-28(fp)
   4e104:	10000915 	stw	zero,36(r2)
   4e108:	00000a06 	br	4e134 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e10c:	e0bff917 	ldw	r2,-28(fp)
   4e110:	10c00917 	ldw	r3,36(r2)
   4e114:	00a00034 	movhi	r2,32768
   4e118:	10bfff04 	addi	r2,r2,-4
   4e11c:	10c00536 	bltu	r2,r3,4e134 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4e120:	e0bff917 	ldw	r2,-28(fp)
   4e124:	10800917 	ldw	r2,36(r2)
   4e128:	10c00044 	addi	r3,r2,1
   4e12c:	e0bff917 	ldw	r2,-28(fp)
   4e130:	10c00915 	stw	r3,36(r2)
   4e134:	d0a73017 	ldw	r2,-25408(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e138:	e037883a 	mov	sp,fp
   4e13c:	df000017 	ldw	fp,0(sp)
   4e140:	dec00104 	addi	sp,sp,4
   4e144:	f800283a 	ret

0004e148 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e148:	defffd04 	addi	sp,sp,-12
   4e14c:	df000215 	stw	fp,8(sp)
   4e150:	df000204 	addi	fp,sp,8
   4e154:	e13ffe15 	stw	r4,-8(fp)
   4e158:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e15c:	00000506 	br	4e174 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e160:	e0bfff17 	ldw	r2,-4(fp)
   4e164:	1090000c 	andi	r2,r2,16384
   4e168:	10000226 	beq	r2,zero,4e174 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e16c:	00bffd44 	movi	r2,-11
   4e170:	00000b06 	br	4e1a0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e174:	e0bffe17 	ldw	r2,-8(fp)
   4e178:	10c00d17 	ldw	r3,52(r2)
   4e17c:	e0bffe17 	ldw	r2,-8(fp)
   4e180:	10800c17 	ldw	r2,48(r2)
   4e184:	18800526 	beq	r3,r2,4e19c <altera_avalon_jtag_uart_close+0x54>
   4e188:	e0bffe17 	ldw	r2,-8(fp)
   4e18c:	10c00917 	ldw	r3,36(r2)
   4e190:	e0bffe17 	ldw	r2,-8(fp)
   4e194:	10800117 	ldw	r2,4(r2)
   4e198:	18bff136 	bltu	r3,r2,4e160 <__alt_data_end+0xffff1da0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4e19c:	0005883a 	mov	r2,zero
}
   4e1a0:	e037883a 	mov	sp,fp
   4e1a4:	df000017 	ldw	fp,0(sp)
   4e1a8:	dec00104 	addi	sp,sp,4
   4e1ac:	f800283a 	ret

0004e1b0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e1b0:	defffa04 	addi	sp,sp,-24
   4e1b4:	df000515 	stw	fp,20(sp)
   4e1b8:	df000504 	addi	fp,sp,20
   4e1bc:	e13ffd15 	stw	r4,-12(fp)
   4e1c0:	e17ffe15 	stw	r5,-8(fp)
   4e1c4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4e1c8:	00bff9c4 	movi	r2,-25
   4e1cc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4e1d0:	e0bffe17 	ldw	r2,-8(fp)
   4e1d4:	10da8060 	cmpeqi	r3,r2,27137
   4e1d8:	1800031e 	bne	r3,zero,4e1e8 <altera_avalon_jtag_uart_ioctl+0x38>
   4e1dc:	109a80a0 	cmpeqi	r2,r2,27138
   4e1e0:	1000181e 	bne	r2,zero,4e244 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4e1e4:	00002906 	br	4e28c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4e1e8:	e0bffd17 	ldw	r2,-12(fp)
   4e1ec:	10c00117 	ldw	r3,4(r2)
   4e1f0:	00a00034 	movhi	r2,32768
   4e1f4:	10bfffc4 	addi	r2,r2,-1
   4e1f8:	18802126 	beq	r3,r2,4e280 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4e1fc:	e0bfff17 	ldw	r2,-4(fp)
   4e200:	10800017 	ldw	r2,0(r2)
   4e204:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e208:	e0bffc17 	ldw	r2,-16(fp)
   4e20c:	10800090 	cmplti	r2,r2,2
   4e210:	1000061e 	bne	r2,zero,4e22c <altera_avalon_jtag_uart_ioctl+0x7c>
   4e214:	e0fffc17 	ldw	r3,-16(fp)
   4e218:	00a00034 	movhi	r2,32768
   4e21c:	10bfffc4 	addi	r2,r2,-1
   4e220:	18800226 	beq	r3,r2,4e22c <altera_avalon_jtag_uart_ioctl+0x7c>
   4e224:	e0bffc17 	ldw	r2,-16(fp)
   4e228:	00000206 	br	4e234 <altera_avalon_jtag_uart_ioctl+0x84>
   4e22c:	00a00034 	movhi	r2,32768
   4e230:	10bfff84 	addi	r2,r2,-2
   4e234:	e0fffd17 	ldw	r3,-12(fp)
   4e238:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e23c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e240:	00000f06 	br	4e280 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4e244:	e0bffd17 	ldw	r2,-12(fp)
   4e248:	10c00117 	ldw	r3,4(r2)
   4e24c:	00a00034 	movhi	r2,32768
   4e250:	10bfffc4 	addi	r2,r2,-1
   4e254:	18800c26 	beq	r3,r2,4e288 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e258:	e0bffd17 	ldw	r2,-12(fp)
   4e25c:	10c00917 	ldw	r3,36(r2)
   4e260:	e0bffd17 	ldw	r2,-12(fp)
   4e264:	10800117 	ldw	r2,4(r2)
   4e268:	1885803a 	cmpltu	r2,r3,r2
   4e26c:	10c03fcc 	andi	r3,r2,255
   4e270:	e0bfff17 	ldw	r2,-4(fp)
   4e274:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e278:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e27c:	00000206 	br	4e288 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4e280:	0001883a 	nop
   4e284:	00000106 	br	4e28c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4e288:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4e28c:	e0bffb17 	ldw	r2,-20(fp)
}
   4e290:	e037883a 	mov	sp,fp
   4e294:	df000017 	ldw	fp,0(sp)
   4e298:	dec00104 	addi	sp,sp,4
   4e29c:	f800283a 	ret

0004e2a0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e2a0:	defff304 	addi	sp,sp,-52
   4e2a4:	dfc00c15 	stw	ra,48(sp)
   4e2a8:	df000b15 	stw	fp,44(sp)
   4e2ac:	df000b04 	addi	fp,sp,44
   4e2b0:	e13ffc15 	stw	r4,-16(fp)
   4e2b4:	e17ffd15 	stw	r5,-12(fp)
   4e2b8:	e1bffe15 	stw	r6,-8(fp)
   4e2bc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4e2c0:	e0bffd17 	ldw	r2,-12(fp)
   4e2c4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e2c8:	00004706 	br	4e3e8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e2cc:	e0bffc17 	ldw	r2,-16(fp)
   4e2d0:	10800a17 	ldw	r2,40(r2)
   4e2d4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4e2d8:	e0bffc17 	ldw	r2,-16(fp)
   4e2dc:	10800b17 	ldw	r2,44(r2)
   4e2e0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4e2e4:	e0fff717 	ldw	r3,-36(fp)
   4e2e8:	e0bff817 	ldw	r2,-32(fp)
   4e2ec:	18800536 	bltu	r3,r2,4e304 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e2f0:	e0fff717 	ldw	r3,-36(fp)
   4e2f4:	e0bff817 	ldw	r2,-32(fp)
   4e2f8:	1885c83a 	sub	r2,r3,r2
   4e2fc:	e0bff615 	stw	r2,-40(fp)
   4e300:	00000406 	br	4e314 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e304:	00c20004 	movi	r3,2048
   4e308:	e0bff817 	ldw	r2,-32(fp)
   4e30c:	1885c83a 	sub	r2,r3,r2
   4e310:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e314:	e0bff617 	ldw	r2,-40(fp)
   4e318:	10001e26 	beq	r2,zero,4e394 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e31c:	e0fffe17 	ldw	r3,-8(fp)
   4e320:	e0bff617 	ldw	r2,-40(fp)
   4e324:	1880022e 	bgeu	r3,r2,4e330 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e328:	e0bffe17 	ldw	r2,-8(fp)
   4e32c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e330:	e0bffc17 	ldw	r2,-16(fp)
   4e334:	10c00e04 	addi	r3,r2,56
   4e338:	e0bff817 	ldw	r2,-32(fp)
   4e33c:	1885883a 	add	r2,r3,r2
   4e340:	e1bff617 	ldw	r6,-40(fp)
   4e344:	100b883a 	mov	r5,r2
   4e348:	e13ff517 	ldw	r4,-44(fp)
   4e34c:	00459840 	call	45984 <memcpy>
      ptr   += n;
   4e350:	e0fff517 	ldw	r3,-44(fp)
   4e354:	e0bff617 	ldw	r2,-40(fp)
   4e358:	1885883a 	add	r2,r3,r2
   4e35c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e360:	e0fffe17 	ldw	r3,-8(fp)
   4e364:	e0bff617 	ldw	r2,-40(fp)
   4e368:	1885c83a 	sub	r2,r3,r2
   4e36c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e370:	e0fff817 	ldw	r3,-32(fp)
   4e374:	e0bff617 	ldw	r2,-40(fp)
   4e378:	1885883a 	add	r2,r3,r2
   4e37c:	10c1ffcc 	andi	r3,r2,2047
   4e380:	e0bffc17 	ldw	r2,-16(fp)
   4e384:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e388:	e0bffe17 	ldw	r2,-8(fp)
   4e38c:	00bfcf16 	blt	zero,r2,4e2cc <__alt_data_end+0xffff1f0c>
   4e390:	00000106 	br	4e398 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e394:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e398:	e0fff517 	ldw	r3,-44(fp)
   4e39c:	e0bffd17 	ldw	r2,-12(fp)
   4e3a0:	1880141e 	bne	r3,r2,4e3f4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e3a4:	e0bfff17 	ldw	r2,-4(fp)
   4e3a8:	1090000c 	andi	r2,r2,16384
   4e3ac:	1000131e 	bne	r2,zero,4e3fc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e3b0:	0001883a 	nop
   4e3b4:	e0bffc17 	ldw	r2,-16(fp)
   4e3b8:	10c00a17 	ldw	r3,40(r2)
   4e3bc:	e0bff717 	ldw	r2,-36(fp)
   4e3c0:	1880051e 	bne	r3,r2,4e3d8 <altera_avalon_jtag_uart_read+0x138>
   4e3c4:	e0bffc17 	ldw	r2,-16(fp)
   4e3c8:	10c00917 	ldw	r3,36(r2)
   4e3cc:	e0bffc17 	ldw	r2,-16(fp)
   4e3d0:	10800117 	ldw	r2,4(r2)
   4e3d4:	18bff736 	bltu	r3,r2,4e3b4 <__alt_data_end+0xffff1ff4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e3d8:	e0bffc17 	ldw	r2,-16(fp)
   4e3dc:	10c00a17 	ldw	r3,40(r2)
   4e3e0:	e0bff717 	ldw	r2,-36(fp)
   4e3e4:	18800726 	beq	r3,r2,4e404 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e3e8:	e0bffe17 	ldw	r2,-8(fp)
   4e3ec:	00bfb716 	blt	zero,r2,4e2cc <__alt_data_end+0xffff1f0c>
   4e3f0:	00000506 	br	4e408 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e3f4:	0001883a 	nop
   4e3f8:	00000306 	br	4e408 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e3fc:	0001883a 	nop
   4e400:	00000106 	br	4e408 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e404:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e408:	e0fff517 	ldw	r3,-44(fp)
   4e40c:	e0bffd17 	ldw	r2,-12(fp)
   4e410:	18801826 	beq	r3,r2,4e474 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e414:	0005303a 	rdctl	r2,status
   4e418:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e41c:	e0fffb17 	ldw	r3,-20(fp)
   4e420:	00bfff84 	movi	r2,-2
   4e424:	1884703a 	and	r2,r3,r2
   4e428:	1001703a 	wrctl	status,r2
  
  return context;
   4e42c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e430:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e434:	e0bffc17 	ldw	r2,-16(fp)
   4e438:	10800817 	ldw	r2,32(r2)
   4e43c:	10c00054 	ori	r3,r2,1
   4e440:	e0bffc17 	ldw	r2,-16(fp)
   4e444:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e448:	e0bffc17 	ldw	r2,-16(fp)
   4e44c:	10800017 	ldw	r2,0(r2)
   4e450:	10800104 	addi	r2,r2,4
   4e454:	1007883a 	mov	r3,r2
   4e458:	e0bffc17 	ldw	r2,-16(fp)
   4e45c:	10800817 	ldw	r2,32(r2)
   4e460:	18800035 	stwio	r2,0(r3)
   4e464:	e0bffa17 	ldw	r2,-24(fp)
   4e468:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e46c:	e0bff917 	ldw	r2,-28(fp)
   4e470:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e474:	e0fff517 	ldw	r3,-44(fp)
   4e478:	e0bffd17 	ldw	r2,-12(fp)
   4e47c:	18800426 	beq	r3,r2,4e490 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e480:	e0fff517 	ldw	r3,-44(fp)
   4e484:	e0bffd17 	ldw	r2,-12(fp)
   4e488:	1885c83a 	sub	r2,r3,r2
   4e48c:	00000606 	br	4e4a8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e490:	e0bfff17 	ldw	r2,-4(fp)
   4e494:	1090000c 	andi	r2,r2,16384
   4e498:	10000226 	beq	r2,zero,4e4a4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e49c:	00bffd44 	movi	r2,-11
   4e4a0:	00000106 	br	4e4a8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e4a4:	00bffec4 	movi	r2,-5
}
   4e4a8:	e037883a 	mov	sp,fp
   4e4ac:	dfc00117 	ldw	ra,4(sp)
   4e4b0:	df000017 	ldw	fp,0(sp)
   4e4b4:	dec00204 	addi	sp,sp,8
   4e4b8:	f800283a 	ret

0004e4bc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e4bc:	defff304 	addi	sp,sp,-52
   4e4c0:	dfc00c15 	stw	ra,48(sp)
   4e4c4:	df000b15 	stw	fp,44(sp)
   4e4c8:	df000b04 	addi	fp,sp,44
   4e4cc:	e13ffc15 	stw	r4,-16(fp)
   4e4d0:	e17ffd15 	stw	r5,-12(fp)
   4e4d4:	e1bffe15 	stw	r6,-8(fp)
   4e4d8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e4dc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e4e0:	e0bffd17 	ldw	r2,-12(fp)
   4e4e4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e4e8:	00003706 	br	4e5c8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e4ec:	e0bffc17 	ldw	r2,-16(fp)
   4e4f0:	10800c17 	ldw	r2,48(r2)
   4e4f4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e4f8:	e0bffc17 	ldw	r2,-16(fp)
   4e4fc:	10800d17 	ldw	r2,52(r2)
   4e500:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e504:	e0fff917 	ldw	r3,-28(fp)
   4e508:	e0bff517 	ldw	r2,-44(fp)
   4e50c:	1880062e 	bgeu	r3,r2,4e528 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e510:	e0fff517 	ldw	r3,-44(fp)
   4e514:	e0bff917 	ldw	r2,-28(fp)
   4e518:	1885c83a 	sub	r2,r3,r2
   4e51c:	10bfffc4 	addi	r2,r2,-1
   4e520:	e0bff615 	stw	r2,-40(fp)
   4e524:	00000b06 	br	4e554 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e528:	e0bff517 	ldw	r2,-44(fp)
   4e52c:	10000526 	beq	r2,zero,4e544 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e530:	00c20004 	movi	r3,2048
   4e534:	e0bff917 	ldw	r2,-28(fp)
   4e538:	1885c83a 	sub	r2,r3,r2
   4e53c:	e0bff615 	stw	r2,-40(fp)
   4e540:	00000406 	br	4e554 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e544:	00c1ffc4 	movi	r3,2047
   4e548:	e0bff917 	ldw	r2,-28(fp)
   4e54c:	1885c83a 	sub	r2,r3,r2
   4e550:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e554:	e0bff617 	ldw	r2,-40(fp)
   4e558:	10001e26 	beq	r2,zero,4e5d4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e55c:	e0fffe17 	ldw	r3,-8(fp)
   4e560:	e0bff617 	ldw	r2,-40(fp)
   4e564:	1880022e 	bgeu	r3,r2,4e570 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e568:	e0bffe17 	ldw	r2,-8(fp)
   4e56c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e570:	e0bffc17 	ldw	r2,-16(fp)
   4e574:	10c20e04 	addi	r3,r2,2104
   4e578:	e0bff917 	ldw	r2,-28(fp)
   4e57c:	1885883a 	add	r2,r3,r2
   4e580:	e1bff617 	ldw	r6,-40(fp)
   4e584:	e17ffd17 	ldw	r5,-12(fp)
   4e588:	1009883a 	mov	r4,r2
   4e58c:	00459840 	call	45984 <memcpy>
      ptr   += n;
   4e590:	e0fffd17 	ldw	r3,-12(fp)
   4e594:	e0bff617 	ldw	r2,-40(fp)
   4e598:	1885883a 	add	r2,r3,r2
   4e59c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e5a0:	e0fffe17 	ldw	r3,-8(fp)
   4e5a4:	e0bff617 	ldw	r2,-40(fp)
   4e5a8:	1885c83a 	sub	r2,r3,r2
   4e5ac:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e5b0:	e0fff917 	ldw	r3,-28(fp)
   4e5b4:	e0bff617 	ldw	r2,-40(fp)
   4e5b8:	1885883a 	add	r2,r3,r2
   4e5bc:	10c1ffcc 	andi	r3,r2,2047
   4e5c0:	e0bffc17 	ldw	r2,-16(fp)
   4e5c4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e5c8:	e0bffe17 	ldw	r2,-8(fp)
   4e5cc:	00bfc716 	blt	zero,r2,4e4ec <__alt_data_end+0xffff212c>
   4e5d0:	00000106 	br	4e5d8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e5d4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e5d8:	0005303a 	rdctl	r2,status
   4e5dc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e5e0:	e0fffb17 	ldw	r3,-20(fp)
   4e5e4:	00bfff84 	movi	r2,-2
   4e5e8:	1884703a 	and	r2,r3,r2
   4e5ec:	1001703a 	wrctl	status,r2
  
  return context;
   4e5f0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e5f4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e5f8:	e0bffc17 	ldw	r2,-16(fp)
   4e5fc:	10800817 	ldw	r2,32(r2)
   4e600:	10c00094 	ori	r3,r2,2
   4e604:	e0bffc17 	ldw	r2,-16(fp)
   4e608:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e60c:	e0bffc17 	ldw	r2,-16(fp)
   4e610:	10800017 	ldw	r2,0(r2)
   4e614:	10800104 	addi	r2,r2,4
   4e618:	1007883a 	mov	r3,r2
   4e61c:	e0bffc17 	ldw	r2,-16(fp)
   4e620:	10800817 	ldw	r2,32(r2)
   4e624:	18800035 	stwio	r2,0(r3)
   4e628:	e0bffa17 	ldw	r2,-24(fp)
   4e62c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e630:	e0bff817 	ldw	r2,-32(fp)
   4e634:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e638:	e0bffe17 	ldw	r2,-8(fp)
   4e63c:	0080100e 	bge	zero,r2,4e680 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e640:	e0bfff17 	ldw	r2,-4(fp)
   4e644:	1090000c 	andi	r2,r2,16384
   4e648:	1000101e 	bne	r2,zero,4e68c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e64c:	0001883a 	nop
   4e650:	e0bffc17 	ldw	r2,-16(fp)
   4e654:	10c00d17 	ldw	r3,52(r2)
   4e658:	e0bff517 	ldw	r2,-44(fp)
   4e65c:	1880051e 	bne	r3,r2,4e674 <altera_avalon_jtag_uart_write+0x1b8>
   4e660:	e0bffc17 	ldw	r2,-16(fp)
   4e664:	10c00917 	ldw	r3,36(r2)
   4e668:	e0bffc17 	ldw	r2,-16(fp)
   4e66c:	10800117 	ldw	r2,4(r2)
   4e670:	18bff736 	bltu	r3,r2,4e650 <__alt_data_end+0xffff2290>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e674:	e0bffc17 	ldw	r2,-16(fp)
   4e678:	10800917 	ldw	r2,36(r2)
   4e67c:	1000051e 	bne	r2,zero,4e694 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e680:	e0bffe17 	ldw	r2,-8(fp)
   4e684:	00bfd016 	blt	zero,r2,4e5c8 <__alt_data_end+0xffff2208>
   4e688:	00000306 	br	4e698 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e68c:	0001883a 	nop
   4e690:	00000106 	br	4e698 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e694:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e698:	e0fffd17 	ldw	r3,-12(fp)
   4e69c:	e0bff717 	ldw	r2,-36(fp)
   4e6a0:	18800426 	beq	r3,r2,4e6b4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e6a4:	e0fffd17 	ldw	r3,-12(fp)
   4e6a8:	e0bff717 	ldw	r2,-36(fp)
   4e6ac:	1885c83a 	sub	r2,r3,r2
   4e6b0:	00000606 	br	4e6cc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e6b4:	e0bfff17 	ldw	r2,-4(fp)
   4e6b8:	1090000c 	andi	r2,r2,16384
   4e6bc:	10000226 	beq	r2,zero,4e6c8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e6c0:	00bffd44 	movi	r2,-11
   4e6c4:	00000106 	br	4e6cc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e6c8:	00bffec4 	movi	r2,-5
}
   4e6cc:	e037883a 	mov	sp,fp
   4e6d0:	dfc00117 	ldw	ra,4(sp)
   4e6d4:	df000017 	ldw	fp,0(sp)
   4e6d8:	dec00204 	addi	sp,sp,8
   4e6dc:	f800283a 	ret

0004e6e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e6e0:	defff504 	addi	sp,sp,-44
   4e6e4:	df000a15 	stw	fp,40(sp)
   4e6e8:	df000a04 	addi	fp,sp,40
   4e6ec:	e13ffc15 	stw	r4,-16(fp)
   4e6f0:	e17ffd15 	stw	r5,-12(fp)
   4e6f4:	e1bffe15 	stw	r6,-8(fp)
   4e6f8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e6fc:	e03ff615 	stw	zero,-40(fp)
   4e700:	d0a73017 	ldw	r2,-25408(gp)
  
  if (alt_ticks_per_second ())
   4e704:	10003c26 	beq	r2,zero,4e7f8 <alt_alarm_start+0x118>
  {
    if (alarm)
   4e708:	e0bffc17 	ldw	r2,-16(fp)
   4e70c:	10003826 	beq	r2,zero,4e7f0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e710:	e0bffc17 	ldw	r2,-16(fp)
   4e714:	e0fffe17 	ldw	r3,-8(fp)
   4e718:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e71c:	e0bffc17 	ldw	r2,-16(fp)
   4e720:	e0ffff17 	ldw	r3,-4(fp)
   4e724:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e728:	0005303a 	rdctl	r2,status
   4e72c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e730:	e0fff917 	ldw	r3,-28(fp)
   4e734:	00bfff84 	movi	r2,-2
   4e738:	1884703a 	and	r2,r3,r2
   4e73c:	1001703a 	wrctl	status,r2
  
  return context;
   4e740:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e744:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e748:	d0a73117 	ldw	r2,-25404(gp)
      
      current_nticks = alt_nticks();
   4e74c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e750:	e0fffd17 	ldw	r3,-12(fp)
   4e754:	e0bff617 	ldw	r2,-40(fp)
   4e758:	1885883a 	add	r2,r3,r2
   4e75c:	10c00044 	addi	r3,r2,1
   4e760:	e0bffc17 	ldw	r2,-16(fp)
   4e764:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e768:	e0bffc17 	ldw	r2,-16(fp)
   4e76c:	10c00217 	ldw	r3,8(r2)
   4e770:	e0bff617 	ldw	r2,-40(fp)
   4e774:	1880042e 	bgeu	r3,r2,4e788 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e778:	e0bffc17 	ldw	r2,-16(fp)
   4e77c:	00c00044 	movi	r3,1
   4e780:	10c00405 	stb	r3,16(r2)
   4e784:	00000206 	br	4e790 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e788:	e0bffc17 	ldw	r2,-16(fp)
   4e78c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e790:	e0bffc17 	ldw	r2,-16(fp)
   4e794:	d0e01404 	addi	r3,gp,-32688
   4e798:	e0fffa15 	stw	r3,-24(fp)
   4e79c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e7a0:	e0bffb17 	ldw	r2,-20(fp)
   4e7a4:	e0fffa17 	ldw	r3,-24(fp)
   4e7a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e7ac:	e0bffa17 	ldw	r2,-24(fp)
   4e7b0:	10c00017 	ldw	r3,0(r2)
   4e7b4:	e0bffb17 	ldw	r2,-20(fp)
   4e7b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e7bc:	e0bffa17 	ldw	r2,-24(fp)
   4e7c0:	10800017 	ldw	r2,0(r2)
   4e7c4:	e0fffb17 	ldw	r3,-20(fp)
   4e7c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e7cc:	e0bffa17 	ldw	r2,-24(fp)
   4e7d0:	e0fffb17 	ldw	r3,-20(fp)
   4e7d4:	10c00015 	stw	r3,0(r2)
   4e7d8:	e0bff817 	ldw	r2,-32(fp)
   4e7dc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e7e0:	e0bff717 	ldw	r2,-36(fp)
   4e7e4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e7e8:	0005883a 	mov	r2,zero
   4e7ec:	00000306 	br	4e7fc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e7f0:	00bffa84 	movi	r2,-22
   4e7f4:	00000106 	br	4e7fc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e7f8:	00bfde84 	movi	r2,-134
  }
}
   4e7fc:	e037883a 	mov	sp,fp
   4e800:	df000017 	ldw	fp,0(sp)
   4e804:	dec00104 	addi	sp,sp,4
   4e808:	f800283a 	ret

0004e80c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4e80c:	deffff04 	addi	sp,sp,-4
   4e810:	df000015 	stw	fp,0(sp)
   4e814:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4e818:	0001883a 	nop
   4e81c:	e037883a 	mov	sp,fp
   4e820:	df000017 	ldw	fp,0(sp)
   4e824:	dec00104 	addi	sp,sp,4
   4e828:	f800283a 	ret

0004e82c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e82c:	defffe04 	addi	sp,sp,-8
   4e830:	dfc00115 	stw	ra,4(sp)
   4e834:	df000015 	stw	fp,0(sp)
   4e838:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e83c:	d0a01117 	ldw	r2,-32700(gp)
   4e840:	10000326 	beq	r2,zero,4e850 <alt_get_errno+0x24>
   4e844:	d0a01117 	ldw	r2,-32700(gp)
   4e848:	103ee83a 	callr	r2
   4e84c:	00000106 	br	4e854 <alt_get_errno+0x28>
   4e850:	d0a72b04 	addi	r2,gp,-25428
}
   4e854:	e037883a 	mov	sp,fp
   4e858:	dfc00117 	ldw	ra,4(sp)
   4e85c:	df000017 	ldw	fp,0(sp)
   4e860:	dec00204 	addi	sp,sp,8
   4e864:	f800283a 	ret

0004e868 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4e868:	defffa04 	addi	sp,sp,-24
   4e86c:	dfc00515 	stw	ra,20(sp)
   4e870:	df000415 	stw	fp,16(sp)
   4e874:	df000404 	addi	fp,sp,16
   4e878:	e13ffe15 	stw	r4,-8(fp)
   4e87c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4e880:	e0bffe17 	ldw	r2,-8(fp)
   4e884:	10000326 	beq	r2,zero,4e894 <alt_dev_llist_insert+0x2c>
   4e888:	e0bffe17 	ldw	r2,-8(fp)
   4e88c:	10800217 	ldw	r2,8(r2)
   4e890:	1000061e 	bne	r2,zero,4e8ac <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4e894:	004e82c0 	call	4e82c <alt_get_errno>
   4e898:	1007883a 	mov	r3,r2
   4e89c:	00800584 	movi	r2,22
   4e8a0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4e8a4:	00bffa84 	movi	r2,-22
   4e8a8:	00001306 	br	4e8f8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4e8ac:	e0bffe17 	ldw	r2,-8(fp)
   4e8b0:	e0ffff17 	ldw	r3,-4(fp)
   4e8b4:	e0fffc15 	stw	r3,-16(fp)
   4e8b8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e8bc:	e0bffd17 	ldw	r2,-12(fp)
   4e8c0:	e0fffc17 	ldw	r3,-16(fp)
   4e8c4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e8c8:	e0bffc17 	ldw	r2,-16(fp)
   4e8cc:	10c00017 	ldw	r3,0(r2)
   4e8d0:	e0bffd17 	ldw	r2,-12(fp)
   4e8d4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e8d8:	e0bffc17 	ldw	r2,-16(fp)
   4e8dc:	10800017 	ldw	r2,0(r2)
   4e8e0:	e0fffd17 	ldw	r3,-12(fp)
   4e8e4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e8e8:	e0bffc17 	ldw	r2,-16(fp)
   4e8ec:	e0fffd17 	ldw	r3,-12(fp)
   4e8f0:	10c00015 	stw	r3,0(r2)

  return 0;  
   4e8f4:	0005883a 	mov	r2,zero
}
   4e8f8:	e037883a 	mov	sp,fp
   4e8fc:	dfc00117 	ldw	ra,4(sp)
   4e900:	df000017 	ldw	fp,0(sp)
   4e904:	dec00204 	addi	sp,sp,8
   4e908:	f800283a 	ret

0004e90c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4e90c:	defffd04 	addi	sp,sp,-12
   4e910:	dfc00215 	stw	ra,8(sp)
   4e914:	df000115 	stw	fp,4(sp)
   4e918:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e91c:	00800174 	movhi	r2,5
   4e920:	10be3004 	addi	r2,r2,-1856
   4e924:	e0bfff15 	stw	r2,-4(fp)
   4e928:	00000606 	br	4e944 <_do_ctors+0x38>
        (*ctor) (); 
   4e92c:	e0bfff17 	ldw	r2,-4(fp)
   4e930:	10800017 	ldw	r2,0(r2)
   4e934:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e938:	e0bfff17 	ldw	r2,-4(fp)
   4e93c:	10bfff04 	addi	r2,r2,-4
   4e940:	e0bfff15 	stw	r2,-4(fp)
   4e944:	e0ffff17 	ldw	r3,-4(fp)
   4e948:	00800174 	movhi	r2,5
   4e94c:	10be3104 	addi	r2,r2,-1852
   4e950:	18bff62e 	bgeu	r3,r2,4e92c <__alt_data_end+0xffff256c>
        (*ctor) (); 
}
   4e954:	0001883a 	nop
   4e958:	e037883a 	mov	sp,fp
   4e95c:	dfc00117 	ldw	ra,4(sp)
   4e960:	df000017 	ldw	fp,0(sp)
   4e964:	dec00204 	addi	sp,sp,8
   4e968:	f800283a 	ret

0004e96c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4e96c:	defffd04 	addi	sp,sp,-12
   4e970:	dfc00215 	stw	ra,8(sp)
   4e974:	df000115 	stw	fp,4(sp)
   4e978:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e97c:	00800174 	movhi	r2,5
   4e980:	10be3004 	addi	r2,r2,-1856
   4e984:	e0bfff15 	stw	r2,-4(fp)
   4e988:	00000606 	br	4e9a4 <_do_dtors+0x38>
        (*dtor) (); 
   4e98c:	e0bfff17 	ldw	r2,-4(fp)
   4e990:	10800017 	ldw	r2,0(r2)
   4e994:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e998:	e0bfff17 	ldw	r2,-4(fp)
   4e99c:	10bfff04 	addi	r2,r2,-4
   4e9a0:	e0bfff15 	stw	r2,-4(fp)
   4e9a4:	e0ffff17 	ldw	r3,-4(fp)
   4e9a8:	00800174 	movhi	r2,5
   4e9ac:	10be3104 	addi	r2,r2,-1852
   4e9b0:	18bff62e 	bgeu	r3,r2,4e98c <__alt_data_end+0xffff25cc>
        (*dtor) (); 
}
   4e9b4:	0001883a 	nop
   4e9b8:	e037883a 	mov	sp,fp
   4e9bc:	dfc00117 	ldw	ra,4(sp)
   4e9c0:	df000017 	ldw	fp,0(sp)
   4e9c4:	dec00204 	addi	sp,sp,8
   4e9c8:	f800283a 	ret

0004e9cc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4e9cc:	deffff04 	addi	sp,sp,-4
   4e9d0:	df000015 	stw	fp,0(sp)
   4e9d4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   4e9d8:	0001883a 	nop
   4e9dc:	e037883a 	mov	sp,fp
   4e9e0:	df000017 	ldw	fp,0(sp)
   4e9e4:	dec00104 	addi	sp,sp,4
   4e9e8:	f800283a 	ret

0004e9ec <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4e9ec:	defff904 	addi	sp,sp,-28
   4e9f0:	dfc00615 	stw	ra,24(sp)
   4e9f4:	df000515 	stw	fp,20(sp)
   4e9f8:	df000504 	addi	fp,sp,20
   4e9fc:	e13ffc15 	stw	r4,-16(fp)
   4ea00:	e17ffd15 	stw	r5,-12(fp)
   4ea04:	e1bffe15 	stw	r6,-8(fp)
   4ea08:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4ea0c:	e0800217 	ldw	r2,8(fp)
   4ea10:	d8800015 	stw	r2,0(sp)
   4ea14:	e1ffff17 	ldw	r7,-4(fp)
   4ea18:	e1bffe17 	ldw	r6,-8(fp)
   4ea1c:	e17ffd17 	ldw	r5,-12(fp)
   4ea20:	e13ffc17 	ldw	r4,-16(fp)
   4ea24:	004eb9c0 	call	4eb9c <alt_iic_isr_register>
}  
   4ea28:	e037883a 	mov	sp,fp
   4ea2c:	dfc00117 	ldw	ra,4(sp)
   4ea30:	df000017 	ldw	fp,0(sp)
   4ea34:	dec00204 	addi	sp,sp,8
   4ea38:	f800283a 	ret

0004ea3c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4ea3c:	defff904 	addi	sp,sp,-28
   4ea40:	df000615 	stw	fp,24(sp)
   4ea44:	df000604 	addi	fp,sp,24
   4ea48:	e13ffe15 	stw	r4,-8(fp)
   4ea4c:	e17fff15 	stw	r5,-4(fp)
   4ea50:	e0bfff17 	ldw	r2,-4(fp)
   4ea54:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ea58:	0005303a 	rdctl	r2,status
   4ea5c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea60:	e0fffb17 	ldw	r3,-20(fp)
   4ea64:	00bfff84 	movi	r2,-2
   4ea68:	1884703a 	and	r2,r3,r2
   4ea6c:	1001703a 	wrctl	status,r2
  
  return context;
   4ea70:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4ea74:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4ea78:	00c00044 	movi	r3,1
   4ea7c:	e0bffa17 	ldw	r2,-24(fp)
   4ea80:	1884983a 	sll	r2,r3,r2
   4ea84:	1007883a 	mov	r3,r2
   4ea88:	d0a72f17 	ldw	r2,-25412(gp)
   4ea8c:	1884b03a 	or	r2,r3,r2
   4ea90:	d0a72f15 	stw	r2,-25412(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4ea94:	d0a72f17 	ldw	r2,-25412(gp)
   4ea98:	100170fa 	wrctl	ienable,r2
   4ea9c:	e0bffc17 	ldw	r2,-16(fp)
   4eaa0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eaa4:	e0bffd17 	ldw	r2,-12(fp)
   4eaa8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4eaac:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4eab0:	0001883a 	nop
}
   4eab4:	e037883a 	mov	sp,fp
   4eab8:	df000017 	ldw	fp,0(sp)
   4eabc:	dec00104 	addi	sp,sp,4
   4eac0:	f800283a 	ret

0004eac4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4eac4:	defff904 	addi	sp,sp,-28
   4eac8:	df000615 	stw	fp,24(sp)
   4eacc:	df000604 	addi	fp,sp,24
   4ead0:	e13ffe15 	stw	r4,-8(fp)
   4ead4:	e17fff15 	stw	r5,-4(fp)
   4ead8:	e0bfff17 	ldw	r2,-4(fp)
   4eadc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eae0:	0005303a 	rdctl	r2,status
   4eae4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eae8:	e0fffb17 	ldw	r3,-20(fp)
   4eaec:	00bfff84 	movi	r2,-2
   4eaf0:	1884703a 	and	r2,r3,r2
   4eaf4:	1001703a 	wrctl	status,r2
  
  return context;
   4eaf8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eafc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4eb00:	00c00044 	movi	r3,1
   4eb04:	e0bffa17 	ldw	r2,-24(fp)
   4eb08:	1884983a 	sll	r2,r3,r2
   4eb0c:	0084303a 	nor	r2,zero,r2
   4eb10:	1007883a 	mov	r3,r2
   4eb14:	d0a72f17 	ldw	r2,-25412(gp)
   4eb18:	1884703a 	and	r2,r3,r2
   4eb1c:	d0a72f15 	stw	r2,-25412(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eb20:	d0a72f17 	ldw	r2,-25412(gp)
   4eb24:	100170fa 	wrctl	ienable,r2
   4eb28:	e0bffc17 	ldw	r2,-16(fp)
   4eb2c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eb30:	e0bffd17 	ldw	r2,-12(fp)
   4eb34:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4eb38:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4eb3c:	0001883a 	nop
}
   4eb40:	e037883a 	mov	sp,fp
   4eb44:	df000017 	ldw	fp,0(sp)
   4eb48:	dec00104 	addi	sp,sp,4
   4eb4c:	f800283a 	ret

0004eb50 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4eb50:	defffc04 	addi	sp,sp,-16
   4eb54:	df000315 	stw	fp,12(sp)
   4eb58:	df000304 	addi	fp,sp,12
   4eb5c:	e13ffe15 	stw	r4,-8(fp)
   4eb60:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4eb64:	000530fa 	rdctl	r2,ienable
   4eb68:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4eb6c:	00c00044 	movi	r3,1
   4eb70:	e0bfff17 	ldw	r2,-4(fp)
   4eb74:	1884983a 	sll	r2,r3,r2
   4eb78:	1007883a 	mov	r3,r2
   4eb7c:	e0bffd17 	ldw	r2,-12(fp)
   4eb80:	1884703a 	and	r2,r3,r2
   4eb84:	1004c03a 	cmpne	r2,r2,zero
   4eb88:	10803fcc 	andi	r2,r2,255
}
   4eb8c:	e037883a 	mov	sp,fp
   4eb90:	df000017 	ldw	fp,0(sp)
   4eb94:	dec00104 	addi	sp,sp,4
   4eb98:	f800283a 	ret

0004eb9c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4eb9c:	defff504 	addi	sp,sp,-44
   4eba0:	dfc00a15 	stw	ra,40(sp)
   4eba4:	df000915 	stw	fp,36(sp)
   4eba8:	df000904 	addi	fp,sp,36
   4ebac:	e13ffc15 	stw	r4,-16(fp)
   4ebb0:	e17ffd15 	stw	r5,-12(fp)
   4ebb4:	e1bffe15 	stw	r6,-8(fp)
   4ebb8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4ebbc:	00bffa84 	movi	r2,-22
   4ebc0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4ebc4:	e0bffd17 	ldw	r2,-12(fp)
   4ebc8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ebcc:	e0bff817 	ldw	r2,-32(fp)
   4ebd0:	10800808 	cmpgei	r2,r2,32
   4ebd4:	1000271e 	bne	r2,zero,4ec74 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ebd8:	0005303a 	rdctl	r2,status
   4ebdc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ebe0:	e0fffb17 	ldw	r3,-20(fp)
   4ebe4:	00bfff84 	movi	r2,-2
   4ebe8:	1884703a 	and	r2,r3,r2
   4ebec:	1001703a 	wrctl	status,r2
  
  return context;
   4ebf0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ebf4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4ebf8:	00800174 	movhi	r2,5
   4ebfc:	108d2504 	addi	r2,r2,13460
   4ec00:	e0fff817 	ldw	r3,-32(fp)
   4ec04:	180690fa 	slli	r3,r3,3
   4ec08:	10c5883a 	add	r2,r2,r3
   4ec0c:	e0fffe17 	ldw	r3,-8(fp)
   4ec10:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4ec14:	00800174 	movhi	r2,5
   4ec18:	108d2504 	addi	r2,r2,13460
   4ec1c:	e0fff817 	ldw	r3,-32(fp)
   4ec20:	180690fa 	slli	r3,r3,3
   4ec24:	10c5883a 	add	r2,r2,r3
   4ec28:	10800104 	addi	r2,r2,4
   4ec2c:	e0ffff17 	ldw	r3,-4(fp)
   4ec30:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ec34:	e0bffe17 	ldw	r2,-8(fp)
   4ec38:	10000526 	beq	r2,zero,4ec50 <alt_iic_isr_register+0xb4>
   4ec3c:	e0bff817 	ldw	r2,-32(fp)
   4ec40:	100b883a 	mov	r5,r2
   4ec44:	e13ffc17 	ldw	r4,-16(fp)
   4ec48:	004ea3c0 	call	4ea3c <alt_ic_irq_enable>
   4ec4c:	00000406 	br	4ec60 <alt_iic_isr_register+0xc4>
   4ec50:	e0bff817 	ldw	r2,-32(fp)
   4ec54:	100b883a 	mov	r5,r2
   4ec58:	e13ffc17 	ldw	r4,-16(fp)
   4ec5c:	004eac40 	call	4eac4 <alt_ic_irq_disable>
   4ec60:	e0bff715 	stw	r2,-36(fp)
   4ec64:	e0bffa17 	ldw	r2,-24(fp)
   4ec68:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ec6c:	e0bff917 	ldw	r2,-28(fp)
   4ec70:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4ec74:	e0bff717 	ldw	r2,-36(fp)
}
   4ec78:	e037883a 	mov	sp,fp
   4ec7c:	dfc00117 	ldw	ra,4(sp)
   4ec80:	df000017 	ldw	fp,0(sp)
   4ec84:	dec00204 	addi	sp,sp,8
   4ec88:	f800283a 	ret

0004ec8c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4ec8c:	defff804 	addi	sp,sp,-32
   4ec90:	dfc00715 	stw	ra,28(sp)
   4ec94:	df000615 	stw	fp,24(sp)
   4ec98:	dc000515 	stw	r16,20(sp)
   4ec9c:	df000604 	addi	fp,sp,24
   4eca0:	e13ffb15 	stw	r4,-20(fp)
   4eca4:	e17ffc15 	stw	r5,-16(fp)
   4eca8:	e1bffd15 	stw	r6,-12(fp)
   4ecac:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   4ecb0:	e1bffe17 	ldw	r6,-8(fp)
   4ecb4:	e17ffd17 	ldw	r5,-12(fp)
   4ecb8:	e13ffc17 	ldw	r4,-16(fp)
   4ecbc:	004ef140 	call	4ef14 <open>
   4ecc0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   4ecc4:	e0bffa17 	ldw	r2,-24(fp)
   4ecc8:	10002216 	blt	r2,zero,4ed54 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   4eccc:	04000174 	movhi	r16,5
   4ecd0:	84017004 	addi	r16,r16,1472
   4ecd4:	e0bffa17 	ldw	r2,-24(fp)
   4ecd8:	01400304 	movi	r5,12
   4ecdc:	1009883a 	mov	r4,r2
   4ece0:	004a9640 	call	4a964 <__mulsi3>
   4ece4:	8085883a 	add	r2,r16,r2
   4ece8:	10c00017 	ldw	r3,0(r2)
   4ecec:	e0bffb17 	ldw	r2,-20(fp)
   4ecf0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4ecf4:	04000174 	movhi	r16,5
   4ecf8:	84017004 	addi	r16,r16,1472
   4ecfc:	e0bffa17 	ldw	r2,-24(fp)
   4ed00:	01400304 	movi	r5,12
   4ed04:	1009883a 	mov	r4,r2
   4ed08:	004a9640 	call	4a964 <__mulsi3>
   4ed0c:	8085883a 	add	r2,r16,r2
   4ed10:	10800104 	addi	r2,r2,4
   4ed14:	10c00017 	ldw	r3,0(r2)
   4ed18:	e0bffb17 	ldw	r2,-20(fp)
   4ed1c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ed20:	04000174 	movhi	r16,5
   4ed24:	84017004 	addi	r16,r16,1472
   4ed28:	e0bffa17 	ldw	r2,-24(fp)
   4ed2c:	01400304 	movi	r5,12
   4ed30:	1009883a 	mov	r4,r2
   4ed34:	004a9640 	call	4a964 <__mulsi3>
   4ed38:	8085883a 	add	r2,r16,r2
   4ed3c:	10800204 	addi	r2,r2,8
   4ed40:	10c00017 	ldw	r3,0(r2)
   4ed44:	e0bffb17 	ldw	r2,-20(fp)
   4ed48:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4ed4c:	e13ffa17 	ldw	r4,-24(fp)
   4ed50:	004d9540 	call	4d954 <alt_release_fd>
  }
} 
   4ed54:	0001883a 	nop
   4ed58:	e6ffff04 	addi	sp,fp,-4
   4ed5c:	dfc00217 	ldw	ra,8(sp)
   4ed60:	df000117 	ldw	fp,4(sp)
   4ed64:	dc000017 	ldw	r16,0(sp)
   4ed68:	dec00304 	addi	sp,sp,12
   4ed6c:	f800283a 	ret

0004ed70 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4ed70:	defffb04 	addi	sp,sp,-20
   4ed74:	dfc00415 	stw	ra,16(sp)
   4ed78:	df000315 	stw	fp,12(sp)
   4ed7c:	df000304 	addi	fp,sp,12
   4ed80:	e13ffd15 	stw	r4,-12(fp)
   4ed84:	e17ffe15 	stw	r5,-8(fp)
   4ed88:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ed8c:	01c07fc4 	movi	r7,511
   4ed90:	01800044 	movi	r6,1
   4ed94:	e17ffd17 	ldw	r5,-12(fp)
   4ed98:	01000174 	movhi	r4,5
   4ed9c:	21017304 	addi	r4,r4,1484
   4eda0:	004ec8c0 	call	4ec8c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4eda4:	01c07fc4 	movi	r7,511
   4eda8:	000d883a 	mov	r6,zero
   4edac:	e17ffe17 	ldw	r5,-8(fp)
   4edb0:	01000174 	movhi	r4,5
   4edb4:	21017004 	addi	r4,r4,1472
   4edb8:	004ec8c0 	call	4ec8c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4edbc:	01c07fc4 	movi	r7,511
   4edc0:	01800044 	movi	r6,1
   4edc4:	e17fff17 	ldw	r5,-4(fp)
   4edc8:	01000174 	movhi	r4,5
   4edcc:	21017604 	addi	r4,r4,1496
   4edd0:	004ec8c0 	call	4ec8c <alt_open_fd>
}  
   4edd4:	0001883a 	nop
   4edd8:	e037883a 	mov	sp,fp
   4eddc:	dfc00117 	ldw	ra,4(sp)
   4ede0:	df000017 	ldw	fp,0(sp)
   4ede4:	dec00204 	addi	sp,sp,8
   4ede8:	f800283a 	ret

0004edec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4edec:	defffe04 	addi	sp,sp,-8
   4edf0:	dfc00115 	stw	ra,4(sp)
   4edf4:	df000015 	stw	fp,0(sp)
   4edf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4edfc:	d0a01117 	ldw	r2,-32700(gp)
   4ee00:	10000326 	beq	r2,zero,4ee10 <alt_get_errno+0x24>
   4ee04:	d0a01117 	ldw	r2,-32700(gp)
   4ee08:	103ee83a 	callr	r2
   4ee0c:	00000106 	br	4ee14 <alt_get_errno+0x28>
   4ee10:	d0a72b04 	addi	r2,gp,-25428
}
   4ee14:	e037883a 	mov	sp,fp
   4ee18:	dfc00117 	ldw	ra,4(sp)
   4ee1c:	df000017 	ldw	fp,0(sp)
   4ee20:	dec00204 	addi	sp,sp,8
   4ee24:	f800283a 	ret

0004ee28 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ee28:	defffb04 	addi	sp,sp,-20
   4ee2c:	dfc00415 	stw	ra,16(sp)
   4ee30:	df000315 	stw	fp,12(sp)
   4ee34:	dc000215 	stw	r16,8(sp)
   4ee38:	df000304 	addi	fp,sp,12
   4ee3c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ee40:	e0bffe17 	ldw	r2,-8(fp)
   4ee44:	10800217 	ldw	r2,8(r2)
   4ee48:	10d00034 	orhi	r3,r2,16384
   4ee4c:	e0bffe17 	ldw	r2,-8(fp)
   4ee50:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ee54:	e03ffd15 	stw	zero,-12(fp)
   4ee58:	00002306 	br	4eee8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ee5c:	04000174 	movhi	r16,5
   4ee60:	84017004 	addi	r16,r16,1472
   4ee64:	e0bffd17 	ldw	r2,-12(fp)
   4ee68:	01400304 	movi	r5,12
   4ee6c:	1009883a 	mov	r4,r2
   4ee70:	004a9640 	call	4a964 <__mulsi3>
   4ee74:	8085883a 	add	r2,r16,r2
   4ee78:	10c00017 	ldw	r3,0(r2)
   4ee7c:	e0bffe17 	ldw	r2,-8(fp)
   4ee80:	10800017 	ldw	r2,0(r2)
   4ee84:	1880151e 	bne	r3,r2,4eedc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ee88:	04000174 	movhi	r16,5
   4ee8c:	84017004 	addi	r16,r16,1472
   4ee90:	e0bffd17 	ldw	r2,-12(fp)
   4ee94:	01400304 	movi	r5,12
   4ee98:	1009883a 	mov	r4,r2
   4ee9c:	004a9640 	call	4a964 <__mulsi3>
   4eea0:	8085883a 	add	r2,r16,r2
   4eea4:	10800204 	addi	r2,r2,8
   4eea8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4eeac:	10000b0e 	bge	r2,zero,4eedc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4eeb0:	01400304 	movi	r5,12
   4eeb4:	e13ffd17 	ldw	r4,-12(fp)
   4eeb8:	004a9640 	call	4a964 <__mulsi3>
   4eebc:	1007883a 	mov	r3,r2
   4eec0:	00800174 	movhi	r2,5
   4eec4:	10817004 	addi	r2,r2,1472
   4eec8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4eecc:	e0bffe17 	ldw	r2,-8(fp)
   4eed0:	18800226 	beq	r3,r2,4eedc <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4eed4:	00bffcc4 	movi	r2,-13
   4eed8:	00000806 	br	4eefc <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4eedc:	e0bffd17 	ldw	r2,-12(fp)
   4eee0:	10800044 	addi	r2,r2,1
   4eee4:	e0bffd15 	stw	r2,-12(fp)
   4eee8:	d0a01017 	ldw	r2,-32704(gp)
   4eeec:	1007883a 	mov	r3,r2
   4eef0:	e0bffd17 	ldw	r2,-12(fp)
   4eef4:	18bfd92e 	bgeu	r3,r2,4ee5c <__alt_data_end+0xffff2a9c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4eef8:	0005883a 	mov	r2,zero
}
   4eefc:	e6ffff04 	addi	sp,fp,-4
   4ef00:	dfc00217 	ldw	ra,8(sp)
   4ef04:	df000117 	ldw	fp,4(sp)
   4ef08:	dc000017 	ldw	r16,0(sp)
   4ef0c:	dec00304 	addi	sp,sp,12
   4ef10:	f800283a 	ret

0004ef14 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ef14:	defff604 	addi	sp,sp,-40
   4ef18:	dfc00915 	stw	ra,36(sp)
   4ef1c:	df000815 	stw	fp,32(sp)
   4ef20:	df000804 	addi	fp,sp,32
   4ef24:	e13ffd15 	stw	r4,-12(fp)
   4ef28:	e17ffe15 	stw	r5,-8(fp)
   4ef2c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4ef30:	00bfffc4 	movi	r2,-1
   4ef34:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4ef38:	00bffb44 	movi	r2,-19
   4ef3c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4ef40:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4ef44:	d1600e04 	addi	r5,gp,-32712
   4ef48:	e13ffd17 	ldw	r4,-12(fp)
   4ef4c:	004f2380 	call	4f238 <alt_find_dev>
   4ef50:	e0bff815 	stw	r2,-32(fp)
   4ef54:	e0bff817 	ldw	r2,-32(fp)
   4ef58:	1000051e 	bne	r2,zero,4ef70 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4ef5c:	e13ffd17 	ldw	r4,-12(fp)
   4ef60:	004f2c80 	call	4f2c8 <alt_find_file>
   4ef64:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4ef68:	00800044 	movi	r2,1
   4ef6c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4ef70:	e0bff817 	ldw	r2,-32(fp)
   4ef74:	10002b26 	beq	r2,zero,4f024 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4ef78:	e13ff817 	ldw	r4,-32(fp)
   4ef7c:	004f3d00 	call	4f3d0 <alt_get_fd>
   4ef80:	e0bff915 	stw	r2,-28(fp)
   4ef84:	e0bff917 	ldw	r2,-28(fp)
   4ef88:	1000030e 	bge	r2,zero,4ef98 <open+0x84>
    {
      status = index;
   4ef8c:	e0bff917 	ldw	r2,-28(fp)
   4ef90:	e0bffa15 	stw	r2,-24(fp)
   4ef94:	00002506 	br	4f02c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   4ef98:	01400304 	movi	r5,12
   4ef9c:	e13ff917 	ldw	r4,-28(fp)
   4efa0:	004a9640 	call	4a964 <__mulsi3>
   4efa4:	1007883a 	mov	r3,r2
   4efa8:	00800174 	movhi	r2,5
   4efac:	10817004 	addi	r2,r2,1472
   4efb0:	1885883a 	add	r2,r3,r2
   4efb4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4efb8:	e0fffe17 	ldw	r3,-8(fp)
   4efbc:	00900034 	movhi	r2,16384
   4efc0:	10bfffc4 	addi	r2,r2,-1
   4efc4:	1886703a 	and	r3,r3,r2
   4efc8:	e0bffc17 	ldw	r2,-16(fp)
   4efcc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4efd0:	e0bffb17 	ldw	r2,-20(fp)
   4efd4:	1000051e 	bne	r2,zero,4efec <open+0xd8>
   4efd8:	e13ffc17 	ldw	r4,-16(fp)
   4efdc:	004ee280 	call	4ee28 <alt_file_locked>
   4efe0:	e0bffa15 	stw	r2,-24(fp)
   4efe4:	e0bffa17 	ldw	r2,-24(fp)
   4efe8:	10001016 	blt	r2,zero,4f02c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4efec:	e0bff817 	ldw	r2,-32(fp)
   4eff0:	10800317 	ldw	r2,12(r2)
   4eff4:	10000826 	beq	r2,zero,4f018 <open+0x104>
   4eff8:	e0bff817 	ldw	r2,-32(fp)
   4effc:	10800317 	ldw	r2,12(r2)
   4f000:	e1ffff17 	ldw	r7,-4(fp)
   4f004:	e1bffe17 	ldw	r6,-8(fp)
   4f008:	e17ffd17 	ldw	r5,-12(fp)
   4f00c:	e13ffc17 	ldw	r4,-16(fp)
   4f010:	103ee83a 	callr	r2
   4f014:	00000106 	br	4f01c <open+0x108>
   4f018:	0005883a 	mov	r2,zero
   4f01c:	e0bffa15 	stw	r2,-24(fp)
   4f020:	00000206 	br	4f02c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f024:	00bffb44 	movi	r2,-19
   4f028:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f02c:	e0bffa17 	ldw	r2,-24(fp)
   4f030:	1000090e 	bge	r2,zero,4f058 <open+0x144>
  {
    alt_release_fd (index);  
   4f034:	e13ff917 	ldw	r4,-28(fp)
   4f038:	004d9540 	call	4d954 <alt_release_fd>
    ALT_ERRNO = -status;
   4f03c:	004edec0 	call	4edec <alt_get_errno>
   4f040:	1007883a 	mov	r3,r2
   4f044:	e0bffa17 	ldw	r2,-24(fp)
   4f048:	0085c83a 	sub	r2,zero,r2
   4f04c:	18800015 	stw	r2,0(r3)
    return -1;
   4f050:	00bfffc4 	movi	r2,-1
   4f054:	00000106 	br	4f05c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   4f058:	e0bff917 	ldw	r2,-28(fp)
}
   4f05c:	e037883a 	mov	sp,fp
   4f060:	dfc00117 	ldw	ra,4(sp)
   4f064:	df000017 	ldw	fp,0(sp)
   4f068:	dec00204 	addi	sp,sp,8
   4f06c:	f800283a 	ret

0004f070 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f070:	defffa04 	addi	sp,sp,-24
   4f074:	df000515 	stw	fp,20(sp)
   4f078:	df000504 	addi	fp,sp,20
   4f07c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f080:	0005303a 	rdctl	r2,status
   4f084:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f088:	e0fffc17 	ldw	r3,-16(fp)
   4f08c:	00bfff84 	movi	r2,-2
   4f090:	1884703a 	and	r2,r3,r2
   4f094:	1001703a 	wrctl	status,r2
  
  return context;
   4f098:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f09c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4f0a0:	e0bfff17 	ldw	r2,-4(fp)
   4f0a4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f0a8:	e0bffd17 	ldw	r2,-12(fp)
   4f0ac:	10800017 	ldw	r2,0(r2)
   4f0b0:	e0fffd17 	ldw	r3,-12(fp)
   4f0b4:	18c00117 	ldw	r3,4(r3)
   4f0b8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f0bc:	e0bffd17 	ldw	r2,-12(fp)
   4f0c0:	10800117 	ldw	r2,4(r2)
   4f0c4:	e0fffd17 	ldw	r3,-12(fp)
   4f0c8:	18c00017 	ldw	r3,0(r3)
   4f0cc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f0d0:	e0bffd17 	ldw	r2,-12(fp)
   4f0d4:	e0fffd17 	ldw	r3,-12(fp)
   4f0d8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f0dc:	e0bffd17 	ldw	r2,-12(fp)
   4f0e0:	e0fffd17 	ldw	r3,-12(fp)
   4f0e4:	10c00015 	stw	r3,0(r2)
   4f0e8:	e0bffb17 	ldw	r2,-20(fp)
   4f0ec:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f0f0:	e0bffe17 	ldw	r2,-8(fp)
   4f0f4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4f0f8:	0001883a 	nop
   4f0fc:	e037883a 	mov	sp,fp
   4f100:	df000017 	ldw	fp,0(sp)
   4f104:	dec00104 	addi	sp,sp,4
   4f108:	f800283a 	ret

0004f10c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f10c:	defffb04 	addi	sp,sp,-20
   4f110:	dfc00415 	stw	ra,16(sp)
   4f114:	df000315 	stw	fp,12(sp)
   4f118:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f11c:	d0a01417 	ldw	r2,-32688(gp)
   4f120:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f124:	d0a73117 	ldw	r2,-25404(gp)
   4f128:	10800044 	addi	r2,r2,1
   4f12c:	d0a73115 	stw	r2,-25404(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f130:	00002e06 	br	4f1ec <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f134:	e0bffd17 	ldw	r2,-12(fp)
   4f138:	10800017 	ldw	r2,0(r2)
   4f13c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f140:	e0bffd17 	ldw	r2,-12(fp)
   4f144:	10800403 	ldbu	r2,16(r2)
   4f148:	10803fcc 	andi	r2,r2,255
   4f14c:	10000426 	beq	r2,zero,4f160 <alt_tick+0x54>
   4f150:	d0a73117 	ldw	r2,-25404(gp)
   4f154:	1000021e 	bne	r2,zero,4f160 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f158:	e0bffd17 	ldw	r2,-12(fp)
   4f15c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f160:	e0bffd17 	ldw	r2,-12(fp)
   4f164:	10800217 	ldw	r2,8(r2)
   4f168:	d0e73117 	ldw	r3,-25404(gp)
   4f16c:	18801d36 	bltu	r3,r2,4f1e4 <alt_tick+0xd8>
   4f170:	e0bffd17 	ldw	r2,-12(fp)
   4f174:	10800403 	ldbu	r2,16(r2)
   4f178:	10803fcc 	andi	r2,r2,255
   4f17c:	1000191e 	bne	r2,zero,4f1e4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f180:	e0bffd17 	ldw	r2,-12(fp)
   4f184:	10800317 	ldw	r2,12(r2)
   4f188:	e0fffd17 	ldw	r3,-12(fp)
   4f18c:	18c00517 	ldw	r3,20(r3)
   4f190:	1809883a 	mov	r4,r3
   4f194:	103ee83a 	callr	r2
   4f198:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f19c:	e0bfff17 	ldw	r2,-4(fp)
   4f1a0:	1000031e 	bne	r2,zero,4f1b0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f1a4:	e13ffd17 	ldw	r4,-12(fp)
   4f1a8:	004f0700 	call	4f070 <alt_alarm_stop>
   4f1ac:	00000d06 	br	4f1e4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f1b0:	e0bffd17 	ldw	r2,-12(fp)
   4f1b4:	10c00217 	ldw	r3,8(r2)
   4f1b8:	e0bfff17 	ldw	r2,-4(fp)
   4f1bc:	1887883a 	add	r3,r3,r2
   4f1c0:	e0bffd17 	ldw	r2,-12(fp)
   4f1c4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f1c8:	e0bffd17 	ldw	r2,-12(fp)
   4f1cc:	10c00217 	ldw	r3,8(r2)
   4f1d0:	d0a73117 	ldw	r2,-25404(gp)
   4f1d4:	1880032e 	bgeu	r3,r2,4f1e4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f1d8:	e0bffd17 	ldw	r2,-12(fp)
   4f1dc:	00c00044 	movi	r3,1
   4f1e0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f1e4:	e0bffe17 	ldw	r2,-8(fp)
   4f1e8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f1ec:	e0fffd17 	ldw	r3,-12(fp)
   4f1f0:	d0a01404 	addi	r2,gp,-32688
   4f1f4:	18bfcf1e 	bne	r3,r2,4f134 <__alt_data_end+0xffff2d74>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f1f8:	0001883a 	nop
}
   4f1fc:	0001883a 	nop
   4f200:	e037883a 	mov	sp,fp
   4f204:	dfc00117 	ldw	ra,4(sp)
   4f208:	df000017 	ldw	fp,0(sp)
   4f20c:	dec00204 	addi	sp,sp,8
   4f210:	f800283a 	ret

0004f214 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f214:	deffff04 	addi	sp,sp,-4
   4f218:	df000015 	stw	fp,0(sp)
   4f21c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f220:	000170fa 	wrctl	ienable,zero
}
   4f224:	0001883a 	nop
   4f228:	e037883a 	mov	sp,fp
   4f22c:	df000017 	ldw	fp,0(sp)
   4f230:	dec00104 	addi	sp,sp,4
   4f234:	f800283a 	ret

0004f238 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f238:	defffa04 	addi	sp,sp,-24
   4f23c:	dfc00515 	stw	ra,20(sp)
   4f240:	df000415 	stw	fp,16(sp)
   4f244:	df000404 	addi	fp,sp,16
   4f248:	e13ffe15 	stw	r4,-8(fp)
   4f24c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f250:	e0bfff17 	ldw	r2,-4(fp)
   4f254:	10800017 	ldw	r2,0(r2)
   4f258:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f25c:	e13ffe17 	ldw	r4,-8(fp)
   4f260:	0046f8c0 	call	46f8c <strlen>
   4f264:	10800044 	addi	r2,r2,1
   4f268:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f26c:	00000d06 	br	4f2a4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f270:	e0bffc17 	ldw	r2,-16(fp)
   4f274:	10800217 	ldw	r2,8(r2)
   4f278:	e0fffd17 	ldw	r3,-12(fp)
   4f27c:	180d883a 	mov	r6,r3
   4f280:	e17ffe17 	ldw	r5,-8(fp)
   4f284:	1009883a 	mov	r4,r2
   4f288:	004f57c0 	call	4f57c <memcmp>
   4f28c:	1000021e 	bne	r2,zero,4f298 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f290:	e0bffc17 	ldw	r2,-16(fp)
   4f294:	00000706 	br	4f2b4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f298:	e0bffc17 	ldw	r2,-16(fp)
   4f29c:	10800017 	ldw	r2,0(r2)
   4f2a0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f2a4:	e0fffc17 	ldw	r3,-16(fp)
   4f2a8:	e0bfff17 	ldw	r2,-4(fp)
   4f2ac:	18bff01e 	bne	r3,r2,4f270 <__alt_data_end+0xffff2eb0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f2b0:	0005883a 	mov	r2,zero
}
   4f2b4:	e037883a 	mov	sp,fp
   4f2b8:	dfc00117 	ldw	ra,4(sp)
   4f2bc:	df000017 	ldw	fp,0(sp)
   4f2c0:	dec00204 	addi	sp,sp,8
   4f2c4:	f800283a 	ret

0004f2c8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f2c8:	defffb04 	addi	sp,sp,-20
   4f2cc:	dfc00415 	stw	ra,16(sp)
   4f2d0:	df000315 	stw	fp,12(sp)
   4f2d4:	df000304 	addi	fp,sp,12
   4f2d8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f2dc:	d0a00c17 	ldw	r2,-32720(gp)
   4f2e0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f2e4:	00003106 	br	4f3ac <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f2e8:	e0bffd17 	ldw	r2,-12(fp)
   4f2ec:	10800217 	ldw	r2,8(r2)
   4f2f0:	1009883a 	mov	r4,r2
   4f2f4:	0046f8c0 	call	46f8c <strlen>
   4f2f8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f2fc:	e0bffd17 	ldw	r2,-12(fp)
   4f300:	10c00217 	ldw	r3,8(r2)
   4f304:	e0bffe17 	ldw	r2,-8(fp)
   4f308:	10bfffc4 	addi	r2,r2,-1
   4f30c:	1885883a 	add	r2,r3,r2
   4f310:	10800003 	ldbu	r2,0(r2)
   4f314:	10803fcc 	andi	r2,r2,255
   4f318:	1080201c 	xori	r2,r2,128
   4f31c:	10bfe004 	addi	r2,r2,-128
   4f320:	10800bd8 	cmpnei	r2,r2,47
   4f324:	1000031e 	bne	r2,zero,4f334 <alt_find_file+0x6c>
    {
      len -= 1;
   4f328:	e0bffe17 	ldw	r2,-8(fp)
   4f32c:	10bfffc4 	addi	r2,r2,-1
   4f330:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f334:	e0bffe17 	ldw	r2,-8(fp)
   4f338:	e0ffff17 	ldw	r3,-4(fp)
   4f33c:	1885883a 	add	r2,r3,r2
   4f340:	10800003 	ldbu	r2,0(r2)
   4f344:	10803fcc 	andi	r2,r2,255
   4f348:	1080201c 	xori	r2,r2,128
   4f34c:	10bfe004 	addi	r2,r2,-128
   4f350:	10800be0 	cmpeqi	r2,r2,47
   4f354:	1000081e 	bne	r2,zero,4f378 <alt_find_file+0xb0>
   4f358:	e0bffe17 	ldw	r2,-8(fp)
   4f35c:	e0ffff17 	ldw	r3,-4(fp)
   4f360:	1885883a 	add	r2,r3,r2
   4f364:	10800003 	ldbu	r2,0(r2)
   4f368:	10803fcc 	andi	r2,r2,255
   4f36c:	1080201c 	xori	r2,r2,128
   4f370:	10bfe004 	addi	r2,r2,-128
   4f374:	10000a1e 	bne	r2,zero,4f3a0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f378:	e0bffd17 	ldw	r2,-12(fp)
   4f37c:	10800217 	ldw	r2,8(r2)
   4f380:	e0fffe17 	ldw	r3,-8(fp)
   4f384:	180d883a 	mov	r6,r3
   4f388:	e17fff17 	ldw	r5,-4(fp)
   4f38c:	1009883a 	mov	r4,r2
   4f390:	004f57c0 	call	4f57c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f394:	1000021e 	bne	r2,zero,4f3a0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f398:	e0bffd17 	ldw	r2,-12(fp)
   4f39c:	00000706 	br	4f3bc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f3a0:	e0bffd17 	ldw	r2,-12(fp)
   4f3a4:	10800017 	ldw	r2,0(r2)
   4f3a8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f3ac:	e0fffd17 	ldw	r3,-12(fp)
   4f3b0:	d0a00c04 	addi	r2,gp,-32720
   4f3b4:	18bfcc1e 	bne	r3,r2,4f2e8 <__alt_data_end+0xffff2f28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f3b8:	0005883a 	mov	r2,zero
}
   4f3bc:	e037883a 	mov	sp,fp
   4f3c0:	dfc00117 	ldw	ra,4(sp)
   4f3c4:	df000017 	ldw	fp,0(sp)
   4f3c8:	dec00204 	addi	sp,sp,8
   4f3cc:	f800283a 	ret

0004f3d0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f3d0:	defffa04 	addi	sp,sp,-24
   4f3d4:	dfc00515 	stw	ra,20(sp)
   4f3d8:	df000415 	stw	fp,16(sp)
   4f3dc:	dc000315 	stw	r16,12(sp)
   4f3e0:	df000404 	addi	fp,sp,16
   4f3e4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f3e8:	00bffa04 	movi	r2,-24
   4f3ec:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f3f0:	e03ffc15 	stw	zero,-16(fp)
   4f3f4:	00001d06 	br	4f46c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   4f3f8:	04000174 	movhi	r16,5
   4f3fc:	84017004 	addi	r16,r16,1472
   4f400:	e0bffc17 	ldw	r2,-16(fp)
   4f404:	01400304 	movi	r5,12
   4f408:	1009883a 	mov	r4,r2
   4f40c:	004a9640 	call	4a964 <__mulsi3>
   4f410:	8085883a 	add	r2,r16,r2
   4f414:	10800017 	ldw	r2,0(r2)
   4f418:	1000111e 	bne	r2,zero,4f460 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   4f41c:	04000174 	movhi	r16,5
   4f420:	84017004 	addi	r16,r16,1472
   4f424:	e0bffc17 	ldw	r2,-16(fp)
   4f428:	01400304 	movi	r5,12
   4f42c:	1009883a 	mov	r4,r2
   4f430:	004a9640 	call	4a964 <__mulsi3>
   4f434:	8085883a 	add	r2,r16,r2
   4f438:	e0fffe17 	ldw	r3,-8(fp)
   4f43c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f440:	d0e01017 	ldw	r3,-32704(gp)
   4f444:	e0bffc17 	ldw	r2,-16(fp)
   4f448:	1880020e 	bge	r3,r2,4f454 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   4f44c:	e0bffc17 	ldw	r2,-16(fp)
   4f450:	d0a01015 	stw	r2,-32704(gp)
      }
      rc = i;
   4f454:	e0bffc17 	ldw	r2,-16(fp)
   4f458:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   4f45c:	00000606 	br	4f478 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f460:	e0bffc17 	ldw	r2,-16(fp)
   4f464:	10800044 	addi	r2,r2,1
   4f468:	e0bffc15 	stw	r2,-16(fp)
   4f46c:	e0bffc17 	ldw	r2,-16(fp)
   4f470:	10800810 	cmplti	r2,r2,32
   4f474:	103fe01e 	bne	r2,zero,4f3f8 <__alt_data_end+0xffff3038>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f478:	e0bffd17 	ldw	r2,-12(fp)
}
   4f47c:	e6ffff04 	addi	sp,fp,-4
   4f480:	dfc00217 	ldw	ra,8(sp)
   4f484:	df000117 	ldw	fp,4(sp)
   4f488:	dc000017 	ldw	r16,0(sp)
   4f48c:	dec00304 	addi	sp,sp,12
   4f490:	f800283a 	ret

0004f494 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4f494:	defffe04 	addi	sp,sp,-8
   4f498:	df000115 	stw	fp,4(sp)
   4f49c:	df000104 	addi	fp,sp,4
   4f4a0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4f4a4:	e0bfff17 	ldw	r2,-4(fp)
   4f4a8:	10bffe84 	addi	r2,r2,-6
   4f4ac:	10c00428 	cmpgeui	r3,r2,16
   4f4b0:	18001a1e 	bne	r3,zero,4f51c <alt_exception_cause_generated_bad_addr+0x88>
   4f4b4:	100690ba 	slli	r3,r2,2
   4f4b8:	00800174 	movhi	r2,5
   4f4bc:	10bd3304 	addi	r2,r2,-2868
   4f4c0:	1885883a 	add	r2,r3,r2
   4f4c4:	10800017 	ldw	r2,0(r2)
   4f4c8:	1000683a 	jmp	r2
   4f4cc:	0004f50c 	andi	zero,zero,5076
   4f4d0:	0004f50c 	andi	zero,zero,5076
   4f4d4:	0004f51c 	xori	zero,zero,5076
   4f4d8:	0004f51c 	xori	zero,zero,5076
   4f4dc:	0004f51c 	xori	zero,zero,5076
   4f4e0:	0004f50c 	andi	zero,zero,5076
   4f4e4:	0004f514 	movui	zero,5076
   4f4e8:	0004f51c 	xori	zero,zero,5076
   4f4ec:	0004f50c 	andi	zero,zero,5076
   4f4f0:	0004f50c 	andi	zero,zero,5076
   4f4f4:	0004f51c 	xori	zero,zero,5076
   4f4f8:	0004f50c 	andi	zero,zero,5076
   4f4fc:	0004f514 	movui	zero,5076
   4f500:	0004f51c 	xori	zero,zero,5076
   4f504:	0004f51c 	xori	zero,zero,5076
   4f508:	0004f50c 	andi	zero,zero,5076
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4f50c:	00800044 	movi	r2,1
   4f510:	00000306 	br	4f520 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4f514:	0005883a 	mov	r2,zero
   4f518:	00000106 	br	4f520 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4f51c:	0005883a 	mov	r2,zero
  }
}
   4f520:	e037883a 	mov	sp,fp
   4f524:	df000017 	ldw	fp,0(sp)
   4f528:	dec00104 	addi	sp,sp,4
   4f52c:	f800283a 	ret

0004f530 <atexit>:
   4f530:	200b883a 	mov	r5,r4
   4f534:	000f883a 	mov	r7,zero
   4f538:	000d883a 	mov	r6,zero
   4f53c:	0009883a 	mov	r4,zero
   4f540:	004f5f81 	jmpi	4f5f8 <__register_exitproc>

0004f544 <exit>:
   4f544:	defffe04 	addi	sp,sp,-8
   4f548:	000b883a 	mov	r5,zero
   4f54c:	dc000015 	stw	r16,0(sp)
   4f550:	dfc00115 	stw	ra,4(sp)
   4f554:	2021883a 	mov	r16,r4
   4f558:	004f7100 	call	4f710 <__call_exitprocs>
   4f55c:	00800174 	movhi	r2,5
   4f560:	1085ee04 	addi	r2,r2,6072
   4f564:	11000017 	ldw	r4,0(r2)
   4f568:	20800f17 	ldw	r2,60(r4)
   4f56c:	10000126 	beq	r2,zero,4f574 <exit+0x30>
   4f570:	103ee83a 	callr	r2
   4f574:	8009883a 	mov	r4,r16
   4f578:	004f8900 	call	4f890 <_exit>

0004f57c <memcmp>:
   4f57c:	01c000c4 	movi	r7,3
   4f580:	3980192e 	bgeu	r7,r6,4f5e8 <memcmp+0x6c>
   4f584:	2144b03a 	or	r2,r4,r5
   4f588:	11c4703a 	and	r2,r2,r7
   4f58c:	10000f26 	beq	r2,zero,4f5cc <memcmp+0x50>
   4f590:	20800003 	ldbu	r2,0(r4)
   4f594:	28c00003 	ldbu	r3,0(r5)
   4f598:	10c0151e 	bne	r2,r3,4f5f0 <memcmp+0x74>
   4f59c:	31bfff84 	addi	r6,r6,-2
   4f5a0:	01ffffc4 	movi	r7,-1
   4f5a4:	00000406 	br	4f5b8 <memcmp+0x3c>
   4f5a8:	20800003 	ldbu	r2,0(r4)
   4f5ac:	28c00003 	ldbu	r3,0(r5)
   4f5b0:	31bfffc4 	addi	r6,r6,-1
   4f5b4:	10c00e1e 	bne	r2,r3,4f5f0 <memcmp+0x74>
   4f5b8:	21000044 	addi	r4,r4,1
   4f5bc:	29400044 	addi	r5,r5,1
   4f5c0:	31fff91e 	bne	r6,r7,4f5a8 <__alt_data_end+0xffff31e8>
   4f5c4:	0005883a 	mov	r2,zero
   4f5c8:	f800283a 	ret
   4f5cc:	20c00017 	ldw	r3,0(r4)
   4f5d0:	28800017 	ldw	r2,0(r5)
   4f5d4:	18bfee1e 	bne	r3,r2,4f590 <__alt_data_end+0xffff31d0>
   4f5d8:	31bfff04 	addi	r6,r6,-4
   4f5dc:	21000104 	addi	r4,r4,4
   4f5e0:	29400104 	addi	r5,r5,4
   4f5e4:	39bff936 	bltu	r7,r6,4f5cc <__alt_data_end+0xffff320c>
   4f5e8:	303fe91e 	bne	r6,zero,4f590 <__alt_data_end+0xffff31d0>
   4f5ec:	003ff506 	br	4f5c4 <__alt_data_end+0xffff3204>
   4f5f0:	10c5c83a 	sub	r2,r2,r3
   4f5f4:	f800283a 	ret

0004f5f8 <__register_exitproc>:
   4f5f8:	defffa04 	addi	sp,sp,-24
   4f5fc:	dc000315 	stw	r16,12(sp)
   4f600:	04000174 	movhi	r16,5
   4f604:	8405ee04 	addi	r16,r16,6072
   4f608:	80c00017 	ldw	r3,0(r16)
   4f60c:	dc400415 	stw	r17,16(sp)
   4f610:	dfc00515 	stw	ra,20(sp)
   4f614:	18805217 	ldw	r2,328(r3)
   4f618:	2023883a 	mov	r17,r4
   4f61c:	10003726 	beq	r2,zero,4f6fc <__register_exitproc+0x104>
   4f620:	10c00117 	ldw	r3,4(r2)
   4f624:	010007c4 	movi	r4,31
   4f628:	20c00e16 	blt	r4,r3,4f664 <__register_exitproc+0x6c>
   4f62c:	1a000044 	addi	r8,r3,1
   4f630:	8800221e 	bne	r17,zero,4f6bc <__register_exitproc+0xc4>
   4f634:	18c00084 	addi	r3,r3,2
   4f638:	18c7883a 	add	r3,r3,r3
   4f63c:	18c7883a 	add	r3,r3,r3
   4f640:	12000115 	stw	r8,4(r2)
   4f644:	10c7883a 	add	r3,r2,r3
   4f648:	19400015 	stw	r5,0(r3)
   4f64c:	0005883a 	mov	r2,zero
   4f650:	dfc00517 	ldw	ra,20(sp)
   4f654:	dc400417 	ldw	r17,16(sp)
   4f658:	dc000317 	ldw	r16,12(sp)
   4f65c:	dec00604 	addi	sp,sp,24
   4f660:	f800283a 	ret
   4f664:	00800034 	movhi	r2,0
   4f668:	10800004 	addi	r2,r2,0
   4f66c:	10002626 	beq	r2,zero,4f708 <__register_exitproc+0x110>
   4f670:	01006404 	movi	r4,400
   4f674:	d9400015 	stw	r5,0(sp)
   4f678:	d9800115 	stw	r6,4(sp)
   4f67c:	d9c00215 	stw	r7,8(sp)
   4f680:	00000000 	call	0 <__alt_mem_MemoriaDados>
   4f684:	d9400017 	ldw	r5,0(sp)
   4f688:	d9800117 	ldw	r6,4(sp)
   4f68c:	d9c00217 	ldw	r7,8(sp)
   4f690:	10001d26 	beq	r2,zero,4f708 <__register_exitproc+0x110>
   4f694:	81000017 	ldw	r4,0(r16)
   4f698:	10000115 	stw	zero,4(r2)
   4f69c:	02000044 	movi	r8,1
   4f6a0:	22405217 	ldw	r9,328(r4)
   4f6a4:	0007883a 	mov	r3,zero
   4f6a8:	12400015 	stw	r9,0(r2)
   4f6ac:	20805215 	stw	r2,328(r4)
   4f6b0:	10006215 	stw	zero,392(r2)
   4f6b4:	10006315 	stw	zero,396(r2)
   4f6b8:	883fde26 	beq	r17,zero,4f634 <__alt_data_end+0xffff3274>
   4f6bc:	18c9883a 	add	r4,r3,r3
   4f6c0:	2109883a 	add	r4,r4,r4
   4f6c4:	1109883a 	add	r4,r2,r4
   4f6c8:	21802215 	stw	r6,136(r4)
   4f6cc:	01800044 	movi	r6,1
   4f6d0:	12406217 	ldw	r9,392(r2)
   4f6d4:	30cc983a 	sll	r6,r6,r3
   4f6d8:	4992b03a 	or	r9,r9,r6
   4f6dc:	12406215 	stw	r9,392(r2)
   4f6e0:	21c04215 	stw	r7,264(r4)
   4f6e4:	01000084 	movi	r4,2
   4f6e8:	893fd21e 	bne	r17,r4,4f634 <__alt_data_end+0xffff3274>
   4f6ec:	11006317 	ldw	r4,396(r2)
   4f6f0:	218cb03a 	or	r6,r4,r6
   4f6f4:	11806315 	stw	r6,396(r2)
   4f6f8:	003fce06 	br	4f634 <__alt_data_end+0xffff3274>
   4f6fc:	18805304 	addi	r2,r3,332
   4f700:	18805215 	stw	r2,328(r3)
   4f704:	003fc606 	br	4f620 <__alt_data_end+0xffff3260>
   4f708:	00bfffc4 	movi	r2,-1
   4f70c:	003fd006 	br	4f650 <__alt_data_end+0xffff3290>

0004f710 <__call_exitprocs>:
   4f710:	defff504 	addi	sp,sp,-44
   4f714:	df000915 	stw	fp,36(sp)
   4f718:	dd400615 	stw	r21,24(sp)
   4f71c:	dc800315 	stw	r18,12(sp)
   4f720:	dfc00a15 	stw	ra,40(sp)
   4f724:	ddc00815 	stw	r23,32(sp)
   4f728:	dd800715 	stw	r22,28(sp)
   4f72c:	dd000515 	stw	r20,20(sp)
   4f730:	dcc00415 	stw	r19,16(sp)
   4f734:	dc400215 	stw	r17,8(sp)
   4f738:	dc000115 	stw	r16,4(sp)
   4f73c:	d9000015 	stw	r4,0(sp)
   4f740:	2839883a 	mov	fp,r5
   4f744:	04800044 	movi	r18,1
   4f748:	057fffc4 	movi	r21,-1
   4f74c:	00800174 	movhi	r2,5
   4f750:	1085ee04 	addi	r2,r2,6072
   4f754:	12000017 	ldw	r8,0(r2)
   4f758:	45005217 	ldw	r20,328(r8)
   4f75c:	44c05204 	addi	r19,r8,328
   4f760:	a0001c26 	beq	r20,zero,4f7d4 <__call_exitprocs+0xc4>
   4f764:	a0800117 	ldw	r2,4(r20)
   4f768:	15ffffc4 	addi	r23,r2,-1
   4f76c:	b8000d16 	blt	r23,zero,4f7a4 <__call_exitprocs+0x94>
   4f770:	14000044 	addi	r16,r2,1
   4f774:	8421883a 	add	r16,r16,r16
   4f778:	8421883a 	add	r16,r16,r16
   4f77c:	84402004 	addi	r17,r16,128
   4f780:	a463883a 	add	r17,r20,r17
   4f784:	a421883a 	add	r16,r20,r16
   4f788:	e0001e26 	beq	fp,zero,4f804 <__call_exitprocs+0xf4>
   4f78c:	80804017 	ldw	r2,256(r16)
   4f790:	e0801c26 	beq	fp,r2,4f804 <__call_exitprocs+0xf4>
   4f794:	bdffffc4 	addi	r23,r23,-1
   4f798:	843fff04 	addi	r16,r16,-4
   4f79c:	8c7fff04 	addi	r17,r17,-4
   4f7a0:	bd7ff91e 	bne	r23,r21,4f788 <__alt_data_end+0xffff33c8>
   4f7a4:	00800034 	movhi	r2,0
   4f7a8:	10800004 	addi	r2,r2,0
   4f7ac:	10000926 	beq	r2,zero,4f7d4 <__call_exitprocs+0xc4>
   4f7b0:	a0800117 	ldw	r2,4(r20)
   4f7b4:	1000301e 	bne	r2,zero,4f878 <__call_exitprocs+0x168>
   4f7b8:	a0800017 	ldw	r2,0(r20)
   4f7bc:	10003226 	beq	r2,zero,4f888 <__call_exitprocs+0x178>
   4f7c0:	a009883a 	mov	r4,r20
   4f7c4:	98800015 	stw	r2,0(r19)
   4f7c8:	00000000 	call	0 <__alt_mem_MemoriaDados>
   4f7cc:	9d000017 	ldw	r20,0(r19)
   4f7d0:	a03fe41e 	bne	r20,zero,4f764 <__alt_data_end+0xffff33a4>
   4f7d4:	dfc00a17 	ldw	ra,40(sp)
   4f7d8:	df000917 	ldw	fp,36(sp)
   4f7dc:	ddc00817 	ldw	r23,32(sp)
   4f7e0:	dd800717 	ldw	r22,28(sp)
   4f7e4:	dd400617 	ldw	r21,24(sp)
   4f7e8:	dd000517 	ldw	r20,20(sp)
   4f7ec:	dcc00417 	ldw	r19,16(sp)
   4f7f0:	dc800317 	ldw	r18,12(sp)
   4f7f4:	dc400217 	ldw	r17,8(sp)
   4f7f8:	dc000117 	ldw	r16,4(sp)
   4f7fc:	dec00b04 	addi	sp,sp,44
   4f800:	f800283a 	ret
   4f804:	a0800117 	ldw	r2,4(r20)
   4f808:	80c00017 	ldw	r3,0(r16)
   4f80c:	10bfffc4 	addi	r2,r2,-1
   4f810:	15c01426 	beq	r2,r23,4f864 <__call_exitprocs+0x154>
   4f814:	80000015 	stw	zero,0(r16)
   4f818:	183fde26 	beq	r3,zero,4f794 <__alt_data_end+0xffff33d4>
   4f81c:	95c8983a 	sll	r4,r18,r23
   4f820:	a0806217 	ldw	r2,392(r20)
   4f824:	a5800117 	ldw	r22,4(r20)
   4f828:	2084703a 	and	r2,r4,r2
   4f82c:	10000b26 	beq	r2,zero,4f85c <__call_exitprocs+0x14c>
   4f830:	a0806317 	ldw	r2,396(r20)
   4f834:	2088703a 	and	r4,r4,r2
   4f838:	20000c1e 	bne	r4,zero,4f86c <__call_exitprocs+0x15c>
   4f83c:	89400017 	ldw	r5,0(r17)
   4f840:	d9000017 	ldw	r4,0(sp)
   4f844:	183ee83a 	callr	r3
   4f848:	a0800117 	ldw	r2,4(r20)
   4f84c:	15bfbf1e 	bne	r2,r22,4f74c <__alt_data_end+0xffff338c>
   4f850:	98800017 	ldw	r2,0(r19)
   4f854:	153fcf26 	beq	r2,r20,4f794 <__alt_data_end+0xffff33d4>
   4f858:	003fbc06 	br	4f74c <__alt_data_end+0xffff338c>
   4f85c:	183ee83a 	callr	r3
   4f860:	003ff906 	br	4f848 <__alt_data_end+0xffff3488>
   4f864:	a5c00115 	stw	r23,4(r20)
   4f868:	003feb06 	br	4f818 <__alt_data_end+0xffff3458>
   4f86c:	89000017 	ldw	r4,0(r17)
   4f870:	183ee83a 	callr	r3
   4f874:	003ff406 	br	4f848 <__alt_data_end+0xffff3488>
   4f878:	a0800017 	ldw	r2,0(r20)
   4f87c:	a027883a 	mov	r19,r20
   4f880:	1029883a 	mov	r20,r2
   4f884:	003fb606 	br	4f760 <__alt_data_end+0xffff33a0>
   4f888:	0005883a 	mov	r2,zero
   4f88c:	003ffb06 	br	4f87c <__alt_data_end+0xffff34bc>

0004f890 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f890:	defffd04 	addi	sp,sp,-12
   4f894:	df000215 	stw	fp,8(sp)
   4f898:	df000204 	addi	fp,sp,8
   4f89c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f8a0:	0001883a 	nop
   4f8a4:	e0bfff17 	ldw	r2,-4(fp)
   4f8a8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f8ac:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f8b0:	10000226 	beq	r2,zero,4f8bc <_exit+0x2c>
    ALT_SIM_FAIL();
   4f8b4:	002af070 	cmpltui	zero,zero,43969
   4f8b8:	00000106 	br	4f8c0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f8bc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f8c0:	003fff06 	br	4f8c0 <__alt_data_end+0xffff3500>
