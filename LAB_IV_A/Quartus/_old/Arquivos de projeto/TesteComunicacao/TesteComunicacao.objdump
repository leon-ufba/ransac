
TesteComunicacao.elf:     file format elf32-littlenios2
TesteComunicacao.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040230

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000fbdc memsz 0x0000fbdc flags r-x
    LOAD off    0x00010bfc vaddr 0x0004fbfc paddr 0x00051828 align 2**12
         filesz 0x00001c2c memsz 0x00001c2c flags rw-
    LOAD off    0x00013454 vaddr 0x00053454 paddr 0x00053454 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f6c4  00040230  00040230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000308  0004f8f4  0004f8f4  000108f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c2c  0004fbfc  00051828  00010bfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00053454  00053454  00013454  2**2
                  ALLOC, SMALL_DATA
  6 .MemoriaDados 00000000  00000000  00000000  00012828  2**0
                  CONTENTS
  7 .MemoriaPrograma 00000000  000535b4  000535b4  00012828  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012828  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000e70  00000000  00000000  00012850  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00022863  00000000  00000000  000136c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008c46  00000000  00000000  00035f23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b12b  00000000  00000000  0003eb69  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001ff4  00000000  00000000  00049c94  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000037f8  00000000  00000000  0004bc88  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017755  00000000  00000000  0004f480  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00066bd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  00066be8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006b4b6  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000b  00000000  00000000  0006b4b9  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006b4c4  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006b4c5  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0006b4c6  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0006b4cf  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0006b4d8  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000010  00000000  00000000  0006b4e1  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000001f  00000000  00000000  0006b4f1  2**0
                  CONTENTS, READONLY
 27 .jdi          0000561e  00000000  00000000  0006b510  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00035628  00000000  00000000  00070b2e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040230 l    d  .text	00000000 .text
0004f8f4 l    d  .rodata	00000000 .rodata
0004fbfc l    d  .rwdata	00000000 .rwdata
00053454 l    d  .bss	00000000 .bss
00000000 l    d  .MemoriaDados	00000000 .MemoriaDados
000535b4 l    d  .MemoriaPrograma	00000000 .MemoriaPrograma
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../TesteComunicacao_bsp//obj/HAL/src/crt0.o
00040268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004f94a l     O .rodata	00000010 zeroes.4404
00042758 l     F .text	000000bc __sbprintf
0004f95a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00042968 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000444c0 l     F .text	00000008 __fp_unlock
000444d4 l     F .text	0000019c __sinit.part.1
00044670 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fd30 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00050174 l     O .rwdata	00000020 lc_ctype_charset
00050154 l     O .rwdata	00000020 lc_message_charset
00050194 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004f98c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00047054 l     F .text	000000fc __sprint_r.part.0
0004fab0 l     O .rodata	00000010 zeroes.4349
00048690 l     F .text	000000bc __sbprintf
0004fac0 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d260 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d374 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d3a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d494 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d57c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d668 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d844 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00051818 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0004dab8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004dbf4 l     F .text	00000034 alt_dev_reg
0005077c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004decc l     F .text	0000020c altera_avalon_jtag_uart_irq
0004e0d8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004e85c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004ecbc l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004ee1c l     F .text	0000003c alt_get_errno
0004ee58 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00053488 g     O .bss	00000004 alt_instruction_exception_handler
00046b64 g     F .text	00000074 _mprec_log10
00046c50 g     F .text	0000008c __any_on
0004910c g     F .text	00000054 _isatty_r
0004f998 g     O .rodata	00000028 __mprec_tinytens
0004d780 g     F .text	0000007c alt_main
000534b4 g     O .bss	00000100 alt_irq
00049160 g     F .text	00000060 _lseek_r
00051828 g       *ABS*	00000000 __flash_rwdata_start
0004bc38 g     F .text	00000088 .hidden __eqdf2
000535b4 g       *ABS*	00000000 __alt_heap_start
00040424 g     F .text	0000003c printf
00049a38 g     F .text	0000009c _wcrtomb_r
00046e7c g     F .text	0000005c __sseek
00044820 g     F .text	00000010 __sinit
000498e0 g     F .text	00000140 __swbuf_r
00044e2c g     F .text	0000007c _setlocale_r
00044678 g     F .text	00000078 __sfmoreglue
0004d820 g     F .text	00000024 __malloc_unlock
000491c0 g     F .text	0000015c memmove
00044808 g     F .text	00000018 _cleanup
00045c24 g     F .text	000000a8 _Balloc
0004bcc0 g     F .text	000000dc .hidden __gtdf2
0004f244 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00048be8 g     F .text	0000005c _fstat_r
0005346c g     O .bss	00000004 errno
00046df8 g     F .text	00000008 __seofread
00053474 g     O .bss	00000004 alt_argv
000597dc g       *ABS*	00000000 _gp
000505fc g     O .rwdata	00000180 alt_fd_list
0004f268 g     F .text	00000090 alt_find_dev
000459b4 g     F .text	00000148 memcpy
000444c8 g     F .text	0000000c _cleanup_r
0004d078 g     F .text	000000dc .hidden __floatsidf
0004eda0 g     F .text	0000007c alt_io_redirect
0004bd9c g     F .text	000000f4 .hidden __ltdf2
0004f8f4 g       *ABS*	00000000 __DTOR_END__
0004f4c4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00046cdc g     F .text	00000074 __fpclassifyd
00046ac0 g     F .text	000000a4 __ratio
00048674 g     F .text	0000001c __vfiprintf_internal
0004e2d0 g     F .text	0000021c altera_avalon_jtag_uart_read
000403f4 g     F .text	00000030 _printf_r
0004a8d8 g     F .text	00000064 .hidden __udivsi3
0004d4d0 g     F .text	000000ac isatty
0004f9e8 g     O .rodata	000000c8 __mprec_tens
00044ea8 g     F .text	0000000c __locale_charset
00053468 g     O .bss	00000004 __malloc_top_pad
000517f0 g     O .rwdata	00000004 __mb_cur_max
00044ed8 g     F .text	0000000c _localeconv_r
00048c44 g     F .text	000004c8 __sfvwrite_r
00046058 g     F .text	0000003c __i2b
00046d50 g     F .text	00000054 _sbrk_r
0004931c g     F .text	00000060 _read_r
00051810 g     O .rwdata	00000004 alt_max_fd
000488dc g     F .text	000000f0 _fclose_r
00044490 g     F .text	00000030 fflush
00053464 g     O .bss	00000004 __malloc_max_sbrked_mem
0004a9bc g     F .text	000008ac .hidden __adddf3
00046868 g     F .text	0000010c __b2d
0004a21c g     F .text	000005c4 .hidden __umoddi3
0004d6a4 g     F .text	000000dc lseek
000517e8 g     O .rwdata	00000004 _global_impure_ptr
0004937c g     F .text	00000564 _realloc_r
000535b4 g       *ABS*	00000000 __bss_end
0004ebcc g     F .text	000000f0 alt_iic_isr_register
0004f13c g     F .text	00000108 alt_tick
00049c20 g     F .text	000005fc .hidden __udivdi3
00048b44 g     F .text	00000024 _fputwc_r
0004f9c0 g     O .rodata	00000028 __mprec_bigtens
00045e3c g     F .text	00000104 __s2b
0004d154 g     F .text	000000a8 .hidden __floatunsidf
000465a8 g     F .text	00000060 __mcmp
00044840 g     F .text	00000018 __fp_lock_all
0004eb80 g     F .text	0000004c alt_ic_irq_enabled
0004f0a0 g     F .text	0000009c alt_alarm_stop
0005347c g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
000505d4 g     O .rwdata	00000028 alt_dev_null
00000000 g       *ABS*	00000000 __alt_mem_MemoriaDados
0004e83c g     F .text	00000020 alt_dcache_flush_all
00045f40 g     F .text	00000068 __hi0bits
0004cff8 g     F .text	00000080 .hidden __fixdfsi
00051828 g       *ABS*	00000000 __ram_rwdata_end
00051808 g     O .rwdata	00000008 alt_dev_list
0004daf4 g     F .text	00000100 write
0004fbfc g       *ABS*	00000000 __ram_rodata_end
0004d3dc g     F .text	000000b8 fstat
0004bd9c g     F .text	000000f4 .hidden __ledf2
00046320 g     F .text	00000140 __pow5mult
00047168 g     F .text	0000150c ___vfiprintf_internal_r
0005345c g     O .bss	00000004 __nlocale_changed
0004a93c g     F .text	00000058 .hidden __umodsi3
000535b4 g       *ABS*	00000000 end
00040000 g       *ABS*	00000000 __alt_mem_MemoriaPrograma
0004de0c g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0004f8f4 g       *ABS*	00000000 __CTOR_LIST__
0005c3c0 g       *ABS*	00000000 __alt_stack_pointer
0004d1fc g     F .text	00000064 .hidden __clzsi2
0004e4ec g     F .text	00000224 altera_avalon_jtag_uart_write
00044830 g     F .text	00000004 __sfp_lock_acquire
000458d0 g     F .text	000000e4 memchr
00040460 g     F .text	000022dc ___vfprintf_internal_r
00044994 g     F .text	00000310 _free_r
00044eb4 g     F .text	00000010 __locale_mb_cur_max
0004f740 g     F .text	00000180 __call_exitprocs
00053458 g     O .bss	00000004 __mlocale_changed
000517f4 g     O .rwdata	00000004 __malloc_sbrk_base
00040230 g     F .text	0000003c _start
00053480 g     O .bss	00000004 _alt_tick_rate
00046460 g     F .text	00000148 __lshift
00053484 g     O .bss	00000004 _alt_nticks
0004d880 g     F .text	00000104 read
0004dc60 g     F .text	00000048 alt_sys_init
0004f628 g     F .text	00000118 __register_exitproc
00046094 g     F .text	0000028c __multiply
0004e178 g     F .text	00000068 altera_avalon_jtag_uart_close
0004a994 g     F .text	00000028 .hidden __mulsi3
0004fbfc g       *ABS*	00000000 __ram_rwdata_start
0004f8f4 g       *ABS*	00000000 __ram_rodata_start
0005348c g     O .bss	00000028 __malloc_current_mallinfo
00046974 g     F .text	0000014c __d2b
0004dca8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f400 g     F .text	000000c4 alt_get_fd
000487ac g     F .text	00000054 _close_r
0004f5ac g     F .text	0000007c memcmp
0004dd68 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000535b4 g       *ABS*	00000000 __alt_stack_base
0004ddb8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00042814 g     F .text	00000154 __swsetup_r
0004b268 g     F .text	000009d0 .hidden __divdf3
000446f0 g     F .text	00000118 __sfp
00046bd8 g     F .text	00000078 __copybits
000501cc g     O .rwdata	00000408 __malloc_av_
0004483c g     F .text	00000004 __sinit_lock_release
0004be90 g     F .text	0000086c .hidden __muldf3
00046da4 g     F .text	00000054 __sread
0004f2f8 g     F .text	00000108 alt_find_file
0004e898 g     F .text	000000a4 alt_dev_llist_insert
0004d7fc g     F .text	00000024 __malloc_lock
0004da08 g     F .text	000000b0 sbrk
00044434 g     F .text	0000005c _fflush_r
00048800 g     F .text	000000dc _calloc_r
00053454 g       *ABS*	00000000 __bss_start
000517dc g     O .rwdata	00000004 data
00045afc g     F .text	00000128 memset
0004026c g     F .text	00000188 main
00053478 g     O .bss	00000004 alt_envp
00053460 g     O .bss	00000004 __malloc_max_total_mem
0004dd08 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00049a20 g     F .text	00000018 __swbuf
00046ed8 g     F .text	00000008 __sclose
0005c3c0 g       *ABS*	00000000 __alt_heap_limit
000489cc g     F .text	00000014 fclose
000517e4 g     O .rwdata	00000001 size
00042b90 g     F .text	00001688 _dtoa_r
000450c4 g     F .text	0000080c _malloc_r
00049b94 g     F .text	00000030 __ascii_wctomb
00051814 g     O .rwdata	00000004 alt_errno
00044ca4 g     F .text	000000c4 _fwalk
0004a7e0 g     F .text	00000084 .hidden __divsi3
00044870 g     F .text	00000124 _malloc_trim_r
0004f8f4 g       *ABS*	00000000 __CTOR_END__
00046ee0 g     F .text	000000dc strcmp
0004f8f4 g       *ABS*	00000000 __flash_rodata_start
0004f8f4 g       *ABS*	00000000 __DTOR_LIST__
0004bc38 g     F .text	00000088 .hidden __nedf2
0004dc28 g     F .text	00000038 alt_irq_init
0004d984 g     F .text	00000084 alt_release_fd
0004fad0 g     O .rodata	00000100 .hidden __clz_tab
00053454 g     O .bss	00000004 _PathLocale
0004f560 g     F .text	00000014 atexit
0004874c g     F .text	00000060 _write_r
00044ee4 g     F .text	00000018 setlocale
000517ec g     O .rwdata	00000004 _impure_ptr
00053470 g     O .bss	00000004 alt_argc
00044218 g     F .text	0000021c __sflush_r
0004e99c g     F .text	00000060 _do_dtors
00044ed0 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00046804 g     F .text	00000064 __ulp
00044858 g     F .text	00000018 __fp_unlock_all
00051800 g     O .rwdata	00000008 alt_fs_list
0004fbfc g     O .rwdata	00000132 coords
00040020 g       *ABS*	00000000 __ram_exceptions_start
00044efc g     F .text	0000000c localeconv
0004ea1c g     F .text	00000050 alt_ic_isr_register
00051828 g       *ABS*	00000000 _edata
000535b4 g       *ABS*	00000000 _end
000489e0 g     F .text	00000164 __fputwc
00040230 g       *ABS*	00000000 __ram_exceptions_end
0004e1e0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004eaf4 g     F .text	0000008c alt_ic_irq_disable
00046e00 g     F .text	0000007c __swrite
000517f8 g     O .rwdata	00000004 __malloc_trim_threshold
00044ec4 g     F .text	0000000c __locale_msgcharset
0004f574 g     F .text	00000038 exit
00044d68 g     F .text	000000c4 _fwalk_reent
00046608 g     F .text	000001fc __mdiff
0004a864 g     F .text	00000074 .hidden __modsi3
0005c3c0 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00044834 g     F .text	00000004 __sfp_lock_release
0004f8c0 g     F .text	00000034 _exit
0004e710 g     F .text	0000012c alt_alarm_start
00044f08 g     F .text	000001bc __smakebuf_r
00046fbc g     F .text	00000098 strlen
000517e0 g     O .rwdata	00000004 controle
0004ef44 g     F .text	0000015c open
0004bcc0 g     F .text	000000dc .hidden __gedf2
000517fc g     O .rwdata	00000004 __wctomb
00047150 g     F .text	00000018 __sprint_r
0004e9fc g     F .text	00000020 alt_icache_flush_all
0005181c g     O .rwdata	00000004 alt_priority_mask
0004ea6c g     F .text	00000088 alt_ic_irq_enable
0004273c g     F .text	0000001c __vfprintf_internal
00049bc4 g     F .text	0000005c _wctomb_r
0004c6fc g     F .text	000008fc .hidden __subdf3
00045fa8 g     F .text	000000b0 __lo0bits
00051820 g     O .rwdata	00000008 alt_alarm_list
0004e93c g     F .text	00000060 _do_ctors
00049ad4 g     F .text	000000c0 wcrtomb
0004d29c g     F .text	000000d8 close
0004d5e4 g     F .text	00000084 alt_load
00048b68 g     F .text	00000080 fputwc
00044838 g     F .text	00000004 __sinit_lock_acquire
00045cf4 g     F .text	00000148 __multadd
00045ccc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408c14 	ori	at,at,560
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108d2d04 	addi	r2,r2,13492
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108d2d04 	addi	r2,r2,13492
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffe3d6c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffe3d60>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401e4:	00bfffc4 	movi	r2,-1
   401e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   401ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f0:	d0a72b17 	ldw	r2,-25428(gp)
   401f4:	10000726 	beq	r2,zero,40214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401f8:	d0a72b17 	ldw	r2,-25428(gp)
   401fc:	e0fffd17 	ldw	r3,-12(fp)
   40200:	e1bffe17 	ldw	r6,-8(fp)
   40204:	e17fff17 	ldw	r5,-4(fp)
   40208:	1809883a 	mov	r4,r3
   4020c:	103ee83a 	callr	r2
   40210:	00000206 	br	4021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40218:	0005883a 	mov	r2,zero
}
   4021c:	e037883a 	mov	sp,fp
   40220:	dfc00117 	ldw	ra,4(sp)
   40224:	df000017 	ldw	fp,0(sp)
   40228:	dec00204 	addi	sp,sp,8
   4022c:	f800283a 	ret

Disassembly of section .text:

00040230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40230:	06c00174 	movhi	sp,5
    ori sp, sp, %lo(__alt_stack_pointer)
   40234:	def0f014 	ori	sp,sp,50112
    movhi gp, %hi(_gp)
   40238:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   4023c:	d6a5f714 	ori	gp,gp,38876
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40240:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40244:	108d1514 	ori	r2,r2,13396

    movhi r3, %hi(__bss_end)
   40248:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   4024c:	18cd6d14 	ori	r3,r3,13748

    beq r2, r3, 1f
   40250:	10c00326 	beq	r2,r3,40260 <_start+0x30>

0:
    stw zero, (r2)
   40254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   4025c:	10fffd36 	bltu	r2,r3,40254 <__alt_data_end+0xfffe3e94>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40260:	004d5e40 	call	4d5e4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40264:	004d7800 	call	4d780 <alt_main>

00040268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40268:	003fff06 	br	40268 <__alt_data_end+0xfffe3ea8>

0004026c <main>:
#include <math.h>
#include "ransac.h"



int main() {
   4026c:	defff704 	addi	sp,sp,-36
   40270:	dfc00815 	stw	ra,32(sp)
   40274:	df000715 	stw	fp,28(sp)
   40278:	df000704 	addi	fp,sp,28

    int data_size = 0;
   4027c:	e03ffc15 	stw	zero,-16(fp)
    int temp_data_size = 0;
   40280:	e03ffd15 	stw	zero,-12(fp)
    int temp_x = 0;
   40284:	e03ffe15 	stw	zero,-8(fp)
    int temp_y = 0;
   40288:	e03fff15 	stw	zero,-4(fp)

    //read data_size
	data_size = (int)(size&0xFF);
   4028c:	d0a00203 	ldbu	r2,-32760(gp)
   40290:	10803fcc 	andi	r2,r2,255
   40294:	1080201c 	xori	r2,r2,128
   40298:	10bfe004 	addi	r2,r2,-128
   4029c:	10803fcc 	andi	r2,r2,255
   402a0:	e0bffc15 	stw	r2,-16(fp)
	temp_data_size = (2*data_size);
   402a4:	e0bffc17 	ldw	r2,-16(fp)
   402a8:	1085883a 	add	r2,r2,r2
   402ac:	e0bffd15 	stw	r2,-12(fp)

    int j = 0;
   402b0:	e03ff915 	stw	zero,-28(fp)
    for (int i = 0; i<temp_data_size; i+=1) {
   402b4:	e03ffa15 	stw	zero,-24(fp)
   402b8:	00002306 	br	40348 <main+0xdc>
    	data[i] = (coords[X]&0xFF)|(coords[Y]<<8);
   402bc:	d0e00017 	ldw	r3,-32768(gp)
   402c0:	e0bffa17 	ldw	r2,-24(fp)
   402c4:	1085883a 	add	r2,r2,r2
   402c8:	1085883a 	add	r2,r2,r2
   402cc:	1887883a 	add	r3,r3,r2
   402d0:	00800174 	movhi	r2,5
   402d4:	10beff04 	addi	r2,r2,-1028
   402d8:	e13ff917 	ldw	r4,-28(fp)
   402dc:	1105883a 	add	r2,r2,r4
   402e0:	10800003 	ldbu	r2,0(r2)
   402e4:	10803fcc 	andi	r2,r2,255
   402e8:	1080201c 	xori	r2,r2,128
   402ec:	10bfe004 	addi	r2,r2,-128
   402f0:	11003fcc 	andi	r4,r2,255
   402f4:	e0bff917 	ldw	r2,-28(fp)
   402f8:	11400044 	addi	r5,r2,1
   402fc:	00800174 	movhi	r2,5
   40300:	10beff04 	addi	r2,r2,-1028
   40304:	1145883a 	add	r2,r2,r5
   40308:	10800003 	ldbu	r2,0(r2)
   4030c:	10803fcc 	andi	r2,r2,255
   40310:	1080201c 	xori	r2,r2,128
   40314:	10bfe004 	addi	r2,r2,-128
   40318:	1004923a 	slli	r2,r2,8
   4031c:	2084b03a 	or	r2,r4,r2
   40320:	18800015 	stw	r2,0(r3)
    	controle[0] = i;
   40324:	d0a00117 	ldw	r2,-32764(gp)
   40328:	e0fffa17 	ldw	r3,-24(fp)
   4032c:	10c00015 	stw	r3,0(r2)
    	j+=2;
   40330:	e0bff917 	ldw	r2,-28(fp)
   40334:	10800084 	addi	r2,r2,2
   40338:	e0bff915 	stw	r2,-28(fp)
    //read data_size
	data_size = (int)(size&0xFF);
	temp_data_size = (2*data_size);

    int j = 0;
    for (int i = 0; i<temp_data_size; i+=1) {
   4033c:	e0bffa17 	ldw	r2,-24(fp)
   40340:	10800044 	addi	r2,r2,1
   40344:	e0bffa15 	stw	r2,-24(fp)
   40348:	e0fffa17 	ldw	r3,-24(fp)
   4034c:	e0bffd17 	ldw	r2,-12(fp)
   40350:	18bfda16 	blt	r3,r2,402bc <__alt_data_end+0xfffe3efc>
    	data[i] = (coords[X]&0xFF)|(coords[Y]<<8);
    	controle[0] = i;
    	j+=2;
    }
    printf("size: %d\n", data_size);
   40354:	e17ffc17 	ldw	r5,-16(fp)
   40358:	01000174 	movhi	r4,5
   4035c:	213e3d04 	addi	r4,r4,-1804
   40360:	00404240 	call	40424 <printf>

    for (int i = 0; i<data_size; i+=1) {
   40364:	e03ffb15 	stw	zero,-20(fp)
   40368:	00001906 	br	403d0 <main+0x164>
    	temp_x = data[i]&0xFF;
   4036c:	d0e00017 	ldw	r3,-32768(gp)
   40370:	e0bffb17 	ldw	r2,-20(fp)
   40374:	1085883a 	add	r2,r2,r2
   40378:	1085883a 	add	r2,r2,r2
   4037c:	1885883a 	add	r2,r3,r2
   40380:	10800017 	ldw	r2,0(r2)
   40384:	10803fcc 	andi	r2,r2,255
   40388:	e0bffe15 	stw	r2,-8(fp)
    	temp_y = (data[i]>>8)&0xFF;
   4038c:	d0e00017 	ldw	r3,-32768(gp)
   40390:	e0bffb17 	ldw	r2,-20(fp)
   40394:	1085883a 	add	r2,r2,r2
   40398:	1085883a 	add	r2,r2,r2
   4039c:	1885883a 	add	r2,r3,r2
   403a0:	10800017 	ldw	r2,0(r2)
   403a4:	1005d23a 	srai	r2,r2,8
   403a8:	10803fcc 	andi	r2,r2,255
   403ac:	e0bfff15 	stw	r2,-4(fp)
    	printf("%d, %d\n", temp_x, temp_y);
   403b0:	e1bfff17 	ldw	r6,-4(fp)
   403b4:	e17ffe17 	ldw	r5,-8(fp)
   403b8:	01000174 	movhi	r4,5
   403bc:	213e4004 	addi	r4,r4,-1792
   403c0:	00404240 	call	40424 <printf>
    	controle[0] = i;
    	j+=2;
    }
    printf("size: %d\n", data_size);

    for (int i = 0; i<data_size; i+=1) {
   403c4:	e0bffb17 	ldw	r2,-20(fp)
   403c8:	10800044 	addi	r2,r2,1
   403cc:	e0bffb15 	stw	r2,-20(fp)
   403d0:	e0fffb17 	ldw	r3,-20(fp)
   403d4:	e0bffc17 	ldw	r2,-16(fp)
   403d8:	18bfe416 	blt	r3,r2,4036c <__alt_data_end+0xfffe3fac>
    	temp_x = data[i]&0xFF;
    	temp_y = (data[i]>>8)&0xFF;
    	printf("%d, %d\n", temp_x, temp_y);
    }
    return 0;
   403dc:	0005883a 	mov	r2,zero
}
   403e0:	e037883a 	mov	sp,fp
   403e4:	dfc00117 	ldw	ra,4(sp)
   403e8:	df000017 	ldw	fp,0(sp)
   403ec:	dec00204 	addi	sp,sp,8
   403f0:	f800283a 	ret

000403f4 <_printf_r>:
   403f4:	defffd04 	addi	sp,sp,-12
   403f8:	2805883a 	mov	r2,r5
   403fc:	dfc00015 	stw	ra,0(sp)
   40400:	d9800115 	stw	r6,4(sp)
   40404:	d9c00215 	stw	r7,8(sp)
   40408:	21400217 	ldw	r5,8(r4)
   4040c:	d9c00104 	addi	r7,sp,4
   40410:	100d883a 	mov	r6,r2
   40414:	00404600 	call	40460 <___vfprintf_internal_r>
   40418:	dfc00017 	ldw	ra,0(sp)
   4041c:	dec00304 	addi	sp,sp,12
   40420:	f800283a 	ret

00040424 <printf>:
   40424:	defffc04 	addi	sp,sp,-16
   40428:	dfc00015 	stw	ra,0(sp)
   4042c:	d9400115 	stw	r5,4(sp)
   40430:	d9800215 	stw	r6,8(sp)
   40434:	d9c00315 	stw	r7,12(sp)
   40438:	00800174 	movhi	r2,5
   4043c:	1085fb04 	addi	r2,r2,6124
   40440:	10800017 	ldw	r2,0(r2)
   40444:	200b883a 	mov	r5,r4
   40448:	d9800104 	addi	r6,sp,4
   4044c:	11000217 	ldw	r4,8(r2)
   40450:	004273c0 	call	4273c <__vfprintf_internal>
   40454:	dfc00017 	ldw	ra,0(sp)
   40458:	dec00404 	addi	sp,sp,16
   4045c:	f800283a 	ret

00040460 <___vfprintf_internal_r>:
   40460:	deffb804 	addi	sp,sp,-288
   40464:	dfc04715 	stw	ra,284(sp)
   40468:	ddc04515 	stw	r23,276(sp)
   4046c:	dd404315 	stw	r21,268(sp)
   40470:	d9002d15 	stw	r4,180(sp)
   40474:	282f883a 	mov	r23,r5
   40478:	302b883a 	mov	r21,r6
   4047c:	d9c02e15 	stw	r7,184(sp)
   40480:	df004615 	stw	fp,280(sp)
   40484:	dd804415 	stw	r22,272(sp)
   40488:	dd004215 	stw	r20,264(sp)
   4048c:	dcc04115 	stw	r19,260(sp)
   40490:	dc804015 	stw	r18,256(sp)
   40494:	dc403f15 	stw	r17,252(sp)
   40498:	dc003e15 	stw	r16,248(sp)
   4049c:	0044ed80 	call	44ed8 <_localeconv_r>
   404a0:	10800017 	ldw	r2,0(r2)
   404a4:	1009883a 	mov	r4,r2
   404a8:	d8803415 	stw	r2,208(sp)
   404ac:	0046fbc0 	call	46fbc <strlen>
   404b0:	d8803715 	stw	r2,220(sp)
   404b4:	d8802d17 	ldw	r2,180(sp)
   404b8:	10000226 	beq	r2,zero,404c4 <___vfprintf_internal_r+0x64>
   404bc:	10800e17 	ldw	r2,56(r2)
   404c0:	1000fb26 	beq	r2,zero,408b0 <___vfprintf_internal_r+0x450>
   404c4:	b880030b 	ldhu	r2,12(r23)
   404c8:	10c8000c 	andi	r3,r2,8192
   404cc:	1800061e 	bne	r3,zero,404e8 <___vfprintf_internal_r+0x88>
   404d0:	b9001917 	ldw	r4,100(r23)
   404d4:	00f7ffc4 	movi	r3,-8193
   404d8:	10880014 	ori	r2,r2,8192
   404dc:	20c6703a 	and	r3,r4,r3
   404e0:	b880030d 	sth	r2,12(r23)
   404e4:	b8c01915 	stw	r3,100(r23)
   404e8:	10c0020c 	andi	r3,r2,8
   404ec:	1800c326 	beq	r3,zero,407fc <___vfprintf_internal_r+0x39c>
   404f0:	b8c00417 	ldw	r3,16(r23)
   404f4:	1800c126 	beq	r3,zero,407fc <___vfprintf_internal_r+0x39c>
   404f8:	1080068c 	andi	r2,r2,26
   404fc:	00c00284 	movi	r3,10
   40500:	10c0c626 	beq	r2,r3,4081c <___vfprintf_internal_r+0x3bc>
   40504:	d8c00404 	addi	r3,sp,16
   40508:	05000174 	movhi	r20,5
   4050c:	d9001e04 	addi	r4,sp,120
   40510:	a53e5284 	addi	r20,r20,-1718
   40514:	d8c01e15 	stw	r3,120(sp)
   40518:	d8002015 	stw	zero,128(sp)
   4051c:	d8001f15 	stw	zero,124(sp)
   40520:	d8003315 	stw	zero,204(sp)
   40524:	d8003615 	stw	zero,216(sp)
   40528:	d8003815 	stw	zero,224(sp)
   4052c:	1811883a 	mov	r8,r3
   40530:	d8003915 	stw	zero,228(sp)
   40534:	d8003a15 	stw	zero,232(sp)
   40538:	d8002f15 	stw	zero,188(sp)
   4053c:	d9002815 	stw	r4,160(sp)
   40540:	a8800007 	ldb	r2,0(r21)
   40544:	10028b26 	beq	r2,zero,40f74 <___vfprintf_internal_r+0xb14>
   40548:	00c00944 	movi	r3,37
   4054c:	a823883a 	mov	r17,r21
   40550:	10c0021e 	bne	r2,r3,4055c <___vfprintf_internal_r+0xfc>
   40554:	00001406 	br	405a8 <___vfprintf_internal_r+0x148>
   40558:	10c00326 	beq	r2,r3,40568 <___vfprintf_internal_r+0x108>
   4055c:	8c400044 	addi	r17,r17,1
   40560:	88800007 	ldb	r2,0(r17)
   40564:	103ffc1e 	bne	r2,zero,40558 <__alt_data_end+0xfffe4198>
   40568:	8d61c83a 	sub	r16,r17,r21
   4056c:	80000e26 	beq	r16,zero,405a8 <___vfprintf_internal_r+0x148>
   40570:	d8c02017 	ldw	r3,128(sp)
   40574:	d8801f17 	ldw	r2,124(sp)
   40578:	45400015 	stw	r21,0(r8)
   4057c:	1c07883a 	add	r3,r3,r16
   40580:	10800044 	addi	r2,r2,1
   40584:	d8c02015 	stw	r3,128(sp)
   40588:	44000115 	stw	r16,4(r8)
   4058c:	d8801f15 	stw	r2,124(sp)
   40590:	00c001c4 	movi	r3,7
   40594:	1880a916 	blt	r3,r2,4083c <___vfprintf_internal_r+0x3dc>
   40598:	42000204 	addi	r8,r8,8
   4059c:	d9402f17 	ldw	r5,188(sp)
   405a0:	2c0b883a 	add	r5,r5,r16
   405a4:	d9402f15 	stw	r5,188(sp)
   405a8:	88800007 	ldb	r2,0(r17)
   405ac:	1000aa26 	beq	r2,zero,40858 <___vfprintf_internal_r+0x3f8>
   405b0:	8d400044 	addi	r21,r17,1
   405b4:	8c400047 	ldb	r17,1(r17)
   405b8:	0021883a 	mov	r16,zero
   405bc:	00bfffc4 	movi	r2,-1
   405c0:	0025883a 	mov	r18,zero
   405c4:	dc002905 	stb	r16,164(sp)
   405c8:	d8002785 	stb	zero,158(sp)
   405cc:	d8002b05 	stb	zero,172(sp)
   405d0:	d8802a15 	stw	r2,168(sp)
   405d4:	d8003115 	stw	zero,196(sp)
   405d8:	04c01604 	movi	r19,88
   405dc:	05800244 	movi	r22,9
   405e0:	9021883a 	mov	r16,r18
   405e4:	4039883a 	mov	fp,r8
   405e8:	ad400044 	addi	r21,r21,1
   405ec:	88bff804 	addi	r2,r17,-32
   405f0:	98833236 	bltu	r19,r2,412bc <___vfprintf_internal_r+0xe5c>
   405f4:	100490ba 	slli	r2,r2,2
   405f8:	00c00134 	movhi	r3,4
   405fc:	18c18304 	addi	r3,r3,1548
   40600:	10c5883a 	add	r2,r2,r3
   40604:	10800017 	ldw	r2,0(r2)
   40608:	1000683a 	jmp	r2
   4060c:	000411b4 	movhi	zero,4166
   40610:	000412bc 	xorhi	zero,zero,4170
   40614:	000412bc 	xorhi	zero,zero,4170
   40618:	000411d4 	movui	zero,4167
   4061c:	000412bc 	xorhi	zero,zero,4170
   40620:	000412bc 	xorhi	zero,zero,4170
   40624:	000412bc 	xorhi	zero,zero,4170
   40628:	000412bc 	xorhi	zero,zero,4170
   4062c:	000412bc 	xorhi	zero,zero,4170
   40630:	000412bc 	xorhi	zero,zero,4170
   40634:	000408bc 	xorhi	zero,zero,4130
   40638:	000410c4 	movi	zero,4163
   4063c:	000412bc 	xorhi	zero,zero,4170
   40640:	00040780 	call	4078 <__alt_mem_MemoriaDados+0x4078>
   40644:	000408e0 	cmpeqi	zero,zero,4131
   40648:	000412bc 	xorhi	zero,zero,4170
   4064c:	00040930 	cmpltui	zero,zero,4132
   40650:	0004093c 	xorhi	zero,zero,4132
   40654:	0004093c 	xorhi	zero,zero,4132
   40658:	0004093c 	xorhi	zero,zero,4132
   4065c:	0004093c 	xorhi	zero,zero,4132
   40660:	0004093c 	xorhi	zero,zero,4132
   40664:	0004093c 	xorhi	zero,zero,4132
   40668:	0004093c 	xorhi	zero,zero,4132
   4066c:	0004093c 	xorhi	zero,zero,4132
   40670:	0004093c 	xorhi	zero,zero,4132
   40674:	000412bc 	xorhi	zero,zero,4170
   40678:	000412bc 	xorhi	zero,zero,4170
   4067c:	000412bc 	xorhi	zero,zero,4170
   40680:	000412bc 	xorhi	zero,zero,4170
   40684:	000412bc 	xorhi	zero,zero,4170
   40688:	000412bc 	xorhi	zero,zero,4170
   4068c:	000412bc 	xorhi	zero,zero,4170
   40690:	000412bc 	xorhi	zero,zero,4170
   40694:	000412bc 	xorhi	zero,zero,4170
   40698:	000412bc 	xorhi	zero,zero,4170
   4069c:	00040978 	rdprs	zero,zero,4133
   406a0:	00040a40 	call	40a4 <__alt_mem_MemoriaDados+0x40a4>
   406a4:	000412bc 	xorhi	zero,zero,4170
   406a8:	00040a40 	call	40a4 <__alt_mem_MemoriaDados+0x40a4>
   406ac:	000412bc 	xorhi	zero,zero,4170
   406b0:	000412bc 	xorhi	zero,zero,4170
   406b4:	000412bc 	xorhi	zero,zero,4170
   406b8:	000412bc 	xorhi	zero,zero,4170
   406bc:	00040aec 	andhi	zero,zero,4139
   406c0:	000412bc 	xorhi	zero,zero,4170
   406c4:	000412bc 	xorhi	zero,zero,4170
   406c8:	00040af8 	rdprs	zero,zero,4139
   406cc:	000412bc 	xorhi	zero,zero,4170
   406d0:	000412bc 	xorhi	zero,zero,4170
   406d4:	000412bc 	xorhi	zero,zero,4170
   406d8:	000412bc 	xorhi	zero,zero,4170
   406dc:	000412bc 	xorhi	zero,zero,4170
   406e0:	00040f7c 	xorhi	zero,zero,4157
   406e4:	000412bc 	xorhi	zero,zero,4170
   406e8:	000412bc 	xorhi	zero,zero,4170
   406ec:	00040fe8 	cmpgeui	zero,zero,4159
   406f0:	000412bc 	xorhi	zero,zero,4170
   406f4:	000412bc 	xorhi	zero,zero,4170
   406f8:	000412bc 	xorhi	zero,zero,4170
   406fc:	000412bc 	xorhi	zero,zero,4170
   40700:	000412bc 	xorhi	zero,zero,4170
   40704:	000412bc 	xorhi	zero,zero,4170
   40708:	000412bc 	xorhi	zero,zero,4170
   4070c:	000412bc 	xorhi	zero,zero,4170
   40710:	000412bc 	xorhi	zero,zero,4170
   40714:	000412bc 	xorhi	zero,zero,4170
   40718:	00041260 	cmpeqi	zero,zero,4169
   4071c:	000411e0 	cmpeqi	zero,zero,4167
   40720:	00040a40 	call	40a4 <__alt_mem_MemoriaDados+0x40a4>
   40724:	00040a40 	call	40a4 <__alt_mem_MemoriaDados+0x40a4>
   40728:	00040a40 	call	40a4 <__alt_mem_MemoriaDados+0x40a4>
   4072c:	00041200 	call	4120 <__alt_mem_MemoriaDados+0x4120>
   40730:	000411e0 	cmpeqi	zero,zero,4167
   40734:	000412bc 	xorhi	zero,zero,4170
   40738:	000412bc 	xorhi	zero,zero,4170
   4073c:	0004120c 	andi	zero,zero,4168
   40740:	000412bc 	xorhi	zero,zero,4170
   40744:	00041220 	cmpeqi	zero,zero,4168
   40748:	000410a4 	muli	zero,zero,4162
   4074c:	0004078c 	andi	zero,zero,4126
   40750:	000410dc 	xori	zero,zero,4163
   40754:	000412bc 	xorhi	zero,zero,4170
   40758:	000410e8 	cmpgeui	zero,zero,4163
   4075c:	000412bc 	xorhi	zero,zero,4170
   40760:	0004114c 	andi	zero,zero,4165
   40764:	000412bc 	xorhi	zero,zero,4170
   40768:	000412bc 	xorhi	zero,zero,4170
   4076c:	0004116c 	andhi	zero,zero,4165
   40770:	d8c03117 	ldw	r3,196(sp)
   40774:	d8802e15 	stw	r2,184(sp)
   40778:	00c7c83a 	sub	r3,zero,r3
   4077c:	d8c03115 	stw	r3,196(sp)
   40780:	84000114 	ori	r16,r16,4
   40784:	ac400007 	ldb	r17,0(r21)
   40788:	003f9706 	br	405e8 <__alt_data_end+0xfffe4228>
   4078c:	00800c04 	movi	r2,48
   40790:	d8802705 	stb	r2,156(sp)
   40794:	00801e04 	movi	r2,120
   40798:	d8802745 	stb	r2,157(sp)
   4079c:	d9002a17 	ldw	r4,168(sp)
   407a0:	d8802e17 	ldw	r2,184(sp)
   407a4:	d8002785 	stb	zero,158(sp)
   407a8:	e011883a 	mov	r8,fp
   407ac:	10c00104 	addi	r3,r2,4
   407b0:	14c00017 	ldw	r19,0(r2)
   407b4:	002d883a 	mov	r22,zero
   407b8:	80800094 	ori	r2,r16,2
   407bc:	2002ca16 	blt	r4,zero,412e8 <___vfprintf_internal_r+0xe88>
   407c0:	00bfdfc4 	movi	r2,-129
   407c4:	80a4703a 	and	r18,r16,r2
   407c8:	d8c02e15 	stw	r3,184(sp)
   407cc:	94800094 	ori	r18,r18,2
   407d0:	9802b41e 	bne	r19,zero,412a4 <___vfprintf_internal_r+0xe44>
   407d4:	01400174 	movhi	r5,5
   407d8:	297e4b04 	addi	r5,r5,-1748
   407dc:	d9403915 	stw	r5,228(sp)
   407e0:	04401e04 	movi	r17,120
   407e4:	d8802a17 	ldw	r2,168(sp)
   407e8:	0039883a 	mov	fp,zero
   407ec:	1001fa26 	beq	r2,zero,40fd8 <___vfprintf_internal_r+0xb78>
   407f0:	0027883a 	mov	r19,zero
   407f4:	002d883a 	mov	r22,zero
   407f8:	00021906 	br	41060 <___vfprintf_internal_r+0xc00>
   407fc:	d9002d17 	ldw	r4,180(sp)
   40800:	b80b883a 	mov	r5,r23
   40804:	00428140 	call	42814 <__swsetup_r>
   40808:	1005dc1e 	bne	r2,zero,41f7c <___vfprintf_internal_r+0x1b1c>
   4080c:	b880030b 	ldhu	r2,12(r23)
   40810:	00c00284 	movi	r3,10
   40814:	1080068c 	andi	r2,r2,26
   40818:	10ff3a1e 	bne	r2,r3,40504 <__alt_data_end+0xfffe4144>
   4081c:	b880038f 	ldh	r2,14(r23)
   40820:	103f3816 	blt	r2,zero,40504 <__alt_data_end+0xfffe4144>
   40824:	d9c02e17 	ldw	r7,184(sp)
   40828:	d9002d17 	ldw	r4,180(sp)
   4082c:	a80d883a 	mov	r6,r21
   40830:	b80b883a 	mov	r5,r23
   40834:	00427580 	call	42758 <__sbprintf>
   40838:	00001106 	br	40880 <___vfprintf_internal_r+0x420>
   4083c:	d9002d17 	ldw	r4,180(sp)
   40840:	d9801e04 	addi	r6,sp,120
   40844:	b80b883a 	mov	r5,r23
   40848:	00471500 	call	47150 <__sprint_r>
   4084c:	1000081e 	bne	r2,zero,40870 <___vfprintf_internal_r+0x410>
   40850:	da000404 	addi	r8,sp,16
   40854:	003f5106 	br	4059c <__alt_data_end+0xfffe41dc>
   40858:	d8802017 	ldw	r2,128(sp)
   4085c:	10000426 	beq	r2,zero,40870 <___vfprintf_internal_r+0x410>
   40860:	d9002d17 	ldw	r4,180(sp)
   40864:	d9801e04 	addi	r6,sp,120
   40868:	b80b883a 	mov	r5,r23
   4086c:	00471500 	call	47150 <__sprint_r>
   40870:	b880030b 	ldhu	r2,12(r23)
   40874:	1080100c 	andi	r2,r2,64
   40878:	1005c01e 	bne	r2,zero,41f7c <___vfprintf_internal_r+0x1b1c>
   4087c:	d8802f17 	ldw	r2,188(sp)
   40880:	dfc04717 	ldw	ra,284(sp)
   40884:	df004617 	ldw	fp,280(sp)
   40888:	ddc04517 	ldw	r23,276(sp)
   4088c:	dd804417 	ldw	r22,272(sp)
   40890:	dd404317 	ldw	r21,268(sp)
   40894:	dd004217 	ldw	r20,264(sp)
   40898:	dcc04117 	ldw	r19,260(sp)
   4089c:	dc804017 	ldw	r18,256(sp)
   408a0:	dc403f17 	ldw	r17,252(sp)
   408a4:	dc003e17 	ldw	r16,248(sp)
   408a8:	dec04804 	addi	sp,sp,288
   408ac:	f800283a 	ret
   408b0:	d9002d17 	ldw	r4,180(sp)
   408b4:	00448200 	call	44820 <__sinit>
   408b8:	003f0206 	br	404c4 <__alt_data_end+0xfffe4104>
   408bc:	d9002e17 	ldw	r4,184(sp)
   408c0:	d9402e17 	ldw	r5,184(sp)
   408c4:	21000017 	ldw	r4,0(r4)
   408c8:	28800104 	addi	r2,r5,4
   408cc:	d9003115 	stw	r4,196(sp)
   408d0:	203fa716 	blt	r4,zero,40770 <__alt_data_end+0xfffe43b0>
   408d4:	d8802e15 	stw	r2,184(sp)
   408d8:	ac400007 	ldb	r17,0(r21)
   408dc:	003f4206 	br	405e8 <__alt_data_end+0xfffe4228>
   408e0:	ac400007 	ldb	r17,0(r21)
   408e4:	01000a84 	movi	r4,42
   408e8:	a8c00044 	addi	r3,r21,1
   408ec:	89075826 	beq	r17,r4,42650 <___vfprintf_internal_r+0x21f0>
   408f0:	8cbff404 	addi	r18,r17,-48
   408f4:	b486ae36 	bltu	r22,r18,423b0 <___vfprintf_internal_r+0x1f50>
   408f8:	0009883a 	mov	r4,zero
   408fc:	1823883a 	mov	r17,r3
   40900:	01400284 	movi	r5,10
   40904:	004a9940 	call	4a994 <__mulsi3>
   40908:	88c00007 	ldb	r3,0(r17)
   4090c:	1489883a 	add	r4,r2,r18
   40910:	8d400044 	addi	r21,r17,1
   40914:	1cbff404 	addi	r18,r3,-48
   40918:	a823883a 	mov	r17,r21
   4091c:	b4bff82e 	bgeu	r22,r18,40900 <__alt_data_end+0xfffe4540>
   40920:	1823883a 	mov	r17,r3
   40924:	2005f616 	blt	r4,zero,42100 <___vfprintf_internal_r+0x1ca0>
   40928:	d9002a15 	stw	r4,168(sp)
   4092c:	003f2f06 	br	405ec <__alt_data_end+0xfffe422c>
   40930:	84002014 	ori	r16,r16,128
   40934:	ac400007 	ldb	r17,0(r21)
   40938:	003f2b06 	br	405e8 <__alt_data_end+0xfffe4228>
   4093c:	8cbff404 	addi	r18,r17,-48
   40940:	d8003115 	stw	zero,196(sp)
   40944:	0009883a 	mov	r4,zero
   40948:	a823883a 	mov	r17,r21
   4094c:	01400284 	movi	r5,10
   40950:	004a9940 	call	4a994 <__mulsi3>
   40954:	88c00007 	ldb	r3,0(r17)
   40958:	9089883a 	add	r4,r18,r2
   4095c:	ad400044 	addi	r21,r21,1
   40960:	1cbff404 	addi	r18,r3,-48
   40964:	a823883a 	mov	r17,r21
   40968:	b4bff82e 	bgeu	r22,r18,4094c <__alt_data_end+0xfffe458c>
   4096c:	1823883a 	mov	r17,r3
   40970:	d9003115 	stw	r4,196(sp)
   40974:	003f1d06 	br	405ec <__alt_data_end+0xfffe422c>
   40978:	8025883a 	mov	r18,r16
   4097c:	dc002903 	ldbu	r16,164(sp)
   40980:	e011883a 	mov	r8,fp
   40984:	84003fcc 	andi	r16,r16,255
   40988:	8007531e 	bne	r16,zero,426d8 <___vfprintf_internal_r+0x2278>
   4098c:	94800414 	ori	r18,r18,16
   40990:	9080080c 	andi	r2,r18,32
   40994:	1003a326 	beq	r2,zero,41824 <___vfprintf_internal_r+0x13c4>
   40998:	d9002e17 	ldw	r4,184(sp)
   4099c:	20800117 	ldw	r2,4(r4)
   409a0:	24c00017 	ldw	r19,0(r4)
   409a4:	21000204 	addi	r4,r4,8
   409a8:	d9002e15 	stw	r4,184(sp)
   409ac:	102d883a 	mov	r22,r2
   409b0:	10047316 	blt	r2,zero,41b80 <___vfprintf_internal_r+0x1720>
   409b4:	d9002a17 	ldw	r4,168(sp)
   409b8:	df002783 	ldbu	fp,158(sp)
   409bc:	2003e416 	blt	r4,zero,41950 <___vfprintf_internal_r+0x14f0>
   409c0:	00ffdfc4 	movi	r3,-129
   409c4:	9d84b03a 	or	r2,r19,r22
   409c8:	90e4703a 	and	r18,r18,r3
   409cc:	10018026 	beq	r2,zero,40fd0 <___vfprintf_internal_r+0xb70>
   409d0:	b003ab26 	beq	r22,zero,41880 <___vfprintf_internal_r+0x1420>
   409d4:	dc402915 	stw	r17,164(sp)
   409d8:	dc001e04 	addi	r16,sp,120
   409dc:	b023883a 	mov	r17,r22
   409e0:	402d883a 	mov	r22,r8
   409e4:	9809883a 	mov	r4,r19
   409e8:	880b883a 	mov	r5,r17
   409ec:	01800284 	movi	r6,10
   409f0:	000f883a 	mov	r7,zero
   409f4:	004a21c0 	call	4a21c <__umoddi3>
   409f8:	10800c04 	addi	r2,r2,48
   409fc:	843fffc4 	addi	r16,r16,-1
   40a00:	9809883a 	mov	r4,r19
   40a04:	880b883a 	mov	r5,r17
   40a08:	80800005 	stb	r2,0(r16)
   40a0c:	01800284 	movi	r6,10
   40a10:	000f883a 	mov	r7,zero
   40a14:	0049c200 	call	49c20 <__udivdi3>
   40a18:	1027883a 	mov	r19,r2
   40a1c:	10c4b03a 	or	r2,r2,r3
   40a20:	1823883a 	mov	r17,r3
   40a24:	103fef1e 	bne	r2,zero,409e4 <__alt_data_end+0xfffe4624>
   40a28:	d8c02817 	ldw	r3,160(sp)
   40a2c:	dc402917 	ldw	r17,164(sp)
   40a30:	b011883a 	mov	r8,r22
   40a34:	1c07c83a 	sub	r3,r3,r16
   40a38:	d8c02b15 	stw	r3,172(sp)
   40a3c:	00005f06 	br	40bbc <___vfprintf_internal_r+0x75c>
   40a40:	8025883a 	mov	r18,r16
   40a44:	dc002903 	ldbu	r16,164(sp)
   40a48:	e011883a 	mov	r8,fp
   40a4c:	84003fcc 	andi	r16,r16,255
   40a50:	80071e1e 	bne	r16,zero,426cc <___vfprintf_internal_r+0x226c>
   40a54:	9080020c 	andi	r2,r18,8
   40a58:	1004af26 	beq	r2,zero,41d18 <___vfprintf_internal_r+0x18b8>
   40a5c:	d9002e17 	ldw	r4,184(sp)
   40a60:	d9402e17 	ldw	r5,184(sp)
   40a64:	d8802e17 	ldw	r2,184(sp)
   40a68:	21000017 	ldw	r4,0(r4)
   40a6c:	29400117 	ldw	r5,4(r5)
   40a70:	10800204 	addi	r2,r2,8
   40a74:	d9003615 	stw	r4,216(sp)
   40a78:	d9403815 	stw	r5,224(sp)
   40a7c:	d8802e15 	stw	r2,184(sp)
   40a80:	d9003617 	ldw	r4,216(sp)
   40a84:	d9403817 	ldw	r5,224(sp)
   40a88:	da003d15 	stw	r8,244(sp)
   40a8c:	04000044 	movi	r16,1
   40a90:	0046cdc0 	call	46cdc <__fpclassifyd>
   40a94:	da003d17 	ldw	r8,244(sp)
   40a98:	1404441e 	bne	r2,r16,41bac <___vfprintf_internal_r+0x174c>
   40a9c:	d9003617 	ldw	r4,216(sp)
   40aa0:	d9403817 	ldw	r5,224(sp)
   40aa4:	000d883a 	mov	r6,zero
   40aa8:	000f883a 	mov	r7,zero
   40aac:	004bd9c0 	call	4bd9c <__ledf2>
   40ab0:	da003d17 	ldw	r8,244(sp)
   40ab4:	1005e316 	blt	r2,zero,42244 <___vfprintf_internal_r+0x1de4>
   40ab8:	df002783 	ldbu	fp,158(sp)
   40abc:	008011c4 	movi	r2,71
   40ac0:	1445580e 	bge	r2,r17,42024 <___vfprintf_internal_r+0x1bc4>
   40ac4:	04000174 	movhi	r16,5
   40ac8:	843e4304 	addi	r16,r16,-1780
   40acc:	00c000c4 	movi	r3,3
   40ad0:	00bfdfc4 	movi	r2,-129
   40ad4:	d8c02915 	stw	r3,164(sp)
   40ad8:	90a4703a 	and	r18,r18,r2
   40adc:	d8c02b15 	stw	r3,172(sp)
   40ae0:	d8002a15 	stw	zero,168(sp)
   40ae4:	d8003215 	stw	zero,200(sp)
   40ae8:	00003a06 	br	40bd4 <___vfprintf_internal_r+0x774>
   40aec:	84000214 	ori	r16,r16,8
   40af0:	ac400007 	ldb	r17,0(r21)
   40af4:	003ebc06 	br	405e8 <__alt_data_end+0xfffe4228>
   40af8:	8025883a 	mov	r18,r16
   40afc:	dc002903 	ldbu	r16,164(sp)
   40b00:	e011883a 	mov	r8,fp
   40b04:	84003fcc 	andi	r16,r16,255
   40b08:	8007001e 	bne	r16,zero,4270c <___vfprintf_internal_r+0x22ac>
   40b0c:	94800414 	ori	r18,r18,16
   40b10:	9080080c 	andi	r2,r18,32
   40b14:	1002fa26 	beq	r2,zero,41700 <___vfprintf_internal_r+0x12a0>
   40b18:	d9002e17 	ldw	r4,184(sp)
   40b1c:	d9402a17 	ldw	r5,168(sp)
   40b20:	d8002785 	stb	zero,158(sp)
   40b24:	20800204 	addi	r2,r4,8
   40b28:	24c00017 	ldw	r19,0(r4)
   40b2c:	25800117 	ldw	r22,4(r4)
   40b30:	2804b116 	blt	r5,zero,41df8 <___vfprintf_internal_r+0x1998>
   40b34:	013fdfc4 	movi	r4,-129
   40b38:	9d86b03a 	or	r3,r19,r22
   40b3c:	d8802e15 	stw	r2,184(sp)
   40b40:	9124703a 	and	r18,r18,r4
   40b44:	1802fb1e 	bne	r3,zero,41734 <___vfprintf_internal_r+0x12d4>
   40b48:	d8c02a17 	ldw	r3,168(sp)
   40b4c:	0039883a 	mov	fp,zero
   40b50:	1805e526 	beq	r3,zero,422e8 <___vfprintf_internal_r+0x1e88>
   40b54:	0027883a 	mov	r19,zero
   40b58:	002d883a 	mov	r22,zero
   40b5c:	dc001e04 	addi	r16,sp,120
   40b60:	9806d0fa 	srli	r3,r19,3
   40b64:	b008977a 	slli	r4,r22,29
   40b68:	b02cd0fa 	srli	r22,r22,3
   40b6c:	9cc001cc 	andi	r19,r19,7
   40b70:	98800c04 	addi	r2,r19,48
   40b74:	843fffc4 	addi	r16,r16,-1
   40b78:	20e6b03a 	or	r19,r4,r3
   40b7c:	80800005 	stb	r2,0(r16)
   40b80:	9d86b03a 	or	r3,r19,r22
   40b84:	183ff61e 	bne	r3,zero,40b60 <__alt_data_end+0xfffe47a0>
   40b88:	90c0004c 	andi	r3,r18,1
   40b8c:	18014126 	beq	r3,zero,41094 <___vfprintf_internal_r+0xc34>
   40b90:	10803fcc 	andi	r2,r2,255
   40b94:	1080201c 	xori	r2,r2,128
   40b98:	10bfe004 	addi	r2,r2,-128
   40b9c:	00c00c04 	movi	r3,48
   40ba0:	10c13c26 	beq	r2,r3,41094 <___vfprintf_internal_r+0xc34>
   40ba4:	80ffffc5 	stb	r3,-1(r16)
   40ba8:	d8c02817 	ldw	r3,160(sp)
   40bac:	80bfffc4 	addi	r2,r16,-1
   40bb0:	1021883a 	mov	r16,r2
   40bb4:	1887c83a 	sub	r3,r3,r2
   40bb8:	d8c02b15 	stw	r3,172(sp)
   40bbc:	d8802b17 	ldw	r2,172(sp)
   40bc0:	d9002a17 	ldw	r4,168(sp)
   40bc4:	1100010e 	bge	r2,r4,40bcc <___vfprintf_internal_r+0x76c>
   40bc8:	2005883a 	mov	r2,r4
   40bcc:	d8802915 	stw	r2,164(sp)
   40bd0:	d8003215 	stw	zero,200(sp)
   40bd4:	e7003fcc 	andi	fp,fp,255
   40bd8:	e700201c 	xori	fp,fp,128
   40bdc:	e73fe004 	addi	fp,fp,-128
   40be0:	e0000326 	beq	fp,zero,40bf0 <___vfprintf_internal_r+0x790>
   40be4:	d8c02917 	ldw	r3,164(sp)
   40be8:	18c00044 	addi	r3,r3,1
   40bec:	d8c02915 	stw	r3,164(sp)
   40bf0:	90c0008c 	andi	r3,r18,2
   40bf4:	d8c02c15 	stw	r3,176(sp)
   40bf8:	18000326 	beq	r3,zero,40c08 <___vfprintf_internal_r+0x7a8>
   40bfc:	d8c02917 	ldw	r3,164(sp)
   40c00:	18c00084 	addi	r3,r3,2
   40c04:	d8c02915 	stw	r3,164(sp)
   40c08:	90c0210c 	andi	r3,r18,132
   40c0c:	d8c03015 	stw	r3,192(sp)
   40c10:	1801c51e 	bne	r3,zero,41328 <___vfprintf_internal_r+0xec8>
   40c14:	d9003117 	ldw	r4,196(sp)
   40c18:	d8c02917 	ldw	r3,164(sp)
   40c1c:	20e7c83a 	sub	r19,r4,r3
   40c20:	04c1c10e 	bge	zero,r19,41328 <___vfprintf_internal_r+0xec8>
   40c24:	02400404 	movi	r9,16
   40c28:	d8c02017 	ldw	r3,128(sp)
   40c2c:	d8801f17 	ldw	r2,124(sp)
   40c30:	4cc52f0e 	bge	r9,r19,420f0 <___vfprintf_internal_r+0x1c90>
   40c34:	01400174 	movhi	r5,5
   40c38:	297e5684 	addi	r5,r5,-1702
   40c3c:	dc403b15 	stw	r17,236(sp)
   40c40:	d9403515 	stw	r5,212(sp)
   40c44:	9823883a 	mov	r17,r19
   40c48:	482d883a 	mov	r22,r9
   40c4c:	9027883a 	mov	r19,r18
   40c50:	070001c4 	movi	fp,7
   40c54:	8025883a 	mov	r18,r16
   40c58:	dc002d17 	ldw	r16,180(sp)
   40c5c:	00000306 	br	40c6c <___vfprintf_internal_r+0x80c>
   40c60:	8c7ffc04 	addi	r17,r17,-16
   40c64:	42000204 	addi	r8,r8,8
   40c68:	b440130e 	bge	r22,r17,40cb8 <___vfprintf_internal_r+0x858>
   40c6c:	01000174 	movhi	r4,5
   40c70:	18c00404 	addi	r3,r3,16
   40c74:	10800044 	addi	r2,r2,1
   40c78:	213e5684 	addi	r4,r4,-1702
   40c7c:	41000015 	stw	r4,0(r8)
   40c80:	45800115 	stw	r22,4(r8)
   40c84:	d8c02015 	stw	r3,128(sp)
   40c88:	d8801f15 	stw	r2,124(sp)
   40c8c:	e0bff40e 	bge	fp,r2,40c60 <__alt_data_end+0xfffe48a0>
   40c90:	d9801e04 	addi	r6,sp,120
   40c94:	b80b883a 	mov	r5,r23
   40c98:	8009883a 	mov	r4,r16
   40c9c:	00471500 	call	47150 <__sprint_r>
   40ca0:	103ef31e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   40ca4:	8c7ffc04 	addi	r17,r17,-16
   40ca8:	d8c02017 	ldw	r3,128(sp)
   40cac:	d8801f17 	ldw	r2,124(sp)
   40cb0:	da000404 	addi	r8,sp,16
   40cb4:	b47fed16 	blt	r22,r17,40c6c <__alt_data_end+0xfffe48ac>
   40cb8:	9021883a 	mov	r16,r18
   40cbc:	9825883a 	mov	r18,r19
   40cc0:	8827883a 	mov	r19,r17
   40cc4:	dc403b17 	ldw	r17,236(sp)
   40cc8:	d9403517 	ldw	r5,212(sp)
   40ccc:	98c7883a 	add	r3,r19,r3
   40cd0:	10800044 	addi	r2,r2,1
   40cd4:	41400015 	stw	r5,0(r8)
   40cd8:	44c00115 	stw	r19,4(r8)
   40cdc:	d8c02015 	stw	r3,128(sp)
   40ce0:	d8801f15 	stw	r2,124(sp)
   40ce4:	010001c4 	movi	r4,7
   40ce8:	2082c516 	blt	r4,r2,41800 <___vfprintf_internal_r+0x13a0>
   40cec:	df002787 	ldb	fp,158(sp)
   40cf0:	42000204 	addi	r8,r8,8
   40cf4:	e0000c26 	beq	fp,zero,40d28 <___vfprintf_internal_r+0x8c8>
   40cf8:	d8801f17 	ldw	r2,124(sp)
   40cfc:	d9002784 	addi	r4,sp,158
   40d00:	18c00044 	addi	r3,r3,1
   40d04:	10800044 	addi	r2,r2,1
   40d08:	41000015 	stw	r4,0(r8)
   40d0c:	01000044 	movi	r4,1
   40d10:	41000115 	stw	r4,4(r8)
   40d14:	d8c02015 	stw	r3,128(sp)
   40d18:	d8801f15 	stw	r2,124(sp)
   40d1c:	010001c4 	movi	r4,7
   40d20:	20825e16 	blt	r4,r2,4169c <___vfprintf_internal_r+0x123c>
   40d24:	42000204 	addi	r8,r8,8
   40d28:	d8802c17 	ldw	r2,176(sp)
   40d2c:	10000c26 	beq	r2,zero,40d60 <___vfprintf_internal_r+0x900>
   40d30:	d8801f17 	ldw	r2,124(sp)
   40d34:	d9002704 	addi	r4,sp,156
   40d38:	18c00084 	addi	r3,r3,2
   40d3c:	10800044 	addi	r2,r2,1
   40d40:	41000015 	stw	r4,0(r8)
   40d44:	01000084 	movi	r4,2
   40d48:	41000115 	stw	r4,4(r8)
   40d4c:	d8c02015 	stw	r3,128(sp)
   40d50:	d8801f15 	stw	r2,124(sp)
   40d54:	010001c4 	movi	r4,7
   40d58:	20825816 	blt	r4,r2,416bc <___vfprintf_internal_r+0x125c>
   40d5c:	42000204 	addi	r8,r8,8
   40d60:	d9003017 	ldw	r4,192(sp)
   40d64:	00802004 	movi	r2,128
   40d68:	2081bb26 	beq	r4,r2,41458 <___vfprintf_internal_r+0xff8>
   40d6c:	d9402a17 	ldw	r5,168(sp)
   40d70:	d8802b17 	ldw	r2,172(sp)
   40d74:	28adc83a 	sub	r22,r5,r2
   40d78:	0580310e 	bge	zero,r22,40e40 <___vfprintf_internal_r+0x9e0>
   40d7c:	07000404 	movi	fp,16
   40d80:	d8801f17 	ldw	r2,124(sp)
   40d84:	e584360e 	bge	fp,r22,41e60 <___vfprintf_internal_r+0x1a00>
   40d88:	01400174 	movhi	r5,5
   40d8c:	297e5284 	addi	r5,r5,-1718
   40d90:	dc402a15 	stw	r17,168(sp)
   40d94:	d9402c15 	stw	r5,176(sp)
   40d98:	b023883a 	mov	r17,r22
   40d9c:	04c001c4 	movi	r19,7
   40da0:	a82d883a 	mov	r22,r21
   40da4:	902b883a 	mov	r21,r18
   40da8:	8025883a 	mov	r18,r16
   40dac:	dc002d17 	ldw	r16,180(sp)
   40db0:	00000306 	br	40dc0 <___vfprintf_internal_r+0x960>
   40db4:	8c7ffc04 	addi	r17,r17,-16
   40db8:	42000204 	addi	r8,r8,8
   40dbc:	e440110e 	bge	fp,r17,40e04 <___vfprintf_internal_r+0x9a4>
   40dc0:	18c00404 	addi	r3,r3,16
   40dc4:	10800044 	addi	r2,r2,1
   40dc8:	45000015 	stw	r20,0(r8)
   40dcc:	47000115 	stw	fp,4(r8)
   40dd0:	d8c02015 	stw	r3,128(sp)
   40dd4:	d8801f15 	stw	r2,124(sp)
   40dd8:	98bff60e 	bge	r19,r2,40db4 <__alt_data_end+0xfffe49f4>
   40ddc:	d9801e04 	addi	r6,sp,120
   40de0:	b80b883a 	mov	r5,r23
   40de4:	8009883a 	mov	r4,r16
   40de8:	00471500 	call	47150 <__sprint_r>
   40dec:	103ea01e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   40df0:	8c7ffc04 	addi	r17,r17,-16
   40df4:	d8c02017 	ldw	r3,128(sp)
   40df8:	d8801f17 	ldw	r2,124(sp)
   40dfc:	da000404 	addi	r8,sp,16
   40e00:	e47fef16 	blt	fp,r17,40dc0 <__alt_data_end+0xfffe4a00>
   40e04:	9021883a 	mov	r16,r18
   40e08:	a825883a 	mov	r18,r21
   40e0c:	b02b883a 	mov	r21,r22
   40e10:	882d883a 	mov	r22,r17
   40e14:	dc402a17 	ldw	r17,168(sp)
   40e18:	d9002c17 	ldw	r4,176(sp)
   40e1c:	1d87883a 	add	r3,r3,r22
   40e20:	10800044 	addi	r2,r2,1
   40e24:	41000015 	stw	r4,0(r8)
   40e28:	45800115 	stw	r22,4(r8)
   40e2c:	d8c02015 	stw	r3,128(sp)
   40e30:	d8801f15 	stw	r2,124(sp)
   40e34:	010001c4 	movi	r4,7
   40e38:	20821016 	blt	r4,r2,4167c <___vfprintf_internal_r+0x121c>
   40e3c:	42000204 	addi	r8,r8,8
   40e40:	9080400c 	andi	r2,r18,256
   40e44:	10013a1e 	bne	r2,zero,41330 <___vfprintf_internal_r+0xed0>
   40e48:	d9402b17 	ldw	r5,172(sp)
   40e4c:	d8801f17 	ldw	r2,124(sp)
   40e50:	44000015 	stw	r16,0(r8)
   40e54:	1947883a 	add	r3,r3,r5
   40e58:	10800044 	addi	r2,r2,1
   40e5c:	41400115 	stw	r5,4(r8)
   40e60:	d8c02015 	stw	r3,128(sp)
   40e64:	d8801f15 	stw	r2,124(sp)
   40e68:	010001c4 	movi	r4,7
   40e6c:	2081f516 	blt	r4,r2,41644 <___vfprintf_internal_r+0x11e4>
   40e70:	42000204 	addi	r8,r8,8
   40e74:	9480010c 	andi	r18,r18,4
   40e78:	90003226 	beq	r18,zero,40f44 <___vfprintf_internal_r+0xae4>
   40e7c:	d9403117 	ldw	r5,196(sp)
   40e80:	d8802917 	ldw	r2,164(sp)
   40e84:	28a1c83a 	sub	r16,r5,r2
   40e88:	04002e0e 	bge	zero,r16,40f44 <___vfprintf_internal_r+0xae4>
   40e8c:	04400404 	movi	r17,16
   40e90:	d8801f17 	ldw	r2,124(sp)
   40e94:	8c04c40e 	bge	r17,r16,421a8 <___vfprintf_internal_r+0x1d48>
   40e98:	01400174 	movhi	r5,5
   40e9c:	297e5684 	addi	r5,r5,-1702
   40ea0:	d9403515 	stw	r5,212(sp)
   40ea4:	048001c4 	movi	r18,7
   40ea8:	dcc02d17 	ldw	r19,180(sp)
   40eac:	00000306 	br	40ebc <___vfprintf_internal_r+0xa5c>
   40eb0:	843ffc04 	addi	r16,r16,-16
   40eb4:	42000204 	addi	r8,r8,8
   40eb8:	8c00130e 	bge	r17,r16,40f08 <___vfprintf_internal_r+0xaa8>
   40ebc:	01000174 	movhi	r4,5
   40ec0:	18c00404 	addi	r3,r3,16
   40ec4:	10800044 	addi	r2,r2,1
   40ec8:	213e5684 	addi	r4,r4,-1702
   40ecc:	41000015 	stw	r4,0(r8)
   40ed0:	44400115 	stw	r17,4(r8)
   40ed4:	d8c02015 	stw	r3,128(sp)
   40ed8:	d8801f15 	stw	r2,124(sp)
   40edc:	90bff40e 	bge	r18,r2,40eb0 <__alt_data_end+0xfffe4af0>
   40ee0:	d9801e04 	addi	r6,sp,120
   40ee4:	b80b883a 	mov	r5,r23
   40ee8:	9809883a 	mov	r4,r19
   40eec:	00471500 	call	47150 <__sprint_r>
   40ef0:	103e5f1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   40ef4:	843ffc04 	addi	r16,r16,-16
   40ef8:	d8c02017 	ldw	r3,128(sp)
   40efc:	d8801f17 	ldw	r2,124(sp)
   40f00:	da000404 	addi	r8,sp,16
   40f04:	8c3fed16 	blt	r17,r16,40ebc <__alt_data_end+0xfffe4afc>
   40f08:	d9403517 	ldw	r5,212(sp)
   40f0c:	1c07883a 	add	r3,r3,r16
   40f10:	10800044 	addi	r2,r2,1
   40f14:	41400015 	stw	r5,0(r8)
   40f18:	44000115 	stw	r16,4(r8)
   40f1c:	d8c02015 	stw	r3,128(sp)
   40f20:	d8801f15 	stw	r2,124(sp)
   40f24:	010001c4 	movi	r4,7
   40f28:	2080060e 	bge	r4,r2,40f44 <___vfprintf_internal_r+0xae4>
   40f2c:	d9002d17 	ldw	r4,180(sp)
   40f30:	d9801e04 	addi	r6,sp,120
   40f34:	b80b883a 	mov	r5,r23
   40f38:	00471500 	call	47150 <__sprint_r>
   40f3c:	103e4c1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   40f40:	d8c02017 	ldw	r3,128(sp)
   40f44:	d8803117 	ldw	r2,196(sp)
   40f48:	d9002917 	ldw	r4,164(sp)
   40f4c:	1100010e 	bge	r2,r4,40f54 <___vfprintf_internal_r+0xaf4>
   40f50:	2005883a 	mov	r2,r4
   40f54:	d9402f17 	ldw	r5,188(sp)
   40f58:	288b883a 	add	r5,r5,r2
   40f5c:	d9402f15 	stw	r5,188(sp)
   40f60:	1801c01e 	bne	r3,zero,41664 <___vfprintf_internal_r+0x1204>
   40f64:	a8800007 	ldb	r2,0(r21)
   40f68:	d8001f15 	stw	zero,124(sp)
   40f6c:	da000404 	addi	r8,sp,16
   40f70:	103d751e 	bne	r2,zero,40548 <__alt_data_end+0xfffe4188>
   40f74:	a823883a 	mov	r17,r21
   40f78:	003d8b06 	br	405a8 <__alt_data_end+0xfffe41e8>
   40f7c:	8025883a 	mov	r18,r16
   40f80:	dc002903 	ldbu	r16,164(sp)
   40f84:	e011883a 	mov	r8,fp
   40f88:	84003fcc 	andi	r16,r16,255
   40f8c:	8005e51e 	bne	r16,zero,42724 <___vfprintf_internal_r+0x22c4>
   40f90:	94800414 	ori	r18,r18,16
   40f94:	9080080c 	andi	r2,r18,32
   40f98:	10022b26 	beq	r2,zero,41848 <___vfprintf_internal_r+0x13e8>
   40f9c:	d9002e17 	ldw	r4,184(sp)
   40fa0:	d9402a17 	ldw	r5,168(sp)
   40fa4:	d8002785 	stb	zero,158(sp)
   40fa8:	20c00204 	addi	r3,r4,8
   40fac:	24c00017 	ldw	r19,0(r4)
   40fb0:	25800117 	ldw	r22,4(r4)
   40fb4:	28042e16 	blt	r5,zero,42070 <___vfprintf_internal_r+0x1c10>
   40fb8:	013fdfc4 	movi	r4,-129
   40fbc:	9d84b03a 	or	r2,r19,r22
   40fc0:	d8c02e15 	stw	r3,184(sp)
   40fc4:	9124703a 	and	r18,r18,r4
   40fc8:	0039883a 	mov	fp,zero
   40fcc:	103e801e 	bne	r2,zero,409d0 <__alt_data_end+0xfffe4610>
   40fd0:	d9002a17 	ldw	r4,168(sp)
   40fd4:	2002e01e 	bne	r4,zero,41b58 <___vfprintf_internal_r+0x16f8>
   40fd8:	d8002a15 	stw	zero,168(sp)
   40fdc:	d8002b15 	stw	zero,172(sp)
   40fe0:	dc001e04 	addi	r16,sp,120
   40fe4:	003ef506 	br	40bbc <__alt_data_end+0xfffe47fc>
   40fe8:	8025883a 	mov	r18,r16
   40fec:	dc002903 	ldbu	r16,164(sp)
   40ff0:	e011883a 	mov	r8,fp
   40ff4:	84003fcc 	andi	r16,r16,255
   40ff8:	8005ba1e 	bne	r16,zero,426e4 <___vfprintf_internal_r+0x2284>
   40ffc:	01000174 	movhi	r4,5
   41000:	213e4604 	addi	r4,r4,-1768
   41004:	d9003915 	stw	r4,228(sp)
   41008:	9080080c 	andi	r2,r18,32
   4100c:	10006126 	beq	r2,zero,41194 <___vfprintf_internal_r+0xd34>
   41010:	d9402e17 	ldw	r5,184(sp)
   41014:	2cc00017 	ldw	r19,0(r5)
   41018:	2d800117 	ldw	r22,4(r5)
   4101c:	29400204 	addi	r5,r5,8
   41020:	d9402e15 	stw	r5,184(sp)
   41024:	9080004c 	andi	r2,r18,1
   41028:	1001ac26 	beq	r2,zero,416dc <___vfprintf_internal_r+0x127c>
   4102c:	9d84b03a 	or	r2,r19,r22
   41030:	10038526 	beq	r2,zero,41e48 <___vfprintf_internal_r+0x19e8>
   41034:	d8c02a17 	ldw	r3,168(sp)
   41038:	00800c04 	movi	r2,48
   4103c:	d8802705 	stb	r2,156(sp)
   41040:	dc402745 	stb	r17,157(sp)
   41044:	d8002785 	stb	zero,158(sp)
   41048:	90800094 	ori	r2,r18,2
   4104c:	18047916 	blt	r3,zero,42234 <___vfprintf_internal_r+0x1dd4>
   41050:	00bfdfc4 	movi	r2,-129
   41054:	90a4703a 	and	r18,r18,r2
   41058:	94800094 	ori	r18,r18,2
   4105c:	0039883a 	mov	fp,zero
   41060:	d9003917 	ldw	r4,228(sp)
   41064:	dc001e04 	addi	r16,sp,120
   41068:	988003cc 	andi	r2,r19,15
   4106c:	b006973a 	slli	r3,r22,28
   41070:	2085883a 	add	r2,r4,r2
   41074:	9826d13a 	srli	r19,r19,4
   41078:	10800003 	ldbu	r2,0(r2)
   4107c:	b02cd13a 	srli	r22,r22,4
   41080:	843fffc4 	addi	r16,r16,-1
   41084:	1ce6b03a 	or	r19,r3,r19
   41088:	80800005 	stb	r2,0(r16)
   4108c:	9d84b03a 	or	r2,r19,r22
   41090:	103ff51e 	bne	r2,zero,41068 <__alt_data_end+0xfffe4ca8>
   41094:	d8c02817 	ldw	r3,160(sp)
   41098:	1c07c83a 	sub	r3,r3,r16
   4109c:	d8c02b15 	stw	r3,172(sp)
   410a0:	003ec606 	br	40bbc <__alt_data_end+0xfffe47fc>
   410a4:	8025883a 	mov	r18,r16
   410a8:	dc002903 	ldbu	r16,164(sp)
   410ac:	e011883a 	mov	r8,fp
   410b0:	84003fcc 	andi	r16,r16,255
   410b4:	803e9626 	beq	r16,zero,40b10 <__alt_data_end+0xfffe4750>
   410b8:	d8c02b03 	ldbu	r3,172(sp)
   410bc:	d8c02785 	stb	r3,158(sp)
   410c0:	003e9306 	br	40b10 <__alt_data_end+0xfffe4750>
   410c4:	00c00044 	movi	r3,1
   410c8:	d8c02905 	stb	r3,164(sp)
   410cc:	00c00ac4 	movi	r3,43
   410d0:	d8c02b05 	stb	r3,172(sp)
   410d4:	ac400007 	ldb	r17,0(r21)
   410d8:	003d4306 	br	405e8 <__alt_data_end+0xfffe4228>
   410dc:	84000814 	ori	r16,r16,32
   410e0:	ac400007 	ldb	r17,0(r21)
   410e4:	003d4006 	br	405e8 <__alt_data_end+0xfffe4228>
   410e8:	d8802e17 	ldw	r2,184(sp)
   410ec:	8025883a 	mov	r18,r16
   410f0:	d8002785 	stb	zero,158(sp)
   410f4:	14000017 	ldw	r16,0(r2)
   410f8:	e011883a 	mov	r8,fp
   410fc:	14c00104 	addi	r19,r2,4
   41100:	80042d26 	beq	r16,zero,421b8 <___vfprintf_internal_r+0x1d58>
   41104:	d8c02a17 	ldw	r3,168(sp)
   41108:	1803e416 	blt	r3,zero,4209c <___vfprintf_internal_r+0x1c3c>
   4110c:	180d883a 	mov	r6,r3
   41110:	000b883a 	mov	r5,zero
   41114:	8009883a 	mov	r4,r16
   41118:	df003d15 	stw	fp,244(sp)
   4111c:	00458d00 	call	458d0 <memchr>
   41120:	da003d17 	ldw	r8,244(sp)
   41124:	10046826 	beq	r2,zero,422c8 <___vfprintf_internal_r+0x1e68>
   41128:	1405c83a 	sub	r2,r2,r16
   4112c:	d8802b15 	stw	r2,172(sp)
   41130:	1003e016 	blt	r2,zero,420b4 <___vfprintf_internal_r+0x1c54>
   41134:	df002783 	ldbu	fp,158(sp)
   41138:	d8802915 	stw	r2,164(sp)
   4113c:	dcc02e15 	stw	r19,184(sp)
   41140:	d8002a15 	stw	zero,168(sp)
   41144:	d8003215 	stw	zero,200(sp)
   41148:	003ea206 	br	40bd4 <__alt_data_end+0xfffe4814>
   4114c:	8025883a 	mov	r18,r16
   41150:	dc002903 	ldbu	r16,164(sp)
   41154:	e011883a 	mov	r8,fp
   41158:	84003fcc 	andi	r16,r16,255
   4115c:	803f8d26 	beq	r16,zero,40f94 <__alt_data_end+0xfffe4bd4>
   41160:	d8c02b03 	ldbu	r3,172(sp)
   41164:	d8c02785 	stb	r3,158(sp)
   41168:	003f8a06 	br	40f94 <__alt_data_end+0xfffe4bd4>
   4116c:	8025883a 	mov	r18,r16
   41170:	dc002903 	ldbu	r16,164(sp)
   41174:	e011883a 	mov	r8,fp
   41178:	84003fcc 	andi	r16,r16,255
   4117c:	8005661e 	bne	r16,zero,42718 <___vfprintf_internal_r+0x22b8>
   41180:	01000174 	movhi	r4,5
   41184:	213e4b04 	addi	r4,r4,-1748
   41188:	d9003915 	stw	r4,228(sp)
   4118c:	9080080c 	andi	r2,r18,32
   41190:	103f9f1e 	bne	r2,zero,41010 <__alt_data_end+0xfffe4c50>
   41194:	9080040c 	andi	r2,r18,16
   41198:	1002eb26 	beq	r2,zero,41d48 <___vfprintf_internal_r+0x18e8>
   4119c:	d8802e17 	ldw	r2,184(sp)
   411a0:	002d883a 	mov	r22,zero
   411a4:	14c00017 	ldw	r19,0(r2)
   411a8:	10800104 	addi	r2,r2,4
   411ac:	d8802e15 	stw	r2,184(sp)
   411b0:	003f9c06 	br	41024 <__alt_data_end+0xfffe4c64>
   411b4:	d8802b07 	ldb	r2,172(sp)
   411b8:	1002e11e 	bne	r2,zero,41d40 <___vfprintf_internal_r+0x18e0>
   411bc:	00c00044 	movi	r3,1
   411c0:	d8c02905 	stb	r3,164(sp)
   411c4:	00c00804 	movi	r3,32
   411c8:	d8c02b05 	stb	r3,172(sp)
   411cc:	ac400007 	ldb	r17,0(r21)
   411d0:	003d0506 	br	405e8 <__alt_data_end+0xfffe4228>
   411d4:	84000054 	ori	r16,r16,1
   411d8:	ac400007 	ldb	r17,0(r21)
   411dc:	003d0206 	br	405e8 <__alt_data_end+0xfffe4228>
   411e0:	8025883a 	mov	r18,r16
   411e4:	dc002903 	ldbu	r16,164(sp)
   411e8:	e011883a 	mov	r8,fp
   411ec:	84003fcc 	andi	r16,r16,255
   411f0:	803de726 	beq	r16,zero,40990 <__alt_data_end+0xfffe45d0>
   411f4:	d8c02b03 	ldbu	r3,172(sp)
   411f8:	d8c02785 	stb	r3,158(sp)
   411fc:	003de406 	br	40990 <__alt_data_end+0xfffe45d0>
   41200:	84001014 	ori	r16,r16,64
   41204:	ac400007 	ldb	r17,0(r21)
   41208:	003cf706 	br	405e8 <__alt_data_end+0xfffe4228>
   4120c:	ac400007 	ldb	r17,0(r21)
   41210:	00801b04 	movi	r2,108
   41214:	88838f26 	beq	r17,r2,42054 <___vfprintf_internal_r+0x1bf4>
   41218:	84000414 	ori	r16,r16,16
   4121c:	003cf206 	br	405e8 <__alt_data_end+0xfffe4228>
   41220:	8025883a 	mov	r18,r16
   41224:	dc002903 	ldbu	r16,164(sp)
   41228:	e011883a 	mov	r8,fp
   4122c:	84003fcc 	andi	r16,r16,255
   41230:	80053f1e 	bne	r16,zero,42730 <___vfprintf_internal_r+0x22d0>
   41234:	9080080c 	andi	r2,r18,32
   41238:	1002d226 	beq	r2,zero,41d84 <___vfprintf_internal_r+0x1924>
   4123c:	d9002e17 	ldw	r4,184(sp)
   41240:	d9402f17 	ldw	r5,188(sp)
   41244:	20800017 	ldw	r2,0(r4)
   41248:	2807d7fa 	srai	r3,r5,31
   4124c:	21000104 	addi	r4,r4,4
   41250:	d9002e15 	stw	r4,184(sp)
   41254:	11400015 	stw	r5,0(r2)
   41258:	10c00115 	stw	r3,4(r2)
   4125c:	003cb806 	br	40540 <__alt_data_end+0xfffe4180>
   41260:	d8c02e17 	ldw	r3,184(sp)
   41264:	d9002e17 	ldw	r4,184(sp)
   41268:	8025883a 	mov	r18,r16
   4126c:	18800017 	ldw	r2,0(r3)
   41270:	21000104 	addi	r4,r4,4
   41274:	00c00044 	movi	r3,1
   41278:	e011883a 	mov	r8,fp
   4127c:	d8c02915 	stw	r3,164(sp)
   41280:	d8002785 	stb	zero,158(sp)
   41284:	d8801405 	stb	r2,80(sp)
   41288:	d9002e15 	stw	r4,184(sp)
   4128c:	d8c02b15 	stw	r3,172(sp)
   41290:	d8002a15 	stw	zero,168(sp)
   41294:	d8003215 	stw	zero,200(sp)
   41298:	dc001404 	addi	r16,sp,80
   4129c:	0039883a 	mov	fp,zero
   412a0:	003e5306 	br	40bf0 <__alt_data_end+0xfffe4830>
   412a4:	01000174 	movhi	r4,5
   412a8:	213e4b04 	addi	r4,r4,-1748
   412ac:	0039883a 	mov	fp,zero
   412b0:	d9003915 	stw	r4,228(sp)
   412b4:	04401e04 	movi	r17,120
   412b8:	003f6906 	br	41060 <__alt_data_end+0xfffe4ca0>
   412bc:	8025883a 	mov	r18,r16
   412c0:	dc002903 	ldbu	r16,164(sp)
   412c4:	e011883a 	mov	r8,fp
   412c8:	84003fcc 	andi	r16,r16,255
   412cc:	8005081e 	bne	r16,zero,426f0 <___vfprintf_internal_r+0x2290>
   412d0:	883d6126 	beq	r17,zero,40858 <__alt_data_end+0xfffe4498>
   412d4:	00c00044 	movi	r3,1
   412d8:	d8c02915 	stw	r3,164(sp)
   412dc:	dc401405 	stb	r17,80(sp)
   412e0:	d8002785 	stb	zero,158(sp)
   412e4:	003fe906 	br	4128c <__alt_data_end+0xfffe4ecc>
   412e8:	01400174 	movhi	r5,5
   412ec:	297e4b04 	addi	r5,r5,-1748
   412f0:	d9403915 	stw	r5,228(sp)
   412f4:	d8c02e15 	stw	r3,184(sp)
   412f8:	1025883a 	mov	r18,r2
   412fc:	04401e04 	movi	r17,120
   41300:	9d84b03a 	or	r2,r19,r22
   41304:	1000fc1e 	bne	r2,zero,416f8 <___vfprintf_internal_r+0x1298>
   41308:	0039883a 	mov	fp,zero
   4130c:	00800084 	movi	r2,2
   41310:	10803fcc 	andi	r2,r2,255
   41314:	00c00044 	movi	r3,1
   41318:	10c20f26 	beq	r2,r3,41b58 <___vfprintf_internal_r+0x16f8>
   4131c:	00c00084 	movi	r3,2
   41320:	10fd3326 	beq	r2,r3,407f0 <__alt_data_end+0xfffe4430>
   41324:	003e0b06 	br	40b54 <__alt_data_end+0xfffe4794>
   41328:	d8c02017 	ldw	r3,128(sp)
   4132c:	003e7106 	br	40cf4 <__alt_data_end+0xfffe4934>
   41330:	00801944 	movi	r2,101
   41334:	14407e0e 	bge	r2,r17,41530 <___vfprintf_internal_r+0x10d0>
   41338:	d9003617 	ldw	r4,216(sp)
   4133c:	d9403817 	ldw	r5,224(sp)
   41340:	000d883a 	mov	r6,zero
   41344:	000f883a 	mov	r7,zero
   41348:	d8c03c15 	stw	r3,240(sp)
   4134c:	da003d15 	stw	r8,244(sp)
   41350:	004bc380 	call	4bc38 <__eqdf2>
   41354:	d8c03c17 	ldw	r3,240(sp)
   41358:	da003d17 	ldw	r8,244(sp)
   4135c:	1000f71e 	bne	r2,zero,4173c <___vfprintf_internal_r+0x12dc>
   41360:	d8801f17 	ldw	r2,124(sp)
   41364:	01000174 	movhi	r4,5
   41368:	213e5204 	addi	r4,r4,-1720
   4136c:	18c00044 	addi	r3,r3,1
   41370:	10800044 	addi	r2,r2,1
   41374:	41000015 	stw	r4,0(r8)
   41378:	01000044 	movi	r4,1
   4137c:	41000115 	stw	r4,4(r8)
   41380:	d8c02015 	stw	r3,128(sp)
   41384:	d8801f15 	stw	r2,124(sp)
   41388:	010001c4 	movi	r4,7
   4138c:	2082b816 	blt	r4,r2,41e70 <___vfprintf_internal_r+0x1a10>
   41390:	42000204 	addi	r8,r8,8
   41394:	d8802617 	ldw	r2,152(sp)
   41398:	d9403317 	ldw	r5,204(sp)
   4139c:	11400216 	blt	r2,r5,413a8 <___vfprintf_internal_r+0xf48>
   413a0:	9080004c 	andi	r2,r18,1
   413a4:	103eb326 	beq	r2,zero,40e74 <__alt_data_end+0xfffe4ab4>
   413a8:	d8803717 	ldw	r2,220(sp)
   413ac:	d9003417 	ldw	r4,208(sp)
   413b0:	d9403717 	ldw	r5,220(sp)
   413b4:	1887883a 	add	r3,r3,r2
   413b8:	d8801f17 	ldw	r2,124(sp)
   413bc:	41000015 	stw	r4,0(r8)
   413c0:	41400115 	stw	r5,4(r8)
   413c4:	10800044 	addi	r2,r2,1
   413c8:	d8c02015 	stw	r3,128(sp)
   413cc:	d8801f15 	stw	r2,124(sp)
   413d0:	010001c4 	movi	r4,7
   413d4:	20832916 	blt	r4,r2,4207c <___vfprintf_internal_r+0x1c1c>
   413d8:	42000204 	addi	r8,r8,8
   413dc:	d8803317 	ldw	r2,204(sp)
   413e0:	143fffc4 	addi	r16,r2,-1
   413e4:	043ea30e 	bge	zero,r16,40e74 <__alt_data_end+0xfffe4ab4>
   413e8:	04400404 	movi	r17,16
   413ec:	d8801f17 	ldw	r2,124(sp)
   413f0:	8c00880e 	bge	r17,r16,41614 <___vfprintf_internal_r+0x11b4>
   413f4:	01400174 	movhi	r5,5
   413f8:	297e5284 	addi	r5,r5,-1718
   413fc:	d9402c15 	stw	r5,176(sp)
   41400:	058001c4 	movi	r22,7
   41404:	dcc02d17 	ldw	r19,180(sp)
   41408:	00000306 	br	41418 <___vfprintf_internal_r+0xfb8>
   4140c:	42000204 	addi	r8,r8,8
   41410:	843ffc04 	addi	r16,r16,-16
   41414:	8c00820e 	bge	r17,r16,41620 <___vfprintf_internal_r+0x11c0>
   41418:	18c00404 	addi	r3,r3,16
   4141c:	10800044 	addi	r2,r2,1
   41420:	45000015 	stw	r20,0(r8)
   41424:	44400115 	stw	r17,4(r8)
   41428:	d8c02015 	stw	r3,128(sp)
   4142c:	d8801f15 	stw	r2,124(sp)
   41430:	b0bff60e 	bge	r22,r2,4140c <__alt_data_end+0xfffe504c>
   41434:	d9801e04 	addi	r6,sp,120
   41438:	b80b883a 	mov	r5,r23
   4143c:	9809883a 	mov	r4,r19
   41440:	00471500 	call	47150 <__sprint_r>
   41444:	103d0a1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41448:	d8c02017 	ldw	r3,128(sp)
   4144c:	d8801f17 	ldw	r2,124(sp)
   41450:	da000404 	addi	r8,sp,16
   41454:	003fee06 	br	41410 <__alt_data_end+0xfffe5050>
   41458:	d9403117 	ldw	r5,196(sp)
   4145c:	d8802917 	ldw	r2,164(sp)
   41460:	28adc83a 	sub	r22,r5,r2
   41464:	05be410e 	bge	zero,r22,40d6c <__alt_data_end+0xfffe49ac>
   41468:	07000404 	movi	fp,16
   4146c:	d8801f17 	ldw	r2,124(sp)
   41470:	e5838f0e 	bge	fp,r22,422b0 <___vfprintf_internal_r+0x1e50>
   41474:	01400174 	movhi	r5,5
   41478:	297e5284 	addi	r5,r5,-1718
   4147c:	dc403015 	stw	r17,192(sp)
   41480:	d9402c15 	stw	r5,176(sp)
   41484:	b023883a 	mov	r17,r22
   41488:	04c001c4 	movi	r19,7
   4148c:	a82d883a 	mov	r22,r21
   41490:	902b883a 	mov	r21,r18
   41494:	8025883a 	mov	r18,r16
   41498:	dc002d17 	ldw	r16,180(sp)
   4149c:	00000306 	br	414ac <___vfprintf_internal_r+0x104c>
   414a0:	8c7ffc04 	addi	r17,r17,-16
   414a4:	42000204 	addi	r8,r8,8
   414a8:	e440110e 	bge	fp,r17,414f0 <___vfprintf_internal_r+0x1090>
   414ac:	18c00404 	addi	r3,r3,16
   414b0:	10800044 	addi	r2,r2,1
   414b4:	45000015 	stw	r20,0(r8)
   414b8:	47000115 	stw	fp,4(r8)
   414bc:	d8c02015 	stw	r3,128(sp)
   414c0:	d8801f15 	stw	r2,124(sp)
   414c4:	98bff60e 	bge	r19,r2,414a0 <__alt_data_end+0xfffe50e0>
   414c8:	d9801e04 	addi	r6,sp,120
   414cc:	b80b883a 	mov	r5,r23
   414d0:	8009883a 	mov	r4,r16
   414d4:	00471500 	call	47150 <__sprint_r>
   414d8:	103ce51e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   414dc:	8c7ffc04 	addi	r17,r17,-16
   414e0:	d8c02017 	ldw	r3,128(sp)
   414e4:	d8801f17 	ldw	r2,124(sp)
   414e8:	da000404 	addi	r8,sp,16
   414ec:	e47fef16 	blt	fp,r17,414ac <__alt_data_end+0xfffe50ec>
   414f0:	9021883a 	mov	r16,r18
   414f4:	a825883a 	mov	r18,r21
   414f8:	b02b883a 	mov	r21,r22
   414fc:	882d883a 	mov	r22,r17
   41500:	dc403017 	ldw	r17,192(sp)
   41504:	d9002c17 	ldw	r4,176(sp)
   41508:	1d87883a 	add	r3,r3,r22
   4150c:	10800044 	addi	r2,r2,1
   41510:	41000015 	stw	r4,0(r8)
   41514:	45800115 	stw	r22,4(r8)
   41518:	d8c02015 	stw	r3,128(sp)
   4151c:	d8801f15 	stw	r2,124(sp)
   41520:	010001c4 	movi	r4,7
   41524:	20818e16 	blt	r4,r2,41b60 <___vfprintf_internal_r+0x1700>
   41528:	42000204 	addi	r8,r8,8
   4152c:	003e0f06 	br	40d6c <__alt_data_end+0xfffe49ac>
   41530:	d9403317 	ldw	r5,204(sp)
   41534:	00800044 	movi	r2,1
   41538:	18c00044 	addi	r3,r3,1
   4153c:	1141530e 	bge	r2,r5,41a8c <___vfprintf_internal_r+0x162c>
   41540:	dc401f17 	ldw	r17,124(sp)
   41544:	00800044 	movi	r2,1
   41548:	40800115 	stw	r2,4(r8)
   4154c:	8c400044 	addi	r17,r17,1
   41550:	44000015 	stw	r16,0(r8)
   41554:	d8c02015 	stw	r3,128(sp)
   41558:	dc401f15 	stw	r17,124(sp)
   4155c:	008001c4 	movi	r2,7
   41560:	14416b16 	blt	r2,r17,41b10 <___vfprintf_internal_r+0x16b0>
   41564:	42000204 	addi	r8,r8,8
   41568:	d8803717 	ldw	r2,220(sp)
   4156c:	d9003417 	ldw	r4,208(sp)
   41570:	8c400044 	addi	r17,r17,1
   41574:	10c7883a 	add	r3,r2,r3
   41578:	40800115 	stw	r2,4(r8)
   4157c:	41000015 	stw	r4,0(r8)
   41580:	d8c02015 	stw	r3,128(sp)
   41584:	dc401f15 	stw	r17,124(sp)
   41588:	008001c4 	movi	r2,7
   4158c:	14416916 	blt	r2,r17,41b34 <___vfprintf_internal_r+0x16d4>
   41590:	45800204 	addi	r22,r8,8
   41594:	d9003617 	ldw	r4,216(sp)
   41598:	d9403817 	ldw	r5,224(sp)
   4159c:	000d883a 	mov	r6,zero
   415a0:	000f883a 	mov	r7,zero
   415a4:	d8c03c15 	stw	r3,240(sp)
   415a8:	004bc380 	call	4bc38 <__eqdf2>
   415ac:	d8c03c17 	ldw	r3,240(sp)
   415b0:	1000bc26 	beq	r2,zero,418a4 <___vfprintf_internal_r+0x1444>
   415b4:	d9403317 	ldw	r5,204(sp)
   415b8:	84000044 	addi	r16,r16,1
   415bc:	8c400044 	addi	r17,r17,1
   415c0:	28bfffc4 	addi	r2,r5,-1
   415c4:	1887883a 	add	r3,r3,r2
   415c8:	b0800115 	stw	r2,4(r22)
   415cc:	b4000015 	stw	r16,0(r22)
   415d0:	d8c02015 	stw	r3,128(sp)
   415d4:	dc401f15 	stw	r17,124(sp)
   415d8:	008001c4 	movi	r2,7
   415dc:	14414316 	blt	r2,r17,41aec <___vfprintf_internal_r+0x168c>
   415e0:	b5800204 	addi	r22,r22,8
   415e4:	d9003a17 	ldw	r4,232(sp)
   415e8:	df0022c4 	addi	fp,sp,139
   415ec:	8c400044 	addi	r17,r17,1
   415f0:	20c7883a 	add	r3,r4,r3
   415f4:	b7000015 	stw	fp,0(r22)
   415f8:	b1000115 	stw	r4,4(r22)
   415fc:	d8c02015 	stw	r3,128(sp)
   41600:	dc401f15 	stw	r17,124(sp)
   41604:	008001c4 	movi	r2,7
   41608:	14400e16 	blt	r2,r17,41644 <___vfprintf_internal_r+0x11e4>
   4160c:	b2000204 	addi	r8,r22,8
   41610:	003e1806 	br	40e74 <__alt_data_end+0xfffe4ab4>
   41614:	01000174 	movhi	r4,5
   41618:	213e5284 	addi	r4,r4,-1718
   4161c:	d9002c15 	stw	r4,176(sp)
   41620:	d9002c17 	ldw	r4,176(sp)
   41624:	1c07883a 	add	r3,r3,r16
   41628:	44000115 	stw	r16,4(r8)
   4162c:	41000015 	stw	r4,0(r8)
   41630:	10800044 	addi	r2,r2,1
   41634:	d8c02015 	stw	r3,128(sp)
   41638:	d8801f15 	stw	r2,124(sp)
   4163c:	010001c4 	movi	r4,7
   41640:	20be0b0e 	bge	r4,r2,40e70 <__alt_data_end+0xfffe4ab0>
   41644:	d9002d17 	ldw	r4,180(sp)
   41648:	d9801e04 	addi	r6,sp,120
   4164c:	b80b883a 	mov	r5,r23
   41650:	00471500 	call	47150 <__sprint_r>
   41654:	103c861e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41658:	d8c02017 	ldw	r3,128(sp)
   4165c:	da000404 	addi	r8,sp,16
   41660:	003e0406 	br	40e74 <__alt_data_end+0xfffe4ab4>
   41664:	d9002d17 	ldw	r4,180(sp)
   41668:	d9801e04 	addi	r6,sp,120
   4166c:	b80b883a 	mov	r5,r23
   41670:	00471500 	call	47150 <__sprint_r>
   41674:	103e3b26 	beq	r2,zero,40f64 <__alt_data_end+0xfffe4ba4>
   41678:	003c7d06 	br	40870 <__alt_data_end+0xfffe44b0>
   4167c:	d9002d17 	ldw	r4,180(sp)
   41680:	d9801e04 	addi	r6,sp,120
   41684:	b80b883a 	mov	r5,r23
   41688:	00471500 	call	47150 <__sprint_r>
   4168c:	103c781e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41690:	d8c02017 	ldw	r3,128(sp)
   41694:	da000404 	addi	r8,sp,16
   41698:	003de906 	br	40e40 <__alt_data_end+0xfffe4a80>
   4169c:	d9002d17 	ldw	r4,180(sp)
   416a0:	d9801e04 	addi	r6,sp,120
   416a4:	b80b883a 	mov	r5,r23
   416a8:	00471500 	call	47150 <__sprint_r>
   416ac:	103c701e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   416b0:	d8c02017 	ldw	r3,128(sp)
   416b4:	da000404 	addi	r8,sp,16
   416b8:	003d9b06 	br	40d28 <__alt_data_end+0xfffe4968>
   416bc:	d9002d17 	ldw	r4,180(sp)
   416c0:	d9801e04 	addi	r6,sp,120
   416c4:	b80b883a 	mov	r5,r23
   416c8:	00471500 	call	47150 <__sprint_r>
   416cc:	103c681e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   416d0:	d8c02017 	ldw	r3,128(sp)
   416d4:	da000404 	addi	r8,sp,16
   416d8:	003da106 	br	40d60 <__alt_data_end+0xfffe49a0>
   416dc:	d9402a17 	ldw	r5,168(sp)
   416e0:	d8002785 	stb	zero,158(sp)
   416e4:	283f0616 	blt	r5,zero,41300 <__alt_data_end+0xfffe4f40>
   416e8:	00ffdfc4 	movi	r3,-129
   416ec:	9d84b03a 	or	r2,r19,r22
   416f0:	90e4703a 	and	r18,r18,r3
   416f4:	103c3b26 	beq	r2,zero,407e4 <__alt_data_end+0xfffe4424>
   416f8:	0039883a 	mov	fp,zero
   416fc:	003e5806 	br	41060 <__alt_data_end+0xfffe4ca0>
   41700:	9080040c 	andi	r2,r18,16
   41704:	1001b326 	beq	r2,zero,41dd4 <___vfprintf_internal_r+0x1974>
   41708:	d8c02e17 	ldw	r3,184(sp)
   4170c:	d9002a17 	ldw	r4,168(sp)
   41710:	d8002785 	stb	zero,158(sp)
   41714:	18800104 	addi	r2,r3,4
   41718:	1cc00017 	ldw	r19,0(r3)
   4171c:	002d883a 	mov	r22,zero
   41720:	2001b516 	blt	r4,zero,41df8 <___vfprintf_internal_r+0x1998>
   41724:	00ffdfc4 	movi	r3,-129
   41728:	d8802e15 	stw	r2,184(sp)
   4172c:	90e4703a 	and	r18,r18,r3
   41730:	983d0526 	beq	r19,zero,40b48 <__alt_data_end+0xfffe4788>
   41734:	0039883a 	mov	fp,zero
   41738:	003d0806 	br	40b5c <__alt_data_end+0xfffe479c>
   4173c:	dc402617 	ldw	r17,152(sp)
   41740:	0441d30e 	bge	zero,r17,41e90 <___vfprintf_internal_r+0x1a30>
   41744:	dc403217 	ldw	r17,200(sp)
   41748:	d8803317 	ldw	r2,204(sp)
   4174c:	1440010e 	bge	r2,r17,41754 <___vfprintf_internal_r+0x12f4>
   41750:	1023883a 	mov	r17,r2
   41754:	04400a0e 	bge	zero,r17,41780 <___vfprintf_internal_r+0x1320>
   41758:	d8801f17 	ldw	r2,124(sp)
   4175c:	1c47883a 	add	r3,r3,r17
   41760:	44000015 	stw	r16,0(r8)
   41764:	10800044 	addi	r2,r2,1
   41768:	44400115 	stw	r17,4(r8)
   4176c:	d8c02015 	stw	r3,128(sp)
   41770:	d8801f15 	stw	r2,124(sp)
   41774:	010001c4 	movi	r4,7
   41778:	20826516 	blt	r4,r2,42110 <___vfprintf_internal_r+0x1cb0>
   4177c:	42000204 	addi	r8,r8,8
   41780:	88026116 	blt	r17,zero,42108 <___vfprintf_internal_r+0x1ca8>
   41784:	d9003217 	ldw	r4,200(sp)
   41788:	2463c83a 	sub	r17,r4,r17
   4178c:	04407b0e 	bge	zero,r17,4197c <___vfprintf_internal_r+0x151c>
   41790:	05800404 	movi	r22,16
   41794:	d8801f17 	ldw	r2,124(sp)
   41798:	b4419d0e 	bge	r22,r17,41e10 <___vfprintf_internal_r+0x19b0>
   4179c:	01000174 	movhi	r4,5
   417a0:	213e5284 	addi	r4,r4,-1718
   417a4:	d9002c15 	stw	r4,176(sp)
   417a8:	070001c4 	movi	fp,7
   417ac:	dcc02d17 	ldw	r19,180(sp)
   417b0:	00000306 	br	417c0 <___vfprintf_internal_r+0x1360>
   417b4:	42000204 	addi	r8,r8,8
   417b8:	8c7ffc04 	addi	r17,r17,-16
   417bc:	b441970e 	bge	r22,r17,41e1c <___vfprintf_internal_r+0x19bc>
   417c0:	18c00404 	addi	r3,r3,16
   417c4:	10800044 	addi	r2,r2,1
   417c8:	45000015 	stw	r20,0(r8)
   417cc:	45800115 	stw	r22,4(r8)
   417d0:	d8c02015 	stw	r3,128(sp)
   417d4:	d8801f15 	stw	r2,124(sp)
   417d8:	e0bff60e 	bge	fp,r2,417b4 <__alt_data_end+0xfffe53f4>
   417dc:	d9801e04 	addi	r6,sp,120
   417e0:	b80b883a 	mov	r5,r23
   417e4:	9809883a 	mov	r4,r19
   417e8:	00471500 	call	47150 <__sprint_r>
   417ec:	103c201e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   417f0:	d8c02017 	ldw	r3,128(sp)
   417f4:	d8801f17 	ldw	r2,124(sp)
   417f8:	da000404 	addi	r8,sp,16
   417fc:	003fee06 	br	417b8 <__alt_data_end+0xfffe53f8>
   41800:	d9002d17 	ldw	r4,180(sp)
   41804:	d9801e04 	addi	r6,sp,120
   41808:	b80b883a 	mov	r5,r23
   4180c:	00471500 	call	47150 <__sprint_r>
   41810:	103c171e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41814:	d8c02017 	ldw	r3,128(sp)
   41818:	df002787 	ldb	fp,158(sp)
   4181c:	da000404 	addi	r8,sp,16
   41820:	003d3406 	br	40cf4 <__alt_data_end+0xfffe4934>
   41824:	9080040c 	andi	r2,r18,16
   41828:	10016126 	beq	r2,zero,41db0 <___vfprintf_internal_r+0x1950>
   4182c:	d9402e17 	ldw	r5,184(sp)
   41830:	2cc00017 	ldw	r19,0(r5)
   41834:	29400104 	addi	r5,r5,4
   41838:	d9402e15 	stw	r5,184(sp)
   4183c:	982dd7fa 	srai	r22,r19,31
   41840:	b005883a 	mov	r2,r22
   41844:	003c5a06 	br	409b0 <__alt_data_end+0xfffe45f0>
   41848:	9080040c 	andi	r2,r18,16
   4184c:	10003526 	beq	r2,zero,41924 <___vfprintf_internal_r+0x14c4>
   41850:	d8c02e17 	ldw	r3,184(sp)
   41854:	d9002a17 	ldw	r4,168(sp)
   41858:	d8002785 	stb	zero,158(sp)
   4185c:	18800104 	addi	r2,r3,4
   41860:	1cc00017 	ldw	r19,0(r3)
   41864:	002d883a 	mov	r22,zero
   41868:	20003716 	blt	r4,zero,41948 <___vfprintf_internal_r+0x14e8>
   4186c:	00ffdfc4 	movi	r3,-129
   41870:	d8802e15 	stw	r2,184(sp)
   41874:	90e4703a 	and	r18,r18,r3
   41878:	0039883a 	mov	fp,zero
   4187c:	983dd426 	beq	r19,zero,40fd0 <__alt_data_end+0xfffe4c10>
   41880:	00800244 	movi	r2,9
   41884:	14fc5336 	bltu	r2,r19,409d4 <__alt_data_end+0xfffe4614>
   41888:	d8c02817 	ldw	r3,160(sp)
   4188c:	dc001dc4 	addi	r16,sp,119
   41890:	9cc00c04 	addi	r19,r19,48
   41894:	1c07c83a 	sub	r3,r3,r16
   41898:	dcc01dc5 	stb	r19,119(sp)
   4189c:	d8c02b15 	stw	r3,172(sp)
   418a0:	003cc606 	br	40bbc <__alt_data_end+0xfffe47fc>
   418a4:	d8803317 	ldw	r2,204(sp)
   418a8:	143fffc4 	addi	r16,r2,-1
   418ac:	043f4d0e 	bge	zero,r16,415e4 <__alt_data_end+0xfffe5224>
   418b0:	07000404 	movi	fp,16
   418b4:	e400810e 	bge	fp,r16,41abc <___vfprintf_internal_r+0x165c>
   418b8:	01400174 	movhi	r5,5
   418bc:	297e5284 	addi	r5,r5,-1718
   418c0:	d9402c15 	stw	r5,176(sp)
   418c4:	01c001c4 	movi	r7,7
   418c8:	dcc02d17 	ldw	r19,180(sp)
   418cc:	00000306 	br	418dc <___vfprintf_internal_r+0x147c>
   418d0:	b5800204 	addi	r22,r22,8
   418d4:	843ffc04 	addi	r16,r16,-16
   418d8:	e4007b0e 	bge	fp,r16,41ac8 <___vfprintf_internal_r+0x1668>
   418dc:	18c00404 	addi	r3,r3,16
   418e0:	8c400044 	addi	r17,r17,1
   418e4:	b5000015 	stw	r20,0(r22)
   418e8:	b7000115 	stw	fp,4(r22)
   418ec:	d8c02015 	stw	r3,128(sp)
   418f0:	dc401f15 	stw	r17,124(sp)
   418f4:	3c7ff60e 	bge	r7,r17,418d0 <__alt_data_end+0xfffe5510>
   418f8:	d9801e04 	addi	r6,sp,120
   418fc:	b80b883a 	mov	r5,r23
   41900:	9809883a 	mov	r4,r19
   41904:	d9c03c15 	stw	r7,240(sp)
   41908:	00471500 	call	47150 <__sprint_r>
   4190c:	d9c03c17 	ldw	r7,240(sp)
   41910:	103bd71e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41914:	d8c02017 	ldw	r3,128(sp)
   41918:	dc401f17 	ldw	r17,124(sp)
   4191c:	dd800404 	addi	r22,sp,16
   41920:	003fec06 	br	418d4 <__alt_data_end+0xfffe5514>
   41924:	9080100c 	andi	r2,r18,64
   41928:	d8002785 	stb	zero,158(sp)
   4192c:	10010e26 	beq	r2,zero,41d68 <___vfprintf_internal_r+0x1908>
   41930:	d9402e17 	ldw	r5,184(sp)
   41934:	d8c02a17 	ldw	r3,168(sp)
   41938:	002d883a 	mov	r22,zero
   4193c:	28800104 	addi	r2,r5,4
   41940:	2cc0000b 	ldhu	r19,0(r5)
   41944:	183fc90e 	bge	r3,zero,4186c <__alt_data_end+0xfffe54ac>
   41948:	d8802e15 	stw	r2,184(sp)
   4194c:	0039883a 	mov	fp,zero
   41950:	9d84b03a 	or	r2,r19,r22
   41954:	103c1e1e 	bne	r2,zero,409d0 <__alt_data_end+0xfffe4610>
   41958:	00800044 	movi	r2,1
   4195c:	003e6c06 	br	41310 <__alt_data_end+0xfffe4f50>
   41960:	d9002d17 	ldw	r4,180(sp)
   41964:	d9801e04 	addi	r6,sp,120
   41968:	b80b883a 	mov	r5,r23
   4196c:	00471500 	call	47150 <__sprint_r>
   41970:	103bbf1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41974:	d8c02017 	ldw	r3,128(sp)
   41978:	da000404 	addi	r8,sp,16
   4197c:	d9003217 	ldw	r4,200(sp)
   41980:	d8802617 	ldw	r2,152(sp)
   41984:	d9403317 	ldw	r5,204(sp)
   41988:	8123883a 	add	r17,r16,r4
   4198c:	11400216 	blt	r2,r5,41998 <___vfprintf_internal_r+0x1538>
   41990:	9100004c 	andi	r4,r18,1
   41994:	20000d26 	beq	r4,zero,419cc <___vfprintf_internal_r+0x156c>
   41998:	d9003717 	ldw	r4,220(sp)
   4199c:	d9403417 	ldw	r5,208(sp)
   419a0:	1907883a 	add	r3,r3,r4
   419a4:	d9001f17 	ldw	r4,124(sp)
   419a8:	41400015 	stw	r5,0(r8)
   419ac:	d9403717 	ldw	r5,220(sp)
   419b0:	21000044 	addi	r4,r4,1
   419b4:	d8c02015 	stw	r3,128(sp)
   419b8:	41400115 	stw	r5,4(r8)
   419bc:	d9001f15 	stw	r4,124(sp)
   419c0:	014001c4 	movi	r5,7
   419c4:	2901e816 	blt	r5,r4,42168 <___vfprintf_internal_r+0x1d08>
   419c8:	42000204 	addi	r8,r8,8
   419cc:	d9003317 	ldw	r4,204(sp)
   419d0:	8121883a 	add	r16,r16,r4
   419d4:	2085c83a 	sub	r2,r4,r2
   419d8:	8461c83a 	sub	r16,r16,r17
   419dc:	1400010e 	bge	r2,r16,419e4 <___vfprintf_internal_r+0x1584>
   419e0:	1021883a 	mov	r16,r2
   419e4:	04000a0e 	bge	zero,r16,41a10 <___vfprintf_internal_r+0x15b0>
   419e8:	d9001f17 	ldw	r4,124(sp)
   419ec:	1c07883a 	add	r3,r3,r16
   419f0:	44400015 	stw	r17,0(r8)
   419f4:	21000044 	addi	r4,r4,1
   419f8:	44000115 	stw	r16,4(r8)
   419fc:	d8c02015 	stw	r3,128(sp)
   41a00:	d9001f15 	stw	r4,124(sp)
   41a04:	014001c4 	movi	r5,7
   41a08:	2901fb16 	blt	r5,r4,421f8 <___vfprintf_internal_r+0x1d98>
   41a0c:	42000204 	addi	r8,r8,8
   41a10:	8001f716 	blt	r16,zero,421f0 <___vfprintf_internal_r+0x1d90>
   41a14:	1421c83a 	sub	r16,r2,r16
   41a18:	043d160e 	bge	zero,r16,40e74 <__alt_data_end+0xfffe4ab4>
   41a1c:	04400404 	movi	r17,16
   41a20:	d8801f17 	ldw	r2,124(sp)
   41a24:	8c3efb0e 	bge	r17,r16,41614 <__alt_data_end+0xfffe5254>
   41a28:	01400174 	movhi	r5,5
   41a2c:	297e5284 	addi	r5,r5,-1718
   41a30:	d9402c15 	stw	r5,176(sp)
   41a34:	058001c4 	movi	r22,7
   41a38:	dcc02d17 	ldw	r19,180(sp)
   41a3c:	00000306 	br	41a4c <___vfprintf_internal_r+0x15ec>
   41a40:	42000204 	addi	r8,r8,8
   41a44:	843ffc04 	addi	r16,r16,-16
   41a48:	8c3ef50e 	bge	r17,r16,41620 <__alt_data_end+0xfffe5260>
   41a4c:	18c00404 	addi	r3,r3,16
   41a50:	10800044 	addi	r2,r2,1
   41a54:	45000015 	stw	r20,0(r8)
   41a58:	44400115 	stw	r17,4(r8)
   41a5c:	d8c02015 	stw	r3,128(sp)
   41a60:	d8801f15 	stw	r2,124(sp)
   41a64:	b0bff60e 	bge	r22,r2,41a40 <__alt_data_end+0xfffe5680>
   41a68:	d9801e04 	addi	r6,sp,120
   41a6c:	b80b883a 	mov	r5,r23
   41a70:	9809883a 	mov	r4,r19
   41a74:	00471500 	call	47150 <__sprint_r>
   41a78:	103b7d1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41a7c:	d8c02017 	ldw	r3,128(sp)
   41a80:	d8801f17 	ldw	r2,124(sp)
   41a84:	da000404 	addi	r8,sp,16
   41a88:	003fee06 	br	41a44 <__alt_data_end+0xfffe5684>
   41a8c:	9088703a 	and	r4,r18,r2
   41a90:	203eab1e 	bne	r4,zero,41540 <__alt_data_end+0xfffe5180>
   41a94:	dc401f17 	ldw	r17,124(sp)
   41a98:	40800115 	stw	r2,4(r8)
   41a9c:	44000015 	stw	r16,0(r8)
   41aa0:	8c400044 	addi	r17,r17,1
   41aa4:	d8c02015 	stw	r3,128(sp)
   41aa8:	dc401f15 	stw	r17,124(sp)
   41aac:	008001c4 	movi	r2,7
   41ab0:	14400e16 	blt	r2,r17,41aec <___vfprintf_internal_r+0x168c>
   41ab4:	45800204 	addi	r22,r8,8
   41ab8:	003eca06 	br	415e4 <__alt_data_end+0xfffe5224>
   41abc:	01000174 	movhi	r4,5
   41ac0:	213e5284 	addi	r4,r4,-1718
   41ac4:	d9002c15 	stw	r4,176(sp)
   41ac8:	d8802c17 	ldw	r2,176(sp)
   41acc:	1c07883a 	add	r3,r3,r16
   41ad0:	8c400044 	addi	r17,r17,1
   41ad4:	b0800015 	stw	r2,0(r22)
   41ad8:	b4000115 	stw	r16,4(r22)
   41adc:	d8c02015 	stw	r3,128(sp)
   41ae0:	dc401f15 	stw	r17,124(sp)
   41ae4:	008001c4 	movi	r2,7
   41ae8:	147ebd0e 	bge	r2,r17,415e0 <__alt_data_end+0xfffe5220>
   41aec:	d9002d17 	ldw	r4,180(sp)
   41af0:	d9801e04 	addi	r6,sp,120
   41af4:	b80b883a 	mov	r5,r23
   41af8:	00471500 	call	47150 <__sprint_r>
   41afc:	103b5c1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41b00:	d8c02017 	ldw	r3,128(sp)
   41b04:	dc401f17 	ldw	r17,124(sp)
   41b08:	dd800404 	addi	r22,sp,16
   41b0c:	003eb506 	br	415e4 <__alt_data_end+0xfffe5224>
   41b10:	d9002d17 	ldw	r4,180(sp)
   41b14:	d9801e04 	addi	r6,sp,120
   41b18:	b80b883a 	mov	r5,r23
   41b1c:	00471500 	call	47150 <__sprint_r>
   41b20:	103b531e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41b24:	d8c02017 	ldw	r3,128(sp)
   41b28:	dc401f17 	ldw	r17,124(sp)
   41b2c:	da000404 	addi	r8,sp,16
   41b30:	003e8d06 	br	41568 <__alt_data_end+0xfffe51a8>
   41b34:	d9002d17 	ldw	r4,180(sp)
   41b38:	d9801e04 	addi	r6,sp,120
   41b3c:	b80b883a 	mov	r5,r23
   41b40:	00471500 	call	47150 <__sprint_r>
   41b44:	103b4a1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41b48:	d8c02017 	ldw	r3,128(sp)
   41b4c:	dc401f17 	ldw	r17,124(sp)
   41b50:	dd800404 	addi	r22,sp,16
   41b54:	003e8f06 	br	41594 <__alt_data_end+0xfffe51d4>
   41b58:	0027883a 	mov	r19,zero
   41b5c:	003f4a06 	br	41888 <__alt_data_end+0xfffe54c8>
   41b60:	d9002d17 	ldw	r4,180(sp)
   41b64:	d9801e04 	addi	r6,sp,120
   41b68:	b80b883a 	mov	r5,r23
   41b6c:	00471500 	call	47150 <__sprint_r>
   41b70:	103b3f1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41b74:	d8c02017 	ldw	r3,128(sp)
   41b78:	da000404 	addi	r8,sp,16
   41b7c:	003c7b06 	br	40d6c <__alt_data_end+0xfffe49ac>
   41b80:	d9402a17 	ldw	r5,168(sp)
   41b84:	04e7c83a 	sub	r19,zero,r19
   41b88:	07000b44 	movi	fp,45
   41b8c:	9804c03a 	cmpne	r2,r19,zero
   41b90:	05adc83a 	sub	r22,zero,r22
   41b94:	df002785 	stb	fp,158(sp)
   41b98:	b0adc83a 	sub	r22,r22,r2
   41b9c:	28017b16 	blt	r5,zero,4218c <___vfprintf_internal_r+0x1d2c>
   41ba0:	00bfdfc4 	movi	r2,-129
   41ba4:	90a4703a 	and	r18,r18,r2
   41ba8:	003b8906 	br	409d0 <__alt_data_end+0xfffe4610>
   41bac:	d9003617 	ldw	r4,216(sp)
   41bb0:	d9403817 	ldw	r5,224(sp)
   41bb4:	da003d15 	stw	r8,244(sp)
   41bb8:	0046cdc0 	call	46cdc <__fpclassifyd>
   41bbc:	da003d17 	ldw	r8,244(sp)
   41bc0:	1000f026 	beq	r2,zero,41f84 <___vfprintf_internal_r+0x1b24>
   41bc4:	d9002a17 	ldw	r4,168(sp)
   41bc8:	05bff7c4 	movi	r22,-33
   41bcc:	00bfffc4 	movi	r2,-1
   41bd0:	8dac703a 	and	r22,r17,r22
   41bd4:	20820026 	beq	r4,r2,423d8 <___vfprintf_internal_r+0x1f78>
   41bd8:	008011c4 	movi	r2,71
   41bdc:	b081f726 	beq	r22,r2,423bc <___vfprintf_internal_r+0x1f5c>
   41be0:	d9003817 	ldw	r4,224(sp)
   41be4:	90c04014 	ori	r3,r18,256
   41be8:	d8c02c15 	stw	r3,176(sp)
   41bec:	20021516 	blt	r4,zero,42444 <___vfprintf_internal_r+0x1fe4>
   41bf0:	dcc03817 	ldw	r19,224(sp)
   41bf4:	d8002905 	stb	zero,164(sp)
   41bf8:	00801984 	movi	r2,102
   41bfc:	8881f926 	beq	r17,r2,423e4 <___vfprintf_internal_r+0x1f84>
   41c00:	00801184 	movi	r2,70
   41c04:	88821c26 	beq	r17,r2,42478 <___vfprintf_internal_r+0x2018>
   41c08:	00801144 	movi	r2,69
   41c0c:	b081ef26 	beq	r22,r2,423cc <___vfprintf_internal_r+0x1f6c>
   41c10:	d8c02a17 	ldw	r3,168(sp)
   41c14:	d8802104 	addi	r2,sp,132
   41c18:	d8800315 	stw	r2,12(sp)
   41c1c:	d9403617 	ldw	r5,216(sp)
   41c20:	d8802504 	addi	r2,sp,148
   41c24:	d9002d17 	ldw	r4,180(sp)
   41c28:	d8800215 	stw	r2,8(sp)
   41c2c:	d8802604 	addi	r2,sp,152
   41c30:	d8c00015 	stw	r3,0(sp)
   41c34:	d8800115 	stw	r2,4(sp)
   41c38:	01c00084 	movi	r7,2
   41c3c:	980d883a 	mov	r6,r19
   41c40:	d8c03c15 	stw	r3,240(sp)
   41c44:	da003d15 	stw	r8,244(sp)
   41c48:	0042b900 	call	42b90 <_dtoa_r>
   41c4c:	1021883a 	mov	r16,r2
   41c50:	008019c4 	movi	r2,103
   41c54:	d8c03c17 	ldw	r3,240(sp)
   41c58:	da003d17 	ldw	r8,244(sp)
   41c5c:	88817126 	beq	r17,r2,42224 <___vfprintf_internal_r+0x1dc4>
   41c60:	008011c4 	movi	r2,71
   41c64:	88829126 	beq	r17,r2,426ac <___vfprintf_internal_r+0x224c>
   41c68:	80f9883a 	add	fp,r16,r3
   41c6c:	d9003617 	ldw	r4,216(sp)
   41c70:	000d883a 	mov	r6,zero
   41c74:	000f883a 	mov	r7,zero
   41c78:	980b883a 	mov	r5,r19
   41c7c:	da003d15 	stw	r8,244(sp)
   41c80:	004bc380 	call	4bc38 <__eqdf2>
   41c84:	da003d17 	ldw	r8,244(sp)
   41c88:	10018d26 	beq	r2,zero,422c0 <___vfprintf_internal_r+0x1e60>
   41c8c:	d8802117 	ldw	r2,132(sp)
   41c90:	1700062e 	bgeu	r2,fp,41cac <___vfprintf_internal_r+0x184c>
   41c94:	01000c04 	movi	r4,48
   41c98:	10c00044 	addi	r3,r2,1
   41c9c:	d8c02115 	stw	r3,132(sp)
   41ca0:	11000005 	stb	r4,0(r2)
   41ca4:	d8802117 	ldw	r2,132(sp)
   41ca8:	173ffb36 	bltu	r2,fp,41c98 <__alt_data_end+0xfffe58d8>
   41cac:	1405c83a 	sub	r2,r2,r16
   41cb0:	d8803315 	stw	r2,204(sp)
   41cb4:	008011c4 	movi	r2,71
   41cb8:	b0817626 	beq	r22,r2,42294 <___vfprintf_internal_r+0x1e34>
   41cbc:	00801944 	movi	r2,101
   41cc0:	1442800e 	bge	r2,r17,426c4 <___vfprintf_internal_r+0x2264>
   41cc4:	d8c02617 	ldw	r3,152(sp)
   41cc8:	00801984 	movi	r2,102
   41ccc:	d8c03215 	stw	r3,200(sp)
   41cd0:	8881fe26 	beq	r17,r2,424cc <___vfprintf_internal_r+0x206c>
   41cd4:	d8c03217 	ldw	r3,200(sp)
   41cd8:	d9003317 	ldw	r4,204(sp)
   41cdc:	1901dd16 	blt	r3,r4,42454 <___vfprintf_internal_r+0x1ff4>
   41ce0:	9480004c 	andi	r18,r18,1
   41ce4:	90022b1e 	bne	r18,zero,42594 <___vfprintf_internal_r+0x2134>
   41ce8:	1805883a 	mov	r2,r3
   41cec:	18028316 	blt	r3,zero,426fc <___vfprintf_internal_r+0x229c>
   41cf0:	d8c03217 	ldw	r3,200(sp)
   41cf4:	044019c4 	movi	r17,103
   41cf8:	d8c02b15 	stw	r3,172(sp)
   41cfc:	df002907 	ldb	fp,164(sp)
   41d00:	e001531e 	bne	fp,zero,42250 <___vfprintf_internal_r+0x1df0>
   41d04:	df002783 	ldbu	fp,158(sp)
   41d08:	d8802915 	stw	r2,164(sp)
   41d0c:	dc802c17 	ldw	r18,176(sp)
   41d10:	d8002a15 	stw	zero,168(sp)
   41d14:	003baf06 	br	40bd4 <__alt_data_end+0xfffe4814>
   41d18:	d8c02e17 	ldw	r3,184(sp)
   41d1c:	d9002e17 	ldw	r4,184(sp)
   41d20:	d9402e17 	ldw	r5,184(sp)
   41d24:	18c00017 	ldw	r3,0(r3)
   41d28:	21000117 	ldw	r4,4(r4)
   41d2c:	29400204 	addi	r5,r5,8
   41d30:	d8c03615 	stw	r3,216(sp)
   41d34:	d9003815 	stw	r4,224(sp)
   41d38:	d9402e15 	stw	r5,184(sp)
   41d3c:	003b5006 	br	40a80 <__alt_data_end+0xfffe46c0>
   41d40:	ac400007 	ldb	r17,0(r21)
   41d44:	003a2806 	br	405e8 <__alt_data_end+0xfffe4228>
   41d48:	9080100c 	andi	r2,r18,64
   41d4c:	1000a826 	beq	r2,zero,41ff0 <___vfprintf_internal_r+0x1b90>
   41d50:	d8c02e17 	ldw	r3,184(sp)
   41d54:	002d883a 	mov	r22,zero
   41d58:	1cc0000b 	ldhu	r19,0(r3)
   41d5c:	18c00104 	addi	r3,r3,4
   41d60:	d8c02e15 	stw	r3,184(sp)
   41d64:	003caf06 	br	41024 <__alt_data_end+0xfffe4c64>
   41d68:	d9002e17 	ldw	r4,184(sp)
   41d6c:	d9402a17 	ldw	r5,168(sp)
   41d70:	002d883a 	mov	r22,zero
   41d74:	20800104 	addi	r2,r4,4
   41d78:	24c00017 	ldw	r19,0(r4)
   41d7c:	283ebb0e 	bge	r5,zero,4186c <__alt_data_end+0xfffe54ac>
   41d80:	003ef106 	br	41948 <__alt_data_end+0xfffe5588>
   41d84:	9080040c 	andi	r2,r18,16
   41d88:	1000921e 	bne	r2,zero,41fd4 <___vfprintf_internal_r+0x1b74>
   41d8c:	9480100c 	andi	r18,r18,64
   41d90:	90013926 	beq	r18,zero,42278 <___vfprintf_internal_r+0x1e18>
   41d94:	d9402e17 	ldw	r5,184(sp)
   41d98:	d8c02f17 	ldw	r3,188(sp)
   41d9c:	28800017 	ldw	r2,0(r5)
   41da0:	29400104 	addi	r5,r5,4
   41da4:	d9402e15 	stw	r5,184(sp)
   41da8:	10c0000d 	sth	r3,0(r2)
   41dac:	0039e406 	br	40540 <__alt_data_end+0xfffe4180>
   41db0:	9080100c 	andi	r2,r18,64
   41db4:	10008026 	beq	r2,zero,41fb8 <___vfprintf_internal_r+0x1b58>
   41db8:	d8802e17 	ldw	r2,184(sp)
   41dbc:	14c0000f 	ldh	r19,0(r2)
   41dc0:	10800104 	addi	r2,r2,4
   41dc4:	d8802e15 	stw	r2,184(sp)
   41dc8:	982dd7fa 	srai	r22,r19,31
   41dcc:	b005883a 	mov	r2,r22
   41dd0:	003af706 	br	409b0 <__alt_data_end+0xfffe45f0>
   41dd4:	9080100c 	andi	r2,r18,64
   41dd8:	d8002785 	stb	zero,158(sp)
   41ddc:	10008a1e 	bne	r2,zero,42008 <___vfprintf_internal_r+0x1ba8>
   41de0:	d9002e17 	ldw	r4,184(sp)
   41de4:	d9402a17 	ldw	r5,168(sp)
   41de8:	002d883a 	mov	r22,zero
   41dec:	20800104 	addi	r2,r4,4
   41df0:	24c00017 	ldw	r19,0(r4)
   41df4:	283e4b0e 	bge	r5,zero,41724 <__alt_data_end+0xfffe5364>
   41df8:	9d86b03a 	or	r3,r19,r22
   41dfc:	d8802e15 	stw	r2,184(sp)
   41e00:	183e4c1e 	bne	r3,zero,41734 <__alt_data_end+0xfffe5374>
   41e04:	0039883a 	mov	fp,zero
   41e08:	0005883a 	mov	r2,zero
   41e0c:	003d4006 	br	41310 <__alt_data_end+0xfffe4f50>
   41e10:	01400174 	movhi	r5,5
   41e14:	297e5284 	addi	r5,r5,-1718
   41e18:	d9402c15 	stw	r5,176(sp)
   41e1c:	d9402c17 	ldw	r5,176(sp)
   41e20:	1c47883a 	add	r3,r3,r17
   41e24:	10800044 	addi	r2,r2,1
   41e28:	41400015 	stw	r5,0(r8)
   41e2c:	44400115 	stw	r17,4(r8)
   41e30:	d8c02015 	stw	r3,128(sp)
   41e34:	d8801f15 	stw	r2,124(sp)
   41e38:	010001c4 	movi	r4,7
   41e3c:	20bec816 	blt	r4,r2,41960 <__alt_data_end+0xfffe55a0>
   41e40:	42000204 	addi	r8,r8,8
   41e44:	003ecd06 	br	4197c <__alt_data_end+0xfffe55bc>
   41e48:	d9002a17 	ldw	r4,168(sp)
   41e4c:	d8002785 	stb	zero,158(sp)
   41e50:	203d2d16 	blt	r4,zero,41308 <__alt_data_end+0xfffe4f48>
   41e54:	00bfdfc4 	movi	r2,-129
   41e58:	90a4703a 	and	r18,r18,r2
   41e5c:	003a6106 	br	407e4 <__alt_data_end+0xfffe4424>
   41e60:	01000174 	movhi	r4,5
   41e64:	213e5284 	addi	r4,r4,-1718
   41e68:	d9002c15 	stw	r4,176(sp)
   41e6c:	003bea06 	br	40e18 <__alt_data_end+0xfffe4a58>
   41e70:	d9002d17 	ldw	r4,180(sp)
   41e74:	d9801e04 	addi	r6,sp,120
   41e78:	b80b883a 	mov	r5,r23
   41e7c:	00471500 	call	47150 <__sprint_r>
   41e80:	103a7b1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41e84:	d8c02017 	ldw	r3,128(sp)
   41e88:	da000404 	addi	r8,sp,16
   41e8c:	003d4106 	br	41394 <__alt_data_end+0xfffe4fd4>
   41e90:	d8801f17 	ldw	r2,124(sp)
   41e94:	01400174 	movhi	r5,5
   41e98:	01000044 	movi	r4,1
   41e9c:	18c00044 	addi	r3,r3,1
   41ea0:	10800044 	addi	r2,r2,1
   41ea4:	297e5204 	addi	r5,r5,-1720
   41ea8:	41000115 	stw	r4,4(r8)
   41eac:	41400015 	stw	r5,0(r8)
   41eb0:	d8c02015 	stw	r3,128(sp)
   41eb4:	d8801f15 	stw	r2,124(sp)
   41eb8:	010001c4 	movi	r4,7
   41ebc:	20805c16 	blt	r4,r2,42030 <___vfprintf_internal_r+0x1bd0>
   41ec0:	42000204 	addi	r8,r8,8
   41ec4:	8800041e 	bne	r17,zero,41ed8 <___vfprintf_internal_r+0x1a78>
   41ec8:	d8803317 	ldw	r2,204(sp)
   41ecc:	1000021e 	bne	r2,zero,41ed8 <___vfprintf_internal_r+0x1a78>
   41ed0:	9080004c 	andi	r2,r18,1
   41ed4:	103be726 	beq	r2,zero,40e74 <__alt_data_end+0xfffe4ab4>
   41ed8:	d9003717 	ldw	r4,220(sp)
   41edc:	d8801f17 	ldw	r2,124(sp)
   41ee0:	d9403417 	ldw	r5,208(sp)
   41ee4:	20c7883a 	add	r3,r4,r3
   41ee8:	10800044 	addi	r2,r2,1
   41eec:	41000115 	stw	r4,4(r8)
   41ef0:	41400015 	stw	r5,0(r8)
   41ef4:	d8c02015 	stw	r3,128(sp)
   41ef8:	d8801f15 	stw	r2,124(sp)
   41efc:	010001c4 	movi	r4,7
   41f00:	20812116 	blt	r4,r2,42388 <___vfprintf_internal_r+0x1f28>
   41f04:	42000204 	addi	r8,r8,8
   41f08:	0463c83a 	sub	r17,zero,r17
   41f0c:	0440730e 	bge	zero,r17,420dc <___vfprintf_internal_r+0x1c7c>
   41f10:	05800404 	movi	r22,16
   41f14:	b440860e 	bge	r22,r17,42130 <___vfprintf_internal_r+0x1cd0>
   41f18:	01400174 	movhi	r5,5
   41f1c:	297e5284 	addi	r5,r5,-1718
   41f20:	d9402c15 	stw	r5,176(sp)
   41f24:	070001c4 	movi	fp,7
   41f28:	dcc02d17 	ldw	r19,180(sp)
   41f2c:	00000306 	br	41f3c <___vfprintf_internal_r+0x1adc>
   41f30:	42000204 	addi	r8,r8,8
   41f34:	8c7ffc04 	addi	r17,r17,-16
   41f38:	b440800e 	bge	r22,r17,4213c <___vfprintf_internal_r+0x1cdc>
   41f3c:	18c00404 	addi	r3,r3,16
   41f40:	10800044 	addi	r2,r2,1
   41f44:	45000015 	stw	r20,0(r8)
   41f48:	45800115 	stw	r22,4(r8)
   41f4c:	d8c02015 	stw	r3,128(sp)
   41f50:	d8801f15 	stw	r2,124(sp)
   41f54:	e0bff60e 	bge	fp,r2,41f30 <__alt_data_end+0xfffe5b70>
   41f58:	d9801e04 	addi	r6,sp,120
   41f5c:	b80b883a 	mov	r5,r23
   41f60:	9809883a 	mov	r4,r19
   41f64:	00471500 	call	47150 <__sprint_r>
   41f68:	103a411e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   41f6c:	d8c02017 	ldw	r3,128(sp)
   41f70:	d8801f17 	ldw	r2,124(sp)
   41f74:	da000404 	addi	r8,sp,16
   41f78:	003fee06 	br	41f34 <__alt_data_end+0xfffe5b74>
   41f7c:	00bfffc4 	movi	r2,-1
   41f80:	003a3f06 	br	40880 <__alt_data_end+0xfffe44c0>
   41f84:	008011c4 	movi	r2,71
   41f88:	1440b816 	blt	r2,r17,4226c <___vfprintf_internal_r+0x1e0c>
   41f8c:	04000174 	movhi	r16,5
   41f90:	843e4404 	addi	r16,r16,-1776
   41f94:	00c000c4 	movi	r3,3
   41f98:	00bfdfc4 	movi	r2,-129
   41f9c:	d8c02915 	stw	r3,164(sp)
   41fa0:	90a4703a 	and	r18,r18,r2
   41fa4:	df002783 	ldbu	fp,158(sp)
   41fa8:	d8c02b15 	stw	r3,172(sp)
   41fac:	d8002a15 	stw	zero,168(sp)
   41fb0:	d8003215 	stw	zero,200(sp)
   41fb4:	003b0706 	br	40bd4 <__alt_data_end+0xfffe4814>
   41fb8:	d8c02e17 	ldw	r3,184(sp)
   41fbc:	1cc00017 	ldw	r19,0(r3)
   41fc0:	18c00104 	addi	r3,r3,4
   41fc4:	d8c02e15 	stw	r3,184(sp)
   41fc8:	982dd7fa 	srai	r22,r19,31
   41fcc:	b005883a 	mov	r2,r22
   41fd0:	003a7706 	br	409b0 <__alt_data_end+0xfffe45f0>
   41fd4:	d8c02e17 	ldw	r3,184(sp)
   41fd8:	d9002f17 	ldw	r4,188(sp)
   41fdc:	18800017 	ldw	r2,0(r3)
   41fe0:	18c00104 	addi	r3,r3,4
   41fe4:	d8c02e15 	stw	r3,184(sp)
   41fe8:	11000015 	stw	r4,0(r2)
   41fec:	00395406 	br	40540 <__alt_data_end+0xfffe4180>
   41ff0:	d9002e17 	ldw	r4,184(sp)
   41ff4:	002d883a 	mov	r22,zero
   41ff8:	24c00017 	ldw	r19,0(r4)
   41ffc:	21000104 	addi	r4,r4,4
   42000:	d9002e15 	stw	r4,184(sp)
   42004:	003c0706 	br	41024 <__alt_data_end+0xfffe4c64>
   42008:	d9402e17 	ldw	r5,184(sp)
   4200c:	d8c02a17 	ldw	r3,168(sp)
   42010:	002d883a 	mov	r22,zero
   42014:	28800104 	addi	r2,r5,4
   42018:	2cc0000b 	ldhu	r19,0(r5)
   4201c:	183dc10e 	bge	r3,zero,41724 <__alt_data_end+0xfffe5364>
   42020:	003f7506 	br	41df8 <__alt_data_end+0xfffe5a38>
   42024:	04000174 	movhi	r16,5
   42028:	843e4204 	addi	r16,r16,-1784
   4202c:	003aa706 	br	40acc <__alt_data_end+0xfffe470c>
   42030:	d9002d17 	ldw	r4,180(sp)
   42034:	d9801e04 	addi	r6,sp,120
   42038:	b80b883a 	mov	r5,r23
   4203c:	00471500 	call	47150 <__sprint_r>
   42040:	103a0b1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   42044:	dc402617 	ldw	r17,152(sp)
   42048:	d8c02017 	ldw	r3,128(sp)
   4204c:	da000404 	addi	r8,sp,16
   42050:	003f9c06 	br	41ec4 <__alt_data_end+0xfffe5b04>
   42054:	ac400043 	ldbu	r17,1(r21)
   42058:	84000814 	ori	r16,r16,32
   4205c:	ad400044 	addi	r21,r21,1
   42060:	8c403fcc 	andi	r17,r17,255
   42064:	8c40201c 	xori	r17,r17,128
   42068:	8c7fe004 	addi	r17,r17,-128
   4206c:	00395e06 	br	405e8 <__alt_data_end+0xfffe4228>
   42070:	d8c02e15 	stw	r3,184(sp)
   42074:	0039883a 	mov	fp,zero
   42078:	003e3506 	br	41950 <__alt_data_end+0xfffe5590>
   4207c:	d9002d17 	ldw	r4,180(sp)
   42080:	d9801e04 	addi	r6,sp,120
   42084:	b80b883a 	mov	r5,r23
   42088:	00471500 	call	47150 <__sprint_r>
   4208c:	1039f81e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   42090:	d8c02017 	ldw	r3,128(sp)
   42094:	da000404 	addi	r8,sp,16
   42098:	003cd006 	br	413dc <__alt_data_end+0xfffe501c>
   4209c:	8009883a 	mov	r4,r16
   420a0:	df003d15 	stw	fp,244(sp)
   420a4:	0046fbc0 	call	46fbc <strlen>
   420a8:	d8802b15 	stw	r2,172(sp)
   420ac:	da003d17 	ldw	r8,244(sp)
   420b0:	103c200e 	bge	r2,zero,41134 <__alt_data_end+0xfffe4d74>
   420b4:	0005883a 	mov	r2,zero
   420b8:	003c1e06 	br	41134 <__alt_data_end+0xfffe4d74>
   420bc:	d9002d17 	ldw	r4,180(sp)
   420c0:	d9801e04 	addi	r6,sp,120
   420c4:	b80b883a 	mov	r5,r23
   420c8:	00471500 	call	47150 <__sprint_r>
   420cc:	1039e81e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   420d0:	d8c02017 	ldw	r3,128(sp)
   420d4:	d8801f17 	ldw	r2,124(sp)
   420d8:	da000404 	addi	r8,sp,16
   420dc:	d9403317 	ldw	r5,204(sp)
   420e0:	10800044 	addi	r2,r2,1
   420e4:	44000015 	stw	r16,0(r8)
   420e8:	28c7883a 	add	r3,r5,r3
   420ec:	003b5b06 	br	40e5c <__alt_data_end+0xfffe4a9c>
   420f0:	01000174 	movhi	r4,5
   420f4:	213e5684 	addi	r4,r4,-1702
   420f8:	d9003515 	stw	r4,212(sp)
   420fc:	003af206 	br	40cc8 <__alt_data_end+0xfffe4908>
   42100:	013fffc4 	movi	r4,-1
   42104:	003a0806 	br	40928 <__alt_data_end+0xfffe4568>
   42108:	0023883a 	mov	r17,zero
   4210c:	003d9d06 	br	41784 <__alt_data_end+0xfffe53c4>
   42110:	d9002d17 	ldw	r4,180(sp)
   42114:	d9801e04 	addi	r6,sp,120
   42118:	b80b883a 	mov	r5,r23
   4211c:	00471500 	call	47150 <__sprint_r>
   42120:	1039d31e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   42124:	d8c02017 	ldw	r3,128(sp)
   42128:	da000404 	addi	r8,sp,16
   4212c:	003d9406 	br	41780 <__alt_data_end+0xfffe53c0>
   42130:	01000174 	movhi	r4,5
   42134:	213e5284 	addi	r4,r4,-1718
   42138:	d9002c15 	stw	r4,176(sp)
   4213c:	d9002c17 	ldw	r4,176(sp)
   42140:	1c47883a 	add	r3,r3,r17
   42144:	10800044 	addi	r2,r2,1
   42148:	41000015 	stw	r4,0(r8)
   4214c:	44400115 	stw	r17,4(r8)
   42150:	d8c02015 	stw	r3,128(sp)
   42154:	d8801f15 	stw	r2,124(sp)
   42158:	010001c4 	movi	r4,7
   4215c:	20bfd716 	blt	r4,r2,420bc <__alt_data_end+0xfffe5cfc>
   42160:	42000204 	addi	r8,r8,8
   42164:	003fdd06 	br	420dc <__alt_data_end+0xfffe5d1c>
   42168:	d9002d17 	ldw	r4,180(sp)
   4216c:	d9801e04 	addi	r6,sp,120
   42170:	b80b883a 	mov	r5,r23
   42174:	00471500 	call	47150 <__sprint_r>
   42178:	1039bd1e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   4217c:	d8802617 	ldw	r2,152(sp)
   42180:	d8c02017 	ldw	r3,128(sp)
   42184:	da000404 	addi	r8,sp,16
   42188:	003e1006 	br	419cc <__alt_data_end+0xfffe560c>
   4218c:	00800044 	movi	r2,1
   42190:	10803fcc 	andi	r2,r2,255
   42194:	00c00044 	movi	r3,1
   42198:	10fa0d26 	beq	r2,r3,409d0 <__alt_data_end+0xfffe4610>
   4219c:	00c00084 	movi	r3,2
   421a0:	10fbaf26 	beq	r2,r3,41060 <__alt_data_end+0xfffe4ca0>
   421a4:	003a6d06 	br	40b5c <__alt_data_end+0xfffe479c>
   421a8:	01000174 	movhi	r4,5
   421ac:	213e5684 	addi	r4,r4,-1702
   421b0:	d9003515 	stw	r4,212(sp)
   421b4:	003b5406 	br	40f08 <__alt_data_end+0xfffe4b48>
   421b8:	d8802a17 	ldw	r2,168(sp)
   421bc:	00c00184 	movi	r3,6
   421c0:	1880012e 	bgeu	r3,r2,421c8 <___vfprintf_internal_r+0x1d68>
   421c4:	1805883a 	mov	r2,r3
   421c8:	d8802b15 	stw	r2,172(sp)
   421cc:	1000ef16 	blt	r2,zero,4258c <___vfprintf_internal_r+0x212c>
   421d0:	04000174 	movhi	r16,5
   421d4:	d8802915 	stw	r2,164(sp)
   421d8:	dcc02e15 	stw	r19,184(sp)
   421dc:	d8002a15 	stw	zero,168(sp)
   421e0:	d8003215 	stw	zero,200(sp)
   421e4:	843e5004 	addi	r16,r16,-1728
   421e8:	0039883a 	mov	fp,zero
   421ec:	003a8006 	br	40bf0 <__alt_data_end+0xfffe4830>
   421f0:	0021883a 	mov	r16,zero
   421f4:	003e0706 	br	41a14 <__alt_data_end+0xfffe5654>
   421f8:	d9002d17 	ldw	r4,180(sp)
   421fc:	d9801e04 	addi	r6,sp,120
   42200:	b80b883a 	mov	r5,r23
   42204:	00471500 	call	47150 <__sprint_r>
   42208:	1039991e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   4220c:	d8802617 	ldw	r2,152(sp)
   42210:	d9403317 	ldw	r5,204(sp)
   42214:	d8c02017 	ldw	r3,128(sp)
   42218:	da000404 	addi	r8,sp,16
   4221c:	2885c83a 	sub	r2,r5,r2
   42220:	003dfb06 	br	41a10 <__alt_data_end+0xfffe5650>
   42224:	9080004c 	andi	r2,r18,1
   42228:	103e8f1e 	bne	r2,zero,41c68 <__alt_data_end+0xfffe58a8>
   4222c:	d8802117 	ldw	r2,132(sp)
   42230:	003e9e06 	br	41cac <__alt_data_end+0xfffe58ec>
   42234:	1025883a 	mov	r18,r2
   42238:	0039883a 	mov	fp,zero
   4223c:	00800084 	movi	r2,2
   42240:	003fd306 	br	42190 <__alt_data_end+0xfffe5dd0>
   42244:	07000b44 	movi	fp,45
   42248:	df002785 	stb	fp,158(sp)
   4224c:	003a1b06 	br	40abc <__alt_data_end+0xfffe46fc>
   42250:	00c00b44 	movi	r3,45
   42254:	d8c02785 	stb	r3,158(sp)
   42258:	d8802915 	stw	r2,164(sp)
   4225c:	dc802c17 	ldw	r18,176(sp)
   42260:	d8002a15 	stw	zero,168(sp)
   42264:	07000b44 	movi	fp,45
   42268:	003a5e06 	br	40be4 <__alt_data_end+0xfffe4824>
   4226c:	04000174 	movhi	r16,5
   42270:	843e4504 	addi	r16,r16,-1772
   42274:	003f4706 	br	41f94 <__alt_data_end+0xfffe5bd4>
   42278:	d9002e17 	ldw	r4,184(sp)
   4227c:	d9402f17 	ldw	r5,188(sp)
   42280:	20800017 	ldw	r2,0(r4)
   42284:	21000104 	addi	r4,r4,4
   42288:	d9002e15 	stw	r4,184(sp)
   4228c:	11400015 	stw	r5,0(r2)
   42290:	0038ab06 	br	40540 <__alt_data_end+0xfffe4180>
   42294:	dd802617 	ldw	r22,152(sp)
   42298:	00bfff44 	movi	r2,-3
   4229c:	b0801c16 	blt	r22,r2,42310 <___vfprintf_internal_r+0x1eb0>
   422a0:	d9402a17 	ldw	r5,168(sp)
   422a4:	2d801a16 	blt	r5,r22,42310 <___vfprintf_internal_r+0x1eb0>
   422a8:	dd803215 	stw	r22,200(sp)
   422ac:	003e8906 	br	41cd4 <__alt_data_end+0xfffe5914>
   422b0:	01000174 	movhi	r4,5
   422b4:	213e5284 	addi	r4,r4,-1718
   422b8:	d9002c15 	stw	r4,176(sp)
   422bc:	003c9106 	br	41504 <__alt_data_end+0xfffe5144>
   422c0:	e005883a 	mov	r2,fp
   422c4:	003e7906 	br	41cac <__alt_data_end+0xfffe58ec>
   422c8:	d9002a17 	ldw	r4,168(sp)
   422cc:	df002783 	ldbu	fp,158(sp)
   422d0:	dcc02e15 	stw	r19,184(sp)
   422d4:	d9002915 	stw	r4,164(sp)
   422d8:	d9002b15 	stw	r4,172(sp)
   422dc:	d8002a15 	stw	zero,168(sp)
   422e0:	d8003215 	stw	zero,200(sp)
   422e4:	003a3b06 	br	40bd4 <__alt_data_end+0xfffe4814>
   422e8:	9080004c 	andi	r2,r18,1
   422ec:	0039883a 	mov	fp,zero
   422f0:	10000426 	beq	r2,zero,42304 <___vfprintf_internal_r+0x1ea4>
   422f4:	00800c04 	movi	r2,48
   422f8:	dc001dc4 	addi	r16,sp,119
   422fc:	d8801dc5 	stb	r2,119(sp)
   42300:	003b6406 	br	41094 <__alt_data_end+0xfffe4cd4>
   42304:	d8002b15 	stw	zero,172(sp)
   42308:	dc001e04 	addi	r16,sp,120
   4230c:	003a2b06 	br	40bbc <__alt_data_end+0xfffe47fc>
   42310:	8c7fff84 	addi	r17,r17,-2
   42314:	b5bfffc4 	addi	r22,r22,-1
   42318:	dd802615 	stw	r22,152(sp)
   4231c:	dc4022c5 	stb	r17,139(sp)
   42320:	b000bf16 	blt	r22,zero,42620 <___vfprintf_internal_r+0x21c0>
   42324:	00800ac4 	movi	r2,43
   42328:	d8802305 	stb	r2,140(sp)
   4232c:	00800244 	movi	r2,9
   42330:	15807016 	blt	r2,r22,424f4 <___vfprintf_internal_r+0x2094>
   42334:	00800c04 	movi	r2,48
   42338:	b5800c04 	addi	r22,r22,48
   4233c:	d8802345 	stb	r2,141(sp)
   42340:	dd802385 	stb	r22,142(sp)
   42344:	d88023c4 	addi	r2,sp,143
   42348:	df0022c4 	addi	fp,sp,139
   4234c:	d8c03317 	ldw	r3,204(sp)
   42350:	1739c83a 	sub	fp,r2,fp
   42354:	d9003317 	ldw	r4,204(sp)
   42358:	e0c7883a 	add	r3,fp,r3
   4235c:	df003a15 	stw	fp,232(sp)
   42360:	d8c02b15 	stw	r3,172(sp)
   42364:	00800044 	movi	r2,1
   42368:	1100b30e 	bge	r2,r4,42638 <___vfprintf_internal_r+0x21d8>
   4236c:	d8c02b17 	ldw	r3,172(sp)
   42370:	18c00044 	addi	r3,r3,1
   42374:	d8c02b15 	stw	r3,172(sp)
   42378:	1805883a 	mov	r2,r3
   4237c:	1800ac16 	blt	r3,zero,42630 <___vfprintf_internal_r+0x21d0>
   42380:	d8003215 	stw	zero,200(sp)
   42384:	003e5d06 	br	41cfc <__alt_data_end+0xfffe593c>
   42388:	d9002d17 	ldw	r4,180(sp)
   4238c:	d9801e04 	addi	r6,sp,120
   42390:	b80b883a 	mov	r5,r23
   42394:	00471500 	call	47150 <__sprint_r>
   42398:	1039351e 	bne	r2,zero,40870 <__alt_data_end+0xfffe44b0>
   4239c:	dc402617 	ldw	r17,152(sp)
   423a0:	d8c02017 	ldw	r3,128(sp)
   423a4:	d8801f17 	ldw	r2,124(sp)
   423a8:	da000404 	addi	r8,sp,16
   423ac:	003ed606 	br	41f08 <__alt_data_end+0xfffe5b48>
   423b0:	182b883a 	mov	r21,r3
   423b4:	d8002a15 	stw	zero,168(sp)
   423b8:	00388c06 	br	405ec <__alt_data_end+0xfffe422c>
   423bc:	d8802a17 	ldw	r2,168(sp)
   423c0:	103e071e 	bne	r2,zero,41be0 <__alt_data_end+0xfffe5820>
   423c4:	dc002a15 	stw	r16,168(sp)
   423c8:	003e0506 	br	41be0 <__alt_data_end+0xfffe5820>
   423cc:	d9002a17 	ldw	r4,168(sp)
   423d0:	20c00044 	addi	r3,r4,1
   423d4:	003e0f06 	br	41c14 <__alt_data_end+0xfffe5854>
   423d8:	01400184 	movi	r5,6
   423dc:	d9402a15 	stw	r5,168(sp)
   423e0:	003dff06 	br	41be0 <__alt_data_end+0xfffe5820>
   423e4:	d8802104 	addi	r2,sp,132
   423e8:	d8800315 	stw	r2,12(sp)
   423ec:	d8802504 	addi	r2,sp,148
   423f0:	d8800215 	stw	r2,8(sp)
   423f4:	d8802604 	addi	r2,sp,152
   423f8:	d8800115 	stw	r2,4(sp)
   423fc:	d8802a17 	ldw	r2,168(sp)
   42400:	d9403617 	ldw	r5,216(sp)
   42404:	d9002d17 	ldw	r4,180(sp)
   42408:	d8800015 	stw	r2,0(sp)
   4240c:	01c000c4 	movi	r7,3
   42410:	980d883a 	mov	r6,r19
   42414:	da003d15 	stw	r8,244(sp)
   42418:	0042b900 	call	42b90 <_dtoa_r>
   4241c:	d8c02a17 	ldw	r3,168(sp)
   42420:	da003d17 	ldw	r8,244(sp)
   42424:	1021883a 	mov	r16,r2
   42428:	10f9883a 	add	fp,r2,r3
   4242c:	81000007 	ldb	r4,0(r16)
   42430:	00800c04 	movi	r2,48
   42434:	20805e26 	beq	r4,r2,425b0 <___vfprintf_internal_r+0x2150>
   42438:	d8c02617 	ldw	r3,152(sp)
   4243c:	e0f9883a 	add	fp,fp,r3
   42440:	003e0a06 	br	41c6c <__alt_data_end+0xfffe58ac>
   42444:	00c00b44 	movi	r3,45
   42448:	24e0003c 	xorhi	r19,r4,32768
   4244c:	d8c02905 	stb	r3,164(sp)
   42450:	003de906 	br	41bf8 <__alt_data_end+0xfffe5838>
   42454:	d8c03217 	ldw	r3,200(sp)
   42458:	00c07a0e 	bge	zero,r3,42644 <___vfprintf_internal_r+0x21e4>
   4245c:	00800044 	movi	r2,1
   42460:	d9003317 	ldw	r4,204(sp)
   42464:	1105883a 	add	r2,r2,r4
   42468:	d8802b15 	stw	r2,172(sp)
   4246c:	10004e16 	blt	r2,zero,425a8 <___vfprintf_internal_r+0x2148>
   42470:	044019c4 	movi	r17,103
   42474:	003e2106 	br	41cfc <__alt_data_end+0xfffe593c>
   42478:	d9002a17 	ldw	r4,168(sp)
   4247c:	d8802104 	addi	r2,sp,132
   42480:	d8800315 	stw	r2,12(sp)
   42484:	d9000015 	stw	r4,0(sp)
   42488:	d8802504 	addi	r2,sp,148
   4248c:	d9403617 	ldw	r5,216(sp)
   42490:	d9002d17 	ldw	r4,180(sp)
   42494:	d8800215 	stw	r2,8(sp)
   42498:	d8802604 	addi	r2,sp,152
   4249c:	d8800115 	stw	r2,4(sp)
   424a0:	01c000c4 	movi	r7,3
   424a4:	980d883a 	mov	r6,r19
   424a8:	da003d15 	stw	r8,244(sp)
   424ac:	0042b900 	call	42b90 <_dtoa_r>
   424b0:	d8c02a17 	ldw	r3,168(sp)
   424b4:	da003d17 	ldw	r8,244(sp)
   424b8:	1021883a 	mov	r16,r2
   424bc:	00801184 	movi	r2,70
   424c0:	80f9883a 	add	fp,r16,r3
   424c4:	88bfd926 	beq	r17,r2,4242c <__alt_data_end+0xfffe606c>
   424c8:	003de806 	br	41c6c <__alt_data_end+0xfffe58ac>
   424cc:	d9002a17 	ldw	r4,168(sp)
   424d0:	00c04d0e 	bge	zero,r3,42608 <___vfprintf_internal_r+0x21a8>
   424d4:	2000441e 	bne	r4,zero,425e8 <___vfprintf_internal_r+0x2188>
   424d8:	9480004c 	andi	r18,r18,1
   424dc:	9000421e 	bne	r18,zero,425e8 <___vfprintf_internal_r+0x2188>
   424e0:	1805883a 	mov	r2,r3
   424e4:	18006f16 	blt	r3,zero,426a4 <___vfprintf_internal_r+0x2244>
   424e8:	d8c03217 	ldw	r3,200(sp)
   424ec:	d8c02b15 	stw	r3,172(sp)
   424f0:	003e0206 	br	41cfc <__alt_data_end+0xfffe593c>
   424f4:	df0022c4 	addi	fp,sp,139
   424f8:	dc002a15 	stw	r16,168(sp)
   424fc:	4027883a 	mov	r19,r8
   42500:	e021883a 	mov	r16,fp
   42504:	b009883a 	mov	r4,r22
   42508:	01400284 	movi	r5,10
   4250c:	004a8640 	call	4a864 <__modsi3>
   42510:	10800c04 	addi	r2,r2,48
   42514:	843fffc4 	addi	r16,r16,-1
   42518:	b009883a 	mov	r4,r22
   4251c:	01400284 	movi	r5,10
   42520:	80800005 	stb	r2,0(r16)
   42524:	004a7e00 	call	4a7e0 <__divsi3>
   42528:	102d883a 	mov	r22,r2
   4252c:	00800244 	movi	r2,9
   42530:	15bff416 	blt	r2,r22,42504 <__alt_data_end+0xfffe6144>
   42534:	9811883a 	mov	r8,r19
   42538:	b0800c04 	addi	r2,r22,48
   4253c:	8027883a 	mov	r19,r16
   42540:	997fffc4 	addi	r5,r19,-1
   42544:	98bfffc5 	stb	r2,-1(r19)
   42548:	dc002a17 	ldw	r16,168(sp)
   4254c:	2f006d2e 	bgeu	r5,fp,42704 <___vfprintf_internal_r+0x22a4>
   42550:	d9c02384 	addi	r7,sp,142
   42554:	3ccfc83a 	sub	r7,r7,r19
   42558:	d9002344 	addi	r4,sp,141
   4255c:	e1cf883a 	add	r7,fp,r7
   42560:	00000106 	br	42568 <___vfprintf_internal_r+0x2108>
   42564:	28800003 	ldbu	r2,0(r5)
   42568:	20800005 	stb	r2,0(r4)
   4256c:	21000044 	addi	r4,r4,1
   42570:	29400044 	addi	r5,r5,1
   42574:	393ffb1e 	bne	r7,r4,42564 <__alt_data_end+0xfffe61a4>
   42578:	d8802304 	addi	r2,sp,140
   4257c:	14c5c83a 	sub	r2,r2,r19
   42580:	d8c02344 	addi	r3,sp,141
   42584:	1885883a 	add	r2,r3,r2
   42588:	003f7006 	br	4234c <__alt_data_end+0xfffe5f8c>
   4258c:	0005883a 	mov	r2,zero
   42590:	003f0f06 	br	421d0 <__alt_data_end+0xfffe5e10>
   42594:	d8c03217 	ldw	r3,200(sp)
   42598:	18c00044 	addi	r3,r3,1
   4259c:	d8c02b15 	stw	r3,172(sp)
   425a0:	1805883a 	mov	r2,r3
   425a4:	183fb20e 	bge	r3,zero,42470 <__alt_data_end+0xfffe60b0>
   425a8:	0005883a 	mov	r2,zero
   425ac:	003fb006 	br	42470 <__alt_data_end+0xfffe60b0>
   425b0:	d9003617 	ldw	r4,216(sp)
   425b4:	000d883a 	mov	r6,zero
   425b8:	000f883a 	mov	r7,zero
   425bc:	980b883a 	mov	r5,r19
   425c0:	d8c03c15 	stw	r3,240(sp)
   425c4:	da003d15 	stw	r8,244(sp)
   425c8:	004bc380 	call	4bc38 <__eqdf2>
   425cc:	d8c03c17 	ldw	r3,240(sp)
   425d0:	da003d17 	ldw	r8,244(sp)
   425d4:	103f9826 	beq	r2,zero,42438 <__alt_data_end+0xfffe6078>
   425d8:	00800044 	movi	r2,1
   425dc:	10c7c83a 	sub	r3,r2,r3
   425e0:	d8c02615 	stw	r3,152(sp)
   425e4:	003f9506 	br	4243c <__alt_data_end+0xfffe607c>
   425e8:	d9002a17 	ldw	r4,168(sp)
   425ec:	d8c03217 	ldw	r3,200(sp)
   425f0:	20800044 	addi	r2,r4,1
   425f4:	1885883a 	add	r2,r3,r2
   425f8:	d8802b15 	stw	r2,172(sp)
   425fc:	103dbf0e 	bge	r2,zero,41cfc <__alt_data_end+0xfffe593c>
   42600:	0005883a 	mov	r2,zero
   42604:	003dbd06 	br	41cfc <__alt_data_end+0xfffe593c>
   42608:	2000201e 	bne	r4,zero,4268c <___vfprintf_internal_r+0x222c>
   4260c:	9480004c 	andi	r18,r18,1
   42610:	90001e1e 	bne	r18,zero,4268c <___vfprintf_internal_r+0x222c>
   42614:	00800044 	movi	r2,1
   42618:	d8802b15 	stw	r2,172(sp)
   4261c:	003db706 	br	41cfc <__alt_data_end+0xfffe593c>
   42620:	00800b44 	movi	r2,45
   42624:	05adc83a 	sub	r22,zero,r22
   42628:	d8802305 	stb	r2,140(sp)
   4262c:	003f3f06 	br	4232c <__alt_data_end+0xfffe5f6c>
   42630:	0005883a 	mov	r2,zero
   42634:	003f5206 	br	42380 <__alt_data_end+0xfffe5fc0>
   42638:	90a4703a 	and	r18,r18,r2
   4263c:	903f4e26 	beq	r18,zero,42378 <__alt_data_end+0xfffe5fb8>
   42640:	003f4a06 	br	4236c <__alt_data_end+0xfffe5fac>
   42644:	00800084 	movi	r2,2
   42648:	10c5c83a 	sub	r2,r2,r3
   4264c:	003f8406 	br	42460 <__alt_data_end+0xfffe60a0>
   42650:	d9402e17 	ldw	r5,184(sp)
   42654:	d9002e17 	ldw	r4,184(sp)
   42658:	ac400043 	ldbu	r17,1(r21)
   4265c:	29400017 	ldw	r5,0(r5)
   42660:	20800104 	addi	r2,r4,4
   42664:	d8802e15 	stw	r2,184(sp)
   42668:	d9402a15 	stw	r5,168(sp)
   4266c:	182b883a 	mov	r21,r3
   42670:	283e7b0e 	bge	r5,zero,42060 <__alt_data_end+0xfffe5ca0>
   42674:	8c403fcc 	andi	r17,r17,255
   42678:	017fffc4 	movi	r5,-1
   4267c:	8c40201c 	xori	r17,r17,128
   42680:	d9402a15 	stw	r5,168(sp)
   42684:	8c7fe004 	addi	r17,r17,-128
   42688:	0037d706 	br	405e8 <__alt_data_end+0xfffe4228>
   4268c:	d8c02a17 	ldw	r3,168(sp)
   42690:	18c00084 	addi	r3,r3,2
   42694:	d8c02b15 	stw	r3,172(sp)
   42698:	1805883a 	mov	r2,r3
   4269c:	183d970e 	bge	r3,zero,41cfc <__alt_data_end+0xfffe593c>
   426a0:	003fd706 	br	42600 <__alt_data_end+0xfffe6240>
   426a4:	0005883a 	mov	r2,zero
   426a8:	003f8f06 	br	424e8 <__alt_data_end+0xfffe6128>
   426ac:	9080004c 	andi	r2,r18,1
   426b0:	103f821e 	bne	r2,zero,424bc <__alt_data_end+0xfffe60fc>
   426b4:	d8802117 	ldw	r2,132(sp)
   426b8:	1405c83a 	sub	r2,r2,r16
   426bc:	d8803315 	stw	r2,204(sp)
   426c0:	b47ef426 	beq	r22,r17,42294 <__alt_data_end+0xfffe5ed4>
   426c4:	dd802617 	ldw	r22,152(sp)
   426c8:	003f1206 	br	42314 <__alt_data_end+0xfffe5f54>
   426cc:	d8c02b03 	ldbu	r3,172(sp)
   426d0:	d8c02785 	stb	r3,158(sp)
   426d4:	0038df06 	br	40a54 <__alt_data_end+0xfffe4694>
   426d8:	d8c02b03 	ldbu	r3,172(sp)
   426dc:	d8c02785 	stb	r3,158(sp)
   426e0:	0038aa06 	br	4098c <__alt_data_end+0xfffe45cc>
   426e4:	d8c02b03 	ldbu	r3,172(sp)
   426e8:	d8c02785 	stb	r3,158(sp)
   426ec:	003a4306 	br	40ffc <__alt_data_end+0xfffe4c3c>
   426f0:	d8c02b03 	ldbu	r3,172(sp)
   426f4:	d8c02785 	stb	r3,158(sp)
   426f8:	003af506 	br	412d0 <__alt_data_end+0xfffe4f10>
   426fc:	0005883a 	mov	r2,zero
   42700:	003d7b06 	br	41cf0 <__alt_data_end+0xfffe5930>
   42704:	d8802344 	addi	r2,sp,141
   42708:	003f1006 	br	4234c <__alt_data_end+0xfffe5f8c>
   4270c:	d8c02b03 	ldbu	r3,172(sp)
   42710:	d8c02785 	stb	r3,158(sp)
   42714:	0038fd06 	br	40b0c <__alt_data_end+0xfffe474c>
   42718:	d8c02b03 	ldbu	r3,172(sp)
   4271c:	d8c02785 	stb	r3,158(sp)
   42720:	003a9706 	br	41180 <__alt_data_end+0xfffe4dc0>
   42724:	d8c02b03 	ldbu	r3,172(sp)
   42728:	d8c02785 	stb	r3,158(sp)
   4272c:	003a1806 	br	40f90 <__alt_data_end+0xfffe4bd0>
   42730:	d8c02b03 	ldbu	r3,172(sp)
   42734:	d8c02785 	stb	r3,158(sp)
   42738:	003abe06 	br	41234 <__alt_data_end+0xfffe4e74>

0004273c <__vfprintf_internal>:
   4273c:	00800174 	movhi	r2,5
   42740:	1085fb04 	addi	r2,r2,6124
   42744:	300f883a 	mov	r7,r6
   42748:	280d883a 	mov	r6,r5
   4274c:	200b883a 	mov	r5,r4
   42750:	11000017 	ldw	r4,0(r2)
   42754:	00404601 	jmpi	40460 <___vfprintf_internal_r>

00042758 <__sbprintf>:
   42758:	2880030b 	ldhu	r2,12(r5)
   4275c:	2ac01917 	ldw	r11,100(r5)
   42760:	2a80038b 	ldhu	r10,14(r5)
   42764:	2a400717 	ldw	r9,28(r5)
   42768:	2a000917 	ldw	r8,36(r5)
   4276c:	defee204 	addi	sp,sp,-1144
   42770:	00c10004 	movi	r3,1024
   42774:	dc011a15 	stw	r16,1128(sp)
   42778:	10bfff4c 	andi	r2,r2,65533
   4277c:	2821883a 	mov	r16,r5
   42780:	d8cb883a 	add	r5,sp,r3
   42784:	dc811c15 	stw	r18,1136(sp)
   42788:	dc411b15 	stw	r17,1132(sp)
   4278c:	dfc11d15 	stw	ra,1140(sp)
   42790:	2025883a 	mov	r18,r4
   42794:	d881030d 	sth	r2,1036(sp)
   42798:	dac11915 	stw	r11,1124(sp)
   4279c:	da81038d 	sth	r10,1038(sp)
   427a0:	da410715 	stw	r9,1052(sp)
   427a4:	da010915 	stw	r8,1060(sp)
   427a8:	dec10015 	stw	sp,1024(sp)
   427ac:	dec10415 	stw	sp,1040(sp)
   427b0:	d8c10215 	stw	r3,1032(sp)
   427b4:	d8c10515 	stw	r3,1044(sp)
   427b8:	d8010615 	stw	zero,1048(sp)
   427bc:	00404600 	call	40460 <___vfprintf_internal_r>
   427c0:	1023883a 	mov	r17,r2
   427c4:	10000416 	blt	r2,zero,427d8 <__sbprintf+0x80>
   427c8:	d9410004 	addi	r5,sp,1024
   427cc:	9009883a 	mov	r4,r18
   427d0:	00444340 	call	44434 <_fflush_r>
   427d4:	10000d1e 	bne	r2,zero,4280c <__sbprintf+0xb4>
   427d8:	d881030b 	ldhu	r2,1036(sp)
   427dc:	1080100c 	andi	r2,r2,64
   427e0:	10000326 	beq	r2,zero,427f0 <__sbprintf+0x98>
   427e4:	8080030b 	ldhu	r2,12(r16)
   427e8:	10801014 	ori	r2,r2,64
   427ec:	8080030d 	sth	r2,12(r16)
   427f0:	8805883a 	mov	r2,r17
   427f4:	dfc11d17 	ldw	ra,1140(sp)
   427f8:	dc811c17 	ldw	r18,1136(sp)
   427fc:	dc411b17 	ldw	r17,1132(sp)
   42800:	dc011a17 	ldw	r16,1128(sp)
   42804:	dec11e04 	addi	sp,sp,1144
   42808:	f800283a 	ret
   4280c:	047fffc4 	movi	r17,-1
   42810:	003ff106 	br	427d8 <__alt_data_end+0xfffe6418>

00042814 <__swsetup_r>:
   42814:	00800174 	movhi	r2,5
   42818:	defffd04 	addi	sp,sp,-12
   4281c:	1085fb04 	addi	r2,r2,6124
   42820:	dc400115 	stw	r17,4(sp)
   42824:	2023883a 	mov	r17,r4
   42828:	11000017 	ldw	r4,0(r2)
   4282c:	dc000015 	stw	r16,0(sp)
   42830:	dfc00215 	stw	ra,8(sp)
   42834:	2821883a 	mov	r16,r5
   42838:	20000226 	beq	r4,zero,42844 <__swsetup_r+0x30>
   4283c:	20800e17 	ldw	r2,56(r4)
   42840:	10003126 	beq	r2,zero,42908 <__swsetup_r+0xf4>
   42844:	8080030b 	ldhu	r2,12(r16)
   42848:	10c0020c 	andi	r3,r2,8
   4284c:	1009883a 	mov	r4,r2
   42850:	18000f26 	beq	r3,zero,42890 <__swsetup_r+0x7c>
   42854:	80c00417 	ldw	r3,16(r16)
   42858:	18001526 	beq	r3,zero,428b0 <__swsetup_r+0x9c>
   4285c:	1100004c 	andi	r4,r2,1
   42860:	20001c1e 	bne	r4,zero,428d4 <__swsetup_r+0xc0>
   42864:	1080008c 	andi	r2,r2,2
   42868:	1000291e 	bne	r2,zero,42910 <__swsetup_r+0xfc>
   4286c:	80800517 	ldw	r2,20(r16)
   42870:	80800215 	stw	r2,8(r16)
   42874:	18001c26 	beq	r3,zero,428e8 <__swsetup_r+0xd4>
   42878:	0005883a 	mov	r2,zero
   4287c:	dfc00217 	ldw	ra,8(sp)
   42880:	dc400117 	ldw	r17,4(sp)
   42884:	dc000017 	ldw	r16,0(sp)
   42888:	dec00304 	addi	sp,sp,12
   4288c:	f800283a 	ret
   42890:	2080040c 	andi	r2,r4,16
   42894:	10002e26 	beq	r2,zero,42950 <__swsetup_r+0x13c>
   42898:	2080010c 	andi	r2,r4,4
   4289c:	10001e1e 	bne	r2,zero,42918 <__swsetup_r+0x104>
   428a0:	80c00417 	ldw	r3,16(r16)
   428a4:	20800214 	ori	r2,r4,8
   428a8:	8080030d 	sth	r2,12(r16)
   428ac:	183feb1e 	bne	r3,zero,4285c <__alt_data_end+0xfffe649c>
   428b0:	1100a00c 	andi	r4,r2,640
   428b4:	01408004 	movi	r5,512
   428b8:	217fe826 	beq	r4,r5,4285c <__alt_data_end+0xfffe649c>
   428bc:	800b883a 	mov	r5,r16
   428c0:	8809883a 	mov	r4,r17
   428c4:	0044f080 	call	44f08 <__smakebuf_r>
   428c8:	8080030b 	ldhu	r2,12(r16)
   428cc:	80c00417 	ldw	r3,16(r16)
   428d0:	003fe206 	br	4285c <__alt_data_end+0xfffe649c>
   428d4:	80800517 	ldw	r2,20(r16)
   428d8:	80000215 	stw	zero,8(r16)
   428dc:	0085c83a 	sub	r2,zero,r2
   428e0:	80800615 	stw	r2,24(r16)
   428e4:	183fe41e 	bne	r3,zero,42878 <__alt_data_end+0xfffe64b8>
   428e8:	80c0030b 	ldhu	r3,12(r16)
   428ec:	0005883a 	mov	r2,zero
   428f0:	1900200c 	andi	r4,r3,128
   428f4:	203fe126 	beq	r4,zero,4287c <__alt_data_end+0xfffe64bc>
   428f8:	18c01014 	ori	r3,r3,64
   428fc:	80c0030d 	sth	r3,12(r16)
   42900:	00bfffc4 	movi	r2,-1
   42904:	003fdd06 	br	4287c <__alt_data_end+0xfffe64bc>
   42908:	00448200 	call	44820 <__sinit>
   4290c:	003fcd06 	br	42844 <__alt_data_end+0xfffe6484>
   42910:	0005883a 	mov	r2,zero
   42914:	003fd606 	br	42870 <__alt_data_end+0xfffe64b0>
   42918:	81400c17 	ldw	r5,48(r16)
   4291c:	28000626 	beq	r5,zero,42938 <__swsetup_r+0x124>
   42920:	80801004 	addi	r2,r16,64
   42924:	28800326 	beq	r5,r2,42934 <__swsetup_r+0x120>
   42928:	8809883a 	mov	r4,r17
   4292c:	00449940 	call	44994 <_free_r>
   42930:	8100030b 	ldhu	r4,12(r16)
   42934:	80000c15 	stw	zero,48(r16)
   42938:	80c00417 	ldw	r3,16(r16)
   4293c:	00bff6c4 	movi	r2,-37
   42940:	1108703a 	and	r4,r2,r4
   42944:	80000115 	stw	zero,4(r16)
   42948:	80c00015 	stw	r3,0(r16)
   4294c:	003fd506 	br	428a4 <__alt_data_end+0xfffe64e4>
   42950:	00800244 	movi	r2,9
   42954:	88800015 	stw	r2,0(r17)
   42958:	20801014 	ori	r2,r4,64
   4295c:	8080030d 	sth	r2,12(r16)
   42960:	00bfffc4 	movi	r2,-1
   42964:	003fc506 	br	4287c <__alt_data_end+0xfffe64bc>

00042968 <quorem>:
   42968:	defff204 	addi	sp,sp,-56
   4296c:	ddc00b15 	stw	r23,44(sp)
   42970:	20800417 	ldw	r2,16(r4)
   42974:	2dc00417 	ldw	r23,16(r5)
   42978:	dfc00d15 	stw	ra,52(sp)
   4297c:	df000c15 	stw	fp,48(sp)
   42980:	dd800a15 	stw	r22,40(sp)
   42984:	dd400915 	stw	r21,36(sp)
   42988:	dd000815 	stw	r20,32(sp)
   4298c:	dcc00715 	stw	r19,28(sp)
   42990:	dc800615 	stw	r18,24(sp)
   42994:	dc400515 	stw	r17,20(sp)
   42998:	dc000415 	stw	r16,16(sp)
   4299c:	15c07a16 	blt	r2,r23,42b88 <quorem+0x220>
   429a0:	bdffffc4 	addi	r23,r23,-1
   429a4:	bde9883a 	add	r20,r23,r23
   429a8:	28c00504 	addi	r3,r5,20
   429ac:	a529883a 	add	r20,r20,r20
   429b0:	1d39883a 	add	fp,r3,r20
   429b4:	24c00504 	addi	r19,r4,20
   429b8:	d9400215 	stw	r5,8(sp)
   429bc:	9d29883a 	add	r20,r19,r20
   429c0:	e1400017 	ldw	r5,0(fp)
   429c4:	d9000015 	stw	r4,0(sp)
   429c8:	a1000017 	ldw	r4,0(r20)
   429cc:	29400044 	addi	r5,r5,1
   429d0:	d8c00115 	stw	r3,4(sp)
   429d4:	dd000315 	stw	r20,12(sp)
   429d8:	004a8d80 	call	4a8d8 <__udivsi3>
   429dc:	1025883a 	mov	r18,r2
   429e0:	10003026 	beq	r2,zero,42aa4 <quorem+0x13c>
   429e4:	dc400117 	ldw	r17,4(sp)
   429e8:	9829883a 	mov	r20,r19
   429ec:	002d883a 	mov	r22,zero
   429f0:	0021883a 	mov	r16,zero
   429f4:	8d400017 	ldw	r21,0(r17)
   429f8:	900b883a 	mov	r5,r18
   429fc:	8c400104 	addi	r17,r17,4
   42a00:	a93fffcc 	andi	r4,r21,65535
   42a04:	004a9940 	call	4a994 <__mulsi3>
   42a08:	a808d43a 	srli	r4,r21,16
   42a0c:	900b883a 	mov	r5,r18
   42a10:	15ad883a 	add	r22,r2,r22
   42a14:	004a9940 	call	4a994 <__mulsi3>
   42a18:	a1000017 	ldw	r4,0(r20)
   42a1c:	b00cd43a 	srli	r6,r22,16
   42a20:	b0ffffcc 	andi	r3,r22,65535
   42a24:	217fffcc 	andi	r5,r4,65535
   42a28:	2c21883a 	add	r16,r5,r16
   42a2c:	80c7c83a 	sub	r3,r16,r3
   42a30:	2008d43a 	srli	r4,r4,16
   42a34:	1185883a 	add	r2,r2,r6
   42a38:	1821d43a 	srai	r16,r3,16
   42a3c:	117fffcc 	andi	r5,r2,65535
   42a40:	2149c83a 	sub	r4,r4,r5
   42a44:	2421883a 	add	r16,r4,r16
   42a48:	8008943a 	slli	r4,r16,16
   42a4c:	18ffffcc 	andi	r3,r3,65535
   42a50:	102cd43a 	srli	r22,r2,16
   42a54:	20c8b03a 	or	r4,r4,r3
   42a58:	a1000015 	stw	r4,0(r20)
   42a5c:	8021d43a 	srai	r16,r16,16
   42a60:	a5000104 	addi	r20,r20,4
   42a64:	e47fe32e 	bgeu	fp,r17,429f4 <__alt_data_end+0xfffe6634>
   42a68:	d8c00317 	ldw	r3,12(sp)
   42a6c:	18800017 	ldw	r2,0(r3)
   42a70:	10000c1e 	bne	r2,zero,42aa4 <quorem+0x13c>
   42a74:	18bfff04 	addi	r2,r3,-4
   42a78:	9880082e 	bgeu	r19,r2,42a9c <quorem+0x134>
   42a7c:	18ffff17 	ldw	r3,-4(r3)
   42a80:	18000326 	beq	r3,zero,42a90 <quorem+0x128>
   42a84:	00000506 	br	42a9c <quorem+0x134>
   42a88:	10c00017 	ldw	r3,0(r2)
   42a8c:	1800031e 	bne	r3,zero,42a9c <quorem+0x134>
   42a90:	10bfff04 	addi	r2,r2,-4
   42a94:	bdffffc4 	addi	r23,r23,-1
   42a98:	98bffb36 	bltu	r19,r2,42a88 <__alt_data_end+0xfffe66c8>
   42a9c:	d8c00017 	ldw	r3,0(sp)
   42aa0:	1dc00415 	stw	r23,16(r3)
   42aa4:	d9400217 	ldw	r5,8(sp)
   42aa8:	d9000017 	ldw	r4,0(sp)
   42aac:	00465a80 	call	465a8 <__mcmp>
   42ab0:	10002816 	blt	r2,zero,42b54 <quorem+0x1ec>
   42ab4:	dc400117 	ldw	r17,4(sp)
   42ab8:	94800044 	addi	r18,r18,1
   42abc:	980d883a 	mov	r6,r19
   42ac0:	0007883a 	mov	r3,zero
   42ac4:	31000017 	ldw	r4,0(r6)
   42ac8:	89400017 	ldw	r5,0(r17)
   42acc:	31800104 	addi	r6,r6,4
   42ad0:	20bfffcc 	andi	r2,r4,65535
   42ad4:	10c7883a 	add	r3,r2,r3
   42ad8:	28bfffcc 	andi	r2,r5,65535
   42adc:	1885c83a 	sub	r2,r3,r2
   42ae0:	280ad43a 	srli	r5,r5,16
   42ae4:	2008d43a 	srli	r4,r4,16
   42ae8:	1007d43a 	srai	r3,r2,16
   42aec:	10bfffcc 	andi	r2,r2,65535
   42af0:	2149c83a 	sub	r4,r4,r5
   42af4:	20c9883a 	add	r4,r4,r3
   42af8:	200a943a 	slli	r5,r4,16
   42afc:	8c400104 	addi	r17,r17,4
   42b00:	2007d43a 	srai	r3,r4,16
   42b04:	2884b03a 	or	r2,r5,r2
   42b08:	30bfff15 	stw	r2,-4(r6)
   42b0c:	e47fed2e 	bgeu	fp,r17,42ac4 <__alt_data_end+0xfffe6704>
   42b10:	bdc5883a 	add	r2,r23,r23
   42b14:	1085883a 	add	r2,r2,r2
   42b18:	9887883a 	add	r3,r19,r2
   42b1c:	18800017 	ldw	r2,0(r3)
   42b20:	10000c1e 	bne	r2,zero,42b54 <quorem+0x1ec>
   42b24:	18bfff04 	addi	r2,r3,-4
   42b28:	9880082e 	bgeu	r19,r2,42b4c <quorem+0x1e4>
   42b2c:	18ffff17 	ldw	r3,-4(r3)
   42b30:	18000326 	beq	r3,zero,42b40 <quorem+0x1d8>
   42b34:	00000506 	br	42b4c <quorem+0x1e4>
   42b38:	10c00017 	ldw	r3,0(r2)
   42b3c:	1800031e 	bne	r3,zero,42b4c <quorem+0x1e4>
   42b40:	10bfff04 	addi	r2,r2,-4
   42b44:	bdffffc4 	addi	r23,r23,-1
   42b48:	98bffb36 	bltu	r19,r2,42b38 <__alt_data_end+0xfffe6778>
   42b4c:	d8c00017 	ldw	r3,0(sp)
   42b50:	1dc00415 	stw	r23,16(r3)
   42b54:	9005883a 	mov	r2,r18
   42b58:	dfc00d17 	ldw	ra,52(sp)
   42b5c:	df000c17 	ldw	fp,48(sp)
   42b60:	ddc00b17 	ldw	r23,44(sp)
   42b64:	dd800a17 	ldw	r22,40(sp)
   42b68:	dd400917 	ldw	r21,36(sp)
   42b6c:	dd000817 	ldw	r20,32(sp)
   42b70:	dcc00717 	ldw	r19,28(sp)
   42b74:	dc800617 	ldw	r18,24(sp)
   42b78:	dc400517 	ldw	r17,20(sp)
   42b7c:	dc000417 	ldw	r16,16(sp)
   42b80:	dec00e04 	addi	sp,sp,56
   42b84:	f800283a 	ret
   42b88:	0005883a 	mov	r2,zero
   42b8c:	003ff206 	br	42b58 <__alt_data_end+0xfffe6798>

00042b90 <_dtoa_r>:
   42b90:	20801017 	ldw	r2,64(r4)
   42b94:	deffde04 	addi	sp,sp,-136
   42b98:	df002015 	stw	fp,128(sp)
   42b9c:	dcc01b15 	stw	r19,108(sp)
   42ba0:	dc801a15 	stw	r18,104(sp)
   42ba4:	dc401915 	stw	r17,100(sp)
   42ba8:	dc001815 	stw	r16,96(sp)
   42bac:	dfc02115 	stw	ra,132(sp)
   42bb0:	ddc01f15 	stw	r23,124(sp)
   42bb4:	dd801e15 	stw	r22,120(sp)
   42bb8:	dd401d15 	stw	r21,116(sp)
   42bbc:	dd001c15 	stw	r20,112(sp)
   42bc0:	d9c00315 	stw	r7,12(sp)
   42bc4:	2039883a 	mov	fp,r4
   42bc8:	3023883a 	mov	r17,r6
   42bcc:	2825883a 	mov	r18,r5
   42bd0:	dc002417 	ldw	r16,144(sp)
   42bd4:	3027883a 	mov	r19,r6
   42bd8:	10000826 	beq	r2,zero,42bfc <_dtoa_r+0x6c>
   42bdc:	21801117 	ldw	r6,68(r4)
   42be0:	00c00044 	movi	r3,1
   42be4:	100b883a 	mov	r5,r2
   42be8:	1986983a 	sll	r3,r3,r6
   42bec:	11800115 	stw	r6,4(r2)
   42bf0:	10c00215 	stw	r3,8(r2)
   42bf4:	0045ccc0 	call	45ccc <_Bfree>
   42bf8:	e0001015 	stw	zero,64(fp)
   42bfc:	88002e16 	blt	r17,zero,42cb8 <_dtoa_r+0x128>
   42c00:	80000015 	stw	zero,0(r16)
   42c04:	889ffc2c 	andhi	r2,r17,32752
   42c08:	00dffc34 	movhi	r3,32752
   42c0c:	10c01c26 	beq	r2,r3,42c80 <_dtoa_r+0xf0>
   42c10:	000d883a 	mov	r6,zero
   42c14:	000f883a 	mov	r7,zero
   42c18:	9009883a 	mov	r4,r18
   42c1c:	980b883a 	mov	r5,r19
   42c20:	004bc380 	call	4bc38 <__eqdf2>
   42c24:	10002b1e 	bne	r2,zero,42cd4 <_dtoa_r+0x144>
   42c28:	d9c02317 	ldw	r7,140(sp)
   42c2c:	00800044 	movi	r2,1
   42c30:	38800015 	stw	r2,0(r7)
   42c34:	d8802517 	ldw	r2,148(sp)
   42c38:	10019e26 	beq	r2,zero,432b4 <_dtoa_r+0x724>
   42c3c:	d8c02517 	ldw	r3,148(sp)
   42c40:	00800174 	movhi	r2,5
   42c44:	10be5244 	addi	r2,r2,-1719
   42c48:	18800015 	stw	r2,0(r3)
   42c4c:	10bfffc4 	addi	r2,r2,-1
   42c50:	dfc02117 	ldw	ra,132(sp)
   42c54:	df002017 	ldw	fp,128(sp)
   42c58:	ddc01f17 	ldw	r23,124(sp)
   42c5c:	dd801e17 	ldw	r22,120(sp)
   42c60:	dd401d17 	ldw	r21,116(sp)
   42c64:	dd001c17 	ldw	r20,112(sp)
   42c68:	dcc01b17 	ldw	r19,108(sp)
   42c6c:	dc801a17 	ldw	r18,104(sp)
   42c70:	dc401917 	ldw	r17,100(sp)
   42c74:	dc001817 	ldw	r16,96(sp)
   42c78:	dec02204 	addi	sp,sp,136
   42c7c:	f800283a 	ret
   42c80:	d8c02317 	ldw	r3,140(sp)
   42c84:	0089c3c4 	movi	r2,9999
   42c88:	18800015 	stw	r2,0(r3)
   42c8c:	90017726 	beq	r18,zero,4326c <_dtoa_r+0x6dc>
   42c90:	00800174 	movhi	r2,5
   42c94:	10be5e04 	addi	r2,r2,-1672
   42c98:	d9002517 	ldw	r4,148(sp)
   42c9c:	203fec26 	beq	r4,zero,42c50 <__alt_data_end+0xfffe6890>
   42ca0:	10c000c7 	ldb	r3,3(r2)
   42ca4:	1801781e 	bne	r3,zero,43288 <_dtoa_r+0x6f8>
   42ca8:	10c000c4 	addi	r3,r2,3
   42cac:	d9802517 	ldw	r6,148(sp)
   42cb0:	30c00015 	stw	r3,0(r6)
   42cb4:	003fe606 	br	42c50 <__alt_data_end+0xfffe6890>
   42cb8:	04e00034 	movhi	r19,32768
   42cbc:	9cffffc4 	addi	r19,r19,-1
   42cc0:	00800044 	movi	r2,1
   42cc4:	8ce6703a 	and	r19,r17,r19
   42cc8:	80800015 	stw	r2,0(r16)
   42ccc:	9823883a 	mov	r17,r19
   42cd0:	003fcc06 	br	42c04 <__alt_data_end+0xfffe6844>
   42cd4:	d8800204 	addi	r2,sp,8
   42cd8:	d8800015 	stw	r2,0(sp)
   42cdc:	d9c00104 	addi	r7,sp,4
   42ce0:	900b883a 	mov	r5,r18
   42ce4:	980d883a 	mov	r6,r19
   42ce8:	e009883a 	mov	r4,fp
   42cec:	8820d53a 	srli	r16,r17,20
   42cf0:	00469740 	call	46974 <__d2b>
   42cf4:	d8800915 	stw	r2,36(sp)
   42cf8:	8001651e 	bne	r16,zero,43290 <_dtoa_r+0x700>
   42cfc:	dd800217 	ldw	r22,8(sp)
   42d00:	dc000117 	ldw	r16,4(sp)
   42d04:	00800804 	movi	r2,32
   42d08:	b421883a 	add	r16,r22,r16
   42d0c:	80c10c84 	addi	r3,r16,1074
   42d10:	10c2d10e 	bge	r2,r3,43858 <_dtoa_r+0xcc8>
   42d14:	00801004 	movi	r2,64
   42d18:	81010484 	addi	r4,r16,1042
   42d1c:	10c7c83a 	sub	r3,r2,r3
   42d20:	9108d83a 	srl	r4,r18,r4
   42d24:	88e2983a 	sll	r17,r17,r3
   42d28:	2448b03a 	or	r4,r4,r17
   42d2c:	004d1540 	call	4d154 <__floatunsidf>
   42d30:	017f8434 	movhi	r5,65040
   42d34:	01800044 	movi	r6,1
   42d38:	1009883a 	mov	r4,r2
   42d3c:	194b883a 	add	r5,r3,r5
   42d40:	843fffc4 	addi	r16,r16,-1
   42d44:	d9801115 	stw	r6,68(sp)
   42d48:	000d883a 	mov	r6,zero
   42d4c:	01cffe34 	movhi	r7,16376
   42d50:	004c6fc0 	call	4c6fc <__subdf3>
   42d54:	0198dbf4 	movhi	r6,25455
   42d58:	01cff4f4 	movhi	r7,16339
   42d5c:	3190d844 	addi	r6,r6,17249
   42d60:	39e1e9c4 	addi	r7,r7,-30809
   42d64:	1009883a 	mov	r4,r2
   42d68:	180b883a 	mov	r5,r3
   42d6c:	004be900 	call	4be90 <__muldf3>
   42d70:	01a2d874 	movhi	r6,35681
   42d74:	01cff1f4 	movhi	r7,16327
   42d78:	31b22cc4 	addi	r6,r6,-14157
   42d7c:	39e28a04 	addi	r7,r7,-30168
   42d80:	180b883a 	mov	r5,r3
   42d84:	1009883a 	mov	r4,r2
   42d88:	004a9bc0 	call	4a9bc <__adddf3>
   42d8c:	8009883a 	mov	r4,r16
   42d90:	1029883a 	mov	r20,r2
   42d94:	1823883a 	mov	r17,r3
   42d98:	004d0780 	call	4d078 <__floatsidf>
   42d9c:	019427f4 	movhi	r6,20639
   42da0:	01cff4f4 	movhi	r7,16339
   42da4:	319e7ec4 	addi	r6,r6,31227
   42da8:	39d104c4 	addi	r7,r7,17427
   42dac:	1009883a 	mov	r4,r2
   42db0:	180b883a 	mov	r5,r3
   42db4:	004be900 	call	4be90 <__muldf3>
   42db8:	100d883a 	mov	r6,r2
   42dbc:	180f883a 	mov	r7,r3
   42dc0:	a009883a 	mov	r4,r20
   42dc4:	880b883a 	mov	r5,r17
   42dc8:	004a9bc0 	call	4a9bc <__adddf3>
   42dcc:	1009883a 	mov	r4,r2
   42dd0:	180b883a 	mov	r5,r3
   42dd4:	1029883a 	mov	r20,r2
   42dd8:	1823883a 	mov	r17,r3
   42ddc:	004cff80 	call	4cff8 <__fixdfsi>
   42de0:	000d883a 	mov	r6,zero
   42de4:	000f883a 	mov	r7,zero
   42de8:	a009883a 	mov	r4,r20
   42dec:	880b883a 	mov	r5,r17
   42df0:	d8800515 	stw	r2,20(sp)
   42df4:	004bd9c0 	call	4bd9c <__ledf2>
   42df8:	10028716 	blt	r2,zero,43818 <_dtoa_r+0xc88>
   42dfc:	d8c00517 	ldw	r3,20(sp)
   42e00:	00800584 	movi	r2,22
   42e04:	10c27536 	bltu	r2,r3,437dc <_dtoa_r+0xc4c>
   42e08:	180490fa 	slli	r2,r3,3
   42e0c:	00c00174 	movhi	r3,5
   42e10:	18fe7a04 	addi	r3,r3,-1560
   42e14:	1885883a 	add	r2,r3,r2
   42e18:	11000017 	ldw	r4,0(r2)
   42e1c:	11400117 	ldw	r5,4(r2)
   42e20:	900d883a 	mov	r6,r18
   42e24:	980f883a 	mov	r7,r19
   42e28:	004bcc00 	call	4bcc0 <__gedf2>
   42e2c:	00828d0e 	bge	zero,r2,43864 <_dtoa_r+0xcd4>
   42e30:	d9000517 	ldw	r4,20(sp)
   42e34:	d8000e15 	stw	zero,56(sp)
   42e38:	213fffc4 	addi	r4,r4,-1
   42e3c:	d9000515 	stw	r4,20(sp)
   42e40:	b42dc83a 	sub	r22,r22,r16
   42e44:	b5bfffc4 	addi	r22,r22,-1
   42e48:	b0026f16 	blt	r22,zero,43808 <_dtoa_r+0xc78>
   42e4c:	d8000815 	stw	zero,32(sp)
   42e50:	d9c00517 	ldw	r7,20(sp)
   42e54:	38026416 	blt	r7,zero,437e8 <_dtoa_r+0xc58>
   42e58:	b1ed883a 	add	r22,r22,r7
   42e5c:	d9c00d15 	stw	r7,52(sp)
   42e60:	d8000a15 	stw	zero,40(sp)
   42e64:	d9800317 	ldw	r6,12(sp)
   42e68:	00800244 	movi	r2,9
   42e6c:	11811436 	bltu	r2,r6,432c0 <_dtoa_r+0x730>
   42e70:	00800144 	movi	r2,5
   42e74:	1184e10e 	bge	r2,r6,441fc <_dtoa_r+0x166c>
   42e78:	31bfff04 	addi	r6,r6,-4
   42e7c:	d9800315 	stw	r6,12(sp)
   42e80:	0023883a 	mov	r17,zero
   42e84:	d9800317 	ldw	r6,12(sp)
   42e88:	008000c4 	movi	r2,3
   42e8c:	30836726 	beq	r6,r2,43c2c <_dtoa_r+0x109c>
   42e90:	1183410e 	bge	r2,r6,43b98 <_dtoa_r+0x1008>
   42e94:	d9c00317 	ldw	r7,12(sp)
   42e98:	00800104 	movi	r2,4
   42e9c:	38827c26 	beq	r7,r2,43890 <_dtoa_r+0xd00>
   42ea0:	00800144 	movi	r2,5
   42ea4:	3884c41e 	bne	r7,r2,441b8 <_dtoa_r+0x1628>
   42ea8:	00800044 	movi	r2,1
   42eac:	d8800b15 	stw	r2,44(sp)
   42eb0:	d8c00517 	ldw	r3,20(sp)
   42eb4:	d9002217 	ldw	r4,136(sp)
   42eb8:	1907883a 	add	r3,r3,r4
   42ebc:	19800044 	addi	r6,r3,1
   42ec0:	d8c00c15 	stw	r3,48(sp)
   42ec4:	d9800615 	stw	r6,24(sp)
   42ec8:	0183a40e 	bge	zero,r6,43d5c <_dtoa_r+0x11cc>
   42ecc:	d9800617 	ldw	r6,24(sp)
   42ed0:	3021883a 	mov	r16,r6
   42ed4:	e0001115 	stw	zero,68(fp)
   42ed8:	008005c4 	movi	r2,23
   42edc:	1184c92e 	bgeu	r2,r6,44204 <_dtoa_r+0x1674>
   42ee0:	00c00044 	movi	r3,1
   42ee4:	00800104 	movi	r2,4
   42ee8:	1085883a 	add	r2,r2,r2
   42eec:	11000504 	addi	r4,r2,20
   42ef0:	180b883a 	mov	r5,r3
   42ef4:	18c00044 	addi	r3,r3,1
   42ef8:	313ffb2e 	bgeu	r6,r4,42ee8 <__alt_data_end+0xfffe6b28>
   42efc:	e1401115 	stw	r5,68(fp)
   42f00:	e009883a 	mov	r4,fp
   42f04:	0045c240 	call	45c24 <_Balloc>
   42f08:	d8800715 	stw	r2,28(sp)
   42f0c:	e0801015 	stw	r2,64(fp)
   42f10:	00800384 	movi	r2,14
   42f14:	1400f736 	bltu	r2,r16,432f4 <_dtoa_r+0x764>
   42f18:	8800f626 	beq	r17,zero,432f4 <_dtoa_r+0x764>
   42f1c:	d9c00517 	ldw	r7,20(sp)
   42f20:	01c39a0e 	bge	zero,r7,43d8c <_dtoa_r+0x11fc>
   42f24:	388003cc 	andi	r2,r7,15
   42f28:	100490fa 	slli	r2,r2,3
   42f2c:	382bd13a 	srai	r21,r7,4
   42f30:	00c00174 	movhi	r3,5
   42f34:	18fe7a04 	addi	r3,r3,-1560
   42f38:	1885883a 	add	r2,r3,r2
   42f3c:	a8c0040c 	andi	r3,r21,16
   42f40:	12400017 	ldw	r9,0(r2)
   42f44:	12000117 	ldw	r8,4(r2)
   42f48:	18037926 	beq	r3,zero,43d30 <_dtoa_r+0x11a0>
   42f4c:	00800174 	movhi	r2,5
   42f50:	10be7004 	addi	r2,r2,-1600
   42f54:	11800817 	ldw	r6,32(r2)
   42f58:	11c00917 	ldw	r7,36(r2)
   42f5c:	9009883a 	mov	r4,r18
   42f60:	980b883a 	mov	r5,r19
   42f64:	da001715 	stw	r8,92(sp)
   42f68:	da401615 	stw	r9,88(sp)
   42f6c:	004b2680 	call	4b268 <__divdf3>
   42f70:	da001717 	ldw	r8,92(sp)
   42f74:	da401617 	ldw	r9,88(sp)
   42f78:	ad4003cc 	andi	r21,r21,15
   42f7c:	040000c4 	movi	r16,3
   42f80:	1023883a 	mov	r17,r2
   42f84:	1829883a 	mov	r20,r3
   42f88:	a8001126 	beq	r21,zero,42fd0 <_dtoa_r+0x440>
   42f8c:	05c00174 	movhi	r23,5
   42f90:	bdfe7004 	addi	r23,r23,-1600
   42f94:	4805883a 	mov	r2,r9
   42f98:	4007883a 	mov	r3,r8
   42f9c:	a980004c 	andi	r6,r21,1
   42fa0:	1009883a 	mov	r4,r2
   42fa4:	a82bd07a 	srai	r21,r21,1
   42fa8:	180b883a 	mov	r5,r3
   42fac:	30000426 	beq	r6,zero,42fc0 <_dtoa_r+0x430>
   42fb0:	b9800017 	ldw	r6,0(r23)
   42fb4:	b9c00117 	ldw	r7,4(r23)
   42fb8:	84000044 	addi	r16,r16,1
   42fbc:	004be900 	call	4be90 <__muldf3>
   42fc0:	bdc00204 	addi	r23,r23,8
   42fc4:	a83ff51e 	bne	r21,zero,42f9c <__alt_data_end+0xfffe6bdc>
   42fc8:	1013883a 	mov	r9,r2
   42fcc:	1811883a 	mov	r8,r3
   42fd0:	480d883a 	mov	r6,r9
   42fd4:	400f883a 	mov	r7,r8
   42fd8:	8809883a 	mov	r4,r17
   42fdc:	a00b883a 	mov	r5,r20
   42fe0:	004b2680 	call	4b268 <__divdf3>
   42fe4:	d8800f15 	stw	r2,60(sp)
   42fe8:	d8c01015 	stw	r3,64(sp)
   42fec:	d8c00e17 	ldw	r3,56(sp)
   42ff0:	18000626 	beq	r3,zero,4300c <_dtoa_r+0x47c>
   42ff4:	d9000f17 	ldw	r4,60(sp)
   42ff8:	d9401017 	ldw	r5,64(sp)
   42ffc:	000d883a 	mov	r6,zero
   43000:	01cffc34 	movhi	r7,16368
   43004:	004bd9c0 	call	4bd9c <__ledf2>
   43008:	10040b16 	blt	r2,zero,44038 <_dtoa_r+0x14a8>
   4300c:	8009883a 	mov	r4,r16
   43010:	004d0780 	call	4d078 <__floatsidf>
   43014:	d9800f17 	ldw	r6,60(sp)
   43018:	d9c01017 	ldw	r7,64(sp)
   4301c:	1009883a 	mov	r4,r2
   43020:	180b883a 	mov	r5,r3
   43024:	004be900 	call	4be90 <__muldf3>
   43028:	000d883a 	mov	r6,zero
   4302c:	01d00734 	movhi	r7,16412
   43030:	1009883a 	mov	r4,r2
   43034:	180b883a 	mov	r5,r3
   43038:	004a9bc0 	call	4a9bc <__adddf3>
   4303c:	1021883a 	mov	r16,r2
   43040:	d8800617 	ldw	r2,24(sp)
   43044:	047f3034 	movhi	r17,64704
   43048:	1c63883a 	add	r17,r3,r17
   4304c:	10031826 	beq	r2,zero,43cb0 <_dtoa_r+0x1120>
   43050:	d8c00517 	ldw	r3,20(sp)
   43054:	db000617 	ldw	r12,24(sp)
   43058:	d8c01315 	stw	r3,76(sp)
   4305c:	d9000b17 	ldw	r4,44(sp)
   43060:	20038f26 	beq	r4,zero,43ea0 <_dtoa_r+0x1310>
   43064:	60bfffc4 	addi	r2,r12,-1
   43068:	100490fa 	slli	r2,r2,3
   4306c:	00c00174 	movhi	r3,5
   43070:	18fe7a04 	addi	r3,r3,-1560
   43074:	1885883a 	add	r2,r3,r2
   43078:	11800017 	ldw	r6,0(r2)
   4307c:	11c00117 	ldw	r7,4(r2)
   43080:	d8800717 	ldw	r2,28(sp)
   43084:	0009883a 	mov	r4,zero
   43088:	014ff834 	movhi	r5,16352
   4308c:	db001615 	stw	r12,88(sp)
   43090:	15c00044 	addi	r23,r2,1
   43094:	004b2680 	call	4b268 <__divdf3>
   43098:	800d883a 	mov	r6,r16
   4309c:	880f883a 	mov	r7,r17
   430a0:	1009883a 	mov	r4,r2
   430a4:	180b883a 	mov	r5,r3
   430a8:	004c6fc0 	call	4c6fc <__subdf3>
   430ac:	d9401017 	ldw	r5,64(sp)
   430b0:	d9000f17 	ldw	r4,60(sp)
   430b4:	102b883a 	mov	r21,r2
   430b8:	d8c01215 	stw	r3,72(sp)
   430bc:	004cff80 	call	4cff8 <__fixdfsi>
   430c0:	1009883a 	mov	r4,r2
   430c4:	1029883a 	mov	r20,r2
   430c8:	004d0780 	call	4d078 <__floatsidf>
   430cc:	d9000f17 	ldw	r4,60(sp)
   430d0:	d9401017 	ldw	r5,64(sp)
   430d4:	100d883a 	mov	r6,r2
   430d8:	180f883a 	mov	r7,r3
   430dc:	004c6fc0 	call	4c6fc <__subdf3>
   430e0:	1823883a 	mov	r17,r3
   430e4:	d8c00717 	ldw	r3,28(sp)
   430e8:	d9401217 	ldw	r5,72(sp)
   430ec:	a2000c04 	addi	r8,r20,48
   430f0:	1021883a 	mov	r16,r2
   430f4:	1a000005 	stb	r8,0(r3)
   430f8:	800d883a 	mov	r6,r16
   430fc:	880f883a 	mov	r7,r17
   43100:	a809883a 	mov	r4,r21
   43104:	4029883a 	mov	r20,r8
   43108:	004bcc00 	call	4bcc0 <__gedf2>
   4310c:	00841d16 	blt	zero,r2,44184 <_dtoa_r+0x15f4>
   43110:	800d883a 	mov	r6,r16
   43114:	880f883a 	mov	r7,r17
   43118:	0009883a 	mov	r4,zero
   4311c:	014ffc34 	movhi	r5,16368
   43120:	004c6fc0 	call	4c6fc <__subdf3>
   43124:	d9401217 	ldw	r5,72(sp)
   43128:	100d883a 	mov	r6,r2
   4312c:	180f883a 	mov	r7,r3
   43130:	a809883a 	mov	r4,r21
   43134:	004bcc00 	call	4bcc0 <__gedf2>
   43138:	db001617 	ldw	r12,88(sp)
   4313c:	00840e16 	blt	zero,r2,44178 <_dtoa_r+0x15e8>
   43140:	00800044 	movi	r2,1
   43144:	13006b0e 	bge	r2,r12,432f4 <_dtoa_r+0x764>
   43148:	d9000717 	ldw	r4,28(sp)
   4314c:	dd800f15 	stw	r22,60(sp)
   43150:	dcc01015 	stw	r19,64(sp)
   43154:	2319883a 	add	r12,r4,r12
   43158:	dcc01217 	ldw	r19,72(sp)
   4315c:	602d883a 	mov	r22,r12
   43160:	dc801215 	stw	r18,72(sp)
   43164:	b825883a 	mov	r18,r23
   43168:	00000906 	br	43190 <_dtoa_r+0x600>
   4316c:	004c6fc0 	call	4c6fc <__subdf3>
   43170:	a80d883a 	mov	r6,r21
   43174:	980f883a 	mov	r7,r19
   43178:	1009883a 	mov	r4,r2
   4317c:	180b883a 	mov	r5,r3
   43180:	004bd9c0 	call	4bd9c <__ledf2>
   43184:	1003e816 	blt	r2,zero,44128 <_dtoa_r+0x1598>
   43188:	b825883a 	mov	r18,r23
   4318c:	bd83e926 	beq	r23,r22,44134 <_dtoa_r+0x15a4>
   43190:	a809883a 	mov	r4,r21
   43194:	980b883a 	mov	r5,r19
   43198:	000d883a 	mov	r6,zero
   4319c:	01d00934 	movhi	r7,16420
   431a0:	004be900 	call	4be90 <__muldf3>
   431a4:	000d883a 	mov	r6,zero
   431a8:	01d00934 	movhi	r7,16420
   431ac:	8009883a 	mov	r4,r16
   431b0:	880b883a 	mov	r5,r17
   431b4:	102b883a 	mov	r21,r2
   431b8:	1827883a 	mov	r19,r3
   431bc:	004be900 	call	4be90 <__muldf3>
   431c0:	180b883a 	mov	r5,r3
   431c4:	1009883a 	mov	r4,r2
   431c8:	1821883a 	mov	r16,r3
   431cc:	1023883a 	mov	r17,r2
   431d0:	004cff80 	call	4cff8 <__fixdfsi>
   431d4:	1009883a 	mov	r4,r2
   431d8:	1029883a 	mov	r20,r2
   431dc:	004d0780 	call	4d078 <__floatsidf>
   431e0:	8809883a 	mov	r4,r17
   431e4:	800b883a 	mov	r5,r16
   431e8:	100d883a 	mov	r6,r2
   431ec:	180f883a 	mov	r7,r3
   431f0:	004c6fc0 	call	4c6fc <__subdf3>
   431f4:	a5000c04 	addi	r20,r20,48
   431f8:	a80d883a 	mov	r6,r21
   431fc:	980f883a 	mov	r7,r19
   43200:	1009883a 	mov	r4,r2
   43204:	180b883a 	mov	r5,r3
   43208:	95000005 	stb	r20,0(r18)
   4320c:	1021883a 	mov	r16,r2
   43210:	1823883a 	mov	r17,r3
   43214:	004bd9c0 	call	4bd9c <__ledf2>
   43218:	bdc00044 	addi	r23,r23,1
   4321c:	800d883a 	mov	r6,r16
   43220:	880f883a 	mov	r7,r17
   43224:	0009883a 	mov	r4,zero
   43228:	014ffc34 	movhi	r5,16368
   4322c:	103fcf0e 	bge	r2,zero,4316c <__alt_data_end+0xfffe6dac>
   43230:	d8c01317 	ldw	r3,76(sp)
   43234:	d8c00515 	stw	r3,20(sp)
   43238:	d9400917 	ldw	r5,36(sp)
   4323c:	e009883a 	mov	r4,fp
   43240:	0045ccc0 	call	45ccc <_Bfree>
   43244:	d9000517 	ldw	r4,20(sp)
   43248:	d9802317 	ldw	r6,140(sp)
   4324c:	d9c02517 	ldw	r7,148(sp)
   43250:	b8000005 	stb	zero,0(r23)
   43254:	20800044 	addi	r2,r4,1
   43258:	30800015 	stw	r2,0(r6)
   4325c:	3802aa26 	beq	r7,zero,43d08 <_dtoa_r+0x1178>
   43260:	3dc00015 	stw	r23,0(r7)
   43264:	d8800717 	ldw	r2,28(sp)
   43268:	003e7906 	br	42c50 <__alt_data_end+0xfffe6890>
   4326c:	00800434 	movhi	r2,16
   43270:	10bfffc4 	addi	r2,r2,-1
   43274:	88a2703a 	and	r17,r17,r2
   43278:	883e851e 	bne	r17,zero,42c90 <__alt_data_end+0xfffe68d0>
   4327c:	00800174 	movhi	r2,5
   43280:	10be5b04 	addi	r2,r2,-1684
   43284:	003e8406 	br	42c98 <__alt_data_end+0xfffe68d8>
   43288:	10c00204 	addi	r3,r2,8
   4328c:	003e8706 	br	42cac <__alt_data_end+0xfffe68ec>
   43290:	01400434 	movhi	r5,16
   43294:	297fffc4 	addi	r5,r5,-1
   43298:	994a703a 	and	r5,r19,r5
   4329c:	9009883a 	mov	r4,r18
   432a0:	843f0044 	addi	r16,r16,-1023
   432a4:	294ffc34 	orhi	r5,r5,16368
   432a8:	dd800217 	ldw	r22,8(sp)
   432ac:	d8001115 	stw	zero,68(sp)
   432b0:	003ea506 	br	42d48 <__alt_data_end+0xfffe6988>
   432b4:	00800174 	movhi	r2,5
   432b8:	10be5204 	addi	r2,r2,-1720
   432bc:	003e6406 	br	42c50 <__alt_data_end+0xfffe6890>
   432c0:	e0001115 	stw	zero,68(fp)
   432c4:	000b883a 	mov	r5,zero
   432c8:	e009883a 	mov	r4,fp
   432cc:	0045c240 	call	45c24 <_Balloc>
   432d0:	01bfffc4 	movi	r6,-1
   432d4:	01c00044 	movi	r7,1
   432d8:	d8800715 	stw	r2,28(sp)
   432dc:	d9800c15 	stw	r6,48(sp)
   432e0:	e0801015 	stw	r2,64(fp)
   432e4:	d8000315 	stw	zero,12(sp)
   432e8:	d9c00b15 	stw	r7,44(sp)
   432ec:	d9800615 	stw	r6,24(sp)
   432f0:	d8002215 	stw	zero,136(sp)
   432f4:	d8800117 	ldw	r2,4(sp)
   432f8:	10008916 	blt	r2,zero,43520 <_dtoa_r+0x990>
   432fc:	d9000517 	ldw	r4,20(sp)
   43300:	00c00384 	movi	r3,14
   43304:	19008616 	blt	r3,r4,43520 <_dtoa_r+0x990>
   43308:	200490fa 	slli	r2,r4,3
   4330c:	00c00174 	movhi	r3,5
   43310:	d9802217 	ldw	r6,136(sp)
   43314:	18fe7a04 	addi	r3,r3,-1560
   43318:	1885883a 	add	r2,r3,r2
   4331c:	14000017 	ldw	r16,0(r2)
   43320:	14400117 	ldw	r17,4(r2)
   43324:	30016316 	blt	r6,zero,438b4 <_dtoa_r+0xd24>
   43328:	800d883a 	mov	r6,r16
   4332c:	880f883a 	mov	r7,r17
   43330:	9009883a 	mov	r4,r18
   43334:	980b883a 	mov	r5,r19
   43338:	004b2680 	call	4b268 <__divdf3>
   4333c:	180b883a 	mov	r5,r3
   43340:	1009883a 	mov	r4,r2
   43344:	004cff80 	call	4cff8 <__fixdfsi>
   43348:	1009883a 	mov	r4,r2
   4334c:	102b883a 	mov	r21,r2
   43350:	004d0780 	call	4d078 <__floatsidf>
   43354:	800d883a 	mov	r6,r16
   43358:	880f883a 	mov	r7,r17
   4335c:	1009883a 	mov	r4,r2
   43360:	180b883a 	mov	r5,r3
   43364:	004be900 	call	4be90 <__muldf3>
   43368:	100d883a 	mov	r6,r2
   4336c:	180f883a 	mov	r7,r3
   43370:	9009883a 	mov	r4,r18
   43374:	980b883a 	mov	r5,r19
   43378:	004c6fc0 	call	4c6fc <__subdf3>
   4337c:	d9c00717 	ldw	r7,28(sp)
   43380:	1009883a 	mov	r4,r2
   43384:	a8800c04 	addi	r2,r21,48
   43388:	38800005 	stb	r2,0(r7)
   4338c:	3dc00044 	addi	r23,r7,1
   43390:	d9c00617 	ldw	r7,24(sp)
   43394:	01800044 	movi	r6,1
   43398:	180b883a 	mov	r5,r3
   4339c:	2005883a 	mov	r2,r4
   433a0:	39803826 	beq	r7,r6,43484 <_dtoa_r+0x8f4>
   433a4:	000d883a 	mov	r6,zero
   433a8:	01d00934 	movhi	r7,16420
   433ac:	004be900 	call	4be90 <__muldf3>
   433b0:	000d883a 	mov	r6,zero
   433b4:	000f883a 	mov	r7,zero
   433b8:	1009883a 	mov	r4,r2
   433bc:	180b883a 	mov	r5,r3
   433c0:	1025883a 	mov	r18,r2
   433c4:	1827883a 	mov	r19,r3
   433c8:	004bc380 	call	4bc38 <__eqdf2>
   433cc:	103f9a26 	beq	r2,zero,43238 <__alt_data_end+0xfffe6e78>
   433d0:	d9c00617 	ldw	r7,24(sp)
   433d4:	d8c00717 	ldw	r3,28(sp)
   433d8:	b829883a 	mov	r20,r23
   433dc:	38bfffc4 	addi	r2,r7,-1
   433e0:	18ad883a 	add	r22,r3,r2
   433e4:	00000a06 	br	43410 <_dtoa_r+0x880>
   433e8:	004be900 	call	4be90 <__muldf3>
   433ec:	000d883a 	mov	r6,zero
   433f0:	000f883a 	mov	r7,zero
   433f4:	1009883a 	mov	r4,r2
   433f8:	180b883a 	mov	r5,r3
   433fc:	1025883a 	mov	r18,r2
   43400:	1827883a 	mov	r19,r3
   43404:	b829883a 	mov	r20,r23
   43408:	004bc380 	call	4bc38 <__eqdf2>
   4340c:	103f8a26 	beq	r2,zero,43238 <__alt_data_end+0xfffe6e78>
   43410:	800d883a 	mov	r6,r16
   43414:	880f883a 	mov	r7,r17
   43418:	9009883a 	mov	r4,r18
   4341c:	980b883a 	mov	r5,r19
   43420:	004b2680 	call	4b268 <__divdf3>
   43424:	180b883a 	mov	r5,r3
   43428:	1009883a 	mov	r4,r2
   4342c:	004cff80 	call	4cff8 <__fixdfsi>
   43430:	1009883a 	mov	r4,r2
   43434:	102b883a 	mov	r21,r2
   43438:	004d0780 	call	4d078 <__floatsidf>
   4343c:	800d883a 	mov	r6,r16
   43440:	880f883a 	mov	r7,r17
   43444:	1009883a 	mov	r4,r2
   43448:	180b883a 	mov	r5,r3
   4344c:	004be900 	call	4be90 <__muldf3>
   43450:	100d883a 	mov	r6,r2
   43454:	180f883a 	mov	r7,r3
   43458:	9009883a 	mov	r4,r18
   4345c:	980b883a 	mov	r5,r19
   43460:	004c6fc0 	call	4c6fc <__subdf3>
   43464:	aa000c04 	addi	r8,r21,48
   43468:	a2000005 	stb	r8,0(r20)
   4346c:	000d883a 	mov	r6,zero
   43470:	01d00934 	movhi	r7,16420
   43474:	1009883a 	mov	r4,r2
   43478:	180b883a 	mov	r5,r3
   4347c:	a5c00044 	addi	r23,r20,1
   43480:	b53fd91e 	bne	r22,r20,433e8 <__alt_data_end+0xfffe7028>
   43484:	100d883a 	mov	r6,r2
   43488:	180f883a 	mov	r7,r3
   4348c:	1009883a 	mov	r4,r2
   43490:	180b883a 	mov	r5,r3
   43494:	004a9bc0 	call	4a9bc <__adddf3>
   43498:	100d883a 	mov	r6,r2
   4349c:	180f883a 	mov	r7,r3
   434a0:	8009883a 	mov	r4,r16
   434a4:	880b883a 	mov	r5,r17
   434a8:	1027883a 	mov	r19,r2
   434ac:	1825883a 	mov	r18,r3
   434b0:	004bd9c0 	call	4bd9c <__ledf2>
   434b4:	10000816 	blt	r2,zero,434d8 <_dtoa_r+0x948>
   434b8:	980d883a 	mov	r6,r19
   434bc:	900f883a 	mov	r7,r18
   434c0:	8009883a 	mov	r4,r16
   434c4:	880b883a 	mov	r5,r17
   434c8:	004bc380 	call	4bc38 <__eqdf2>
   434cc:	103f5a1e 	bne	r2,zero,43238 <__alt_data_end+0xfffe6e78>
   434d0:	ad40004c 	andi	r21,r21,1
   434d4:	a83f5826 	beq	r21,zero,43238 <__alt_data_end+0xfffe6e78>
   434d8:	bd3fffc3 	ldbu	r20,-1(r23)
   434dc:	b8bfffc4 	addi	r2,r23,-1
   434e0:	1007883a 	mov	r3,r2
   434e4:	01400e44 	movi	r5,57
   434e8:	d9800717 	ldw	r6,28(sp)
   434ec:	00000506 	br	43504 <_dtoa_r+0x974>
   434f0:	18ffffc4 	addi	r3,r3,-1
   434f4:	11824726 	beq	r2,r6,43e14 <_dtoa_r+0x1284>
   434f8:	1d000003 	ldbu	r20,0(r3)
   434fc:	102f883a 	mov	r23,r2
   43500:	10bfffc4 	addi	r2,r2,-1
   43504:	a1003fcc 	andi	r4,r20,255
   43508:	2100201c 	xori	r4,r4,128
   4350c:	213fe004 	addi	r4,r4,-128
   43510:	217ff726 	beq	r4,r5,434f0 <__alt_data_end+0xfffe7130>
   43514:	a2000044 	addi	r8,r20,1
   43518:	12000005 	stb	r8,0(r2)
   4351c:	003f4606 	br	43238 <__alt_data_end+0xfffe6e78>
   43520:	d9000b17 	ldw	r4,44(sp)
   43524:	2000c826 	beq	r4,zero,43848 <_dtoa_r+0xcb8>
   43528:	d9800317 	ldw	r6,12(sp)
   4352c:	00c00044 	movi	r3,1
   43530:	1980f90e 	bge	r3,r6,43918 <_dtoa_r+0xd88>
   43534:	d8800617 	ldw	r2,24(sp)
   43538:	d8c00a17 	ldw	r3,40(sp)
   4353c:	157fffc4 	addi	r21,r2,-1
   43540:	1d41f316 	blt	r3,r21,43d10 <_dtoa_r+0x1180>
   43544:	1d6bc83a 	sub	r21,r3,r21
   43548:	d9c00617 	ldw	r7,24(sp)
   4354c:	3802aa16 	blt	r7,zero,43ff8 <_dtoa_r+0x1468>
   43550:	dd000817 	ldw	r20,32(sp)
   43554:	d8800617 	ldw	r2,24(sp)
   43558:	d8c00817 	ldw	r3,32(sp)
   4355c:	01400044 	movi	r5,1
   43560:	e009883a 	mov	r4,fp
   43564:	1887883a 	add	r3,r3,r2
   43568:	d8c00815 	stw	r3,32(sp)
   4356c:	b0ad883a 	add	r22,r22,r2
   43570:	00460580 	call	46058 <__i2b>
   43574:	1023883a 	mov	r17,r2
   43578:	a0000826 	beq	r20,zero,4359c <_dtoa_r+0xa0c>
   4357c:	0580070e 	bge	zero,r22,4359c <_dtoa_r+0xa0c>
   43580:	a005883a 	mov	r2,r20
   43584:	b500b916 	blt	r22,r20,4386c <_dtoa_r+0xcdc>
   43588:	d9000817 	ldw	r4,32(sp)
   4358c:	a0a9c83a 	sub	r20,r20,r2
   43590:	b0adc83a 	sub	r22,r22,r2
   43594:	2089c83a 	sub	r4,r4,r2
   43598:	d9000815 	stw	r4,32(sp)
   4359c:	d9800a17 	ldw	r6,40(sp)
   435a0:	0181810e 	bge	zero,r6,43ba8 <_dtoa_r+0x1018>
   435a4:	d9c00b17 	ldw	r7,44(sp)
   435a8:	3800b326 	beq	r7,zero,43878 <_dtoa_r+0xce8>
   435ac:	a800b226 	beq	r21,zero,43878 <_dtoa_r+0xce8>
   435b0:	880b883a 	mov	r5,r17
   435b4:	a80d883a 	mov	r6,r21
   435b8:	e009883a 	mov	r4,fp
   435bc:	00463200 	call	46320 <__pow5mult>
   435c0:	d9800917 	ldw	r6,36(sp)
   435c4:	100b883a 	mov	r5,r2
   435c8:	e009883a 	mov	r4,fp
   435cc:	1023883a 	mov	r17,r2
   435d0:	00460940 	call	46094 <__multiply>
   435d4:	1021883a 	mov	r16,r2
   435d8:	d8800a17 	ldw	r2,40(sp)
   435dc:	d9400917 	ldw	r5,36(sp)
   435e0:	e009883a 	mov	r4,fp
   435e4:	1545c83a 	sub	r2,r2,r21
   435e8:	d8800a15 	stw	r2,40(sp)
   435ec:	0045ccc0 	call	45ccc <_Bfree>
   435f0:	d8c00a17 	ldw	r3,40(sp)
   435f4:	18009f1e 	bne	r3,zero,43874 <_dtoa_r+0xce4>
   435f8:	05c00044 	movi	r23,1
   435fc:	e009883a 	mov	r4,fp
   43600:	b80b883a 	mov	r5,r23
   43604:	00460580 	call	46058 <__i2b>
   43608:	d9000d17 	ldw	r4,52(sp)
   4360c:	102b883a 	mov	r21,r2
   43610:	2000ce26 	beq	r4,zero,4394c <_dtoa_r+0xdbc>
   43614:	200d883a 	mov	r6,r4
   43618:	100b883a 	mov	r5,r2
   4361c:	e009883a 	mov	r4,fp
   43620:	00463200 	call	46320 <__pow5mult>
   43624:	d9800317 	ldw	r6,12(sp)
   43628:	102b883a 	mov	r21,r2
   4362c:	b981810e 	bge	r23,r6,43c34 <_dtoa_r+0x10a4>
   43630:	0027883a 	mov	r19,zero
   43634:	a8800417 	ldw	r2,16(r21)
   43638:	05c00804 	movi	r23,32
   4363c:	10800104 	addi	r2,r2,4
   43640:	1085883a 	add	r2,r2,r2
   43644:	1085883a 	add	r2,r2,r2
   43648:	a885883a 	add	r2,r21,r2
   4364c:	11000017 	ldw	r4,0(r2)
   43650:	0045f400 	call	45f40 <__hi0bits>
   43654:	b885c83a 	sub	r2,r23,r2
   43658:	1585883a 	add	r2,r2,r22
   4365c:	108007cc 	andi	r2,r2,31
   43660:	1000b326 	beq	r2,zero,43930 <_dtoa_r+0xda0>
   43664:	00c00804 	movi	r3,32
   43668:	1887c83a 	sub	r3,r3,r2
   4366c:	01000104 	movi	r4,4
   43670:	20c2cd0e 	bge	r4,r3,441a8 <_dtoa_r+0x1618>
   43674:	00c00704 	movi	r3,28
   43678:	1885c83a 	sub	r2,r3,r2
   4367c:	d8c00817 	ldw	r3,32(sp)
   43680:	a0a9883a 	add	r20,r20,r2
   43684:	b0ad883a 	add	r22,r22,r2
   43688:	1887883a 	add	r3,r3,r2
   4368c:	d8c00815 	stw	r3,32(sp)
   43690:	d9800817 	ldw	r6,32(sp)
   43694:	0180040e 	bge	zero,r6,436a8 <_dtoa_r+0xb18>
   43698:	800b883a 	mov	r5,r16
   4369c:	e009883a 	mov	r4,fp
   436a0:	00464600 	call	46460 <__lshift>
   436a4:	1021883a 	mov	r16,r2
   436a8:	0580050e 	bge	zero,r22,436c0 <_dtoa_r+0xb30>
   436ac:	a80b883a 	mov	r5,r21
   436b0:	b00d883a 	mov	r6,r22
   436b4:	e009883a 	mov	r4,fp
   436b8:	00464600 	call	46460 <__lshift>
   436bc:	102b883a 	mov	r21,r2
   436c0:	d9c00e17 	ldw	r7,56(sp)
   436c4:	3801211e 	bne	r7,zero,43b4c <_dtoa_r+0xfbc>
   436c8:	d9800617 	ldw	r6,24(sp)
   436cc:	0181380e 	bge	zero,r6,43bb0 <_dtoa_r+0x1020>
   436d0:	d8c00b17 	ldw	r3,44(sp)
   436d4:	1800ab1e 	bne	r3,zero,43984 <_dtoa_r+0xdf4>
   436d8:	dc800717 	ldw	r18,28(sp)
   436dc:	dcc00617 	ldw	r19,24(sp)
   436e0:	9029883a 	mov	r20,r18
   436e4:	00000206 	br	436f0 <_dtoa_r+0xb60>
   436e8:	0045cf40 	call	45cf4 <__multadd>
   436ec:	1021883a 	mov	r16,r2
   436f0:	a80b883a 	mov	r5,r21
   436f4:	8009883a 	mov	r4,r16
   436f8:	00429680 	call	42968 <quorem>
   436fc:	10800c04 	addi	r2,r2,48
   43700:	90800005 	stb	r2,0(r18)
   43704:	94800044 	addi	r18,r18,1
   43708:	9507c83a 	sub	r3,r18,r20
   4370c:	000f883a 	mov	r7,zero
   43710:	01800284 	movi	r6,10
   43714:	800b883a 	mov	r5,r16
   43718:	e009883a 	mov	r4,fp
   4371c:	1cfff216 	blt	r3,r19,436e8 <__alt_data_end+0xfffe7328>
   43720:	1011883a 	mov	r8,r2
   43724:	d8800617 	ldw	r2,24(sp)
   43728:	0082370e 	bge	zero,r2,44008 <_dtoa_r+0x1478>
   4372c:	d9000717 	ldw	r4,28(sp)
   43730:	0025883a 	mov	r18,zero
   43734:	20af883a 	add	r23,r4,r2
   43738:	01800044 	movi	r6,1
   4373c:	800b883a 	mov	r5,r16
   43740:	e009883a 	mov	r4,fp
   43744:	da001715 	stw	r8,92(sp)
   43748:	00464600 	call	46460 <__lshift>
   4374c:	a80b883a 	mov	r5,r21
   43750:	1009883a 	mov	r4,r2
   43754:	d8800915 	stw	r2,36(sp)
   43758:	00465a80 	call	465a8 <__mcmp>
   4375c:	da001717 	ldw	r8,92(sp)
   43760:	0081800e 	bge	zero,r2,43d64 <_dtoa_r+0x11d4>
   43764:	b93fffc3 	ldbu	r4,-1(r23)
   43768:	b8bfffc4 	addi	r2,r23,-1
   4376c:	1007883a 	mov	r3,r2
   43770:	01800e44 	movi	r6,57
   43774:	d9c00717 	ldw	r7,28(sp)
   43778:	00000506 	br	43790 <_dtoa_r+0xc00>
   4377c:	18ffffc4 	addi	r3,r3,-1
   43780:	11c12326 	beq	r2,r7,43c10 <_dtoa_r+0x1080>
   43784:	19000003 	ldbu	r4,0(r3)
   43788:	102f883a 	mov	r23,r2
   4378c:	10bfffc4 	addi	r2,r2,-1
   43790:	21403fcc 	andi	r5,r4,255
   43794:	2940201c 	xori	r5,r5,128
   43798:	297fe004 	addi	r5,r5,-128
   4379c:	29bff726 	beq	r5,r6,4377c <__alt_data_end+0xfffe73bc>
   437a0:	21000044 	addi	r4,r4,1
   437a4:	11000005 	stb	r4,0(r2)
   437a8:	a80b883a 	mov	r5,r21
   437ac:	e009883a 	mov	r4,fp
   437b0:	0045ccc0 	call	45ccc <_Bfree>
   437b4:	883ea026 	beq	r17,zero,43238 <__alt_data_end+0xfffe6e78>
   437b8:	90000426 	beq	r18,zero,437cc <_dtoa_r+0xc3c>
   437bc:	94400326 	beq	r18,r17,437cc <_dtoa_r+0xc3c>
   437c0:	900b883a 	mov	r5,r18
   437c4:	e009883a 	mov	r4,fp
   437c8:	0045ccc0 	call	45ccc <_Bfree>
   437cc:	880b883a 	mov	r5,r17
   437d0:	e009883a 	mov	r4,fp
   437d4:	0045ccc0 	call	45ccc <_Bfree>
   437d8:	003e9706 	br	43238 <__alt_data_end+0xfffe6e78>
   437dc:	01800044 	movi	r6,1
   437e0:	d9800e15 	stw	r6,56(sp)
   437e4:	003d9606 	br	42e40 <__alt_data_end+0xfffe6a80>
   437e8:	d8800817 	ldw	r2,32(sp)
   437ec:	d8c00517 	ldw	r3,20(sp)
   437f0:	d8000d15 	stw	zero,52(sp)
   437f4:	10c5c83a 	sub	r2,r2,r3
   437f8:	00c9c83a 	sub	r4,zero,r3
   437fc:	d8800815 	stw	r2,32(sp)
   43800:	d9000a15 	stw	r4,40(sp)
   43804:	003d9706 	br	42e64 <__alt_data_end+0xfffe6aa4>
   43808:	05adc83a 	sub	r22,zero,r22
   4380c:	dd800815 	stw	r22,32(sp)
   43810:	002d883a 	mov	r22,zero
   43814:	003d8e06 	br	42e50 <__alt_data_end+0xfffe6a90>
   43818:	d9000517 	ldw	r4,20(sp)
   4381c:	004d0780 	call	4d078 <__floatsidf>
   43820:	100d883a 	mov	r6,r2
   43824:	180f883a 	mov	r7,r3
   43828:	a009883a 	mov	r4,r20
   4382c:	880b883a 	mov	r5,r17
   43830:	004bc380 	call	4bc38 <__eqdf2>
   43834:	103d7126 	beq	r2,zero,42dfc <__alt_data_end+0xfffe6a3c>
   43838:	d9c00517 	ldw	r7,20(sp)
   4383c:	39ffffc4 	addi	r7,r7,-1
   43840:	d9c00515 	stw	r7,20(sp)
   43844:	003d6d06 	br	42dfc <__alt_data_end+0xfffe6a3c>
   43848:	dd400a17 	ldw	r21,40(sp)
   4384c:	dd000817 	ldw	r20,32(sp)
   43850:	0023883a 	mov	r17,zero
   43854:	003f4806 	br	43578 <__alt_data_end+0xfffe71b8>
   43858:	10e3c83a 	sub	r17,r2,r3
   4385c:	9448983a 	sll	r4,r18,r17
   43860:	003d3206 	br	42d2c <__alt_data_end+0xfffe696c>
   43864:	d8000e15 	stw	zero,56(sp)
   43868:	003d7506 	br	42e40 <__alt_data_end+0xfffe6a80>
   4386c:	b005883a 	mov	r2,r22
   43870:	003f4506 	br	43588 <__alt_data_end+0xfffe71c8>
   43874:	dc000915 	stw	r16,36(sp)
   43878:	d9800a17 	ldw	r6,40(sp)
   4387c:	d9400917 	ldw	r5,36(sp)
   43880:	e009883a 	mov	r4,fp
   43884:	00463200 	call	46320 <__pow5mult>
   43888:	1021883a 	mov	r16,r2
   4388c:	003f5a06 	br	435f8 <__alt_data_end+0xfffe7238>
   43890:	01c00044 	movi	r7,1
   43894:	d9c00b15 	stw	r7,44(sp)
   43898:	d8802217 	ldw	r2,136(sp)
   4389c:	0081280e 	bge	zero,r2,43d40 <_dtoa_r+0x11b0>
   438a0:	100d883a 	mov	r6,r2
   438a4:	1021883a 	mov	r16,r2
   438a8:	d8800c15 	stw	r2,48(sp)
   438ac:	d8800615 	stw	r2,24(sp)
   438b0:	003d8806 	br	42ed4 <__alt_data_end+0xfffe6b14>
   438b4:	d8800617 	ldw	r2,24(sp)
   438b8:	00be9b16 	blt	zero,r2,43328 <__alt_data_end+0xfffe6f68>
   438bc:	10010f1e 	bne	r2,zero,43cfc <_dtoa_r+0x116c>
   438c0:	880b883a 	mov	r5,r17
   438c4:	000d883a 	mov	r6,zero
   438c8:	01d00534 	movhi	r7,16404
   438cc:	8009883a 	mov	r4,r16
   438d0:	004be900 	call	4be90 <__muldf3>
   438d4:	900d883a 	mov	r6,r18
   438d8:	980f883a 	mov	r7,r19
   438dc:	1009883a 	mov	r4,r2
   438e0:	180b883a 	mov	r5,r3
   438e4:	004bcc00 	call	4bcc0 <__gedf2>
   438e8:	002b883a 	mov	r21,zero
   438ec:	0023883a 	mov	r17,zero
   438f0:	1000bf16 	blt	r2,zero,43bf0 <_dtoa_r+0x1060>
   438f4:	d9802217 	ldw	r6,136(sp)
   438f8:	ddc00717 	ldw	r23,28(sp)
   438fc:	018c303a 	nor	r6,zero,r6
   43900:	d9800515 	stw	r6,20(sp)
   43904:	a80b883a 	mov	r5,r21
   43908:	e009883a 	mov	r4,fp
   4390c:	0045ccc0 	call	45ccc <_Bfree>
   43910:	883e4926 	beq	r17,zero,43238 <__alt_data_end+0xfffe6e78>
   43914:	003fad06 	br	437cc <__alt_data_end+0xfffe740c>
   43918:	d9c01117 	ldw	r7,68(sp)
   4391c:	3801bc26 	beq	r7,zero,44010 <_dtoa_r+0x1480>
   43920:	10810cc4 	addi	r2,r2,1075
   43924:	dd400a17 	ldw	r21,40(sp)
   43928:	dd000817 	ldw	r20,32(sp)
   4392c:	003f0a06 	br	43558 <__alt_data_end+0xfffe7198>
   43930:	00800704 	movi	r2,28
   43934:	d9000817 	ldw	r4,32(sp)
   43938:	a0a9883a 	add	r20,r20,r2
   4393c:	b0ad883a 	add	r22,r22,r2
   43940:	2089883a 	add	r4,r4,r2
   43944:	d9000815 	stw	r4,32(sp)
   43948:	003f5106 	br	43690 <__alt_data_end+0xfffe72d0>
   4394c:	d8c00317 	ldw	r3,12(sp)
   43950:	b8c1fc0e 	bge	r23,r3,44144 <_dtoa_r+0x15b4>
   43954:	0027883a 	mov	r19,zero
   43958:	b805883a 	mov	r2,r23
   4395c:	003f3e06 	br	43658 <__alt_data_end+0xfffe7298>
   43960:	880b883a 	mov	r5,r17
   43964:	e009883a 	mov	r4,fp
   43968:	000f883a 	mov	r7,zero
   4396c:	01800284 	movi	r6,10
   43970:	0045cf40 	call	45cf4 <__multadd>
   43974:	d9000c17 	ldw	r4,48(sp)
   43978:	1023883a 	mov	r17,r2
   4397c:	0102040e 	bge	zero,r4,44190 <_dtoa_r+0x1600>
   43980:	d9000615 	stw	r4,24(sp)
   43984:	0500050e 	bge	zero,r20,4399c <_dtoa_r+0xe0c>
   43988:	880b883a 	mov	r5,r17
   4398c:	a00d883a 	mov	r6,r20
   43990:	e009883a 	mov	r4,fp
   43994:	00464600 	call	46460 <__lshift>
   43998:	1023883a 	mov	r17,r2
   4399c:	9801241e 	bne	r19,zero,43e30 <_dtoa_r+0x12a0>
   439a0:	8829883a 	mov	r20,r17
   439a4:	d9000617 	ldw	r4,24(sp)
   439a8:	dcc00717 	ldw	r19,28(sp)
   439ac:	9480004c 	andi	r18,r18,1
   439b0:	20bfffc4 	addi	r2,r4,-1
   439b4:	9885883a 	add	r2,r19,r2
   439b8:	d8800415 	stw	r2,16(sp)
   439bc:	dc800615 	stw	r18,24(sp)
   439c0:	a80b883a 	mov	r5,r21
   439c4:	8009883a 	mov	r4,r16
   439c8:	00429680 	call	42968 <quorem>
   439cc:	880b883a 	mov	r5,r17
   439d0:	8009883a 	mov	r4,r16
   439d4:	102f883a 	mov	r23,r2
   439d8:	00465a80 	call	465a8 <__mcmp>
   439dc:	a80b883a 	mov	r5,r21
   439e0:	a00d883a 	mov	r6,r20
   439e4:	e009883a 	mov	r4,fp
   439e8:	102d883a 	mov	r22,r2
   439ec:	00466080 	call	46608 <__mdiff>
   439f0:	1007883a 	mov	r3,r2
   439f4:	10800317 	ldw	r2,12(r2)
   439f8:	bc800c04 	addi	r18,r23,48
   439fc:	180b883a 	mov	r5,r3
   43a00:	10004e1e 	bne	r2,zero,43b3c <_dtoa_r+0xfac>
   43a04:	8009883a 	mov	r4,r16
   43a08:	d8c01615 	stw	r3,88(sp)
   43a0c:	00465a80 	call	465a8 <__mcmp>
   43a10:	d8c01617 	ldw	r3,88(sp)
   43a14:	e009883a 	mov	r4,fp
   43a18:	d8801615 	stw	r2,88(sp)
   43a1c:	180b883a 	mov	r5,r3
   43a20:	0045ccc0 	call	45ccc <_Bfree>
   43a24:	d8801617 	ldw	r2,88(sp)
   43a28:	1000041e 	bne	r2,zero,43a3c <_dtoa_r+0xeac>
   43a2c:	d9800317 	ldw	r6,12(sp)
   43a30:	3000021e 	bne	r6,zero,43a3c <_dtoa_r+0xeac>
   43a34:	d8c00617 	ldw	r3,24(sp)
   43a38:	18003726 	beq	r3,zero,43b18 <_dtoa_r+0xf88>
   43a3c:	b0002016 	blt	r22,zero,43ac0 <_dtoa_r+0xf30>
   43a40:	b000041e 	bne	r22,zero,43a54 <_dtoa_r+0xec4>
   43a44:	d9000317 	ldw	r4,12(sp)
   43a48:	2000021e 	bne	r4,zero,43a54 <_dtoa_r+0xec4>
   43a4c:	d8c00617 	ldw	r3,24(sp)
   43a50:	18001b26 	beq	r3,zero,43ac0 <_dtoa_r+0xf30>
   43a54:	00810716 	blt	zero,r2,43e74 <_dtoa_r+0x12e4>
   43a58:	d8c00417 	ldw	r3,16(sp)
   43a5c:	9d800044 	addi	r22,r19,1
   43a60:	9c800005 	stb	r18,0(r19)
   43a64:	b02f883a 	mov	r23,r22
   43a68:	98c10626 	beq	r19,r3,43e84 <_dtoa_r+0x12f4>
   43a6c:	800b883a 	mov	r5,r16
   43a70:	000f883a 	mov	r7,zero
   43a74:	01800284 	movi	r6,10
   43a78:	e009883a 	mov	r4,fp
   43a7c:	0045cf40 	call	45cf4 <__multadd>
   43a80:	1021883a 	mov	r16,r2
   43a84:	000f883a 	mov	r7,zero
   43a88:	01800284 	movi	r6,10
   43a8c:	880b883a 	mov	r5,r17
   43a90:	e009883a 	mov	r4,fp
   43a94:	8d002526 	beq	r17,r20,43b2c <_dtoa_r+0xf9c>
   43a98:	0045cf40 	call	45cf4 <__multadd>
   43a9c:	a00b883a 	mov	r5,r20
   43aa0:	000f883a 	mov	r7,zero
   43aa4:	01800284 	movi	r6,10
   43aa8:	e009883a 	mov	r4,fp
   43aac:	1023883a 	mov	r17,r2
   43ab0:	0045cf40 	call	45cf4 <__multadd>
   43ab4:	1029883a 	mov	r20,r2
   43ab8:	b027883a 	mov	r19,r22
   43abc:	003fc006 	br	439c0 <__alt_data_end+0xfffe7600>
   43ac0:	9011883a 	mov	r8,r18
   43ac4:	00800e0e 	bge	zero,r2,43b00 <_dtoa_r+0xf70>
   43ac8:	800b883a 	mov	r5,r16
   43acc:	01800044 	movi	r6,1
   43ad0:	e009883a 	mov	r4,fp
   43ad4:	da001715 	stw	r8,92(sp)
   43ad8:	00464600 	call	46460 <__lshift>
   43adc:	a80b883a 	mov	r5,r21
   43ae0:	1009883a 	mov	r4,r2
   43ae4:	1021883a 	mov	r16,r2
   43ae8:	00465a80 	call	465a8 <__mcmp>
   43aec:	da001717 	ldw	r8,92(sp)
   43af0:	0081960e 	bge	zero,r2,4414c <_dtoa_r+0x15bc>
   43af4:	00800e44 	movi	r2,57
   43af8:	40817026 	beq	r8,r2,440bc <_dtoa_r+0x152c>
   43afc:	ba000c44 	addi	r8,r23,49
   43b00:	8825883a 	mov	r18,r17
   43b04:	9dc00044 	addi	r23,r19,1
   43b08:	9a000005 	stb	r8,0(r19)
   43b0c:	a023883a 	mov	r17,r20
   43b10:	dc000915 	stw	r16,36(sp)
   43b14:	003f2406 	br	437a8 <__alt_data_end+0xfffe73e8>
   43b18:	00800e44 	movi	r2,57
   43b1c:	9011883a 	mov	r8,r18
   43b20:	90816626 	beq	r18,r2,440bc <_dtoa_r+0x152c>
   43b24:	05bff516 	blt	zero,r22,43afc <__alt_data_end+0xfffe773c>
   43b28:	003ff506 	br	43b00 <__alt_data_end+0xfffe7740>
   43b2c:	0045cf40 	call	45cf4 <__multadd>
   43b30:	1023883a 	mov	r17,r2
   43b34:	1029883a 	mov	r20,r2
   43b38:	003fdf06 	br	43ab8 <__alt_data_end+0xfffe76f8>
   43b3c:	e009883a 	mov	r4,fp
   43b40:	0045ccc0 	call	45ccc <_Bfree>
   43b44:	00800044 	movi	r2,1
   43b48:	003fbc06 	br	43a3c <__alt_data_end+0xfffe767c>
   43b4c:	a80b883a 	mov	r5,r21
   43b50:	8009883a 	mov	r4,r16
   43b54:	00465a80 	call	465a8 <__mcmp>
   43b58:	103edb0e 	bge	r2,zero,436c8 <__alt_data_end+0xfffe7308>
   43b5c:	800b883a 	mov	r5,r16
   43b60:	000f883a 	mov	r7,zero
   43b64:	01800284 	movi	r6,10
   43b68:	e009883a 	mov	r4,fp
   43b6c:	0045cf40 	call	45cf4 <__multadd>
   43b70:	1021883a 	mov	r16,r2
   43b74:	d8800517 	ldw	r2,20(sp)
   43b78:	d8c00b17 	ldw	r3,44(sp)
   43b7c:	10bfffc4 	addi	r2,r2,-1
   43b80:	d8800515 	stw	r2,20(sp)
   43b84:	183f761e 	bne	r3,zero,43960 <__alt_data_end+0xfffe75a0>
   43b88:	d9000c17 	ldw	r4,48(sp)
   43b8c:	0101730e 	bge	zero,r4,4415c <_dtoa_r+0x15cc>
   43b90:	d9000615 	stw	r4,24(sp)
   43b94:	003ed006 	br	436d8 <__alt_data_end+0xfffe7318>
   43b98:	00800084 	movi	r2,2
   43b9c:	3081861e 	bne	r6,r2,441b8 <_dtoa_r+0x1628>
   43ba0:	d8000b15 	stw	zero,44(sp)
   43ba4:	003f3c06 	br	43898 <__alt_data_end+0xfffe74d8>
   43ba8:	dc000917 	ldw	r16,36(sp)
   43bac:	003e9206 	br	435f8 <__alt_data_end+0xfffe7238>
   43bb0:	d9c00317 	ldw	r7,12(sp)
   43bb4:	00800084 	movi	r2,2
   43bb8:	11fec50e 	bge	r2,r7,436d0 <__alt_data_end+0xfffe7310>
   43bbc:	d9000617 	ldw	r4,24(sp)
   43bc0:	20013c1e 	bne	r4,zero,440b4 <_dtoa_r+0x1524>
   43bc4:	a80b883a 	mov	r5,r21
   43bc8:	000f883a 	mov	r7,zero
   43bcc:	01800144 	movi	r6,5
   43bd0:	e009883a 	mov	r4,fp
   43bd4:	0045cf40 	call	45cf4 <__multadd>
   43bd8:	100b883a 	mov	r5,r2
   43bdc:	8009883a 	mov	r4,r16
   43be0:	102b883a 	mov	r21,r2
   43be4:	00465a80 	call	465a8 <__mcmp>
   43be8:	dc000915 	stw	r16,36(sp)
   43bec:	00bf410e 	bge	zero,r2,438f4 <__alt_data_end+0xfffe7534>
   43bf0:	d9c00717 	ldw	r7,28(sp)
   43bf4:	00800c44 	movi	r2,49
   43bf8:	38800005 	stb	r2,0(r7)
   43bfc:	d8800517 	ldw	r2,20(sp)
   43c00:	3dc00044 	addi	r23,r7,1
   43c04:	10800044 	addi	r2,r2,1
   43c08:	d8800515 	stw	r2,20(sp)
   43c0c:	003f3d06 	br	43904 <__alt_data_end+0xfffe7544>
   43c10:	d9800517 	ldw	r6,20(sp)
   43c14:	d9c00717 	ldw	r7,28(sp)
   43c18:	00800c44 	movi	r2,49
   43c1c:	31800044 	addi	r6,r6,1
   43c20:	d9800515 	stw	r6,20(sp)
   43c24:	38800005 	stb	r2,0(r7)
   43c28:	003edf06 	br	437a8 <__alt_data_end+0xfffe73e8>
   43c2c:	d8000b15 	stw	zero,44(sp)
   43c30:	003c9f06 	br	42eb0 <__alt_data_end+0xfffe6af0>
   43c34:	903e7e1e 	bne	r18,zero,43630 <__alt_data_end+0xfffe7270>
   43c38:	00800434 	movhi	r2,16
   43c3c:	10bfffc4 	addi	r2,r2,-1
   43c40:	9884703a 	and	r2,r19,r2
   43c44:	1000ea1e 	bne	r2,zero,43ff0 <_dtoa_r+0x1460>
   43c48:	9cdffc2c 	andhi	r19,r19,32752
   43c4c:	9800e826 	beq	r19,zero,43ff0 <_dtoa_r+0x1460>
   43c50:	d9c00817 	ldw	r7,32(sp)
   43c54:	b5800044 	addi	r22,r22,1
   43c58:	04c00044 	movi	r19,1
   43c5c:	39c00044 	addi	r7,r7,1
   43c60:	d9c00815 	stw	r7,32(sp)
   43c64:	d8800d17 	ldw	r2,52(sp)
   43c68:	103e721e 	bne	r2,zero,43634 <__alt_data_end+0xfffe7274>
   43c6c:	00800044 	movi	r2,1
   43c70:	003e7906 	br	43658 <__alt_data_end+0xfffe7298>
   43c74:	8009883a 	mov	r4,r16
   43c78:	004d0780 	call	4d078 <__floatsidf>
   43c7c:	d9800f17 	ldw	r6,60(sp)
   43c80:	d9c01017 	ldw	r7,64(sp)
   43c84:	1009883a 	mov	r4,r2
   43c88:	180b883a 	mov	r5,r3
   43c8c:	004be900 	call	4be90 <__muldf3>
   43c90:	000d883a 	mov	r6,zero
   43c94:	01d00734 	movhi	r7,16412
   43c98:	1009883a 	mov	r4,r2
   43c9c:	180b883a 	mov	r5,r3
   43ca0:	004a9bc0 	call	4a9bc <__adddf3>
   43ca4:	047f3034 	movhi	r17,64704
   43ca8:	1021883a 	mov	r16,r2
   43cac:	1c63883a 	add	r17,r3,r17
   43cb0:	d9000f17 	ldw	r4,60(sp)
   43cb4:	d9401017 	ldw	r5,64(sp)
   43cb8:	000d883a 	mov	r6,zero
   43cbc:	01d00534 	movhi	r7,16404
   43cc0:	004c6fc0 	call	4c6fc <__subdf3>
   43cc4:	800d883a 	mov	r6,r16
   43cc8:	880f883a 	mov	r7,r17
   43ccc:	1009883a 	mov	r4,r2
   43cd0:	180b883a 	mov	r5,r3
   43cd4:	102b883a 	mov	r21,r2
   43cd8:	1829883a 	mov	r20,r3
   43cdc:	004bcc00 	call	4bcc0 <__gedf2>
   43ce0:	00806c16 	blt	zero,r2,43e94 <_dtoa_r+0x1304>
   43ce4:	89e0003c 	xorhi	r7,r17,32768
   43ce8:	800d883a 	mov	r6,r16
   43cec:	a809883a 	mov	r4,r21
   43cf0:	a00b883a 	mov	r5,r20
   43cf4:	004bd9c0 	call	4bd9c <__ledf2>
   43cf8:	103d7e0e 	bge	r2,zero,432f4 <__alt_data_end+0xfffe6f34>
   43cfc:	002b883a 	mov	r21,zero
   43d00:	0023883a 	mov	r17,zero
   43d04:	003efb06 	br	438f4 <__alt_data_end+0xfffe7534>
   43d08:	d8800717 	ldw	r2,28(sp)
   43d0c:	003bd006 	br	42c50 <__alt_data_end+0xfffe6890>
   43d10:	d9000a17 	ldw	r4,40(sp)
   43d14:	d9800d17 	ldw	r6,52(sp)
   43d18:	dd400a15 	stw	r21,40(sp)
   43d1c:	a905c83a 	sub	r2,r21,r4
   43d20:	308d883a 	add	r6,r6,r2
   43d24:	d9800d15 	stw	r6,52(sp)
   43d28:	002b883a 	mov	r21,zero
   43d2c:	003e0606 	br	43548 <__alt_data_end+0xfffe7188>
   43d30:	9023883a 	mov	r17,r18
   43d34:	9829883a 	mov	r20,r19
   43d38:	04000084 	movi	r16,2
   43d3c:	003c9206 	br	42f88 <__alt_data_end+0xfffe6bc8>
   43d40:	04000044 	movi	r16,1
   43d44:	dc000c15 	stw	r16,48(sp)
   43d48:	dc000615 	stw	r16,24(sp)
   43d4c:	dc002215 	stw	r16,136(sp)
   43d50:	e0001115 	stw	zero,68(fp)
   43d54:	000b883a 	mov	r5,zero
   43d58:	003c6906 	br	42f00 <__alt_data_end+0xfffe6b40>
   43d5c:	3021883a 	mov	r16,r6
   43d60:	003ffb06 	br	43d50 <__alt_data_end+0xfffe7990>
   43d64:	1000021e 	bne	r2,zero,43d70 <_dtoa_r+0x11e0>
   43d68:	4200004c 	andi	r8,r8,1
   43d6c:	403e7d1e 	bne	r8,zero,43764 <__alt_data_end+0xfffe73a4>
   43d70:	01000c04 	movi	r4,48
   43d74:	00000106 	br	43d7c <_dtoa_r+0x11ec>
   43d78:	102f883a 	mov	r23,r2
   43d7c:	b8bfffc4 	addi	r2,r23,-1
   43d80:	10c00007 	ldb	r3,0(r2)
   43d84:	193ffc26 	beq	r3,r4,43d78 <__alt_data_end+0xfffe79b8>
   43d88:	003e8706 	br	437a8 <__alt_data_end+0xfffe73e8>
   43d8c:	d8800517 	ldw	r2,20(sp)
   43d90:	00a3c83a 	sub	r17,zero,r2
   43d94:	8800a426 	beq	r17,zero,44028 <_dtoa_r+0x1498>
   43d98:	888003cc 	andi	r2,r17,15
   43d9c:	100490fa 	slli	r2,r2,3
   43da0:	00c00174 	movhi	r3,5
   43da4:	18fe7a04 	addi	r3,r3,-1560
   43da8:	1885883a 	add	r2,r3,r2
   43dac:	11800017 	ldw	r6,0(r2)
   43db0:	11c00117 	ldw	r7,4(r2)
   43db4:	9009883a 	mov	r4,r18
   43db8:	980b883a 	mov	r5,r19
   43dbc:	8823d13a 	srai	r17,r17,4
   43dc0:	004be900 	call	4be90 <__muldf3>
   43dc4:	d8800f15 	stw	r2,60(sp)
   43dc8:	d8c01015 	stw	r3,64(sp)
   43dcc:	8800e826 	beq	r17,zero,44170 <_dtoa_r+0x15e0>
   43dd0:	05000174 	movhi	r20,5
   43dd4:	a53e7004 	addi	r20,r20,-1600
   43dd8:	04000084 	movi	r16,2
   43ddc:	8980004c 	andi	r6,r17,1
   43de0:	1009883a 	mov	r4,r2
   43de4:	8823d07a 	srai	r17,r17,1
   43de8:	180b883a 	mov	r5,r3
   43dec:	30000426 	beq	r6,zero,43e00 <_dtoa_r+0x1270>
   43df0:	a1800017 	ldw	r6,0(r20)
   43df4:	a1c00117 	ldw	r7,4(r20)
   43df8:	84000044 	addi	r16,r16,1
   43dfc:	004be900 	call	4be90 <__muldf3>
   43e00:	a5000204 	addi	r20,r20,8
   43e04:	883ff51e 	bne	r17,zero,43ddc <__alt_data_end+0xfffe7a1c>
   43e08:	d8800f15 	stw	r2,60(sp)
   43e0c:	d8c01015 	stw	r3,64(sp)
   43e10:	003c7606 	br	42fec <__alt_data_end+0xfffe6c2c>
   43e14:	00c00c04 	movi	r3,48
   43e18:	10c00005 	stb	r3,0(r2)
   43e1c:	d8c00517 	ldw	r3,20(sp)
   43e20:	bd3fffc3 	ldbu	r20,-1(r23)
   43e24:	18c00044 	addi	r3,r3,1
   43e28:	d8c00515 	stw	r3,20(sp)
   43e2c:	003db906 	br	43514 <__alt_data_end+0xfffe7154>
   43e30:	89400117 	ldw	r5,4(r17)
   43e34:	e009883a 	mov	r4,fp
   43e38:	0045c240 	call	45c24 <_Balloc>
   43e3c:	89800417 	ldw	r6,16(r17)
   43e40:	89400304 	addi	r5,r17,12
   43e44:	11000304 	addi	r4,r2,12
   43e48:	31800084 	addi	r6,r6,2
   43e4c:	318d883a 	add	r6,r6,r6
   43e50:	318d883a 	add	r6,r6,r6
   43e54:	1027883a 	mov	r19,r2
   43e58:	00459b40 	call	459b4 <memcpy>
   43e5c:	01800044 	movi	r6,1
   43e60:	980b883a 	mov	r5,r19
   43e64:	e009883a 	mov	r4,fp
   43e68:	00464600 	call	46460 <__lshift>
   43e6c:	1029883a 	mov	r20,r2
   43e70:	003ecc06 	br	439a4 <__alt_data_end+0xfffe75e4>
   43e74:	00800e44 	movi	r2,57
   43e78:	90809026 	beq	r18,r2,440bc <_dtoa_r+0x152c>
   43e7c:	92000044 	addi	r8,r18,1
   43e80:	003f1f06 	br	43b00 <__alt_data_end+0xfffe7740>
   43e84:	9011883a 	mov	r8,r18
   43e88:	8825883a 	mov	r18,r17
   43e8c:	a023883a 	mov	r17,r20
   43e90:	003e2906 	br	43738 <__alt_data_end+0xfffe7378>
   43e94:	002b883a 	mov	r21,zero
   43e98:	0023883a 	mov	r17,zero
   43e9c:	003f5406 	br	43bf0 <__alt_data_end+0xfffe7830>
   43ea0:	61bfffc4 	addi	r6,r12,-1
   43ea4:	300490fa 	slli	r2,r6,3
   43ea8:	00c00174 	movhi	r3,5
   43eac:	18fe7a04 	addi	r3,r3,-1560
   43eb0:	1885883a 	add	r2,r3,r2
   43eb4:	11000017 	ldw	r4,0(r2)
   43eb8:	11400117 	ldw	r5,4(r2)
   43ebc:	d8800717 	ldw	r2,28(sp)
   43ec0:	880f883a 	mov	r7,r17
   43ec4:	d9801215 	stw	r6,72(sp)
   43ec8:	800d883a 	mov	r6,r16
   43ecc:	db001615 	stw	r12,88(sp)
   43ed0:	15c00044 	addi	r23,r2,1
   43ed4:	004be900 	call	4be90 <__muldf3>
   43ed8:	d9401017 	ldw	r5,64(sp)
   43edc:	d9000f17 	ldw	r4,60(sp)
   43ee0:	d8c01515 	stw	r3,84(sp)
   43ee4:	d8801415 	stw	r2,80(sp)
   43ee8:	004cff80 	call	4cff8 <__fixdfsi>
   43eec:	1009883a 	mov	r4,r2
   43ef0:	1021883a 	mov	r16,r2
   43ef4:	004d0780 	call	4d078 <__floatsidf>
   43ef8:	d9000f17 	ldw	r4,60(sp)
   43efc:	d9401017 	ldw	r5,64(sp)
   43f00:	100d883a 	mov	r6,r2
   43f04:	180f883a 	mov	r7,r3
   43f08:	004c6fc0 	call	4c6fc <__subdf3>
   43f0c:	1829883a 	mov	r20,r3
   43f10:	d8c00717 	ldw	r3,28(sp)
   43f14:	84000c04 	addi	r16,r16,48
   43f18:	1023883a 	mov	r17,r2
   43f1c:	1c000005 	stb	r16,0(r3)
   43f20:	db001617 	ldw	r12,88(sp)
   43f24:	00800044 	movi	r2,1
   43f28:	60802226 	beq	r12,r2,43fb4 <_dtoa_r+0x1424>
   43f2c:	d9c00717 	ldw	r7,28(sp)
   43f30:	8805883a 	mov	r2,r17
   43f34:	b82b883a 	mov	r21,r23
   43f38:	3b19883a 	add	r12,r7,r12
   43f3c:	6023883a 	mov	r17,r12
   43f40:	a007883a 	mov	r3,r20
   43f44:	dc800f15 	stw	r18,60(sp)
   43f48:	000d883a 	mov	r6,zero
   43f4c:	01d00934 	movhi	r7,16420
   43f50:	1009883a 	mov	r4,r2
   43f54:	180b883a 	mov	r5,r3
   43f58:	004be900 	call	4be90 <__muldf3>
   43f5c:	180b883a 	mov	r5,r3
   43f60:	1009883a 	mov	r4,r2
   43f64:	1829883a 	mov	r20,r3
   43f68:	1025883a 	mov	r18,r2
   43f6c:	004cff80 	call	4cff8 <__fixdfsi>
   43f70:	1009883a 	mov	r4,r2
   43f74:	1021883a 	mov	r16,r2
   43f78:	004d0780 	call	4d078 <__floatsidf>
   43f7c:	100d883a 	mov	r6,r2
   43f80:	180f883a 	mov	r7,r3
   43f84:	9009883a 	mov	r4,r18
   43f88:	a00b883a 	mov	r5,r20
   43f8c:	84000c04 	addi	r16,r16,48
   43f90:	004c6fc0 	call	4c6fc <__subdf3>
   43f94:	ad400044 	addi	r21,r21,1
   43f98:	ac3fffc5 	stb	r16,-1(r21)
   43f9c:	ac7fea1e 	bne	r21,r17,43f48 <__alt_data_end+0xfffe7b88>
   43fa0:	1023883a 	mov	r17,r2
   43fa4:	d8801217 	ldw	r2,72(sp)
   43fa8:	dc800f17 	ldw	r18,60(sp)
   43fac:	1829883a 	mov	r20,r3
   43fb0:	b8af883a 	add	r23,r23,r2
   43fb4:	d9001417 	ldw	r4,80(sp)
   43fb8:	d9401517 	ldw	r5,84(sp)
   43fbc:	000d883a 	mov	r6,zero
   43fc0:	01cff834 	movhi	r7,16352
   43fc4:	004a9bc0 	call	4a9bc <__adddf3>
   43fc8:	880d883a 	mov	r6,r17
   43fcc:	a00f883a 	mov	r7,r20
   43fd0:	1009883a 	mov	r4,r2
   43fd4:	180b883a 	mov	r5,r3
   43fd8:	004bd9c0 	call	4bd9c <__ledf2>
   43fdc:	10003e0e 	bge	r2,zero,440d8 <_dtoa_r+0x1548>
   43fe0:	d9001317 	ldw	r4,76(sp)
   43fe4:	bd3fffc3 	ldbu	r20,-1(r23)
   43fe8:	d9000515 	stw	r4,20(sp)
   43fec:	003d3b06 	br	434dc <__alt_data_end+0xfffe711c>
   43ff0:	0027883a 	mov	r19,zero
   43ff4:	003f1b06 	br	43c64 <__alt_data_end+0xfffe78a4>
   43ff8:	d8800817 	ldw	r2,32(sp)
   43ffc:	11e9c83a 	sub	r20,r2,r7
   44000:	0005883a 	mov	r2,zero
   44004:	003d5406 	br	43558 <__alt_data_end+0xfffe7198>
   44008:	00800044 	movi	r2,1
   4400c:	003dc706 	br	4372c <__alt_data_end+0xfffe736c>
   44010:	d8c00217 	ldw	r3,8(sp)
   44014:	00800d84 	movi	r2,54
   44018:	dd400a17 	ldw	r21,40(sp)
   4401c:	10c5c83a 	sub	r2,r2,r3
   44020:	dd000817 	ldw	r20,32(sp)
   44024:	003d4c06 	br	43558 <__alt_data_end+0xfffe7198>
   44028:	dc800f15 	stw	r18,60(sp)
   4402c:	dcc01015 	stw	r19,64(sp)
   44030:	04000084 	movi	r16,2
   44034:	003bed06 	br	42fec <__alt_data_end+0xfffe6c2c>
   44038:	d9000617 	ldw	r4,24(sp)
   4403c:	203f0d26 	beq	r4,zero,43c74 <__alt_data_end+0xfffe78b4>
   44040:	d9800c17 	ldw	r6,48(sp)
   44044:	01bcab0e 	bge	zero,r6,432f4 <__alt_data_end+0xfffe6f34>
   44048:	d9401017 	ldw	r5,64(sp)
   4404c:	d9000f17 	ldw	r4,60(sp)
   44050:	000d883a 	mov	r6,zero
   44054:	01d00934 	movhi	r7,16420
   44058:	004be900 	call	4be90 <__muldf3>
   4405c:	81000044 	addi	r4,r16,1
   44060:	d8800f15 	stw	r2,60(sp)
   44064:	d8c01015 	stw	r3,64(sp)
   44068:	004d0780 	call	4d078 <__floatsidf>
   4406c:	d9800f17 	ldw	r6,60(sp)
   44070:	d9c01017 	ldw	r7,64(sp)
   44074:	1009883a 	mov	r4,r2
   44078:	180b883a 	mov	r5,r3
   4407c:	004be900 	call	4be90 <__muldf3>
   44080:	01d00734 	movhi	r7,16412
   44084:	000d883a 	mov	r6,zero
   44088:	1009883a 	mov	r4,r2
   4408c:	180b883a 	mov	r5,r3
   44090:	004a9bc0 	call	4a9bc <__adddf3>
   44094:	d9c00517 	ldw	r7,20(sp)
   44098:	047f3034 	movhi	r17,64704
   4409c:	1021883a 	mov	r16,r2
   440a0:	39ffffc4 	addi	r7,r7,-1
   440a4:	d9c01315 	stw	r7,76(sp)
   440a8:	1c63883a 	add	r17,r3,r17
   440ac:	db000c17 	ldw	r12,48(sp)
   440b0:	003bea06 	br	4305c <__alt_data_end+0xfffe6c9c>
   440b4:	dc000915 	stw	r16,36(sp)
   440b8:	003e0e06 	br	438f4 <__alt_data_end+0xfffe7534>
   440bc:	01000e44 	movi	r4,57
   440c0:	8825883a 	mov	r18,r17
   440c4:	9dc00044 	addi	r23,r19,1
   440c8:	99000005 	stb	r4,0(r19)
   440cc:	a023883a 	mov	r17,r20
   440d0:	dc000915 	stw	r16,36(sp)
   440d4:	003da406 	br	43768 <__alt_data_end+0xfffe73a8>
   440d8:	d9801417 	ldw	r6,80(sp)
   440dc:	d9c01517 	ldw	r7,84(sp)
   440e0:	0009883a 	mov	r4,zero
   440e4:	014ff834 	movhi	r5,16352
   440e8:	004c6fc0 	call	4c6fc <__subdf3>
   440ec:	880d883a 	mov	r6,r17
   440f0:	a00f883a 	mov	r7,r20
   440f4:	1009883a 	mov	r4,r2
   440f8:	180b883a 	mov	r5,r3
   440fc:	004bcc00 	call	4bcc0 <__gedf2>
   44100:	00bc7c0e 	bge	zero,r2,432f4 <__alt_data_end+0xfffe6f34>
   44104:	01000c04 	movi	r4,48
   44108:	00000106 	br	44110 <_dtoa_r+0x1580>
   4410c:	102f883a 	mov	r23,r2
   44110:	b8bfffc4 	addi	r2,r23,-1
   44114:	10c00007 	ldb	r3,0(r2)
   44118:	193ffc26 	beq	r3,r4,4410c <__alt_data_end+0xfffe7d4c>
   4411c:	d9801317 	ldw	r6,76(sp)
   44120:	d9800515 	stw	r6,20(sp)
   44124:	003c4406 	br	43238 <__alt_data_end+0xfffe6e78>
   44128:	d9801317 	ldw	r6,76(sp)
   4412c:	d9800515 	stw	r6,20(sp)
   44130:	003cea06 	br	434dc <__alt_data_end+0xfffe711c>
   44134:	dd800f17 	ldw	r22,60(sp)
   44138:	dcc01017 	ldw	r19,64(sp)
   4413c:	dc801217 	ldw	r18,72(sp)
   44140:	003c6c06 	br	432f4 <__alt_data_end+0xfffe6f34>
   44144:	903e031e 	bne	r18,zero,43954 <__alt_data_end+0xfffe7594>
   44148:	003ebb06 	br	43c38 <__alt_data_end+0xfffe7878>
   4414c:	103e6c1e 	bne	r2,zero,43b00 <__alt_data_end+0xfffe7740>
   44150:	4080004c 	andi	r2,r8,1
   44154:	103e6a26 	beq	r2,zero,43b00 <__alt_data_end+0xfffe7740>
   44158:	003e6606 	br	43af4 <__alt_data_end+0xfffe7734>
   4415c:	d8c00317 	ldw	r3,12(sp)
   44160:	00800084 	movi	r2,2
   44164:	10c02916 	blt	r2,r3,4420c <_dtoa_r+0x167c>
   44168:	d9000c17 	ldw	r4,48(sp)
   4416c:	003e8806 	br	43b90 <__alt_data_end+0xfffe77d0>
   44170:	04000084 	movi	r16,2
   44174:	003b9d06 	br	42fec <__alt_data_end+0xfffe6c2c>
   44178:	d9001317 	ldw	r4,76(sp)
   4417c:	d9000515 	stw	r4,20(sp)
   44180:	003cd606 	br	434dc <__alt_data_end+0xfffe711c>
   44184:	d8801317 	ldw	r2,76(sp)
   44188:	d8800515 	stw	r2,20(sp)
   4418c:	003c2a06 	br	43238 <__alt_data_end+0xfffe6e78>
   44190:	d9800317 	ldw	r6,12(sp)
   44194:	00800084 	movi	r2,2
   44198:	11801516 	blt	r2,r6,441f0 <_dtoa_r+0x1660>
   4419c:	d9c00c17 	ldw	r7,48(sp)
   441a0:	d9c00615 	stw	r7,24(sp)
   441a4:	003df706 	br	43984 <__alt_data_end+0xfffe75c4>
   441a8:	193d3926 	beq	r3,r4,43690 <__alt_data_end+0xfffe72d0>
   441ac:	00c00f04 	movi	r3,60
   441b0:	1885c83a 	sub	r2,r3,r2
   441b4:	003ddf06 	br	43934 <__alt_data_end+0xfffe7574>
   441b8:	e009883a 	mov	r4,fp
   441bc:	e0001115 	stw	zero,68(fp)
   441c0:	000b883a 	mov	r5,zero
   441c4:	0045c240 	call	45c24 <_Balloc>
   441c8:	d8800715 	stw	r2,28(sp)
   441cc:	d8c00717 	ldw	r3,28(sp)
   441d0:	00bfffc4 	movi	r2,-1
   441d4:	01000044 	movi	r4,1
   441d8:	d8800c15 	stw	r2,48(sp)
   441dc:	e0c01015 	stw	r3,64(fp)
   441e0:	d9000b15 	stw	r4,44(sp)
   441e4:	d8800615 	stw	r2,24(sp)
   441e8:	d8002215 	stw	zero,136(sp)
   441ec:	003c4106 	br	432f4 <__alt_data_end+0xfffe6f34>
   441f0:	d8c00c17 	ldw	r3,48(sp)
   441f4:	d8c00615 	stw	r3,24(sp)
   441f8:	003e7006 	br	43bbc <__alt_data_end+0xfffe77fc>
   441fc:	04400044 	movi	r17,1
   44200:	003b2006 	br	42e84 <__alt_data_end+0xfffe6ac4>
   44204:	000b883a 	mov	r5,zero
   44208:	003b3d06 	br	42f00 <__alt_data_end+0xfffe6b40>
   4420c:	d8800c17 	ldw	r2,48(sp)
   44210:	d8800615 	stw	r2,24(sp)
   44214:	003e6906 	br	43bbc <__alt_data_end+0xfffe77fc>

00044218 <__sflush_r>:
   44218:	2880030b 	ldhu	r2,12(r5)
   4421c:	defffb04 	addi	sp,sp,-20
   44220:	dcc00315 	stw	r19,12(sp)
   44224:	dc400115 	stw	r17,4(sp)
   44228:	dfc00415 	stw	ra,16(sp)
   4422c:	dc800215 	stw	r18,8(sp)
   44230:	dc000015 	stw	r16,0(sp)
   44234:	10c0020c 	andi	r3,r2,8
   44238:	2823883a 	mov	r17,r5
   4423c:	2027883a 	mov	r19,r4
   44240:	1800311e 	bne	r3,zero,44308 <__sflush_r+0xf0>
   44244:	28c00117 	ldw	r3,4(r5)
   44248:	10820014 	ori	r2,r2,2048
   4424c:	2880030d 	sth	r2,12(r5)
   44250:	00c04b0e 	bge	zero,r3,44380 <__sflush_r+0x168>
   44254:	8a000a17 	ldw	r8,40(r17)
   44258:	40002326 	beq	r8,zero,442e8 <__sflush_r+0xd0>
   4425c:	9c000017 	ldw	r16,0(r19)
   44260:	10c4000c 	andi	r3,r2,4096
   44264:	98000015 	stw	zero,0(r19)
   44268:	18004826 	beq	r3,zero,4438c <__sflush_r+0x174>
   4426c:	89801417 	ldw	r6,80(r17)
   44270:	10c0010c 	andi	r3,r2,4
   44274:	18000626 	beq	r3,zero,44290 <__sflush_r+0x78>
   44278:	88c00117 	ldw	r3,4(r17)
   4427c:	88800c17 	ldw	r2,48(r17)
   44280:	30cdc83a 	sub	r6,r6,r3
   44284:	10000226 	beq	r2,zero,44290 <__sflush_r+0x78>
   44288:	88800f17 	ldw	r2,60(r17)
   4428c:	308dc83a 	sub	r6,r6,r2
   44290:	89400717 	ldw	r5,28(r17)
   44294:	000f883a 	mov	r7,zero
   44298:	9809883a 	mov	r4,r19
   4429c:	403ee83a 	callr	r8
   442a0:	00ffffc4 	movi	r3,-1
   442a4:	10c04426 	beq	r2,r3,443b8 <__sflush_r+0x1a0>
   442a8:	88c0030b 	ldhu	r3,12(r17)
   442ac:	89000417 	ldw	r4,16(r17)
   442b0:	88000115 	stw	zero,4(r17)
   442b4:	197dffcc 	andi	r5,r3,63487
   442b8:	8940030d 	sth	r5,12(r17)
   442bc:	89000015 	stw	r4,0(r17)
   442c0:	18c4000c 	andi	r3,r3,4096
   442c4:	18002c1e 	bne	r3,zero,44378 <__sflush_r+0x160>
   442c8:	89400c17 	ldw	r5,48(r17)
   442cc:	9c000015 	stw	r16,0(r19)
   442d0:	28000526 	beq	r5,zero,442e8 <__sflush_r+0xd0>
   442d4:	88801004 	addi	r2,r17,64
   442d8:	28800226 	beq	r5,r2,442e4 <__sflush_r+0xcc>
   442dc:	9809883a 	mov	r4,r19
   442e0:	00449940 	call	44994 <_free_r>
   442e4:	88000c15 	stw	zero,48(r17)
   442e8:	0005883a 	mov	r2,zero
   442ec:	dfc00417 	ldw	ra,16(sp)
   442f0:	dcc00317 	ldw	r19,12(sp)
   442f4:	dc800217 	ldw	r18,8(sp)
   442f8:	dc400117 	ldw	r17,4(sp)
   442fc:	dc000017 	ldw	r16,0(sp)
   44300:	dec00504 	addi	sp,sp,20
   44304:	f800283a 	ret
   44308:	2c800417 	ldw	r18,16(r5)
   4430c:	903ff626 	beq	r18,zero,442e8 <__alt_data_end+0xfffe7f28>
   44310:	2c000017 	ldw	r16,0(r5)
   44314:	108000cc 	andi	r2,r2,3
   44318:	2c800015 	stw	r18,0(r5)
   4431c:	84a1c83a 	sub	r16,r16,r18
   44320:	1000131e 	bne	r2,zero,44370 <__sflush_r+0x158>
   44324:	28800517 	ldw	r2,20(r5)
   44328:	88800215 	stw	r2,8(r17)
   4432c:	04000316 	blt	zero,r16,4433c <__sflush_r+0x124>
   44330:	003fed06 	br	442e8 <__alt_data_end+0xfffe7f28>
   44334:	90a5883a 	add	r18,r18,r2
   44338:	043feb0e 	bge	zero,r16,442e8 <__alt_data_end+0xfffe7f28>
   4433c:	88800917 	ldw	r2,36(r17)
   44340:	89400717 	ldw	r5,28(r17)
   44344:	800f883a 	mov	r7,r16
   44348:	900d883a 	mov	r6,r18
   4434c:	9809883a 	mov	r4,r19
   44350:	103ee83a 	callr	r2
   44354:	80a1c83a 	sub	r16,r16,r2
   44358:	00bff616 	blt	zero,r2,44334 <__alt_data_end+0xfffe7f74>
   4435c:	88c0030b 	ldhu	r3,12(r17)
   44360:	00bfffc4 	movi	r2,-1
   44364:	18c01014 	ori	r3,r3,64
   44368:	88c0030d 	sth	r3,12(r17)
   4436c:	003fdf06 	br	442ec <__alt_data_end+0xfffe7f2c>
   44370:	0005883a 	mov	r2,zero
   44374:	003fec06 	br	44328 <__alt_data_end+0xfffe7f68>
   44378:	88801415 	stw	r2,80(r17)
   4437c:	003fd206 	br	442c8 <__alt_data_end+0xfffe7f08>
   44380:	28c00f17 	ldw	r3,60(r5)
   44384:	00ffb316 	blt	zero,r3,44254 <__alt_data_end+0xfffe7e94>
   44388:	003fd706 	br	442e8 <__alt_data_end+0xfffe7f28>
   4438c:	89400717 	ldw	r5,28(r17)
   44390:	000d883a 	mov	r6,zero
   44394:	01c00044 	movi	r7,1
   44398:	9809883a 	mov	r4,r19
   4439c:	403ee83a 	callr	r8
   443a0:	100d883a 	mov	r6,r2
   443a4:	00bfffc4 	movi	r2,-1
   443a8:	30801426 	beq	r6,r2,443fc <__sflush_r+0x1e4>
   443ac:	8880030b 	ldhu	r2,12(r17)
   443b0:	8a000a17 	ldw	r8,40(r17)
   443b4:	003fae06 	br	44270 <__alt_data_end+0xfffe7eb0>
   443b8:	98c00017 	ldw	r3,0(r19)
   443bc:	183fba26 	beq	r3,zero,442a8 <__alt_data_end+0xfffe7ee8>
   443c0:	01000744 	movi	r4,29
   443c4:	19000626 	beq	r3,r4,443e0 <__sflush_r+0x1c8>
   443c8:	01000584 	movi	r4,22
   443cc:	19000426 	beq	r3,r4,443e0 <__sflush_r+0x1c8>
   443d0:	88c0030b 	ldhu	r3,12(r17)
   443d4:	18c01014 	ori	r3,r3,64
   443d8:	88c0030d 	sth	r3,12(r17)
   443dc:	003fc306 	br	442ec <__alt_data_end+0xfffe7f2c>
   443e0:	8880030b 	ldhu	r2,12(r17)
   443e4:	88c00417 	ldw	r3,16(r17)
   443e8:	88000115 	stw	zero,4(r17)
   443ec:	10bdffcc 	andi	r2,r2,63487
   443f0:	8880030d 	sth	r2,12(r17)
   443f4:	88c00015 	stw	r3,0(r17)
   443f8:	003fb306 	br	442c8 <__alt_data_end+0xfffe7f08>
   443fc:	98800017 	ldw	r2,0(r19)
   44400:	103fea26 	beq	r2,zero,443ac <__alt_data_end+0xfffe7fec>
   44404:	00c00744 	movi	r3,29
   44408:	10c00226 	beq	r2,r3,44414 <__sflush_r+0x1fc>
   4440c:	00c00584 	movi	r3,22
   44410:	10c0031e 	bne	r2,r3,44420 <__sflush_r+0x208>
   44414:	9c000015 	stw	r16,0(r19)
   44418:	0005883a 	mov	r2,zero
   4441c:	003fb306 	br	442ec <__alt_data_end+0xfffe7f2c>
   44420:	88c0030b 	ldhu	r3,12(r17)
   44424:	3005883a 	mov	r2,r6
   44428:	18c01014 	ori	r3,r3,64
   4442c:	88c0030d 	sth	r3,12(r17)
   44430:	003fae06 	br	442ec <__alt_data_end+0xfffe7f2c>

00044434 <_fflush_r>:
   44434:	defffd04 	addi	sp,sp,-12
   44438:	dc000115 	stw	r16,4(sp)
   4443c:	dfc00215 	stw	ra,8(sp)
   44440:	2021883a 	mov	r16,r4
   44444:	20000226 	beq	r4,zero,44450 <_fflush_r+0x1c>
   44448:	20800e17 	ldw	r2,56(r4)
   4444c:	10000c26 	beq	r2,zero,44480 <_fflush_r+0x4c>
   44450:	2880030f 	ldh	r2,12(r5)
   44454:	1000051e 	bne	r2,zero,4446c <_fflush_r+0x38>
   44458:	0005883a 	mov	r2,zero
   4445c:	dfc00217 	ldw	ra,8(sp)
   44460:	dc000117 	ldw	r16,4(sp)
   44464:	dec00304 	addi	sp,sp,12
   44468:	f800283a 	ret
   4446c:	8009883a 	mov	r4,r16
   44470:	dfc00217 	ldw	ra,8(sp)
   44474:	dc000117 	ldw	r16,4(sp)
   44478:	dec00304 	addi	sp,sp,12
   4447c:	00442181 	jmpi	44218 <__sflush_r>
   44480:	d9400015 	stw	r5,0(sp)
   44484:	00448200 	call	44820 <__sinit>
   44488:	d9400017 	ldw	r5,0(sp)
   4448c:	003ff006 	br	44450 <__alt_data_end+0xfffe8090>

00044490 <fflush>:
   44490:	20000526 	beq	r4,zero,444a8 <fflush+0x18>
   44494:	00800174 	movhi	r2,5
   44498:	1085fb04 	addi	r2,r2,6124
   4449c:	200b883a 	mov	r5,r4
   444a0:	11000017 	ldw	r4,0(r2)
   444a4:	00444341 	jmpi	44434 <_fflush_r>
   444a8:	00800174 	movhi	r2,5
   444ac:	1085fa04 	addi	r2,r2,6120
   444b0:	11000017 	ldw	r4,0(r2)
   444b4:	01400134 	movhi	r5,4
   444b8:	29510d04 	addi	r5,r5,17460
   444bc:	0044d681 	jmpi	44d68 <_fwalk_reent>

000444c0 <__fp_unlock>:
   444c0:	0005883a 	mov	r2,zero
   444c4:	f800283a 	ret

000444c8 <_cleanup_r>:
   444c8:	01400174 	movhi	r5,5
   444cc:	29623704 	addi	r5,r5,-30500
   444d0:	0044d681 	jmpi	44d68 <_fwalk_reent>

000444d4 <__sinit.part.1>:
   444d4:	defff704 	addi	sp,sp,-36
   444d8:	00c00134 	movhi	r3,4
   444dc:	dfc00815 	stw	ra,32(sp)
   444e0:	ddc00715 	stw	r23,28(sp)
   444e4:	dd800615 	stw	r22,24(sp)
   444e8:	dd400515 	stw	r21,20(sp)
   444ec:	dd000415 	stw	r20,16(sp)
   444f0:	dcc00315 	stw	r19,12(sp)
   444f4:	dc800215 	stw	r18,8(sp)
   444f8:	dc400115 	stw	r17,4(sp)
   444fc:	dc000015 	stw	r16,0(sp)
   44500:	18d13204 	addi	r3,r3,17608
   44504:	24000117 	ldw	r16,4(r4)
   44508:	20c00f15 	stw	r3,60(r4)
   4450c:	2080bb04 	addi	r2,r4,748
   44510:	00c000c4 	movi	r3,3
   44514:	20c0b915 	stw	r3,740(r4)
   44518:	2080ba15 	stw	r2,744(r4)
   4451c:	2000b815 	stw	zero,736(r4)
   44520:	05c00204 	movi	r23,8
   44524:	00800104 	movi	r2,4
   44528:	2025883a 	mov	r18,r4
   4452c:	b80d883a 	mov	r6,r23
   44530:	81001704 	addi	r4,r16,92
   44534:	000b883a 	mov	r5,zero
   44538:	80000015 	stw	zero,0(r16)
   4453c:	80000115 	stw	zero,4(r16)
   44540:	80000215 	stw	zero,8(r16)
   44544:	8080030d 	sth	r2,12(r16)
   44548:	80001915 	stw	zero,100(r16)
   4454c:	8000038d 	sth	zero,14(r16)
   44550:	80000415 	stw	zero,16(r16)
   44554:	80000515 	stw	zero,20(r16)
   44558:	80000615 	stw	zero,24(r16)
   4455c:	0045afc0 	call	45afc <memset>
   44560:	05800134 	movhi	r22,4
   44564:	94400217 	ldw	r17,8(r18)
   44568:	05400134 	movhi	r21,4
   4456c:	05000134 	movhi	r20,4
   44570:	04c00134 	movhi	r19,4
   44574:	b59b6904 	addi	r22,r22,28068
   44578:	ad5b8004 	addi	r21,r21,28160
   4457c:	a51b9f04 	addi	r20,r20,28284
   44580:	9cdbb604 	addi	r19,r19,28376
   44584:	85800815 	stw	r22,32(r16)
   44588:	85400915 	stw	r21,36(r16)
   4458c:	85000a15 	stw	r20,40(r16)
   44590:	84c00b15 	stw	r19,44(r16)
   44594:	84000715 	stw	r16,28(r16)
   44598:	00800284 	movi	r2,10
   4459c:	8880030d 	sth	r2,12(r17)
   445a0:	00800044 	movi	r2,1
   445a4:	b80d883a 	mov	r6,r23
   445a8:	89001704 	addi	r4,r17,92
   445ac:	000b883a 	mov	r5,zero
   445b0:	88000015 	stw	zero,0(r17)
   445b4:	88000115 	stw	zero,4(r17)
   445b8:	88000215 	stw	zero,8(r17)
   445bc:	88001915 	stw	zero,100(r17)
   445c0:	8880038d 	sth	r2,14(r17)
   445c4:	88000415 	stw	zero,16(r17)
   445c8:	88000515 	stw	zero,20(r17)
   445cc:	88000615 	stw	zero,24(r17)
   445d0:	0045afc0 	call	45afc <memset>
   445d4:	94000317 	ldw	r16,12(r18)
   445d8:	00800484 	movi	r2,18
   445dc:	8c400715 	stw	r17,28(r17)
   445e0:	8d800815 	stw	r22,32(r17)
   445e4:	8d400915 	stw	r21,36(r17)
   445e8:	8d000a15 	stw	r20,40(r17)
   445ec:	8cc00b15 	stw	r19,44(r17)
   445f0:	8080030d 	sth	r2,12(r16)
   445f4:	00800084 	movi	r2,2
   445f8:	80000015 	stw	zero,0(r16)
   445fc:	80000115 	stw	zero,4(r16)
   44600:	80000215 	stw	zero,8(r16)
   44604:	80001915 	stw	zero,100(r16)
   44608:	8080038d 	sth	r2,14(r16)
   4460c:	80000415 	stw	zero,16(r16)
   44610:	80000515 	stw	zero,20(r16)
   44614:	80000615 	stw	zero,24(r16)
   44618:	b80d883a 	mov	r6,r23
   4461c:	000b883a 	mov	r5,zero
   44620:	81001704 	addi	r4,r16,92
   44624:	0045afc0 	call	45afc <memset>
   44628:	00800044 	movi	r2,1
   4462c:	84000715 	stw	r16,28(r16)
   44630:	85800815 	stw	r22,32(r16)
   44634:	85400915 	stw	r21,36(r16)
   44638:	85000a15 	stw	r20,40(r16)
   4463c:	84c00b15 	stw	r19,44(r16)
   44640:	90800e15 	stw	r2,56(r18)
   44644:	dfc00817 	ldw	ra,32(sp)
   44648:	ddc00717 	ldw	r23,28(sp)
   4464c:	dd800617 	ldw	r22,24(sp)
   44650:	dd400517 	ldw	r21,20(sp)
   44654:	dd000417 	ldw	r20,16(sp)
   44658:	dcc00317 	ldw	r19,12(sp)
   4465c:	dc800217 	ldw	r18,8(sp)
   44660:	dc400117 	ldw	r17,4(sp)
   44664:	dc000017 	ldw	r16,0(sp)
   44668:	dec00904 	addi	sp,sp,36
   4466c:	f800283a 	ret

00044670 <__fp_lock>:
   44670:	0005883a 	mov	r2,zero
   44674:	f800283a 	ret

00044678 <__sfmoreglue>:
   44678:	defffc04 	addi	sp,sp,-16
   4467c:	dc800215 	stw	r18,8(sp)
   44680:	2825883a 	mov	r18,r5
   44684:	dc000015 	stw	r16,0(sp)
   44688:	01401a04 	movi	r5,104
   4468c:	2021883a 	mov	r16,r4
   44690:	913fffc4 	addi	r4,r18,-1
   44694:	dfc00315 	stw	ra,12(sp)
   44698:	dc400115 	stw	r17,4(sp)
   4469c:	004a9940 	call	4a994 <__mulsi3>
   446a0:	8009883a 	mov	r4,r16
   446a4:	11401d04 	addi	r5,r2,116
   446a8:	1023883a 	mov	r17,r2
   446ac:	00450c40 	call	450c4 <_malloc_r>
   446b0:	1021883a 	mov	r16,r2
   446b4:	10000726 	beq	r2,zero,446d4 <__sfmoreglue+0x5c>
   446b8:	11000304 	addi	r4,r2,12
   446bc:	10000015 	stw	zero,0(r2)
   446c0:	14800115 	stw	r18,4(r2)
   446c4:	11000215 	stw	r4,8(r2)
   446c8:	89801a04 	addi	r6,r17,104
   446cc:	000b883a 	mov	r5,zero
   446d0:	0045afc0 	call	45afc <memset>
   446d4:	8005883a 	mov	r2,r16
   446d8:	dfc00317 	ldw	ra,12(sp)
   446dc:	dc800217 	ldw	r18,8(sp)
   446e0:	dc400117 	ldw	r17,4(sp)
   446e4:	dc000017 	ldw	r16,0(sp)
   446e8:	dec00404 	addi	sp,sp,16
   446ec:	f800283a 	ret

000446f0 <__sfp>:
   446f0:	defffb04 	addi	sp,sp,-20
   446f4:	dc000015 	stw	r16,0(sp)
   446f8:	04000174 	movhi	r16,5
   446fc:	8405fa04 	addi	r16,r16,6120
   44700:	dcc00315 	stw	r19,12(sp)
   44704:	2027883a 	mov	r19,r4
   44708:	81000017 	ldw	r4,0(r16)
   4470c:	dfc00415 	stw	ra,16(sp)
   44710:	dc800215 	stw	r18,8(sp)
   44714:	20800e17 	ldw	r2,56(r4)
   44718:	dc400115 	stw	r17,4(sp)
   4471c:	1000021e 	bne	r2,zero,44728 <__sfp+0x38>
   44720:	00444d40 	call	444d4 <__sinit.part.1>
   44724:	81000017 	ldw	r4,0(r16)
   44728:	2480b804 	addi	r18,r4,736
   4472c:	047fffc4 	movi	r17,-1
   44730:	91000117 	ldw	r4,4(r18)
   44734:	94000217 	ldw	r16,8(r18)
   44738:	213fffc4 	addi	r4,r4,-1
   4473c:	20000a16 	blt	r4,zero,44768 <__sfp+0x78>
   44740:	8080030f 	ldh	r2,12(r16)
   44744:	10000c26 	beq	r2,zero,44778 <__sfp+0x88>
   44748:	80c01d04 	addi	r3,r16,116
   4474c:	00000206 	br	44758 <__sfp+0x68>
   44750:	18bfe60f 	ldh	r2,-104(r3)
   44754:	10000826 	beq	r2,zero,44778 <__sfp+0x88>
   44758:	213fffc4 	addi	r4,r4,-1
   4475c:	1c3ffd04 	addi	r16,r3,-12
   44760:	18c01a04 	addi	r3,r3,104
   44764:	247ffa1e 	bne	r4,r17,44750 <__alt_data_end+0xfffe8390>
   44768:	90800017 	ldw	r2,0(r18)
   4476c:	10001d26 	beq	r2,zero,447e4 <__sfp+0xf4>
   44770:	1025883a 	mov	r18,r2
   44774:	003fee06 	br	44730 <__alt_data_end+0xfffe8370>
   44778:	00bfffc4 	movi	r2,-1
   4477c:	8080038d 	sth	r2,14(r16)
   44780:	00800044 	movi	r2,1
   44784:	8080030d 	sth	r2,12(r16)
   44788:	80001915 	stw	zero,100(r16)
   4478c:	80000015 	stw	zero,0(r16)
   44790:	80000215 	stw	zero,8(r16)
   44794:	80000115 	stw	zero,4(r16)
   44798:	80000415 	stw	zero,16(r16)
   4479c:	80000515 	stw	zero,20(r16)
   447a0:	80000615 	stw	zero,24(r16)
   447a4:	01800204 	movi	r6,8
   447a8:	000b883a 	mov	r5,zero
   447ac:	81001704 	addi	r4,r16,92
   447b0:	0045afc0 	call	45afc <memset>
   447b4:	8005883a 	mov	r2,r16
   447b8:	80000c15 	stw	zero,48(r16)
   447bc:	80000d15 	stw	zero,52(r16)
   447c0:	80001115 	stw	zero,68(r16)
   447c4:	80001215 	stw	zero,72(r16)
   447c8:	dfc00417 	ldw	ra,16(sp)
   447cc:	dcc00317 	ldw	r19,12(sp)
   447d0:	dc800217 	ldw	r18,8(sp)
   447d4:	dc400117 	ldw	r17,4(sp)
   447d8:	dc000017 	ldw	r16,0(sp)
   447dc:	dec00504 	addi	sp,sp,20
   447e0:	f800283a 	ret
   447e4:	01400104 	movi	r5,4
   447e8:	9809883a 	mov	r4,r19
   447ec:	00446780 	call	44678 <__sfmoreglue>
   447f0:	90800015 	stw	r2,0(r18)
   447f4:	103fde1e 	bne	r2,zero,44770 <__alt_data_end+0xfffe83b0>
   447f8:	00800304 	movi	r2,12
   447fc:	98800015 	stw	r2,0(r19)
   44800:	0005883a 	mov	r2,zero
   44804:	003ff006 	br	447c8 <__alt_data_end+0xfffe8408>

00044808 <_cleanup>:
   44808:	00800174 	movhi	r2,5
   4480c:	1085fa04 	addi	r2,r2,6120
   44810:	11000017 	ldw	r4,0(r2)
   44814:	01400174 	movhi	r5,5
   44818:	29623704 	addi	r5,r5,-30500
   4481c:	0044d681 	jmpi	44d68 <_fwalk_reent>

00044820 <__sinit>:
   44820:	20800e17 	ldw	r2,56(r4)
   44824:	10000126 	beq	r2,zero,4482c <__sinit+0xc>
   44828:	f800283a 	ret
   4482c:	00444d41 	jmpi	444d4 <__sinit.part.1>

00044830 <__sfp_lock_acquire>:
   44830:	f800283a 	ret

00044834 <__sfp_lock_release>:
   44834:	f800283a 	ret

00044838 <__sinit_lock_acquire>:
   44838:	f800283a 	ret

0004483c <__sinit_lock_release>:
   4483c:	f800283a 	ret

00044840 <__fp_lock_all>:
   44840:	00800174 	movhi	r2,5
   44844:	1085fb04 	addi	r2,r2,6124
   44848:	11000017 	ldw	r4,0(r2)
   4484c:	01400134 	movhi	r5,4
   44850:	29519c04 	addi	r5,r5,18032
   44854:	0044ca41 	jmpi	44ca4 <_fwalk>

00044858 <__fp_unlock_all>:
   44858:	00800174 	movhi	r2,5
   4485c:	1085fb04 	addi	r2,r2,6124
   44860:	11000017 	ldw	r4,0(r2)
   44864:	01400134 	movhi	r5,4
   44868:	29513004 	addi	r5,r5,17600
   4486c:	0044ca41 	jmpi	44ca4 <_fwalk>

00044870 <_malloc_trim_r>:
   44870:	defffb04 	addi	sp,sp,-20
   44874:	dcc00315 	stw	r19,12(sp)
   44878:	04c00174 	movhi	r19,5
   4487c:	dc800215 	stw	r18,8(sp)
   44880:	dc400115 	stw	r17,4(sp)
   44884:	dc000015 	stw	r16,0(sp)
   44888:	dfc00415 	stw	ra,16(sp)
   4488c:	2821883a 	mov	r16,r5
   44890:	9cc07304 	addi	r19,r19,460
   44894:	2025883a 	mov	r18,r4
   44898:	004d7fc0 	call	4d7fc <__malloc_lock>
   4489c:	98800217 	ldw	r2,8(r19)
   448a0:	14400117 	ldw	r17,4(r2)
   448a4:	00bfff04 	movi	r2,-4
   448a8:	88a2703a 	and	r17,r17,r2
   448ac:	8c21c83a 	sub	r16,r17,r16
   448b0:	8403fbc4 	addi	r16,r16,4079
   448b4:	8020d33a 	srli	r16,r16,12
   448b8:	0083ffc4 	movi	r2,4095
   448bc:	843fffc4 	addi	r16,r16,-1
   448c0:	8020933a 	slli	r16,r16,12
   448c4:	1400060e 	bge	r2,r16,448e0 <_malloc_trim_r+0x70>
   448c8:	000b883a 	mov	r5,zero
   448cc:	9009883a 	mov	r4,r18
   448d0:	0046d500 	call	46d50 <_sbrk_r>
   448d4:	98c00217 	ldw	r3,8(r19)
   448d8:	1c47883a 	add	r3,r3,r17
   448dc:	10c00a26 	beq	r2,r3,44908 <_malloc_trim_r+0x98>
   448e0:	9009883a 	mov	r4,r18
   448e4:	004d8200 	call	4d820 <__malloc_unlock>
   448e8:	0005883a 	mov	r2,zero
   448ec:	dfc00417 	ldw	ra,16(sp)
   448f0:	dcc00317 	ldw	r19,12(sp)
   448f4:	dc800217 	ldw	r18,8(sp)
   448f8:	dc400117 	ldw	r17,4(sp)
   448fc:	dc000017 	ldw	r16,0(sp)
   44900:	dec00504 	addi	sp,sp,20
   44904:	f800283a 	ret
   44908:	040bc83a 	sub	r5,zero,r16
   4490c:	9009883a 	mov	r4,r18
   44910:	0046d500 	call	46d50 <_sbrk_r>
   44914:	00ffffc4 	movi	r3,-1
   44918:	10c00d26 	beq	r2,r3,44950 <_malloc_trim_r+0xe0>
   4491c:	00c00174 	movhi	r3,5
   44920:	18cd2304 	addi	r3,r3,13452
   44924:	18800017 	ldw	r2,0(r3)
   44928:	99000217 	ldw	r4,8(r19)
   4492c:	8c23c83a 	sub	r17,r17,r16
   44930:	8c400054 	ori	r17,r17,1
   44934:	1421c83a 	sub	r16,r2,r16
   44938:	24400115 	stw	r17,4(r4)
   4493c:	9009883a 	mov	r4,r18
   44940:	1c000015 	stw	r16,0(r3)
   44944:	004d8200 	call	4d820 <__malloc_unlock>
   44948:	00800044 	movi	r2,1
   4494c:	003fe706 	br	448ec <__alt_data_end+0xfffe852c>
   44950:	000b883a 	mov	r5,zero
   44954:	9009883a 	mov	r4,r18
   44958:	0046d500 	call	46d50 <_sbrk_r>
   4495c:	99000217 	ldw	r4,8(r19)
   44960:	014003c4 	movi	r5,15
   44964:	1107c83a 	sub	r3,r2,r4
   44968:	28ffdd0e 	bge	r5,r3,448e0 <__alt_data_end+0xfffe8520>
   4496c:	01400174 	movhi	r5,5
   44970:	2945fd04 	addi	r5,r5,6132
   44974:	29400017 	ldw	r5,0(r5)
   44978:	18c00054 	ori	r3,r3,1
   4497c:	20c00115 	stw	r3,4(r4)
   44980:	00c00174 	movhi	r3,5
   44984:	1145c83a 	sub	r2,r2,r5
   44988:	18cd2304 	addi	r3,r3,13452
   4498c:	18800015 	stw	r2,0(r3)
   44990:	003fd306 	br	448e0 <__alt_data_end+0xfffe8520>

00044994 <_free_r>:
   44994:	28004126 	beq	r5,zero,44a9c <_free_r+0x108>
   44998:	defffd04 	addi	sp,sp,-12
   4499c:	dc400115 	stw	r17,4(sp)
   449a0:	dc000015 	stw	r16,0(sp)
   449a4:	2023883a 	mov	r17,r4
   449a8:	2821883a 	mov	r16,r5
   449ac:	dfc00215 	stw	ra,8(sp)
   449b0:	004d7fc0 	call	4d7fc <__malloc_lock>
   449b4:	81ffff17 	ldw	r7,-4(r16)
   449b8:	00bfff84 	movi	r2,-2
   449bc:	01000174 	movhi	r4,5
   449c0:	81bffe04 	addi	r6,r16,-8
   449c4:	3884703a 	and	r2,r7,r2
   449c8:	21007304 	addi	r4,r4,460
   449cc:	308b883a 	add	r5,r6,r2
   449d0:	2a400117 	ldw	r9,4(r5)
   449d4:	22000217 	ldw	r8,8(r4)
   449d8:	00ffff04 	movi	r3,-4
   449dc:	48c6703a 	and	r3,r9,r3
   449e0:	2a005726 	beq	r5,r8,44b40 <_free_r+0x1ac>
   449e4:	28c00115 	stw	r3,4(r5)
   449e8:	39c0004c 	andi	r7,r7,1
   449ec:	3800091e 	bne	r7,zero,44a14 <_free_r+0x80>
   449f0:	823ffe17 	ldw	r8,-8(r16)
   449f4:	22400204 	addi	r9,r4,8
   449f8:	320dc83a 	sub	r6,r6,r8
   449fc:	31c00217 	ldw	r7,8(r6)
   44a00:	1205883a 	add	r2,r2,r8
   44a04:	3a406526 	beq	r7,r9,44b9c <_free_r+0x208>
   44a08:	32000317 	ldw	r8,12(r6)
   44a0c:	3a000315 	stw	r8,12(r7)
   44a10:	41c00215 	stw	r7,8(r8)
   44a14:	28cf883a 	add	r7,r5,r3
   44a18:	39c00117 	ldw	r7,4(r7)
   44a1c:	39c0004c 	andi	r7,r7,1
   44a20:	38003a26 	beq	r7,zero,44b0c <_free_r+0x178>
   44a24:	10c00054 	ori	r3,r2,1
   44a28:	30c00115 	stw	r3,4(r6)
   44a2c:	3087883a 	add	r3,r6,r2
   44a30:	18800015 	stw	r2,0(r3)
   44a34:	00c07fc4 	movi	r3,511
   44a38:	18801936 	bltu	r3,r2,44aa0 <_free_r+0x10c>
   44a3c:	1004d0fa 	srli	r2,r2,3
   44a40:	01c00044 	movi	r7,1
   44a44:	21400117 	ldw	r5,4(r4)
   44a48:	10c00044 	addi	r3,r2,1
   44a4c:	18c7883a 	add	r3,r3,r3
   44a50:	1005d0ba 	srai	r2,r2,2
   44a54:	18c7883a 	add	r3,r3,r3
   44a58:	18c7883a 	add	r3,r3,r3
   44a5c:	1907883a 	add	r3,r3,r4
   44a60:	3884983a 	sll	r2,r7,r2
   44a64:	19c00017 	ldw	r7,0(r3)
   44a68:	1a3ffe04 	addi	r8,r3,-8
   44a6c:	1144b03a 	or	r2,r2,r5
   44a70:	32000315 	stw	r8,12(r6)
   44a74:	31c00215 	stw	r7,8(r6)
   44a78:	20800115 	stw	r2,4(r4)
   44a7c:	19800015 	stw	r6,0(r3)
   44a80:	39800315 	stw	r6,12(r7)
   44a84:	8809883a 	mov	r4,r17
   44a88:	dfc00217 	ldw	ra,8(sp)
   44a8c:	dc400117 	ldw	r17,4(sp)
   44a90:	dc000017 	ldw	r16,0(sp)
   44a94:	dec00304 	addi	sp,sp,12
   44a98:	004d8201 	jmpi	4d820 <__malloc_unlock>
   44a9c:	f800283a 	ret
   44aa0:	100ad27a 	srli	r5,r2,9
   44aa4:	00c00104 	movi	r3,4
   44aa8:	19404a36 	bltu	r3,r5,44bd4 <_free_r+0x240>
   44aac:	100ad1ba 	srli	r5,r2,6
   44ab0:	28c00e44 	addi	r3,r5,57
   44ab4:	18c7883a 	add	r3,r3,r3
   44ab8:	29400e04 	addi	r5,r5,56
   44abc:	18c7883a 	add	r3,r3,r3
   44ac0:	18c7883a 	add	r3,r3,r3
   44ac4:	1909883a 	add	r4,r3,r4
   44ac8:	20c00017 	ldw	r3,0(r4)
   44acc:	01c00174 	movhi	r7,5
   44ad0:	213ffe04 	addi	r4,r4,-8
   44ad4:	39c07304 	addi	r7,r7,460
   44ad8:	20c04426 	beq	r4,r3,44bec <_free_r+0x258>
   44adc:	01ffff04 	movi	r7,-4
   44ae0:	19400117 	ldw	r5,4(r3)
   44ae4:	29ca703a 	and	r5,r5,r7
   44ae8:	1140022e 	bgeu	r2,r5,44af4 <_free_r+0x160>
   44aec:	18c00217 	ldw	r3,8(r3)
   44af0:	20fffb1e 	bne	r4,r3,44ae0 <__alt_data_end+0xfffe8720>
   44af4:	19000317 	ldw	r4,12(r3)
   44af8:	31000315 	stw	r4,12(r6)
   44afc:	30c00215 	stw	r3,8(r6)
   44b00:	21800215 	stw	r6,8(r4)
   44b04:	19800315 	stw	r6,12(r3)
   44b08:	003fde06 	br	44a84 <__alt_data_end+0xfffe86c4>
   44b0c:	29c00217 	ldw	r7,8(r5)
   44b10:	10c5883a 	add	r2,r2,r3
   44b14:	00c00174 	movhi	r3,5
   44b18:	18c07504 	addi	r3,r3,468
   44b1c:	38c03b26 	beq	r7,r3,44c0c <_free_r+0x278>
   44b20:	2a000317 	ldw	r8,12(r5)
   44b24:	11400054 	ori	r5,r2,1
   44b28:	3087883a 	add	r3,r6,r2
   44b2c:	3a000315 	stw	r8,12(r7)
   44b30:	41c00215 	stw	r7,8(r8)
   44b34:	31400115 	stw	r5,4(r6)
   44b38:	18800015 	stw	r2,0(r3)
   44b3c:	003fbd06 	br	44a34 <__alt_data_end+0xfffe8674>
   44b40:	39c0004c 	andi	r7,r7,1
   44b44:	10c5883a 	add	r2,r2,r3
   44b48:	3800071e 	bne	r7,zero,44b68 <_free_r+0x1d4>
   44b4c:	81fffe17 	ldw	r7,-8(r16)
   44b50:	31cdc83a 	sub	r6,r6,r7
   44b54:	30c00317 	ldw	r3,12(r6)
   44b58:	31400217 	ldw	r5,8(r6)
   44b5c:	11c5883a 	add	r2,r2,r7
   44b60:	28c00315 	stw	r3,12(r5)
   44b64:	19400215 	stw	r5,8(r3)
   44b68:	10c00054 	ori	r3,r2,1
   44b6c:	30c00115 	stw	r3,4(r6)
   44b70:	00c00174 	movhi	r3,5
   44b74:	18c5fe04 	addi	r3,r3,6136
   44b78:	18c00017 	ldw	r3,0(r3)
   44b7c:	21800215 	stw	r6,8(r4)
   44b80:	10ffc036 	bltu	r2,r3,44a84 <__alt_data_end+0xfffe86c4>
   44b84:	00800174 	movhi	r2,5
   44b88:	108d1a04 	addi	r2,r2,13416
   44b8c:	11400017 	ldw	r5,0(r2)
   44b90:	8809883a 	mov	r4,r17
   44b94:	00448700 	call	44870 <_malloc_trim_r>
   44b98:	003fba06 	br	44a84 <__alt_data_end+0xfffe86c4>
   44b9c:	28c9883a 	add	r4,r5,r3
   44ba0:	21000117 	ldw	r4,4(r4)
   44ba4:	2100004c 	andi	r4,r4,1
   44ba8:	2000391e 	bne	r4,zero,44c90 <_free_r+0x2fc>
   44bac:	29c00217 	ldw	r7,8(r5)
   44bb0:	29000317 	ldw	r4,12(r5)
   44bb4:	1885883a 	add	r2,r3,r2
   44bb8:	10c00054 	ori	r3,r2,1
   44bbc:	39000315 	stw	r4,12(r7)
   44bc0:	21c00215 	stw	r7,8(r4)
   44bc4:	30c00115 	stw	r3,4(r6)
   44bc8:	308d883a 	add	r6,r6,r2
   44bcc:	30800015 	stw	r2,0(r6)
   44bd0:	003fac06 	br	44a84 <__alt_data_end+0xfffe86c4>
   44bd4:	00c00504 	movi	r3,20
   44bd8:	19401536 	bltu	r3,r5,44c30 <_free_r+0x29c>
   44bdc:	28c01704 	addi	r3,r5,92
   44be0:	18c7883a 	add	r3,r3,r3
   44be4:	294016c4 	addi	r5,r5,91
   44be8:	003fb406 	br	44abc <__alt_data_end+0xfffe86fc>
   44bec:	280bd0ba 	srai	r5,r5,2
   44bf0:	00c00044 	movi	r3,1
   44bf4:	38800117 	ldw	r2,4(r7)
   44bf8:	194a983a 	sll	r5,r3,r5
   44bfc:	2007883a 	mov	r3,r4
   44c00:	2884b03a 	or	r2,r5,r2
   44c04:	38800115 	stw	r2,4(r7)
   44c08:	003fbb06 	br	44af8 <__alt_data_end+0xfffe8738>
   44c0c:	21800515 	stw	r6,20(r4)
   44c10:	21800415 	stw	r6,16(r4)
   44c14:	10c00054 	ori	r3,r2,1
   44c18:	31c00315 	stw	r7,12(r6)
   44c1c:	31c00215 	stw	r7,8(r6)
   44c20:	30c00115 	stw	r3,4(r6)
   44c24:	308d883a 	add	r6,r6,r2
   44c28:	30800015 	stw	r2,0(r6)
   44c2c:	003f9506 	br	44a84 <__alt_data_end+0xfffe86c4>
   44c30:	00c01504 	movi	r3,84
   44c34:	19400536 	bltu	r3,r5,44c4c <_free_r+0x2b8>
   44c38:	100ad33a 	srli	r5,r2,12
   44c3c:	28c01bc4 	addi	r3,r5,111
   44c40:	18c7883a 	add	r3,r3,r3
   44c44:	29401b84 	addi	r5,r5,110
   44c48:	003f9c06 	br	44abc <__alt_data_end+0xfffe86fc>
   44c4c:	00c05504 	movi	r3,340
   44c50:	19400536 	bltu	r3,r5,44c68 <_free_r+0x2d4>
   44c54:	100ad3fa 	srli	r5,r2,15
   44c58:	28c01e04 	addi	r3,r5,120
   44c5c:	18c7883a 	add	r3,r3,r3
   44c60:	29401dc4 	addi	r5,r5,119
   44c64:	003f9506 	br	44abc <__alt_data_end+0xfffe86fc>
   44c68:	00c15504 	movi	r3,1364
   44c6c:	19400536 	bltu	r3,r5,44c84 <_free_r+0x2f0>
   44c70:	100ad4ba 	srli	r5,r2,18
   44c74:	28c01f44 	addi	r3,r5,125
   44c78:	18c7883a 	add	r3,r3,r3
   44c7c:	29401f04 	addi	r5,r5,124
   44c80:	003f8e06 	br	44abc <__alt_data_end+0xfffe86fc>
   44c84:	00c03f84 	movi	r3,254
   44c88:	01401f84 	movi	r5,126
   44c8c:	003f8b06 	br	44abc <__alt_data_end+0xfffe86fc>
   44c90:	10c00054 	ori	r3,r2,1
   44c94:	30c00115 	stw	r3,4(r6)
   44c98:	308d883a 	add	r6,r6,r2
   44c9c:	30800015 	stw	r2,0(r6)
   44ca0:	003f7806 	br	44a84 <__alt_data_end+0xfffe86c4>

00044ca4 <_fwalk>:
   44ca4:	defff704 	addi	sp,sp,-36
   44ca8:	dd000415 	stw	r20,16(sp)
   44cac:	dfc00815 	stw	ra,32(sp)
   44cb0:	ddc00715 	stw	r23,28(sp)
   44cb4:	dd800615 	stw	r22,24(sp)
   44cb8:	dd400515 	stw	r21,20(sp)
   44cbc:	dcc00315 	stw	r19,12(sp)
   44cc0:	dc800215 	stw	r18,8(sp)
   44cc4:	dc400115 	stw	r17,4(sp)
   44cc8:	dc000015 	stw	r16,0(sp)
   44ccc:	2500b804 	addi	r20,r4,736
   44cd0:	a0002326 	beq	r20,zero,44d60 <_fwalk+0xbc>
   44cd4:	282b883a 	mov	r21,r5
   44cd8:	002f883a 	mov	r23,zero
   44cdc:	05800044 	movi	r22,1
   44ce0:	04ffffc4 	movi	r19,-1
   44ce4:	a4400117 	ldw	r17,4(r20)
   44ce8:	a4800217 	ldw	r18,8(r20)
   44cec:	8c7fffc4 	addi	r17,r17,-1
   44cf0:	88000d16 	blt	r17,zero,44d28 <_fwalk+0x84>
   44cf4:	94000304 	addi	r16,r18,12
   44cf8:	94800384 	addi	r18,r18,14
   44cfc:	8080000b 	ldhu	r2,0(r16)
   44d00:	8c7fffc4 	addi	r17,r17,-1
   44d04:	813ffd04 	addi	r4,r16,-12
   44d08:	b080042e 	bgeu	r22,r2,44d1c <_fwalk+0x78>
   44d0c:	9080000f 	ldh	r2,0(r18)
   44d10:	14c00226 	beq	r2,r19,44d1c <_fwalk+0x78>
   44d14:	a83ee83a 	callr	r21
   44d18:	b8aeb03a 	or	r23,r23,r2
   44d1c:	84001a04 	addi	r16,r16,104
   44d20:	94801a04 	addi	r18,r18,104
   44d24:	8cfff51e 	bne	r17,r19,44cfc <__alt_data_end+0xfffe893c>
   44d28:	a5000017 	ldw	r20,0(r20)
   44d2c:	a03fed1e 	bne	r20,zero,44ce4 <__alt_data_end+0xfffe8924>
   44d30:	b805883a 	mov	r2,r23
   44d34:	dfc00817 	ldw	ra,32(sp)
   44d38:	ddc00717 	ldw	r23,28(sp)
   44d3c:	dd800617 	ldw	r22,24(sp)
   44d40:	dd400517 	ldw	r21,20(sp)
   44d44:	dd000417 	ldw	r20,16(sp)
   44d48:	dcc00317 	ldw	r19,12(sp)
   44d4c:	dc800217 	ldw	r18,8(sp)
   44d50:	dc400117 	ldw	r17,4(sp)
   44d54:	dc000017 	ldw	r16,0(sp)
   44d58:	dec00904 	addi	sp,sp,36
   44d5c:	f800283a 	ret
   44d60:	002f883a 	mov	r23,zero
   44d64:	003ff206 	br	44d30 <__alt_data_end+0xfffe8970>

00044d68 <_fwalk_reent>:
   44d68:	defff704 	addi	sp,sp,-36
   44d6c:	dd000415 	stw	r20,16(sp)
   44d70:	dfc00815 	stw	ra,32(sp)
   44d74:	ddc00715 	stw	r23,28(sp)
   44d78:	dd800615 	stw	r22,24(sp)
   44d7c:	dd400515 	stw	r21,20(sp)
   44d80:	dcc00315 	stw	r19,12(sp)
   44d84:	dc800215 	stw	r18,8(sp)
   44d88:	dc400115 	stw	r17,4(sp)
   44d8c:	dc000015 	stw	r16,0(sp)
   44d90:	2500b804 	addi	r20,r4,736
   44d94:	a0002326 	beq	r20,zero,44e24 <_fwalk_reent+0xbc>
   44d98:	282b883a 	mov	r21,r5
   44d9c:	2027883a 	mov	r19,r4
   44da0:	002f883a 	mov	r23,zero
   44da4:	05800044 	movi	r22,1
   44da8:	04bfffc4 	movi	r18,-1
   44dac:	a4400117 	ldw	r17,4(r20)
   44db0:	a4000217 	ldw	r16,8(r20)
   44db4:	8c7fffc4 	addi	r17,r17,-1
   44db8:	88000c16 	blt	r17,zero,44dec <_fwalk_reent+0x84>
   44dbc:	84000304 	addi	r16,r16,12
   44dc0:	8080000b 	ldhu	r2,0(r16)
   44dc4:	8c7fffc4 	addi	r17,r17,-1
   44dc8:	817ffd04 	addi	r5,r16,-12
   44dcc:	b080052e 	bgeu	r22,r2,44de4 <_fwalk_reent+0x7c>
   44dd0:	8080008f 	ldh	r2,2(r16)
   44dd4:	9809883a 	mov	r4,r19
   44dd8:	14800226 	beq	r2,r18,44de4 <_fwalk_reent+0x7c>
   44ddc:	a83ee83a 	callr	r21
   44de0:	b8aeb03a 	or	r23,r23,r2
   44de4:	84001a04 	addi	r16,r16,104
   44de8:	8cbff51e 	bne	r17,r18,44dc0 <__alt_data_end+0xfffe8a00>
   44dec:	a5000017 	ldw	r20,0(r20)
   44df0:	a03fee1e 	bne	r20,zero,44dac <__alt_data_end+0xfffe89ec>
   44df4:	b805883a 	mov	r2,r23
   44df8:	dfc00817 	ldw	ra,32(sp)
   44dfc:	ddc00717 	ldw	r23,28(sp)
   44e00:	dd800617 	ldw	r22,24(sp)
   44e04:	dd400517 	ldw	r21,20(sp)
   44e08:	dd000417 	ldw	r20,16(sp)
   44e0c:	dcc00317 	ldw	r19,12(sp)
   44e10:	dc800217 	ldw	r18,8(sp)
   44e14:	dc400117 	ldw	r17,4(sp)
   44e18:	dc000017 	ldw	r16,0(sp)
   44e1c:	dec00904 	addi	sp,sp,36
   44e20:	f800283a 	ret
   44e24:	002f883a 	mov	r23,zero
   44e28:	003ff206 	br	44df4 <__alt_data_end+0xfffe8a34>

00044e2c <_setlocale_r>:
   44e2c:	30001b26 	beq	r6,zero,44e9c <_setlocale_r+0x70>
   44e30:	01400174 	movhi	r5,5
   44e34:	defffe04 	addi	sp,sp,-8
   44e38:	297e6004 	addi	r5,r5,-1664
   44e3c:	3009883a 	mov	r4,r6
   44e40:	dc000015 	stw	r16,0(sp)
   44e44:	dfc00115 	stw	ra,4(sp)
   44e48:	3021883a 	mov	r16,r6
   44e4c:	0046ee00 	call	46ee0 <strcmp>
   44e50:	1000061e 	bne	r2,zero,44e6c <_setlocale_r+0x40>
   44e54:	00800174 	movhi	r2,5
   44e58:	10be5f04 	addi	r2,r2,-1668
   44e5c:	dfc00117 	ldw	ra,4(sp)
   44e60:	dc000017 	ldw	r16,0(sp)
   44e64:	dec00204 	addi	sp,sp,8
   44e68:	f800283a 	ret
   44e6c:	01400174 	movhi	r5,5
   44e70:	297e5f04 	addi	r5,r5,-1668
   44e74:	8009883a 	mov	r4,r16
   44e78:	0046ee00 	call	46ee0 <strcmp>
   44e7c:	103ff526 	beq	r2,zero,44e54 <__alt_data_end+0xfffe8a94>
   44e80:	01400174 	movhi	r5,5
   44e84:	297e4a04 	addi	r5,r5,-1752
   44e88:	8009883a 	mov	r4,r16
   44e8c:	0046ee00 	call	46ee0 <strcmp>
   44e90:	103ff026 	beq	r2,zero,44e54 <__alt_data_end+0xfffe8a94>
   44e94:	0005883a 	mov	r2,zero
   44e98:	003ff006 	br	44e5c <__alt_data_end+0xfffe8a9c>
   44e9c:	00800174 	movhi	r2,5
   44ea0:	10be5f04 	addi	r2,r2,-1668
   44ea4:	f800283a 	ret

00044ea8 <__locale_charset>:
   44ea8:	00800174 	movhi	r2,5
   44eac:	10805d04 	addi	r2,r2,372
   44eb0:	f800283a 	ret

00044eb4 <__locale_mb_cur_max>:
   44eb4:	00800174 	movhi	r2,5
   44eb8:	1085fc04 	addi	r2,r2,6128
   44ebc:	10800017 	ldw	r2,0(r2)
   44ec0:	f800283a 	ret

00044ec4 <__locale_msgcharset>:
   44ec4:	00800174 	movhi	r2,5
   44ec8:	10805504 	addi	r2,r2,340
   44ecc:	f800283a 	ret

00044ed0 <__locale_cjk_lang>:
   44ed0:	0005883a 	mov	r2,zero
   44ed4:	f800283a 	ret

00044ed8 <_localeconv_r>:
   44ed8:	00800174 	movhi	r2,5
   44edc:	10806504 	addi	r2,r2,404
   44ee0:	f800283a 	ret

00044ee4 <setlocale>:
   44ee4:	00800174 	movhi	r2,5
   44ee8:	1085fb04 	addi	r2,r2,6124
   44eec:	280d883a 	mov	r6,r5
   44ef0:	200b883a 	mov	r5,r4
   44ef4:	11000017 	ldw	r4,0(r2)
   44ef8:	0044e2c1 	jmpi	44e2c <_setlocale_r>

00044efc <localeconv>:
   44efc:	00800174 	movhi	r2,5
   44f00:	10806504 	addi	r2,r2,404
   44f04:	f800283a 	ret

00044f08 <__smakebuf_r>:
   44f08:	2880030b 	ldhu	r2,12(r5)
   44f0c:	10c0008c 	andi	r3,r2,2
   44f10:	1800411e 	bne	r3,zero,45018 <__smakebuf_r+0x110>
   44f14:	deffec04 	addi	sp,sp,-80
   44f18:	dc000f15 	stw	r16,60(sp)
   44f1c:	2821883a 	mov	r16,r5
   44f20:	2940038f 	ldh	r5,14(r5)
   44f24:	dc401015 	stw	r17,64(sp)
   44f28:	dfc01315 	stw	ra,76(sp)
   44f2c:	dcc01215 	stw	r19,72(sp)
   44f30:	dc801115 	stw	r18,68(sp)
   44f34:	2023883a 	mov	r17,r4
   44f38:	28001c16 	blt	r5,zero,44fac <__smakebuf_r+0xa4>
   44f3c:	d80d883a 	mov	r6,sp
   44f40:	0048be80 	call	48be8 <_fstat_r>
   44f44:	10001816 	blt	r2,zero,44fa8 <__smakebuf_r+0xa0>
   44f48:	d8800117 	ldw	r2,4(sp)
   44f4c:	00e00014 	movui	r3,32768
   44f50:	10bc000c 	andi	r2,r2,61440
   44f54:	14c80020 	cmpeqi	r19,r2,8192
   44f58:	10c03726 	beq	r2,r3,45038 <__smakebuf_r+0x130>
   44f5c:	80c0030b 	ldhu	r3,12(r16)
   44f60:	18c20014 	ori	r3,r3,2048
   44f64:	80c0030d 	sth	r3,12(r16)
   44f68:	00c80004 	movi	r3,8192
   44f6c:	10c0521e 	bne	r2,r3,450b8 <__smakebuf_r+0x1b0>
   44f70:	8140038f 	ldh	r5,14(r16)
   44f74:	8809883a 	mov	r4,r17
   44f78:	004910c0 	call	4910c <_isatty_r>
   44f7c:	10004c26 	beq	r2,zero,450b0 <__smakebuf_r+0x1a8>
   44f80:	8080030b 	ldhu	r2,12(r16)
   44f84:	80c010c4 	addi	r3,r16,67
   44f88:	80c00015 	stw	r3,0(r16)
   44f8c:	10800054 	ori	r2,r2,1
   44f90:	8080030d 	sth	r2,12(r16)
   44f94:	00800044 	movi	r2,1
   44f98:	80c00415 	stw	r3,16(r16)
   44f9c:	80800515 	stw	r2,20(r16)
   44fa0:	04810004 	movi	r18,1024
   44fa4:	00000706 	br	44fc4 <__smakebuf_r+0xbc>
   44fa8:	8080030b 	ldhu	r2,12(r16)
   44fac:	10c0200c 	andi	r3,r2,128
   44fb0:	18001f1e 	bne	r3,zero,45030 <__smakebuf_r+0x128>
   44fb4:	04810004 	movi	r18,1024
   44fb8:	10820014 	ori	r2,r2,2048
   44fbc:	8080030d 	sth	r2,12(r16)
   44fc0:	0027883a 	mov	r19,zero
   44fc4:	900b883a 	mov	r5,r18
   44fc8:	8809883a 	mov	r4,r17
   44fcc:	00450c40 	call	450c4 <_malloc_r>
   44fd0:	10002c26 	beq	r2,zero,45084 <__smakebuf_r+0x17c>
   44fd4:	80c0030b 	ldhu	r3,12(r16)
   44fd8:	01000134 	movhi	r4,4
   44fdc:	21113204 	addi	r4,r4,17608
   44fe0:	89000f15 	stw	r4,60(r17)
   44fe4:	18c02014 	ori	r3,r3,128
   44fe8:	80c0030d 	sth	r3,12(r16)
   44fec:	80800015 	stw	r2,0(r16)
   44ff0:	80800415 	stw	r2,16(r16)
   44ff4:	84800515 	stw	r18,20(r16)
   44ff8:	98001a1e 	bne	r19,zero,45064 <__smakebuf_r+0x15c>
   44ffc:	dfc01317 	ldw	ra,76(sp)
   45000:	dcc01217 	ldw	r19,72(sp)
   45004:	dc801117 	ldw	r18,68(sp)
   45008:	dc401017 	ldw	r17,64(sp)
   4500c:	dc000f17 	ldw	r16,60(sp)
   45010:	dec01404 	addi	sp,sp,80
   45014:	f800283a 	ret
   45018:	288010c4 	addi	r2,r5,67
   4501c:	28800015 	stw	r2,0(r5)
   45020:	28800415 	stw	r2,16(r5)
   45024:	00800044 	movi	r2,1
   45028:	28800515 	stw	r2,20(r5)
   4502c:	f800283a 	ret
   45030:	04801004 	movi	r18,64
   45034:	003fe006 	br	44fb8 <__alt_data_end+0xfffe8bf8>
   45038:	81000a17 	ldw	r4,40(r16)
   4503c:	00c00134 	movhi	r3,4
   45040:	18db9f04 	addi	r3,r3,28284
   45044:	20ffc51e 	bne	r4,r3,44f5c <__alt_data_end+0xfffe8b9c>
   45048:	8080030b 	ldhu	r2,12(r16)
   4504c:	04810004 	movi	r18,1024
   45050:	84801315 	stw	r18,76(r16)
   45054:	1484b03a 	or	r2,r2,r18
   45058:	8080030d 	sth	r2,12(r16)
   4505c:	0027883a 	mov	r19,zero
   45060:	003fd806 	br	44fc4 <__alt_data_end+0xfffe8c04>
   45064:	8140038f 	ldh	r5,14(r16)
   45068:	8809883a 	mov	r4,r17
   4506c:	004910c0 	call	4910c <_isatty_r>
   45070:	103fe226 	beq	r2,zero,44ffc <__alt_data_end+0xfffe8c3c>
   45074:	8080030b 	ldhu	r2,12(r16)
   45078:	10800054 	ori	r2,r2,1
   4507c:	8080030d 	sth	r2,12(r16)
   45080:	003fde06 	br	44ffc <__alt_data_end+0xfffe8c3c>
   45084:	8080030b 	ldhu	r2,12(r16)
   45088:	10c0800c 	andi	r3,r2,512
   4508c:	183fdb1e 	bne	r3,zero,44ffc <__alt_data_end+0xfffe8c3c>
   45090:	10800094 	ori	r2,r2,2
   45094:	80c010c4 	addi	r3,r16,67
   45098:	8080030d 	sth	r2,12(r16)
   4509c:	00800044 	movi	r2,1
   450a0:	80c00015 	stw	r3,0(r16)
   450a4:	80c00415 	stw	r3,16(r16)
   450a8:	80800515 	stw	r2,20(r16)
   450ac:	003fd306 	br	44ffc <__alt_data_end+0xfffe8c3c>
   450b0:	04810004 	movi	r18,1024
   450b4:	003fc306 	br	44fc4 <__alt_data_end+0xfffe8c04>
   450b8:	0027883a 	mov	r19,zero
   450bc:	04810004 	movi	r18,1024
   450c0:	003fc006 	br	44fc4 <__alt_data_end+0xfffe8c04>

000450c4 <_malloc_r>:
   450c4:	defff504 	addi	sp,sp,-44
   450c8:	dc800315 	stw	r18,12(sp)
   450cc:	dfc00a15 	stw	ra,40(sp)
   450d0:	df000915 	stw	fp,36(sp)
   450d4:	ddc00815 	stw	r23,32(sp)
   450d8:	dd800715 	stw	r22,28(sp)
   450dc:	dd400615 	stw	r21,24(sp)
   450e0:	dd000515 	stw	r20,20(sp)
   450e4:	dcc00415 	stw	r19,16(sp)
   450e8:	dc400215 	stw	r17,8(sp)
   450ec:	dc000115 	stw	r16,4(sp)
   450f0:	288002c4 	addi	r2,r5,11
   450f4:	00c00584 	movi	r3,22
   450f8:	2025883a 	mov	r18,r4
   450fc:	18807f2e 	bgeu	r3,r2,452fc <_malloc_r+0x238>
   45100:	047ffe04 	movi	r17,-8
   45104:	1462703a 	and	r17,r2,r17
   45108:	8800a316 	blt	r17,zero,45398 <_malloc_r+0x2d4>
   4510c:	8940a236 	bltu	r17,r5,45398 <_malloc_r+0x2d4>
   45110:	004d7fc0 	call	4d7fc <__malloc_lock>
   45114:	00807dc4 	movi	r2,503
   45118:	1441e92e 	bgeu	r2,r17,458c0 <_malloc_r+0x7fc>
   4511c:	8804d27a 	srli	r2,r17,9
   45120:	1000a126 	beq	r2,zero,453a8 <_malloc_r+0x2e4>
   45124:	00c00104 	movi	r3,4
   45128:	18811e36 	bltu	r3,r2,455a4 <_malloc_r+0x4e0>
   4512c:	8804d1ba 	srli	r2,r17,6
   45130:	12000e44 	addi	r8,r2,57
   45134:	11c00e04 	addi	r7,r2,56
   45138:	4209883a 	add	r4,r8,r8
   4513c:	04c00174 	movhi	r19,5
   45140:	2109883a 	add	r4,r4,r4
   45144:	9cc07304 	addi	r19,r19,460
   45148:	2109883a 	add	r4,r4,r4
   4514c:	9909883a 	add	r4,r19,r4
   45150:	24000117 	ldw	r16,4(r4)
   45154:	213ffe04 	addi	r4,r4,-8
   45158:	24009726 	beq	r4,r16,453b8 <_malloc_r+0x2f4>
   4515c:	80800117 	ldw	r2,4(r16)
   45160:	01bfff04 	movi	r6,-4
   45164:	014003c4 	movi	r5,15
   45168:	1184703a 	and	r2,r2,r6
   4516c:	1447c83a 	sub	r3,r2,r17
   45170:	28c00716 	blt	r5,r3,45190 <_malloc_r+0xcc>
   45174:	1800920e 	bge	r3,zero,453c0 <_malloc_r+0x2fc>
   45178:	84000317 	ldw	r16,12(r16)
   4517c:	24008e26 	beq	r4,r16,453b8 <_malloc_r+0x2f4>
   45180:	80800117 	ldw	r2,4(r16)
   45184:	1184703a 	and	r2,r2,r6
   45188:	1447c83a 	sub	r3,r2,r17
   4518c:	28fff90e 	bge	r5,r3,45174 <__alt_data_end+0xfffe8db4>
   45190:	3809883a 	mov	r4,r7
   45194:	01800174 	movhi	r6,5
   45198:	9c000417 	ldw	r16,16(r19)
   4519c:	31807304 	addi	r6,r6,460
   451a0:	32000204 	addi	r8,r6,8
   451a4:	82013426 	beq	r16,r8,45678 <_malloc_r+0x5b4>
   451a8:	80c00117 	ldw	r3,4(r16)
   451ac:	00bfff04 	movi	r2,-4
   451b0:	188e703a 	and	r7,r3,r2
   451b4:	3c45c83a 	sub	r2,r7,r17
   451b8:	00c003c4 	movi	r3,15
   451bc:	18811f16 	blt	r3,r2,4563c <_malloc_r+0x578>
   451c0:	32000515 	stw	r8,20(r6)
   451c4:	32000415 	stw	r8,16(r6)
   451c8:	10007f0e 	bge	r2,zero,453c8 <_malloc_r+0x304>
   451cc:	00807fc4 	movi	r2,511
   451d0:	11c0fd36 	bltu	r2,r7,455c8 <_malloc_r+0x504>
   451d4:	3806d0fa 	srli	r3,r7,3
   451d8:	01c00044 	movi	r7,1
   451dc:	30800117 	ldw	r2,4(r6)
   451e0:	19400044 	addi	r5,r3,1
   451e4:	294b883a 	add	r5,r5,r5
   451e8:	1807d0ba 	srai	r3,r3,2
   451ec:	294b883a 	add	r5,r5,r5
   451f0:	294b883a 	add	r5,r5,r5
   451f4:	298b883a 	add	r5,r5,r6
   451f8:	38c6983a 	sll	r3,r7,r3
   451fc:	29c00017 	ldw	r7,0(r5)
   45200:	2a7ffe04 	addi	r9,r5,-8
   45204:	1886b03a 	or	r3,r3,r2
   45208:	82400315 	stw	r9,12(r16)
   4520c:	81c00215 	stw	r7,8(r16)
   45210:	30c00115 	stw	r3,4(r6)
   45214:	2c000015 	stw	r16,0(r5)
   45218:	3c000315 	stw	r16,12(r7)
   4521c:	2005d0ba 	srai	r2,r4,2
   45220:	01400044 	movi	r5,1
   45224:	288a983a 	sll	r5,r5,r2
   45228:	19406f36 	bltu	r3,r5,453e8 <_malloc_r+0x324>
   4522c:	28c4703a 	and	r2,r5,r3
   45230:	10000a1e 	bne	r2,zero,4525c <_malloc_r+0x198>
   45234:	00bfff04 	movi	r2,-4
   45238:	294b883a 	add	r5,r5,r5
   4523c:	2088703a 	and	r4,r4,r2
   45240:	28c4703a 	and	r2,r5,r3
   45244:	21000104 	addi	r4,r4,4
   45248:	1000041e 	bne	r2,zero,4525c <_malloc_r+0x198>
   4524c:	294b883a 	add	r5,r5,r5
   45250:	28c4703a 	and	r2,r5,r3
   45254:	21000104 	addi	r4,r4,4
   45258:	103ffc26 	beq	r2,zero,4524c <__alt_data_end+0xfffe8e8c>
   4525c:	02bfff04 	movi	r10,-4
   45260:	024003c4 	movi	r9,15
   45264:	21800044 	addi	r6,r4,1
   45268:	318d883a 	add	r6,r6,r6
   4526c:	318d883a 	add	r6,r6,r6
   45270:	318d883a 	add	r6,r6,r6
   45274:	998d883a 	add	r6,r19,r6
   45278:	333ffe04 	addi	r12,r6,-8
   4527c:	2017883a 	mov	r11,r4
   45280:	31800104 	addi	r6,r6,4
   45284:	34000017 	ldw	r16,0(r6)
   45288:	31fffd04 	addi	r7,r6,-12
   4528c:	81c0041e 	bne	r16,r7,452a0 <_malloc_r+0x1dc>
   45290:	0000fb06 	br	45680 <_malloc_r+0x5bc>
   45294:	1801030e 	bge	r3,zero,456a4 <_malloc_r+0x5e0>
   45298:	84000317 	ldw	r16,12(r16)
   4529c:	81c0f826 	beq	r16,r7,45680 <_malloc_r+0x5bc>
   452a0:	80800117 	ldw	r2,4(r16)
   452a4:	1284703a 	and	r2,r2,r10
   452a8:	1447c83a 	sub	r3,r2,r17
   452ac:	48fff90e 	bge	r9,r3,45294 <__alt_data_end+0xfffe8ed4>
   452b0:	80800317 	ldw	r2,12(r16)
   452b4:	81000217 	ldw	r4,8(r16)
   452b8:	89400054 	ori	r5,r17,1
   452bc:	81400115 	stw	r5,4(r16)
   452c0:	20800315 	stw	r2,12(r4)
   452c4:	11000215 	stw	r4,8(r2)
   452c8:	8463883a 	add	r17,r16,r17
   452cc:	9c400515 	stw	r17,20(r19)
   452d0:	9c400415 	stw	r17,16(r19)
   452d4:	18800054 	ori	r2,r3,1
   452d8:	88800115 	stw	r2,4(r17)
   452dc:	8a000315 	stw	r8,12(r17)
   452e0:	8a000215 	stw	r8,8(r17)
   452e4:	88e3883a 	add	r17,r17,r3
   452e8:	88c00015 	stw	r3,0(r17)
   452ec:	9009883a 	mov	r4,r18
   452f0:	004d8200 	call	4d820 <__malloc_unlock>
   452f4:	80800204 	addi	r2,r16,8
   452f8:	00001b06 	br	45368 <_malloc_r+0x2a4>
   452fc:	04400404 	movi	r17,16
   45300:	89402536 	bltu	r17,r5,45398 <_malloc_r+0x2d4>
   45304:	004d7fc0 	call	4d7fc <__malloc_lock>
   45308:	00800184 	movi	r2,6
   4530c:	01000084 	movi	r4,2
   45310:	04c00174 	movhi	r19,5
   45314:	1085883a 	add	r2,r2,r2
   45318:	9cc07304 	addi	r19,r19,460
   4531c:	1085883a 	add	r2,r2,r2
   45320:	9885883a 	add	r2,r19,r2
   45324:	14000117 	ldw	r16,4(r2)
   45328:	10fffe04 	addi	r3,r2,-8
   4532c:	80c0d926 	beq	r16,r3,45694 <_malloc_r+0x5d0>
   45330:	80c00117 	ldw	r3,4(r16)
   45334:	81000317 	ldw	r4,12(r16)
   45338:	00bfff04 	movi	r2,-4
   4533c:	1884703a 	and	r2,r3,r2
   45340:	81400217 	ldw	r5,8(r16)
   45344:	8085883a 	add	r2,r16,r2
   45348:	10c00117 	ldw	r3,4(r2)
   4534c:	29000315 	stw	r4,12(r5)
   45350:	21400215 	stw	r5,8(r4)
   45354:	18c00054 	ori	r3,r3,1
   45358:	10c00115 	stw	r3,4(r2)
   4535c:	9009883a 	mov	r4,r18
   45360:	004d8200 	call	4d820 <__malloc_unlock>
   45364:	80800204 	addi	r2,r16,8
   45368:	dfc00a17 	ldw	ra,40(sp)
   4536c:	df000917 	ldw	fp,36(sp)
   45370:	ddc00817 	ldw	r23,32(sp)
   45374:	dd800717 	ldw	r22,28(sp)
   45378:	dd400617 	ldw	r21,24(sp)
   4537c:	dd000517 	ldw	r20,20(sp)
   45380:	dcc00417 	ldw	r19,16(sp)
   45384:	dc800317 	ldw	r18,12(sp)
   45388:	dc400217 	ldw	r17,8(sp)
   4538c:	dc000117 	ldw	r16,4(sp)
   45390:	dec00b04 	addi	sp,sp,44
   45394:	f800283a 	ret
   45398:	00800304 	movi	r2,12
   4539c:	90800015 	stw	r2,0(r18)
   453a0:	0005883a 	mov	r2,zero
   453a4:	003ff006 	br	45368 <__alt_data_end+0xfffe8fa8>
   453a8:	01002004 	movi	r4,128
   453ac:	02001004 	movi	r8,64
   453b0:	01c00fc4 	movi	r7,63
   453b4:	003f6106 	br	4513c <__alt_data_end+0xfffe8d7c>
   453b8:	4009883a 	mov	r4,r8
   453bc:	003f7506 	br	45194 <__alt_data_end+0xfffe8dd4>
   453c0:	81000317 	ldw	r4,12(r16)
   453c4:	003fde06 	br	45340 <__alt_data_end+0xfffe8f80>
   453c8:	81c5883a 	add	r2,r16,r7
   453cc:	11400117 	ldw	r5,4(r2)
   453d0:	9009883a 	mov	r4,r18
   453d4:	29400054 	ori	r5,r5,1
   453d8:	11400115 	stw	r5,4(r2)
   453dc:	004d8200 	call	4d820 <__malloc_unlock>
   453e0:	80800204 	addi	r2,r16,8
   453e4:	003fe006 	br	45368 <__alt_data_end+0xfffe8fa8>
   453e8:	9c000217 	ldw	r16,8(r19)
   453ec:	00bfff04 	movi	r2,-4
   453f0:	85800117 	ldw	r22,4(r16)
   453f4:	b0ac703a 	and	r22,r22,r2
   453f8:	b4400336 	bltu	r22,r17,45408 <_malloc_r+0x344>
   453fc:	b445c83a 	sub	r2,r22,r17
   45400:	00c003c4 	movi	r3,15
   45404:	18805d16 	blt	r3,r2,4557c <_malloc_r+0x4b8>
   45408:	05c00174 	movhi	r23,5
   4540c:	00800174 	movhi	r2,5
   45410:	108d1a04 	addi	r2,r2,13416
   45414:	bdc5fd04 	addi	r23,r23,6132
   45418:	15400017 	ldw	r21,0(r2)
   4541c:	b8c00017 	ldw	r3,0(r23)
   45420:	00bfffc4 	movi	r2,-1
   45424:	858d883a 	add	r6,r16,r22
   45428:	8d6b883a 	add	r21,r17,r21
   4542c:	1880ea26 	beq	r3,r2,457d8 <_malloc_r+0x714>
   45430:	ad4403c4 	addi	r21,r21,4111
   45434:	00bc0004 	movi	r2,-4096
   45438:	a8aa703a 	and	r21,r21,r2
   4543c:	a80b883a 	mov	r5,r21
   45440:	9009883a 	mov	r4,r18
   45444:	d9800015 	stw	r6,0(sp)
   45448:	0046d500 	call	46d50 <_sbrk_r>
   4544c:	1029883a 	mov	r20,r2
   45450:	00bfffc4 	movi	r2,-1
   45454:	d9800017 	ldw	r6,0(sp)
   45458:	a080e826 	beq	r20,r2,457fc <_malloc_r+0x738>
   4545c:	a180a636 	bltu	r20,r6,456f8 <_malloc_r+0x634>
   45460:	07000174 	movhi	fp,5
   45464:	e70d2304 	addi	fp,fp,13452
   45468:	e0800017 	ldw	r2,0(fp)
   4546c:	a887883a 	add	r3,r21,r2
   45470:	e0c00015 	stw	r3,0(fp)
   45474:	3500e626 	beq	r6,r20,45810 <_malloc_r+0x74c>
   45478:	b9000017 	ldw	r4,0(r23)
   4547c:	00bfffc4 	movi	r2,-1
   45480:	2080ee26 	beq	r4,r2,4583c <_malloc_r+0x778>
   45484:	a185c83a 	sub	r2,r20,r6
   45488:	10c5883a 	add	r2,r2,r3
   4548c:	e0800015 	stw	r2,0(fp)
   45490:	a0c001cc 	andi	r3,r20,7
   45494:	1800bc26 	beq	r3,zero,45788 <_malloc_r+0x6c4>
   45498:	a0e9c83a 	sub	r20,r20,r3
   4549c:	00840204 	movi	r2,4104
   454a0:	a5000204 	addi	r20,r20,8
   454a4:	10c7c83a 	sub	r3,r2,r3
   454a8:	a545883a 	add	r2,r20,r21
   454ac:	1083ffcc 	andi	r2,r2,4095
   454b0:	18abc83a 	sub	r21,r3,r2
   454b4:	a80b883a 	mov	r5,r21
   454b8:	9009883a 	mov	r4,r18
   454bc:	0046d500 	call	46d50 <_sbrk_r>
   454c0:	00ffffc4 	movi	r3,-1
   454c4:	10c0e126 	beq	r2,r3,4584c <_malloc_r+0x788>
   454c8:	1505c83a 	sub	r2,r2,r20
   454cc:	1545883a 	add	r2,r2,r21
   454d0:	10800054 	ori	r2,r2,1
   454d4:	e0c00017 	ldw	r3,0(fp)
   454d8:	9d000215 	stw	r20,8(r19)
   454dc:	a0800115 	stw	r2,4(r20)
   454e0:	a8c7883a 	add	r3,r21,r3
   454e4:	e0c00015 	stw	r3,0(fp)
   454e8:	84c00e26 	beq	r16,r19,45524 <_malloc_r+0x460>
   454ec:	018003c4 	movi	r6,15
   454f0:	3580a72e 	bgeu	r6,r22,45790 <_malloc_r+0x6cc>
   454f4:	81400117 	ldw	r5,4(r16)
   454f8:	013ffe04 	movi	r4,-8
   454fc:	b0bffd04 	addi	r2,r22,-12
   45500:	1104703a 	and	r2,r2,r4
   45504:	2900004c 	andi	r4,r5,1
   45508:	2088b03a 	or	r4,r4,r2
   4550c:	81000115 	stw	r4,4(r16)
   45510:	01400144 	movi	r5,5
   45514:	8089883a 	add	r4,r16,r2
   45518:	21400115 	stw	r5,4(r4)
   4551c:	21400215 	stw	r5,8(r4)
   45520:	3080cd36 	bltu	r6,r2,45858 <_malloc_r+0x794>
   45524:	00800174 	movhi	r2,5
   45528:	108d1904 	addi	r2,r2,13412
   4552c:	11000017 	ldw	r4,0(r2)
   45530:	20c0012e 	bgeu	r4,r3,45538 <_malloc_r+0x474>
   45534:	10c00015 	stw	r3,0(r2)
   45538:	00800174 	movhi	r2,5
   4553c:	108d1804 	addi	r2,r2,13408
   45540:	11000017 	ldw	r4,0(r2)
   45544:	9c000217 	ldw	r16,8(r19)
   45548:	20c0012e 	bgeu	r4,r3,45550 <_malloc_r+0x48c>
   4554c:	10c00015 	stw	r3,0(r2)
   45550:	80c00117 	ldw	r3,4(r16)
   45554:	00bfff04 	movi	r2,-4
   45558:	1886703a 	and	r3,r3,r2
   4555c:	1c45c83a 	sub	r2,r3,r17
   45560:	1c400236 	bltu	r3,r17,4556c <_malloc_r+0x4a8>
   45564:	00c003c4 	movi	r3,15
   45568:	18800416 	blt	r3,r2,4557c <_malloc_r+0x4b8>
   4556c:	9009883a 	mov	r4,r18
   45570:	004d8200 	call	4d820 <__malloc_unlock>
   45574:	0005883a 	mov	r2,zero
   45578:	003f7b06 	br	45368 <__alt_data_end+0xfffe8fa8>
   4557c:	88c00054 	ori	r3,r17,1
   45580:	80c00115 	stw	r3,4(r16)
   45584:	8463883a 	add	r17,r16,r17
   45588:	10800054 	ori	r2,r2,1
   4558c:	9c400215 	stw	r17,8(r19)
   45590:	88800115 	stw	r2,4(r17)
   45594:	9009883a 	mov	r4,r18
   45598:	004d8200 	call	4d820 <__malloc_unlock>
   4559c:	80800204 	addi	r2,r16,8
   455a0:	003f7106 	br	45368 <__alt_data_end+0xfffe8fa8>
   455a4:	00c00504 	movi	r3,20
   455a8:	18804a2e 	bgeu	r3,r2,456d4 <_malloc_r+0x610>
   455ac:	00c01504 	movi	r3,84
   455b0:	18806e36 	bltu	r3,r2,4576c <_malloc_r+0x6a8>
   455b4:	8804d33a 	srli	r2,r17,12
   455b8:	12001bc4 	addi	r8,r2,111
   455bc:	11c01b84 	addi	r7,r2,110
   455c0:	4209883a 	add	r4,r8,r8
   455c4:	003edd06 	br	4513c <__alt_data_end+0xfffe8d7c>
   455c8:	3804d27a 	srli	r2,r7,9
   455cc:	00c00104 	movi	r3,4
   455d0:	1880442e 	bgeu	r3,r2,456e4 <_malloc_r+0x620>
   455d4:	00c00504 	movi	r3,20
   455d8:	18808136 	bltu	r3,r2,457e0 <_malloc_r+0x71c>
   455dc:	11401704 	addi	r5,r2,92
   455e0:	10c016c4 	addi	r3,r2,91
   455e4:	294b883a 	add	r5,r5,r5
   455e8:	294b883a 	add	r5,r5,r5
   455ec:	294b883a 	add	r5,r5,r5
   455f0:	994b883a 	add	r5,r19,r5
   455f4:	28800017 	ldw	r2,0(r5)
   455f8:	01800174 	movhi	r6,5
   455fc:	297ffe04 	addi	r5,r5,-8
   45600:	31807304 	addi	r6,r6,460
   45604:	28806526 	beq	r5,r2,4579c <_malloc_r+0x6d8>
   45608:	01bfff04 	movi	r6,-4
   4560c:	10c00117 	ldw	r3,4(r2)
   45610:	1986703a 	and	r3,r3,r6
   45614:	38c0022e 	bgeu	r7,r3,45620 <_malloc_r+0x55c>
   45618:	10800217 	ldw	r2,8(r2)
   4561c:	28bffb1e 	bne	r5,r2,4560c <__alt_data_end+0xfffe924c>
   45620:	11400317 	ldw	r5,12(r2)
   45624:	98c00117 	ldw	r3,4(r19)
   45628:	81400315 	stw	r5,12(r16)
   4562c:	80800215 	stw	r2,8(r16)
   45630:	2c000215 	stw	r16,8(r5)
   45634:	14000315 	stw	r16,12(r2)
   45638:	003ef806 	br	4521c <__alt_data_end+0xfffe8e5c>
   4563c:	88c00054 	ori	r3,r17,1
   45640:	80c00115 	stw	r3,4(r16)
   45644:	8463883a 	add	r17,r16,r17
   45648:	34400515 	stw	r17,20(r6)
   4564c:	34400415 	stw	r17,16(r6)
   45650:	10c00054 	ori	r3,r2,1
   45654:	8a000315 	stw	r8,12(r17)
   45658:	8a000215 	stw	r8,8(r17)
   4565c:	88c00115 	stw	r3,4(r17)
   45660:	88a3883a 	add	r17,r17,r2
   45664:	88800015 	stw	r2,0(r17)
   45668:	9009883a 	mov	r4,r18
   4566c:	004d8200 	call	4d820 <__malloc_unlock>
   45670:	80800204 	addi	r2,r16,8
   45674:	003f3c06 	br	45368 <__alt_data_end+0xfffe8fa8>
   45678:	30c00117 	ldw	r3,4(r6)
   4567c:	003ee706 	br	4521c <__alt_data_end+0xfffe8e5c>
   45680:	5ac00044 	addi	r11,r11,1
   45684:	588000cc 	andi	r2,r11,3
   45688:	31800204 	addi	r6,r6,8
   4568c:	103efd1e 	bne	r2,zero,45284 <__alt_data_end+0xfffe8ec4>
   45690:	00002406 	br	45724 <_malloc_r+0x660>
   45694:	14000317 	ldw	r16,12(r2)
   45698:	143f251e 	bne	r2,r16,45330 <__alt_data_end+0xfffe8f70>
   4569c:	21000084 	addi	r4,r4,2
   456a0:	003ebc06 	br	45194 <__alt_data_end+0xfffe8dd4>
   456a4:	8085883a 	add	r2,r16,r2
   456a8:	10c00117 	ldw	r3,4(r2)
   456ac:	81000317 	ldw	r4,12(r16)
   456b0:	81400217 	ldw	r5,8(r16)
   456b4:	18c00054 	ori	r3,r3,1
   456b8:	10c00115 	stw	r3,4(r2)
   456bc:	29000315 	stw	r4,12(r5)
   456c0:	21400215 	stw	r5,8(r4)
   456c4:	9009883a 	mov	r4,r18
   456c8:	004d8200 	call	4d820 <__malloc_unlock>
   456cc:	80800204 	addi	r2,r16,8
   456d0:	003f2506 	br	45368 <__alt_data_end+0xfffe8fa8>
   456d4:	12001704 	addi	r8,r2,92
   456d8:	11c016c4 	addi	r7,r2,91
   456dc:	4209883a 	add	r4,r8,r8
   456e0:	003e9606 	br	4513c <__alt_data_end+0xfffe8d7c>
   456e4:	3804d1ba 	srli	r2,r7,6
   456e8:	11400e44 	addi	r5,r2,57
   456ec:	10c00e04 	addi	r3,r2,56
   456f0:	294b883a 	add	r5,r5,r5
   456f4:	003fbc06 	br	455e8 <__alt_data_end+0xfffe9228>
   456f8:	84ff5926 	beq	r16,r19,45460 <__alt_data_end+0xfffe90a0>
   456fc:	00800174 	movhi	r2,5
   45700:	10807304 	addi	r2,r2,460
   45704:	14000217 	ldw	r16,8(r2)
   45708:	00bfff04 	movi	r2,-4
   4570c:	80c00117 	ldw	r3,4(r16)
   45710:	1886703a 	and	r3,r3,r2
   45714:	003f9106 	br	4555c <__alt_data_end+0xfffe919c>
   45718:	60800217 	ldw	r2,8(r12)
   4571c:	213fffc4 	addi	r4,r4,-1
   45720:	1300651e 	bne	r2,r12,458b8 <_malloc_r+0x7f4>
   45724:	208000cc 	andi	r2,r4,3
   45728:	633ffe04 	addi	r12,r12,-8
   4572c:	103ffa1e 	bne	r2,zero,45718 <__alt_data_end+0xfffe9358>
   45730:	98800117 	ldw	r2,4(r19)
   45734:	0146303a 	nor	r3,zero,r5
   45738:	1884703a 	and	r2,r3,r2
   4573c:	98800115 	stw	r2,4(r19)
   45740:	294b883a 	add	r5,r5,r5
   45744:	117f2836 	bltu	r2,r5,453e8 <__alt_data_end+0xfffe9028>
   45748:	283f2726 	beq	r5,zero,453e8 <__alt_data_end+0xfffe9028>
   4574c:	2886703a 	and	r3,r5,r2
   45750:	5809883a 	mov	r4,r11
   45754:	183ec31e 	bne	r3,zero,45264 <__alt_data_end+0xfffe8ea4>
   45758:	294b883a 	add	r5,r5,r5
   4575c:	2886703a 	and	r3,r5,r2
   45760:	21000104 	addi	r4,r4,4
   45764:	183ffc26 	beq	r3,zero,45758 <__alt_data_end+0xfffe9398>
   45768:	003ebe06 	br	45264 <__alt_data_end+0xfffe8ea4>
   4576c:	00c05504 	movi	r3,340
   45770:	18801236 	bltu	r3,r2,457bc <_malloc_r+0x6f8>
   45774:	8804d3fa 	srli	r2,r17,15
   45778:	12001e04 	addi	r8,r2,120
   4577c:	11c01dc4 	addi	r7,r2,119
   45780:	4209883a 	add	r4,r8,r8
   45784:	003e6d06 	br	4513c <__alt_data_end+0xfffe8d7c>
   45788:	00c40004 	movi	r3,4096
   4578c:	003f4606 	br	454a8 <__alt_data_end+0xfffe90e8>
   45790:	00800044 	movi	r2,1
   45794:	a0800115 	stw	r2,4(r20)
   45798:	003f7406 	br	4556c <__alt_data_end+0xfffe91ac>
   4579c:	1805d0ba 	srai	r2,r3,2
   457a0:	01c00044 	movi	r7,1
   457a4:	30c00117 	ldw	r3,4(r6)
   457a8:	388e983a 	sll	r7,r7,r2
   457ac:	2805883a 	mov	r2,r5
   457b0:	38c6b03a 	or	r3,r7,r3
   457b4:	30c00115 	stw	r3,4(r6)
   457b8:	003f9b06 	br	45628 <__alt_data_end+0xfffe9268>
   457bc:	00c15504 	movi	r3,1364
   457c0:	18801a36 	bltu	r3,r2,4582c <_malloc_r+0x768>
   457c4:	8804d4ba 	srli	r2,r17,18
   457c8:	12001f44 	addi	r8,r2,125
   457cc:	11c01f04 	addi	r7,r2,124
   457d0:	4209883a 	add	r4,r8,r8
   457d4:	003e5906 	br	4513c <__alt_data_end+0xfffe8d7c>
   457d8:	ad400404 	addi	r21,r21,16
   457dc:	003f1706 	br	4543c <__alt_data_end+0xfffe907c>
   457e0:	00c01504 	movi	r3,84
   457e4:	18802336 	bltu	r3,r2,45874 <_malloc_r+0x7b0>
   457e8:	3804d33a 	srli	r2,r7,12
   457ec:	11401bc4 	addi	r5,r2,111
   457f0:	10c01b84 	addi	r3,r2,110
   457f4:	294b883a 	add	r5,r5,r5
   457f8:	003f7b06 	br	455e8 <__alt_data_end+0xfffe9228>
   457fc:	9c000217 	ldw	r16,8(r19)
   45800:	00bfff04 	movi	r2,-4
   45804:	80c00117 	ldw	r3,4(r16)
   45808:	1886703a 	and	r3,r3,r2
   4580c:	003f5306 	br	4555c <__alt_data_end+0xfffe919c>
   45810:	3083ffcc 	andi	r2,r6,4095
   45814:	103f181e 	bne	r2,zero,45478 <__alt_data_end+0xfffe90b8>
   45818:	99000217 	ldw	r4,8(r19)
   4581c:	b545883a 	add	r2,r22,r21
   45820:	10800054 	ori	r2,r2,1
   45824:	20800115 	stw	r2,4(r4)
   45828:	003f3e06 	br	45524 <__alt_data_end+0xfffe9164>
   4582c:	01003f84 	movi	r4,254
   45830:	02001fc4 	movi	r8,127
   45834:	01c01f84 	movi	r7,126
   45838:	003e4006 	br	4513c <__alt_data_end+0xfffe8d7c>
   4583c:	00800174 	movhi	r2,5
   45840:	1085fd04 	addi	r2,r2,6132
   45844:	15000015 	stw	r20,0(r2)
   45848:	003f1106 	br	45490 <__alt_data_end+0xfffe90d0>
   4584c:	00800044 	movi	r2,1
   45850:	002b883a 	mov	r21,zero
   45854:	003f1f06 	br	454d4 <__alt_data_end+0xfffe9114>
   45858:	81400204 	addi	r5,r16,8
   4585c:	9009883a 	mov	r4,r18
   45860:	00449940 	call	44994 <_free_r>
   45864:	00800174 	movhi	r2,5
   45868:	108d2304 	addi	r2,r2,13452
   4586c:	10c00017 	ldw	r3,0(r2)
   45870:	003f2c06 	br	45524 <__alt_data_end+0xfffe9164>
   45874:	00c05504 	movi	r3,340
   45878:	18800536 	bltu	r3,r2,45890 <_malloc_r+0x7cc>
   4587c:	3804d3fa 	srli	r2,r7,15
   45880:	11401e04 	addi	r5,r2,120
   45884:	10c01dc4 	addi	r3,r2,119
   45888:	294b883a 	add	r5,r5,r5
   4588c:	003f5606 	br	455e8 <__alt_data_end+0xfffe9228>
   45890:	00c15504 	movi	r3,1364
   45894:	18800536 	bltu	r3,r2,458ac <_malloc_r+0x7e8>
   45898:	3804d4ba 	srli	r2,r7,18
   4589c:	11401f44 	addi	r5,r2,125
   458a0:	10c01f04 	addi	r3,r2,124
   458a4:	294b883a 	add	r5,r5,r5
   458a8:	003f4f06 	br	455e8 <__alt_data_end+0xfffe9228>
   458ac:	01403f84 	movi	r5,254
   458b0:	00c01f84 	movi	r3,126
   458b4:	003f4c06 	br	455e8 <__alt_data_end+0xfffe9228>
   458b8:	98800117 	ldw	r2,4(r19)
   458bc:	003fa006 	br	45740 <__alt_data_end+0xfffe9380>
   458c0:	8808d0fa 	srli	r4,r17,3
   458c4:	20800044 	addi	r2,r4,1
   458c8:	1085883a 	add	r2,r2,r2
   458cc:	003e9006 	br	45310 <__alt_data_end+0xfffe8f50>

000458d0 <memchr>:
   458d0:	208000cc 	andi	r2,r4,3
   458d4:	280f883a 	mov	r7,r5
   458d8:	10003426 	beq	r2,zero,459ac <memchr+0xdc>
   458dc:	30bfffc4 	addi	r2,r6,-1
   458e0:	30001a26 	beq	r6,zero,4594c <memchr+0x7c>
   458e4:	20c00003 	ldbu	r3,0(r4)
   458e8:	29803fcc 	andi	r6,r5,255
   458ec:	30c0051e 	bne	r6,r3,45904 <memchr+0x34>
   458f0:	00001806 	br	45954 <memchr+0x84>
   458f4:	10001526 	beq	r2,zero,4594c <memchr+0x7c>
   458f8:	20c00003 	ldbu	r3,0(r4)
   458fc:	10bfffc4 	addi	r2,r2,-1
   45900:	30c01426 	beq	r6,r3,45954 <memchr+0x84>
   45904:	21000044 	addi	r4,r4,1
   45908:	20c000cc 	andi	r3,r4,3
   4590c:	183ff91e 	bne	r3,zero,458f4 <__alt_data_end+0xfffe9534>
   45910:	020000c4 	movi	r8,3
   45914:	40801136 	bltu	r8,r2,4595c <memchr+0x8c>
   45918:	10000c26 	beq	r2,zero,4594c <memchr+0x7c>
   4591c:	20c00003 	ldbu	r3,0(r4)
   45920:	29403fcc 	andi	r5,r5,255
   45924:	28c00b26 	beq	r5,r3,45954 <memchr+0x84>
   45928:	20c00044 	addi	r3,r4,1
   4592c:	39803fcc 	andi	r6,r7,255
   45930:	2089883a 	add	r4,r4,r2
   45934:	00000306 	br	45944 <memchr+0x74>
   45938:	18c00044 	addi	r3,r3,1
   4593c:	197fffc3 	ldbu	r5,-1(r3)
   45940:	31400526 	beq	r6,r5,45958 <memchr+0x88>
   45944:	1805883a 	mov	r2,r3
   45948:	20fffb1e 	bne	r4,r3,45938 <__alt_data_end+0xfffe9578>
   4594c:	0005883a 	mov	r2,zero
   45950:	f800283a 	ret
   45954:	2005883a 	mov	r2,r4
   45958:	f800283a 	ret
   4595c:	28c03fcc 	andi	r3,r5,255
   45960:	1812923a 	slli	r9,r3,8
   45964:	02ffbff4 	movhi	r11,65279
   45968:	02a02074 	movhi	r10,32897
   4596c:	48d2b03a 	or	r9,r9,r3
   45970:	4806943a 	slli	r3,r9,16
   45974:	5affbfc4 	addi	r11,r11,-257
   45978:	52a02004 	addi	r10,r10,-32640
   4597c:	48d2b03a 	or	r9,r9,r3
   45980:	20c00017 	ldw	r3,0(r4)
   45984:	48c6f03a 	xor	r3,r9,r3
   45988:	1acd883a 	add	r6,r3,r11
   4598c:	00c6303a 	nor	r3,zero,r3
   45990:	30c6703a 	and	r3,r6,r3
   45994:	1a86703a 	and	r3,r3,r10
   45998:	183fe01e 	bne	r3,zero,4591c <__alt_data_end+0xfffe955c>
   4599c:	10bfff04 	addi	r2,r2,-4
   459a0:	21000104 	addi	r4,r4,4
   459a4:	40bff636 	bltu	r8,r2,45980 <__alt_data_end+0xfffe95c0>
   459a8:	003fdb06 	br	45918 <__alt_data_end+0xfffe9558>
   459ac:	3005883a 	mov	r2,r6
   459b0:	003fd706 	br	45910 <__alt_data_end+0xfffe9550>

000459b4 <memcpy>:
   459b4:	defffd04 	addi	sp,sp,-12
   459b8:	dfc00215 	stw	ra,8(sp)
   459bc:	dc400115 	stw	r17,4(sp)
   459c0:	dc000015 	stw	r16,0(sp)
   459c4:	00c003c4 	movi	r3,15
   459c8:	2005883a 	mov	r2,r4
   459cc:	1980452e 	bgeu	r3,r6,45ae4 <memcpy+0x130>
   459d0:	2906b03a 	or	r3,r5,r4
   459d4:	18c000cc 	andi	r3,r3,3
   459d8:	1800441e 	bne	r3,zero,45aec <memcpy+0x138>
   459dc:	347ffc04 	addi	r17,r6,-16
   459e0:	8822d13a 	srli	r17,r17,4
   459e4:	28c00104 	addi	r3,r5,4
   459e8:	23400104 	addi	r13,r4,4
   459ec:	8820913a 	slli	r16,r17,4
   459f0:	2b000204 	addi	r12,r5,8
   459f4:	22c00204 	addi	r11,r4,8
   459f8:	84000504 	addi	r16,r16,20
   459fc:	2a800304 	addi	r10,r5,12
   45a00:	22400304 	addi	r9,r4,12
   45a04:	2c21883a 	add	r16,r5,r16
   45a08:	2811883a 	mov	r8,r5
   45a0c:	200f883a 	mov	r7,r4
   45a10:	41000017 	ldw	r4,0(r8)
   45a14:	1fc00017 	ldw	ra,0(r3)
   45a18:	63c00017 	ldw	r15,0(r12)
   45a1c:	39000015 	stw	r4,0(r7)
   45a20:	53800017 	ldw	r14,0(r10)
   45a24:	6fc00015 	stw	ra,0(r13)
   45a28:	5bc00015 	stw	r15,0(r11)
   45a2c:	4b800015 	stw	r14,0(r9)
   45a30:	18c00404 	addi	r3,r3,16
   45a34:	39c00404 	addi	r7,r7,16
   45a38:	42000404 	addi	r8,r8,16
   45a3c:	6b400404 	addi	r13,r13,16
   45a40:	63000404 	addi	r12,r12,16
   45a44:	5ac00404 	addi	r11,r11,16
   45a48:	52800404 	addi	r10,r10,16
   45a4c:	4a400404 	addi	r9,r9,16
   45a50:	1c3fef1e 	bne	r3,r16,45a10 <__alt_data_end+0xfffe9650>
   45a54:	89c00044 	addi	r7,r17,1
   45a58:	380e913a 	slli	r7,r7,4
   45a5c:	310003cc 	andi	r4,r6,15
   45a60:	02c000c4 	movi	r11,3
   45a64:	11c7883a 	add	r3,r2,r7
   45a68:	29cb883a 	add	r5,r5,r7
   45a6c:	5900212e 	bgeu	r11,r4,45af4 <memcpy+0x140>
   45a70:	1813883a 	mov	r9,r3
   45a74:	2811883a 	mov	r8,r5
   45a78:	200f883a 	mov	r7,r4
   45a7c:	42800017 	ldw	r10,0(r8)
   45a80:	4a400104 	addi	r9,r9,4
   45a84:	39ffff04 	addi	r7,r7,-4
   45a88:	4abfff15 	stw	r10,-4(r9)
   45a8c:	42000104 	addi	r8,r8,4
   45a90:	59fffa36 	bltu	r11,r7,45a7c <__alt_data_end+0xfffe96bc>
   45a94:	213fff04 	addi	r4,r4,-4
   45a98:	2008d0ba 	srli	r4,r4,2
   45a9c:	318000cc 	andi	r6,r6,3
   45aa0:	21000044 	addi	r4,r4,1
   45aa4:	2109883a 	add	r4,r4,r4
   45aa8:	2109883a 	add	r4,r4,r4
   45aac:	1907883a 	add	r3,r3,r4
   45ab0:	290b883a 	add	r5,r5,r4
   45ab4:	30000626 	beq	r6,zero,45ad0 <memcpy+0x11c>
   45ab8:	198d883a 	add	r6,r3,r6
   45abc:	29c00003 	ldbu	r7,0(r5)
   45ac0:	18c00044 	addi	r3,r3,1
   45ac4:	29400044 	addi	r5,r5,1
   45ac8:	19ffffc5 	stb	r7,-1(r3)
   45acc:	19bffb1e 	bne	r3,r6,45abc <__alt_data_end+0xfffe96fc>
   45ad0:	dfc00217 	ldw	ra,8(sp)
   45ad4:	dc400117 	ldw	r17,4(sp)
   45ad8:	dc000017 	ldw	r16,0(sp)
   45adc:	dec00304 	addi	sp,sp,12
   45ae0:	f800283a 	ret
   45ae4:	2007883a 	mov	r3,r4
   45ae8:	003ff206 	br	45ab4 <__alt_data_end+0xfffe96f4>
   45aec:	2007883a 	mov	r3,r4
   45af0:	003ff106 	br	45ab8 <__alt_data_end+0xfffe96f8>
   45af4:	200d883a 	mov	r6,r4
   45af8:	003fee06 	br	45ab4 <__alt_data_end+0xfffe96f4>

00045afc <memset>:
   45afc:	20c000cc 	andi	r3,r4,3
   45b00:	2005883a 	mov	r2,r4
   45b04:	18004426 	beq	r3,zero,45c18 <memset+0x11c>
   45b08:	31ffffc4 	addi	r7,r6,-1
   45b0c:	30004026 	beq	r6,zero,45c10 <memset+0x114>
   45b10:	2813883a 	mov	r9,r5
   45b14:	200d883a 	mov	r6,r4
   45b18:	2007883a 	mov	r3,r4
   45b1c:	00000406 	br	45b30 <memset+0x34>
   45b20:	3a3fffc4 	addi	r8,r7,-1
   45b24:	31800044 	addi	r6,r6,1
   45b28:	38003926 	beq	r7,zero,45c10 <memset+0x114>
   45b2c:	400f883a 	mov	r7,r8
   45b30:	18c00044 	addi	r3,r3,1
   45b34:	32400005 	stb	r9,0(r6)
   45b38:	1a0000cc 	andi	r8,r3,3
   45b3c:	403ff81e 	bne	r8,zero,45b20 <__alt_data_end+0xfffe9760>
   45b40:	010000c4 	movi	r4,3
   45b44:	21c02d2e 	bgeu	r4,r7,45bfc <memset+0x100>
   45b48:	29003fcc 	andi	r4,r5,255
   45b4c:	200c923a 	slli	r6,r4,8
   45b50:	3108b03a 	or	r4,r6,r4
   45b54:	200c943a 	slli	r6,r4,16
   45b58:	218cb03a 	or	r6,r4,r6
   45b5c:	010003c4 	movi	r4,15
   45b60:	21c0182e 	bgeu	r4,r7,45bc4 <memset+0xc8>
   45b64:	3b3ffc04 	addi	r12,r7,-16
   45b68:	6018d13a 	srli	r12,r12,4
   45b6c:	1a000104 	addi	r8,r3,4
   45b70:	1ac00204 	addi	r11,r3,8
   45b74:	6008913a 	slli	r4,r12,4
   45b78:	1a800304 	addi	r10,r3,12
   45b7c:	1813883a 	mov	r9,r3
   45b80:	21000504 	addi	r4,r4,20
   45b84:	1909883a 	add	r4,r3,r4
   45b88:	49800015 	stw	r6,0(r9)
   45b8c:	41800015 	stw	r6,0(r8)
   45b90:	59800015 	stw	r6,0(r11)
   45b94:	51800015 	stw	r6,0(r10)
   45b98:	42000404 	addi	r8,r8,16
   45b9c:	4a400404 	addi	r9,r9,16
   45ba0:	5ac00404 	addi	r11,r11,16
   45ba4:	52800404 	addi	r10,r10,16
   45ba8:	413ff71e 	bne	r8,r4,45b88 <__alt_data_end+0xfffe97c8>
   45bac:	63000044 	addi	r12,r12,1
   45bb0:	6018913a 	slli	r12,r12,4
   45bb4:	39c003cc 	andi	r7,r7,15
   45bb8:	010000c4 	movi	r4,3
   45bbc:	1b07883a 	add	r3,r3,r12
   45bc0:	21c00e2e 	bgeu	r4,r7,45bfc <memset+0x100>
   45bc4:	1813883a 	mov	r9,r3
   45bc8:	3811883a 	mov	r8,r7
   45bcc:	010000c4 	movi	r4,3
   45bd0:	49800015 	stw	r6,0(r9)
   45bd4:	423fff04 	addi	r8,r8,-4
   45bd8:	4a400104 	addi	r9,r9,4
   45bdc:	223ffc36 	bltu	r4,r8,45bd0 <__alt_data_end+0xfffe9810>
   45be0:	393fff04 	addi	r4,r7,-4
   45be4:	2008d0ba 	srli	r4,r4,2
   45be8:	39c000cc 	andi	r7,r7,3
   45bec:	21000044 	addi	r4,r4,1
   45bf0:	2109883a 	add	r4,r4,r4
   45bf4:	2109883a 	add	r4,r4,r4
   45bf8:	1907883a 	add	r3,r3,r4
   45bfc:	38000526 	beq	r7,zero,45c14 <memset+0x118>
   45c00:	19cf883a 	add	r7,r3,r7
   45c04:	19400005 	stb	r5,0(r3)
   45c08:	18c00044 	addi	r3,r3,1
   45c0c:	38fffd1e 	bne	r7,r3,45c04 <__alt_data_end+0xfffe9844>
   45c10:	f800283a 	ret
   45c14:	f800283a 	ret
   45c18:	2007883a 	mov	r3,r4
   45c1c:	300f883a 	mov	r7,r6
   45c20:	003fc706 	br	45b40 <__alt_data_end+0xfffe9780>

00045c24 <_Balloc>:
   45c24:	20801317 	ldw	r2,76(r4)
   45c28:	defffc04 	addi	sp,sp,-16
   45c2c:	dc400115 	stw	r17,4(sp)
   45c30:	dc000015 	stw	r16,0(sp)
   45c34:	dfc00315 	stw	ra,12(sp)
   45c38:	dc800215 	stw	r18,8(sp)
   45c3c:	2023883a 	mov	r17,r4
   45c40:	2821883a 	mov	r16,r5
   45c44:	10000f26 	beq	r2,zero,45c84 <_Balloc+0x60>
   45c48:	8407883a 	add	r3,r16,r16
   45c4c:	18c7883a 	add	r3,r3,r3
   45c50:	10c7883a 	add	r3,r2,r3
   45c54:	18800017 	ldw	r2,0(r3)
   45c58:	10001126 	beq	r2,zero,45ca0 <_Balloc+0x7c>
   45c5c:	11000017 	ldw	r4,0(r2)
   45c60:	19000015 	stw	r4,0(r3)
   45c64:	10000415 	stw	zero,16(r2)
   45c68:	10000315 	stw	zero,12(r2)
   45c6c:	dfc00317 	ldw	ra,12(sp)
   45c70:	dc800217 	ldw	r18,8(sp)
   45c74:	dc400117 	ldw	r17,4(sp)
   45c78:	dc000017 	ldw	r16,0(sp)
   45c7c:	dec00404 	addi	sp,sp,16
   45c80:	f800283a 	ret
   45c84:	01800844 	movi	r6,33
   45c88:	01400104 	movi	r5,4
   45c8c:	00488000 	call	48800 <_calloc_r>
   45c90:	88801315 	stw	r2,76(r17)
   45c94:	103fec1e 	bne	r2,zero,45c48 <__alt_data_end+0xfffe9888>
   45c98:	0005883a 	mov	r2,zero
   45c9c:	003ff306 	br	45c6c <__alt_data_end+0xfffe98ac>
   45ca0:	01400044 	movi	r5,1
   45ca4:	2c24983a 	sll	r18,r5,r16
   45ca8:	8809883a 	mov	r4,r17
   45cac:	91800144 	addi	r6,r18,5
   45cb0:	318d883a 	add	r6,r6,r6
   45cb4:	318d883a 	add	r6,r6,r6
   45cb8:	00488000 	call	48800 <_calloc_r>
   45cbc:	103ff626 	beq	r2,zero,45c98 <__alt_data_end+0xfffe98d8>
   45cc0:	14000115 	stw	r16,4(r2)
   45cc4:	14800215 	stw	r18,8(r2)
   45cc8:	003fe606 	br	45c64 <__alt_data_end+0xfffe98a4>

00045ccc <_Bfree>:
   45ccc:	28000826 	beq	r5,zero,45cf0 <_Bfree+0x24>
   45cd0:	28c00117 	ldw	r3,4(r5)
   45cd4:	20801317 	ldw	r2,76(r4)
   45cd8:	18c7883a 	add	r3,r3,r3
   45cdc:	18c7883a 	add	r3,r3,r3
   45ce0:	10c5883a 	add	r2,r2,r3
   45ce4:	10c00017 	ldw	r3,0(r2)
   45ce8:	28c00015 	stw	r3,0(r5)
   45cec:	11400015 	stw	r5,0(r2)
   45cf0:	f800283a 	ret

00045cf4 <__multadd>:
   45cf4:	defff704 	addi	sp,sp,-36
   45cf8:	dc800215 	stw	r18,8(sp)
   45cfc:	2c800417 	ldw	r18,16(r5)
   45d00:	dd800615 	stw	r22,24(sp)
   45d04:	dd400515 	stw	r21,20(sp)
   45d08:	dd000415 	stw	r20,16(sp)
   45d0c:	dcc00315 	stw	r19,12(sp)
   45d10:	dc400115 	stw	r17,4(sp)
   45d14:	dc000015 	stw	r16,0(sp)
   45d18:	dfc00815 	stw	ra,32(sp)
   45d1c:	ddc00715 	stw	r23,28(sp)
   45d20:	2827883a 	mov	r19,r5
   45d24:	2029883a 	mov	r20,r4
   45d28:	3023883a 	mov	r17,r6
   45d2c:	3821883a 	mov	r16,r7
   45d30:	2d400504 	addi	r21,r5,20
   45d34:	002d883a 	mov	r22,zero
   45d38:	adc00017 	ldw	r23,0(r21)
   45d3c:	880b883a 	mov	r5,r17
   45d40:	ad400104 	addi	r21,r21,4
   45d44:	b93fffcc 	andi	r4,r23,65535
   45d48:	004a9940 	call	4a994 <__mulsi3>
   45d4c:	b808d43a 	srli	r4,r23,16
   45d50:	880b883a 	mov	r5,r17
   45d54:	1421883a 	add	r16,r2,r16
   45d58:	004a9940 	call	4a994 <__mulsi3>
   45d5c:	800ed43a 	srli	r7,r16,16
   45d60:	80ffffcc 	andi	r3,r16,65535
   45d64:	b5800044 	addi	r22,r22,1
   45d68:	11c5883a 	add	r2,r2,r7
   45d6c:	100e943a 	slli	r7,r2,16
   45d70:	1020d43a 	srli	r16,r2,16
   45d74:	38c7883a 	add	r3,r7,r3
   45d78:	a8ffff15 	stw	r3,-4(r21)
   45d7c:	b4bfee16 	blt	r22,r18,45d38 <__alt_data_end+0xfffe9978>
   45d80:	80000926 	beq	r16,zero,45da8 <__multadd+0xb4>
   45d84:	98800217 	ldw	r2,8(r19)
   45d88:	9080130e 	bge	r18,r2,45dd8 <__multadd+0xe4>
   45d8c:	90800144 	addi	r2,r18,5
   45d90:	1085883a 	add	r2,r2,r2
   45d94:	1085883a 	add	r2,r2,r2
   45d98:	9885883a 	add	r2,r19,r2
   45d9c:	14000015 	stw	r16,0(r2)
   45da0:	94800044 	addi	r18,r18,1
   45da4:	9c800415 	stw	r18,16(r19)
   45da8:	9805883a 	mov	r2,r19
   45dac:	dfc00817 	ldw	ra,32(sp)
   45db0:	ddc00717 	ldw	r23,28(sp)
   45db4:	dd800617 	ldw	r22,24(sp)
   45db8:	dd400517 	ldw	r21,20(sp)
   45dbc:	dd000417 	ldw	r20,16(sp)
   45dc0:	dcc00317 	ldw	r19,12(sp)
   45dc4:	dc800217 	ldw	r18,8(sp)
   45dc8:	dc400117 	ldw	r17,4(sp)
   45dcc:	dc000017 	ldw	r16,0(sp)
   45dd0:	dec00904 	addi	sp,sp,36
   45dd4:	f800283a 	ret
   45dd8:	99400117 	ldw	r5,4(r19)
   45ddc:	a009883a 	mov	r4,r20
   45de0:	29400044 	addi	r5,r5,1
   45de4:	0045c240 	call	45c24 <_Balloc>
   45de8:	99800417 	ldw	r6,16(r19)
   45dec:	99400304 	addi	r5,r19,12
   45df0:	11000304 	addi	r4,r2,12
   45df4:	31800084 	addi	r6,r6,2
   45df8:	318d883a 	add	r6,r6,r6
   45dfc:	318d883a 	add	r6,r6,r6
   45e00:	1023883a 	mov	r17,r2
   45e04:	00459b40 	call	459b4 <memcpy>
   45e08:	98000a26 	beq	r19,zero,45e34 <__multadd+0x140>
   45e0c:	98c00117 	ldw	r3,4(r19)
   45e10:	a0801317 	ldw	r2,76(r20)
   45e14:	18c7883a 	add	r3,r3,r3
   45e18:	18c7883a 	add	r3,r3,r3
   45e1c:	10c5883a 	add	r2,r2,r3
   45e20:	10c00017 	ldw	r3,0(r2)
   45e24:	98c00015 	stw	r3,0(r19)
   45e28:	14c00015 	stw	r19,0(r2)
   45e2c:	8827883a 	mov	r19,r17
   45e30:	003fd606 	br	45d8c <__alt_data_end+0xfffe99cc>
   45e34:	8827883a 	mov	r19,r17
   45e38:	003fd406 	br	45d8c <__alt_data_end+0xfffe99cc>

00045e3c <__s2b>:
   45e3c:	defff904 	addi	sp,sp,-28
   45e40:	dc400115 	stw	r17,4(sp)
   45e44:	dc000015 	stw	r16,0(sp)
   45e48:	2023883a 	mov	r17,r4
   45e4c:	2821883a 	mov	r16,r5
   45e50:	39000204 	addi	r4,r7,8
   45e54:	01400244 	movi	r5,9
   45e58:	dcc00315 	stw	r19,12(sp)
   45e5c:	dc800215 	stw	r18,8(sp)
   45e60:	dfc00615 	stw	ra,24(sp)
   45e64:	dd400515 	stw	r21,20(sp)
   45e68:	dd000415 	stw	r20,16(sp)
   45e6c:	3825883a 	mov	r18,r7
   45e70:	3027883a 	mov	r19,r6
   45e74:	004a7e00 	call	4a7e0 <__divsi3>
   45e78:	00c00044 	movi	r3,1
   45e7c:	000b883a 	mov	r5,zero
   45e80:	1880030e 	bge	r3,r2,45e90 <__s2b+0x54>
   45e84:	18c7883a 	add	r3,r3,r3
   45e88:	29400044 	addi	r5,r5,1
   45e8c:	18bffd16 	blt	r3,r2,45e84 <__alt_data_end+0xfffe9ac4>
   45e90:	8809883a 	mov	r4,r17
   45e94:	0045c240 	call	45c24 <_Balloc>
   45e98:	d8c00717 	ldw	r3,28(sp)
   45e9c:	10c00515 	stw	r3,20(r2)
   45ea0:	00c00044 	movi	r3,1
   45ea4:	10c00415 	stw	r3,16(r2)
   45ea8:	00c00244 	movi	r3,9
   45eac:	1cc0210e 	bge	r3,r19,45f34 <__s2b+0xf8>
   45eb0:	80eb883a 	add	r21,r16,r3
   45eb4:	a829883a 	mov	r20,r21
   45eb8:	84e1883a 	add	r16,r16,r19
   45ebc:	a1c00007 	ldb	r7,0(r20)
   45ec0:	01800284 	movi	r6,10
   45ec4:	a5000044 	addi	r20,r20,1
   45ec8:	100b883a 	mov	r5,r2
   45ecc:	39fff404 	addi	r7,r7,-48
   45ed0:	8809883a 	mov	r4,r17
   45ed4:	0045cf40 	call	45cf4 <__multadd>
   45ed8:	a43ff81e 	bne	r20,r16,45ebc <__alt_data_end+0xfffe9afc>
   45edc:	ace1883a 	add	r16,r21,r19
   45ee0:	843ffe04 	addi	r16,r16,-8
   45ee4:	9c800a0e 	bge	r19,r18,45f10 <__s2b+0xd4>
   45ee8:	94e5c83a 	sub	r18,r18,r19
   45eec:	84a5883a 	add	r18,r16,r18
   45ef0:	81c00007 	ldb	r7,0(r16)
   45ef4:	01800284 	movi	r6,10
   45ef8:	84000044 	addi	r16,r16,1
   45efc:	100b883a 	mov	r5,r2
   45f00:	39fff404 	addi	r7,r7,-48
   45f04:	8809883a 	mov	r4,r17
   45f08:	0045cf40 	call	45cf4 <__multadd>
   45f0c:	84bff81e 	bne	r16,r18,45ef0 <__alt_data_end+0xfffe9b30>
   45f10:	dfc00617 	ldw	ra,24(sp)
   45f14:	dd400517 	ldw	r21,20(sp)
   45f18:	dd000417 	ldw	r20,16(sp)
   45f1c:	dcc00317 	ldw	r19,12(sp)
   45f20:	dc800217 	ldw	r18,8(sp)
   45f24:	dc400117 	ldw	r17,4(sp)
   45f28:	dc000017 	ldw	r16,0(sp)
   45f2c:	dec00704 	addi	sp,sp,28
   45f30:	f800283a 	ret
   45f34:	84000284 	addi	r16,r16,10
   45f38:	1827883a 	mov	r19,r3
   45f3c:	003fe906 	br	45ee4 <__alt_data_end+0xfffe9b24>

00045f40 <__hi0bits>:
   45f40:	20bfffec 	andhi	r2,r4,65535
   45f44:	1000141e 	bne	r2,zero,45f98 <__hi0bits+0x58>
   45f48:	2008943a 	slli	r4,r4,16
   45f4c:	00800404 	movi	r2,16
   45f50:	20ffc02c 	andhi	r3,r4,65280
   45f54:	1800021e 	bne	r3,zero,45f60 <__hi0bits+0x20>
   45f58:	2008923a 	slli	r4,r4,8
   45f5c:	10800204 	addi	r2,r2,8
   45f60:	20fc002c 	andhi	r3,r4,61440
   45f64:	1800021e 	bne	r3,zero,45f70 <__hi0bits+0x30>
   45f68:	2008913a 	slli	r4,r4,4
   45f6c:	10800104 	addi	r2,r2,4
   45f70:	20f0002c 	andhi	r3,r4,49152
   45f74:	1800031e 	bne	r3,zero,45f84 <__hi0bits+0x44>
   45f78:	2109883a 	add	r4,r4,r4
   45f7c:	10800084 	addi	r2,r2,2
   45f80:	2109883a 	add	r4,r4,r4
   45f84:	20000316 	blt	r4,zero,45f94 <__hi0bits+0x54>
   45f88:	2110002c 	andhi	r4,r4,16384
   45f8c:	2000041e 	bne	r4,zero,45fa0 <__hi0bits+0x60>
   45f90:	00800804 	movi	r2,32
   45f94:	f800283a 	ret
   45f98:	0005883a 	mov	r2,zero
   45f9c:	003fec06 	br	45f50 <__alt_data_end+0xfffe9b90>
   45fa0:	10800044 	addi	r2,r2,1
   45fa4:	f800283a 	ret

00045fa8 <__lo0bits>:
   45fa8:	20c00017 	ldw	r3,0(r4)
   45fac:	188001cc 	andi	r2,r3,7
   45fb0:	10000826 	beq	r2,zero,45fd4 <__lo0bits+0x2c>
   45fb4:	1880004c 	andi	r2,r3,1
   45fb8:	1000211e 	bne	r2,zero,46040 <__lo0bits+0x98>
   45fbc:	1880008c 	andi	r2,r3,2
   45fc0:	1000211e 	bne	r2,zero,46048 <__lo0bits+0xa0>
   45fc4:	1806d0ba 	srli	r3,r3,2
   45fc8:	00800084 	movi	r2,2
   45fcc:	20c00015 	stw	r3,0(r4)
   45fd0:	f800283a 	ret
   45fd4:	18bfffcc 	andi	r2,r3,65535
   45fd8:	10001326 	beq	r2,zero,46028 <__lo0bits+0x80>
   45fdc:	0005883a 	mov	r2,zero
   45fe0:	19403fcc 	andi	r5,r3,255
   45fe4:	2800021e 	bne	r5,zero,45ff0 <__lo0bits+0x48>
   45fe8:	1806d23a 	srli	r3,r3,8
   45fec:	10800204 	addi	r2,r2,8
   45ff0:	194003cc 	andi	r5,r3,15
   45ff4:	2800021e 	bne	r5,zero,46000 <__lo0bits+0x58>
   45ff8:	1806d13a 	srli	r3,r3,4
   45ffc:	10800104 	addi	r2,r2,4
   46000:	194000cc 	andi	r5,r3,3
   46004:	2800021e 	bne	r5,zero,46010 <__lo0bits+0x68>
   46008:	1806d0ba 	srli	r3,r3,2
   4600c:	10800084 	addi	r2,r2,2
   46010:	1940004c 	andi	r5,r3,1
   46014:	2800081e 	bne	r5,zero,46038 <__lo0bits+0x90>
   46018:	1806d07a 	srli	r3,r3,1
   4601c:	1800051e 	bne	r3,zero,46034 <__lo0bits+0x8c>
   46020:	00800804 	movi	r2,32
   46024:	f800283a 	ret
   46028:	1806d43a 	srli	r3,r3,16
   4602c:	00800404 	movi	r2,16
   46030:	003feb06 	br	45fe0 <__alt_data_end+0xfffe9c20>
   46034:	10800044 	addi	r2,r2,1
   46038:	20c00015 	stw	r3,0(r4)
   4603c:	f800283a 	ret
   46040:	0005883a 	mov	r2,zero
   46044:	f800283a 	ret
   46048:	1806d07a 	srli	r3,r3,1
   4604c:	00800044 	movi	r2,1
   46050:	20c00015 	stw	r3,0(r4)
   46054:	f800283a 	ret

00046058 <__i2b>:
   46058:	defffd04 	addi	sp,sp,-12
   4605c:	dc000015 	stw	r16,0(sp)
   46060:	04000044 	movi	r16,1
   46064:	dc400115 	stw	r17,4(sp)
   46068:	2823883a 	mov	r17,r5
   4606c:	800b883a 	mov	r5,r16
   46070:	dfc00215 	stw	ra,8(sp)
   46074:	0045c240 	call	45c24 <_Balloc>
   46078:	14400515 	stw	r17,20(r2)
   4607c:	14000415 	stw	r16,16(r2)
   46080:	dfc00217 	ldw	ra,8(sp)
   46084:	dc400117 	ldw	r17,4(sp)
   46088:	dc000017 	ldw	r16,0(sp)
   4608c:	dec00304 	addi	sp,sp,12
   46090:	f800283a 	ret

00046094 <__multiply>:
   46094:	deffef04 	addi	sp,sp,-68
   46098:	dc400815 	stw	r17,32(sp)
   4609c:	dc000715 	stw	r16,28(sp)
   460a0:	34400417 	ldw	r17,16(r6)
   460a4:	2c000417 	ldw	r16,16(r5)
   460a8:	dd800d15 	stw	r22,52(sp)
   460ac:	dc800915 	stw	r18,36(sp)
   460b0:	dfc01015 	stw	ra,64(sp)
   460b4:	df000f15 	stw	fp,60(sp)
   460b8:	ddc00e15 	stw	r23,56(sp)
   460bc:	dd400c15 	stw	r21,48(sp)
   460c0:	dd000b15 	stw	r20,44(sp)
   460c4:	dcc00a15 	stw	r19,40(sp)
   460c8:	2825883a 	mov	r18,r5
   460cc:	302d883a 	mov	r22,r6
   460d0:	8440050e 	bge	r16,r17,460e8 <__multiply+0x54>
   460d4:	8007883a 	mov	r3,r16
   460d8:	3025883a 	mov	r18,r6
   460dc:	8821883a 	mov	r16,r17
   460e0:	282d883a 	mov	r22,r5
   460e4:	1823883a 	mov	r17,r3
   460e8:	90800217 	ldw	r2,8(r18)
   460ec:	8447883a 	add	r3,r16,r17
   460f0:	d8c00215 	stw	r3,8(sp)
   460f4:	91400117 	ldw	r5,4(r18)
   460f8:	10c0010e 	bge	r2,r3,46100 <__multiply+0x6c>
   460fc:	29400044 	addi	r5,r5,1
   46100:	0045c240 	call	45c24 <_Balloc>
   46104:	d8c00217 	ldw	r3,8(sp)
   46108:	d8800615 	stw	r2,24(sp)
   4610c:	18eb883a 	add	r21,r3,r3
   46110:	ad6b883a 	add	r21,r21,r21
   46114:	10c00504 	addi	r3,r2,20
   46118:	1d6b883a 	add	r21,r3,r21
   4611c:	d8c00115 	stw	r3,4(sp)
   46120:	dd400315 	stw	r21,12(sp)
   46124:	1805883a 	mov	r2,r3
   46128:	1d40042e 	bgeu	r3,r21,4613c <__multiply+0xa8>
   4612c:	d8c00317 	ldw	r3,12(sp)
   46130:	10000015 	stw	zero,0(r2)
   46134:	10800104 	addi	r2,r2,4
   46138:	10fffc36 	bltu	r2,r3,4612c <__alt_data_end+0xfffe9d6c>
   4613c:	8c63883a 	add	r17,r17,r17
   46140:	b5800504 	addi	r22,r22,20
   46144:	8c63883a 	add	r17,r17,r17
   46148:	94800504 	addi	r18,r18,20
   4614c:	8421883a 	add	r16,r16,r16
   46150:	b463883a 	add	r17,r22,r17
   46154:	8421883a 	add	r16,r16,r16
   46158:	dd800015 	stw	r22,0(sp)
   4615c:	dc800415 	stw	r18,16(sp)
   46160:	dc400515 	stw	r17,20(sp)
   46164:	9429883a 	add	r20,r18,r16
   46168:	b4404f2e 	bgeu	r22,r17,462a8 <__multiply+0x214>
   4616c:	d8c00017 	ldw	r3,0(sp)
   46170:	1c800017 	ldw	r18,0(r3)
   46174:	947fffcc 	andi	r17,r18,65535
   46178:	88001e26 	beq	r17,zero,461f4 <__multiply+0x160>
   4617c:	dd800117 	ldw	r22,4(sp)
   46180:	dd400417 	ldw	r21,16(sp)
   46184:	0027883a 	mov	r19,zero
   46188:	ac800017 	ldw	r18,0(r21)
   4618c:	b4000017 	ldw	r16,0(r22)
   46190:	880b883a 	mov	r5,r17
   46194:	913fffcc 	andi	r4,r18,65535
   46198:	004a9940 	call	4a994 <__mulsi3>
   4619c:	9008d43a 	srli	r4,r18,16
   461a0:	84bfffcc 	andi	r18,r16,65535
   461a4:	1485883a 	add	r2,r2,r18
   461a8:	14e5883a 	add	r18,r2,r19
   461ac:	8020d43a 	srli	r16,r16,16
   461b0:	9026d43a 	srli	r19,r18,16
   461b4:	880b883a 	mov	r5,r17
   461b8:	004a9940 	call	4a994 <__mulsi3>
   461bc:	1405883a 	add	r2,r2,r16
   461c0:	14e1883a 	add	r16,r2,r19
   461c4:	90ffffcc 	andi	r3,r18,65535
   461c8:	8024943a 	slli	r18,r16,16
   461cc:	ad400104 	addi	r21,r21,4
   461d0:	b005883a 	mov	r2,r22
   461d4:	90c6b03a 	or	r3,r18,r3
   461d8:	b0c00015 	stw	r3,0(r22)
   461dc:	8026d43a 	srli	r19,r16,16
   461e0:	b5800104 	addi	r22,r22,4
   461e4:	ad3fe836 	bltu	r21,r20,46188 <__alt_data_end+0xfffe9dc8>
   461e8:	d8c00017 	ldw	r3,0(sp)
   461ec:	14c00115 	stw	r19,4(r2)
   461f0:	1c800017 	ldw	r18,0(r3)
   461f4:	9024d43a 	srli	r18,r18,16
   461f8:	90002226 	beq	r18,zero,46284 <__multiply+0x1f0>
   461fc:	d8c00117 	ldw	r3,4(sp)
   46200:	dd800417 	ldw	r22,16(sp)
   46204:	002f883a 	mov	r23,zero
   46208:	1f000017 	ldw	fp,0(r3)
   4620c:	1823883a 	mov	r17,r3
   46210:	182b883a 	mov	r21,r3
   46214:	e021883a 	mov	r16,fp
   46218:	00000106 	br	46220 <__multiply+0x18c>
   4621c:	982b883a 	mov	r21,r19
   46220:	b100000b 	ldhu	r4,0(r22)
   46224:	8020d43a 	srli	r16,r16,16
   46228:	900b883a 	mov	r5,r18
   4622c:	004a9940 	call	4a994 <__mulsi3>
   46230:	1405883a 	add	r2,r2,r16
   46234:	15ef883a 	add	r23,r2,r23
   46238:	b804943a 	slli	r2,r23,16
   4623c:	e0ffffcc 	andi	r3,fp,65535
   46240:	8c400104 	addi	r17,r17,4
   46244:	10c6b03a 	or	r3,r2,r3
   46248:	88ffff15 	stw	r3,-4(r17)
   4624c:	b5800104 	addi	r22,r22,4
   46250:	b13fff17 	ldw	r4,-4(r22)
   46254:	acc00104 	addi	r19,r21,4
   46258:	900b883a 	mov	r5,r18
   4625c:	2008d43a 	srli	r4,r4,16
   46260:	9c000017 	ldw	r16,0(r19)
   46264:	004a9940 	call	4a994 <__mulsi3>
   46268:	b806d43a 	srli	r3,r23,16
   4626c:	813fffcc 	andi	r4,r16,65535
   46270:	1105883a 	add	r2,r2,r4
   46274:	10f9883a 	add	fp,r2,r3
   46278:	e02ed43a 	srli	r23,fp,16
   4627c:	b53fe736 	bltu	r22,r20,4621c <__alt_data_end+0xfffe9e5c>
   46280:	af000115 	stw	fp,4(r21)
   46284:	d8c00017 	ldw	r3,0(sp)
   46288:	d9000517 	ldw	r4,20(sp)
   4628c:	18c00104 	addi	r3,r3,4
   46290:	d8c00015 	stw	r3,0(sp)
   46294:	d8c00117 	ldw	r3,4(sp)
   46298:	18c00104 	addi	r3,r3,4
   4629c:	d8c00115 	stw	r3,4(sp)
   462a0:	d8c00017 	ldw	r3,0(sp)
   462a4:	193fb136 	bltu	r3,r4,4616c <__alt_data_end+0xfffe9dac>
   462a8:	d8c00217 	ldw	r3,8(sp)
   462ac:	00c00c0e 	bge	zero,r3,462e0 <__multiply+0x24c>
   462b0:	d8c00317 	ldw	r3,12(sp)
   462b4:	18bfff17 	ldw	r2,-4(r3)
   462b8:	1d7fff04 	addi	r21,r3,-4
   462bc:	10000326 	beq	r2,zero,462cc <__multiply+0x238>
   462c0:	00000706 	br	462e0 <__multiply+0x24c>
   462c4:	a8800017 	ldw	r2,0(r21)
   462c8:	1000051e 	bne	r2,zero,462e0 <__multiply+0x24c>
   462cc:	d8c00217 	ldw	r3,8(sp)
   462d0:	ad7fff04 	addi	r21,r21,-4
   462d4:	18ffffc4 	addi	r3,r3,-1
   462d8:	d8c00215 	stw	r3,8(sp)
   462dc:	183ff91e 	bne	r3,zero,462c4 <__alt_data_end+0xfffe9f04>
   462e0:	d8c00617 	ldw	r3,24(sp)
   462e4:	d9000217 	ldw	r4,8(sp)
   462e8:	1805883a 	mov	r2,r3
   462ec:	19000415 	stw	r4,16(r3)
   462f0:	dfc01017 	ldw	ra,64(sp)
   462f4:	df000f17 	ldw	fp,60(sp)
   462f8:	ddc00e17 	ldw	r23,56(sp)
   462fc:	dd800d17 	ldw	r22,52(sp)
   46300:	dd400c17 	ldw	r21,48(sp)
   46304:	dd000b17 	ldw	r20,44(sp)
   46308:	dcc00a17 	ldw	r19,40(sp)
   4630c:	dc800917 	ldw	r18,36(sp)
   46310:	dc400817 	ldw	r17,32(sp)
   46314:	dc000717 	ldw	r16,28(sp)
   46318:	dec01104 	addi	sp,sp,68
   4631c:	f800283a 	ret

00046320 <__pow5mult>:
   46320:	defffa04 	addi	sp,sp,-24
   46324:	dcc00315 	stw	r19,12(sp)
   46328:	dc000015 	stw	r16,0(sp)
   4632c:	dfc00515 	stw	ra,20(sp)
   46330:	dd000415 	stw	r20,16(sp)
   46334:	dc800215 	stw	r18,8(sp)
   46338:	dc400115 	stw	r17,4(sp)
   4633c:	308000cc 	andi	r2,r6,3
   46340:	3021883a 	mov	r16,r6
   46344:	2027883a 	mov	r19,r4
   46348:	10002f1e 	bne	r2,zero,46408 <__pow5mult+0xe8>
   4634c:	2825883a 	mov	r18,r5
   46350:	8021d0ba 	srai	r16,r16,2
   46354:	80001a26 	beq	r16,zero,463c0 <__pow5mult+0xa0>
   46358:	9c401217 	ldw	r17,72(r19)
   4635c:	8800061e 	bne	r17,zero,46378 <__pow5mult+0x58>
   46360:	00003406 	br	46434 <__pow5mult+0x114>
   46364:	8021d07a 	srai	r16,r16,1
   46368:	80001526 	beq	r16,zero,463c0 <__pow5mult+0xa0>
   4636c:	88800017 	ldw	r2,0(r17)
   46370:	10001c26 	beq	r2,zero,463e4 <__pow5mult+0xc4>
   46374:	1023883a 	mov	r17,r2
   46378:	8080004c 	andi	r2,r16,1
   4637c:	103ff926 	beq	r2,zero,46364 <__alt_data_end+0xfffe9fa4>
   46380:	880d883a 	mov	r6,r17
   46384:	900b883a 	mov	r5,r18
   46388:	9809883a 	mov	r4,r19
   4638c:	00460940 	call	46094 <__multiply>
   46390:	90001b26 	beq	r18,zero,46400 <__pow5mult+0xe0>
   46394:	91000117 	ldw	r4,4(r18)
   46398:	98c01317 	ldw	r3,76(r19)
   4639c:	8021d07a 	srai	r16,r16,1
   463a0:	2109883a 	add	r4,r4,r4
   463a4:	2109883a 	add	r4,r4,r4
   463a8:	1907883a 	add	r3,r3,r4
   463ac:	19000017 	ldw	r4,0(r3)
   463b0:	91000015 	stw	r4,0(r18)
   463b4:	1c800015 	stw	r18,0(r3)
   463b8:	1025883a 	mov	r18,r2
   463bc:	803feb1e 	bne	r16,zero,4636c <__alt_data_end+0xfffe9fac>
   463c0:	9005883a 	mov	r2,r18
   463c4:	dfc00517 	ldw	ra,20(sp)
   463c8:	dd000417 	ldw	r20,16(sp)
   463cc:	dcc00317 	ldw	r19,12(sp)
   463d0:	dc800217 	ldw	r18,8(sp)
   463d4:	dc400117 	ldw	r17,4(sp)
   463d8:	dc000017 	ldw	r16,0(sp)
   463dc:	dec00604 	addi	sp,sp,24
   463e0:	f800283a 	ret
   463e4:	880d883a 	mov	r6,r17
   463e8:	880b883a 	mov	r5,r17
   463ec:	9809883a 	mov	r4,r19
   463f0:	00460940 	call	46094 <__multiply>
   463f4:	88800015 	stw	r2,0(r17)
   463f8:	10000015 	stw	zero,0(r2)
   463fc:	003fdd06 	br	46374 <__alt_data_end+0xfffe9fb4>
   46400:	1025883a 	mov	r18,r2
   46404:	003fd706 	br	46364 <__alt_data_end+0xfffe9fa4>
   46408:	10bfffc4 	addi	r2,r2,-1
   4640c:	1085883a 	add	r2,r2,r2
   46410:	00c00174 	movhi	r3,5
   46414:	18fe6304 	addi	r3,r3,-1652
   46418:	1085883a 	add	r2,r2,r2
   4641c:	1885883a 	add	r2,r3,r2
   46420:	11800017 	ldw	r6,0(r2)
   46424:	000f883a 	mov	r7,zero
   46428:	0045cf40 	call	45cf4 <__multadd>
   4642c:	1025883a 	mov	r18,r2
   46430:	003fc706 	br	46350 <__alt_data_end+0xfffe9f90>
   46434:	05000044 	movi	r20,1
   46438:	a00b883a 	mov	r5,r20
   4643c:	9809883a 	mov	r4,r19
   46440:	0045c240 	call	45c24 <_Balloc>
   46444:	1023883a 	mov	r17,r2
   46448:	00809c44 	movi	r2,625
   4644c:	88800515 	stw	r2,20(r17)
   46450:	8d000415 	stw	r20,16(r17)
   46454:	9c401215 	stw	r17,72(r19)
   46458:	88000015 	stw	zero,0(r17)
   4645c:	003fc606 	br	46378 <__alt_data_end+0xfffe9fb8>

00046460 <__lshift>:
   46460:	defff904 	addi	sp,sp,-28
   46464:	dd400515 	stw	r21,20(sp)
   46468:	dcc00315 	stw	r19,12(sp)
   4646c:	302bd17a 	srai	r21,r6,5
   46470:	2cc00417 	ldw	r19,16(r5)
   46474:	28800217 	ldw	r2,8(r5)
   46478:	dd000415 	stw	r20,16(sp)
   4647c:	ace7883a 	add	r19,r21,r19
   46480:	dc800215 	stw	r18,8(sp)
   46484:	dc400115 	stw	r17,4(sp)
   46488:	dc000015 	stw	r16,0(sp)
   4648c:	dfc00615 	stw	ra,24(sp)
   46490:	9c000044 	addi	r16,r19,1
   46494:	2823883a 	mov	r17,r5
   46498:	3029883a 	mov	r20,r6
   4649c:	2025883a 	mov	r18,r4
   464a0:	29400117 	ldw	r5,4(r5)
   464a4:	1400030e 	bge	r2,r16,464b4 <__lshift+0x54>
   464a8:	1085883a 	add	r2,r2,r2
   464ac:	29400044 	addi	r5,r5,1
   464b0:	143ffd16 	blt	r2,r16,464a8 <__alt_data_end+0xfffea0e8>
   464b4:	9009883a 	mov	r4,r18
   464b8:	0045c240 	call	45c24 <_Balloc>
   464bc:	10c00504 	addi	r3,r2,20
   464c0:	0540070e 	bge	zero,r21,464e0 <__lshift+0x80>
   464c4:	ad6b883a 	add	r21,r21,r21
   464c8:	ad6b883a 	add	r21,r21,r21
   464cc:	1809883a 	mov	r4,r3
   464d0:	1d47883a 	add	r3,r3,r21
   464d4:	20000015 	stw	zero,0(r4)
   464d8:	21000104 	addi	r4,r4,4
   464dc:	193ffd1e 	bne	r3,r4,464d4 <__alt_data_end+0xfffea114>
   464e0:	8a000417 	ldw	r8,16(r17)
   464e4:	89000504 	addi	r4,r17,20
   464e8:	a18007cc 	andi	r6,r20,31
   464ec:	4211883a 	add	r8,r8,r8
   464f0:	4211883a 	add	r8,r8,r8
   464f4:	2211883a 	add	r8,r4,r8
   464f8:	30002326 	beq	r6,zero,46588 <__lshift+0x128>
   464fc:	02400804 	movi	r9,32
   46500:	4993c83a 	sub	r9,r9,r6
   46504:	000b883a 	mov	r5,zero
   46508:	21c00017 	ldw	r7,0(r4)
   4650c:	1815883a 	mov	r10,r3
   46510:	18c00104 	addi	r3,r3,4
   46514:	398e983a 	sll	r7,r7,r6
   46518:	21000104 	addi	r4,r4,4
   4651c:	394ab03a 	or	r5,r7,r5
   46520:	197fff15 	stw	r5,-4(r3)
   46524:	217fff17 	ldw	r5,-4(r4)
   46528:	2a4ad83a 	srl	r5,r5,r9
   4652c:	223ff636 	bltu	r4,r8,46508 <__alt_data_end+0xfffea148>
   46530:	51400115 	stw	r5,4(r10)
   46534:	28001a1e 	bne	r5,zero,465a0 <__lshift+0x140>
   46538:	843fffc4 	addi	r16,r16,-1
   4653c:	14000415 	stw	r16,16(r2)
   46540:	88000826 	beq	r17,zero,46564 <__lshift+0x104>
   46544:	89000117 	ldw	r4,4(r17)
   46548:	90c01317 	ldw	r3,76(r18)
   4654c:	2109883a 	add	r4,r4,r4
   46550:	2109883a 	add	r4,r4,r4
   46554:	1907883a 	add	r3,r3,r4
   46558:	19000017 	ldw	r4,0(r3)
   4655c:	89000015 	stw	r4,0(r17)
   46560:	1c400015 	stw	r17,0(r3)
   46564:	dfc00617 	ldw	ra,24(sp)
   46568:	dd400517 	ldw	r21,20(sp)
   4656c:	dd000417 	ldw	r20,16(sp)
   46570:	dcc00317 	ldw	r19,12(sp)
   46574:	dc800217 	ldw	r18,8(sp)
   46578:	dc400117 	ldw	r17,4(sp)
   4657c:	dc000017 	ldw	r16,0(sp)
   46580:	dec00704 	addi	sp,sp,28
   46584:	f800283a 	ret
   46588:	21400017 	ldw	r5,0(r4)
   4658c:	18c00104 	addi	r3,r3,4
   46590:	21000104 	addi	r4,r4,4
   46594:	197fff15 	stw	r5,-4(r3)
   46598:	223ffb36 	bltu	r4,r8,46588 <__alt_data_end+0xfffea1c8>
   4659c:	003fe606 	br	46538 <__alt_data_end+0xfffea178>
   465a0:	9c000084 	addi	r16,r19,2
   465a4:	003fe406 	br	46538 <__alt_data_end+0xfffea178>

000465a8 <__mcmp>:
   465a8:	20800417 	ldw	r2,16(r4)
   465ac:	28c00417 	ldw	r3,16(r5)
   465b0:	10c5c83a 	sub	r2,r2,r3
   465b4:	1000111e 	bne	r2,zero,465fc <__mcmp+0x54>
   465b8:	18c7883a 	add	r3,r3,r3
   465bc:	18c7883a 	add	r3,r3,r3
   465c0:	21000504 	addi	r4,r4,20
   465c4:	29400504 	addi	r5,r5,20
   465c8:	20c5883a 	add	r2,r4,r3
   465cc:	28cb883a 	add	r5,r5,r3
   465d0:	00000106 	br	465d8 <__mcmp+0x30>
   465d4:	20800a2e 	bgeu	r4,r2,46600 <__mcmp+0x58>
   465d8:	10bfff04 	addi	r2,r2,-4
   465dc:	297fff04 	addi	r5,r5,-4
   465e0:	11800017 	ldw	r6,0(r2)
   465e4:	28c00017 	ldw	r3,0(r5)
   465e8:	30fffa26 	beq	r6,r3,465d4 <__alt_data_end+0xfffea214>
   465ec:	30c00236 	bltu	r6,r3,465f8 <__mcmp+0x50>
   465f0:	00800044 	movi	r2,1
   465f4:	f800283a 	ret
   465f8:	00bfffc4 	movi	r2,-1
   465fc:	f800283a 	ret
   46600:	0005883a 	mov	r2,zero
   46604:	f800283a 	ret

00046608 <__mdiff>:
   46608:	28c00417 	ldw	r3,16(r5)
   4660c:	30800417 	ldw	r2,16(r6)
   46610:	defffa04 	addi	sp,sp,-24
   46614:	dcc00315 	stw	r19,12(sp)
   46618:	dc800215 	stw	r18,8(sp)
   4661c:	dfc00515 	stw	ra,20(sp)
   46620:	dd000415 	stw	r20,16(sp)
   46624:	dc400115 	stw	r17,4(sp)
   46628:	dc000015 	stw	r16,0(sp)
   4662c:	1887c83a 	sub	r3,r3,r2
   46630:	2825883a 	mov	r18,r5
   46634:	3027883a 	mov	r19,r6
   46638:	1800141e 	bne	r3,zero,4668c <__mdiff+0x84>
   4663c:	1085883a 	add	r2,r2,r2
   46640:	1085883a 	add	r2,r2,r2
   46644:	2a000504 	addi	r8,r5,20
   46648:	34000504 	addi	r16,r6,20
   4664c:	4087883a 	add	r3,r8,r2
   46650:	8085883a 	add	r2,r16,r2
   46654:	00000106 	br	4665c <__mdiff+0x54>
   46658:	40c0592e 	bgeu	r8,r3,467c0 <__mdiff+0x1b8>
   4665c:	18ffff04 	addi	r3,r3,-4
   46660:	10bfff04 	addi	r2,r2,-4
   46664:	19c00017 	ldw	r7,0(r3)
   46668:	11400017 	ldw	r5,0(r2)
   4666c:	397ffa26 	beq	r7,r5,46658 <__alt_data_end+0xfffea298>
   46670:	3940592e 	bgeu	r7,r5,467d8 <__mdiff+0x1d0>
   46674:	9005883a 	mov	r2,r18
   46678:	4023883a 	mov	r17,r8
   4667c:	9825883a 	mov	r18,r19
   46680:	05000044 	movi	r20,1
   46684:	1027883a 	mov	r19,r2
   46688:	00000406 	br	4669c <__mdiff+0x94>
   4668c:	18005616 	blt	r3,zero,467e8 <__mdiff+0x1e0>
   46690:	34400504 	addi	r17,r6,20
   46694:	2c000504 	addi	r16,r5,20
   46698:	0029883a 	mov	r20,zero
   4669c:	91400117 	ldw	r5,4(r18)
   466a0:	0045c240 	call	45c24 <_Balloc>
   466a4:	92400417 	ldw	r9,16(r18)
   466a8:	9b000417 	ldw	r12,16(r19)
   466ac:	12c00504 	addi	r11,r2,20
   466b0:	4a51883a 	add	r8,r9,r9
   466b4:	6319883a 	add	r12,r12,r12
   466b8:	4211883a 	add	r8,r8,r8
   466bc:	6319883a 	add	r12,r12,r12
   466c0:	15000315 	stw	r20,12(r2)
   466c4:	8211883a 	add	r8,r16,r8
   466c8:	8b19883a 	add	r12,r17,r12
   466cc:	0007883a 	mov	r3,zero
   466d0:	81400017 	ldw	r5,0(r16)
   466d4:	89c00017 	ldw	r7,0(r17)
   466d8:	59800104 	addi	r6,r11,4
   466dc:	293fffcc 	andi	r4,r5,65535
   466e0:	20c7883a 	add	r3,r4,r3
   466e4:	393fffcc 	andi	r4,r7,65535
   466e8:	1909c83a 	sub	r4,r3,r4
   466ec:	280ad43a 	srli	r5,r5,16
   466f0:	380ed43a 	srli	r7,r7,16
   466f4:	2007d43a 	srai	r3,r4,16
   466f8:	213fffcc 	andi	r4,r4,65535
   466fc:	29cbc83a 	sub	r5,r5,r7
   46700:	28c7883a 	add	r3,r5,r3
   46704:	180a943a 	slli	r5,r3,16
   46708:	8c400104 	addi	r17,r17,4
   4670c:	84000104 	addi	r16,r16,4
   46710:	2908b03a 	or	r4,r5,r4
   46714:	59000015 	stw	r4,0(r11)
   46718:	1807d43a 	srai	r3,r3,16
   4671c:	3015883a 	mov	r10,r6
   46720:	3017883a 	mov	r11,r6
   46724:	8b3fea36 	bltu	r17,r12,466d0 <__alt_data_end+0xfffea310>
   46728:	8200162e 	bgeu	r16,r8,46784 <__mdiff+0x17c>
   4672c:	8017883a 	mov	r11,r16
   46730:	59400017 	ldw	r5,0(r11)
   46734:	31800104 	addi	r6,r6,4
   46738:	5ac00104 	addi	r11,r11,4
   4673c:	293fffcc 	andi	r4,r5,65535
   46740:	20c7883a 	add	r3,r4,r3
   46744:	280ed43a 	srli	r7,r5,16
   46748:	180bd43a 	srai	r5,r3,16
   4674c:	193fffcc 	andi	r4,r3,65535
   46750:	3947883a 	add	r3,r7,r5
   46754:	180a943a 	slli	r5,r3,16
   46758:	1807d43a 	srai	r3,r3,16
   4675c:	2908b03a 	or	r4,r5,r4
   46760:	313fff15 	stw	r4,-4(r6)
   46764:	5a3ff236 	bltu	r11,r8,46730 <__alt_data_end+0xfffea370>
   46768:	0406303a 	nor	r3,zero,r16
   4676c:	1a07883a 	add	r3,r3,r8
   46770:	1806d0ba 	srli	r3,r3,2
   46774:	18c00044 	addi	r3,r3,1
   46778:	18c7883a 	add	r3,r3,r3
   4677c:	18c7883a 	add	r3,r3,r3
   46780:	50d5883a 	add	r10,r10,r3
   46784:	50ffff04 	addi	r3,r10,-4
   46788:	2000041e 	bne	r4,zero,4679c <__mdiff+0x194>
   4678c:	18ffff04 	addi	r3,r3,-4
   46790:	19000017 	ldw	r4,0(r3)
   46794:	4a7fffc4 	addi	r9,r9,-1
   46798:	203ffc26 	beq	r4,zero,4678c <__alt_data_end+0xfffea3cc>
   4679c:	12400415 	stw	r9,16(r2)
   467a0:	dfc00517 	ldw	ra,20(sp)
   467a4:	dd000417 	ldw	r20,16(sp)
   467a8:	dcc00317 	ldw	r19,12(sp)
   467ac:	dc800217 	ldw	r18,8(sp)
   467b0:	dc400117 	ldw	r17,4(sp)
   467b4:	dc000017 	ldw	r16,0(sp)
   467b8:	dec00604 	addi	sp,sp,24
   467bc:	f800283a 	ret
   467c0:	000b883a 	mov	r5,zero
   467c4:	0045c240 	call	45c24 <_Balloc>
   467c8:	00c00044 	movi	r3,1
   467cc:	10c00415 	stw	r3,16(r2)
   467d0:	10000515 	stw	zero,20(r2)
   467d4:	003ff206 	br	467a0 <__alt_data_end+0xfffea3e0>
   467d8:	8023883a 	mov	r17,r16
   467dc:	0029883a 	mov	r20,zero
   467e0:	4021883a 	mov	r16,r8
   467e4:	003fad06 	br	4669c <__alt_data_end+0xfffea2dc>
   467e8:	9005883a 	mov	r2,r18
   467ec:	94400504 	addi	r17,r18,20
   467f0:	9c000504 	addi	r16,r19,20
   467f4:	9825883a 	mov	r18,r19
   467f8:	05000044 	movi	r20,1
   467fc:	1027883a 	mov	r19,r2
   46800:	003fa606 	br	4669c <__alt_data_end+0xfffea2dc>

00046804 <__ulp>:
   46804:	295ffc2c 	andhi	r5,r5,32752
   46808:	00bf3034 	movhi	r2,64704
   4680c:	2887883a 	add	r3,r5,r2
   46810:	00c0020e 	bge	zero,r3,4681c <__ulp+0x18>
   46814:	0005883a 	mov	r2,zero
   46818:	f800283a 	ret
   4681c:	00c7c83a 	sub	r3,zero,r3
   46820:	1807d53a 	srai	r3,r3,20
   46824:	008004c4 	movi	r2,19
   46828:	10c00b0e 	bge	r2,r3,46858 <__ulp+0x54>
   4682c:	18bffb04 	addi	r2,r3,-20
   46830:	01000784 	movi	r4,30
   46834:	0007883a 	mov	r3,zero
   46838:	20800516 	blt	r4,r2,46850 <__ulp+0x4c>
   4683c:	010007c4 	movi	r4,31
   46840:	2089c83a 	sub	r4,r4,r2
   46844:	00800044 	movi	r2,1
   46848:	1104983a 	sll	r2,r2,r4
   4684c:	f800283a 	ret
   46850:	00800044 	movi	r2,1
   46854:	f800283a 	ret
   46858:	01400234 	movhi	r5,8
   4685c:	28c7d83a 	sra	r3,r5,r3
   46860:	0005883a 	mov	r2,zero
   46864:	f800283a 	ret

00046868 <__b2d>:
   46868:	defffa04 	addi	sp,sp,-24
   4686c:	dc000015 	stw	r16,0(sp)
   46870:	24000417 	ldw	r16,16(r4)
   46874:	dc400115 	stw	r17,4(sp)
   46878:	24400504 	addi	r17,r4,20
   4687c:	8421883a 	add	r16,r16,r16
   46880:	8421883a 	add	r16,r16,r16
   46884:	8c21883a 	add	r16,r17,r16
   46888:	dc800215 	stw	r18,8(sp)
   4688c:	84bfff17 	ldw	r18,-4(r16)
   46890:	dd000415 	stw	r20,16(sp)
   46894:	dcc00315 	stw	r19,12(sp)
   46898:	9009883a 	mov	r4,r18
   4689c:	2829883a 	mov	r20,r5
   468a0:	dfc00515 	stw	ra,20(sp)
   468a4:	0045f400 	call	45f40 <__hi0bits>
   468a8:	00c00804 	movi	r3,32
   468ac:	1889c83a 	sub	r4,r3,r2
   468b0:	a1000015 	stw	r4,0(r20)
   468b4:	01000284 	movi	r4,10
   468b8:	84ffff04 	addi	r19,r16,-4
   468bc:	20801216 	blt	r4,r2,46908 <__b2d+0xa0>
   468c0:	018002c4 	movi	r6,11
   468c4:	308dc83a 	sub	r6,r6,r2
   468c8:	9186d83a 	srl	r3,r18,r6
   468cc:	18cffc34 	orhi	r3,r3,16368
   468d0:	8cc0212e 	bgeu	r17,r19,46958 <__b2d+0xf0>
   468d4:	813ffe17 	ldw	r4,-8(r16)
   468d8:	218cd83a 	srl	r6,r4,r6
   468dc:	10800544 	addi	r2,r2,21
   468e0:	9084983a 	sll	r2,r18,r2
   468e4:	1184b03a 	or	r2,r2,r6
   468e8:	dfc00517 	ldw	ra,20(sp)
   468ec:	dd000417 	ldw	r20,16(sp)
   468f0:	dcc00317 	ldw	r19,12(sp)
   468f4:	dc800217 	ldw	r18,8(sp)
   468f8:	dc400117 	ldw	r17,4(sp)
   468fc:	dc000017 	ldw	r16,0(sp)
   46900:	dec00604 	addi	sp,sp,24
   46904:	f800283a 	ret
   46908:	8cc00f2e 	bgeu	r17,r19,46948 <__b2d+0xe0>
   4690c:	117ffd44 	addi	r5,r2,-11
   46910:	80bffe17 	ldw	r2,-8(r16)
   46914:	28000e26 	beq	r5,zero,46950 <__b2d+0xe8>
   46918:	1949c83a 	sub	r4,r3,r5
   4691c:	9164983a 	sll	r18,r18,r5
   46920:	1106d83a 	srl	r3,r2,r4
   46924:	81bffe04 	addi	r6,r16,-8
   46928:	948ffc34 	orhi	r18,r18,16368
   4692c:	90c6b03a 	or	r3,r18,r3
   46930:	89800e2e 	bgeu	r17,r6,4696c <__b2d+0x104>
   46934:	81bffd17 	ldw	r6,-12(r16)
   46938:	1144983a 	sll	r2,r2,r5
   4693c:	310ad83a 	srl	r5,r6,r4
   46940:	2884b03a 	or	r2,r5,r2
   46944:	003fe806 	br	468e8 <__alt_data_end+0xfffea528>
   46948:	10bffd44 	addi	r2,r2,-11
   4694c:	1000041e 	bne	r2,zero,46960 <__b2d+0xf8>
   46950:	90cffc34 	orhi	r3,r18,16368
   46954:	003fe406 	br	468e8 <__alt_data_end+0xfffea528>
   46958:	000d883a 	mov	r6,zero
   4695c:	003fdf06 	br	468dc <__alt_data_end+0xfffea51c>
   46960:	90a4983a 	sll	r18,r18,r2
   46964:	0005883a 	mov	r2,zero
   46968:	003ff906 	br	46950 <__alt_data_end+0xfffea590>
   4696c:	1144983a 	sll	r2,r2,r5
   46970:	003fdd06 	br	468e8 <__alt_data_end+0xfffea528>

00046974 <__d2b>:
   46974:	defff804 	addi	sp,sp,-32
   46978:	dc000215 	stw	r16,8(sp)
   4697c:	3021883a 	mov	r16,r6
   46980:	dc400315 	stw	r17,12(sp)
   46984:	8022907a 	slli	r17,r16,1
   46988:	dd000615 	stw	r20,24(sp)
   4698c:	2829883a 	mov	r20,r5
   46990:	01400044 	movi	r5,1
   46994:	dcc00515 	stw	r19,20(sp)
   46998:	dc800415 	stw	r18,16(sp)
   4699c:	dfc00715 	stw	ra,28(sp)
   469a0:	3825883a 	mov	r18,r7
   469a4:	8822d57a 	srli	r17,r17,21
   469a8:	0045c240 	call	45c24 <_Balloc>
   469ac:	1027883a 	mov	r19,r2
   469b0:	00800434 	movhi	r2,16
   469b4:	10bfffc4 	addi	r2,r2,-1
   469b8:	808c703a 	and	r6,r16,r2
   469bc:	88000126 	beq	r17,zero,469c4 <__d2b+0x50>
   469c0:	31800434 	orhi	r6,r6,16
   469c4:	d9800015 	stw	r6,0(sp)
   469c8:	a0002426 	beq	r20,zero,46a5c <__d2b+0xe8>
   469cc:	d9000104 	addi	r4,sp,4
   469d0:	dd000115 	stw	r20,4(sp)
   469d4:	0045fa80 	call	45fa8 <__lo0bits>
   469d8:	d8c00017 	ldw	r3,0(sp)
   469dc:	10002f1e 	bne	r2,zero,46a9c <__d2b+0x128>
   469e0:	d9000117 	ldw	r4,4(sp)
   469e4:	99000515 	stw	r4,20(r19)
   469e8:	1821003a 	cmpeq	r16,r3,zero
   469ec:	01000084 	movi	r4,2
   469f0:	2421c83a 	sub	r16,r4,r16
   469f4:	98c00615 	stw	r3,24(r19)
   469f8:	9c000415 	stw	r16,16(r19)
   469fc:	88001f1e 	bne	r17,zero,46a7c <__d2b+0x108>
   46a00:	10bef384 	addi	r2,r2,-1074
   46a04:	90800015 	stw	r2,0(r18)
   46a08:	00900034 	movhi	r2,16384
   46a0c:	10bfffc4 	addi	r2,r2,-1
   46a10:	8085883a 	add	r2,r16,r2
   46a14:	1085883a 	add	r2,r2,r2
   46a18:	1085883a 	add	r2,r2,r2
   46a1c:	9885883a 	add	r2,r19,r2
   46a20:	11000517 	ldw	r4,20(r2)
   46a24:	8020917a 	slli	r16,r16,5
   46a28:	0045f400 	call	45f40 <__hi0bits>
   46a2c:	d8c00817 	ldw	r3,32(sp)
   46a30:	8085c83a 	sub	r2,r16,r2
   46a34:	18800015 	stw	r2,0(r3)
   46a38:	9805883a 	mov	r2,r19
   46a3c:	dfc00717 	ldw	ra,28(sp)
   46a40:	dd000617 	ldw	r20,24(sp)
   46a44:	dcc00517 	ldw	r19,20(sp)
   46a48:	dc800417 	ldw	r18,16(sp)
   46a4c:	dc400317 	ldw	r17,12(sp)
   46a50:	dc000217 	ldw	r16,8(sp)
   46a54:	dec00804 	addi	sp,sp,32
   46a58:	f800283a 	ret
   46a5c:	d809883a 	mov	r4,sp
   46a60:	0045fa80 	call	45fa8 <__lo0bits>
   46a64:	d8c00017 	ldw	r3,0(sp)
   46a68:	04000044 	movi	r16,1
   46a6c:	9c000415 	stw	r16,16(r19)
   46a70:	98c00515 	stw	r3,20(r19)
   46a74:	10800804 	addi	r2,r2,32
   46a78:	883fe126 	beq	r17,zero,46a00 <__alt_data_end+0xfffea640>
   46a7c:	00c00d44 	movi	r3,53
   46a80:	8c7ef344 	addi	r17,r17,-1075
   46a84:	88a3883a 	add	r17,r17,r2
   46a88:	1885c83a 	sub	r2,r3,r2
   46a8c:	d8c00817 	ldw	r3,32(sp)
   46a90:	94400015 	stw	r17,0(r18)
   46a94:	18800015 	stw	r2,0(r3)
   46a98:	003fe706 	br	46a38 <__alt_data_end+0xfffea678>
   46a9c:	01000804 	movi	r4,32
   46aa0:	2089c83a 	sub	r4,r4,r2
   46aa4:	1908983a 	sll	r4,r3,r4
   46aa8:	d9400117 	ldw	r5,4(sp)
   46aac:	1886d83a 	srl	r3,r3,r2
   46ab0:	2148b03a 	or	r4,r4,r5
   46ab4:	99000515 	stw	r4,20(r19)
   46ab8:	d8c00015 	stw	r3,0(sp)
   46abc:	003fca06 	br	469e8 <__alt_data_end+0xfffea628>

00046ac0 <__ratio>:
   46ac0:	defff904 	addi	sp,sp,-28
   46ac4:	dc400315 	stw	r17,12(sp)
   46ac8:	2823883a 	mov	r17,r5
   46acc:	d9400104 	addi	r5,sp,4
   46ad0:	dfc00615 	stw	ra,24(sp)
   46ad4:	dcc00515 	stw	r19,20(sp)
   46ad8:	dc800415 	stw	r18,16(sp)
   46adc:	2027883a 	mov	r19,r4
   46ae0:	dc000215 	stw	r16,8(sp)
   46ae4:	00468680 	call	46868 <__b2d>
   46ae8:	d80b883a 	mov	r5,sp
   46aec:	8809883a 	mov	r4,r17
   46af0:	1025883a 	mov	r18,r2
   46af4:	1821883a 	mov	r16,r3
   46af8:	00468680 	call	46868 <__b2d>
   46afc:	8a000417 	ldw	r8,16(r17)
   46b00:	99000417 	ldw	r4,16(r19)
   46b04:	d9400117 	ldw	r5,4(sp)
   46b08:	2209c83a 	sub	r4,r4,r8
   46b0c:	2010917a 	slli	r8,r4,5
   46b10:	d9000017 	ldw	r4,0(sp)
   46b14:	2909c83a 	sub	r4,r5,r4
   46b18:	4109883a 	add	r4,r8,r4
   46b1c:	01000e0e 	bge	zero,r4,46b58 <__ratio+0x98>
   46b20:	2008953a 	slli	r4,r4,20
   46b24:	2421883a 	add	r16,r4,r16
   46b28:	100d883a 	mov	r6,r2
   46b2c:	180f883a 	mov	r7,r3
   46b30:	9009883a 	mov	r4,r18
   46b34:	800b883a 	mov	r5,r16
   46b38:	004b2680 	call	4b268 <__divdf3>
   46b3c:	dfc00617 	ldw	ra,24(sp)
   46b40:	dcc00517 	ldw	r19,20(sp)
   46b44:	dc800417 	ldw	r18,16(sp)
   46b48:	dc400317 	ldw	r17,12(sp)
   46b4c:	dc000217 	ldw	r16,8(sp)
   46b50:	dec00704 	addi	sp,sp,28
   46b54:	f800283a 	ret
   46b58:	2008953a 	slli	r4,r4,20
   46b5c:	1907c83a 	sub	r3,r3,r4
   46b60:	003ff106 	br	46b28 <__alt_data_end+0xfffea768>

00046b64 <_mprec_log10>:
   46b64:	defffe04 	addi	sp,sp,-8
   46b68:	dc000015 	stw	r16,0(sp)
   46b6c:	dfc00115 	stw	ra,4(sp)
   46b70:	008005c4 	movi	r2,23
   46b74:	2021883a 	mov	r16,r4
   46b78:	11000d0e 	bge	r2,r4,46bb0 <_mprec_log10+0x4c>
   46b7c:	0005883a 	mov	r2,zero
   46b80:	00cffc34 	movhi	r3,16368
   46b84:	843fffc4 	addi	r16,r16,-1
   46b88:	000d883a 	mov	r6,zero
   46b8c:	01d00934 	movhi	r7,16420
   46b90:	1009883a 	mov	r4,r2
   46b94:	180b883a 	mov	r5,r3
   46b98:	004be900 	call	4be90 <__muldf3>
   46b9c:	803ff91e 	bne	r16,zero,46b84 <__alt_data_end+0xfffea7c4>
   46ba0:	dfc00117 	ldw	ra,4(sp)
   46ba4:	dc000017 	ldw	r16,0(sp)
   46ba8:	dec00204 	addi	sp,sp,8
   46bac:	f800283a 	ret
   46bb0:	202090fa 	slli	r16,r4,3
   46bb4:	00800174 	movhi	r2,5
   46bb8:	10be7a04 	addi	r2,r2,-1560
   46bbc:	1421883a 	add	r16,r2,r16
   46bc0:	80800017 	ldw	r2,0(r16)
   46bc4:	80c00117 	ldw	r3,4(r16)
   46bc8:	dfc00117 	ldw	ra,4(sp)
   46bcc:	dc000017 	ldw	r16,0(sp)
   46bd0:	dec00204 	addi	sp,sp,8
   46bd4:	f800283a 	ret

00046bd8 <__copybits>:
   46bd8:	297fffc4 	addi	r5,r5,-1
   46bdc:	280fd17a 	srai	r7,r5,5
   46be0:	30c00417 	ldw	r3,16(r6)
   46be4:	30800504 	addi	r2,r6,20
   46be8:	39c00044 	addi	r7,r7,1
   46bec:	18c7883a 	add	r3,r3,r3
   46bf0:	39cf883a 	add	r7,r7,r7
   46bf4:	18c7883a 	add	r3,r3,r3
   46bf8:	39cf883a 	add	r7,r7,r7
   46bfc:	10c7883a 	add	r3,r2,r3
   46c00:	21cf883a 	add	r7,r4,r7
   46c04:	10c00d2e 	bgeu	r2,r3,46c3c <__copybits+0x64>
   46c08:	200b883a 	mov	r5,r4
   46c0c:	12000017 	ldw	r8,0(r2)
   46c10:	29400104 	addi	r5,r5,4
   46c14:	10800104 	addi	r2,r2,4
   46c18:	2a3fff15 	stw	r8,-4(r5)
   46c1c:	10fffb36 	bltu	r2,r3,46c0c <__alt_data_end+0xfffea84c>
   46c20:	1985c83a 	sub	r2,r3,r6
   46c24:	10bffac4 	addi	r2,r2,-21
   46c28:	1004d0ba 	srli	r2,r2,2
   46c2c:	10800044 	addi	r2,r2,1
   46c30:	1085883a 	add	r2,r2,r2
   46c34:	1085883a 	add	r2,r2,r2
   46c38:	2089883a 	add	r4,r4,r2
   46c3c:	21c0032e 	bgeu	r4,r7,46c4c <__copybits+0x74>
   46c40:	20000015 	stw	zero,0(r4)
   46c44:	21000104 	addi	r4,r4,4
   46c48:	21fffd36 	bltu	r4,r7,46c40 <__alt_data_end+0xfffea880>
   46c4c:	f800283a 	ret

00046c50 <__any_on>:
   46c50:	20c00417 	ldw	r3,16(r4)
   46c54:	2805d17a 	srai	r2,r5,5
   46c58:	21000504 	addi	r4,r4,20
   46c5c:	18800d0e 	bge	r3,r2,46c94 <__any_on+0x44>
   46c60:	18c7883a 	add	r3,r3,r3
   46c64:	18c7883a 	add	r3,r3,r3
   46c68:	20c7883a 	add	r3,r4,r3
   46c6c:	20c0192e 	bgeu	r4,r3,46cd4 <__any_on+0x84>
   46c70:	18bfff17 	ldw	r2,-4(r3)
   46c74:	18ffff04 	addi	r3,r3,-4
   46c78:	1000041e 	bne	r2,zero,46c8c <__any_on+0x3c>
   46c7c:	20c0142e 	bgeu	r4,r3,46cd0 <__any_on+0x80>
   46c80:	18ffff04 	addi	r3,r3,-4
   46c84:	19400017 	ldw	r5,0(r3)
   46c88:	283ffc26 	beq	r5,zero,46c7c <__alt_data_end+0xfffea8bc>
   46c8c:	00800044 	movi	r2,1
   46c90:	f800283a 	ret
   46c94:	10c00a0e 	bge	r2,r3,46cc0 <__any_on+0x70>
   46c98:	1085883a 	add	r2,r2,r2
   46c9c:	1085883a 	add	r2,r2,r2
   46ca0:	294007cc 	andi	r5,r5,31
   46ca4:	2087883a 	add	r3,r4,r2
   46ca8:	283ff026 	beq	r5,zero,46c6c <__alt_data_end+0xfffea8ac>
   46cac:	19800017 	ldw	r6,0(r3)
   46cb0:	3144d83a 	srl	r2,r6,r5
   46cb4:	114a983a 	sll	r5,r2,r5
   46cb8:	317ff41e 	bne	r6,r5,46c8c <__alt_data_end+0xfffea8cc>
   46cbc:	003feb06 	br	46c6c <__alt_data_end+0xfffea8ac>
   46cc0:	1085883a 	add	r2,r2,r2
   46cc4:	1085883a 	add	r2,r2,r2
   46cc8:	2087883a 	add	r3,r4,r2
   46ccc:	003fe706 	br	46c6c <__alt_data_end+0xfffea8ac>
   46cd0:	f800283a 	ret
   46cd4:	0005883a 	mov	r2,zero
   46cd8:	f800283a 	ret

00046cdc <__fpclassifyd>:
   46cdc:	00a00034 	movhi	r2,32768
   46ce0:	10bfffc4 	addi	r2,r2,-1
   46ce4:	2884703a 	and	r2,r5,r2
   46ce8:	10000726 	beq	r2,zero,46d08 <__fpclassifyd+0x2c>
   46cec:	00fffc34 	movhi	r3,65520
   46cf0:	019ff834 	movhi	r6,32736
   46cf4:	28c7883a 	add	r3,r5,r3
   46cf8:	31bfffc4 	addi	r6,r6,-1
   46cfc:	30c00536 	bltu	r6,r3,46d14 <__fpclassifyd+0x38>
   46d00:	00800104 	movi	r2,4
   46d04:	f800283a 	ret
   46d08:	2000021e 	bne	r4,zero,46d14 <__fpclassifyd+0x38>
   46d0c:	00800084 	movi	r2,2
   46d10:	f800283a 	ret
   46d14:	00dffc34 	movhi	r3,32752
   46d18:	019ff834 	movhi	r6,32736
   46d1c:	28cb883a 	add	r5,r5,r3
   46d20:	31bfffc4 	addi	r6,r6,-1
   46d24:	317ff62e 	bgeu	r6,r5,46d00 <__alt_data_end+0xfffea940>
   46d28:	01400434 	movhi	r5,16
   46d2c:	297fffc4 	addi	r5,r5,-1
   46d30:	28800236 	bltu	r5,r2,46d3c <__fpclassifyd+0x60>
   46d34:	008000c4 	movi	r2,3
   46d38:	f800283a 	ret
   46d3c:	10c00226 	beq	r2,r3,46d48 <__fpclassifyd+0x6c>
   46d40:	0005883a 	mov	r2,zero
   46d44:	f800283a 	ret
   46d48:	2005003a 	cmpeq	r2,r4,zero
   46d4c:	f800283a 	ret

00046d50 <_sbrk_r>:
   46d50:	defffd04 	addi	sp,sp,-12
   46d54:	dc000015 	stw	r16,0(sp)
   46d58:	04000174 	movhi	r16,5
   46d5c:	dc400115 	stw	r17,4(sp)
   46d60:	840d1b04 	addi	r16,r16,13420
   46d64:	2023883a 	mov	r17,r4
   46d68:	2809883a 	mov	r4,r5
   46d6c:	dfc00215 	stw	ra,8(sp)
   46d70:	80000015 	stw	zero,0(r16)
   46d74:	004da080 	call	4da08 <sbrk>
   46d78:	00ffffc4 	movi	r3,-1
   46d7c:	10c00526 	beq	r2,r3,46d94 <_sbrk_r+0x44>
   46d80:	dfc00217 	ldw	ra,8(sp)
   46d84:	dc400117 	ldw	r17,4(sp)
   46d88:	dc000017 	ldw	r16,0(sp)
   46d8c:	dec00304 	addi	sp,sp,12
   46d90:	f800283a 	ret
   46d94:	80c00017 	ldw	r3,0(r16)
   46d98:	183ff926 	beq	r3,zero,46d80 <__alt_data_end+0xfffea9c0>
   46d9c:	88c00015 	stw	r3,0(r17)
   46da0:	003ff706 	br	46d80 <__alt_data_end+0xfffea9c0>

00046da4 <__sread>:
   46da4:	defffe04 	addi	sp,sp,-8
   46da8:	dc000015 	stw	r16,0(sp)
   46dac:	2821883a 	mov	r16,r5
   46db0:	2940038f 	ldh	r5,14(r5)
   46db4:	dfc00115 	stw	ra,4(sp)
   46db8:	004931c0 	call	4931c <_read_r>
   46dbc:	10000716 	blt	r2,zero,46ddc <__sread+0x38>
   46dc0:	80c01417 	ldw	r3,80(r16)
   46dc4:	1887883a 	add	r3,r3,r2
   46dc8:	80c01415 	stw	r3,80(r16)
   46dcc:	dfc00117 	ldw	ra,4(sp)
   46dd0:	dc000017 	ldw	r16,0(sp)
   46dd4:	dec00204 	addi	sp,sp,8
   46dd8:	f800283a 	ret
   46ddc:	80c0030b 	ldhu	r3,12(r16)
   46de0:	18fbffcc 	andi	r3,r3,61439
   46de4:	80c0030d 	sth	r3,12(r16)
   46de8:	dfc00117 	ldw	ra,4(sp)
   46dec:	dc000017 	ldw	r16,0(sp)
   46df0:	dec00204 	addi	sp,sp,8
   46df4:	f800283a 	ret

00046df8 <__seofread>:
   46df8:	0005883a 	mov	r2,zero
   46dfc:	f800283a 	ret

00046e00 <__swrite>:
   46e00:	2880030b 	ldhu	r2,12(r5)
   46e04:	defffb04 	addi	sp,sp,-20
   46e08:	dcc00315 	stw	r19,12(sp)
   46e0c:	dc800215 	stw	r18,8(sp)
   46e10:	dc400115 	stw	r17,4(sp)
   46e14:	dc000015 	stw	r16,0(sp)
   46e18:	dfc00415 	stw	ra,16(sp)
   46e1c:	10c0400c 	andi	r3,r2,256
   46e20:	2821883a 	mov	r16,r5
   46e24:	2023883a 	mov	r17,r4
   46e28:	3025883a 	mov	r18,r6
   46e2c:	3827883a 	mov	r19,r7
   46e30:	18000526 	beq	r3,zero,46e48 <__swrite+0x48>
   46e34:	2940038f 	ldh	r5,14(r5)
   46e38:	01c00084 	movi	r7,2
   46e3c:	000d883a 	mov	r6,zero
   46e40:	00491600 	call	49160 <_lseek_r>
   46e44:	8080030b 	ldhu	r2,12(r16)
   46e48:	8140038f 	ldh	r5,14(r16)
   46e4c:	10bbffcc 	andi	r2,r2,61439
   46e50:	980f883a 	mov	r7,r19
   46e54:	900d883a 	mov	r6,r18
   46e58:	8809883a 	mov	r4,r17
   46e5c:	8080030d 	sth	r2,12(r16)
   46e60:	dfc00417 	ldw	ra,16(sp)
   46e64:	dcc00317 	ldw	r19,12(sp)
   46e68:	dc800217 	ldw	r18,8(sp)
   46e6c:	dc400117 	ldw	r17,4(sp)
   46e70:	dc000017 	ldw	r16,0(sp)
   46e74:	dec00504 	addi	sp,sp,20
   46e78:	004874c1 	jmpi	4874c <_write_r>

00046e7c <__sseek>:
   46e7c:	defffe04 	addi	sp,sp,-8
   46e80:	dc000015 	stw	r16,0(sp)
   46e84:	2821883a 	mov	r16,r5
   46e88:	2940038f 	ldh	r5,14(r5)
   46e8c:	dfc00115 	stw	ra,4(sp)
   46e90:	00491600 	call	49160 <_lseek_r>
   46e94:	00ffffc4 	movi	r3,-1
   46e98:	10c00826 	beq	r2,r3,46ebc <__sseek+0x40>
   46e9c:	80c0030b 	ldhu	r3,12(r16)
   46ea0:	80801415 	stw	r2,80(r16)
   46ea4:	18c40014 	ori	r3,r3,4096
   46ea8:	80c0030d 	sth	r3,12(r16)
   46eac:	dfc00117 	ldw	ra,4(sp)
   46eb0:	dc000017 	ldw	r16,0(sp)
   46eb4:	dec00204 	addi	sp,sp,8
   46eb8:	f800283a 	ret
   46ebc:	80c0030b 	ldhu	r3,12(r16)
   46ec0:	18fbffcc 	andi	r3,r3,61439
   46ec4:	80c0030d 	sth	r3,12(r16)
   46ec8:	dfc00117 	ldw	ra,4(sp)
   46ecc:	dc000017 	ldw	r16,0(sp)
   46ed0:	dec00204 	addi	sp,sp,8
   46ed4:	f800283a 	ret

00046ed8 <__sclose>:
   46ed8:	2940038f 	ldh	r5,14(r5)
   46edc:	00487ac1 	jmpi	487ac <_close_r>

00046ee0 <strcmp>:
   46ee0:	2144b03a 	or	r2,r4,r5
   46ee4:	108000cc 	andi	r2,r2,3
   46ee8:	1000171e 	bne	r2,zero,46f48 <strcmp+0x68>
   46eec:	20800017 	ldw	r2,0(r4)
   46ef0:	28c00017 	ldw	r3,0(r5)
   46ef4:	10c0141e 	bne	r2,r3,46f48 <strcmp+0x68>
   46ef8:	027fbff4 	movhi	r9,65279
   46efc:	4a7fbfc4 	addi	r9,r9,-257
   46f00:	0086303a 	nor	r3,zero,r2
   46f04:	02202074 	movhi	r8,32897
   46f08:	1245883a 	add	r2,r2,r9
   46f0c:	42202004 	addi	r8,r8,-32640
   46f10:	10c4703a 	and	r2,r2,r3
   46f14:	1204703a 	and	r2,r2,r8
   46f18:	10000226 	beq	r2,zero,46f24 <strcmp+0x44>
   46f1c:	00002306 	br	46fac <strcmp+0xcc>
   46f20:	1000221e 	bne	r2,zero,46fac <strcmp+0xcc>
   46f24:	21000104 	addi	r4,r4,4
   46f28:	20c00017 	ldw	r3,0(r4)
   46f2c:	29400104 	addi	r5,r5,4
   46f30:	29800017 	ldw	r6,0(r5)
   46f34:	1a4f883a 	add	r7,r3,r9
   46f38:	00c4303a 	nor	r2,zero,r3
   46f3c:	3884703a 	and	r2,r7,r2
   46f40:	1204703a 	and	r2,r2,r8
   46f44:	19bff626 	beq	r3,r6,46f20 <__alt_data_end+0xfffeab60>
   46f48:	20800003 	ldbu	r2,0(r4)
   46f4c:	10c03fcc 	andi	r3,r2,255
   46f50:	18c0201c 	xori	r3,r3,128
   46f54:	18ffe004 	addi	r3,r3,-128
   46f58:	18000c26 	beq	r3,zero,46f8c <strcmp+0xac>
   46f5c:	29800007 	ldb	r6,0(r5)
   46f60:	19800326 	beq	r3,r6,46f70 <strcmp+0x90>
   46f64:	00001306 	br	46fb4 <strcmp+0xd4>
   46f68:	29800007 	ldb	r6,0(r5)
   46f6c:	11800b1e 	bne	r2,r6,46f9c <strcmp+0xbc>
   46f70:	21000044 	addi	r4,r4,1
   46f74:	20c00003 	ldbu	r3,0(r4)
   46f78:	29400044 	addi	r5,r5,1
   46f7c:	18803fcc 	andi	r2,r3,255
   46f80:	1080201c 	xori	r2,r2,128
   46f84:	10bfe004 	addi	r2,r2,-128
   46f88:	103ff71e 	bne	r2,zero,46f68 <__alt_data_end+0xfffeaba8>
   46f8c:	0007883a 	mov	r3,zero
   46f90:	28800003 	ldbu	r2,0(r5)
   46f94:	1885c83a 	sub	r2,r3,r2
   46f98:	f800283a 	ret
   46f9c:	28800003 	ldbu	r2,0(r5)
   46fa0:	18c03fcc 	andi	r3,r3,255
   46fa4:	1885c83a 	sub	r2,r3,r2
   46fa8:	f800283a 	ret
   46fac:	0005883a 	mov	r2,zero
   46fb0:	f800283a 	ret
   46fb4:	10c03fcc 	andi	r3,r2,255
   46fb8:	003ff506 	br	46f90 <__alt_data_end+0xfffeabd0>

00046fbc <strlen>:
   46fbc:	208000cc 	andi	r2,r4,3
   46fc0:	10002026 	beq	r2,zero,47044 <strlen+0x88>
   46fc4:	20800007 	ldb	r2,0(r4)
   46fc8:	10002026 	beq	r2,zero,4704c <strlen+0x90>
   46fcc:	2005883a 	mov	r2,r4
   46fd0:	00000206 	br	46fdc <strlen+0x20>
   46fd4:	10c00007 	ldb	r3,0(r2)
   46fd8:	18001826 	beq	r3,zero,4703c <strlen+0x80>
   46fdc:	10800044 	addi	r2,r2,1
   46fe0:	10c000cc 	andi	r3,r2,3
   46fe4:	183ffb1e 	bne	r3,zero,46fd4 <__alt_data_end+0xfffeac14>
   46fe8:	10c00017 	ldw	r3,0(r2)
   46fec:	01ffbff4 	movhi	r7,65279
   46ff0:	39ffbfc4 	addi	r7,r7,-257
   46ff4:	00ca303a 	nor	r5,zero,r3
   46ff8:	01a02074 	movhi	r6,32897
   46ffc:	19c7883a 	add	r3,r3,r7
   47000:	31a02004 	addi	r6,r6,-32640
   47004:	1946703a 	and	r3,r3,r5
   47008:	1986703a 	and	r3,r3,r6
   4700c:	1800091e 	bne	r3,zero,47034 <strlen+0x78>
   47010:	10800104 	addi	r2,r2,4
   47014:	10c00017 	ldw	r3,0(r2)
   47018:	19cb883a 	add	r5,r3,r7
   4701c:	00c6303a 	nor	r3,zero,r3
   47020:	28c6703a 	and	r3,r5,r3
   47024:	1986703a 	and	r3,r3,r6
   47028:	183ff926 	beq	r3,zero,47010 <__alt_data_end+0xfffeac50>
   4702c:	00000106 	br	47034 <strlen+0x78>
   47030:	10800044 	addi	r2,r2,1
   47034:	10c00007 	ldb	r3,0(r2)
   47038:	183ffd1e 	bne	r3,zero,47030 <__alt_data_end+0xfffeac70>
   4703c:	1105c83a 	sub	r2,r2,r4
   47040:	f800283a 	ret
   47044:	2005883a 	mov	r2,r4
   47048:	003fe706 	br	46fe8 <__alt_data_end+0xfffeac28>
   4704c:	0005883a 	mov	r2,zero
   47050:	f800283a 	ret

00047054 <__sprint_r.part.0>:
   47054:	28801917 	ldw	r2,100(r5)
   47058:	defff604 	addi	sp,sp,-40
   4705c:	dd400515 	stw	r21,20(sp)
   47060:	dfc00915 	stw	ra,36(sp)
   47064:	df000815 	stw	fp,32(sp)
   47068:	ddc00715 	stw	r23,28(sp)
   4706c:	dd800615 	stw	r22,24(sp)
   47070:	dd000415 	stw	r20,16(sp)
   47074:	dcc00315 	stw	r19,12(sp)
   47078:	dc800215 	stw	r18,8(sp)
   4707c:	dc400115 	stw	r17,4(sp)
   47080:	dc000015 	stw	r16,0(sp)
   47084:	1088000c 	andi	r2,r2,8192
   47088:	302b883a 	mov	r21,r6
   4708c:	10002e26 	beq	r2,zero,47148 <__sprint_r.part.0+0xf4>
   47090:	30800217 	ldw	r2,8(r6)
   47094:	35800017 	ldw	r22,0(r6)
   47098:	10002926 	beq	r2,zero,47140 <__sprint_r.part.0+0xec>
   4709c:	2827883a 	mov	r19,r5
   470a0:	2029883a 	mov	r20,r4
   470a4:	b5c00104 	addi	r23,r22,4
   470a8:	04bfffc4 	movi	r18,-1
   470ac:	bc400017 	ldw	r17,0(r23)
   470b0:	b4000017 	ldw	r16,0(r22)
   470b4:	0039883a 	mov	fp,zero
   470b8:	8822d0ba 	srli	r17,r17,2
   470bc:	8800031e 	bne	r17,zero,470cc <__sprint_r.part.0+0x78>
   470c0:	00001806 	br	47124 <__sprint_r.part.0+0xd0>
   470c4:	84000104 	addi	r16,r16,4
   470c8:	8f001526 	beq	r17,fp,47120 <__sprint_r.part.0+0xcc>
   470cc:	81400017 	ldw	r5,0(r16)
   470d0:	980d883a 	mov	r6,r19
   470d4:	a009883a 	mov	r4,r20
   470d8:	0048b440 	call	48b44 <_fputwc_r>
   470dc:	e7000044 	addi	fp,fp,1
   470e0:	14bff81e 	bne	r2,r18,470c4 <__alt_data_end+0xfffead04>
   470e4:	9005883a 	mov	r2,r18
   470e8:	a8000215 	stw	zero,8(r21)
   470ec:	a8000115 	stw	zero,4(r21)
   470f0:	dfc00917 	ldw	ra,36(sp)
   470f4:	df000817 	ldw	fp,32(sp)
   470f8:	ddc00717 	ldw	r23,28(sp)
   470fc:	dd800617 	ldw	r22,24(sp)
   47100:	dd400517 	ldw	r21,20(sp)
   47104:	dd000417 	ldw	r20,16(sp)
   47108:	dcc00317 	ldw	r19,12(sp)
   4710c:	dc800217 	ldw	r18,8(sp)
   47110:	dc400117 	ldw	r17,4(sp)
   47114:	dc000017 	ldw	r16,0(sp)
   47118:	dec00a04 	addi	sp,sp,40
   4711c:	f800283a 	ret
   47120:	a8800217 	ldw	r2,8(r21)
   47124:	8c63883a 	add	r17,r17,r17
   47128:	8c63883a 	add	r17,r17,r17
   4712c:	1445c83a 	sub	r2,r2,r17
   47130:	a8800215 	stw	r2,8(r21)
   47134:	b5800204 	addi	r22,r22,8
   47138:	bdc00204 	addi	r23,r23,8
   4713c:	103fdb1e 	bne	r2,zero,470ac <__alt_data_end+0xfffeacec>
   47140:	0005883a 	mov	r2,zero
   47144:	003fe806 	br	470e8 <__alt_data_end+0xfffead28>
   47148:	0048c440 	call	48c44 <__sfvwrite_r>
   4714c:	003fe606 	br	470e8 <__alt_data_end+0xfffead28>

00047150 <__sprint_r>:
   47150:	30c00217 	ldw	r3,8(r6)
   47154:	18000126 	beq	r3,zero,4715c <__sprint_r+0xc>
   47158:	00470541 	jmpi	47054 <__sprint_r.part.0>
   4715c:	30000115 	stw	zero,4(r6)
   47160:	0005883a 	mov	r2,zero
   47164:	f800283a 	ret

00047168 <___vfiprintf_internal_r>:
   47168:	deffca04 	addi	sp,sp,-216
   4716c:	dd403115 	stw	r21,196(sp)
   47170:	dfc03515 	stw	ra,212(sp)
   47174:	df003415 	stw	fp,208(sp)
   47178:	ddc03315 	stw	r23,204(sp)
   4717c:	dd803215 	stw	r22,200(sp)
   47180:	dd003015 	stw	r20,192(sp)
   47184:	dcc02f15 	stw	r19,188(sp)
   47188:	dc802e15 	stw	r18,184(sp)
   4718c:	dc402d15 	stw	r17,180(sp)
   47190:	dc002c15 	stw	r16,176(sp)
   47194:	d9002115 	stw	r4,132(sp)
   47198:	d9402015 	stw	r5,128(sp)
   4719c:	d9c02215 	stw	r7,136(sp)
   471a0:	302b883a 	mov	r21,r6
   471a4:	20000226 	beq	r4,zero,471b0 <___vfiprintf_internal_r+0x48>
   471a8:	20800e17 	ldw	r2,56(r4)
   471ac:	1000cf26 	beq	r2,zero,474ec <___vfiprintf_internal_r+0x384>
   471b0:	d8c02017 	ldw	r3,128(sp)
   471b4:	1880030b 	ldhu	r2,12(r3)
   471b8:	10c8000c 	andi	r3,r2,8192
   471bc:	1800071e 	bne	r3,zero,471dc <___vfiprintf_internal_r+0x74>
   471c0:	d9402017 	ldw	r5,128(sp)
   471c4:	00f7ffc4 	movi	r3,-8193
   471c8:	10880014 	ori	r2,r2,8192
   471cc:	29001917 	ldw	r4,100(r5)
   471d0:	2880030d 	sth	r2,12(r5)
   471d4:	20c6703a 	and	r3,r4,r3
   471d8:	28c01915 	stw	r3,100(r5)
   471dc:	10c0020c 	andi	r3,r2,8
   471e0:	1800a526 	beq	r3,zero,47478 <___vfiprintf_internal_r+0x310>
   471e4:	d9002017 	ldw	r4,128(sp)
   471e8:	20c00417 	ldw	r3,16(r4)
   471ec:	1800a226 	beq	r3,zero,47478 <___vfiprintf_internal_r+0x310>
   471f0:	1080068c 	andi	r2,r2,26
   471f4:	00c00284 	movi	r3,10
   471f8:	10c0a826 	beq	r2,r3,4749c <___vfiprintf_internal_r+0x334>
   471fc:	d9001a04 	addi	r4,sp,104
   47200:	d94019c4 	addi	r5,sp,103
   47204:	04800174 	movhi	r18,5
   47208:	2145c83a 	sub	r2,r4,r5
   4720c:	94beac04 	addi	r18,r18,-1360
   47210:	d9001e15 	stw	r4,120(sp)
   47214:	d9401f15 	stw	r5,124(sp)
   47218:	dec01a15 	stw	sp,104(sp)
   4721c:	d8001c15 	stw	zero,112(sp)
   47220:	d8001b15 	stw	zero,108(sp)
   47224:	d811883a 	mov	r8,sp
   47228:	d8002615 	stw	zero,152(sp)
   4722c:	d8002415 	stw	zero,144(sp)
   47230:	d8802815 	stw	r2,160(sp)
   47234:	a82d883a 	mov	r22,r21
   47238:	b0800007 	ldb	r2,0(r22)
   4723c:	10040d26 	beq	r2,zero,48274 <___vfiprintf_internal_r+0x110c>
   47240:	00c00944 	movi	r3,37
   47244:	b029883a 	mov	r20,r22
   47248:	10c0021e 	bne	r2,r3,47254 <___vfiprintf_internal_r+0xec>
   4724c:	00001606 	br	472a8 <___vfiprintf_internal_r+0x140>
   47250:	10c00326 	beq	r2,r3,47260 <___vfiprintf_internal_r+0xf8>
   47254:	a5000044 	addi	r20,r20,1
   47258:	a0800007 	ldb	r2,0(r20)
   4725c:	103ffc1e 	bne	r2,zero,47250 <__alt_data_end+0xfffeae90>
   47260:	a5a1c83a 	sub	r16,r20,r22
   47264:	80001026 	beq	r16,zero,472a8 <___vfiprintf_internal_r+0x140>
   47268:	d8c01c17 	ldw	r3,112(sp)
   4726c:	d8801b17 	ldw	r2,108(sp)
   47270:	45800015 	stw	r22,0(r8)
   47274:	80c7883a 	add	r3,r16,r3
   47278:	10800044 	addi	r2,r2,1
   4727c:	44000115 	stw	r16,4(r8)
   47280:	d8c01c15 	stw	r3,112(sp)
   47284:	d8801b15 	stw	r2,108(sp)
   47288:	010001c4 	movi	r4,7
   4728c:	2080750e 	bge	r4,r2,47464 <___vfiprintf_internal_r+0x2fc>
   47290:	1803951e 	bne	r3,zero,480e8 <___vfiprintf_internal_r+0xf80>
   47294:	d8c02417 	ldw	r3,144(sp)
   47298:	d8001b15 	stw	zero,108(sp)
   4729c:	d811883a 	mov	r8,sp
   472a0:	1c07883a 	add	r3,r3,r16
   472a4:	d8c02415 	stw	r3,144(sp)
   472a8:	a0800007 	ldb	r2,0(r20)
   472ac:	1002e026 	beq	r2,zero,47e30 <___vfiprintf_internal_r+0xcc8>
   472b0:	a5800044 	addi	r22,r20,1
   472b4:	a0c00047 	ldb	r3,1(r20)
   472b8:	d8001d85 	stb	zero,118(sp)
   472bc:	0027883a 	mov	r19,zero
   472c0:	d8002305 	stb	zero,140(sp)
   472c4:	043fffc4 	movi	r16,-1
   472c8:	d8002515 	stw	zero,148(sp)
   472cc:	0023883a 	mov	r17,zero
   472d0:	05001604 	movi	r20,88
   472d4:	05400244 	movi	r21,9
   472d8:	402f883a 	mov	r23,r8
   472dc:	b5800044 	addi	r22,r22,1
   472e0:	18bff804 	addi	r2,r3,-32
   472e4:	a0827736 	bltu	r20,r2,47cc4 <___vfiprintf_internal_r+0xb5c>
   472e8:	100490ba 	slli	r2,r2,2
   472ec:	01000134 	movhi	r4,4
   472f0:	211cc004 	addi	r4,r4,29440
   472f4:	1105883a 	add	r2,r2,r4
   472f8:	10800017 	ldw	r2,0(r2)
   472fc:	1000683a 	jmp	r2
   47300:	000479c4 	movi	zero,4583
   47304:	00047cc4 	movi	zero,4595
   47308:	00047cc4 	movi	zero,4595
   4730c:	000479e0 	cmpeqi	zero,zero,4583
   47310:	00047cc4 	movi	zero,4595
   47314:	00047cc4 	movi	zero,4595
   47318:	00047cc4 	movi	zero,4595
   4731c:	00047cc4 	movi	zero,4595
   47320:	00047cc4 	movi	zero,4595
   47324:	00047cc4 	movi	zero,4595
   47328:	00047be8 	cmpgeui	zero,zero,4591
   4732c:	00047c0c 	andi	zero,zero,4592
   47330:	00047cc4 	movi	zero,4595
   47334:	00047504 	movi	zero,4564
   47338:	00047c20 	cmpeqi	zero,zero,4592
   4733c:	00047cc4 	movi	zero,4595
   47340:	000479ec 	andhi	zero,zero,4583
   47344:	000479f8 	rdprs	zero,zero,4583
   47348:	000479f8 	rdprs	zero,zero,4583
   4734c:	000479f8 	rdprs	zero,zero,4583
   47350:	000479f8 	rdprs	zero,zero,4583
   47354:	000479f8 	rdprs	zero,zero,4583
   47358:	000479f8 	rdprs	zero,zero,4583
   4735c:	000479f8 	rdprs	zero,zero,4583
   47360:	000479f8 	rdprs	zero,zero,4583
   47364:	000479f8 	rdprs	zero,zero,4583
   47368:	00047cc4 	movi	zero,4595
   4736c:	00047cc4 	movi	zero,4595
   47370:	00047cc4 	movi	zero,4595
   47374:	00047cc4 	movi	zero,4595
   47378:	00047cc4 	movi	zero,4595
   4737c:	00047cc4 	movi	zero,4595
   47380:	00047cc4 	movi	zero,4595
   47384:	00047cc4 	movi	zero,4595
   47388:	00047cc4 	movi	zero,4595
   4738c:	00047cc4 	movi	zero,4595
   47390:	00047a38 	rdprs	zero,zero,4584
   47394:	00047cc4 	movi	zero,4595
   47398:	00047cc4 	movi	zero,4595
   4739c:	00047cc4 	movi	zero,4595
   473a0:	00047cc4 	movi	zero,4595
   473a4:	00047cc4 	movi	zero,4595
   473a8:	00047cc4 	movi	zero,4595
   473ac:	00047cc4 	movi	zero,4595
   473b0:	00047cc4 	movi	zero,4595
   473b4:	00047cc4 	movi	zero,4595
   473b8:	00047cc4 	movi	zero,4595
   473bc:	00047a74 	movhi	zero,4585
   473c0:	00047cc4 	movi	zero,4595
   473c4:	00047cc4 	movi	zero,4595
   473c8:	00047cc4 	movi	zero,4595
   473cc:	00047cc4 	movi	zero,4595
   473d0:	00047cc4 	movi	zero,4595
   473d4:	00047ad0 	cmplti	zero,zero,4587
   473d8:	00047cc4 	movi	zero,4595
   473dc:	00047cc4 	movi	zero,4595
   473e0:	00047b44 	movi	zero,4589
   473e4:	00047cc4 	movi	zero,4595
   473e8:	00047cc4 	movi	zero,4595
   473ec:	00047cc4 	movi	zero,4595
   473f0:	00047cc4 	movi	zero,4595
   473f4:	00047cc4 	movi	zero,4595
   473f8:	00047cc4 	movi	zero,4595
   473fc:	00047cc4 	movi	zero,4595
   47400:	00047cc4 	movi	zero,4595
   47404:	00047cc4 	movi	zero,4595
   47408:	00047cc4 	movi	zero,4595
   4740c:	000478ec 	andhi	zero,zero,4579
   47410:	0004791c 	xori	zero,zero,4580
   47414:	00047cc4 	movi	zero,4595
   47418:	00047cc4 	movi	zero,4595
   4741c:	00047cc4 	movi	zero,4595
   47420:	00047c6c 	andhi	zero,zero,4593
   47424:	0004791c 	xori	zero,zero,4580
   47428:	00047cc4 	movi	zero,4595
   4742c:	00047cc4 	movi	zero,4595
   47430:	000477c4 	movi	zero,4575
   47434:	00047cc4 	movi	zero,4595
   47438:	000477d8 	cmpnei	zero,zero,4575
   4743c:	00047810 	cmplti	zero,zero,4576
   47440:	00047510 	cmplti	zero,zero,4564
   47444:	000477b8 	rdprs	zero,zero,4574
   47448:	00047cc4 	movi	zero,4595
   4744c:	00047b84 	movi	zero,4590
   47450:	00047cc4 	movi	zero,4595
   47454:	00047bd0 	cmplti	zero,zero,4591
   47458:	00047cc4 	movi	zero,4595
   4745c:	00047cc4 	movi	zero,4595
   47460:	00047894 	movui	zero,4578
   47464:	42000204 	addi	r8,r8,8
   47468:	d8c02417 	ldw	r3,144(sp)
   4746c:	1c07883a 	add	r3,r3,r16
   47470:	d8c02415 	stw	r3,144(sp)
   47474:	003f8c06 	br	472a8 <__alt_data_end+0xfffeaee8>
   47478:	d9402017 	ldw	r5,128(sp)
   4747c:	d9002117 	ldw	r4,132(sp)
   47480:	00428140 	call	42814 <__swsetup_r>
   47484:	1003c11e 	bne	r2,zero,4838c <___vfiprintf_internal_r+0x1224>
   47488:	d9402017 	ldw	r5,128(sp)
   4748c:	00c00284 	movi	r3,10
   47490:	2880030b 	ldhu	r2,12(r5)
   47494:	1080068c 	andi	r2,r2,26
   47498:	10ff581e 	bne	r2,r3,471fc <__alt_data_end+0xfffeae3c>
   4749c:	d8c02017 	ldw	r3,128(sp)
   474a0:	1880038f 	ldh	r2,14(r3)
   474a4:	103f5516 	blt	r2,zero,471fc <__alt_data_end+0xfffeae3c>
   474a8:	d9c02217 	ldw	r7,136(sp)
   474ac:	d9002117 	ldw	r4,132(sp)
   474b0:	a80d883a 	mov	r6,r21
   474b4:	180b883a 	mov	r5,r3
   474b8:	00486900 	call	48690 <__sbprintf>
   474bc:	dfc03517 	ldw	ra,212(sp)
   474c0:	df003417 	ldw	fp,208(sp)
   474c4:	ddc03317 	ldw	r23,204(sp)
   474c8:	dd803217 	ldw	r22,200(sp)
   474cc:	dd403117 	ldw	r21,196(sp)
   474d0:	dd003017 	ldw	r20,192(sp)
   474d4:	dcc02f17 	ldw	r19,188(sp)
   474d8:	dc802e17 	ldw	r18,184(sp)
   474dc:	dc402d17 	ldw	r17,180(sp)
   474e0:	dc002c17 	ldw	r16,176(sp)
   474e4:	dec03604 	addi	sp,sp,216
   474e8:	f800283a 	ret
   474ec:	00448200 	call	44820 <__sinit>
   474f0:	003f2f06 	br	471b0 <__alt_data_end+0xfffeadf0>
   474f4:	d8c02517 	ldw	r3,148(sp)
   474f8:	d8802215 	stw	r2,136(sp)
   474fc:	00c7c83a 	sub	r3,zero,r3
   47500:	d8c02515 	stw	r3,148(sp)
   47504:	8c400114 	ori	r17,r17,4
   47508:	b0c00007 	ldb	r3,0(r22)
   4750c:	003f7306 	br	472dc <__alt_data_end+0xfffeaf1c>
   47510:	00800c04 	movi	r2,48
   47514:	d9402217 	ldw	r5,136(sp)
   47518:	d8801d05 	stb	r2,116(sp)
   4751c:	00801e04 	movi	r2,120
   47520:	d8801d45 	stb	r2,117(sp)
   47524:	d8001d85 	stb	zero,118(sp)
   47528:	b811883a 	mov	r8,r23
   4752c:	28c00104 	addi	r3,r5,4
   47530:	2cc00017 	ldw	r19,0(r5)
   47534:	0029883a 	mov	r20,zero
   47538:	88800094 	ori	r2,r17,2
   4753c:	80032516 	blt	r16,zero,481d4 <___vfiprintf_internal_r+0x106c>
   47540:	00bfdfc4 	movi	r2,-129
   47544:	88a2703a 	and	r17,r17,r2
   47548:	d8c02215 	stw	r3,136(sp)
   4754c:	8c400094 	ori	r17,r17,2
   47550:	98032a1e 	bne	r19,zero,481fc <___vfiprintf_internal_r+0x1094>
   47554:	00800174 	movhi	r2,5
   47558:	10be4b04 	addi	r2,r2,-1748
   4755c:	d8802615 	stw	r2,152(sp)
   47560:	002b883a 	mov	r21,zero
   47564:	8001741e 	bne	r16,zero,47b38 <___vfiprintf_internal_r+0x9d0>
   47568:	0021883a 	mov	r16,zero
   4756c:	0029883a 	mov	r20,zero
   47570:	ddc01a04 	addi	r23,sp,104
   47574:	8027883a 	mov	r19,r16
   47578:	8500010e 	bge	r16,r20,47580 <___vfiprintf_internal_r+0x418>
   4757c:	a027883a 	mov	r19,r20
   47580:	ad403fcc 	andi	r21,r21,255
   47584:	ad40201c 	xori	r21,r21,128
   47588:	ad7fe004 	addi	r21,r21,-128
   4758c:	a8000126 	beq	r21,zero,47594 <___vfiprintf_internal_r+0x42c>
   47590:	9cc00044 	addi	r19,r19,1
   47594:	89c0008c 	andi	r7,r17,2
   47598:	38000126 	beq	r7,zero,475a0 <___vfiprintf_internal_r+0x438>
   4759c:	9cc00084 	addi	r19,r19,2
   475a0:	88c0210c 	andi	r3,r17,132
   475a4:	1801dd1e 	bne	r3,zero,47d1c <___vfiprintf_internal_r+0xbb4>
   475a8:	d9402517 	ldw	r5,148(sp)
   475ac:	2cebc83a 	sub	r21,r5,r19
   475b0:	0541da0e 	bge	zero,r21,47d1c <___vfiprintf_internal_r+0xbb4>
   475b4:	07000404 	movi	fp,16
   475b8:	d8801c17 	ldw	r2,112(sp)
   475bc:	e543be0e 	bge	fp,r21,484b8 <___vfiprintf_internal_r+0x1350>
   475c0:	01400174 	movhi	r5,5
   475c4:	297eb004 	addi	r5,r5,-1344
   475c8:	dc002715 	stw	r16,156(sp)
   475cc:	d9801b17 	ldw	r6,108(sp)
   475d0:	a821883a 	mov	r16,r21
   475d4:	d9402315 	stw	r5,140(sp)
   475d8:	028001c4 	movi	r10,7
   475dc:	d9c02915 	stw	r7,164(sp)
   475e0:	182b883a 	mov	r21,r3
   475e4:	00000506 	br	475fc <___vfiprintf_internal_r+0x494>
   475e8:	31000084 	addi	r4,r6,2
   475ec:	42000204 	addi	r8,r8,8
   475f0:	180d883a 	mov	r6,r3
   475f4:	843ffc04 	addi	r16,r16,-16
   475f8:	e4000f0e 	bge	fp,r16,47638 <___vfiprintf_internal_r+0x4d0>
   475fc:	01000174 	movhi	r4,5
   47600:	10800404 	addi	r2,r2,16
   47604:	30c00044 	addi	r3,r6,1
   47608:	213eb004 	addi	r4,r4,-1344
   4760c:	41000015 	stw	r4,0(r8)
   47610:	47000115 	stw	fp,4(r8)
   47614:	d8801c15 	stw	r2,112(sp)
   47618:	d8c01b15 	stw	r3,108(sp)
   4761c:	50fff20e 	bge	r10,r3,475e8 <__alt_data_end+0xfffeb228>
   47620:	1001b21e 	bne	r2,zero,47cec <___vfiprintf_internal_r+0xb84>
   47624:	843ffc04 	addi	r16,r16,-16
   47628:	000d883a 	mov	r6,zero
   4762c:	01000044 	movi	r4,1
   47630:	d811883a 	mov	r8,sp
   47634:	e43ff116 	blt	fp,r16,475fc <__alt_data_end+0xfffeb23c>
   47638:	a807883a 	mov	r3,r21
   4763c:	d9c02917 	ldw	r7,164(sp)
   47640:	802b883a 	mov	r21,r16
   47644:	dc002717 	ldw	r16,156(sp)
   47648:	d9402317 	ldw	r5,140(sp)
   4764c:	a885883a 	add	r2,r21,r2
   47650:	45400115 	stw	r21,4(r8)
   47654:	41400015 	stw	r5,0(r8)
   47658:	d8801c15 	stw	r2,112(sp)
   4765c:	d9001b15 	stw	r4,108(sp)
   47660:	014001c4 	movi	r5,7
   47664:	29026216 	blt	r5,r4,47ff0 <___vfiprintf_internal_r+0xe88>
   47668:	d9801d87 	ldb	r6,118(sp)
   4766c:	42000204 	addi	r8,r8,8
   47670:	21400044 	addi	r5,r4,1
   47674:	3001ae1e 	bne	r6,zero,47d30 <___vfiprintf_internal_r+0xbc8>
   47678:	3801bb26 	beq	r7,zero,47d68 <___vfiprintf_internal_r+0xc00>
   4767c:	d9001d04 	addi	r4,sp,116
   47680:	10800084 	addi	r2,r2,2
   47684:	41000015 	stw	r4,0(r8)
   47688:	01000084 	movi	r4,2
   4768c:	41000115 	stw	r4,4(r8)
   47690:	d8801c15 	stw	r2,112(sp)
   47694:	d9401b15 	stw	r5,108(sp)
   47698:	010001c4 	movi	r4,7
   4769c:	2142680e 	bge	r4,r5,48040 <___vfiprintf_internal_r+0xed8>
   476a0:	1002b11e 	bne	r2,zero,48168 <___vfiprintf_internal_r+0x1000>
   476a4:	01802004 	movi	r6,128
   476a8:	01400044 	movi	r5,1
   476ac:	0009883a 	mov	r4,zero
   476b0:	d811883a 	mov	r8,sp
   476b4:	1981ae1e 	bne	r3,r6,47d70 <___vfiprintf_internal_r+0xc08>
   476b8:	d8c02517 	ldw	r3,148(sp)
   476bc:	1cf9c83a 	sub	fp,r3,r19
   476c0:	0701ab0e 	bge	zero,fp,47d70 <___vfiprintf_internal_r+0xc08>
   476c4:	05400404 	movi	r21,16
   476c8:	af03a90e 	bge	r21,fp,48570 <___vfiprintf_internal_r+0x1408>
   476cc:	01400174 	movhi	r5,5
   476d0:	297eac04 	addi	r5,r5,-1360
   476d4:	d9402315 	stw	r5,140(sp)
   476d8:	01c001c4 	movi	r7,7
   476dc:	00000506 	br	476f4 <___vfiprintf_internal_r+0x58c>
   476e0:	21800084 	addi	r6,r4,2
   476e4:	42000204 	addi	r8,r8,8
   476e8:	1809883a 	mov	r4,r3
   476ec:	e73ffc04 	addi	fp,fp,-16
   476f0:	af000d0e 	bge	r21,fp,47728 <___vfiprintf_internal_r+0x5c0>
   476f4:	10800404 	addi	r2,r2,16
   476f8:	20c00044 	addi	r3,r4,1
   476fc:	44800015 	stw	r18,0(r8)
   47700:	45400115 	stw	r21,4(r8)
   47704:	d8801c15 	stw	r2,112(sp)
   47708:	d8c01b15 	stw	r3,108(sp)
   4770c:	38fff40e 	bge	r7,r3,476e0 <__alt_data_end+0xfffeb320>
   47710:	10022b1e 	bne	r2,zero,47fc0 <___vfiprintf_internal_r+0xe58>
   47714:	e73ffc04 	addi	fp,fp,-16
   47718:	01800044 	movi	r6,1
   4771c:	0009883a 	mov	r4,zero
   47720:	d811883a 	mov	r8,sp
   47724:	af3ff316 	blt	r21,fp,476f4 <__alt_data_end+0xfffeb334>
   47728:	d8c02317 	ldw	r3,140(sp)
   4772c:	1705883a 	add	r2,r2,fp
   47730:	47000115 	stw	fp,4(r8)
   47734:	40c00015 	stw	r3,0(r8)
   47738:	d8801c15 	stw	r2,112(sp)
   4773c:	d9801b15 	stw	r6,108(sp)
   47740:	00c001c4 	movi	r3,7
   47744:	19829416 	blt	r3,r6,48198 <___vfiprintf_internal_r+0x1030>
   47748:	8521c83a 	sub	r16,r16,r20
   4774c:	42000204 	addi	r8,r8,8
   47750:	31400044 	addi	r5,r6,1
   47754:	3009883a 	mov	r4,r6
   47758:	04018716 	blt	zero,r16,47d78 <___vfiprintf_internal_r+0xc10>
   4775c:	a085883a 	add	r2,r20,r2
   47760:	45c00015 	stw	r23,0(r8)
   47764:	45000115 	stw	r20,4(r8)
   47768:	d8801c15 	stw	r2,112(sp)
   4776c:	d9401b15 	stw	r5,108(sp)
   47770:	00c001c4 	movi	r3,7
   47774:	1941c20e 	bge	r3,r5,47e80 <___vfiprintf_internal_r+0xd18>
   47778:	1002531e 	bne	r2,zero,480c8 <___vfiprintf_internal_r+0xf60>
   4777c:	d8001b15 	stw	zero,108(sp)
   47780:	8c40010c 	andi	r17,r17,4
   47784:	88023226 	beq	r17,zero,48050 <___vfiprintf_internal_r+0xee8>
   47788:	d9002517 	ldw	r4,148(sp)
   4778c:	24e3c83a 	sub	r17,r4,r19
   47790:	04432916 	blt	zero,r17,48438 <___vfiprintf_internal_r+0x12d0>
   47794:	d8802517 	ldw	r2,148(sp)
   47798:	14c0010e 	bge	r2,r19,477a0 <___vfiprintf_internal_r+0x638>
   4779c:	9805883a 	mov	r2,r19
   477a0:	d8c02417 	ldw	r3,144(sp)
   477a4:	1887883a 	add	r3,r3,r2
   477a8:	d8c02415 	stw	r3,144(sp)
   477ac:	d8001b15 	stw	zero,108(sp)
   477b0:	d811883a 	mov	r8,sp
   477b4:	003ea006 	br	47238 <__alt_data_end+0xfffeae78>
   477b8:	8c400814 	ori	r17,r17,32
   477bc:	b0c00007 	ldb	r3,0(r22)
   477c0:	003ec606 	br	472dc <__alt_data_end+0xfffeaf1c>
   477c4:	b0c00007 	ldb	r3,0(r22)
   477c8:	00801b04 	movi	r2,108
   477cc:	18832026 	beq	r3,r2,48450 <___vfiprintf_internal_r+0x12e8>
   477d0:	8c400414 	ori	r17,r17,16
   477d4:	003ec106 	br	472dc <__alt_data_end+0xfffeaf1c>
   477d8:	9cc03fcc 	andi	r19,r19,255
   477dc:	b811883a 	mov	r8,r23
   477e0:	9803981e 	bne	r19,zero,48644 <___vfiprintf_internal_r+0x14dc>
   477e4:	8880080c 	andi	r2,r17,32
   477e8:	1002be26 	beq	r2,zero,482e4 <___vfiprintf_internal_r+0x117c>
   477ec:	d9002217 	ldw	r4,136(sp)
   477f0:	d9402417 	ldw	r5,144(sp)
   477f4:	20800017 	ldw	r2,0(r4)
   477f8:	2807d7fa 	srai	r3,r5,31
   477fc:	21000104 	addi	r4,r4,4
   47800:	d9002215 	stw	r4,136(sp)
   47804:	11400015 	stw	r5,0(r2)
   47808:	10c00115 	stw	r3,4(r2)
   4780c:	003e8a06 	br	47238 <__alt_data_end+0xfffeae78>
   47810:	9cc03fcc 	andi	r19,r19,255
   47814:	b811883a 	mov	r8,r23
   47818:	9803871e 	bne	r19,zero,48638 <___vfiprintf_internal_r+0x14d0>
   4781c:	8880080c 	andi	r2,r17,32
   47820:	10009a26 	beq	r2,zero,47a8c <___vfiprintf_internal_r+0x924>
   47824:	d9002217 	ldw	r4,136(sp)
   47828:	d8001d85 	stb	zero,118(sp)
   4782c:	20800204 	addi	r2,r4,8
   47830:	24c00017 	ldw	r19,0(r4)
   47834:	25000117 	ldw	r20,4(r4)
   47838:	8002a416 	blt	r16,zero,482cc <___vfiprintf_internal_r+0x1164>
   4783c:	013fdfc4 	movi	r4,-129
   47840:	9d06b03a 	or	r3,r19,r20
   47844:	d8802215 	stw	r2,136(sp)
   47848:	8922703a 	and	r17,r17,r4
   4784c:	18009b26 	beq	r3,zero,47abc <___vfiprintf_internal_r+0x954>
   47850:	002b883a 	mov	r21,zero
   47854:	ddc01a04 	addi	r23,sp,104
   47858:	9806d0fa 	srli	r3,r19,3
   4785c:	a008977a 	slli	r4,r20,29
   47860:	a028d0fa 	srli	r20,r20,3
   47864:	9cc001cc 	andi	r19,r19,7
   47868:	98800c04 	addi	r2,r19,48
   4786c:	bdffffc4 	addi	r23,r23,-1
   47870:	20e6b03a 	or	r19,r4,r3
   47874:	b8800005 	stb	r2,0(r23)
   47878:	9d06b03a 	or	r3,r19,r20
   4787c:	183ff61e 	bne	r3,zero,47858 <__alt_data_end+0xfffeb498>
   47880:	88c0004c 	andi	r3,r17,1
   47884:	18021f1e 	bne	r3,zero,48104 <___vfiprintf_internal_r+0xf9c>
   47888:	d9401e17 	ldw	r5,120(sp)
   4788c:	2de9c83a 	sub	r20,r5,r23
   47890:	003f3806 	br	47574 <__alt_data_end+0xfffeb1b4>
   47894:	9cc03fcc 	andi	r19,r19,255
   47898:	b811883a 	mov	r8,r23
   4789c:	98034f1e 	bne	r19,zero,485dc <___vfiprintf_internal_r+0x1474>
   478a0:	00800174 	movhi	r2,5
   478a4:	10be4b04 	addi	r2,r2,-1748
   478a8:	d8802615 	stw	r2,152(sp)
   478ac:	8880080c 	andi	r2,r17,32
   478b0:	1000ac26 	beq	r2,zero,47b64 <___vfiprintf_internal_r+0x9fc>
   478b4:	d9002217 	ldw	r4,136(sp)
   478b8:	24c00017 	ldw	r19,0(r4)
   478bc:	25000117 	ldw	r20,4(r4)
   478c0:	21000204 	addi	r4,r4,8
   478c4:	d9002215 	stw	r4,136(sp)
   478c8:	8880004c 	andi	r2,r17,1
   478cc:	1001e726 	beq	r2,zero,4806c <___vfiprintf_internal_r+0xf04>
   478d0:	9d04b03a 	or	r2,r19,r20
   478d4:	10025c1e 	bne	r2,zero,48248 <___vfiprintf_internal_r+0x10e0>
   478d8:	d8001d85 	stb	zero,118(sp)
   478dc:	80024416 	blt	r16,zero,481f0 <___vfiprintf_internal_r+0x1088>
   478e0:	00bfdfc4 	movi	r2,-129
   478e4:	88a2703a 	and	r17,r17,r2
   478e8:	003f1d06 	br	47560 <__alt_data_end+0xfffeb1a0>
   478ec:	d8c02217 	ldw	r3,136(sp)
   478f0:	04c00044 	movi	r19,1
   478f4:	b811883a 	mov	r8,r23
   478f8:	18800017 	ldw	r2,0(r3)
   478fc:	18c00104 	addi	r3,r3,4
   47900:	d8001d85 	stb	zero,118(sp)
   47904:	d8801005 	stb	r2,64(sp)
   47908:	d8c02215 	stw	r3,136(sp)
   4790c:	9829883a 	mov	r20,r19
   47910:	ddc01004 	addi	r23,sp,64
   47914:	0021883a 	mov	r16,zero
   47918:	003f1e06 	br	47594 <__alt_data_end+0xfffeb1d4>
   4791c:	9cc03fcc 	andi	r19,r19,255
   47920:	b811883a 	mov	r8,r23
   47924:	9803331e 	bne	r19,zero,485f4 <___vfiprintf_internal_r+0x148c>
   47928:	8880080c 	andi	r2,r17,32
   4792c:	10004826 	beq	r2,zero,47a50 <___vfiprintf_internal_r+0x8e8>
   47930:	d9002217 	ldw	r4,136(sp)
   47934:	20800117 	ldw	r2,4(r4)
   47938:	24c00017 	ldw	r19,0(r4)
   4793c:	21000204 	addi	r4,r4,8
   47940:	d9002215 	stw	r4,136(sp)
   47944:	1029883a 	mov	r20,r2
   47948:	10024c16 	blt	r2,zero,4827c <___vfiprintf_internal_r+0x1114>
   4794c:	dd401d83 	ldbu	r21,118(sp)
   47950:	80007116 	blt	r16,zero,47b18 <___vfiprintf_internal_r+0x9b0>
   47954:	00ffdfc4 	movi	r3,-129
   47958:	9d04b03a 	or	r2,r19,r20
   4795c:	88e2703a 	and	r17,r17,r3
   47960:	1000d126 	beq	r2,zero,47ca8 <___vfiprintf_internal_r+0xb40>
   47964:	a0023526 	beq	r20,zero,4823c <___vfiprintf_internal_r+0x10d4>
   47968:	ddc01a04 	addi	r23,sp,104
   4796c:	4039883a 	mov	fp,r8
   47970:	9809883a 	mov	r4,r19
   47974:	a00b883a 	mov	r5,r20
   47978:	01800284 	movi	r6,10
   4797c:	000f883a 	mov	r7,zero
   47980:	004a21c0 	call	4a21c <__umoddi3>
   47984:	10800c04 	addi	r2,r2,48
   47988:	bdffffc4 	addi	r23,r23,-1
   4798c:	9809883a 	mov	r4,r19
   47990:	a00b883a 	mov	r5,r20
   47994:	b8800005 	stb	r2,0(r23)
   47998:	01800284 	movi	r6,10
   4799c:	000f883a 	mov	r7,zero
   479a0:	0049c200 	call	49c20 <__udivdi3>
   479a4:	1027883a 	mov	r19,r2
   479a8:	10c4b03a 	or	r2,r2,r3
   479ac:	1829883a 	mov	r20,r3
   479b0:	103fef1e 	bne	r2,zero,47970 <__alt_data_end+0xfffeb5b0>
   479b4:	d9001e17 	ldw	r4,120(sp)
   479b8:	e011883a 	mov	r8,fp
   479bc:	25e9c83a 	sub	r20,r4,r23
   479c0:	003eec06 	br	47574 <__alt_data_end+0xfffeb1b4>
   479c4:	d8802307 	ldb	r2,140(sp)
   479c8:	1002361e 	bne	r2,zero,482a4 <___vfiprintf_internal_r+0x113c>
   479cc:	00c00804 	movi	r3,32
   479d0:	d8c02305 	stb	r3,140(sp)
   479d4:	04c00044 	movi	r19,1
   479d8:	b0c00007 	ldb	r3,0(r22)
   479dc:	003e3f06 	br	472dc <__alt_data_end+0xfffeaf1c>
   479e0:	8c400054 	ori	r17,r17,1
   479e4:	b0c00007 	ldb	r3,0(r22)
   479e8:	003e3c06 	br	472dc <__alt_data_end+0xfffeaf1c>
   479ec:	8c402014 	ori	r17,r17,128
   479f0:	b0c00007 	ldb	r3,0(r22)
   479f4:	003e3906 	br	472dc <__alt_data_end+0xfffeaf1c>
   479f8:	dc002715 	stw	r16,156(sp)
   479fc:	d8002515 	stw	zero,148(sp)
   47a00:	1f3ff404 	addi	fp,r3,-48
   47a04:	0009883a 	mov	r4,zero
   47a08:	b021883a 	mov	r16,r22
   47a0c:	01400284 	movi	r5,10
   47a10:	004a9940 	call	4a994 <__mulsi3>
   47a14:	80c00007 	ldb	r3,0(r16)
   47a18:	e089883a 	add	r4,fp,r2
   47a1c:	b5800044 	addi	r22,r22,1
   47a20:	1f3ff404 	addi	fp,r3,-48
   47a24:	b021883a 	mov	r16,r22
   47a28:	af3ff82e 	bgeu	r21,fp,47a0c <__alt_data_end+0xfffeb64c>
   47a2c:	d9002515 	stw	r4,148(sp)
   47a30:	dc002717 	ldw	r16,156(sp)
   47a34:	003e2a06 	br	472e0 <__alt_data_end+0xfffeaf20>
   47a38:	9cc03fcc 	andi	r19,r19,255
   47a3c:	b811883a 	mov	r8,r23
   47a40:	9802e91e 	bne	r19,zero,485e8 <___vfiprintf_internal_r+0x1480>
   47a44:	8c400414 	ori	r17,r17,16
   47a48:	8880080c 	andi	r2,r17,32
   47a4c:	103fb81e 	bne	r2,zero,47930 <__alt_data_end+0xfffeb570>
   47a50:	8880040c 	andi	r2,r17,16
   47a54:	10022e26 	beq	r2,zero,48310 <___vfiprintf_internal_r+0x11a8>
   47a58:	d9402217 	ldw	r5,136(sp)
   47a5c:	2cc00017 	ldw	r19,0(r5)
   47a60:	29400104 	addi	r5,r5,4
   47a64:	d9402215 	stw	r5,136(sp)
   47a68:	9829d7fa 	srai	r20,r19,31
   47a6c:	a005883a 	mov	r2,r20
   47a70:	003fb506 	br	47948 <__alt_data_end+0xfffeb588>
   47a74:	9cc03fcc 	andi	r19,r19,255
   47a78:	b811883a 	mov	r8,r23
   47a7c:	9802fa1e 	bne	r19,zero,48668 <___vfiprintf_internal_r+0x1500>
   47a80:	8c400414 	ori	r17,r17,16
   47a84:	8880080c 	andi	r2,r17,32
   47a88:	103f661e 	bne	r2,zero,47824 <__alt_data_end+0xfffeb464>
   47a8c:	8880040c 	andi	r2,r17,16
   47a90:	10020626 	beq	r2,zero,482ac <___vfiprintf_internal_r+0x1144>
   47a94:	d9402217 	ldw	r5,136(sp)
   47a98:	d8001d85 	stb	zero,118(sp)
   47a9c:	0029883a 	mov	r20,zero
   47aa0:	28800104 	addi	r2,r5,4
   47aa4:	2cc00017 	ldw	r19,0(r5)
   47aa8:	80020816 	blt	r16,zero,482cc <___vfiprintf_internal_r+0x1164>
   47aac:	00ffdfc4 	movi	r3,-129
   47ab0:	d8802215 	stw	r2,136(sp)
   47ab4:	88e2703a 	and	r17,r17,r3
   47ab8:	983f651e 	bne	r19,zero,47850 <__alt_data_end+0xfffeb490>
   47abc:	002b883a 	mov	r21,zero
   47ac0:	8002cf26 	beq	r16,zero,48600 <___vfiprintf_internal_r+0x1498>
   47ac4:	0027883a 	mov	r19,zero
   47ac8:	0029883a 	mov	r20,zero
   47acc:	003f6106 	br	47854 <__alt_data_end+0xfffeb494>
   47ad0:	9cc03fcc 	andi	r19,r19,255
   47ad4:	b811883a 	mov	r8,r23
   47ad8:	9802e01e 	bne	r19,zero,4865c <___vfiprintf_internal_r+0x14f4>
   47adc:	8c400414 	ori	r17,r17,16
   47ae0:	8880080c 	andi	r2,r17,32
   47ae4:	1000641e 	bne	r2,zero,47c78 <___vfiprintf_internal_r+0xb10>
   47ae8:	8880040c 	andi	r2,r17,16
   47aec:	1001c81e 	bne	r2,zero,48210 <___vfiprintf_internal_r+0x10a8>
   47af0:	8880100c 	andi	r2,r17,64
   47af4:	d8001d85 	stb	zero,118(sp)
   47af8:	1002281e 	bne	r2,zero,4839c <___vfiprintf_internal_r+0x1234>
   47afc:	d9002217 	ldw	r4,136(sp)
   47b00:	0029883a 	mov	r20,zero
   47b04:	20800104 	addi	r2,r4,4
   47b08:	24c00017 	ldw	r19,0(r4)
   47b0c:	8001c60e 	bge	r16,zero,48228 <___vfiprintf_internal_r+0x10c0>
   47b10:	d8802215 	stw	r2,136(sp)
   47b14:	002b883a 	mov	r21,zero
   47b18:	9d04b03a 	or	r2,r19,r20
   47b1c:	103f911e 	bne	r2,zero,47964 <__alt_data_end+0xfffeb5a4>
   47b20:	00800044 	movi	r2,1
   47b24:	10803fcc 	andi	r2,r2,255
   47b28:	00c00044 	movi	r3,1
   47b2c:	10c05f26 	beq	r2,r3,47cac <___vfiprintf_internal_r+0xb44>
   47b30:	00c00084 	movi	r3,2
   47b34:	10ffe31e 	bne	r2,r3,47ac4 <__alt_data_end+0xfffeb704>
   47b38:	0027883a 	mov	r19,zero
   47b3c:	0029883a 	mov	r20,zero
   47b40:	00015106 	br	48088 <___vfiprintf_internal_r+0xf20>
   47b44:	9cc03fcc 	andi	r19,r19,255
   47b48:	b811883a 	mov	r8,r23
   47b4c:	9802c01e 	bne	r19,zero,48650 <___vfiprintf_internal_r+0x14e8>
   47b50:	01400174 	movhi	r5,5
   47b54:	297e4604 	addi	r5,r5,-1768
   47b58:	d9402615 	stw	r5,152(sp)
   47b5c:	8880080c 	andi	r2,r17,32
   47b60:	103f541e 	bne	r2,zero,478b4 <__alt_data_end+0xfffeb4f4>
   47b64:	8880040c 	andi	r2,r17,16
   47b68:	1001f226 	beq	r2,zero,48334 <___vfiprintf_internal_r+0x11cc>
   47b6c:	d9402217 	ldw	r5,136(sp)
   47b70:	0029883a 	mov	r20,zero
   47b74:	2cc00017 	ldw	r19,0(r5)
   47b78:	29400104 	addi	r5,r5,4
   47b7c:	d9402215 	stw	r5,136(sp)
   47b80:	003f5106 	br	478c8 <__alt_data_end+0xfffeb508>
   47b84:	d8c02217 	ldw	r3,136(sp)
   47b88:	b811883a 	mov	r8,r23
   47b8c:	d8001d85 	stb	zero,118(sp)
   47b90:	1dc00017 	ldw	r23,0(r3)
   47b94:	1f000104 	addi	fp,r3,4
   47b98:	b8025926 	beq	r23,zero,48500 <___vfiprintf_internal_r+0x1398>
   47b9c:	80023316 	blt	r16,zero,4846c <___vfiprintf_internal_r+0x1304>
   47ba0:	800d883a 	mov	r6,r16
   47ba4:	000b883a 	mov	r5,zero
   47ba8:	b809883a 	mov	r4,r23
   47bac:	da002a15 	stw	r8,168(sp)
   47bb0:	00458d00 	call	458d0 <memchr>
   47bb4:	da002a17 	ldw	r8,168(sp)
   47bb8:	10026826 	beq	r2,zero,4855c <___vfiprintf_internal_r+0x13f4>
   47bbc:	15e9c83a 	sub	r20,r2,r23
   47bc0:	dd401d83 	ldbu	r21,118(sp)
   47bc4:	df002215 	stw	fp,136(sp)
   47bc8:	0021883a 	mov	r16,zero
   47bcc:	003e6906 	br	47574 <__alt_data_end+0xfffeb1b4>
   47bd0:	9cc03fcc 	andi	r19,r19,255
   47bd4:	b811883a 	mov	r8,r23
   47bd8:	983fc126 	beq	r19,zero,47ae0 <__alt_data_end+0xfffeb720>
   47bdc:	d8c02303 	ldbu	r3,140(sp)
   47be0:	d8c01d85 	stb	r3,118(sp)
   47be4:	003fbe06 	br	47ae0 <__alt_data_end+0xfffeb720>
   47be8:	d9002217 	ldw	r4,136(sp)
   47bec:	d9402217 	ldw	r5,136(sp)
   47bf0:	21000017 	ldw	r4,0(r4)
   47bf4:	28800104 	addi	r2,r5,4
   47bf8:	d9002515 	stw	r4,148(sp)
   47bfc:	203e3d16 	blt	r4,zero,474f4 <__alt_data_end+0xfffeb134>
   47c00:	d8802215 	stw	r2,136(sp)
   47c04:	b0c00007 	ldb	r3,0(r22)
   47c08:	003db406 	br	472dc <__alt_data_end+0xfffeaf1c>
   47c0c:	00c00ac4 	movi	r3,43
   47c10:	d8c02305 	stb	r3,140(sp)
   47c14:	04c00044 	movi	r19,1
   47c18:	b0c00007 	ldb	r3,0(r22)
   47c1c:	003daf06 	br	472dc <__alt_data_end+0xfffeaf1c>
   47c20:	b0c00007 	ldb	r3,0(r22)
   47c24:	01000a84 	movi	r4,42
   47c28:	b4000044 	addi	r16,r22,1
   47c2c:	19025e26 	beq	r3,r4,485a8 <___vfiprintf_internal_r+0x1440>
   47c30:	1f3ff404 	addi	fp,r3,-48
   47c34:	0009883a 	mov	r4,zero
   47c38:	af025236 	bltu	r21,fp,48584 <___vfiprintf_internal_r+0x141c>
   47c3c:	01400284 	movi	r5,10
   47c40:	004a9940 	call	4a994 <__mulsi3>
   47c44:	80c00007 	ldb	r3,0(r16)
   47c48:	1709883a 	add	r4,r2,fp
   47c4c:	85800044 	addi	r22,r16,1
   47c50:	1f3ff404 	addi	fp,r3,-48
   47c54:	b021883a 	mov	r16,r22
   47c58:	af3ff82e 	bgeu	r21,fp,47c3c <__alt_data_end+0xfffeb87c>
   47c5c:	2021883a 	mov	r16,r4
   47c60:	203d9f0e 	bge	r4,zero,472e0 <__alt_data_end+0xfffeaf20>
   47c64:	043fffc4 	movi	r16,-1
   47c68:	003d9d06 	br	472e0 <__alt_data_end+0xfffeaf20>
   47c6c:	8c401014 	ori	r17,r17,64
   47c70:	b0c00007 	ldb	r3,0(r22)
   47c74:	003d9906 	br	472dc <__alt_data_end+0xfffeaf1c>
   47c78:	d9002217 	ldw	r4,136(sp)
   47c7c:	d8001d85 	stb	zero,118(sp)
   47c80:	20c00204 	addi	r3,r4,8
   47c84:	24c00017 	ldw	r19,0(r4)
   47c88:	25000117 	ldw	r20,4(r4)
   47c8c:	8001e716 	blt	r16,zero,4842c <___vfiprintf_internal_r+0x12c4>
   47c90:	013fdfc4 	movi	r4,-129
   47c94:	9d04b03a 	or	r2,r19,r20
   47c98:	d8c02215 	stw	r3,136(sp)
   47c9c:	8922703a 	and	r17,r17,r4
   47ca0:	002b883a 	mov	r21,zero
   47ca4:	103f2f1e 	bne	r2,zero,47964 <__alt_data_end+0xfffeb5a4>
   47ca8:	803e2f26 	beq	r16,zero,47568 <__alt_data_end+0xfffeb1a8>
   47cac:	0027883a 	mov	r19,zero
   47cb0:	9cc00c04 	addi	r19,r19,48
   47cb4:	dcc019c5 	stb	r19,103(sp)
   47cb8:	dd002817 	ldw	r20,160(sp)
   47cbc:	ddc019c4 	addi	r23,sp,103
   47cc0:	003e2c06 	br	47574 <__alt_data_end+0xfffeb1b4>
   47cc4:	9cc03fcc 	andi	r19,r19,255
   47cc8:	b811883a 	mov	r8,r23
   47ccc:	9802571e 	bne	r19,zero,4862c <___vfiprintf_internal_r+0x14c4>
   47cd0:	18005726 	beq	r3,zero,47e30 <___vfiprintf_internal_r+0xcc8>
   47cd4:	04c00044 	movi	r19,1
   47cd8:	d8c01005 	stb	r3,64(sp)
   47cdc:	d8001d85 	stb	zero,118(sp)
   47ce0:	9829883a 	mov	r20,r19
   47ce4:	ddc01004 	addi	r23,sp,64
   47ce8:	003f0a06 	br	47914 <__alt_data_end+0xfffeb554>
   47cec:	d9402017 	ldw	r5,128(sp)
   47cf0:	d9002117 	ldw	r4,132(sp)
   47cf4:	d9801a04 	addi	r6,sp,104
   47cf8:	da802a15 	stw	r10,168(sp)
   47cfc:	00470540 	call	47054 <__sprint_r.part.0>
   47d00:	da802a17 	ldw	r10,168(sp)
   47d04:	1000501e 	bne	r2,zero,47e48 <___vfiprintf_internal_r+0xce0>
   47d08:	d9801b17 	ldw	r6,108(sp)
   47d0c:	d8801c17 	ldw	r2,112(sp)
   47d10:	d811883a 	mov	r8,sp
   47d14:	31000044 	addi	r4,r6,1
   47d18:	003e3606 	br	475f4 <__alt_data_end+0xfffeb234>
   47d1c:	d9001b17 	ldw	r4,108(sp)
   47d20:	d8801c17 	ldw	r2,112(sp)
   47d24:	21400044 	addi	r5,r4,1
   47d28:	d9801d87 	ldb	r6,118(sp)
   47d2c:	303e5226 	beq	r6,zero,47678 <__alt_data_end+0xfffeb2b8>
   47d30:	01800044 	movi	r6,1
   47d34:	d9001d84 	addi	r4,sp,118
   47d38:	1185883a 	add	r2,r2,r6
   47d3c:	41000015 	stw	r4,0(r8)
   47d40:	41800115 	stw	r6,4(r8)
   47d44:	d8801c15 	stw	r2,112(sp)
   47d48:	d9401b15 	stw	r5,108(sp)
   47d4c:	010001c4 	movi	r4,7
   47d50:	2140b00e 	bge	r4,r5,48014 <___vfiprintf_internal_r+0xeac>
   47d54:	1000f61e 	bne	r2,zero,48130 <___vfiprintf_internal_r+0xfc8>
   47d58:	3800b31e 	bne	r7,zero,48028 <___vfiprintf_internal_r+0xec0>
   47d5c:	0009883a 	mov	r4,zero
   47d60:	300b883a 	mov	r5,r6
   47d64:	d811883a 	mov	r8,sp
   47d68:	01802004 	movi	r6,128
   47d6c:	19be5226 	beq	r3,r6,476b8 <__alt_data_end+0xfffeb2f8>
   47d70:	8521c83a 	sub	r16,r16,r20
   47d74:	043e790e 	bge	zero,r16,4775c <__alt_data_end+0xfffeb39c>
   47d78:	05400404 	movi	r21,16
   47d7c:	ac01b00e 	bge	r21,r16,48440 <___vfiprintf_internal_r+0x12d8>
   47d80:	01400174 	movhi	r5,5
   47d84:	297eac04 	addi	r5,r5,-1360
   47d88:	d9402315 	stw	r5,140(sp)
   47d8c:	070001c4 	movi	fp,7
   47d90:	00000506 	br	47da8 <___vfiprintf_internal_r+0xc40>
   47d94:	21400084 	addi	r5,r4,2
   47d98:	42000204 	addi	r8,r8,8
   47d9c:	1809883a 	mov	r4,r3
   47da0:	843ffc04 	addi	r16,r16,-16
   47da4:	ac000d0e 	bge	r21,r16,47ddc <___vfiprintf_internal_r+0xc74>
   47da8:	10800404 	addi	r2,r2,16
   47dac:	20c00044 	addi	r3,r4,1
   47db0:	44800015 	stw	r18,0(r8)
   47db4:	45400115 	stw	r21,4(r8)
   47db8:	d8801c15 	stw	r2,112(sp)
   47dbc:	d8c01b15 	stw	r3,108(sp)
   47dc0:	e0fff40e 	bge	fp,r3,47d94 <__alt_data_end+0xfffeb9d4>
   47dc4:	1000101e 	bne	r2,zero,47e08 <___vfiprintf_internal_r+0xca0>
   47dc8:	843ffc04 	addi	r16,r16,-16
   47dcc:	01400044 	movi	r5,1
   47dd0:	0009883a 	mov	r4,zero
   47dd4:	d811883a 	mov	r8,sp
   47dd8:	ac3ff316 	blt	r21,r16,47da8 <__alt_data_end+0xfffeb9e8>
   47ddc:	d8c02317 	ldw	r3,140(sp)
   47de0:	1405883a 	add	r2,r2,r16
   47de4:	44000115 	stw	r16,4(r8)
   47de8:	40c00015 	stw	r3,0(r8)
   47dec:	d8801c15 	stw	r2,112(sp)
   47df0:	d9401b15 	stw	r5,108(sp)
   47df4:	00c001c4 	movi	r3,7
   47df8:	19401916 	blt	r3,r5,47e60 <___vfiprintf_internal_r+0xcf8>
   47dfc:	42000204 	addi	r8,r8,8
   47e00:	29400044 	addi	r5,r5,1
   47e04:	003e5506 	br	4775c <__alt_data_end+0xfffeb39c>
   47e08:	d9402017 	ldw	r5,128(sp)
   47e0c:	d9002117 	ldw	r4,132(sp)
   47e10:	d9801a04 	addi	r6,sp,104
   47e14:	00470540 	call	47054 <__sprint_r.part.0>
   47e18:	10000b1e 	bne	r2,zero,47e48 <___vfiprintf_internal_r+0xce0>
   47e1c:	d9001b17 	ldw	r4,108(sp)
   47e20:	d8801c17 	ldw	r2,112(sp)
   47e24:	d811883a 	mov	r8,sp
   47e28:	21400044 	addi	r5,r4,1
   47e2c:	003fdc06 	br	47da0 <__alt_data_end+0xfffeb9e0>
   47e30:	d8801c17 	ldw	r2,112(sp)
   47e34:	10000426 	beq	r2,zero,47e48 <___vfiprintf_internal_r+0xce0>
   47e38:	d9402017 	ldw	r5,128(sp)
   47e3c:	d9002117 	ldw	r4,132(sp)
   47e40:	d9801a04 	addi	r6,sp,104
   47e44:	00470540 	call	47054 <__sprint_r.part.0>
   47e48:	d9402017 	ldw	r5,128(sp)
   47e4c:	2880030b 	ldhu	r2,12(r5)
   47e50:	1080100c 	andi	r2,r2,64
   47e54:	10014d1e 	bne	r2,zero,4838c <___vfiprintf_internal_r+0x1224>
   47e58:	d8802417 	ldw	r2,144(sp)
   47e5c:	003d9706 	br	474bc <__alt_data_end+0xfffeb0fc>
   47e60:	1000d21e 	bne	r2,zero,481ac <___vfiprintf_internal_r+0x1044>
   47e64:	00c00044 	movi	r3,1
   47e68:	a005883a 	mov	r2,r20
   47e6c:	ddc00015 	stw	r23,0(sp)
   47e70:	dd000115 	stw	r20,4(sp)
   47e74:	dd001c15 	stw	r20,112(sp)
   47e78:	d8c01b15 	stw	r3,108(sp)
   47e7c:	d811883a 	mov	r8,sp
   47e80:	42000204 	addi	r8,r8,8
   47e84:	8c40010c 	andi	r17,r17,4
   47e88:	88004026 	beq	r17,zero,47f8c <___vfiprintf_internal_r+0xe24>
   47e8c:	d9002517 	ldw	r4,148(sp)
   47e90:	24e3c83a 	sub	r17,r4,r19
   47e94:	04403d0e 	bge	zero,r17,47f8c <___vfiprintf_internal_r+0xe24>
   47e98:	04000404 	movi	r16,16
   47e9c:	8441a90e 	bge	r16,r17,48544 <___vfiprintf_internal_r+0x13dc>
   47ea0:	00c00174 	movhi	r3,5
   47ea4:	18feb004 	addi	r3,r3,-1344
   47ea8:	d9001b17 	ldw	r4,108(sp)
   47eac:	d8c02315 	stw	r3,140(sp)
   47eb0:	050001c4 	movi	r20,7
   47eb4:	dd402117 	ldw	r21,132(sp)
   47eb8:	ddc02017 	ldw	r23,128(sp)
   47ebc:	00000506 	br	47ed4 <___vfiprintf_internal_r+0xd6c>
   47ec0:	21400084 	addi	r5,r4,2
   47ec4:	42000204 	addi	r8,r8,8
   47ec8:	1809883a 	mov	r4,r3
   47ecc:	8c7ffc04 	addi	r17,r17,-16
   47ed0:	84400f0e 	bge	r16,r17,47f10 <___vfiprintf_internal_r+0xda8>
   47ed4:	01400174 	movhi	r5,5
   47ed8:	10800404 	addi	r2,r2,16
   47edc:	20c00044 	addi	r3,r4,1
   47ee0:	297eb004 	addi	r5,r5,-1344
   47ee4:	41400015 	stw	r5,0(r8)
   47ee8:	44000115 	stw	r16,4(r8)
   47eec:	d8801c15 	stw	r2,112(sp)
   47ef0:	d8c01b15 	stw	r3,108(sp)
   47ef4:	a0fff20e 	bge	r20,r3,47ec0 <__alt_data_end+0xfffebb00>
   47ef8:	1000141e 	bne	r2,zero,47f4c <___vfiprintf_internal_r+0xde4>
   47efc:	8c7ffc04 	addi	r17,r17,-16
   47f00:	01400044 	movi	r5,1
   47f04:	0009883a 	mov	r4,zero
   47f08:	d811883a 	mov	r8,sp
   47f0c:	847ff116 	blt	r16,r17,47ed4 <__alt_data_end+0xfffebb14>
   47f10:	d8c02317 	ldw	r3,140(sp)
   47f14:	1445883a 	add	r2,r2,r17
   47f18:	44400115 	stw	r17,4(r8)
   47f1c:	40c00015 	stw	r3,0(r8)
   47f20:	d8801c15 	stw	r2,112(sp)
   47f24:	d9401b15 	stw	r5,108(sp)
   47f28:	00c001c4 	movi	r3,7
   47f2c:	1940170e 	bge	r3,r5,47f8c <___vfiprintf_internal_r+0xe24>
   47f30:	1000101e 	bne	r2,zero,47f74 <___vfiprintf_internal_r+0xe0c>
   47f34:	d8802517 	ldw	r2,148(sp)
   47f38:	14c11616 	blt	r2,r19,48394 <___vfiprintf_internal_r+0x122c>
   47f3c:	d9002417 	ldw	r4,144(sp)
   47f40:	2089883a 	add	r4,r4,r2
   47f44:	d9002415 	stw	r4,144(sp)
   47f48:	003e1806 	br	477ac <__alt_data_end+0xfffeb3ec>
   47f4c:	d9801a04 	addi	r6,sp,104
   47f50:	b80b883a 	mov	r5,r23
   47f54:	a809883a 	mov	r4,r21
   47f58:	00470540 	call	47054 <__sprint_r.part.0>
   47f5c:	103fba1e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   47f60:	d9001b17 	ldw	r4,108(sp)
   47f64:	d8801c17 	ldw	r2,112(sp)
   47f68:	d811883a 	mov	r8,sp
   47f6c:	21400044 	addi	r5,r4,1
   47f70:	003fd606 	br	47ecc <__alt_data_end+0xfffebb0c>
   47f74:	d9402017 	ldw	r5,128(sp)
   47f78:	d9002117 	ldw	r4,132(sp)
   47f7c:	d9801a04 	addi	r6,sp,104
   47f80:	00470540 	call	47054 <__sprint_r.part.0>
   47f84:	103fb01e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   47f88:	d8801c17 	ldw	r2,112(sp)
   47f8c:	d8c02517 	ldw	r3,148(sp)
   47f90:	1cc0010e 	bge	r3,r19,47f98 <___vfiprintf_internal_r+0xe30>
   47f94:	9807883a 	mov	r3,r19
   47f98:	d9002417 	ldw	r4,144(sp)
   47f9c:	20c9883a 	add	r4,r4,r3
   47fa0:	d9002415 	stw	r4,144(sp)
   47fa4:	103e0126 	beq	r2,zero,477ac <__alt_data_end+0xfffeb3ec>
   47fa8:	d9402017 	ldw	r5,128(sp)
   47fac:	d9002117 	ldw	r4,132(sp)
   47fb0:	d9801a04 	addi	r6,sp,104
   47fb4:	00470540 	call	47054 <__sprint_r.part.0>
   47fb8:	103dfc26 	beq	r2,zero,477ac <__alt_data_end+0xfffeb3ec>
   47fbc:	003fa206 	br	47e48 <__alt_data_end+0xfffeba88>
   47fc0:	d9402017 	ldw	r5,128(sp)
   47fc4:	d9002117 	ldw	r4,132(sp)
   47fc8:	d9801a04 	addi	r6,sp,104
   47fcc:	d9c02b15 	stw	r7,172(sp)
   47fd0:	00470540 	call	47054 <__sprint_r.part.0>
   47fd4:	d9c02b17 	ldw	r7,172(sp)
   47fd8:	103f9b1e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   47fdc:	d9001b17 	ldw	r4,108(sp)
   47fe0:	d8801c17 	ldw	r2,112(sp)
   47fe4:	d811883a 	mov	r8,sp
   47fe8:	21800044 	addi	r6,r4,1
   47fec:	003dbf06 	br	476ec <__alt_data_end+0xfffeb32c>
   47ff0:	1000d81e 	bne	r2,zero,48354 <___vfiprintf_internal_r+0x11ec>
   47ff4:	d9001d87 	ldb	r4,118(sp)
   47ff8:	20000a26 	beq	r4,zero,48024 <___vfiprintf_internal_r+0xebc>
   47ffc:	00800044 	movi	r2,1
   48000:	d9001d84 	addi	r4,sp,118
   48004:	100b883a 	mov	r5,r2
   48008:	d9000015 	stw	r4,0(sp)
   4800c:	d8800115 	stw	r2,4(sp)
   48010:	d811883a 	mov	r8,sp
   48014:	2809883a 	mov	r4,r5
   48018:	42000204 	addi	r8,r8,8
   4801c:	29400044 	addi	r5,r5,1
   48020:	003d9506 	br	47678 <__alt_data_end+0xfffeb2b8>
   48024:	3800fd26 	beq	r7,zero,4841c <___vfiprintf_internal_r+0x12b4>
   48028:	00800084 	movi	r2,2
   4802c:	d9001d04 	addi	r4,sp,116
   48030:	d9000015 	stw	r4,0(sp)
   48034:	d8800115 	stw	r2,4(sp)
   48038:	01400044 	movi	r5,1
   4803c:	d811883a 	mov	r8,sp
   48040:	2809883a 	mov	r4,r5
   48044:	42000204 	addi	r8,r8,8
   48048:	29400044 	addi	r5,r5,1
   4804c:	003f4606 	br	47d68 <__alt_data_end+0xfffeb9a8>
   48050:	d8802517 	ldw	r2,148(sp)
   48054:	14c0010e 	bge	r2,r19,4805c <___vfiprintf_internal_r+0xef4>
   48058:	9805883a 	mov	r2,r19
   4805c:	d9402417 	ldw	r5,144(sp)
   48060:	288b883a 	add	r5,r5,r2
   48064:	d9402415 	stw	r5,144(sp)
   48068:	003dd006 	br	477ac <__alt_data_end+0xfffeb3ec>
   4806c:	d8001d85 	stb	zero,118(sp)
   48070:	80005d16 	blt	r16,zero,481e8 <___vfiprintf_internal_r+0x1080>
   48074:	00ffdfc4 	movi	r3,-129
   48078:	9d04b03a 	or	r2,r19,r20
   4807c:	88e2703a 	and	r17,r17,r3
   48080:	103d3726 	beq	r2,zero,47560 <__alt_data_end+0xfffeb1a0>
   48084:	002b883a 	mov	r21,zero
   48088:	d9002617 	ldw	r4,152(sp)
   4808c:	ddc01a04 	addi	r23,sp,104
   48090:	988003cc 	andi	r2,r19,15
   48094:	a006973a 	slli	r3,r20,28
   48098:	2085883a 	add	r2,r4,r2
   4809c:	9826d13a 	srli	r19,r19,4
   480a0:	10800003 	ldbu	r2,0(r2)
   480a4:	a028d13a 	srli	r20,r20,4
   480a8:	bdffffc4 	addi	r23,r23,-1
   480ac:	1ce6b03a 	or	r19,r3,r19
   480b0:	b8800005 	stb	r2,0(r23)
   480b4:	9d04b03a 	or	r2,r19,r20
   480b8:	103ff51e 	bne	r2,zero,48090 <__alt_data_end+0xfffebcd0>
   480bc:	d8801e17 	ldw	r2,120(sp)
   480c0:	15e9c83a 	sub	r20,r2,r23
   480c4:	003d2b06 	br	47574 <__alt_data_end+0xfffeb1b4>
   480c8:	d9402017 	ldw	r5,128(sp)
   480cc:	d9002117 	ldw	r4,132(sp)
   480d0:	d9801a04 	addi	r6,sp,104
   480d4:	00470540 	call	47054 <__sprint_r.part.0>
   480d8:	103f5b1e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   480dc:	d8801c17 	ldw	r2,112(sp)
   480e0:	d811883a 	mov	r8,sp
   480e4:	003f6706 	br	47e84 <__alt_data_end+0xfffebac4>
   480e8:	d9402017 	ldw	r5,128(sp)
   480ec:	d9002117 	ldw	r4,132(sp)
   480f0:	d9801a04 	addi	r6,sp,104
   480f4:	00470540 	call	47054 <__sprint_r.part.0>
   480f8:	103f531e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   480fc:	d811883a 	mov	r8,sp
   48100:	003cd906 	br	47468 <__alt_data_end+0xfffeb0a8>
   48104:	10803fcc 	andi	r2,r2,255
   48108:	1080201c 	xori	r2,r2,128
   4810c:	10bfe004 	addi	r2,r2,-128
   48110:	00c00c04 	movi	r3,48
   48114:	10ffe926 	beq	r2,r3,480bc <__alt_data_end+0xfffebcfc>
   48118:	b8ffffc5 	stb	r3,-1(r23)
   4811c:	d8c01e17 	ldw	r3,120(sp)
   48120:	b8bfffc4 	addi	r2,r23,-1
   48124:	102f883a 	mov	r23,r2
   48128:	18a9c83a 	sub	r20,r3,r2
   4812c:	003d1106 	br	47574 <__alt_data_end+0xfffeb1b4>
   48130:	d9402017 	ldw	r5,128(sp)
   48134:	d9002117 	ldw	r4,132(sp)
   48138:	d9801a04 	addi	r6,sp,104
   4813c:	d8c02a15 	stw	r3,168(sp)
   48140:	d9c02b15 	stw	r7,172(sp)
   48144:	00470540 	call	47054 <__sprint_r.part.0>
   48148:	d8c02a17 	ldw	r3,168(sp)
   4814c:	d9c02b17 	ldw	r7,172(sp)
   48150:	103f3d1e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   48154:	d9001b17 	ldw	r4,108(sp)
   48158:	d8801c17 	ldw	r2,112(sp)
   4815c:	d811883a 	mov	r8,sp
   48160:	21400044 	addi	r5,r4,1
   48164:	003d4406 	br	47678 <__alt_data_end+0xfffeb2b8>
   48168:	d9402017 	ldw	r5,128(sp)
   4816c:	d9002117 	ldw	r4,132(sp)
   48170:	d9801a04 	addi	r6,sp,104
   48174:	d8c02a15 	stw	r3,168(sp)
   48178:	00470540 	call	47054 <__sprint_r.part.0>
   4817c:	d8c02a17 	ldw	r3,168(sp)
   48180:	103f311e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   48184:	d9001b17 	ldw	r4,108(sp)
   48188:	d8801c17 	ldw	r2,112(sp)
   4818c:	d811883a 	mov	r8,sp
   48190:	21400044 	addi	r5,r4,1
   48194:	003ef406 	br	47d68 <__alt_data_end+0xfffeb9a8>
   48198:	1000bd1e 	bne	r2,zero,48490 <___vfiprintf_internal_r+0x1328>
   4819c:	01400044 	movi	r5,1
   481a0:	0009883a 	mov	r4,zero
   481a4:	d811883a 	mov	r8,sp
   481a8:	003ef106 	br	47d70 <__alt_data_end+0xfffeb9b0>
   481ac:	d9402017 	ldw	r5,128(sp)
   481b0:	d9002117 	ldw	r4,132(sp)
   481b4:	d9801a04 	addi	r6,sp,104
   481b8:	00470540 	call	47054 <__sprint_r.part.0>
   481bc:	103f221e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   481c0:	d9401b17 	ldw	r5,108(sp)
   481c4:	d8801c17 	ldw	r2,112(sp)
   481c8:	d811883a 	mov	r8,sp
   481cc:	29400044 	addi	r5,r5,1
   481d0:	003d6206 	br	4775c <__alt_data_end+0xfffeb39c>
   481d4:	01400174 	movhi	r5,5
   481d8:	297e4b04 	addi	r5,r5,-1748
   481dc:	d9402615 	stw	r5,152(sp)
   481e0:	d8c02215 	stw	r3,136(sp)
   481e4:	1023883a 	mov	r17,r2
   481e8:	9d04b03a 	or	r2,r19,r20
   481ec:	103fa51e 	bne	r2,zero,48084 <__alt_data_end+0xfffebcc4>
   481f0:	002b883a 	mov	r21,zero
   481f4:	00800084 	movi	r2,2
   481f8:	003e4a06 	br	47b24 <__alt_data_end+0xfffeb764>
   481fc:	01400174 	movhi	r5,5
   48200:	297e4b04 	addi	r5,r5,-1748
   48204:	002b883a 	mov	r21,zero
   48208:	d9402615 	stw	r5,152(sp)
   4820c:	003f9e06 	br	48088 <__alt_data_end+0xfffebcc8>
   48210:	d9402217 	ldw	r5,136(sp)
   48214:	d8001d85 	stb	zero,118(sp)
   48218:	0029883a 	mov	r20,zero
   4821c:	28800104 	addi	r2,r5,4
   48220:	2cc00017 	ldw	r19,0(r5)
   48224:	803e3a16 	blt	r16,zero,47b10 <__alt_data_end+0xfffeb750>
   48228:	00ffdfc4 	movi	r3,-129
   4822c:	d8802215 	stw	r2,136(sp)
   48230:	88e2703a 	and	r17,r17,r3
   48234:	002b883a 	mov	r21,zero
   48238:	983e9b26 	beq	r19,zero,47ca8 <__alt_data_end+0xfffeb8e8>
   4823c:	00800244 	movi	r2,9
   48240:	14fdc936 	bltu	r2,r19,47968 <__alt_data_end+0xfffeb5a8>
   48244:	003e9a06 	br	47cb0 <__alt_data_end+0xfffeb8f0>
   48248:	00800c04 	movi	r2,48
   4824c:	d8c01d45 	stb	r3,117(sp)
   48250:	d8801d05 	stb	r2,116(sp)
   48254:	d8001d85 	stb	zero,118(sp)
   48258:	88c00094 	ori	r3,r17,2
   4825c:	80009c16 	blt	r16,zero,484d0 <___vfiprintf_internal_r+0x1368>
   48260:	00bfdfc4 	movi	r2,-129
   48264:	88a2703a 	and	r17,r17,r2
   48268:	8c400094 	ori	r17,r17,2
   4826c:	002b883a 	mov	r21,zero
   48270:	003f8506 	br	48088 <__alt_data_end+0xfffebcc8>
   48274:	b029883a 	mov	r20,r22
   48278:	003c0b06 	br	472a8 <__alt_data_end+0xfffeaee8>
   4827c:	04e7c83a 	sub	r19,zero,r19
   48280:	05400b44 	movi	r21,45
   48284:	9804c03a 	cmpne	r2,r19,zero
   48288:	0529c83a 	sub	r20,zero,r20
   4828c:	dd401d85 	stb	r21,118(sp)
   48290:	a0a9c83a 	sub	r20,r20,r2
   48294:	80009716 	blt	r16,zero,484f4 <___vfiprintf_internal_r+0x138c>
   48298:	00bfdfc4 	movi	r2,-129
   4829c:	88a2703a 	and	r17,r17,r2
   482a0:	003db006 	br	47964 <__alt_data_end+0xfffeb5a4>
   482a4:	b0c00007 	ldb	r3,0(r22)
   482a8:	003c0c06 	br	472dc <__alt_data_end+0xfffeaf1c>
   482ac:	8880100c 	andi	r2,r17,64
   482b0:	d8001d85 	stb	zero,118(sp)
   482b4:	1000461e 	bne	r2,zero,483d0 <___vfiprintf_internal_r+0x1268>
   482b8:	d9002217 	ldw	r4,136(sp)
   482bc:	0029883a 	mov	r20,zero
   482c0:	20800104 	addi	r2,r4,4
   482c4:	24c00017 	ldw	r19,0(r4)
   482c8:	803df80e 	bge	r16,zero,47aac <__alt_data_end+0xfffeb6ec>
   482cc:	9d06b03a 	or	r3,r19,r20
   482d0:	d8802215 	stw	r2,136(sp)
   482d4:	183d5e1e 	bne	r3,zero,47850 <__alt_data_end+0xfffeb490>
   482d8:	002b883a 	mov	r21,zero
   482dc:	0005883a 	mov	r2,zero
   482e0:	003e1006 	br	47b24 <__alt_data_end+0xfffeb764>
   482e4:	8880040c 	andi	r2,r17,16
   482e8:	1000321e 	bne	r2,zero,483b4 <___vfiprintf_internal_r+0x124c>
   482ec:	8c40100c 	andi	r17,r17,64
   482f0:	88008d26 	beq	r17,zero,48528 <___vfiprintf_internal_r+0x13c0>
   482f4:	d9402217 	ldw	r5,136(sp)
   482f8:	d8c02417 	ldw	r3,144(sp)
   482fc:	28800017 	ldw	r2,0(r5)
   48300:	29400104 	addi	r5,r5,4
   48304:	d9402215 	stw	r5,136(sp)
   48308:	10c0000d 	sth	r3,0(r2)
   4830c:	003bca06 	br	47238 <__alt_data_end+0xfffeae78>
   48310:	8880100c 	andi	r2,r17,64
   48314:	10003a26 	beq	r2,zero,48400 <___vfiprintf_internal_r+0x1298>
   48318:	d8802217 	ldw	r2,136(sp)
   4831c:	14c0000f 	ldh	r19,0(r2)
   48320:	10800104 	addi	r2,r2,4
   48324:	d8802215 	stw	r2,136(sp)
   48328:	9829d7fa 	srai	r20,r19,31
   4832c:	a005883a 	mov	r2,r20
   48330:	003d8506 	br	47948 <__alt_data_end+0xfffeb588>
   48334:	8880100c 	andi	r2,r17,64
   48338:	10002b26 	beq	r2,zero,483e8 <___vfiprintf_internal_r+0x1280>
   4833c:	d8802217 	ldw	r2,136(sp)
   48340:	0029883a 	mov	r20,zero
   48344:	14c0000b 	ldhu	r19,0(r2)
   48348:	10800104 	addi	r2,r2,4
   4834c:	d8802215 	stw	r2,136(sp)
   48350:	003d5d06 	br	478c8 <__alt_data_end+0xfffeb508>
   48354:	d9402017 	ldw	r5,128(sp)
   48358:	d9002117 	ldw	r4,132(sp)
   4835c:	d9801a04 	addi	r6,sp,104
   48360:	d8c02a15 	stw	r3,168(sp)
   48364:	d9c02b15 	stw	r7,172(sp)
   48368:	00470540 	call	47054 <__sprint_r.part.0>
   4836c:	d8c02a17 	ldw	r3,168(sp)
   48370:	d9c02b17 	ldw	r7,172(sp)
   48374:	103eb41e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   48378:	d9001b17 	ldw	r4,108(sp)
   4837c:	d8801c17 	ldw	r2,112(sp)
   48380:	d811883a 	mov	r8,sp
   48384:	21400044 	addi	r5,r4,1
   48388:	003e6706 	br	47d28 <__alt_data_end+0xfffeb968>
   4838c:	00bfffc4 	movi	r2,-1
   48390:	003c4a06 	br	474bc <__alt_data_end+0xfffeb0fc>
   48394:	9805883a 	mov	r2,r19
   48398:	003ee806 	br	47f3c <__alt_data_end+0xfffebb7c>
   4839c:	d8c02217 	ldw	r3,136(sp)
   483a0:	0029883a 	mov	r20,zero
   483a4:	18800104 	addi	r2,r3,4
   483a8:	1cc0000b 	ldhu	r19,0(r3)
   483ac:	803f9e0e 	bge	r16,zero,48228 <__alt_data_end+0xfffebe68>
   483b0:	003dd706 	br	47b10 <__alt_data_end+0xfffeb750>
   483b4:	d8c02217 	ldw	r3,136(sp)
   483b8:	d9002417 	ldw	r4,144(sp)
   483bc:	18800017 	ldw	r2,0(r3)
   483c0:	18c00104 	addi	r3,r3,4
   483c4:	d8c02215 	stw	r3,136(sp)
   483c8:	11000015 	stw	r4,0(r2)
   483cc:	003b9a06 	br	47238 <__alt_data_end+0xfffeae78>
   483d0:	d8c02217 	ldw	r3,136(sp)
   483d4:	0029883a 	mov	r20,zero
   483d8:	18800104 	addi	r2,r3,4
   483dc:	1cc0000b 	ldhu	r19,0(r3)
   483e0:	803db20e 	bge	r16,zero,47aac <__alt_data_end+0xfffeb6ec>
   483e4:	003fb906 	br	482cc <__alt_data_end+0xfffebf0c>
   483e8:	d9002217 	ldw	r4,136(sp)
   483ec:	0029883a 	mov	r20,zero
   483f0:	24c00017 	ldw	r19,0(r4)
   483f4:	21000104 	addi	r4,r4,4
   483f8:	d9002215 	stw	r4,136(sp)
   483fc:	003d3206 	br	478c8 <__alt_data_end+0xfffeb508>
   48400:	d8c02217 	ldw	r3,136(sp)
   48404:	1cc00017 	ldw	r19,0(r3)
   48408:	18c00104 	addi	r3,r3,4
   4840c:	d8c02215 	stw	r3,136(sp)
   48410:	9829d7fa 	srai	r20,r19,31
   48414:	a005883a 	mov	r2,r20
   48418:	003d4b06 	br	47948 <__alt_data_end+0xfffeb588>
   4841c:	0009883a 	mov	r4,zero
   48420:	01400044 	movi	r5,1
   48424:	d811883a 	mov	r8,sp
   48428:	003e4f06 	br	47d68 <__alt_data_end+0xfffeb9a8>
   4842c:	d8c02215 	stw	r3,136(sp)
   48430:	002b883a 	mov	r21,zero
   48434:	003db806 	br	47b18 <__alt_data_end+0xfffeb758>
   48438:	d811883a 	mov	r8,sp
   4843c:	003e9606 	br	47e98 <__alt_data_end+0xfffebad8>
   48440:	01000174 	movhi	r4,5
   48444:	213eac04 	addi	r4,r4,-1360
   48448:	d9002315 	stw	r4,140(sp)
   4844c:	003e6306 	br	47ddc <__alt_data_end+0xfffeba1c>
   48450:	b0c00043 	ldbu	r3,1(r22)
   48454:	8c400814 	ori	r17,r17,32
   48458:	b5800044 	addi	r22,r22,1
   4845c:	18c03fcc 	andi	r3,r3,255
   48460:	18c0201c 	xori	r3,r3,128
   48464:	18ffe004 	addi	r3,r3,-128
   48468:	003b9c06 	br	472dc <__alt_data_end+0xfffeaf1c>
   4846c:	b809883a 	mov	r4,r23
   48470:	da002a15 	stw	r8,168(sp)
   48474:	0046fbc0 	call	46fbc <strlen>
   48478:	1029883a 	mov	r20,r2
   4847c:	dd401d83 	ldbu	r21,118(sp)
   48480:	df002215 	stw	fp,136(sp)
   48484:	0021883a 	mov	r16,zero
   48488:	da002a17 	ldw	r8,168(sp)
   4848c:	003c3906 	br	47574 <__alt_data_end+0xfffeb1b4>
   48490:	d9402017 	ldw	r5,128(sp)
   48494:	d9002117 	ldw	r4,132(sp)
   48498:	d9801a04 	addi	r6,sp,104
   4849c:	00470540 	call	47054 <__sprint_r.part.0>
   484a0:	103e691e 	bne	r2,zero,47e48 <__alt_data_end+0xfffeba88>
   484a4:	d9001b17 	ldw	r4,108(sp)
   484a8:	d8801c17 	ldw	r2,112(sp)
   484ac:	d811883a 	mov	r8,sp
   484b0:	21400044 	addi	r5,r4,1
   484b4:	003e2e06 	br	47d70 <__alt_data_end+0xfffeb9b0>
   484b8:	01000174 	movhi	r4,5
   484bc:	213eb004 	addi	r4,r4,-1344
   484c0:	d9002315 	stw	r4,140(sp)
   484c4:	d9001b17 	ldw	r4,108(sp)
   484c8:	21000044 	addi	r4,r4,1
   484cc:	003c5e06 	br	47648 <__alt_data_end+0xfffeb288>
   484d0:	002b883a 	mov	r21,zero
   484d4:	00800084 	movi	r2,2
   484d8:	10803fcc 	andi	r2,r2,255
   484dc:	01000044 	movi	r4,1
   484e0:	11002b26 	beq	r2,r4,48590 <___vfiprintf_internal_r+0x1428>
   484e4:	01000084 	movi	r4,2
   484e8:	11002b1e 	bne	r2,r4,48598 <___vfiprintf_internal_r+0x1430>
   484ec:	1823883a 	mov	r17,r3
   484f0:	003ee506 	br	48088 <__alt_data_end+0xfffebcc8>
   484f4:	8807883a 	mov	r3,r17
   484f8:	00800044 	movi	r2,1
   484fc:	003ff606 	br	484d8 <__alt_data_end+0xfffec118>
   48500:	00800184 	movi	r2,6
   48504:	1400012e 	bgeu	r2,r16,4850c <___vfiprintf_internal_r+0x13a4>
   48508:	1021883a 	mov	r16,r2
   4850c:	8029883a 	mov	r20,r16
   48510:	8027883a 	mov	r19,r16
   48514:	80002216 	blt	r16,zero,485a0 <___vfiprintf_internal_r+0x1438>
   48518:	05c00174 	movhi	r23,5
   4851c:	df002215 	stw	fp,136(sp)
   48520:	bdfe5004 	addi	r23,r23,-1728
   48524:	003cfb06 	br	47914 <__alt_data_end+0xfffeb554>
   48528:	d9002217 	ldw	r4,136(sp)
   4852c:	d9402417 	ldw	r5,144(sp)
   48530:	20800017 	ldw	r2,0(r4)
   48534:	21000104 	addi	r4,r4,4
   48538:	d9002215 	stw	r4,136(sp)
   4853c:	11400015 	stw	r5,0(r2)
   48540:	003b3d06 	br	47238 <__alt_data_end+0xfffeae78>
   48544:	01400174 	movhi	r5,5
   48548:	297eb004 	addi	r5,r5,-1344
   4854c:	d9402315 	stw	r5,140(sp)
   48550:	d9401b17 	ldw	r5,108(sp)
   48554:	29400044 	addi	r5,r5,1
   48558:	003e6d06 	br	47f10 <__alt_data_end+0xfffebb50>
   4855c:	8029883a 	mov	r20,r16
   48560:	dd401d83 	ldbu	r21,118(sp)
   48564:	df002215 	stw	fp,136(sp)
   48568:	0021883a 	mov	r16,zero
   4856c:	003c0106 	br	47574 <__alt_data_end+0xfffeb1b4>
   48570:	00c00174 	movhi	r3,5
   48574:	18feac04 	addi	r3,r3,-1360
   48578:	d8c02315 	stw	r3,140(sp)
   4857c:	280d883a 	mov	r6,r5
   48580:	003c6906 	br	47728 <__alt_data_end+0xfffeb368>
   48584:	802d883a 	mov	r22,r16
   48588:	0021883a 	mov	r16,zero
   4858c:	003b5406 	br	472e0 <__alt_data_end+0xfffeaf20>
   48590:	1823883a 	mov	r17,r3
   48594:	003cf306 	br	47964 <__alt_data_end+0xfffeb5a4>
   48598:	1823883a 	mov	r17,r3
   4859c:	003cad06 	br	47854 <__alt_data_end+0xfffeb494>
   485a0:	0027883a 	mov	r19,zero
   485a4:	003fdc06 	br	48518 <__alt_data_end+0xfffec158>
   485a8:	d9402217 	ldw	r5,136(sp)
   485ac:	8005883a 	mov	r2,r16
   485b0:	b0c00043 	ldbu	r3,1(r22)
   485b4:	2c000017 	ldw	r16,0(r5)
   485b8:	29000104 	addi	r4,r5,4
   485bc:	d9002215 	stw	r4,136(sp)
   485c0:	102d883a 	mov	r22,r2
   485c4:	803fa50e 	bge	r16,zero,4845c <__alt_data_end+0xfffec09c>
   485c8:	18c03fcc 	andi	r3,r3,255
   485cc:	18c0201c 	xori	r3,r3,128
   485d0:	043fffc4 	movi	r16,-1
   485d4:	18ffe004 	addi	r3,r3,-128
   485d8:	003b4006 	br	472dc <__alt_data_end+0xfffeaf1c>
   485dc:	d9402303 	ldbu	r5,140(sp)
   485e0:	d9401d85 	stb	r5,118(sp)
   485e4:	003cae06 	br	478a0 <__alt_data_end+0xfffeb4e0>
   485e8:	d8c02303 	ldbu	r3,140(sp)
   485ec:	d8c01d85 	stb	r3,118(sp)
   485f0:	003d1406 	br	47a44 <__alt_data_end+0xfffeb684>
   485f4:	d8c02303 	ldbu	r3,140(sp)
   485f8:	d8c01d85 	stb	r3,118(sp)
   485fc:	003cca06 	br	47928 <__alt_data_end+0xfffeb568>
   48600:	8880004c 	andi	r2,r17,1
   48604:	002b883a 	mov	r21,zero
   48608:	10000526 	beq	r2,zero,48620 <___vfiprintf_internal_r+0x14b8>
   4860c:	00800c04 	movi	r2,48
   48610:	d88019c5 	stb	r2,103(sp)
   48614:	dd002817 	ldw	r20,160(sp)
   48618:	ddc019c4 	addi	r23,sp,103
   4861c:	003bd506 	br	47574 <__alt_data_end+0xfffeb1b4>
   48620:	0029883a 	mov	r20,zero
   48624:	ddc01a04 	addi	r23,sp,104
   48628:	003bd206 	br	47574 <__alt_data_end+0xfffeb1b4>
   4862c:	d9002303 	ldbu	r4,140(sp)
   48630:	d9001d85 	stb	r4,118(sp)
   48634:	003da606 	br	47cd0 <__alt_data_end+0xfffeb910>
   48638:	d8c02303 	ldbu	r3,140(sp)
   4863c:	d8c01d85 	stb	r3,118(sp)
   48640:	003c7606 	br	4781c <__alt_data_end+0xfffeb45c>
   48644:	d8c02303 	ldbu	r3,140(sp)
   48648:	d8c01d85 	stb	r3,118(sp)
   4864c:	003c6506 	br	477e4 <__alt_data_end+0xfffeb424>
   48650:	d9002303 	ldbu	r4,140(sp)
   48654:	d9001d85 	stb	r4,118(sp)
   48658:	003d3d06 	br	47b50 <__alt_data_end+0xfffeb790>
   4865c:	d8c02303 	ldbu	r3,140(sp)
   48660:	d8c01d85 	stb	r3,118(sp)
   48664:	003d1d06 	br	47adc <__alt_data_end+0xfffeb71c>
   48668:	d8c02303 	ldbu	r3,140(sp)
   4866c:	d8c01d85 	stb	r3,118(sp)
   48670:	003d0306 	br	47a80 <__alt_data_end+0xfffeb6c0>

00048674 <__vfiprintf_internal>:
   48674:	00800174 	movhi	r2,5
   48678:	1085fb04 	addi	r2,r2,6124
   4867c:	300f883a 	mov	r7,r6
   48680:	280d883a 	mov	r6,r5
   48684:	200b883a 	mov	r5,r4
   48688:	11000017 	ldw	r4,0(r2)
   4868c:	00471681 	jmpi	47168 <___vfiprintf_internal_r>

00048690 <__sbprintf>:
   48690:	2880030b 	ldhu	r2,12(r5)
   48694:	2ac01917 	ldw	r11,100(r5)
   48698:	2a80038b 	ldhu	r10,14(r5)
   4869c:	2a400717 	ldw	r9,28(r5)
   486a0:	2a000917 	ldw	r8,36(r5)
   486a4:	defee204 	addi	sp,sp,-1144
   486a8:	00c10004 	movi	r3,1024
   486ac:	dc011a15 	stw	r16,1128(sp)
   486b0:	10bfff4c 	andi	r2,r2,65533
   486b4:	2821883a 	mov	r16,r5
   486b8:	d8cb883a 	add	r5,sp,r3
   486bc:	dc811c15 	stw	r18,1136(sp)
   486c0:	dc411b15 	stw	r17,1132(sp)
   486c4:	dfc11d15 	stw	ra,1140(sp)
   486c8:	2025883a 	mov	r18,r4
   486cc:	d881030d 	sth	r2,1036(sp)
   486d0:	dac11915 	stw	r11,1124(sp)
   486d4:	da81038d 	sth	r10,1038(sp)
   486d8:	da410715 	stw	r9,1052(sp)
   486dc:	da010915 	stw	r8,1060(sp)
   486e0:	dec10015 	stw	sp,1024(sp)
   486e4:	dec10415 	stw	sp,1040(sp)
   486e8:	d8c10215 	stw	r3,1032(sp)
   486ec:	d8c10515 	stw	r3,1044(sp)
   486f0:	d8010615 	stw	zero,1048(sp)
   486f4:	00471680 	call	47168 <___vfiprintf_internal_r>
   486f8:	1023883a 	mov	r17,r2
   486fc:	10000416 	blt	r2,zero,48710 <__sbprintf+0x80>
   48700:	d9410004 	addi	r5,sp,1024
   48704:	9009883a 	mov	r4,r18
   48708:	00444340 	call	44434 <_fflush_r>
   4870c:	10000d1e 	bne	r2,zero,48744 <__sbprintf+0xb4>
   48710:	d881030b 	ldhu	r2,1036(sp)
   48714:	1080100c 	andi	r2,r2,64
   48718:	10000326 	beq	r2,zero,48728 <__sbprintf+0x98>
   4871c:	8080030b 	ldhu	r2,12(r16)
   48720:	10801014 	ori	r2,r2,64
   48724:	8080030d 	sth	r2,12(r16)
   48728:	8805883a 	mov	r2,r17
   4872c:	dfc11d17 	ldw	ra,1140(sp)
   48730:	dc811c17 	ldw	r18,1136(sp)
   48734:	dc411b17 	ldw	r17,1132(sp)
   48738:	dc011a17 	ldw	r16,1128(sp)
   4873c:	dec11e04 	addi	sp,sp,1144
   48740:	f800283a 	ret
   48744:	047fffc4 	movi	r17,-1
   48748:	003ff106 	br	48710 <__alt_data_end+0xfffec350>

0004874c <_write_r>:
   4874c:	defffd04 	addi	sp,sp,-12
   48750:	2805883a 	mov	r2,r5
   48754:	dc000015 	stw	r16,0(sp)
   48758:	04000174 	movhi	r16,5
   4875c:	dc400115 	stw	r17,4(sp)
   48760:	300b883a 	mov	r5,r6
   48764:	840d1b04 	addi	r16,r16,13420
   48768:	2023883a 	mov	r17,r4
   4876c:	380d883a 	mov	r6,r7
   48770:	1009883a 	mov	r4,r2
   48774:	dfc00215 	stw	ra,8(sp)
   48778:	80000015 	stw	zero,0(r16)
   4877c:	004daf40 	call	4daf4 <write>
   48780:	00ffffc4 	movi	r3,-1
   48784:	10c00526 	beq	r2,r3,4879c <_write_r+0x50>
   48788:	dfc00217 	ldw	ra,8(sp)
   4878c:	dc400117 	ldw	r17,4(sp)
   48790:	dc000017 	ldw	r16,0(sp)
   48794:	dec00304 	addi	sp,sp,12
   48798:	f800283a 	ret
   4879c:	80c00017 	ldw	r3,0(r16)
   487a0:	183ff926 	beq	r3,zero,48788 <__alt_data_end+0xfffec3c8>
   487a4:	88c00015 	stw	r3,0(r17)
   487a8:	003ff706 	br	48788 <__alt_data_end+0xfffec3c8>

000487ac <_close_r>:
   487ac:	defffd04 	addi	sp,sp,-12
   487b0:	dc000015 	stw	r16,0(sp)
   487b4:	04000174 	movhi	r16,5
   487b8:	dc400115 	stw	r17,4(sp)
   487bc:	840d1b04 	addi	r16,r16,13420
   487c0:	2023883a 	mov	r17,r4
   487c4:	2809883a 	mov	r4,r5
   487c8:	dfc00215 	stw	ra,8(sp)
   487cc:	80000015 	stw	zero,0(r16)
   487d0:	004d29c0 	call	4d29c <close>
   487d4:	00ffffc4 	movi	r3,-1
   487d8:	10c00526 	beq	r2,r3,487f0 <_close_r+0x44>
   487dc:	dfc00217 	ldw	ra,8(sp)
   487e0:	dc400117 	ldw	r17,4(sp)
   487e4:	dc000017 	ldw	r16,0(sp)
   487e8:	dec00304 	addi	sp,sp,12
   487ec:	f800283a 	ret
   487f0:	80c00017 	ldw	r3,0(r16)
   487f4:	183ff926 	beq	r3,zero,487dc <__alt_data_end+0xfffec41c>
   487f8:	88c00015 	stw	r3,0(r17)
   487fc:	003ff706 	br	487dc <__alt_data_end+0xfffec41c>

00048800 <_calloc_r>:
   48800:	defffe04 	addi	sp,sp,-8
   48804:	2805883a 	mov	r2,r5
   48808:	dc000015 	stw	r16,0(sp)
   4880c:	300b883a 	mov	r5,r6
   48810:	2021883a 	mov	r16,r4
   48814:	1009883a 	mov	r4,r2
   48818:	dfc00115 	stw	ra,4(sp)
   4881c:	004a9940 	call	4a994 <__mulsi3>
   48820:	100b883a 	mov	r5,r2
   48824:	8009883a 	mov	r4,r16
   48828:	00450c40 	call	450c4 <_malloc_r>
   4882c:	10002926 	beq	r2,zero,488d4 <_calloc_r+0xd4>
   48830:	11bfff17 	ldw	r6,-4(r2)
   48834:	1021883a 	mov	r16,r2
   48838:	00bfff04 	movi	r2,-4
   4883c:	308c703a 	and	r6,r6,r2
   48840:	00c00904 	movi	r3,36
   48844:	308d883a 	add	r6,r6,r2
   48848:	19801636 	bltu	r3,r6,488a4 <_calloc_r+0xa4>
   4884c:	008004c4 	movi	r2,19
   48850:	11800b2e 	bgeu	r2,r6,48880 <_calloc_r+0x80>
   48854:	80000015 	stw	zero,0(r16)
   48858:	80000115 	stw	zero,4(r16)
   4885c:	008006c4 	movi	r2,27
   48860:	11801a2e 	bgeu	r2,r6,488cc <_calloc_r+0xcc>
   48864:	80000215 	stw	zero,8(r16)
   48868:	80000315 	stw	zero,12(r16)
   4886c:	30c0151e 	bne	r6,r3,488c4 <_calloc_r+0xc4>
   48870:	80000415 	stw	zero,16(r16)
   48874:	80800604 	addi	r2,r16,24
   48878:	80000515 	stw	zero,20(r16)
   4887c:	00000106 	br	48884 <_calloc_r+0x84>
   48880:	8005883a 	mov	r2,r16
   48884:	10000015 	stw	zero,0(r2)
   48888:	10000115 	stw	zero,4(r2)
   4888c:	10000215 	stw	zero,8(r2)
   48890:	8005883a 	mov	r2,r16
   48894:	dfc00117 	ldw	ra,4(sp)
   48898:	dc000017 	ldw	r16,0(sp)
   4889c:	dec00204 	addi	sp,sp,8
   488a0:	f800283a 	ret
   488a4:	000b883a 	mov	r5,zero
   488a8:	8009883a 	mov	r4,r16
   488ac:	0045afc0 	call	45afc <memset>
   488b0:	8005883a 	mov	r2,r16
   488b4:	dfc00117 	ldw	ra,4(sp)
   488b8:	dc000017 	ldw	r16,0(sp)
   488bc:	dec00204 	addi	sp,sp,8
   488c0:	f800283a 	ret
   488c4:	80800404 	addi	r2,r16,16
   488c8:	003fee06 	br	48884 <__alt_data_end+0xfffec4c4>
   488cc:	80800204 	addi	r2,r16,8
   488d0:	003fec06 	br	48884 <__alt_data_end+0xfffec4c4>
   488d4:	0005883a 	mov	r2,zero
   488d8:	003fee06 	br	48894 <__alt_data_end+0xfffec4d4>

000488dc <_fclose_r>:
   488dc:	28003926 	beq	r5,zero,489c4 <_fclose_r+0xe8>
   488e0:	defffc04 	addi	sp,sp,-16
   488e4:	dc400115 	stw	r17,4(sp)
   488e8:	dc000015 	stw	r16,0(sp)
   488ec:	dfc00315 	stw	ra,12(sp)
   488f0:	dc800215 	stw	r18,8(sp)
   488f4:	2023883a 	mov	r17,r4
   488f8:	2821883a 	mov	r16,r5
   488fc:	20000226 	beq	r4,zero,48908 <_fclose_r+0x2c>
   48900:	20800e17 	ldw	r2,56(r4)
   48904:	10002726 	beq	r2,zero,489a4 <_fclose_r+0xc8>
   48908:	8080030f 	ldh	r2,12(r16)
   4890c:	1000071e 	bne	r2,zero,4892c <_fclose_r+0x50>
   48910:	0005883a 	mov	r2,zero
   48914:	dfc00317 	ldw	ra,12(sp)
   48918:	dc800217 	ldw	r18,8(sp)
   4891c:	dc400117 	ldw	r17,4(sp)
   48920:	dc000017 	ldw	r16,0(sp)
   48924:	dec00404 	addi	sp,sp,16
   48928:	f800283a 	ret
   4892c:	800b883a 	mov	r5,r16
   48930:	8809883a 	mov	r4,r17
   48934:	00442180 	call	44218 <__sflush_r>
   48938:	1025883a 	mov	r18,r2
   4893c:	80800b17 	ldw	r2,44(r16)
   48940:	10000426 	beq	r2,zero,48954 <_fclose_r+0x78>
   48944:	81400717 	ldw	r5,28(r16)
   48948:	8809883a 	mov	r4,r17
   4894c:	103ee83a 	callr	r2
   48950:	10001616 	blt	r2,zero,489ac <_fclose_r+0xd0>
   48954:	8080030b 	ldhu	r2,12(r16)
   48958:	1080200c 	andi	r2,r2,128
   4895c:	1000151e 	bne	r2,zero,489b4 <_fclose_r+0xd8>
   48960:	81400c17 	ldw	r5,48(r16)
   48964:	28000526 	beq	r5,zero,4897c <_fclose_r+0xa0>
   48968:	80801004 	addi	r2,r16,64
   4896c:	28800226 	beq	r5,r2,48978 <_fclose_r+0x9c>
   48970:	8809883a 	mov	r4,r17
   48974:	00449940 	call	44994 <_free_r>
   48978:	80000c15 	stw	zero,48(r16)
   4897c:	81401117 	ldw	r5,68(r16)
   48980:	28000326 	beq	r5,zero,48990 <_fclose_r+0xb4>
   48984:	8809883a 	mov	r4,r17
   48988:	00449940 	call	44994 <_free_r>
   4898c:	80001115 	stw	zero,68(r16)
   48990:	00448300 	call	44830 <__sfp_lock_acquire>
   48994:	8000030d 	sth	zero,12(r16)
   48998:	00448340 	call	44834 <__sfp_lock_release>
   4899c:	9005883a 	mov	r2,r18
   489a0:	003fdc06 	br	48914 <__alt_data_end+0xfffec554>
   489a4:	00448200 	call	44820 <__sinit>
   489a8:	003fd706 	br	48908 <__alt_data_end+0xfffec548>
   489ac:	04bfffc4 	movi	r18,-1
   489b0:	003fe806 	br	48954 <__alt_data_end+0xfffec594>
   489b4:	81400417 	ldw	r5,16(r16)
   489b8:	8809883a 	mov	r4,r17
   489bc:	00449940 	call	44994 <_free_r>
   489c0:	003fe706 	br	48960 <__alt_data_end+0xfffec5a0>
   489c4:	0005883a 	mov	r2,zero
   489c8:	f800283a 	ret

000489cc <fclose>:
   489cc:	00800174 	movhi	r2,5
   489d0:	1085fb04 	addi	r2,r2,6124
   489d4:	200b883a 	mov	r5,r4
   489d8:	11000017 	ldw	r4,0(r2)
   489dc:	00488dc1 	jmpi	488dc <_fclose_r>

000489e0 <__fputwc>:
   489e0:	defff804 	addi	sp,sp,-32
   489e4:	dcc00415 	stw	r19,16(sp)
   489e8:	dc800315 	stw	r18,12(sp)
   489ec:	dc000115 	stw	r16,4(sp)
   489f0:	dfc00715 	stw	ra,28(sp)
   489f4:	dd400615 	stw	r21,24(sp)
   489f8:	dd000515 	stw	r20,20(sp)
   489fc:	dc400215 	stw	r17,8(sp)
   48a00:	2027883a 	mov	r19,r4
   48a04:	2825883a 	mov	r18,r5
   48a08:	3021883a 	mov	r16,r6
   48a0c:	0044eb40 	call	44eb4 <__locale_mb_cur_max>
   48a10:	00c00044 	movi	r3,1
   48a14:	10c03e26 	beq	r2,r3,48b10 <__fputwc+0x130>
   48a18:	81c01704 	addi	r7,r16,92
   48a1c:	900d883a 	mov	r6,r18
   48a20:	d80b883a 	mov	r5,sp
   48a24:	9809883a 	mov	r4,r19
   48a28:	0049a380 	call	49a38 <_wcrtomb_r>
   48a2c:	1029883a 	mov	r20,r2
   48a30:	00bfffc4 	movi	r2,-1
   48a34:	a0802026 	beq	r20,r2,48ab8 <__fputwc+0xd8>
   48a38:	d9400003 	ldbu	r5,0(sp)
   48a3c:	a0001c26 	beq	r20,zero,48ab0 <__fputwc+0xd0>
   48a40:	0023883a 	mov	r17,zero
   48a44:	05400284 	movi	r21,10
   48a48:	00000906 	br	48a70 <__fputwc+0x90>
   48a4c:	80800017 	ldw	r2,0(r16)
   48a50:	11400005 	stb	r5,0(r2)
   48a54:	80c00017 	ldw	r3,0(r16)
   48a58:	18c00044 	addi	r3,r3,1
   48a5c:	80c00015 	stw	r3,0(r16)
   48a60:	8c400044 	addi	r17,r17,1
   48a64:	dc45883a 	add	r2,sp,r17
   48a68:	8d00112e 	bgeu	r17,r20,48ab0 <__fputwc+0xd0>
   48a6c:	11400003 	ldbu	r5,0(r2)
   48a70:	80c00217 	ldw	r3,8(r16)
   48a74:	18ffffc4 	addi	r3,r3,-1
   48a78:	80c00215 	stw	r3,8(r16)
   48a7c:	183ff30e 	bge	r3,zero,48a4c <__alt_data_end+0xfffec68c>
   48a80:	80800617 	ldw	r2,24(r16)
   48a84:	18801916 	blt	r3,r2,48aec <__fputwc+0x10c>
   48a88:	80800017 	ldw	r2,0(r16)
   48a8c:	11400005 	stb	r5,0(r2)
   48a90:	80800017 	ldw	r2,0(r16)
   48a94:	10c00003 	ldbu	r3,0(r2)
   48a98:	10800044 	addi	r2,r2,1
   48a9c:	1d402326 	beq	r3,r21,48b2c <__fputwc+0x14c>
   48aa0:	80800015 	stw	r2,0(r16)
   48aa4:	8c400044 	addi	r17,r17,1
   48aa8:	dc45883a 	add	r2,sp,r17
   48aac:	8d3fef36 	bltu	r17,r20,48a6c <__alt_data_end+0xfffec6ac>
   48ab0:	9005883a 	mov	r2,r18
   48ab4:	00000406 	br	48ac8 <__fputwc+0xe8>
   48ab8:	80c0030b 	ldhu	r3,12(r16)
   48abc:	a005883a 	mov	r2,r20
   48ac0:	18c01014 	ori	r3,r3,64
   48ac4:	80c0030d 	sth	r3,12(r16)
   48ac8:	dfc00717 	ldw	ra,28(sp)
   48acc:	dd400617 	ldw	r21,24(sp)
   48ad0:	dd000517 	ldw	r20,20(sp)
   48ad4:	dcc00417 	ldw	r19,16(sp)
   48ad8:	dc800317 	ldw	r18,12(sp)
   48adc:	dc400217 	ldw	r17,8(sp)
   48ae0:	dc000117 	ldw	r16,4(sp)
   48ae4:	dec00804 	addi	sp,sp,32
   48ae8:	f800283a 	ret
   48aec:	800d883a 	mov	r6,r16
   48af0:	29403fcc 	andi	r5,r5,255
   48af4:	9809883a 	mov	r4,r19
   48af8:	00498e00 	call	498e0 <__swbuf_r>
   48afc:	10bfffe0 	cmpeqi	r2,r2,-1
   48b00:	10803fcc 	andi	r2,r2,255
   48b04:	103fd626 	beq	r2,zero,48a60 <__alt_data_end+0xfffec6a0>
   48b08:	00bfffc4 	movi	r2,-1
   48b0c:	003fee06 	br	48ac8 <__alt_data_end+0xfffec708>
   48b10:	90ffffc4 	addi	r3,r18,-1
   48b14:	01003f84 	movi	r4,254
   48b18:	20ffbf36 	bltu	r4,r3,48a18 <__alt_data_end+0xfffec658>
   48b1c:	900b883a 	mov	r5,r18
   48b20:	dc800005 	stb	r18,0(sp)
   48b24:	1029883a 	mov	r20,r2
   48b28:	003fc506 	br	48a40 <__alt_data_end+0xfffec680>
   48b2c:	800d883a 	mov	r6,r16
   48b30:	a80b883a 	mov	r5,r21
   48b34:	9809883a 	mov	r4,r19
   48b38:	00498e00 	call	498e0 <__swbuf_r>
   48b3c:	10bfffe0 	cmpeqi	r2,r2,-1
   48b40:	003fef06 	br	48b00 <__alt_data_end+0xfffec740>

00048b44 <_fputwc_r>:
   48b44:	3080030b 	ldhu	r2,12(r6)
   48b48:	10c8000c 	andi	r3,r2,8192
   48b4c:	1800051e 	bne	r3,zero,48b64 <_fputwc_r+0x20>
   48b50:	30c01917 	ldw	r3,100(r6)
   48b54:	10880014 	ori	r2,r2,8192
   48b58:	3080030d 	sth	r2,12(r6)
   48b5c:	18880014 	ori	r2,r3,8192
   48b60:	30801915 	stw	r2,100(r6)
   48b64:	00489e01 	jmpi	489e0 <__fputwc>

00048b68 <fputwc>:
   48b68:	00800174 	movhi	r2,5
   48b6c:	defffc04 	addi	sp,sp,-16
   48b70:	1085fb04 	addi	r2,r2,6124
   48b74:	dc000115 	stw	r16,4(sp)
   48b78:	14000017 	ldw	r16,0(r2)
   48b7c:	dc400215 	stw	r17,8(sp)
   48b80:	dfc00315 	stw	ra,12(sp)
   48b84:	2023883a 	mov	r17,r4
   48b88:	80000226 	beq	r16,zero,48b94 <fputwc+0x2c>
   48b8c:	80800e17 	ldw	r2,56(r16)
   48b90:	10001026 	beq	r2,zero,48bd4 <fputwc+0x6c>
   48b94:	2880030b 	ldhu	r2,12(r5)
   48b98:	10c8000c 	andi	r3,r2,8192
   48b9c:	1800051e 	bne	r3,zero,48bb4 <fputwc+0x4c>
   48ba0:	28c01917 	ldw	r3,100(r5)
   48ba4:	10880014 	ori	r2,r2,8192
   48ba8:	2880030d 	sth	r2,12(r5)
   48bac:	18880014 	ori	r2,r3,8192
   48bb0:	28801915 	stw	r2,100(r5)
   48bb4:	280d883a 	mov	r6,r5
   48bb8:	8009883a 	mov	r4,r16
   48bbc:	880b883a 	mov	r5,r17
   48bc0:	dfc00317 	ldw	ra,12(sp)
   48bc4:	dc400217 	ldw	r17,8(sp)
   48bc8:	dc000117 	ldw	r16,4(sp)
   48bcc:	dec00404 	addi	sp,sp,16
   48bd0:	00489e01 	jmpi	489e0 <__fputwc>
   48bd4:	8009883a 	mov	r4,r16
   48bd8:	d9400015 	stw	r5,0(sp)
   48bdc:	00448200 	call	44820 <__sinit>
   48be0:	d9400017 	ldw	r5,0(sp)
   48be4:	003feb06 	br	48b94 <__alt_data_end+0xfffec7d4>

00048be8 <_fstat_r>:
   48be8:	defffd04 	addi	sp,sp,-12
   48bec:	2805883a 	mov	r2,r5
   48bf0:	dc000015 	stw	r16,0(sp)
   48bf4:	04000174 	movhi	r16,5
   48bf8:	dc400115 	stw	r17,4(sp)
   48bfc:	840d1b04 	addi	r16,r16,13420
   48c00:	2023883a 	mov	r17,r4
   48c04:	300b883a 	mov	r5,r6
   48c08:	1009883a 	mov	r4,r2
   48c0c:	dfc00215 	stw	ra,8(sp)
   48c10:	80000015 	stw	zero,0(r16)
   48c14:	004d3dc0 	call	4d3dc <fstat>
   48c18:	00ffffc4 	movi	r3,-1
   48c1c:	10c00526 	beq	r2,r3,48c34 <_fstat_r+0x4c>
   48c20:	dfc00217 	ldw	ra,8(sp)
   48c24:	dc400117 	ldw	r17,4(sp)
   48c28:	dc000017 	ldw	r16,0(sp)
   48c2c:	dec00304 	addi	sp,sp,12
   48c30:	f800283a 	ret
   48c34:	80c00017 	ldw	r3,0(r16)
   48c38:	183ff926 	beq	r3,zero,48c20 <__alt_data_end+0xfffec860>
   48c3c:	88c00015 	stw	r3,0(r17)
   48c40:	003ff706 	br	48c20 <__alt_data_end+0xfffec860>

00048c44 <__sfvwrite_r>:
   48c44:	30800217 	ldw	r2,8(r6)
   48c48:	10006726 	beq	r2,zero,48de8 <__sfvwrite_r+0x1a4>
   48c4c:	28c0030b 	ldhu	r3,12(r5)
   48c50:	defff404 	addi	sp,sp,-48
   48c54:	dd400715 	stw	r21,28(sp)
   48c58:	dd000615 	stw	r20,24(sp)
   48c5c:	dc000215 	stw	r16,8(sp)
   48c60:	dfc00b15 	stw	ra,44(sp)
   48c64:	df000a15 	stw	fp,40(sp)
   48c68:	ddc00915 	stw	r23,36(sp)
   48c6c:	dd800815 	stw	r22,32(sp)
   48c70:	dcc00515 	stw	r19,20(sp)
   48c74:	dc800415 	stw	r18,16(sp)
   48c78:	dc400315 	stw	r17,12(sp)
   48c7c:	1880020c 	andi	r2,r3,8
   48c80:	2821883a 	mov	r16,r5
   48c84:	202b883a 	mov	r21,r4
   48c88:	3029883a 	mov	r20,r6
   48c8c:	10002726 	beq	r2,zero,48d2c <__sfvwrite_r+0xe8>
   48c90:	28800417 	ldw	r2,16(r5)
   48c94:	10002526 	beq	r2,zero,48d2c <__sfvwrite_r+0xe8>
   48c98:	1880008c 	andi	r2,r3,2
   48c9c:	a4400017 	ldw	r17,0(r20)
   48ca0:	10002a26 	beq	r2,zero,48d4c <__sfvwrite_r+0x108>
   48ca4:	05a00034 	movhi	r22,32768
   48ca8:	0027883a 	mov	r19,zero
   48cac:	0025883a 	mov	r18,zero
   48cb0:	b5bf0004 	addi	r22,r22,-1024
   48cb4:	980d883a 	mov	r6,r19
   48cb8:	a809883a 	mov	r4,r21
   48cbc:	90004626 	beq	r18,zero,48dd8 <__sfvwrite_r+0x194>
   48cc0:	900f883a 	mov	r7,r18
   48cc4:	b480022e 	bgeu	r22,r18,48cd0 <__sfvwrite_r+0x8c>
   48cc8:	01e00034 	movhi	r7,32768
   48ccc:	39ff0004 	addi	r7,r7,-1024
   48cd0:	80800917 	ldw	r2,36(r16)
   48cd4:	81400717 	ldw	r5,28(r16)
   48cd8:	103ee83a 	callr	r2
   48cdc:	00805a0e 	bge	zero,r2,48e48 <__sfvwrite_r+0x204>
   48ce0:	a0c00217 	ldw	r3,8(r20)
   48ce4:	98a7883a 	add	r19,r19,r2
   48ce8:	90a5c83a 	sub	r18,r18,r2
   48cec:	1885c83a 	sub	r2,r3,r2
   48cf0:	a0800215 	stw	r2,8(r20)
   48cf4:	103fef1e 	bne	r2,zero,48cb4 <__alt_data_end+0xfffec8f4>
   48cf8:	0005883a 	mov	r2,zero
   48cfc:	dfc00b17 	ldw	ra,44(sp)
   48d00:	df000a17 	ldw	fp,40(sp)
   48d04:	ddc00917 	ldw	r23,36(sp)
   48d08:	dd800817 	ldw	r22,32(sp)
   48d0c:	dd400717 	ldw	r21,28(sp)
   48d10:	dd000617 	ldw	r20,24(sp)
   48d14:	dcc00517 	ldw	r19,20(sp)
   48d18:	dc800417 	ldw	r18,16(sp)
   48d1c:	dc400317 	ldw	r17,12(sp)
   48d20:	dc000217 	ldw	r16,8(sp)
   48d24:	dec00c04 	addi	sp,sp,48
   48d28:	f800283a 	ret
   48d2c:	800b883a 	mov	r5,r16
   48d30:	a809883a 	mov	r4,r21
   48d34:	00428140 	call	42814 <__swsetup_r>
   48d38:	1000ee1e 	bne	r2,zero,490f4 <__sfvwrite_r+0x4b0>
   48d3c:	80c0030b 	ldhu	r3,12(r16)
   48d40:	a4400017 	ldw	r17,0(r20)
   48d44:	1880008c 	andi	r2,r3,2
   48d48:	103fd61e 	bne	r2,zero,48ca4 <__alt_data_end+0xfffec8e4>
   48d4c:	1880004c 	andi	r2,r3,1
   48d50:	1000421e 	bne	r2,zero,48e5c <__sfvwrite_r+0x218>
   48d54:	0039883a 	mov	fp,zero
   48d58:	0025883a 	mov	r18,zero
   48d5c:	90001a26 	beq	r18,zero,48dc8 <__sfvwrite_r+0x184>
   48d60:	1880800c 	andi	r2,r3,512
   48d64:	84c00217 	ldw	r19,8(r16)
   48d68:	10002126 	beq	r2,zero,48df0 <__sfvwrite_r+0x1ac>
   48d6c:	982f883a 	mov	r23,r19
   48d70:	94c09636 	bltu	r18,r19,48fcc <__sfvwrite_r+0x388>
   48d74:	1881200c 	andi	r2,r3,1152
   48d78:	1000a11e 	bne	r2,zero,49000 <__sfvwrite_r+0x3bc>
   48d7c:	81000017 	ldw	r4,0(r16)
   48d80:	b80d883a 	mov	r6,r23
   48d84:	e00b883a 	mov	r5,fp
   48d88:	00491c00 	call	491c0 <memmove>
   48d8c:	80c00217 	ldw	r3,8(r16)
   48d90:	81000017 	ldw	r4,0(r16)
   48d94:	9005883a 	mov	r2,r18
   48d98:	1ce7c83a 	sub	r19,r3,r19
   48d9c:	25cf883a 	add	r7,r4,r23
   48da0:	84c00215 	stw	r19,8(r16)
   48da4:	81c00015 	stw	r7,0(r16)
   48da8:	a0c00217 	ldw	r3,8(r20)
   48dac:	e0b9883a 	add	fp,fp,r2
   48db0:	90a5c83a 	sub	r18,r18,r2
   48db4:	18a7c83a 	sub	r19,r3,r2
   48db8:	a4c00215 	stw	r19,8(r20)
   48dbc:	983fce26 	beq	r19,zero,48cf8 <__alt_data_end+0xfffec938>
   48dc0:	80c0030b 	ldhu	r3,12(r16)
   48dc4:	903fe61e 	bne	r18,zero,48d60 <__alt_data_end+0xfffec9a0>
   48dc8:	8f000017 	ldw	fp,0(r17)
   48dcc:	8c800117 	ldw	r18,4(r17)
   48dd0:	8c400204 	addi	r17,r17,8
   48dd4:	003fe106 	br	48d5c <__alt_data_end+0xfffec99c>
   48dd8:	8cc00017 	ldw	r19,0(r17)
   48ddc:	8c800117 	ldw	r18,4(r17)
   48de0:	8c400204 	addi	r17,r17,8
   48de4:	003fb306 	br	48cb4 <__alt_data_end+0xfffec8f4>
   48de8:	0005883a 	mov	r2,zero
   48dec:	f800283a 	ret
   48df0:	81000017 	ldw	r4,0(r16)
   48df4:	80800417 	ldw	r2,16(r16)
   48df8:	11005a36 	bltu	r2,r4,48f64 <__sfvwrite_r+0x320>
   48dfc:	85c00517 	ldw	r23,20(r16)
   48e00:	95c05836 	bltu	r18,r23,48f64 <__sfvwrite_r+0x320>
   48e04:	00a00034 	movhi	r2,32768
   48e08:	10bfffc4 	addi	r2,r2,-1
   48e0c:	9009883a 	mov	r4,r18
   48e10:	1480012e 	bgeu	r2,r18,48e18 <__sfvwrite_r+0x1d4>
   48e14:	1009883a 	mov	r4,r2
   48e18:	b80b883a 	mov	r5,r23
   48e1c:	004a7e00 	call	4a7e0 <__divsi3>
   48e20:	b80b883a 	mov	r5,r23
   48e24:	1009883a 	mov	r4,r2
   48e28:	004a9940 	call	4a994 <__mulsi3>
   48e2c:	81400717 	ldw	r5,28(r16)
   48e30:	80c00917 	ldw	r3,36(r16)
   48e34:	100f883a 	mov	r7,r2
   48e38:	e00d883a 	mov	r6,fp
   48e3c:	a809883a 	mov	r4,r21
   48e40:	183ee83a 	callr	r3
   48e44:	00bfd816 	blt	zero,r2,48da8 <__alt_data_end+0xfffec9e8>
   48e48:	8080030b 	ldhu	r2,12(r16)
   48e4c:	10801014 	ori	r2,r2,64
   48e50:	8080030d 	sth	r2,12(r16)
   48e54:	00bfffc4 	movi	r2,-1
   48e58:	003fa806 	br	48cfc <__alt_data_end+0xfffec93c>
   48e5c:	0027883a 	mov	r19,zero
   48e60:	0011883a 	mov	r8,zero
   48e64:	0039883a 	mov	fp,zero
   48e68:	0025883a 	mov	r18,zero
   48e6c:	90001f26 	beq	r18,zero,48eec <__sfvwrite_r+0x2a8>
   48e70:	40005a26 	beq	r8,zero,48fdc <__sfvwrite_r+0x398>
   48e74:	982d883a 	mov	r22,r19
   48e78:	94c0012e 	bgeu	r18,r19,48e80 <__sfvwrite_r+0x23c>
   48e7c:	902d883a 	mov	r22,r18
   48e80:	81000017 	ldw	r4,0(r16)
   48e84:	80800417 	ldw	r2,16(r16)
   48e88:	b02f883a 	mov	r23,r22
   48e8c:	81c00517 	ldw	r7,20(r16)
   48e90:	1100032e 	bgeu	r2,r4,48ea0 <__sfvwrite_r+0x25c>
   48e94:	80c00217 	ldw	r3,8(r16)
   48e98:	38c7883a 	add	r3,r7,r3
   48e9c:	1d801816 	blt	r3,r22,48f00 <__sfvwrite_r+0x2bc>
   48ea0:	b1c03e16 	blt	r22,r7,48f9c <__sfvwrite_r+0x358>
   48ea4:	80800917 	ldw	r2,36(r16)
   48ea8:	81400717 	ldw	r5,28(r16)
   48eac:	e00d883a 	mov	r6,fp
   48eb0:	da000115 	stw	r8,4(sp)
   48eb4:	a809883a 	mov	r4,r21
   48eb8:	103ee83a 	callr	r2
   48ebc:	102f883a 	mov	r23,r2
   48ec0:	da000117 	ldw	r8,4(sp)
   48ec4:	00bfe00e 	bge	zero,r2,48e48 <__alt_data_end+0xfffeca88>
   48ec8:	9de7c83a 	sub	r19,r19,r23
   48ecc:	98001f26 	beq	r19,zero,48f4c <__sfvwrite_r+0x308>
   48ed0:	a0800217 	ldw	r2,8(r20)
   48ed4:	e5f9883a 	add	fp,fp,r23
   48ed8:	95e5c83a 	sub	r18,r18,r23
   48edc:	15efc83a 	sub	r23,r2,r23
   48ee0:	a5c00215 	stw	r23,8(r20)
   48ee4:	b83f8426 	beq	r23,zero,48cf8 <__alt_data_end+0xfffec938>
   48ee8:	903fe11e 	bne	r18,zero,48e70 <__alt_data_end+0xfffecab0>
   48eec:	8f000017 	ldw	fp,0(r17)
   48ef0:	8c800117 	ldw	r18,4(r17)
   48ef4:	0011883a 	mov	r8,zero
   48ef8:	8c400204 	addi	r17,r17,8
   48efc:	003fdb06 	br	48e6c <__alt_data_end+0xfffecaac>
   48f00:	180d883a 	mov	r6,r3
   48f04:	e00b883a 	mov	r5,fp
   48f08:	da000115 	stw	r8,4(sp)
   48f0c:	d8c00015 	stw	r3,0(sp)
   48f10:	00491c00 	call	491c0 <memmove>
   48f14:	d8c00017 	ldw	r3,0(sp)
   48f18:	80800017 	ldw	r2,0(r16)
   48f1c:	800b883a 	mov	r5,r16
   48f20:	a809883a 	mov	r4,r21
   48f24:	10c5883a 	add	r2,r2,r3
   48f28:	80800015 	stw	r2,0(r16)
   48f2c:	d8c00015 	stw	r3,0(sp)
   48f30:	00444340 	call	44434 <_fflush_r>
   48f34:	d8c00017 	ldw	r3,0(sp)
   48f38:	da000117 	ldw	r8,4(sp)
   48f3c:	103fc21e 	bne	r2,zero,48e48 <__alt_data_end+0xfffeca88>
   48f40:	182f883a 	mov	r23,r3
   48f44:	9de7c83a 	sub	r19,r19,r23
   48f48:	983fe11e 	bne	r19,zero,48ed0 <__alt_data_end+0xfffecb10>
   48f4c:	800b883a 	mov	r5,r16
   48f50:	a809883a 	mov	r4,r21
   48f54:	00444340 	call	44434 <_fflush_r>
   48f58:	103fbb1e 	bne	r2,zero,48e48 <__alt_data_end+0xfffeca88>
   48f5c:	0011883a 	mov	r8,zero
   48f60:	003fdb06 	br	48ed0 <__alt_data_end+0xfffecb10>
   48f64:	94c0012e 	bgeu	r18,r19,48f6c <__sfvwrite_r+0x328>
   48f68:	9027883a 	mov	r19,r18
   48f6c:	980d883a 	mov	r6,r19
   48f70:	e00b883a 	mov	r5,fp
   48f74:	00491c00 	call	491c0 <memmove>
   48f78:	80800217 	ldw	r2,8(r16)
   48f7c:	80c00017 	ldw	r3,0(r16)
   48f80:	14c5c83a 	sub	r2,r2,r19
   48f84:	1cc7883a 	add	r3,r3,r19
   48f88:	80800215 	stw	r2,8(r16)
   48f8c:	80c00015 	stw	r3,0(r16)
   48f90:	10004326 	beq	r2,zero,490a0 <__sfvwrite_r+0x45c>
   48f94:	9805883a 	mov	r2,r19
   48f98:	003f8306 	br	48da8 <__alt_data_end+0xfffec9e8>
   48f9c:	b00d883a 	mov	r6,r22
   48fa0:	e00b883a 	mov	r5,fp
   48fa4:	da000115 	stw	r8,4(sp)
   48fa8:	00491c00 	call	491c0 <memmove>
   48fac:	80800217 	ldw	r2,8(r16)
   48fb0:	80c00017 	ldw	r3,0(r16)
   48fb4:	da000117 	ldw	r8,4(sp)
   48fb8:	1585c83a 	sub	r2,r2,r22
   48fbc:	1dad883a 	add	r22,r3,r22
   48fc0:	80800215 	stw	r2,8(r16)
   48fc4:	85800015 	stw	r22,0(r16)
   48fc8:	003fbf06 	br	48ec8 <__alt_data_end+0xfffecb08>
   48fcc:	81000017 	ldw	r4,0(r16)
   48fd0:	9027883a 	mov	r19,r18
   48fd4:	902f883a 	mov	r23,r18
   48fd8:	003f6906 	br	48d80 <__alt_data_end+0xfffec9c0>
   48fdc:	900d883a 	mov	r6,r18
   48fe0:	01400284 	movi	r5,10
   48fe4:	e009883a 	mov	r4,fp
   48fe8:	00458d00 	call	458d0 <memchr>
   48fec:	10003e26 	beq	r2,zero,490e8 <__sfvwrite_r+0x4a4>
   48ff0:	10800044 	addi	r2,r2,1
   48ff4:	1727c83a 	sub	r19,r2,fp
   48ff8:	02000044 	movi	r8,1
   48ffc:	003f9d06 	br	48e74 <__alt_data_end+0xfffecab4>
   49000:	80800517 	ldw	r2,20(r16)
   49004:	81400417 	ldw	r5,16(r16)
   49008:	81c00017 	ldw	r7,0(r16)
   4900c:	10a7883a 	add	r19,r2,r2
   49010:	9885883a 	add	r2,r19,r2
   49014:	1026d7fa 	srli	r19,r2,31
   49018:	396dc83a 	sub	r22,r7,r5
   4901c:	b1000044 	addi	r4,r22,1
   49020:	9885883a 	add	r2,r19,r2
   49024:	1027d07a 	srai	r19,r2,1
   49028:	2485883a 	add	r2,r4,r18
   4902c:	980d883a 	mov	r6,r19
   49030:	9880022e 	bgeu	r19,r2,4903c <__sfvwrite_r+0x3f8>
   49034:	1027883a 	mov	r19,r2
   49038:	100d883a 	mov	r6,r2
   4903c:	18c1000c 	andi	r3,r3,1024
   49040:	18001c26 	beq	r3,zero,490b4 <__sfvwrite_r+0x470>
   49044:	300b883a 	mov	r5,r6
   49048:	a809883a 	mov	r4,r21
   4904c:	00450c40 	call	450c4 <_malloc_r>
   49050:	102f883a 	mov	r23,r2
   49054:	10002926 	beq	r2,zero,490fc <__sfvwrite_r+0x4b8>
   49058:	81400417 	ldw	r5,16(r16)
   4905c:	b00d883a 	mov	r6,r22
   49060:	1009883a 	mov	r4,r2
   49064:	00459b40 	call	459b4 <memcpy>
   49068:	8080030b 	ldhu	r2,12(r16)
   4906c:	00fedfc4 	movi	r3,-1153
   49070:	10c4703a 	and	r2,r2,r3
   49074:	10802014 	ori	r2,r2,128
   49078:	8080030d 	sth	r2,12(r16)
   4907c:	bd89883a 	add	r4,r23,r22
   49080:	9d8fc83a 	sub	r7,r19,r22
   49084:	85c00415 	stw	r23,16(r16)
   49088:	84c00515 	stw	r19,20(r16)
   4908c:	81000015 	stw	r4,0(r16)
   49090:	9027883a 	mov	r19,r18
   49094:	81c00215 	stw	r7,8(r16)
   49098:	902f883a 	mov	r23,r18
   4909c:	003f3806 	br	48d80 <__alt_data_end+0xfffec9c0>
   490a0:	800b883a 	mov	r5,r16
   490a4:	a809883a 	mov	r4,r21
   490a8:	00444340 	call	44434 <_fflush_r>
   490ac:	103fb926 	beq	r2,zero,48f94 <__alt_data_end+0xfffecbd4>
   490b0:	003f6506 	br	48e48 <__alt_data_end+0xfffeca88>
   490b4:	a809883a 	mov	r4,r21
   490b8:	004937c0 	call	4937c <_realloc_r>
   490bc:	102f883a 	mov	r23,r2
   490c0:	103fee1e 	bne	r2,zero,4907c <__alt_data_end+0xfffeccbc>
   490c4:	81400417 	ldw	r5,16(r16)
   490c8:	a809883a 	mov	r4,r21
   490cc:	00449940 	call	44994 <_free_r>
   490d0:	8080030b 	ldhu	r2,12(r16)
   490d4:	00ffdfc4 	movi	r3,-129
   490d8:	1884703a 	and	r2,r3,r2
   490dc:	00c00304 	movi	r3,12
   490e0:	a8c00015 	stw	r3,0(r21)
   490e4:	003f5906 	br	48e4c <__alt_data_end+0xfffeca8c>
   490e8:	94c00044 	addi	r19,r18,1
   490ec:	02000044 	movi	r8,1
   490f0:	003f6006 	br	48e74 <__alt_data_end+0xfffecab4>
   490f4:	00bfffc4 	movi	r2,-1
   490f8:	003f0006 	br	48cfc <__alt_data_end+0xfffec93c>
   490fc:	00800304 	movi	r2,12
   49100:	a8800015 	stw	r2,0(r21)
   49104:	8080030b 	ldhu	r2,12(r16)
   49108:	003f5006 	br	48e4c <__alt_data_end+0xfffeca8c>

0004910c <_isatty_r>:
   4910c:	defffd04 	addi	sp,sp,-12
   49110:	dc000015 	stw	r16,0(sp)
   49114:	04000174 	movhi	r16,5
   49118:	dc400115 	stw	r17,4(sp)
   4911c:	840d1b04 	addi	r16,r16,13420
   49120:	2023883a 	mov	r17,r4
   49124:	2809883a 	mov	r4,r5
   49128:	dfc00215 	stw	ra,8(sp)
   4912c:	80000015 	stw	zero,0(r16)
   49130:	004d4d00 	call	4d4d0 <isatty>
   49134:	00ffffc4 	movi	r3,-1
   49138:	10c00526 	beq	r2,r3,49150 <_isatty_r+0x44>
   4913c:	dfc00217 	ldw	ra,8(sp)
   49140:	dc400117 	ldw	r17,4(sp)
   49144:	dc000017 	ldw	r16,0(sp)
   49148:	dec00304 	addi	sp,sp,12
   4914c:	f800283a 	ret
   49150:	80c00017 	ldw	r3,0(r16)
   49154:	183ff926 	beq	r3,zero,4913c <__alt_data_end+0xfffecd7c>
   49158:	88c00015 	stw	r3,0(r17)
   4915c:	003ff706 	br	4913c <__alt_data_end+0xfffecd7c>

00049160 <_lseek_r>:
   49160:	defffd04 	addi	sp,sp,-12
   49164:	2805883a 	mov	r2,r5
   49168:	dc000015 	stw	r16,0(sp)
   4916c:	04000174 	movhi	r16,5
   49170:	dc400115 	stw	r17,4(sp)
   49174:	300b883a 	mov	r5,r6
   49178:	840d1b04 	addi	r16,r16,13420
   4917c:	2023883a 	mov	r17,r4
   49180:	380d883a 	mov	r6,r7
   49184:	1009883a 	mov	r4,r2
   49188:	dfc00215 	stw	ra,8(sp)
   4918c:	80000015 	stw	zero,0(r16)
   49190:	004d6a40 	call	4d6a4 <lseek>
   49194:	00ffffc4 	movi	r3,-1
   49198:	10c00526 	beq	r2,r3,491b0 <_lseek_r+0x50>
   4919c:	dfc00217 	ldw	ra,8(sp)
   491a0:	dc400117 	ldw	r17,4(sp)
   491a4:	dc000017 	ldw	r16,0(sp)
   491a8:	dec00304 	addi	sp,sp,12
   491ac:	f800283a 	ret
   491b0:	80c00017 	ldw	r3,0(r16)
   491b4:	183ff926 	beq	r3,zero,4919c <__alt_data_end+0xfffecddc>
   491b8:	88c00015 	stw	r3,0(r17)
   491bc:	003ff706 	br	4919c <__alt_data_end+0xfffecddc>

000491c0 <memmove>:
   491c0:	2005883a 	mov	r2,r4
   491c4:	29000b2e 	bgeu	r5,r4,491f4 <memmove+0x34>
   491c8:	298f883a 	add	r7,r5,r6
   491cc:	21c0092e 	bgeu	r4,r7,491f4 <memmove+0x34>
   491d0:	2187883a 	add	r3,r4,r6
   491d4:	198bc83a 	sub	r5,r3,r6
   491d8:	30004826 	beq	r6,zero,492fc <memmove+0x13c>
   491dc:	39ffffc4 	addi	r7,r7,-1
   491e0:	39000003 	ldbu	r4,0(r7)
   491e4:	18ffffc4 	addi	r3,r3,-1
   491e8:	19000005 	stb	r4,0(r3)
   491ec:	28fffb1e 	bne	r5,r3,491dc <__alt_data_end+0xfffece1c>
   491f0:	f800283a 	ret
   491f4:	00c003c4 	movi	r3,15
   491f8:	1980412e 	bgeu	r3,r6,49300 <memmove+0x140>
   491fc:	2886b03a 	or	r3,r5,r2
   49200:	18c000cc 	andi	r3,r3,3
   49204:	1800401e 	bne	r3,zero,49308 <memmove+0x148>
   49208:	33fffc04 	addi	r15,r6,-16
   4920c:	781ed13a 	srli	r15,r15,4
   49210:	28c00104 	addi	r3,r5,4
   49214:	13400104 	addi	r13,r2,4
   49218:	781c913a 	slli	r14,r15,4
   4921c:	2b000204 	addi	r12,r5,8
   49220:	12c00204 	addi	r11,r2,8
   49224:	73800504 	addi	r14,r14,20
   49228:	2a800304 	addi	r10,r5,12
   4922c:	12400304 	addi	r9,r2,12
   49230:	2b9d883a 	add	r14,r5,r14
   49234:	2811883a 	mov	r8,r5
   49238:	100f883a 	mov	r7,r2
   4923c:	41000017 	ldw	r4,0(r8)
   49240:	39c00404 	addi	r7,r7,16
   49244:	18c00404 	addi	r3,r3,16
   49248:	393ffc15 	stw	r4,-16(r7)
   4924c:	193ffc17 	ldw	r4,-16(r3)
   49250:	6b400404 	addi	r13,r13,16
   49254:	5ac00404 	addi	r11,r11,16
   49258:	693ffc15 	stw	r4,-16(r13)
   4925c:	61000017 	ldw	r4,0(r12)
   49260:	4a400404 	addi	r9,r9,16
   49264:	42000404 	addi	r8,r8,16
   49268:	593ffc15 	stw	r4,-16(r11)
   4926c:	51000017 	ldw	r4,0(r10)
   49270:	63000404 	addi	r12,r12,16
   49274:	52800404 	addi	r10,r10,16
   49278:	493ffc15 	stw	r4,-16(r9)
   4927c:	1bbfef1e 	bne	r3,r14,4923c <__alt_data_end+0xfffece7c>
   49280:	79000044 	addi	r4,r15,1
   49284:	2008913a 	slli	r4,r4,4
   49288:	328003cc 	andi	r10,r6,15
   4928c:	02c000c4 	movi	r11,3
   49290:	1107883a 	add	r3,r2,r4
   49294:	290b883a 	add	r5,r5,r4
   49298:	5a801e2e 	bgeu	r11,r10,49314 <memmove+0x154>
   4929c:	1813883a 	mov	r9,r3
   492a0:	2811883a 	mov	r8,r5
   492a4:	500f883a 	mov	r7,r10
   492a8:	41000017 	ldw	r4,0(r8)
   492ac:	4a400104 	addi	r9,r9,4
   492b0:	39ffff04 	addi	r7,r7,-4
   492b4:	493fff15 	stw	r4,-4(r9)
   492b8:	42000104 	addi	r8,r8,4
   492bc:	59fffa36 	bltu	r11,r7,492a8 <__alt_data_end+0xfffecee8>
   492c0:	513fff04 	addi	r4,r10,-4
   492c4:	2008d0ba 	srli	r4,r4,2
   492c8:	318000cc 	andi	r6,r6,3
   492cc:	21000044 	addi	r4,r4,1
   492d0:	2109883a 	add	r4,r4,r4
   492d4:	2109883a 	add	r4,r4,r4
   492d8:	1907883a 	add	r3,r3,r4
   492dc:	290b883a 	add	r5,r5,r4
   492e0:	30000b26 	beq	r6,zero,49310 <memmove+0x150>
   492e4:	198d883a 	add	r6,r3,r6
   492e8:	29c00003 	ldbu	r7,0(r5)
   492ec:	18c00044 	addi	r3,r3,1
   492f0:	29400044 	addi	r5,r5,1
   492f4:	19ffffc5 	stb	r7,-1(r3)
   492f8:	19bffb1e 	bne	r3,r6,492e8 <__alt_data_end+0xfffecf28>
   492fc:	f800283a 	ret
   49300:	1007883a 	mov	r3,r2
   49304:	003ff606 	br	492e0 <__alt_data_end+0xfffecf20>
   49308:	1007883a 	mov	r3,r2
   4930c:	003ff506 	br	492e4 <__alt_data_end+0xfffecf24>
   49310:	f800283a 	ret
   49314:	500d883a 	mov	r6,r10
   49318:	003ff106 	br	492e0 <__alt_data_end+0xfffecf20>

0004931c <_read_r>:
   4931c:	defffd04 	addi	sp,sp,-12
   49320:	2805883a 	mov	r2,r5
   49324:	dc000015 	stw	r16,0(sp)
   49328:	04000174 	movhi	r16,5
   4932c:	dc400115 	stw	r17,4(sp)
   49330:	300b883a 	mov	r5,r6
   49334:	840d1b04 	addi	r16,r16,13420
   49338:	2023883a 	mov	r17,r4
   4933c:	380d883a 	mov	r6,r7
   49340:	1009883a 	mov	r4,r2
   49344:	dfc00215 	stw	ra,8(sp)
   49348:	80000015 	stw	zero,0(r16)
   4934c:	004d8800 	call	4d880 <read>
   49350:	00ffffc4 	movi	r3,-1
   49354:	10c00526 	beq	r2,r3,4936c <_read_r+0x50>
   49358:	dfc00217 	ldw	ra,8(sp)
   4935c:	dc400117 	ldw	r17,4(sp)
   49360:	dc000017 	ldw	r16,0(sp)
   49364:	dec00304 	addi	sp,sp,12
   49368:	f800283a 	ret
   4936c:	80c00017 	ldw	r3,0(r16)
   49370:	183ff926 	beq	r3,zero,49358 <__alt_data_end+0xfffecf98>
   49374:	88c00015 	stw	r3,0(r17)
   49378:	003ff706 	br	49358 <__alt_data_end+0xfffecf98>

0004937c <_realloc_r>:
   4937c:	defff604 	addi	sp,sp,-40
   49380:	dc800215 	stw	r18,8(sp)
   49384:	dfc00915 	stw	ra,36(sp)
   49388:	df000815 	stw	fp,32(sp)
   4938c:	ddc00715 	stw	r23,28(sp)
   49390:	dd800615 	stw	r22,24(sp)
   49394:	dd400515 	stw	r21,20(sp)
   49398:	dd000415 	stw	r20,16(sp)
   4939c:	dcc00315 	stw	r19,12(sp)
   493a0:	dc400115 	stw	r17,4(sp)
   493a4:	dc000015 	stw	r16,0(sp)
   493a8:	3025883a 	mov	r18,r6
   493ac:	2800b726 	beq	r5,zero,4968c <_realloc_r+0x310>
   493b0:	282b883a 	mov	r21,r5
   493b4:	2029883a 	mov	r20,r4
   493b8:	004d7fc0 	call	4d7fc <__malloc_lock>
   493bc:	a8bfff17 	ldw	r2,-4(r21)
   493c0:	043fff04 	movi	r16,-4
   493c4:	90c002c4 	addi	r3,r18,11
   493c8:	01000584 	movi	r4,22
   493cc:	acfffe04 	addi	r19,r21,-8
   493d0:	1420703a 	and	r16,r2,r16
   493d4:	20c0332e 	bgeu	r4,r3,494a4 <_realloc_r+0x128>
   493d8:	047ffe04 	movi	r17,-8
   493dc:	1c62703a 	and	r17,r3,r17
   493e0:	8807883a 	mov	r3,r17
   493e4:	88005816 	blt	r17,zero,49548 <_realloc_r+0x1cc>
   493e8:	8c805736 	bltu	r17,r18,49548 <_realloc_r+0x1cc>
   493ec:	80c0300e 	bge	r16,r3,494b0 <_realloc_r+0x134>
   493f0:	07000174 	movhi	fp,5
   493f4:	e7007304 	addi	fp,fp,460
   493f8:	e1c00217 	ldw	r7,8(fp)
   493fc:	9c09883a 	add	r4,r19,r16
   49400:	22000117 	ldw	r8,4(r4)
   49404:	21c06326 	beq	r4,r7,49594 <_realloc_r+0x218>
   49408:	017fff84 	movi	r5,-2
   4940c:	414a703a 	and	r5,r8,r5
   49410:	214b883a 	add	r5,r4,r5
   49414:	29800117 	ldw	r6,4(r5)
   49418:	3180004c 	andi	r6,r6,1
   4941c:	30003f26 	beq	r6,zero,4951c <_realloc_r+0x1a0>
   49420:	1080004c 	andi	r2,r2,1
   49424:	10008326 	beq	r2,zero,49634 <_realloc_r+0x2b8>
   49428:	900b883a 	mov	r5,r18
   4942c:	a009883a 	mov	r4,r20
   49430:	00450c40 	call	450c4 <_malloc_r>
   49434:	1025883a 	mov	r18,r2
   49438:	10011e26 	beq	r2,zero,498b4 <_realloc_r+0x538>
   4943c:	a93fff17 	ldw	r4,-4(r21)
   49440:	10fffe04 	addi	r3,r2,-8
   49444:	00bfff84 	movi	r2,-2
   49448:	2084703a 	and	r2,r4,r2
   4944c:	9885883a 	add	r2,r19,r2
   49450:	1880ee26 	beq	r3,r2,4980c <_realloc_r+0x490>
   49454:	81bfff04 	addi	r6,r16,-4
   49458:	00800904 	movi	r2,36
   4945c:	1180b836 	bltu	r2,r6,49740 <_realloc_r+0x3c4>
   49460:	00c004c4 	movi	r3,19
   49464:	19809636 	bltu	r3,r6,496c0 <_realloc_r+0x344>
   49468:	9005883a 	mov	r2,r18
   4946c:	a807883a 	mov	r3,r21
   49470:	19000017 	ldw	r4,0(r3)
   49474:	11000015 	stw	r4,0(r2)
   49478:	19000117 	ldw	r4,4(r3)
   4947c:	11000115 	stw	r4,4(r2)
   49480:	18c00217 	ldw	r3,8(r3)
   49484:	10c00215 	stw	r3,8(r2)
   49488:	a80b883a 	mov	r5,r21
   4948c:	a009883a 	mov	r4,r20
   49490:	00449940 	call	44994 <_free_r>
   49494:	a009883a 	mov	r4,r20
   49498:	004d8200 	call	4d820 <__malloc_unlock>
   4949c:	9005883a 	mov	r2,r18
   494a0:	00001206 	br	494ec <_realloc_r+0x170>
   494a4:	00c00404 	movi	r3,16
   494a8:	1823883a 	mov	r17,r3
   494ac:	003fce06 	br	493e8 <__alt_data_end+0xfffed028>
   494b0:	a825883a 	mov	r18,r21
   494b4:	8445c83a 	sub	r2,r16,r17
   494b8:	00c003c4 	movi	r3,15
   494bc:	18802636 	bltu	r3,r2,49558 <_realloc_r+0x1dc>
   494c0:	99800117 	ldw	r6,4(r19)
   494c4:	9c07883a 	add	r3,r19,r16
   494c8:	3180004c 	andi	r6,r6,1
   494cc:	3420b03a 	or	r16,r6,r16
   494d0:	9c000115 	stw	r16,4(r19)
   494d4:	18800117 	ldw	r2,4(r3)
   494d8:	10800054 	ori	r2,r2,1
   494dc:	18800115 	stw	r2,4(r3)
   494e0:	a009883a 	mov	r4,r20
   494e4:	004d8200 	call	4d820 <__malloc_unlock>
   494e8:	9005883a 	mov	r2,r18
   494ec:	dfc00917 	ldw	ra,36(sp)
   494f0:	df000817 	ldw	fp,32(sp)
   494f4:	ddc00717 	ldw	r23,28(sp)
   494f8:	dd800617 	ldw	r22,24(sp)
   494fc:	dd400517 	ldw	r21,20(sp)
   49500:	dd000417 	ldw	r20,16(sp)
   49504:	dcc00317 	ldw	r19,12(sp)
   49508:	dc800217 	ldw	r18,8(sp)
   4950c:	dc400117 	ldw	r17,4(sp)
   49510:	dc000017 	ldw	r16,0(sp)
   49514:	dec00a04 	addi	sp,sp,40
   49518:	f800283a 	ret
   4951c:	017fff04 	movi	r5,-4
   49520:	414a703a 	and	r5,r8,r5
   49524:	814d883a 	add	r6,r16,r5
   49528:	30c01f16 	blt	r6,r3,495a8 <_realloc_r+0x22c>
   4952c:	20800317 	ldw	r2,12(r4)
   49530:	20c00217 	ldw	r3,8(r4)
   49534:	a825883a 	mov	r18,r21
   49538:	3021883a 	mov	r16,r6
   4953c:	18800315 	stw	r2,12(r3)
   49540:	10c00215 	stw	r3,8(r2)
   49544:	003fdb06 	br	494b4 <__alt_data_end+0xfffed0f4>
   49548:	00800304 	movi	r2,12
   4954c:	a0800015 	stw	r2,0(r20)
   49550:	0005883a 	mov	r2,zero
   49554:	003fe506 	br	494ec <__alt_data_end+0xfffed12c>
   49558:	98c00117 	ldw	r3,4(r19)
   4955c:	9c4b883a 	add	r5,r19,r17
   49560:	11000054 	ori	r4,r2,1
   49564:	18c0004c 	andi	r3,r3,1
   49568:	1c62b03a 	or	r17,r3,r17
   4956c:	9c400115 	stw	r17,4(r19)
   49570:	29000115 	stw	r4,4(r5)
   49574:	2885883a 	add	r2,r5,r2
   49578:	10c00117 	ldw	r3,4(r2)
   4957c:	29400204 	addi	r5,r5,8
   49580:	a009883a 	mov	r4,r20
   49584:	18c00054 	ori	r3,r3,1
   49588:	10c00115 	stw	r3,4(r2)
   4958c:	00449940 	call	44994 <_free_r>
   49590:	003fd306 	br	494e0 <__alt_data_end+0xfffed120>
   49594:	017fff04 	movi	r5,-4
   49598:	414a703a 	and	r5,r8,r5
   4959c:	89800404 	addi	r6,r17,16
   495a0:	8151883a 	add	r8,r16,r5
   495a4:	4180590e 	bge	r8,r6,4970c <_realloc_r+0x390>
   495a8:	1080004c 	andi	r2,r2,1
   495ac:	103f9e1e 	bne	r2,zero,49428 <__alt_data_end+0xfffed068>
   495b0:	adbffe17 	ldw	r22,-8(r21)
   495b4:	00bfff04 	movi	r2,-4
   495b8:	9dadc83a 	sub	r22,r19,r22
   495bc:	b1800117 	ldw	r6,4(r22)
   495c0:	3084703a 	and	r2,r6,r2
   495c4:	20002026 	beq	r4,zero,49648 <_realloc_r+0x2cc>
   495c8:	80af883a 	add	r23,r16,r2
   495cc:	b96f883a 	add	r23,r23,r5
   495d0:	21c05f26 	beq	r4,r7,49750 <_realloc_r+0x3d4>
   495d4:	b8c01c16 	blt	r23,r3,49648 <_realloc_r+0x2cc>
   495d8:	20800317 	ldw	r2,12(r4)
   495dc:	20c00217 	ldw	r3,8(r4)
   495e0:	81bfff04 	addi	r6,r16,-4
   495e4:	01000904 	movi	r4,36
   495e8:	18800315 	stw	r2,12(r3)
   495ec:	10c00215 	stw	r3,8(r2)
   495f0:	b0c00217 	ldw	r3,8(r22)
   495f4:	b0800317 	ldw	r2,12(r22)
   495f8:	b4800204 	addi	r18,r22,8
   495fc:	18800315 	stw	r2,12(r3)
   49600:	10c00215 	stw	r3,8(r2)
   49604:	21801b36 	bltu	r4,r6,49674 <_realloc_r+0x2f8>
   49608:	008004c4 	movi	r2,19
   4960c:	1180352e 	bgeu	r2,r6,496e4 <_realloc_r+0x368>
   49610:	a8800017 	ldw	r2,0(r21)
   49614:	b0800215 	stw	r2,8(r22)
   49618:	a8800117 	ldw	r2,4(r21)
   4961c:	b0800315 	stw	r2,12(r22)
   49620:	008006c4 	movi	r2,27
   49624:	11807f36 	bltu	r2,r6,49824 <_realloc_r+0x4a8>
   49628:	b0800404 	addi	r2,r22,16
   4962c:	ad400204 	addi	r21,r21,8
   49630:	00002d06 	br	496e8 <_realloc_r+0x36c>
   49634:	adbffe17 	ldw	r22,-8(r21)
   49638:	00bfff04 	movi	r2,-4
   4963c:	9dadc83a 	sub	r22,r19,r22
   49640:	b1000117 	ldw	r4,4(r22)
   49644:	2084703a 	and	r2,r4,r2
   49648:	b03f7726 	beq	r22,zero,49428 <__alt_data_end+0xfffed068>
   4964c:	80af883a 	add	r23,r16,r2
   49650:	b8ff7516 	blt	r23,r3,49428 <__alt_data_end+0xfffed068>
   49654:	b0800317 	ldw	r2,12(r22)
   49658:	b0c00217 	ldw	r3,8(r22)
   4965c:	81bfff04 	addi	r6,r16,-4
   49660:	01000904 	movi	r4,36
   49664:	18800315 	stw	r2,12(r3)
   49668:	10c00215 	stw	r3,8(r2)
   4966c:	b4800204 	addi	r18,r22,8
   49670:	21bfe52e 	bgeu	r4,r6,49608 <__alt_data_end+0xfffed248>
   49674:	a80b883a 	mov	r5,r21
   49678:	9009883a 	mov	r4,r18
   4967c:	00491c00 	call	491c0 <memmove>
   49680:	b821883a 	mov	r16,r23
   49684:	b027883a 	mov	r19,r22
   49688:	003f8a06 	br	494b4 <__alt_data_end+0xfffed0f4>
   4968c:	300b883a 	mov	r5,r6
   49690:	dfc00917 	ldw	ra,36(sp)
   49694:	df000817 	ldw	fp,32(sp)
   49698:	ddc00717 	ldw	r23,28(sp)
   4969c:	dd800617 	ldw	r22,24(sp)
   496a0:	dd400517 	ldw	r21,20(sp)
   496a4:	dd000417 	ldw	r20,16(sp)
   496a8:	dcc00317 	ldw	r19,12(sp)
   496ac:	dc800217 	ldw	r18,8(sp)
   496b0:	dc400117 	ldw	r17,4(sp)
   496b4:	dc000017 	ldw	r16,0(sp)
   496b8:	dec00a04 	addi	sp,sp,40
   496bc:	00450c41 	jmpi	450c4 <_malloc_r>
   496c0:	a8c00017 	ldw	r3,0(r21)
   496c4:	90c00015 	stw	r3,0(r18)
   496c8:	a8c00117 	ldw	r3,4(r21)
   496cc:	90c00115 	stw	r3,4(r18)
   496d0:	00c006c4 	movi	r3,27
   496d4:	19804536 	bltu	r3,r6,497ec <_realloc_r+0x470>
   496d8:	90800204 	addi	r2,r18,8
   496dc:	a8c00204 	addi	r3,r21,8
   496e0:	003f6306 	br	49470 <__alt_data_end+0xfffed0b0>
   496e4:	9005883a 	mov	r2,r18
   496e8:	a8c00017 	ldw	r3,0(r21)
   496ec:	b821883a 	mov	r16,r23
   496f0:	b027883a 	mov	r19,r22
   496f4:	10c00015 	stw	r3,0(r2)
   496f8:	a8c00117 	ldw	r3,4(r21)
   496fc:	10c00115 	stw	r3,4(r2)
   49700:	a8c00217 	ldw	r3,8(r21)
   49704:	10c00215 	stw	r3,8(r2)
   49708:	003f6a06 	br	494b4 <__alt_data_end+0xfffed0f4>
   4970c:	9c67883a 	add	r19,r19,r17
   49710:	4445c83a 	sub	r2,r8,r17
   49714:	e4c00215 	stw	r19,8(fp)
   49718:	10800054 	ori	r2,r2,1
   4971c:	98800115 	stw	r2,4(r19)
   49720:	a8bfff17 	ldw	r2,-4(r21)
   49724:	a009883a 	mov	r4,r20
   49728:	1080004c 	andi	r2,r2,1
   4972c:	1462b03a 	or	r17,r2,r17
   49730:	ac7fff15 	stw	r17,-4(r21)
   49734:	004d8200 	call	4d820 <__malloc_unlock>
   49738:	a805883a 	mov	r2,r21
   4973c:	003f6b06 	br	494ec <__alt_data_end+0xfffed12c>
   49740:	a80b883a 	mov	r5,r21
   49744:	9009883a 	mov	r4,r18
   49748:	00491c00 	call	491c0 <memmove>
   4974c:	003f4e06 	br	49488 <__alt_data_end+0xfffed0c8>
   49750:	89000404 	addi	r4,r17,16
   49754:	b93fbc16 	blt	r23,r4,49648 <__alt_data_end+0xfffed288>
   49758:	b0800317 	ldw	r2,12(r22)
   4975c:	b0c00217 	ldw	r3,8(r22)
   49760:	81bfff04 	addi	r6,r16,-4
   49764:	01000904 	movi	r4,36
   49768:	18800315 	stw	r2,12(r3)
   4976c:	10c00215 	stw	r3,8(r2)
   49770:	b4800204 	addi	r18,r22,8
   49774:	21804336 	bltu	r4,r6,49884 <_realloc_r+0x508>
   49778:	008004c4 	movi	r2,19
   4977c:	11803f2e 	bgeu	r2,r6,4987c <_realloc_r+0x500>
   49780:	a8800017 	ldw	r2,0(r21)
   49784:	b0800215 	stw	r2,8(r22)
   49788:	a8800117 	ldw	r2,4(r21)
   4978c:	b0800315 	stw	r2,12(r22)
   49790:	008006c4 	movi	r2,27
   49794:	11803f36 	bltu	r2,r6,49894 <_realloc_r+0x518>
   49798:	b0800404 	addi	r2,r22,16
   4979c:	ad400204 	addi	r21,r21,8
   497a0:	a8c00017 	ldw	r3,0(r21)
   497a4:	10c00015 	stw	r3,0(r2)
   497a8:	a8c00117 	ldw	r3,4(r21)
   497ac:	10c00115 	stw	r3,4(r2)
   497b0:	a8c00217 	ldw	r3,8(r21)
   497b4:	10c00215 	stw	r3,8(r2)
   497b8:	b447883a 	add	r3,r22,r17
   497bc:	bc45c83a 	sub	r2,r23,r17
   497c0:	e0c00215 	stw	r3,8(fp)
   497c4:	10800054 	ori	r2,r2,1
   497c8:	18800115 	stw	r2,4(r3)
   497cc:	b0800117 	ldw	r2,4(r22)
   497d0:	a009883a 	mov	r4,r20
   497d4:	1080004c 	andi	r2,r2,1
   497d8:	1462b03a 	or	r17,r2,r17
   497dc:	b4400115 	stw	r17,4(r22)
   497e0:	004d8200 	call	4d820 <__malloc_unlock>
   497e4:	9005883a 	mov	r2,r18
   497e8:	003f4006 	br	494ec <__alt_data_end+0xfffed12c>
   497ec:	a8c00217 	ldw	r3,8(r21)
   497f0:	90c00215 	stw	r3,8(r18)
   497f4:	a8c00317 	ldw	r3,12(r21)
   497f8:	90c00315 	stw	r3,12(r18)
   497fc:	30801126 	beq	r6,r2,49844 <_realloc_r+0x4c8>
   49800:	90800404 	addi	r2,r18,16
   49804:	a8c00404 	addi	r3,r21,16
   49808:	003f1906 	br	49470 <__alt_data_end+0xfffed0b0>
   4980c:	90ffff17 	ldw	r3,-4(r18)
   49810:	00bfff04 	movi	r2,-4
   49814:	a825883a 	mov	r18,r21
   49818:	1884703a 	and	r2,r3,r2
   4981c:	80a1883a 	add	r16,r16,r2
   49820:	003f2406 	br	494b4 <__alt_data_end+0xfffed0f4>
   49824:	a8800217 	ldw	r2,8(r21)
   49828:	b0800415 	stw	r2,16(r22)
   4982c:	a8800317 	ldw	r2,12(r21)
   49830:	b0800515 	stw	r2,20(r22)
   49834:	31000a26 	beq	r6,r4,49860 <_realloc_r+0x4e4>
   49838:	b0800604 	addi	r2,r22,24
   4983c:	ad400404 	addi	r21,r21,16
   49840:	003fa906 	br	496e8 <__alt_data_end+0xfffed328>
   49844:	a9000417 	ldw	r4,16(r21)
   49848:	90800604 	addi	r2,r18,24
   4984c:	a8c00604 	addi	r3,r21,24
   49850:	91000415 	stw	r4,16(r18)
   49854:	a9000517 	ldw	r4,20(r21)
   49858:	91000515 	stw	r4,20(r18)
   4985c:	003f0406 	br	49470 <__alt_data_end+0xfffed0b0>
   49860:	a8c00417 	ldw	r3,16(r21)
   49864:	ad400604 	addi	r21,r21,24
   49868:	b0800804 	addi	r2,r22,32
   4986c:	b0c00615 	stw	r3,24(r22)
   49870:	a8ffff17 	ldw	r3,-4(r21)
   49874:	b0c00715 	stw	r3,28(r22)
   49878:	003f9b06 	br	496e8 <__alt_data_end+0xfffed328>
   4987c:	9005883a 	mov	r2,r18
   49880:	003fc706 	br	497a0 <__alt_data_end+0xfffed3e0>
   49884:	a80b883a 	mov	r5,r21
   49888:	9009883a 	mov	r4,r18
   4988c:	00491c00 	call	491c0 <memmove>
   49890:	003fc906 	br	497b8 <__alt_data_end+0xfffed3f8>
   49894:	a8800217 	ldw	r2,8(r21)
   49898:	b0800415 	stw	r2,16(r22)
   4989c:	a8800317 	ldw	r2,12(r21)
   498a0:	b0800515 	stw	r2,20(r22)
   498a4:	31000726 	beq	r6,r4,498c4 <_realloc_r+0x548>
   498a8:	b0800604 	addi	r2,r22,24
   498ac:	ad400404 	addi	r21,r21,16
   498b0:	003fbb06 	br	497a0 <__alt_data_end+0xfffed3e0>
   498b4:	a009883a 	mov	r4,r20
   498b8:	004d8200 	call	4d820 <__malloc_unlock>
   498bc:	0005883a 	mov	r2,zero
   498c0:	003f0a06 	br	494ec <__alt_data_end+0xfffed12c>
   498c4:	a8c00417 	ldw	r3,16(r21)
   498c8:	ad400604 	addi	r21,r21,24
   498cc:	b0800804 	addi	r2,r22,32
   498d0:	b0c00615 	stw	r3,24(r22)
   498d4:	a8ffff17 	ldw	r3,-4(r21)
   498d8:	b0c00715 	stw	r3,28(r22)
   498dc:	003fb006 	br	497a0 <__alt_data_end+0xfffed3e0>

000498e0 <__swbuf_r>:
   498e0:	defffb04 	addi	sp,sp,-20
   498e4:	dcc00315 	stw	r19,12(sp)
   498e8:	dc800215 	stw	r18,8(sp)
   498ec:	dc000015 	stw	r16,0(sp)
   498f0:	dfc00415 	stw	ra,16(sp)
   498f4:	dc400115 	stw	r17,4(sp)
   498f8:	2025883a 	mov	r18,r4
   498fc:	2827883a 	mov	r19,r5
   49900:	3021883a 	mov	r16,r6
   49904:	20000226 	beq	r4,zero,49910 <__swbuf_r+0x30>
   49908:	20800e17 	ldw	r2,56(r4)
   4990c:	10004226 	beq	r2,zero,49a18 <__swbuf_r+0x138>
   49910:	80800617 	ldw	r2,24(r16)
   49914:	8100030b 	ldhu	r4,12(r16)
   49918:	80800215 	stw	r2,8(r16)
   4991c:	2080020c 	andi	r2,r4,8
   49920:	10003626 	beq	r2,zero,499fc <__swbuf_r+0x11c>
   49924:	80c00417 	ldw	r3,16(r16)
   49928:	18003426 	beq	r3,zero,499fc <__swbuf_r+0x11c>
   4992c:	2088000c 	andi	r2,r4,8192
   49930:	9c403fcc 	andi	r17,r19,255
   49934:	10001a26 	beq	r2,zero,499a0 <__swbuf_r+0xc0>
   49938:	80800017 	ldw	r2,0(r16)
   4993c:	81000517 	ldw	r4,20(r16)
   49940:	10c7c83a 	sub	r3,r2,r3
   49944:	1900200e 	bge	r3,r4,499c8 <__swbuf_r+0xe8>
   49948:	18c00044 	addi	r3,r3,1
   4994c:	81000217 	ldw	r4,8(r16)
   49950:	11400044 	addi	r5,r2,1
   49954:	81400015 	stw	r5,0(r16)
   49958:	213fffc4 	addi	r4,r4,-1
   4995c:	81000215 	stw	r4,8(r16)
   49960:	14c00005 	stb	r19,0(r2)
   49964:	80800517 	ldw	r2,20(r16)
   49968:	10c01e26 	beq	r2,r3,499e4 <__swbuf_r+0x104>
   4996c:	8080030b 	ldhu	r2,12(r16)
   49970:	1080004c 	andi	r2,r2,1
   49974:	10000226 	beq	r2,zero,49980 <__swbuf_r+0xa0>
   49978:	00800284 	movi	r2,10
   4997c:	88801926 	beq	r17,r2,499e4 <__swbuf_r+0x104>
   49980:	8805883a 	mov	r2,r17
   49984:	dfc00417 	ldw	ra,16(sp)
   49988:	dcc00317 	ldw	r19,12(sp)
   4998c:	dc800217 	ldw	r18,8(sp)
   49990:	dc400117 	ldw	r17,4(sp)
   49994:	dc000017 	ldw	r16,0(sp)
   49998:	dec00504 	addi	sp,sp,20
   4999c:	f800283a 	ret
   499a0:	81401917 	ldw	r5,100(r16)
   499a4:	00b7ffc4 	movi	r2,-8193
   499a8:	21080014 	ori	r4,r4,8192
   499ac:	2884703a 	and	r2,r5,r2
   499b0:	80801915 	stw	r2,100(r16)
   499b4:	80800017 	ldw	r2,0(r16)
   499b8:	8100030d 	sth	r4,12(r16)
   499bc:	81000517 	ldw	r4,20(r16)
   499c0:	10c7c83a 	sub	r3,r2,r3
   499c4:	193fe016 	blt	r3,r4,49948 <__alt_data_end+0xfffed588>
   499c8:	800b883a 	mov	r5,r16
   499cc:	9009883a 	mov	r4,r18
   499d0:	00444340 	call	44434 <_fflush_r>
   499d4:	1000071e 	bne	r2,zero,499f4 <__swbuf_r+0x114>
   499d8:	80800017 	ldw	r2,0(r16)
   499dc:	00c00044 	movi	r3,1
   499e0:	003fda06 	br	4994c <__alt_data_end+0xfffed58c>
   499e4:	800b883a 	mov	r5,r16
   499e8:	9009883a 	mov	r4,r18
   499ec:	00444340 	call	44434 <_fflush_r>
   499f0:	103fe326 	beq	r2,zero,49980 <__alt_data_end+0xfffed5c0>
   499f4:	00bfffc4 	movi	r2,-1
   499f8:	003fe206 	br	49984 <__alt_data_end+0xfffed5c4>
   499fc:	800b883a 	mov	r5,r16
   49a00:	9009883a 	mov	r4,r18
   49a04:	00428140 	call	42814 <__swsetup_r>
   49a08:	103ffa1e 	bne	r2,zero,499f4 <__alt_data_end+0xfffed634>
   49a0c:	8100030b 	ldhu	r4,12(r16)
   49a10:	80c00417 	ldw	r3,16(r16)
   49a14:	003fc506 	br	4992c <__alt_data_end+0xfffed56c>
   49a18:	00448200 	call	44820 <__sinit>
   49a1c:	003fbc06 	br	49910 <__alt_data_end+0xfffed550>

00049a20 <__swbuf>:
   49a20:	00800174 	movhi	r2,5
   49a24:	1085fb04 	addi	r2,r2,6124
   49a28:	280d883a 	mov	r6,r5
   49a2c:	200b883a 	mov	r5,r4
   49a30:	11000017 	ldw	r4,0(r2)
   49a34:	00498e01 	jmpi	498e0 <__swbuf_r>

00049a38 <_wcrtomb_r>:
   49a38:	defff604 	addi	sp,sp,-40
   49a3c:	00800174 	movhi	r2,5
   49a40:	dc800815 	stw	r18,32(sp)
   49a44:	dc400715 	stw	r17,28(sp)
   49a48:	dc000615 	stw	r16,24(sp)
   49a4c:	1085ff04 	addi	r2,r2,6140
   49a50:	dfc00915 	stw	ra,36(sp)
   49a54:	2021883a 	mov	r16,r4
   49a58:	3823883a 	mov	r17,r7
   49a5c:	14800017 	ldw	r18,0(r2)
   49a60:	28001426 	beq	r5,zero,49ab4 <_wcrtomb_r+0x7c>
   49a64:	d9400415 	stw	r5,16(sp)
   49a68:	d9800515 	stw	r6,20(sp)
   49a6c:	0044ea80 	call	44ea8 <__locale_charset>
   49a70:	d9800517 	ldw	r6,20(sp)
   49a74:	d9400417 	ldw	r5,16(sp)
   49a78:	100f883a 	mov	r7,r2
   49a7c:	dc400015 	stw	r17,0(sp)
   49a80:	8009883a 	mov	r4,r16
   49a84:	903ee83a 	callr	r18
   49a88:	00ffffc4 	movi	r3,-1
   49a8c:	10c0031e 	bne	r2,r3,49a9c <_wcrtomb_r+0x64>
   49a90:	88000015 	stw	zero,0(r17)
   49a94:	00c02284 	movi	r3,138
   49a98:	80c00015 	stw	r3,0(r16)
   49a9c:	dfc00917 	ldw	ra,36(sp)
   49aa0:	dc800817 	ldw	r18,32(sp)
   49aa4:	dc400717 	ldw	r17,28(sp)
   49aa8:	dc000617 	ldw	r16,24(sp)
   49aac:	dec00a04 	addi	sp,sp,40
   49ab0:	f800283a 	ret
   49ab4:	0044ea80 	call	44ea8 <__locale_charset>
   49ab8:	100f883a 	mov	r7,r2
   49abc:	dc400015 	stw	r17,0(sp)
   49ac0:	000d883a 	mov	r6,zero
   49ac4:	d9400104 	addi	r5,sp,4
   49ac8:	8009883a 	mov	r4,r16
   49acc:	903ee83a 	callr	r18
   49ad0:	003fed06 	br	49a88 <__alt_data_end+0xfffed6c8>

00049ad4 <wcrtomb>:
   49ad4:	defff604 	addi	sp,sp,-40
   49ad8:	00800174 	movhi	r2,5
   49adc:	dc800615 	stw	r18,24(sp)
   49ae0:	dc400515 	stw	r17,20(sp)
   49ae4:	1085fb04 	addi	r2,r2,6124
   49ae8:	dfc00915 	stw	ra,36(sp)
   49aec:	dd000815 	stw	r20,32(sp)
   49af0:	dcc00715 	stw	r19,28(sp)
   49af4:	dc000415 	stw	r16,16(sp)
   49af8:	3025883a 	mov	r18,r6
   49afc:	14400017 	ldw	r17,0(r2)
   49b00:	20001926 	beq	r4,zero,49b68 <wcrtomb+0x94>
   49b04:	00800174 	movhi	r2,5
   49b08:	1085ff04 	addi	r2,r2,6140
   49b0c:	15000017 	ldw	r20,0(r2)
   49b10:	2021883a 	mov	r16,r4
   49b14:	2827883a 	mov	r19,r5
   49b18:	0044ea80 	call	44ea8 <__locale_charset>
   49b1c:	100f883a 	mov	r7,r2
   49b20:	dc800015 	stw	r18,0(sp)
   49b24:	980d883a 	mov	r6,r19
   49b28:	800b883a 	mov	r5,r16
   49b2c:	8809883a 	mov	r4,r17
   49b30:	a03ee83a 	callr	r20
   49b34:	00ffffc4 	movi	r3,-1
   49b38:	10c0031e 	bne	r2,r3,49b48 <wcrtomb+0x74>
   49b3c:	90000015 	stw	zero,0(r18)
   49b40:	00c02284 	movi	r3,138
   49b44:	88c00015 	stw	r3,0(r17)
   49b48:	dfc00917 	ldw	ra,36(sp)
   49b4c:	dd000817 	ldw	r20,32(sp)
   49b50:	dcc00717 	ldw	r19,28(sp)
   49b54:	dc800617 	ldw	r18,24(sp)
   49b58:	dc400517 	ldw	r17,20(sp)
   49b5c:	dc000417 	ldw	r16,16(sp)
   49b60:	dec00a04 	addi	sp,sp,40
   49b64:	f800283a 	ret
   49b68:	00800174 	movhi	r2,5
   49b6c:	1085ff04 	addi	r2,r2,6140
   49b70:	14000017 	ldw	r16,0(r2)
   49b74:	0044ea80 	call	44ea8 <__locale_charset>
   49b78:	100f883a 	mov	r7,r2
   49b7c:	dc800015 	stw	r18,0(sp)
   49b80:	000d883a 	mov	r6,zero
   49b84:	d9400104 	addi	r5,sp,4
   49b88:	8809883a 	mov	r4,r17
   49b8c:	803ee83a 	callr	r16
   49b90:	003fe806 	br	49b34 <__alt_data_end+0xfffed774>

00049b94 <__ascii_wctomb>:
   49b94:	28000526 	beq	r5,zero,49bac <__ascii_wctomb+0x18>
   49b98:	00803fc4 	movi	r2,255
   49b9c:	11800536 	bltu	r2,r6,49bb4 <__ascii_wctomb+0x20>
   49ba0:	29800005 	stb	r6,0(r5)
   49ba4:	00800044 	movi	r2,1
   49ba8:	f800283a 	ret
   49bac:	0005883a 	mov	r2,zero
   49bb0:	f800283a 	ret
   49bb4:	00802284 	movi	r2,138
   49bb8:	20800015 	stw	r2,0(r4)
   49bbc:	00bfffc4 	movi	r2,-1
   49bc0:	f800283a 	ret

00049bc4 <_wctomb_r>:
   49bc4:	00800174 	movhi	r2,5
   49bc8:	defff904 	addi	sp,sp,-28
   49bcc:	1085ff04 	addi	r2,r2,6140
   49bd0:	dfc00615 	stw	ra,24(sp)
   49bd4:	dc400515 	stw	r17,20(sp)
   49bd8:	dc000415 	stw	r16,16(sp)
   49bdc:	3823883a 	mov	r17,r7
   49be0:	14000017 	ldw	r16,0(r2)
   49be4:	d9000115 	stw	r4,4(sp)
   49be8:	d9400215 	stw	r5,8(sp)
   49bec:	d9800315 	stw	r6,12(sp)
   49bf0:	0044ea80 	call	44ea8 <__locale_charset>
   49bf4:	d9800317 	ldw	r6,12(sp)
   49bf8:	d9400217 	ldw	r5,8(sp)
   49bfc:	d9000117 	ldw	r4,4(sp)
   49c00:	100f883a 	mov	r7,r2
   49c04:	dc400015 	stw	r17,0(sp)
   49c08:	803ee83a 	callr	r16
   49c0c:	dfc00617 	ldw	ra,24(sp)
   49c10:	dc400517 	ldw	r17,20(sp)
   49c14:	dc000417 	ldw	r16,16(sp)
   49c18:	dec00704 	addi	sp,sp,28
   49c1c:	f800283a 	ret

00049c20 <__udivdi3>:
   49c20:	defff404 	addi	sp,sp,-48
   49c24:	dcc00515 	stw	r19,20(sp)
   49c28:	dc000215 	stw	r16,8(sp)
   49c2c:	dfc00b15 	stw	ra,44(sp)
   49c30:	df000a15 	stw	fp,40(sp)
   49c34:	ddc00915 	stw	r23,36(sp)
   49c38:	dd800815 	stw	r22,32(sp)
   49c3c:	dd400715 	stw	r21,28(sp)
   49c40:	dd000615 	stw	r20,24(sp)
   49c44:	dc800415 	stw	r18,16(sp)
   49c48:	dc400315 	stw	r17,12(sp)
   49c4c:	2027883a 	mov	r19,r4
   49c50:	2821883a 	mov	r16,r5
   49c54:	3800461e 	bne	r7,zero,49d70 <__udivdi3+0x150>
   49c58:	3023883a 	mov	r17,r6
   49c5c:	2025883a 	mov	r18,r4
   49c60:	2980572e 	bgeu	r5,r6,49dc0 <__udivdi3+0x1a0>
   49c64:	00bfffd4 	movui	r2,65535
   49c68:	282d883a 	mov	r22,r5
   49c6c:	1180b236 	bltu	r2,r6,49f38 <__udivdi3+0x318>
   49c70:	00803fc4 	movi	r2,255
   49c74:	1185803a 	cmpltu	r2,r2,r6
   49c78:	100490fa 	slli	r2,r2,3
   49c7c:	3086d83a 	srl	r3,r6,r2
   49c80:	01000174 	movhi	r4,5
   49c84:	213eb404 	addi	r4,r4,-1328
   49c88:	20c7883a 	add	r3,r4,r3
   49c8c:	18c00003 	ldbu	r3,0(r3)
   49c90:	1885883a 	add	r2,r3,r2
   49c94:	00c00804 	movi	r3,32
   49c98:	1887c83a 	sub	r3,r3,r2
   49c9c:	18000526 	beq	r3,zero,49cb4 <__udivdi3+0x94>
   49ca0:	80e0983a 	sll	r16,r16,r3
   49ca4:	9884d83a 	srl	r2,r19,r2
   49ca8:	30e2983a 	sll	r17,r6,r3
   49cac:	98e4983a 	sll	r18,r19,r3
   49cb0:	142cb03a 	or	r22,r2,r16
   49cb4:	882ad43a 	srli	r21,r17,16
   49cb8:	b009883a 	mov	r4,r22
   49cbc:	8d3fffcc 	andi	r20,r17,65535
   49cc0:	a80b883a 	mov	r5,r21
   49cc4:	004a93c0 	call	4a93c <__umodsi3>
   49cc8:	b009883a 	mov	r4,r22
   49ccc:	a80b883a 	mov	r5,r21
   49cd0:	1027883a 	mov	r19,r2
   49cd4:	004a8d80 	call	4a8d8 <__udivsi3>
   49cd8:	100b883a 	mov	r5,r2
   49cdc:	a009883a 	mov	r4,r20
   49ce0:	102d883a 	mov	r22,r2
   49ce4:	004a9940 	call	4a994 <__mulsi3>
   49ce8:	9826943a 	slli	r19,r19,16
   49cec:	9006d43a 	srli	r3,r18,16
   49cf0:	1cc6b03a 	or	r3,r3,r19
   49cf4:	1880052e 	bgeu	r3,r2,49d0c <__udivdi3+0xec>
   49cf8:	1c47883a 	add	r3,r3,r17
   49cfc:	b13fffc4 	addi	r4,r22,-1
   49d00:	1c400136 	bltu	r3,r17,49d08 <__udivdi3+0xe8>
   49d04:	18814236 	bltu	r3,r2,4a210 <__udivdi3+0x5f0>
   49d08:	202d883a 	mov	r22,r4
   49d0c:	18a1c83a 	sub	r16,r3,r2
   49d10:	8009883a 	mov	r4,r16
   49d14:	a80b883a 	mov	r5,r21
   49d18:	004a93c0 	call	4a93c <__umodsi3>
   49d1c:	1027883a 	mov	r19,r2
   49d20:	8009883a 	mov	r4,r16
   49d24:	a80b883a 	mov	r5,r21
   49d28:	9826943a 	slli	r19,r19,16
   49d2c:	004a8d80 	call	4a8d8 <__udivsi3>
   49d30:	100b883a 	mov	r5,r2
   49d34:	a009883a 	mov	r4,r20
   49d38:	94bfffcc 	andi	r18,r18,65535
   49d3c:	1021883a 	mov	r16,r2
   49d40:	94e4b03a 	or	r18,r18,r19
   49d44:	004a9940 	call	4a994 <__mulsi3>
   49d48:	9080052e 	bgeu	r18,r2,49d60 <__udivdi3+0x140>
   49d4c:	8ca5883a 	add	r18,r17,r18
   49d50:	80ffffc4 	addi	r3,r16,-1
   49d54:	94410c36 	bltu	r18,r17,4a188 <__udivdi3+0x568>
   49d58:	90810b2e 	bgeu	r18,r2,4a188 <__udivdi3+0x568>
   49d5c:	843fff84 	addi	r16,r16,-2
   49d60:	b004943a 	slli	r2,r22,16
   49d64:	0007883a 	mov	r3,zero
   49d68:	1404b03a 	or	r2,r2,r16
   49d6c:	00005e06 	br	49ee8 <__udivdi3+0x2c8>
   49d70:	29c05b36 	bltu	r5,r7,49ee0 <__udivdi3+0x2c0>
   49d74:	00bfffd4 	movui	r2,65535
   49d78:	11c0672e 	bgeu	r2,r7,49f18 <__udivdi3+0x2f8>
   49d7c:	00804034 	movhi	r2,256
   49d80:	10bfffc4 	addi	r2,r2,-1
   49d84:	11c10a36 	bltu	r2,r7,4a1b0 <__udivdi3+0x590>
   49d88:	00800404 	movi	r2,16
   49d8c:	3886d83a 	srl	r3,r7,r2
   49d90:	01000174 	movhi	r4,5
   49d94:	213eb404 	addi	r4,r4,-1328
   49d98:	20c7883a 	add	r3,r4,r3
   49d9c:	18c00003 	ldbu	r3,0(r3)
   49da0:	05c00804 	movi	r23,32
   49da4:	1885883a 	add	r2,r3,r2
   49da8:	b8afc83a 	sub	r23,r23,r2
   49dac:	b800671e 	bne	r23,zero,49f4c <__udivdi3+0x32c>
   49db0:	3c010536 	bltu	r7,r16,4a1c8 <__udivdi3+0x5a8>
   49db4:	9985403a 	cmpgeu	r2,r19,r6
   49db8:	0007883a 	mov	r3,zero
   49dbc:	00004a06 	br	49ee8 <__udivdi3+0x2c8>
   49dc0:	3000041e 	bne	r6,zero,49dd4 <__udivdi3+0x1b4>
   49dc4:	000b883a 	mov	r5,zero
   49dc8:	01000044 	movi	r4,1
   49dcc:	004a8d80 	call	4a8d8 <__udivsi3>
   49dd0:	1023883a 	mov	r17,r2
   49dd4:	00bfffd4 	movui	r2,65535
   49dd8:	1440532e 	bgeu	r2,r17,49f28 <__udivdi3+0x308>
   49ddc:	00804034 	movhi	r2,256
   49de0:	10bfffc4 	addi	r2,r2,-1
   49de4:	1440f436 	bltu	r2,r17,4a1b8 <__udivdi3+0x598>
   49de8:	00800404 	movi	r2,16
   49dec:	8886d83a 	srl	r3,r17,r2
   49df0:	01000174 	movhi	r4,5
   49df4:	213eb404 	addi	r4,r4,-1328
   49df8:	20c7883a 	add	r3,r4,r3
   49dfc:	18c00003 	ldbu	r3,0(r3)
   49e00:	1885883a 	add	r2,r3,r2
   49e04:	00c00804 	movi	r3,32
   49e08:	1887c83a 	sub	r3,r3,r2
   49e0c:	1800a51e 	bne	r3,zero,4a0a4 <__udivdi3+0x484>
   49e10:	882ad43a 	srli	r21,r17,16
   49e14:	8461c83a 	sub	r16,r16,r17
   49e18:	8d3fffcc 	andi	r20,r17,65535
   49e1c:	00c00044 	movi	r3,1
   49e20:	a80b883a 	mov	r5,r21
   49e24:	8009883a 	mov	r4,r16
   49e28:	d8c00115 	stw	r3,4(sp)
   49e2c:	004a93c0 	call	4a93c <__umodsi3>
   49e30:	a80b883a 	mov	r5,r21
   49e34:	8009883a 	mov	r4,r16
   49e38:	1027883a 	mov	r19,r2
   49e3c:	004a8d80 	call	4a8d8 <__udivsi3>
   49e40:	a00b883a 	mov	r5,r20
   49e44:	1009883a 	mov	r4,r2
   49e48:	102d883a 	mov	r22,r2
   49e4c:	004a9940 	call	4a994 <__mulsi3>
   49e50:	9826943a 	slli	r19,r19,16
   49e54:	900ed43a 	srli	r7,r18,16
   49e58:	d8c00117 	ldw	r3,4(sp)
   49e5c:	3cceb03a 	or	r7,r7,r19
   49e60:	3880052e 	bgeu	r7,r2,49e78 <__udivdi3+0x258>
   49e64:	3c4f883a 	add	r7,r7,r17
   49e68:	b13fffc4 	addi	r4,r22,-1
   49e6c:	3c400136 	bltu	r7,r17,49e74 <__udivdi3+0x254>
   49e70:	3880e436 	bltu	r7,r2,4a204 <__udivdi3+0x5e4>
   49e74:	202d883a 	mov	r22,r4
   49e78:	38a1c83a 	sub	r16,r7,r2
   49e7c:	8009883a 	mov	r4,r16
   49e80:	a80b883a 	mov	r5,r21
   49e84:	d8c00115 	stw	r3,4(sp)
   49e88:	004a93c0 	call	4a93c <__umodsi3>
   49e8c:	1027883a 	mov	r19,r2
   49e90:	8009883a 	mov	r4,r16
   49e94:	a80b883a 	mov	r5,r21
   49e98:	9826943a 	slli	r19,r19,16
   49e9c:	004a8d80 	call	4a8d8 <__udivsi3>
   49ea0:	a00b883a 	mov	r5,r20
   49ea4:	1009883a 	mov	r4,r2
   49ea8:	94bfffcc 	andi	r18,r18,65535
   49eac:	1021883a 	mov	r16,r2
   49eb0:	94e4b03a 	or	r18,r18,r19
   49eb4:	004a9940 	call	4a994 <__mulsi3>
   49eb8:	d8c00117 	ldw	r3,4(sp)
   49ebc:	9080052e 	bgeu	r18,r2,49ed4 <__udivdi3+0x2b4>
   49ec0:	8ca5883a 	add	r18,r17,r18
   49ec4:	813fffc4 	addi	r4,r16,-1
   49ec8:	9440ad36 	bltu	r18,r17,4a180 <__udivdi3+0x560>
   49ecc:	9080ac2e 	bgeu	r18,r2,4a180 <__udivdi3+0x560>
   49ed0:	843fff84 	addi	r16,r16,-2
   49ed4:	b004943a 	slli	r2,r22,16
   49ed8:	1404b03a 	or	r2,r2,r16
   49edc:	00000206 	br	49ee8 <__udivdi3+0x2c8>
   49ee0:	0007883a 	mov	r3,zero
   49ee4:	0005883a 	mov	r2,zero
   49ee8:	dfc00b17 	ldw	ra,44(sp)
   49eec:	df000a17 	ldw	fp,40(sp)
   49ef0:	ddc00917 	ldw	r23,36(sp)
   49ef4:	dd800817 	ldw	r22,32(sp)
   49ef8:	dd400717 	ldw	r21,28(sp)
   49efc:	dd000617 	ldw	r20,24(sp)
   49f00:	dcc00517 	ldw	r19,20(sp)
   49f04:	dc800417 	ldw	r18,16(sp)
   49f08:	dc400317 	ldw	r17,12(sp)
   49f0c:	dc000217 	ldw	r16,8(sp)
   49f10:	dec00c04 	addi	sp,sp,48
   49f14:	f800283a 	ret
   49f18:	00803fc4 	movi	r2,255
   49f1c:	11c5803a 	cmpltu	r2,r2,r7
   49f20:	100490fa 	slli	r2,r2,3
   49f24:	003f9906 	br	49d8c <__alt_data_end+0xfffed9cc>
   49f28:	00803fc4 	movi	r2,255
   49f2c:	1445803a 	cmpltu	r2,r2,r17
   49f30:	100490fa 	slli	r2,r2,3
   49f34:	003fad06 	br	49dec <__alt_data_end+0xfffeda2c>
   49f38:	00804034 	movhi	r2,256
   49f3c:	10bfffc4 	addi	r2,r2,-1
   49f40:	11809f36 	bltu	r2,r6,4a1c0 <__udivdi3+0x5a0>
   49f44:	00800404 	movi	r2,16
   49f48:	003f4c06 	br	49c7c <__alt_data_end+0xfffed8bc>
   49f4c:	3dce983a 	sll	r7,r7,r23
   49f50:	30b8d83a 	srl	fp,r6,r2
   49f54:	80a2d83a 	srl	r17,r16,r2
   49f58:	35cc983a 	sll	r6,r6,r23
   49f5c:	3f38b03a 	or	fp,r7,fp
   49f60:	e024d43a 	srli	r18,fp,16
   49f64:	9884d83a 	srl	r2,r19,r2
   49f68:	85e0983a 	sll	r16,r16,r23
   49f6c:	8809883a 	mov	r4,r17
   49f70:	900b883a 	mov	r5,r18
   49f74:	d9800015 	stw	r6,0(sp)
   49f78:	1420b03a 	or	r16,r2,r16
   49f7c:	004a93c0 	call	4a93c <__umodsi3>
   49f80:	900b883a 	mov	r5,r18
   49f84:	8809883a 	mov	r4,r17
   49f88:	1029883a 	mov	r20,r2
   49f8c:	e5bfffcc 	andi	r22,fp,65535
   49f90:	004a8d80 	call	4a8d8 <__udivsi3>
   49f94:	100b883a 	mov	r5,r2
   49f98:	b009883a 	mov	r4,r22
   49f9c:	102b883a 	mov	r21,r2
   49fa0:	004a9940 	call	4a994 <__mulsi3>
   49fa4:	a028943a 	slli	r20,r20,16
   49fa8:	8006d43a 	srli	r3,r16,16
   49fac:	1d06b03a 	or	r3,r3,r20
   49fb0:	1880042e 	bgeu	r3,r2,49fc4 <__udivdi3+0x3a4>
   49fb4:	1f07883a 	add	r3,r3,fp
   49fb8:	a93fffc4 	addi	r4,r21,-1
   49fbc:	1f00892e 	bgeu	r3,fp,4a1e4 <__udivdi3+0x5c4>
   49fc0:	202b883a 	mov	r21,r4
   49fc4:	18a3c83a 	sub	r17,r3,r2
   49fc8:	8809883a 	mov	r4,r17
   49fcc:	900b883a 	mov	r5,r18
   49fd0:	004a93c0 	call	4a93c <__umodsi3>
   49fd4:	1029883a 	mov	r20,r2
   49fd8:	8809883a 	mov	r4,r17
   49fdc:	900b883a 	mov	r5,r18
   49fe0:	a028943a 	slli	r20,r20,16
   49fe4:	004a8d80 	call	4a8d8 <__udivsi3>
   49fe8:	100b883a 	mov	r5,r2
   49fec:	b009883a 	mov	r4,r22
   49ff0:	843fffcc 	andi	r16,r16,65535
   49ff4:	1023883a 	mov	r17,r2
   49ff8:	8520b03a 	or	r16,r16,r20
   49ffc:	004a9940 	call	4a994 <__mulsi3>
   4a000:	8080042e 	bgeu	r16,r2,4a014 <__udivdi3+0x3f4>
   4a004:	8721883a 	add	r16,r16,fp
   4a008:	88ffffc4 	addi	r3,r17,-1
   4a00c:	8700712e 	bgeu	r16,fp,4a1d4 <__udivdi3+0x5b4>
   4a010:	1823883a 	mov	r17,r3
   4a014:	a80e943a 	slli	r7,r21,16
   4a018:	d8c00017 	ldw	r3,0(sp)
   4a01c:	80a1c83a 	sub	r16,r16,r2
   4a020:	3c64b03a 	or	r18,r7,r17
   4a024:	1d3fffcc 	andi	r20,r3,65535
   4a028:	9022d43a 	srli	r17,r18,16
   4a02c:	95bfffcc 	andi	r22,r18,65535
   4a030:	a00b883a 	mov	r5,r20
   4a034:	b009883a 	mov	r4,r22
   4a038:	182ad43a 	srli	r21,r3,16
   4a03c:	004a9940 	call	4a994 <__mulsi3>
   4a040:	a00b883a 	mov	r5,r20
   4a044:	8809883a 	mov	r4,r17
   4a048:	1039883a 	mov	fp,r2
   4a04c:	004a9940 	call	4a994 <__mulsi3>
   4a050:	8809883a 	mov	r4,r17
   4a054:	a80b883a 	mov	r5,r21
   4a058:	1029883a 	mov	r20,r2
   4a05c:	004a9940 	call	4a994 <__mulsi3>
   4a060:	a80b883a 	mov	r5,r21
   4a064:	b009883a 	mov	r4,r22
   4a068:	1023883a 	mov	r17,r2
   4a06c:	004a9940 	call	4a994 <__mulsi3>
   4a070:	e006d43a 	srli	r3,fp,16
   4a074:	1505883a 	add	r2,r2,r20
   4a078:	1887883a 	add	r3,r3,r2
   4a07c:	1d00022e 	bgeu	r3,r20,4a088 <__udivdi3+0x468>
   4a080:	00800074 	movhi	r2,1
   4a084:	88a3883a 	add	r17,r17,r2
   4a088:	1804d43a 	srli	r2,r3,16
   4a08c:	1463883a 	add	r17,r2,r17
   4a090:	84404436 	bltu	r16,r17,4a1a4 <__udivdi3+0x584>
   4a094:	84403e26 	beq	r16,r17,4a190 <__udivdi3+0x570>
   4a098:	9005883a 	mov	r2,r18
   4a09c:	0007883a 	mov	r3,zero
   4a0a0:	003f9106 	br	49ee8 <__alt_data_end+0xfffedb28>
   4a0a4:	88e2983a 	sll	r17,r17,r3
   4a0a8:	80aed83a 	srl	r23,r16,r2
   4a0ac:	80e0983a 	sll	r16,r16,r3
   4a0b0:	882ad43a 	srli	r21,r17,16
   4a0b4:	9884d83a 	srl	r2,r19,r2
   4a0b8:	b809883a 	mov	r4,r23
   4a0bc:	a80b883a 	mov	r5,r21
   4a0c0:	98e4983a 	sll	r18,r19,r3
   4a0c4:	142cb03a 	or	r22,r2,r16
   4a0c8:	004a93c0 	call	4a93c <__umodsi3>
   4a0cc:	b809883a 	mov	r4,r23
   4a0d0:	a80b883a 	mov	r5,r21
   4a0d4:	1027883a 	mov	r19,r2
   4a0d8:	8d3fffcc 	andi	r20,r17,65535
   4a0dc:	004a8d80 	call	4a8d8 <__udivsi3>
   4a0e0:	a009883a 	mov	r4,r20
   4a0e4:	100b883a 	mov	r5,r2
   4a0e8:	102f883a 	mov	r23,r2
   4a0ec:	004a9940 	call	4a994 <__mulsi3>
   4a0f0:	9826943a 	slli	r19,r19,16
   4a0f4:	b008d43a 	srli	r4,r22,16
   4a0f8:	24c8b03a 	or	r4,r4,r19
   4a0fc:	2080062e 	bgeu	r4,r2,4a118 <__udivdi3+0x4f8>
   4a100:	2449883a 	add	r4,r4,r17
   4a104:	b8ffffc4 	addi	r3,r23,-1
   4a108:	24403c36 	bltu	r4,r17,4a1fc <__udivdi3+0x5dc>
   4a10c:	20803b2e 	bgeu	r4,r2,4a1fc <__udivdi3+0x5dc>
   4a110:	bdffff84 	addi	r23,r23,-2
   4a114:	2449883a 	add	r4,r4,r17
   4a118:	20a1c83a 	sub	r16,r4,r2
   4a11c:	a80b883a 	mov	r5,r21
   4a120:	8009883a 	mov	r4,r16
   4a124:	004a93c0 	call	4a93c <__umodsi3>
   4a128:	a80b883a 	mov	r5,r21
   4a12c:	8009883a 	mov	r4,r16
   4a130:	1027883a 	mov	r19,r2
   4a134:	004a8d80 	call	4a8d8 <__udivsi3>
   4a138:	a009883a 	mov	r4,r20
   4a13c:	100b883a 	mov	r5,r2
   4a140:	9826943a 	slli	r19,r19,16
   4a144:	1039883a 	mov	fp,r2
   4a148:	004a9940 	call	4a994 <__mulsi3>
   4a14c:	b13fffcc 	andi	r4,r22,65535
   4a150:	24c8b03a 	or	r4,r4,r19
   4a154:	2080062e 	bgeu	r4,r2,4a170 <__udivdi3+0x550>
   4a158:	2449883a 	add	r4,r4,r17
   4a15c:	e0ffffc4 	addi	r3,fp,-1
   4a160:	24402436 	bltu	r4,r17,4a1f4 <__udivdi3+0x5d4>
   4a164:	2080232e 	bgeu	r4,r2,4a1f4 <__udivdi3+0x5d4>
   4a168:	e73fff84 	addi	fp,fp,-2
   4a16c:	2449883a 	add	r4,r4,r17
   4a170:	b82e943a 	slli	r23,r23,16
   4a174:	20a1c83a 	sub	r16,r4,r2
   4a178:	bf06b03a 	or	r3,r23,fp
   4a17c:	003f2806 	br	49e20 <__alt_data_end+0xfffeda60>
   4a180:	2021883a 	mov	r16,r4
   4a184:	003f5306 	br	49ed4 <__alt_data_end+0xfffedb14>
   4a188:	1821883a 	mov	r16,r3
   4a18c:	003ef406 	br	49d60 <__alt_data_end+0xfffed9a0>
   4a190:	1806943a 	slli	r3,r3,16
   4a194:	9de6983a 	sll	r19,r19,r23
   4a198:	e73fffcc 	andi	fp,fp,65535
   4a19c:	1f07883a 	add	r3,r3,fp
   4a1a0:	98ffbd2e 	bgeu	r19,r3,4a098 <__alt_data_end+0xfffedcd8>
   4a1a4:	90bfffc4 	addi	r2,r18,-1
   4a1a8:	0007883a 	mov	r3,zero
   4a1ac:	003f4e06 	br	49ee8 <__alt_data_end+0xfffedb28>
   4a1b0:	00800604 	movi	r2,24
   4a1b4:	003ef506 	br	49d8c <__alt_data_end+0xfffed9cc>
   4a1b8:	00800604 	movi	r2,24
   4a1bc:	003f0b06 	br	49dec <__alt_data_end+0xfffeda2c>
   4a1c0:	00800604 	movi	r2,24
   4a1c4:	003ead06 	br	49c7c <__alt_data_end+0xfffed8bc>
   4a1c8:	0007883a 	mov	r3,zero
   4a1cc:	00800044 	movi	r2,1
   4a1d0:	003f4506 	br	49ee8 <__alt_data_end+0xfffedb28>
   4a1d4:	80bf8e2e 	bgeu	r16,r2,4a010 <__alt_data_end+0xfffedc50>
   4a1d8:	8c7fff84 	addi	r17,r17,-2
   4a1dc:	8721883a 	add	r16,r16,fp
   4a1e0:	003f8c06 	br	4a014 <__alt_data_end+0xfffedc54>
   4a1e4:	18bf762e 	bgeu	r3,r2,49fc0 <__alt_data_end+0xfffedc00>
   4a1e8:	ad7fff84 	addi	r21,r21,-2
   4a1ec:	1f07883a 	add	r3,r3,fp
   4a1f0:	003f7406 	br	49fc4 <__alt_data_end+0xfffedc04>
   4a1f4:	1839883a 	mov	fp,r3
   4a1f8:	003fdd06 	br	4a170 <__alt_data_end+0xfffeddb0>
   4a1fc:	182f883a 	mov	r23,r3
   4a200:	003fc506 	br	4a118 <__alt_data_end+0xfffedd58>
   4a204:	b5bfff84 	addi	r22,r22,-2
   4a208:	3c4f883a 	add	r7,r7,r17
   4a20c:	003f1a06 	br	49e78 <__alt_data_end+0xfffedab8>
   4a210:	b5bfff84 	addi	r22,r22,-2
   4a214:	1c47883a 	add	r3,r3,r17
   4a218:	003ebc06 	br	49d0c <__alt_data_end+0xfffed94c>

0004a21c <__umoddi3>:
   4a21c:	defff304 	addi	sp,sp,-52
   4a220:	df000b15 	stw	fp,44(sp)
   4a224:	dc400415 	stw	r17,16(sp)
   4a228:	dc000315 	stw	r16,12(sp)
   4a22c:	dfc00c15 	stw	ra,48(sp)
   4a230:	ddc00a15 	stw	r23,40(sp)
   4a234:	dd800915 	stw	r22,36(sp)
   4a238:	dd400815 	stw	r21,32(sp)
   4a23c:	dd000715 	stw	r20,28(sp)
   4a240:	dcc00615 	stw	r19,24(sp)
   4a244:	dc800515 	stw	r18,20(sp)
   4a248:	2021883a 	mov	r16,r4
   4a24c:	2823883a 	mov	r17,r5
   4a250:	2839883a 	mov	fp,r5
   4a254:	3800401e 	bne	r7,zero,4a358 <__umoddi3+0x13c>
   4a258:	3027883a 	mov	r19,r6
   4a25c:	2029883a 	mov	r20,r4
   4a260:	2980552e 	bgeu	r5,r6,4a3b8 <__umoddi3+0x19c>
   4a264:	00bfffd4 	movui	r2,65535
   4a268:	1180a236 	bltu	r2,r6,4a4f4 <__umoddi3+0x2d8>
   4a26c:	01003fc4 	movi	r4,255
   4a270:	2189803a 	cmpltu	r4,r4,r6
   4a274:	200890fa 	slli	r4,r4,3
   4a278:	3104d83a 	srl	r2,r6,r4
   4a27c:	00c00174 	movhi	r3,5
   4a280:	18feb404 	addi	r3,r3,-1328
   4a284:	1885883a 	add	r2,r3,r2
   4a288:	10c00003 	ldbu	r3,0(r2)
   4a28c:	00800804 	movi	r2,32
   4a290:	1909883a 	add	r4,r3,r4
   4a294:	1125c83a 	sub	r18,r2,r4
   4a298:	90000526 	beq	r18,zero,4a2b0 <__umoddi3+0x94>
   4a29c:	8ca2983a 	sll	r17,r17,r18
   4a2a0:	8108d83a 	srl	r4,r16,r4
   4a2a4:	34a6983a 	sll	r19,r6,r18
   4a2a8:	84a8983a 	sll	r20,r16,r18
   4a2ac:	2478b03a 	or	fp,r4,r17
   4a2b0:	982cd43a 	srli	r22,r19,16
   4a2b4:	e009883a 	mov	r4,fp
   4a2b8:	9dffffcc 	andi	r23,r19,65535
   4a2bc:	b00b883a 	mov	r5,r22
   4a2c0:	004a93c0 	call	4a93c <__umodsi3>
   4a2c4:	b00b883a 	mov	r5,r22
   4a2c8:	e009883a 	mov	r4,fp
   4a2cc:	102b883a 	mov	r21,r2
   4a2d0:	004a8d80 	call	4a8d8 <__udivsi3>
   4a2d4:	100b883a 	mov	r5,r2
   4a2d8:	b809883a 	mov	r4,r23
   4a2dc:	004a9940 	call	4a994 <__mulsi3>
   4a2e0:	a82a943a 	slli	r21,r21,16
   4a2e4:	a006d43a 	srli	r3,r20,16
   4a2e8:	1d46b03a 	or	r3,r3,r21
   4a2ec:	1880032e 	bgeu	r3,r2,4a2fc <__umoddi3+0xe0>
   4a2f0:	1cc7883a 	add	r3,r3,r19
   4a2f4:	1cc00136 	bltu	r3,r19,4a2fc <__umoddi3+0xe0>
   4a2f8:	18813136 	bltu	r3,r2,4a7c0 <__umoddi3+0x5a4>
   4a2fc:	18a1c83a 	sub	r16,r3,r2
   4a300:	b00b883a 	mov	r5,r22
   4a304:	8009883a 	mov	r4,r16
   4a308:	004a93c0 	call	4a93c <__umodsi3>
   4a30c:	b00b883a 	mov	r5,r22
   4a310:	8009883a 	mov	r4,r16
   4a314:	1023883a 	mov	r17,r2
   4a318:	004a8d80 	call	4a8d8 <__udivsi3>
   4a31c:	100b883a 	mov	r5,r2
   4a320:	b809883a 	mov	r4,r23
   4a324:	8822943a 	slli	r17,r17,16
   4a328:	004a9940 	call	4a994 <__mulsi3>
   4a32c:	a0ffffcc 	andi	r3,r20,65535
   4a330:	1c46b03a 	or	r3,r3,r17
   4a334:	1880042e 	bgeu	r3,r2,4a348 <__umoddi3+0x12c>
   4a338:	1cc7883a 	add	r3,r3,r19
   4a33c:	1cc00236 	bltu	r3,r19,4a348 <__umoddi3+0x12c>
   4a340:	1880012e 	bgeu	r3,r2,4a348 <__umoddi3+0x12c>
   4a344:	1cc7883a 	add	r3,r3,r19
   4a348:	1885c83a 	sub	r2,r3,r2
   4a34c:	1484d83a 	srl	r2,r2,r18
   4a350:	0007883a 	mov	r3,zero
   4a354:	00005306 	br	4a4a4 <__umoddi3+0x288>
   4a358:	29c05036 	bltu	r5,r7,4a49c <__umoddi3+0x280>
   4a35c:	00bfffd4 	movui	r2,65535
   4a360:	11c05c2e 	bgeu	r2,r7,4a4d4 <__umoddi3+0x2b8>
   4a364:	00804034 	movhi	r2,256
   4a368:	10bfffc4 	addi	r2,r2,-1
   4a36c:	11c10636 	bltu	r2,r7,4a788 <__umoddi3+0x56c>
   4a370:	01000404 	movi	r4,16
   4a374:	3904d83a 	srl	r2,r7,r4
   4a378:	00c00174 	movhi	r3,5
   4a37c:	18feb404 	addi	r3,r3,-1328
   4a380:	1885883a 	add	r2,r3,r2
   4a384:	14c00003 	ldbu	r19,0(r2)
   4a388:	00c00804 	movi	r3,32
   4a38c:	9927883a 	add	r19,r19,r4
   4a390:	1ce9c83a 	sub	r20,r3,r19
   4a394:	a0005c1e 	bne	r20,zero,4a508 <__umoddi3+0x2ec>
   4a398:	3c400136 	bltu	r7,r17,4a3a0 <__umoddi3+0x184>
   4a39c:	81810a36 	bltu	r16,r6,4a7c8 <__umoddi3+0x5ac>
   4a3a0:	8185c83a 	sub	r2,r16,r6
   4a3a4:	89e3c83a 	sub	r17,r17,r7
   4a3a8:	8089803a 	cmpltu	r4,r16,r2
   4a3ac:	8939c83a 	sub	fp,r17,r4
   4a3b0:	e007883a 	mov	r3,fp
   4a3b4:	00003b06 	br	4a4a4 <__umoddi3+0x288>
   4a3b8:	3000041e 	bne	r6,zero,4a3cc <__umoddi3+0x1b0>
   4a3bc:	000b883a 	mov	r5,zero
   4a3c0:	01000044 	movi	r4,1
   4a3c4:	004a8d80 	call	4a8d8 <__udivsi3>
   4a3c8:	1027883a 	mov	r19,r2
   4a3cc:	00bfffd4 	movui	r2,65535
   4a3d0:	14c0442e 	bgeu	r2,r19,4a4e4 <__umoddi3+0x2c8>
   4a3d4:	00804034 	movhi	r2,256
   4a3d8:	10bfffc4 	addi	r2,r2,-1
   4a3dc:	14c0ec36 	bltu	r2,r19,4a790 <__umoddi3+0x574>
   4a3e0:	00800404 	movi	r2,16
   4a3e4:	9886d83a 	srl	r3,r19,r2
   4a3e8:	01000174 	movhi	r4,5
   4a3ec:	213eb404 	addi	r4,r4,-1328
   4a3f0:	20c7883a 	add	r3,r4,r3
   4a3f4:	18c00003 	ldbu	r3,0(r3)
   4a3f8:	1887883a 	add	r3,r3,r2
   4a3fc:	00800804 	movi	r2,32
   4a400:	10e5c83a 	sub	r18,r2,r3
   4a404:	9000ab1e 	bne	r18,zero,4a6b4 <__umoddi3+0x498>
   4a408:	982cd43a 	srli	r22,r19,16
   4a40c:	8ce3c83a 	sub	r17,r17,r19
   4a410:	9dffffcc 	andi	r23,r19,65535
   4a414:	b00b883a 	mov	r5,r22
   4a418:	8809883a 	mov	r4,r17
   4a41c:	004a93c0 	call	4a93c <__umodsi3>
   4a420:	b00b883a 	mov	r5,r22
   4a424:	8809883a 	mov	r4,r17
   4a428:	102b883a 	mov	r21,r2
   4a42c:	004a8d80 	call	4a8d8 <__udivsi3>
   4a430:	b80b883a 	mov	r5,r23
   4a434:	1009883a 	mov	r4,r2
   4a438:	004a9940 	call	4a994 <__mulsi3>
   4a43c:	a82a943a 	slli	r21,r21,16
   4a440:	a006d43a 	srli	r3,r20,16
   4a444:	1d46b03a 	or	r3,r3,r21
   4a448:	1880042e 	bgeu	r3,r2,4a45c <__umoddi3+0x240>
   4a44c:	1cc7883a 	add	r3,r3,r19
   4a450:	1cc00236 	bltu	r3,r19,4a45c <__umoddi3+0x240>
   4a454:	1880012e 	bgeu	r3,r2,4a45c <__umoddi3+0x240>
   4a458:	1cc7883a 	add	r3,r3,r19
   4a45c:	18a1c83a 	sub	r16,r3,r2
   4a460:	b00b883a 	mov	r5,r22
   4a464:	8009883a 	mov	r4,r16
   4a468:	004a93c0 	call	4a93c <__umodsi3>
   4a46c:	1023883a 	mov	r17,r2
   4a470:	b00b883a 	mov	r5,r22
   4a474:	8009883a 	mov	r4,r16
   4a478:	004a8d80 	call	4a8d8 <__udivsi3>
   4a47c:	8822943a 	slli	r17,r17,16
   4a480:	b80b883a 	mov	r5,r23
   4a484:	1009883a 	mov	r4,r2
   4a488:	004a9940 	call	4a994 <__mulsi3>
   4a48c:	a53fffcc 	andi	r20,r20,65535
   4a490:	a446b03a 	or	r3,r20,r17
   4a494:	18bfac2e 	bgeu	r3,r2,4a348 <__alt_data_end+0xfffedf88>
   4a498:	003fa706 	br	4a338 <__alt_data_end+0xfffedf78>
   4a49c:	2005883a 	mov	r2,r4
   4a4a0:	2807883a 	mov	r3,r5
   4a4a4:	dfc00c17 	ldw	ra,48(sp)
   4a4a8:	df000b17 	ldw	fp,44(sp)
   4a4ac:	ddc00a17 	ldw	r23,40(sp)
   4a4b0:	dd800917 	ldw	r22,36(sp)
   4a4b4:	dd400817 	ldw	r21,32(sp)
   4a4b8:	dd000717 	ldw	r20,28(sp)
   4a4bc:	dcc00617 	ldw	r19,24(sp)
   4a4c0:	dc800517 	ldw	r18,20(sp)
   4a4c4:	dc400417 	ldw	r17,16(sp)
   4a4c8:	dc000317 	ldw	r16,12(sp)
   4a4cc:	dec00d04 	addi	sp,sp,52
   4a4d0:	f800283a 	ret
   4a4d4:	04c03fc4 	movi	r19,255
   4a4d8:	99c9803a 	cmpltu	r4,r19,r7
   4a4dc:	200890fa 	slli	r4,r4,3
   4a4e0:	003fa406 	br	4a374 <__alt_data_end+0xfffedfb4>
   4a4e4:	00803fc4 	movi	r2,255
   4a4e8:	14c5803a 	cmpltu	r2,r2,r19
   4a4ec:	100490fa 	slli	r2,r2,3
   4a4f0:	003fbc06 	br	4a3e4 <__alt_data_end+0xfffee024>
   4a4f4:	00804034 	movhi	r2,256
   4a4f8:	10bfffc4 	addi	r2,r2,-1
   4a4fc:	1180a636 	bltu	r2,r6,4a798 <__umoddi3+0x57c>
   4a500:	01000404 	movi	r4,16
   4a504:	003f5c06 	br	4a278 <__alt_data_end+0xfffedeb8>
   4a508:	3d0e983a 	sll	r7,r7,r20
   4a50c:	34ead83a 	srl	r21,r6,r19
   4a510:	8cc6d83a 	srl	r3,r17,r19
   4a514:	8d10983a 	sll	r8,r17,r20
   4a518:	3d6ab03a 	or	r21,r7,r21
   4a51c:	a82cd43a 	srli	r22,r21,16
   4a520:	84e2d83a 	srl	r17,r16,r19
   4a524:	1809883a 	mov	r4,r3
   4a528:	b00b883a 	mov	r5,r22
   4a52c:	8a22b03a 	or	r17,r17,r8
   4a530:	3524983a 	sll	r18,r6,r20
   4a534:	dc400015 	stw	r17,0(sp)
   4a538:	d8c00115 	stw	r3,4(sp)
   4a53c:	004a93c0 	call	4a93c <__umodsi3>
   4a540:	d8c00117 	ldw	r3,4(sp)
   4a544:	b00b883a 	mov	r5,r22
   4a548:	1039883a 	mov	fp,r2
   4a54c:	1809883a 	mov	r4,r3
   4a550:	004a8d80 	call	4a8d8 <__udivsi3>
   4a554:	adffffcc 	andi	r23,r21,65535
   4a558:	100b883a 	mov	r5,r2
   4a55c:	b809883a 	mov	r4,r23
   4a560:	1023883a 	mov	r17,r2
   4a564:	004a9940 	call	4a994 <__mulsi3>
   4a568:	d9400017 	ldw	r5,0(sp)
   4a56c:	e008943a 	slli	r4,fp,16
   4a570:	8520983a 	sll	r16,r16,r20
   4a574:	2806d43a 	srli	r3,r5,16
   4a578:	1906b03a 	or	r3,r3,r4
   4a57c:	1880042e 	bgeu	r3,r2,4a590 <__umoddi3+0x374>
   4a580:	1d47883a 	add	r3,r3,r21
   4a584:	893fffc4 	addi	r4,r17,-1
   4a588:	1d40892e 	bgeu	r3,r21,4a7b0 <__umoddi3+0x594>
   4a58c:	2023883a 	mov	r17,r4
   4a590:	18b9c83a 	sub	fp,r3,r2
   4a594:	b00b883a 	mov	r5,r22
   4a598:	e009883a 	mov	r4,fp
   4a59c:	004a93c0 	call	4a93c <__umodsi3>
   4a5a0:	b00b883a 	mov	r5,r22
   4a5a4:	e009883a 	mov	r4,fp
   4a5a8:	d8800215 	stw	r2,8(sp)
   4a5ac:	004a8d80 	call	4a8d8 <__udivsi3>
   4a5b0:	100b883a 	mov	r5,r2
   4a5b4:	b809883a 	mov	r4,r23
   4a5b8:	102d883a 	mov	r22,r2
   4a5bc:	004a9940 	call	4a994 <__mulsi3>
   4a5c0:	d9800217 	ldw	r6,8(sp)
   4a5c4:	d8c00017 	ldw	r3,0(sp)
   4a5c8:	300c943a 	slli	r6,r6,16
   4a5cc:	1a3fffcc 	andi	r8,r3,65535
   4a5d0:	4190b03a 	or	r8,r8,r6
   4a5d4:	4080042e 	bgeu	r8,r2,4a5e8 <__umoddi3+0x3cc>
   4a5d8:	4551883a 	add	r8,r8,r21
   4a5dc:	b0ffffc4 	addi	r3,r22,-1
   4a5e0:	45406f2e 	bgeu	r8,r21,4a7a0 <__umoddi3+0x584>
   4a5e4:	182d883a 	mov	r22,r3
   4a5e8:	880e943a 	slli	r7,r17,16
   4a5ec:	9006d43a 	srli	r3,r18,16
   4a5f0:	91bfffcc 	andi	r6,r18,65535
   4a5f4:	3dacb03a 	or	r22,r7,r22
   4a5f8:	b02ed43a 	srli	r23,r22,16
   4a5fc:	b5bfffcc 	andi	r22,r22,65535
   4a600:	300b883a 	mov	r5,r6
   4a604:	b009883a 	mov	r4,r22
   4a608:	40a3c83a 	sub	r17,r8,r2
   4a60c:	d8c00115 	stw	r3,4(sp)
   4a610:	d9800215 	stw	r6,8(sp)
   4a614:	004a9940 	call	4a994 <__mulsi3>
   4a618:	d9800217 	ldw	r6,8(sp)
   4a61c:	b809883a 	mov	r4,r23
   4a620:	1039883a 	mov	fp,r2
   4a624:	300b883a 	mov	r5,r6
   4a628:	004a9940 	call	4a994 <__mulsi3>
   4a62c:	d8c00117 	ldw	r3,4(sp)
   4a630:	b809883a 	mov	r4,r23
   4a634:	d8800215 	stw	r2,8(sp)
   4a638:	180b883a 	mov	r5,r3
   4a63c:	004a9940 	call	4a994 <__mulsi3>
   4a640:	d8c00117 	ldw	r3,4(sp)
   4a644:	b009883a 	mov	r4,r22
   4a648:	102f883a 	mov	r23,r2
   4a64c:	180b883a 	mov	r5,r3
   4a650:	004a9940 	call	4a994 <__mulsi3>
   4a654:	d9800217 	ldw	r6,8(sp)
   4a658:	e006d43a 	srli	r3,fp,16
   4a65c:	1185883a 	add	r2,r2,r6
   4a660:	1885883a 	add	r2,r3,r2
   4a664:	1180022e 	bgeu	r2,r6,4a670 <__umoddi3+0x454>
   4a668:	00c00074 	movhi	r3,1
   4a66c:	b8ef883a 	add	r23,r23,r3
   4a670:	1006d43a 	srli	r3,r2,16
   4a674:	1004943a 	slli	r2,r2,16
   4a678:	e73fffcc 	andi	fp,fp,65535
   4a67c:	1dc7883a 	add	r3,r3,r23
   4a680:	1739883a 	add	fp,r2,fp
   4a684:	88c03a36 	bltu	r17,r3,4a770 <__umoddi3+0x554>
   4a688:	88c05126 	beq	r17,r3,4a7d0 <__umoddi3+0x5b4>
   4a68c:	88c9c83a 	sub	r4,r17,r3
   4a690:	e00f883a 	mov	r7,fp
   4a694:	81cfc83a 	sub	r7,r16,r7
   4a698:	81c7803a 	cmpltu	r3,r16,r7
   4a69c:	20c7c83a 	sub	r3,r4,r3
   4a6a0:	1cc4983a 	sll	r2,r3,r19
   4a6a4:	3d0ed83a 	srl	r7,r7,r20
   4a6a8:	1d06d83a 	srl	r3,r3,r20
   4a6ac:	11c4b03a 	or	r2,r2,r7
   4a6b0:	003f7c06 	br	4a4a4 <__alt_data_end+0xfffee0e4>
   4a6b4:	9ca6983a 	sll	r19,r19,r18
   4a6b8:	88f8d83a 	srl	fp,r17,r3
   4a6bc:	80c4d83a 	srl	r2,r16,r3
   4a6c0:	982cd43a 	srli	r22,r19,16
   4a6c4:	8ca2983a 	sll	r17,r17,r18
   4a6c8:	e009883a 	mov	r4,fp
   4a6cc:	b00b883a 	mov	r5,r22
   4a6d0:	146ab03a 	or	r21,r2,r17
   4a6d4:	004a93c0 	call	4a93c <__umodsi3>
   4a6d8:	b00b883a 	mov	r5,r22
   4a6dc:	e009883a 	mov	r4,fp
   4a6e0:	1029883a 	mov	r20,r2
   4a6e4:	9dffffcc 	andi	r23,r19,65535
   4a6e8:	004a8d80 	call	4a8d8 <__udivsi3>
   4a6ec:	b809883a 	mov	r4,r23
   4a6f0:	100b883a 	mov	r5,r2
   4a6f4:	004a9940 	call	4a994 <__mulsi3>
   4a6f8:	a008943a 	slli	r4,r20,16
   4a6fc:	a806d43a 	srli	r3,r21,16
   4a700:	84a8983a 	sll	r20,r16,r18
   4a704:	1906b03a 	or	r3,r3,r4
   4a708:	1880042e 	bgeu	r3,r2,4a71c <__umoddi3+0x500>
   4a70c:	1cc7883a 	add	r3,r3,r19
   4a710:	1cc00236 	bltu	r3,r19,4a71c <__umoddi3+0x500>
   4a714:	1880012e 	bgeu	r3,r2,4a71c <__umoddi3+0x500>
   4a718:	1cc7883a 	add	r3,r3,r19
   4a71c:	18a3c83a 	sub	r17,r3,r2
   4a720:	b00b883a 	mov	r5,r22
   4a724:	8809883a 	mov	r4,r17
   4a728:	004a93c0 	call	4a93c <__umodsi3>
   4a72c:	b00b883a 	mov	r5,r22
   4a730:	8809883a 	mov	r4,r17
   4a734:	1021883a 	mov	r16,r2
   4a738:	004a8d80 	call	4a8d8 <__udivsi3>
   4a73c:	100b883a 	mov	r5,r2
   4a740:	b809883a 	mov	r4,r23
   4a744:	8020943a 	slli	r16,r16,16
   4a748:	004a9940 	call	4a994 <__mulsi3>
   4a74c:	a8ffffcc 	andi	r3,r21,65535
   4a750:	1c06b03a 	or	r3,r3,r16
   4a754:	1880042e 	bgeu	r3,r2,4a768 <__umoddi3+0x54c>
   4a758:	1cc7883a 	add	r3,r3,r19
   4a75c:	1cc00236 	bltu	r3,r19,4a768 <__umoddi3+0x54c>
   4a760:	1880012e 	bgeu	r3,r2,4a768 <__umoddi3+0x54c>
   4a764:	1cc7883a 	add	r3,r3,r19
   4a768:	18a3c83a 	sub	r17,r3,r2
   4a76c:	003f2906 	br	4a414 <__alt_data_end+0xfffee054>
   4a770:	e48fc83a 	sub	r7,fp,r18
   4a774:	1d49c83a 	sub	r4,r3,r21
   4a778:	e1f9803a 	cmpltu	fp,fp,r7
   4a77c:	2739c83a 	sub	fp,r4,fp
   4a780:	8f09c83a 	sub	r4,r17,fp
   4a784:	003fc306 	br	4a694 <__alt_data_end+0xfffee2d4>
   4a788:	01000604 	movi	r4,24
   4a78c:	003ef906 	br	4a374 <__alt_data_end+0xfffedfb4>
   4a790:	00800604 	movi	r2,24
   4a794:	003f1306 	br	4a3e4 <__alt_data_end+0xfffee024>
   4a798:	01000604 	movi	r4,24
   4a79c:	003eb606 	br	4a278 <__alt_data_end+0xfffedeb8>
   4a7a0:	40bf902e 	bgeu	r8,r2,4a5e4 <__alt_data_end+0xfffee224>
   4a7a4:	b5bfff84 	addi	r22,r22,-2
   4a7a8:	4551883a 	add	r8,r8,r21
   4a7ac:	003f8e06 	br	4a5e8 <__alt_data_end+0xfffee228>
   4a7b0:	18bf762e 	bgeu	r3,r2,4a58c <__alt_data_end+0xfffee1cc>
   4a7b4:	8c7fff84 	addi	r17,r17,-2
   4a7b8:	1d47883a 	add	r3,r3,r21
   4a7bc:	003f7406 	br	4a590 <__alt_data_end+0xfffee1d0>
   4a7c0:	1cc7883a 	add	r3,r3,r19
   4a7c4:	003ecd06 	br	4a2fc <__alt_data_end+0xfffedf3c>
   4a7c8:	8005883a 	mov	r2,r16
   4a7cc:	003ef806 	br	4a3b0 <__alt_data_end+0xfffedff0>
   4a7d0:	873fe736 	bltu	r16,fp,4a770 <__alt_data_end+0xfffee3b0>
   4a7d4:	e00f883a 	mov	r7,fp
   4a7d8:	0009883a 	mov	r4,zero
   4a7dc:	003fad06 	br	4a694 <__alt_data_end+0xfffee2d4>

0004a7e0 <__divsi3>:
   4a7e0:	20001b16 	blt	r4,zero,4a850 <__divsi3+0x70>
   4a7e4:	000f883a 	mov	r7,zero
   4a7e8:	28001616 	blt	r5,zero,4a844 <__divsi3+0x64>
   4a7ec:	200d883a 	mov	r6,r4
   4a7f0:	29001a2e 	bgeu	r5,r4,4a85c <__divsi3+0x7c>
   4a7f4:	00800804 	movi	r2,32
   4a7f8:	00c00044 	movi	r3,1
   4a7fc:	00000106 	br	4a804 <__divsi3+0x24>
   4a800:	10000d26 	beq	r2,zero,4a838 <__divsi3+0x58>
   4a804:	294b883a 	add	r5,r5,r5
   4a808:	10bfffc4 	addi	r2,r2,-1
   4a80c:	18c7883a 	add	r3,r3,r3
   4a810:	293ffb36 	bltu	r5,r4,4a800 <__alt_data_end+0xfffee440>
   4a814:	0005883a 	mov	r2,zero
   4a818:	18000726 	beq	r3,zero,4a838 <__divsi3+0x58>
   4a81c:	0005883a 	mov	r2,zero
   4a820:	31400236 	bltu	r6,r5,4a82c <__divsi3+0x4c>
   4a824:	314dc83a 	sub	r6,r6,r5
   4a828:	10c4b03a 	or	r2,r2,r3
   4a82c:	1806d07a 	srli	r3,r3,1
   4a830:	280ad07a 	srli	r5,r5,1
   4a834:	183ffa1e 	bne	r3,zero,4a820 <__alt_data_end+0xfffee460>
   4a838:	38000126 	beq	r7,zero,4a840 <__divsi3+0x60>
   4a83c:	0085c83a 	sub	r2,zero,r2
   4a840:	f800283a 	ret
   4a844:	014bc83a 	sub	r5,zero,r5
   4a848:	39c0005c 	xori	r7,r7,1
   4a84c:	003fe706 	br	4a7ec <__alt_data_end+0xfffee42c>
   4a850:	0109c83a 	sub	r4,zero,r4
   4a854:	01c00044 	movi	r7,1
   4a858:	003fe306 	br	4a7e8 <__alt_data_end+0xfffee428>
   4a85c:	00c00044 	movi	r3,1
   4a860:	003fee06 	br	4a81c <__alt_data_end+0xfffee45c>

0004a864 <__modsi3>:
   4a864:	20001716 	blt	r4,zero,4a8c4 <__modsi3+0x60>
   4a868:	000f883a 	mov	r7,zero
   4a86c:	2005883a 	mov	r2,r4
   4a870:	28001216 	blt	r5,zero,4a8bc <__modsi3+0x58>
   4a874:	2900162e 	bgeu	r5,r4,4a8d0 <__modsi3+0x6c>
   4a878:	01800804 	movi	r6,32
   4a87c:	00c00044 	movi	r3,1
   4a880:	00000106 	br	4a888 <__modsi3+0x24>
   4a884:	30000a26 	beq	r6,zero,4a8b0 <__modsi3+0x4c>
   4a888:	294b883a 	add	r5,r5,r5
   4a88c:	31bfffc4 	addi	r6,r6,-1
   4a890:	18c7883a 	add	r3,r3,r3
   4a894:	293ffb36 	bltu	r5,r4,4a884 <__alt_data_end+0xfffee4c4>
   4a898:	18000526 	beq	r3,zero,4a8b0 <__modsi3+0x4c>
   4a89c:	1806d07a 	srli	r3,r3,1
   4a8a0:	11400136 	bltu	r2,r5,4a8a8 <__modsi3+0x44>
   4a8a4:	1145c83a 	sub	r2,r2,r5
   4a8a8:	280ad07a 	srli	r5,r5,1
   4a8ac:	183ffb1e 	bne	r3,zero,4a89c <__alt_data_end+0xfffee4dc>
   4a8b0:	38000126 	beq	r7,zero,4a8b8 <__modsi3+0x54>
   4a8b4:	0085c83a 	sub	r2,zero,r2
   4a8b8:	f800283a 	ret
   4a8bc:	014bc83a 	sub	r5,zero,r5
   4a8c0:	003fec06 	br	4a874 <__alt_data_end+0xfffee4b4>
   4a8c4:	0109c83a 	sub	r4,zero,r4
   4a8c8:	01c00044 	movi	r7,1
   4a8cc:	003fe706 	br	4a86c <__alt_data_end+0xfffee4ac>
   4a8d0:	00c00044 	movi	r3,1
   4a8d4:	003ff106 	br	4a89c <__alt_data_end+0xfffee4dc>

0004a8d8 <__udivsi3>:
   4a8d8:	200d883a 	mov	r6,r4
   4a8dc:	2900152e 	bgeu	r5,r4,4a934 <__udivsi3+0x5c>
   4a8e0:	28001416 	blt	r5,zero,4a934 <__udivsi3+0x5c>
   4a8e4:	00800804 	movi	r2,32
   4a8e8:	00c00044 	movi	r3,1
   4a8ec:	00000206 	br	4a8f8 <__udivsi3+0x20>
   4a8f0:	10000e26 	beq	r2,zero,4a92c <__udivsi3+0x54>
   4a8f4:	28000516 	blt	r5,zero,4a90c <__udivsi3+0x34>
   4a8f8:	294b883a 	add	r5,r5,r5
   4a8fc:	10bfffc4 	addi	r2,r2,-1
   4a900:	18c7883a 	add	r3,r3,r3
   4a904:	293ffa36 	bltu	r5,r4,4a8f0 <__alt_data_end+0xfffee530>
   4a908:	18000826 	beq	r3,zero,4a92c <__udivsi3+0x54>
   4a90c:	0005883a 	mov	r2,zero
   4a910:	31400236 	bltu	r6,r5,4a91c <__udivsi3+0x44>
   4a914:	314dc83a 	sub	r6,r6,r5
   4a918:	10c4b03a 	or	r2,r2,r3
   4a91c:	1806d07a 	srli	r3,r3,1
   4a920:	280ad07a 	srli	r5,r5,1
   4a924:	183ffa1e 	bne	r3,zero,4a910 <__alt_data_end+0xfffee550>
   4a928:	f800283a 	ret
   4a92c:	0005883a 	mov	r2,zero
   4a930:	f800283a 	ret
   4a934:	00c00044 	movi	r3,1
   4a938:	003ff406 	br	4a90c <__alt_data_end+0xfffee54c>

0004a93c <__umodsi3>:
   4a93c:	2005883a 	mov	r2,r4
   4a940:	2900122e 	bgeu	r5,r4,4a98c <__umodsi3+0x50>
   4a944:	28001116 	blt	r5,zero,4a98c <__umodsi3+0x50>
   4a948:	01800804 	movi	r6,32
   4a94c:	00c00044 	movi	r3,1
   4a950:	00000206 	br	4a95c <__umodsi3+0x20>
   4a954:	30000c26 	beq	r6,zero,4a988 <__umodsi3+0x4c>
   4a958:	28000516 	blt	r5,zero,4a970 <__umodsi3+0x34>
   4a95c:	294b883a 	add	r5,r5,r5
   4a960:	31bfffc4 	addi	r6,r6,-1
   4a964:	18c7883a 	add	r3,r3,r3
   4a968:	293ffa36 	bltu	r5,r4,4a954 <__alt_data_end+0xfffee594>
   4a96c:	18000626 	beq	r3,zero,4a988 <__umodsi3+0x4c>
   4a970:	1806d07a 	srli	r3,r3,1
   4a974:	11400136 	bltu	r2,r5,4a97c <__umodsi3+0x40>
   4a978:	1145c83a 	sub	r2,r2,r5
   4a97c:	280ad07a 	srli	r5,r5,1
   4a980:	183ffb1e 	bne	r3,zero,4a970 <__alt_data_end+0xfffee5b0>
   4a984:	f800283a 	ret
   4a988:	f800283a 	ret
   4a98c:	00c00044 	movi	r3,1
   4a990:	003ff706 	br	4a970 <__alt_data_end+0xfffee5b0>

0004a994 <__mulsi3>:
   4a994:	0005883a 	mov	r2,zero
   4a998:	20000726 	beq	r4,zero,4a9b8 <__mulsi3+0x24>
   4a99c:	20c0004c 	andi	r3,r4,1
   4a9a0:	2008d07a 	srli	r4,r4,1
   4a9a4:	18000126 	beq	r3,zero,4a9ac <__mulsi3+0x18>
   4a9a8:	1145883a 	add	r2,r2,r5
   4a9ac:	294b883a 	add	r5,r5,r5
   4a9b0:	203ffa1e 	bne	r4,zero,4a99c <__alt_data_end+0xfffee5dc>
   4a9b4:	f800283a 	ret
   4a9b8:	f800283a 	ret

0004a9bc <__adddf3>:
   4a9bc:	02c00434 	movhi	r11,16
   4a9c0:	5affffc4 	addi	r11,r11,-1
   4a9c4:	2806d7fa 	srli	r3,r5,31
   4a9c8:	2ad4703a 	and	r10,r5,r11
   4a9cc:	3ad2703a 	and	r9,r7,r11
   4a9d0:	3804d53a 	srli	r2,r7,20
   4a9d4:	3018d77a 	srli	r12,r6,29
   4a9d8:	280ad53a 	srli	r5,r5,20
   4a9dc:	501490fa 	slli	r10,r10,3
   4a9e0:	2010d77a 	srli	r8,r4,29
   4a9e4:	481290fa 	slli	r9,r9,3
   4a9e8:	380ed7fa 	srli	r7,r7,31
   4a9ec:	defffb04 	addi	sp,sp,-20
   4a9f0:	dc800215 	stw	r18,8(sp)
   4a9f4:	dc400115 	stw	r17,4(sp)
   4a9f8:	dc000015 	stw	r16,0(sp)
   4a9fc:	dfc00415 	stw	ra,16(sp)
   4aa00:	dcc00315 	stw	r19,12(sp)
   4aa04:	1c803fcc 	andi	r18,r3,255
   4aa08:	2c01ffcc 	andi	r16,r5,2047
   4aa0c:	5210b03a 	or	r8,r10,r8
   4aa10:	202290fa 	slli	r17,r4,3
   4aa14:	1081ffcc 	andi	r2,r2,2047
   4aa18:	4b12b03a 	or	r9,r9,r12
   4aa1c:	300c90fa 	slli	r6,r6,3
   4aa20:	91c07526 	beq	r18,r7,4abf8 <__adddf3+0x23c>
   4aa24:	8087c83a 	sub	r3,r16,r2
   4aa28:	00c0ab0e 	bge	zero,r3,4acd8 <__adddf3+0x31c>
   4aa2c:	10002a1e 	bne	r2,zero,4aad8 <__adddf3+0x11c>
   4aa30:	4984b03a 	or	r2,r9,r6
   4aa34:	1000961e 	bne	r2,zero,4ac90 <__adddf3+0x2d4>
   4aa38:	888001cc 	andi	r2,r17,7
   4aa3c:	10000726 	beq	r2,zero,4aa5c <__adddf3+0xa0>
   4aa40:	888003cc 	andi	r2,r17,15
   4aa44:	00c00104 	movi	r3,4
   4aa48:	10c00426 	beq	r2,r3,4aa5c <__adddf3+0xa0>
   4aa4c:	88c7883a 	add	r3,r17,r3
   4aa50:	1c63803a 	cmpltu	r17,r3,r17
   4aa54:	4451883a 	add	r8,r8,r17
   4aa58:	1823883a 	mov	r17,r3
   4aa5c:	4080202c 	andhi	r2,r8,128
   4aa60:	10005926 	beq	r2,zero,4abc8 <__adddf3+0x20c>
   4aa64:	84000044 	addi	r16,r16,1
   4aa68:	0081ffc4 	movi	r2,2047
   4aa6c:	8080ba26 	beq	r16,r2,4ad58 <__adddf3+0x39c>
   4aa70:	00bfe034 	movhi	r2,65408
   4aa74:	10bfffc4 	addi	r2,r2,-1
   4aa78:	4090703a 	and	r8,r8,r2
   4aa7c:	4004977a 	slli	r2,r8,29
   4aa80:	4010927a 	slli	r8,r8,9
   4aa84:	8822d0fa 	srli	r17,r17,3
   4aa88:	8401ffcc 	andi	r16,r16,2047
   4aa8c:	4010d33a 	srli	r8,r8,12
   4aa90:	9007883a 	mov	r3,r18
   4aa94:	1444b03a 	or	r2,r2,r17
   4aa98:	8401ffcc 	andi	r16,r16,2047
   4aa9c:	8020953a 	slli	r16,r16,20
   4aaa0:	18c03fcc 	andi	r3,r3,255
   4aaa4:	01000434 	movhi	r4,16
   4aaa8:	213fffc4 	addi	r4,r4,-1
   4aaac:	180697fa 	slli	r3,r3,31
   4aab0:	4110703a 	and	r8,r8,r4
   4aab4:	4410b03a 	or	r8,r8,r16
   4aab8:	40c6b03a 	or	r3,r8,r3
   4aabc:	dfc00417 	ldw	ra,16(sp)
   4aac0:	dcc00317 	ldw	r19,12(sp)
   4aac4:	dc800217 	ldw	r18,8(sp)
   4aac8:	dc400117 	ldw	r17,4(sp)
   4aacc:	dc000017 	ldw	r16,0(sp)
   4aad0:	dec00504 	addi	sp,sp,20
   4aad4:	f800283a 	ret
   4aad8:	0081ffc4 	movi	r2,2047
   4aadc:	80bfd626 	beq	r16,r2,4aa38 <__alt_data_end+0xfffee678>
   4aae0:	4a402034 	orhi	r9,r9,128
   4aae4:	00800e04 	movi	r2,56
   4aae8:	10c09f16 	blt	r2,r3,4ad68 <__adddf3+0x3ac>
   4aaec:	008007c4 	movi	r2,31
   4aaf0:	10c0c216 	blt	r2,r3,4adfc <__adddf3+0x440>
   4aaf4:	00800804 	movi	r2,32
   4aaf8:	10c5c83a 	sub	r2,r2,r3
   4aafc:	488a983a 	sll	r5,r9,r2
   4ab00:	30c8d83a 	srl	r4,r6,r3
   4ab04:	3084983a 	sll	r2,r6,r2
   4ab08:	48c6d83a 	srl	r3,r9,r3
   4ab0c:	290cb03a 	or	r6,r5,r4
   4ab10:	1004c03a 	cmpne	r2,r2,zero
   4ab14:	308cb03a 	or	r6,r6,r2
   4ab18:	898dc83a 	sub	r6,r17,r6
   4ab1c:	89a3803a 	cmpltu	r17,r17,r6
   4ab20:	40d1c83a 	sub	r8,r8,r3
   4ab24:	4451c83a 	sub	r8,r8,r17
   4ab28:	3023883a 	mov	r17,r6
   4ab2c:	4080202c 	andhi	r2,r8,128
   4ab30:	10002326 	beq	r2,zero,4abc0 <__adddf3+0x204>
   4ab34:	04c02034 	movhi	r19,128
   4ab38:	9cffffc4 	addi	r19,r19,-1
   4ab3c:	44e6703a 	and	r19,r8,r19
   4ab40:	98007626 	beq	r19,zero,4ad1c <__adddf3+0x360>
   4ab44:	9809883a 	mov	r4,r19
   4ab48:	004d1fc0 	call	4d1fc <__clzsi2>
   4ab4c:	10fffe04 	addi	r3,r2,-8
   4ab50:	010007c4 	movi	r4,31
   4ab54:	20c07716 	blt	r4,r3,4ad34 <__adddf3+0x378>
   4ab58:	00800804 	movi	r2,32
   4ab5c:	10c5c83a 	sub	r2,r2,r3
   4ab60:	8884d83a 	srl	r2,r17,r2
   4ab64:	98d0983a 	sll	r8,r19,r3
   4ab68:	88e2983a 	sll	r17,r17,r3
   4ab6c:	1204b03a 	or	r2,r2,r8
   4ab70:	1c007416 	blt	r3,r16,4ad44 <__adddf3+0x388>
   4ab74:	1c21c83a 	sub	r16,r3,r16
   4ab78:	82000044 	addi	r8,r16,1
   4ab7c:	00c007c4 	movi	r3,31
   4ab80:	1a009116 	blt	r3,r8,4adc8 <__adddf3+0x40c>
   4ab84:	00c00804 	movi	r3,32
   4ab88:	1a07c83a 	sub	r3,r3,r8
   4ab8c:	8a08d83a 	srl	r4,r17,r8
   4ab90:	88e2983a 	sll	r17,r17,r3
   4ab94:	10c6983a 	sll	r3,r2,r3
   4ab98:	1210d83a 	srl	r8,r2,r8
   4ab9c:	8804c03a 	cmpne	r2,r17,zero
   4aba0:	1906b03a 	or	r3,r3,r4
   4aba4:	18a2b03a 	or	r17,r3,r2
   4aba8:	0021883a 	mov	r16,zero
   4abac:	003fa206 	br	4aa38 <__alt_data_end+0xfffee678>
   4abb0:	1890b03a 	or	r8,r3,r2
   4abb4:	40017d26 	beq	r8,zero,4b1ac <__adddf3+0x7f0>
   4abb8:	1011883a 	mov	r8,r2
   4abbc:	1823883a 	mov	r17,r3
   4abc0:	888001cc 	andi	r2,r17,7
   4abc4:	103f9e1e 	bne	r2,zero,4aa40 <__alt_data_end+0xfffee680>
   4abc8:	4004977a 	slli	r2,r8,29
   4abcc:	8822d0fa 	srli	r17,r17,3
   4abd0:	4010d0fa 	srli	r8,r8,3
   4abd4:	9007883a 	mov	r3,r18
   4abd8:	1444b03a 	or	r2,r2,r17
   4abdc:	0101ffc4 	movi	r4,2047
   4abe0:	81002426 	beq	r16,r4,4ac74 <__adddf3+0x2b8>
   4abe4:	8120703a 	and	r16,r16,r4
   4abe8:	01000434 	movhi	r4,16
   4abec:	213fffc4 	addi	r4,r4,-1
   4abf0:	4110703a 	and	r8,r8,r4
   4abf4:	003fa806 	br	4aa98 <__alt_data_end+0xfffee6d8>
   4abf8:	8089c83a 	sub	r4,r16,r2
   4abfc:	01005e0e 	bge	zero,r4,4ad78 <__adddf3+0x3bc>
   4ac00:	10002b26 	beq	r2,zero,4acb0 <__adddf3+0x2f4>
   4ac04:	0081ffc4 	movi	r2,2047
   4ac08:	80bf8b26 	beq	r16,r2,4aa38 <__alt_data_end+0xfffee678>
   4ac0c:	4a402034 	orhi	r9,r9,128
   4ac10:	00800e04 	movi	r2,56
   4ac14:	1100a40e 	bge	r2,r4,4aea8 <__adddf3+0x4ec>
   4ac18:	498cb03a 	or	r6,r9,r6
   4ac1c:	300ac03a 	cmpne	r5,r6,zero
   4ac20:	0013883a 	mov	r9,zero
   4ac24:	2c4b883a 	add	r5,r5,r17
   4ac28:	2c63803a 	cmpltu	r17,r5,r17
   4ac2c:	4a11883a 	add	r8,r9,r8
   4ac30:	8a11883a 	add	r8,r17,r8
   4ac34:	2823883a 	mov	r17,r5
   4ac38:	4080202c 	andhi	r2,r8,128
   4ac3c:	103fe026 	beq	r2,zero,4abc0 <__alt_data_end+0xfffee800>
   4ac40:	84000044 	addi	r16,r16,1
   4ac44:	0081ffc4 	movi	r2,2047
   4ac48:	8080d226 	beq	r16,r2,4af94 <__adddf3+0x5d8>
   4ac4c:	00bfe034 	movhi	r2,65408
   4ac50:	10bfffc4 	addi	r2,r2,-1
   4ac54:	4090703a 	and	r8,r8,r2
   4ac58:	880ad07a 	srli	r5,r17,1
   4ac5c:	400897fa 	slli	r4,r8,31
   4ac60:	88c0004c 	andi	r3,r17,1
   4ac64:	28e2b03a 	or	r17,r5,r3
   4ac68:	4010d07a 	srli	r8,r8,1
   4ac6c:	2462b03a 	or	r17,r4,r17
   4ac70:	003f7106 	br	4aa38 <__alt_data_end+0xfffee678>
   4ac74:	4088b03a 	or	r4,r8,r2
   4ac78:	20014526 	beq	r4,zero,4b190 <__adddf3+0x7d4>
   4ac7c:	01000434 	movhi	r4,16
   4ac80:	42000234 	orhi	r8,r8,8
   4ac84:	213fffc4 	addi	r4,r4,-1
   4ac88:	4110703a 	and	r8,r8,r4
   4ac8c:	003f8206 	br	4aa98 <__alt_data_end+0xfffee6d8>
   4ac90:	18ffffc4 	addi	r3,r3,-1
   4ac94:	1800491e 	bne	r3,zero,4adbc <__adddf3+0x400>
   4ac98:	898bc83a 	sub	r5,r17,r6
   4ac9c:	8963803a 	cmpltu	r17,r17,r5
   4aca0:	4251c83a 	sub	r8,r8,r9
   4aca4:	4451c83a 	sub	r8,r8,r17
   4aca8:	2823883a 	mov	r17,r5
   4acac:	003f9f06 	br	4ab2c <__alt_data_end+0xfffee76c>
   4acb0:	4984b03a 	or	r2,r9,r6
   4acb4:	103f6026 	beq	r2,zero,4aa38 <__alt_data_end+0xfffee678>
   4acb8:	213fffc4 	addi	r4,r4,-1
   4acbc:	2000931e 	bne	r4,zero,4af0c <__adddf3+0x550>
   4acc0:	898d883a 	add	r6,r17,r6
   4acc4:	3463803a 	cmpltu	r17,r6,r17
   4acc8:	4251883a 	add	r8,r8,r9
   4accc:	8a11883a 	add	r8,r17,r8
   4acd0:	3023883a 	mov	r17,r6
   4acd4:	003fd806 	br	4ac38 <__alt_data_end+0xfffee878>
   4acd8:	1800541e 	bne	r3,zero,4ae2c <__adddf3+0x470>
   4acdc:	80800044 	addi	r2,r16,1
   4ace0:	1081ffcc 	andi	r2,r2,2047
   4ace4:	00c00044 	movi	r3,1
   4ace8:	1880a00e 	bge	r3,r2,4af6c <__adddf3+0x5b0>
   4acec:	8989c83a 	sub	r4,r17,r6
   4acf0:	8905803a 	cmpltu	r2,r17,r4
   4acf4:	4267c83a 	sub	r19,r8,r9
   4acf8:	98a7c83a 	sub	r19,r19,r2
   4acfc:	9880202c 	andhi	r2,r19,128
   4ad00:	10006326 	beq	r2,zero,4ae90 <__adddf3+0x4d4>
   4ad04:	3463c83a 	sub	r17,r6,r17
   4ad08:	4a07c83a 	sub	r3,r9,r8
   4ad0c:	344d803a 	cmpltu	r6,r6,r17
   4ad10:	19a7c83a 	sub	r19,r3,r6
   4ad14:	3825883a 	mov	r18,r7
   4ad18:	983f8a1e 	bne	r19,zero,4ab44 <__alt_data_end+0xfffee784>
   4ad1c:	8809883a 	mov	r4,r17
   4ad20:	004d1fc0 	call	4d1fc <__clzsi2>
   4ad24:	10800804 	addi	r2,r2,32
   4ad28:	10fffe04 	addi	r3,r2,-8
   4ad2c:	010007c4 	movi	r4,31
   4ad30:	20ff890e 	bge	r4,r3,4ab58 <__alt_data_end+0xfffee798>
   4ad34:	10bff604 	addi	r2,r2,-40
   4ad38:	8884983a 	sll	r2,r17,r2
   4ad3c:	0023883a 	mov	r17,zero
   4ad40:	1c3f8c0e 	bge	r3,r16,4ab74 <__alt_data_end+0xfffee7b4>
   4ad44:	023fe034 	movhi	r8,65408
   4ad48:	423fffc4 	addi	r8,r8,-1
   4ad4c:	80e1c83a 	sub	r16,r16,r3
   4ad50:	1210703a 	and	r8,r2,r8
   4ad54:	003f3806 	br	4aa38 <__alt_data_end+0xfffee678>
   4ad58:	9007883a 	mov	r3,r18
   4ad5c:	0011883a 	mov	r8,zero
   4ad60:	0005883a 	mov	r2,zero
   4ad64:	003f4c06 	br	4aa98 <__alt_data_end+0xfffee6d8>
   4ad68:	498cb03a 	or	r6,r9,r6
   4ad6c:	300cc03a 	cmpne	r6,r6,zero
   4ad70:	0007883a 	mov	r3,zero
   4ad74:	003f6806 	br	4ab18 <__alt_data_end+0xfffee758>
   4ad78:	20009c1e 	bne	r4,zero,4afec <__adddf3+0x630>
   4ad7c:	80800044 	addi	r2,r16,1
   4ad80:	1141ffcc 	andi	r5,r2,2047
   4ad84:	01000044 	movi	r4,1
   4ad88:	2140670e 	bge	r4,r5,4af28 <__adddf3+0x56c>
   4ad8c:	0101ffc4 	movi	r4,2047
   4ad90:	11007f26 	beq	r2,r4,4af90 <__adddf3+0x5d4>
   4ad94:	898d883a 	add	r6,r17,r6
   4ad98:	4247883a 	add	r3,r8,r9
   4ad9c:	3451803a 	cmpltu	r8,r6,r17
   4ada0:	40d1883a 	add	r8,r8,r3
   4ada4:	402297fa 	slli	r17,r8,31
   4ada8:	300cd07a 	srli	r6,r6,1
   4adac:	4010d07a 	srli	r8,r8,1
   4adb0:	1021883a 	mov	r16,r2
   4adb4:	89a2b03a 	or	r17,r17,r6
   4adb8:	003f1f06 	br	4aa38 <__alt_data_end+0xfffee678>
   4adbc:	0081ffc4 	movi	r2,2047
   4adc0:	80bf481e 	bne	r16,r2,4aae4 <__alt_data_end+0xfffee724>
   4adc4:	003f1c06 	br	4aa38 <__alt_data_end+0xfffee678>
   4adc8:	843ff844 	addi	r16,r16,-31
   4adcc:	01000804 	movi	r4,32
   4add0:	1406d83a 	srl	r3,r2,r16
   4add4:	41005026 	beq	r8,r4,4af18 <__adddf3+0x55c>
   4add8:	01001004 	movi	r4,64
   4addc:	2211c83a 	sub	r8,r4,r8
   4ade0:	1204983a 	sll	r2,r2,r8
   4ade4:	88a2b03a 	or	r17,r17,r2
   4ade8:	8822c03a 	cmpne	r17,r17,zero
   4adec:	1c62b03a 	or	r17,r3,r17
   4adf0:	0011883a 	mov	r8,zero
   4adf4:	0021883a 	mov	r16,zero
   4adf8:	003f7106 	br	4abc0 <__alt_data_end+0xfffee800>
   4adfc:	193ff804 	addi	r4,r3,-32
   4ae00:	00800804 	movi	r2,32
   4ae04:	4908d83a 	srl	r4,r9,r4
   4ae08:	18804526 	beq	r3,r2,4af20 <__adddf3+0x564>
   4ae0c:	00801004 	movi	r2,64
   4ae10:	10c5c83a 	sub	r2,r2,r3
   4ae14:	4886983a 	sll	r3,r9,r2
   4ae18:	198cb03a 	or	r6,r3,r6
   4ae1c:	300cc03a 	cmpne	r6,r6,zero
   4ae20:	218cb03a 	or	r6,r4,r6
   4ae24:	0007883a 	mov	r3,zero
   4ae28:	003f3b06 	br	4ab18 <__alt_data_end+0xfffee758>
   4ae2c:	80002a26 	beq	r16,zero,4aed8 <__adddf3+0x51c>
   4ae30:	0101ffc4 	movi	r4,2047
   4ae34:	11006826 	beq	r2,r4,4afd8 <__adddf3+0x61c>
   4ae38:	00c7c83a 	sub	r3,zero,r3
   4ae3c:	42002034 	orhi	r8,r8,128
   4ae40:	01000e04 	movi	r4,56
   4ae44:	20c07c16 	blt	r4,r3,4b038 <__adddf3+0x67c>
   4ae48:	010007c4 	movi	r4,31
   4ae4c:	20c0da16 	blt	r4,r3,4b1b8 <__adddf3+0x7fc>
   4ae50:	01000804 	movi	r4,32
   4ae54:	20c9c83a 	sub	r4,r4,r3
   4ae58:	4114983a 	sll	r10,r8,r4
   4ae5c:	88cad83a 	srl	r5,r17,r3
   4ae60:	8908983a 	sll	r4,r17,r4
   4ae64:	40c6d83a 	srl	r3,r8,r3
   4ae68:	5162b03a 	or	r17,r10,r5
   4ae6c:	2008c03a 	cmpne	r4,r4,zero
   4ae70:	8922b03a 	or	r17,r17,r4
   4ae74:	3463c83a 	sub	r17,r6,r17
   4ae78:	48c7c83a 	sub	r3,r9,r3
   4ae7c:	344d803a 	cmpltu	r6,r6,r17
   4ae80:	1991c83a 	sub	r8,r3,r6
   4ae84:	1021883a 	mov	r16,r2
   4ae88:	3825883a 	mov	r18,r7
   4ae8c:	003f2706 	br	4ab2c <__alt_data_end+0xfffee76c>
   4ae90:	24d0b03a 	or	r8,r4,r19
   4ae94:	40001b1e 	bne	r8,zero,4af04 <__adddf3+0x548>
   4ae98:	0005883a 	mov	r2,zero
   4ae9c:	0007883a 	mov	r3,zero
   4aea0:	0021883a 	mov	r16,zero
   4aea4:	003f4d06 	br	4abdc <__alt_data_end+0xfffee81c>
   4aea8:	008007c4 	movi	r2,31
   4aeac:	11003c16 	blt	r2,r4,4afa0 <__adddf3+0x5e4>
   4aeb0:	00800804 	movi	r2,32
   4aeb4:	1105c83a 	sub	r2,r2,r4
   4aeb8:	488e983a 	sll	r7,r9,r2
   4aebc:	310ad83a 	srl	r5,r6,r4
   4aec0:	3084983a 	sll	r2,r6,r2
   4aec4:	4912d83a 	srl	r9,r9,r4
   4aec8:	394ab03a 	or	r5,r7,r5
   4aecc:	1004c03a 	cmpne	r2,r2,zero
   4aed0:	288ab03a 	or	r5,r5,r2
   4aed4:	003f5306 	br	4ac24 <__alt_data_end+0xfffee864>
   4aed8:	4448b03a 	or	r4,r8,r17
   4aedc:	20003e26 	beq	r4,zero,4afd8 <__adddf3+0x61c>
   4aee0:	00c6303a 	nor	r3,zero,r3
   4aee4:	18003a1e 	bne	r3,zero,4afd0 <__adddf3+0x614>
   4aee8:	3463c83a 	sub	r17,r6,r17
   4aeec:	4a07c83a 	sub	r3,r9,r8
   4aef0:	344d803a 	cmpltu	r6,r6,r17
   4aef4:	1991c83a 	sub	r8,r3,r6
   4aef8:	1021883a 	mov	r16,r2
   4aefc:	3825883a 	mov	r18,r7
   4af00:	003f0a06 	br	4ab2c <__alt_data_end+0xfffee76c>
   4af04:	2023883a 	mov	r17,r4
   4af08:	003f0d06 	br	4ab40 <__alt_data_end+0xfffee780>
   4af0c:	0081ffc4 	movi	r2,2047
   4af10:	80bf3f1e 	bne	r16,r2,4ac10 <__alt_data_end+0xfffee850>
   4af14:	003ec806 	br	4aa38 <__alt_data_end+0xfffee678>
   4af18:	0005883a 	mov	r2,zero
   4af1c:	003fb106 	br	4ade4 <__alt_data_end+0xfffeea24>
   4af20:	0007883a 	mov	r3,zero
   4af24:	003fbc06 	br	4ae18 <__alt_data_end+0xfffeea58>
   4af28:	4444b03a 	or	r2,r8,r17
   4af2c:	8000871e 	bne	r16,zero,4b14c <__adddf3+0x790>
   4af30:	1000ba26 	beq	r2,zero,4b21c <__adddf3+0x860>
   4af34:	4984b03a 	or	r2,r9,r6
   4af38:	103ebf26 	beq	r2,zero,4aa38 <__alt_data_end+0xfffee678>
   4af3c:	8985883a 	add	r2,r17,r6
   4af40:	4247883a 	add	r3,r8,r9
   4af44:	1451803a 	cmpltu	r8,r2,r17
   4af48:	40d1883a 	add	r8,r8,r3
   4af4c:	40c0202c 	andhi	r3,r8,128
   4af50:	1023883a 	mov	r17,r2
   4af54:	183f1a26 	beq	r3,zero,4abc0 <__alt_data_end+0xfffee800>
   4af58:	00bfe034 	movhi	r2,65408
   4af5c:	10bfffc4 	addi	r2,r2,-1
   4af60:	2021883a 	mov	r16,r4
   4af64:	4090703a 	and	r8,r8,r2
   4af68:	003eb306 	br	4aa38 <__alt_data_end+0xfffee678>
   4af6c:	4444b03a 	or	r2,r8,r17
   4af70:	8000291e 	bne	r16,zero,4b018 <__adddf3+0x65c>
   4af74:	10004b1e 	bne	r2,zero,4b0a4 <__adddf3+0x6e8>
   4af78:	4990b03a 	or	r8,r9,r6
   4af7c:	40008b26 	beq	r8,zero,4b1ac <__adddf3+0x7f0>
   4af80:	4811883a 	mov	r8,r9
   4af84:	3023883a 	mov	r17,r6
   4af88:	3825883a 	mov	r18,r7
   4af8c:	003eaa06 	br	4aa38 <__alt_data_end+0xfffee678>
   4af90:	1021883a 	mov	r16,r2
   4af94:	0011883a 	mov	r8,zero
   4af98:	0005883a 	mov	r2,zero
   4af9c:	003f0f06 	br	4abdc <__alt_data_end+0xfffee81c>
   4afa0:	217ff804 	addi	r5,r4,-32
   4afa4:	00800804 	movi	r2,32
   4afa8:	494ad83a 	srl	r5,r9,r5
   4afac:	20807d26 	beq	r4,r2,4b1a4 <__adddf3+0x7e8>
   4afb0:	00801004 	movi	r2,64
   4afb4:	1109c83a 	sub	r4,r2,r4
   4afb8:	4912983a 	sll	r9,r9,r4
   4afbc:	498cb03a 	or	r6,r9,r6
   4afc0:	300cc03a 	cmpne	r6,r6,zero
   4afc4:	298ab03a 	or	r5,r5,r6
   4afc8:	0013883a 	mov	r9,zero
   4afcc:	003f1506 	br	4ac24 <__alt_data_end+0xfffee864>
   4afd0:	0101ffc4 	movi	r4,2047
   4afd4:	113f9a1e 	bne	r2,r4,4ae40 <__alt_data_end+0xfffeea80>
   4afd8:	4811883a 	mov	r8,r9
   4afdc:	3023883a 	mov	r17,r6
   4afe0:	1021883a 	mov	r16,r2
   4afe4:	3825883a 	mov	r18,r7
   4afe8:	003e9306 	br	4aa38 <__alt_data_end+0xfffee678>
   4afec:	8000161e 	bne	r16,zero,4b048 <__adddf3+0x68c>
   4aff0:	444ab03a 	or	r5,r8,r17
   4aff4:	28005126 	beq	r5,zero,4b13c <__adddf3+0x780>
   4aff8:	0108303a 	nor	r4,zero,r4
   4affc:	20004d1e 	bne	r4,zero,4b134 <__adddf3+0x778>
   4b000:	89a3883a 	add	r17,r17,r6
   4b004:	4253883a 	add	r9,r8,r9
   4b008:	898d803a 	cmpltu	r6,r17,r6
   4b00c:	3251883a 	add	r8,r6,r9
   4b010:	1021883a 	mov	r16,r2
   4b014:	003f0806 	br	4ac38 <__alt_data_end+0xfffee878>
   4b018:	1000301e 	bne	r2,zero,4b0dc <__adddf3+0x720>
   4b01c:	4984b03a 	or	r2,r9,r6
   4b020:	10007126 	beq	r2,zero,4b1e8 <__adddf3+0x82c>
   4b024:	4811883a 	mov	r8,r9
   4b028:	3023883a 	mov	r17,r6
   4b02c:	3825883a 	mov	r18,r7
   4b030:	0401ffc4 	movi	r16,2047
   4b034:	003e8006 	br	4aa38 <__alt_data_end+0xfffee678>
   4b038:	4462b03a 	or	r17,r8,r17
   4b03c:	8822c03a 	cmpne	r17,r17,zero
   4b040:	0007883a 	mov	r3,zero
   4b044:	003f8b06 	br	4ae74 <__alt_data_end+0xfffeeab4>
   4b048:	0141ffc4 	movi	r5,2047
   4b04c:	11403b26 	beq	r2,r5,4b13c <__adddf3+0x780>
   4b050:	0109c83a 	sub	r4,zero,r4
   4b054:	42002034 	orhi	r8,r8,128
   4b058:	01400e04 	movi	r5,56
   4b05c:	29006716 	blt	r5,r4,4b1fc <__adddf3+0x840>
   4b060:	014007c4 	movi	r5,31
   4b064:	29007016 	blt	r5,r4,4b228 <__adddf3+0x86c>
   4b068:	01400804 	movi	r5,32
   4b06c:	290bc83a 	sub	r5,r5,r4
   4b070:	4154983a 	sll	r10,r8,r5
   4b074:	890ed83a 	srl	r7,r17,r4
   4b078:	894a983a 	sll	r5,r17,r5
   4b07c:	4108d83a 	srl	r4,r8,r4
   4b080:	51e2b03a 	or	r17,r10,r7
   4b084:	280ac03a 	cmpne	r5,r5,zero
   4b088:	8962b03a 	or	r17,r17,r5
   4b08c:	89a3883a 	add	r17,r17,r6
   4b090:	2253883a 	add	r9,r4,r9
   4b094:	898d803a 	cmpltu	r6,r17,r6
   4b098:	3251883a 	add	r8,r6,r9
   4b09c:	1021883a 	mov	r16,r2
   4b0a0:	003ee506 	br	4ac38 <__alt_data_end+0xfffee878>
   4b0a4:	4984b03a 	or	r2,r9,r6
   4b0a8:	103e6326 	beq	r2,zero,4aa38 <__alt_data_end+0xfffee678>
   4b0ac:	8987c83a 	sub	r3,r17,r6
   4b0b0:	88c9803a 	cmpltu	r4,r17,r3
   4b0b4:	4245c83a 	sub	r2,r8,r9
   4b0b8:	1105c83a 	sub	r2,r2,r4
   4b0bc:	1100202c 	andhi	r4,r2,128
   4b0c0:	203ebb26 	beq	r4,zero,4abb0 <__alt_data_end+0xfffee7f0>
   4b0c4:	3463c83a 	sub	r17,r6,r17
   4b0c8:	4a07c83a 	sub	r3,r9,r8
   4b0cc:	344d803a 	cmpltu	r6,r6,r17
   4b0d0:	1991c83a 	sub	r8,r3,r6
   4b0d4:	3825883a 	mov	r18,r7
   4b0d8:	003e5706 	br	4aa38 <__alt_data_end+0xfffee678>
   4b0dc:	4984b03a 	or	r2,r9,r6
   4b0e0:	10002e26 	beq	r2,zero,4b19c <__adddf3+0x7e0>
   4b0e4:	4004d0fa 	srli	r2,r8,3
   4b0e8:	8822d0fa 	srli	r17,r17,3
   4b0ec:	4010977a 	slli	r8,r8,29
   4b0f0:	10c0022c 	andhi	r3,r2,8
   4b0f4:	4462b03a 	or	r17,r8,r17
   4b0f8:	18000826 	beq	r3,zero,4b11c <__adddf3+0x760>
   4b0fc:	4808d0fa 	srli	r4,r9,3
   4b100:	20c0022c 	andhi	r3,r4,8
   4b104:	1800051e 	bne	r3,zero,4b11c <__adddf3+0x760>
   4b108:	300cd0fa 	srli	r6,r6,3
   4b10c:	4806977a 	slli	r3,r9,29
   4b110:	2005883a 	mov	r2,r4
   4b114:	3825883a 	mov	r18,r7
   4b118:	19a2b03a 	or	r17,r3,r6
   4b11c:	8810d77a 	srli	r8,r17,29
   4b120:	100490fa 	slli	r2,r2,3
   4b124:	882290fa 	slli	r17,r17,3
   4b128:	0401ffc4 	movi	r16,2047
   4b12c:	4090b03a 	or	r8,r8,r2
   4b130:	003e4106 	br	4aa38 <__alt_data_end+0xfffee678>
   4b134:	0141ffc4 	movi	r5,2047
   4b138:	117fc71e 	bne	r2,r5,4b058 <__alt_data_end+0xfffeec98>
   4b13c:	4811883a 	mov	r8,r9
   4b140:	3023883a 	mov	r17,r6
   4b144:	1021883a 	mov	r16,r2
   4b148:	003e3b06 	br	4aa38 <__alt_data_end+0xfffee678>
   4b14c:	10002f26 	beq	r2,zero,4b20c <__adddf3+0x850>
   4b150:	4984b03a 	or	r2,r9,r6
   4b154:	10001126 	beq	r2,zero,4b19c <__adddf3+0x7e0>
   4b158:	4004d0fa 	srli	r2,r8,3
   4b15c:	8822d0fa 	srli	r17,r17,3
   4b160:	4010977a 	slli	r8,r8,29
   4b164:	10c0022c 	andhi	r3,r2,8
   4b168:	4462b03a 	or	r17,r8,r17
   4b16c:	183feb26 	beq	r3,zero,4b11c <__alt_data_end+0xfffeed5c>
   4b170:	4808d0fa 	srli	r4,r9,3
   4b174:	20c0022c 	andhi	r3,r4,8
   4b178:	183fe81e 	bne	r3,zero,4b11c <__alt_data_end+0xfffeed5c>
   4b17c:	300cd0fa 	srli	r6,r6,3
   4b180:	4806977a 	slli	r3,r9,29
   4b184:	2005883a 	mov	r2,r4
   4b188:	19a2b03a 	or	r17,r3,r6
   4b18c:	003fe306 	br	4b11c <__alt_data_end+0xfffeed5c>
   4b190:	0011883a 	mov	r8,zero
   4b194:	0005883a 	mov	r2,zero
   4b198:	003e3f06 	br	4aa98 <__alt_data_end+0xfffee6d8>
   4b19c:	0401ffc4 	movi	r16,2047
   4b1a0:	003e2506 	br	4aa38 <__alt_data_end+0xfffee678>
   4b1a4:	0013883a 	mov	r9,zero
   4b1a8:	003f8406 	br	4afbc <__alt_data_end+0xfffeebfc>
   4b1ac:	0005883a 	mov	r2,zero
   4b1b0:	0007883a 	mov	r3,zero
   4b1b4:	003e8906 	br	4abdc <__alt_data_end+0xfffee81c>
   4b1b8:	197ff804 	addi	r5,r3,-32
   4b1bc:	01000804 	movi	r4,32
   4b1c0:	414ad83a 	srl	r5,r8,r5
   4b1c4:	19002426 	beq	r3,r4,4b258 <__adddf3+0x89c>
   4b1c8:	01001004 	movi	r4,64
   4b1cc:	20c7c83a 	sub	r3,r4,r3
   4b1d0:	40c6983a 	sll	r3,r8,r3
   4b1d4:	1c46b03a 	or	r3,r3,r17
   4b1d8:	1806c03a 	cmpne	r3,r3,zero
   4b1dc:	28e2b03a 	or	r17,r5,r3
   4b1e0:	0007883a 	mov	r3,zero
   4b1e4:	003f2306 	br	4ae74 <__alt_data_end+0xfffeeab4>
   4b1e8:	0007883a 	mov	r3,zero
   4b1ec:	5811883a 	mov	r8,r11
   4b1f0:	00bfffc4 	movi	r2,-1
   4b1f4:	0401ffc4 	movi	r16,2047
   4b1f8:	003e7806 	br	4abdc <__alt_data_end+0xfffee81c>
   4b1fc:	4462b03a 	or	r17,r8,r17
   4b200:	8822c03a 	cmpne	r17,r17,zero
   4b204:	0009883a 	mov	r4,zero
   4b208:	003fa006 	br	4b08c <__alt_data_end+0xfffeeccc>
   4b20c:	4811883a 	mov	r8,r9
   4b210:	3023883a 	mov	r17,r6
   4b214:	0401ffc4 	movi	r16,2047
   4b218:	003e0706 	br	4aa38 <__alt_data_end+0xfffee678>
   4b21c:	4811883a 	mov	r8,r9
   4b220:	3023883a 	mov	r17,r6
   4b224:	003e0406 	br	4aa38 <__alt_data_end+0xfffee678>
   4b228:	21fff804 	addi	r7,r4,-32
   4b22c:	01400804 	movi	r5,32
   4b230:	41ced83a 	srl	r7,r8,r7
   4b234:	21400a26 	beq	r4,r5,4b260 <__adddf3+0x8a4>
   4b238:	01401004 	movi	r5,64
   4b23c:	2909c83a 	sub	r4,r5,r4
   4b240:	4108983a 	sll	r4,r8,r4
   4b244:	2448b03a 	or	r4,r4,r17
   4b248:	2008c03a 	cmpne	r4,r4,zero
   4b24c:	3922b03a 	or	r17,r7,r4
   4b250:	0009883a 	mov	r4,zero
   4b254:	003f8d06 	br	4b08c <__alt_data_end+0xfffeeccc>
   4b258:	0007883a 	mov	r3,zero
   4b25c:	003fdd06 	br	4b1d4 <__alt_data_end+0xfffeee14>
   4b260:	0009883a 	mov	r4,zero
   4b264:	003ff706 	br	4b244 <__alt_data_end+0xfffeee84>

0004b268 <__divdf3>:
   4b268:	defff004 	addi	sp,sp,-64
   4b26c:	dc800815 	stw	r18,32(sp)
   4b270:	2824d53a 	srli	r18,r5,20
   4b274:	dd800c15 	stw	r22,48(sp)
   4b278:	282cd7fa 	srli	r22,r5,31
   4b27c:	dc000615 	stw	r16,24(sp)
   4b280:	04000434 	movhi	r16,16
   4b284:	843fffc4 	addi	r16,r16,-1
   4b288:	dfc00f15 	stw	ra,60(sp)
   4b28c:	df000e15 	stw	fp,56(sp)
   4b290:	ddc00d15 	stw	r23,52(sp)
   4b294:	dd400b15 	stw	r21,44(sp)
   4b298:	dd000a15 	stw	r20,40(sp)
   4b29c:	dcc00915 	stw	r19,36(sp)
   4b2a0:	dc400715 	stw	r17,28(sp)
   4b2a4:	9481ffcc 	andi	r18,r18,2047
   4b2a8:	2c20703a 	and	r16,r5,r16
   4b2ac:	b2003fcc 	andi	r8,r22,255
   4b2b0:	90006126 	beq	r18,zero,4b438 <__divdf3+0x1d0>
   4b2b4:	0081ffc4 	movi	r2,2047
   4b2b8:	202b883a 	mov	r21,r4
   4b2bc:	90803726 	beq	r18,r2,4b39c <__divdf3+0x134>
   4b2c0:	80800434 	orhi	r2,r16,16
   4b2c4:	100490fa 	slli	r2,r2,3
   4b2c8:	2020d77a 	srli	r16,r4,29
   4b2cc:	202a90fa 	slli	r21,r4,3
   4b2d0:	94bf0044 	addi	r18,r18,-1023
   4b2d4:	80a0b03a 	or	r16,r16,r2
   4b2d8:	0013883a 	mov	r9,zero
   4b2dc:	000b883a 	mov	r5,zero
   4b2e0:	3806d53a 	srli	r3,r7,20
   4b2e4:	382ed7fa 	srli	r23,r7,31
   4b2e8:	04400434 	movhi	r17,16
   4b2ec:	8c7fffc4 	addi	r17,r17,-1
   4b2f0:	18c1ffcc 	andi	r3,r3,2047
   4b2f4:	3029883a 	mov	r20,r6
   4b2f8:	3c62703a 	and	r17,r7,r17
   4b2fc:	bf003fcc 	andi	fp,r23,255
   4b300:	18006e26 	beq	r3,zero,4b4bc <__divdf3+0x254>
   4b304:	0081ffc4 	movi	r2,2047
   4b308:	18806626 	beq	r3,r2,4b4a4 <__divdf3+0x23c>
   4b30c:	88800434 	orhi	r2,r17,16
   4b310:	100490fa 	slli	r2,r2,3
   4b314:	3022d77a 	srli	r17,r6,29
   4b318:	302890fa 	slli	r20,r6,3
   4b31c:	18ff0044 	addi	r3,r3,-1023
   4b320:	88a2b03a 	or	r17,r17,r2
   4b324:	000f883a 	mov	r7,zero
   4b328:	b5e6f03a 	xor	r19,r22,r23
   4b32c:	3a4cb03a 	or	r6,r7,r9
   4b330:	008003c4 	movi	r2,15
   4b334:	9809883a 	mov	r4,r19
   4b338:	90c7c83a 	sub	r3,r18,r3
   4b33c:	9cc03fcc 	andi	r19,r19,255
   4b340:	11809636 	bltu	r2,r6,4b59c <__divdf3+0x334>
   4b344:	300c90ba 	slli	r6,r6,2
   4b348:	00800174 	movhi	r2,5
   4b34c:	10acd704 	addi	r2,r2,-19620
   4b350:	308d883a 	add	r6,r6,r2
   4b354:	30800017 	ldw	r2,0(r6)
   4b358:	1000683a 	jmp	r2
   4b35c:	0004b59c 	xori	zero,zero,4822
   4b360:	0004b3d4 	movui	zero,4815
   4b364:	0004b58c 	andi	zero,zero,4822
   4b368:	0004b3c8 	cmpgei	zero,zero,4815
   4b36c:	0004b58c 	andi	zero,zero,4822
   4b370:	0004b560 	cmpeqi	zero,zero,4821
   4b374:	0004b58c 	andi	zero,zero,4822
   4b378:	0004b3c8 	cmpgei	zero,zero,4815
   4b37c:	0004b3d4 	movui	zero,4815
   4b380:	0004b3d4 	movui	zero,4815
   4b384:	0004b560 	cmpeqi	zero,zero,4821
   4b388:	0004b3c8 	cmpgei	zero,zero,4815
   4b38c:	0004b3b8 	rdprs	zero,zero,4814
   4b390:	0004b3b8 	rdprs	zero,zero,4814
   4b394:	0004b3b8 	rdprs	zero,zero,4814
   4b398:	0004b924 	muli	zero,zero,4836
   4b39c:	2404b03a 	or	r2,r4,r16
   4b3a0:	10006c1e 	bne	r2,zero,4b554 <__divdf3+0x2ec>
   4b3a4:	02400204 	movi	r9,8
   4b3a8:	0021883a 	mov	r16,zero
   4b3ac:	002b883a 	mov	r21,zero
   4b3b0:	01400084 	movi	r5,2
   4b3b4:	003fca06 	br	4b2e0 <__alt_data_end+0xfffeef20>
   4b3b8:	8023883a 	mov	r17,r16
   4b3bc:	a829883a 	mov	r20,r21
   4b3c0:	4039883a 	mov	fp,r8
   4b3c4:	280f883a 	mov	r7,r5
   4b3c8:	00800084 	movi	r2,2
   4b3cc:	3881601e 	bne	r7,r2,4b950 <__divdf3+0x6e8>
   4b3d0:	e027883a 	mov	r19,fp
   4b3d4:	9900004c 	andi	r4,r19,1
   4b3d8:	0081ffc4 	movi	r2,2047
   4b3dc:	0021883a 	mov	r16,zero
   4b3e0:	002b883a 	mov	r21,zero
   4b3e4:	1004953a 	slli	r2,r2,20
   4b3e8:	20c03fcc 	andi	r3,r4,255
   4b3ec:	01400434 	movhi	r5,16
   4b3f0:	297fffc4 	addi	r5,r5,-1
   4b3f4:	180697fa 	slli	r3,r3,31
   4b3f8:	8160703a 	and	r16,r16,r5
   4b3fc:	80a0b03a 	or	r16,r16,r2
   4b400:	80c6b03a 	or	r3,r16,r3
   4b404:	a805883a 	mov	r2,r21
   4b408:	dfc00f17 	ldw	ra,60(sp)
   4b40c:	df000e17 	ldw	fp,56(sp)
   4b410:	ddc00d17 	ldw	r23,52(sp)
   4b414:	dd800c17 	ldw	r22,48(sp)
   4b418:	dd400b17 	ldw	r21,44(sp)
   4b41c:	dd000a17 	ldw	r20,40(sp)
   4b420:	dcc00917 	ldw	r19,36(sp)
   4b424:	dc800817 	ldw	r18,32(sp)
   4b428:	dc400717 	ldw	r17,28(sp)
   4b42c:	dc000617 	ldw	r16,24(sp)
   4b430:	dec01004 	addi	sp,sp,64
   4b434:	f800283a 	ret
   4b438:	2404b03a 	or	r2,r4,r16
   4b43c:	2023883a 	mov	r17,r4
   4b440:	10003f26 	beq	r2,zero,4b540 <__divdf3+0x2d8>
   4b444:	80015e26 	beq	r16,zero,4b9c0 <__divdf3+0x758>
   4b448:	8009883a 	mov	r4,r16
   4b44c:	d9800215 	stw	r6,8(sp)
   4b450:	d9c00515 	stw	r7,20(sp)
   4b454:	da000415 	stw	r8,16(sp)
   4b458:	004d1fc0 	call	4d1fc <__clzsi2>
   4b45c:	d9800217 	ldw	r6,8(sp)
   4b460:	d9c00517 	ldw	r7,20(sp)
   4b464:	da000417 	ldw	r8,16(sp)
   4b468:	113ffd44 	addi	r4,r2,-11
   4b46c:	00c00704 	movi	r3,28
   4b470:	19014f16 	blt	r3,r4,4b9b0 <__divdf3+0x748>
   4b474:	00c00744 	movi	r3,29
   4b478:	157ffe04 	addi	r21,r2,-8
   4b47c:	1907c83a 	sub	r3,r3,r4
   4b480:	8560983a 	sll	r16,r16,r21
   4b484:	88c6d83a 	srl	r3,r17,r3
   4b488:	8d6a983a 	sll	r21,r17,r21
   4b48c:	1c20b03a 	or	r16,r3,r16
   4b490:	1080fcc4 	addi	r2,r2,1011
   4b494:	00a5c83a 	sub	r18,zero,r2
   4b498:	0013883a 	mov	r9,zero
   4b49c:	000b883a 	mov	r5,zero
   4b4a0:	003f8f06 	br	4b2e0 <__alt_data_end+0xfffeef20>
   4b4a4:	3444b03a 	or	r2,r6,r17
   4b4a8:	1000231e 	bne	r2,zero,4b538 <__divdf3+0x2d0>
   4b4ac:	0023883a 	mov	r17,zero
   4b4b0:	0029883a 	mov	r20,zero
   4b4b4:	01c00084 	movi	r7,2
   4b4b8:	003f9b06 	br	4b328 <__alt_data_end+0xfffeef68>
   4b4bc:	3444b03a 	or	r2,r6,r17
   4b4c0:	10001926 	beq	r2,zero,4b528 <__divdf3+0x2c0>
   4b4c4:	88014b26 	beq	r17,zero,4b9f4 <__divdf3+0x78c>
   4b4c8:	8809883a 	mov	r4,r17
   4b4cc:	d9400115 	stw	r5,4(sp)
   4b4d0:	d9800215 	stw	r6,8(sp)
   4b4d4:	da000415 	stw	r8,16(sp)
   4b4d8:	da400315 	stw	r9,12(sp)
   4b4dc:	004d1fc0 	call	4d1fc <__clzsi2>
   4b4e0:	d9400117 	ldw	r5,4(sp)
   4b4e4:	d9800217 	ldw	r6,8(sp)
   4b4e8:	da000417 	ldw	r8,16(sp)
   4b4ec:	da400317 	ldw	r9,12(sp)
   4b4f0:	113ffd44 	addi	r4,r2,-11
   4b4f4:	00c00704 	movi	r3,28
   4b4f8:	19013a16 	blt	r3,r4,4b9e4 <__divdf3+0x77c>
   4b4fc:	00c00744 	movi	r3,29
   4b500:	153ffe04 	addi	r20,r2,-8
   4b504:	1907c83a 	sub	r3,r3,r4
   4b508:	8d22983a 	sll	r17,r17,r20
   4b50c:	30c6d83a 	srl	r3,r6,r3
   4b510:	3528983a 	sll	r20,r6,r20
   4b514:	1c62b03a 	or	r17,r3,r17
   4b518:	1080fcc4 	addi	r2,r2,1011
   4b51c:	0087c83a 	sub	r3,zero,r2
   4b520:	000f883a 	mov	r7,zero
   4b524:	003f8006 	br	4b328 <__alt_data_end+0xfffeef68>
   4b528:	0023883a 	mov	r17,zero
   4b52c:	0029883a 	mov	r20,zero
   4b530:	01c00044 	movi	r7,1
   4b534:	003f7c06 	br	4b328 <__alt_data_end+0xfffeef68>
   4b538:	01c000c4 	movi	r7,3
   4b53c:	003f7a06 	br	4b328 <__alt_data_end+0xfffeef68>
   4b540:	02400104 	movi	r9,4
   4b544:	0021883a 	mov	r16,zero
   4b548:	002b883a 	mov	r21,zero
   4b54c:	01400044 	movi	r5,1
   4b550:	003f6306 	br	4b2e0 <__alt_data_end+0xfffeef20>
   4b554:	02400304 	movi	r9,12
   4b558:	014000c4 	movi	r5,3
   4b55c:	003f6006 	br	4b2e0 <__alt_data_end+0xfffeef20>
   4b560:	04000434 	movhi	r16,16
   4b564:	0009883a 	mov	r4,zero
   4b568:	843fffc4 	addi	r16,r16,-1
   4b56c:	057fffc4 	movi	r21,-1
   4b570:	0081ffc4 	movi	r2,2047
   4b574:	003f9b06 	br	4b3e4 <__alt_data_end+0xfffef024>
   4b578:	00c00044 	movi	r3,1
   4b57c:	1887c83a 	sub	r3,r3,r2
   4b580:	01000e04 	movi	r4,56
   4b584:	20c1530e 	bge	r4,r3,4bad4 <__divdf3+0x86c>
   4b588:	9900004c 	andi	r4,r19,1
   4b58c:	0005883a 	mov	r2,zero
   4b590:	0021883a 	mov	r16,zero
   4b594:	002b883a 	mov	r21,zero
   4b598:	003f9206 	br	4b3e4 <__alt_data_end+0xfffef024>
   4b59c:	8c012e36 	bltu	r17,r16,4ba58 <__divdf3+0x7f0>
   4b5a0:	84412c26 	beq	r16,r17,4ba54 <__divdf3+0x7ec>
   4b5a4:	a82f883a 	mov	r23,r21
   4b5a8:	18ffffc4 	addi	r3,r3,-1
   4b5ac:	002b883a 	mov	r21,zero
   4b5b0:	a004d63a 	srli	r2,r20,24
   4b5b4:	8822923a 	slli	r17,r17,8
   4b5b8:	a028923a 	slli	r20,r20,8
   4b5bc:	8009883a 	mov	r4,r16
   4b5c0:	88acb03a 	or	r22,r17,r2
   4b5c4:	dd000015 	stw	r20,0(sp)
   4b5c8:	b028d43a 	srli	r20,r22,16
   4b5cc:	d8c00215 	stw	r3,8(sp)
   4b5d0:	b4bfffcc 	andi	r18,r22,65535
   4b5d4:	a00b883a 	mov	r5,r20
   4b5d8:	004a8d80 	call	4a8d8 <__udivsi3>
   4b5dc:	100b883a 	mov	r5,r2
   4b5e0:	9009883a 	mov	r4,r18
   4b5e4:	1023883a 	mov	r17,r2
   4b5e8:	004a9940 	call	4a994 <__mulsi3>
   4b5ec:	8009883a 	mov	r4,r16
   4b5f0:	a00b883a 	mov	r5,r20
   4b5f4:	1039883a 	mov	fp,r2
   4b5f8:	004a93c0 	call	4a93c <__umodsi3>
   4b5fc:	1004943a 	slli	r2,r2,16
   4b600:	b808d43a 	srli	r4,r23,16
   4b604:	d8c00217 	ldw	r3,8(sp)
   4b608:	2084b03a 	or	r2,r4,r2
   4b60c:	1700062e 	bgeu	r2,fp,4b628 <__divdf3+0x3c0>
   4b610:	1585883a 	add	r2,r2,r22
   4b614:	893fffc4 	addi	r4,r17,-1
   4b618:	15811d36 	bltu	r2,r22,4ba90 <__divdf3+0x828>
   4b61c:	17011c2e 	bgeu	r2,fp,4ba90 <__divdf3+0x828>
   4b620:	8c7fff84 	addi	r17,r17,-2
   4b624:	1585883a 	add	r2,r2,r22
   4b628:	1739c83a 	sub	fp,r2,fp
   4b62c:	a00b883a 	mov	r5,r20
   4b630:	e009883a 	mov	r4,fp
   4b634:	d8c00215 	stw	r3,8(sp)
   4b638:	004a8d80 	call	4a8d8 <__udivsi3>
   4b63c:	100b883a 	mov	r5,r2
   4b640:	9009883a 	mov	r4,r18
   4b644:	1021883a 	mov	r16,r2
   4b648:	004a9940 	call	4a994 <__mulsi3>
   4b64c:	a00b883a 	mov	r5,r20
   4b650:	e009883a 	mov	r4,fp
   4b654:	d8800415 	stw	r2,16(sp)
   4b658:	004a93c0 	call	4a93c <__umodsi3>
   4b65c:	1004943a 	slli	r2,r2,16
   4b660:	da000417 	ldw	r8,16(sp)
   4b664:	bdffffcc 	andi	r23,r23,65535
   4b668:	b884b03a 	or	r2,r23,r2
   4b66c:	d8c00217 	ldw	r3,8(sp)
   4b670:	1200062e 	bgeu	r2,r8,4b68c <__divdf3+0x424>
   4b674:	1585883a 	add	r2,r2,r22
   4b678:	813fffc4 	addi	r4,r16,-1
   4b67c:	15810236 	bltu	r2,r22,4ba88 <__divdf3+0x820>
   4b680:	1201012e 	bgeu	r2,r8,4ba88 <__divdf3+0x820>
   4b684:	843fff84 	addi	r16,r16,-2
   4b688:	1585883a 	add	r2,r2,r22
   4b68c:	8822943a 	slli	r17,r17,16
   4b690:	d9800017 	ldw	r6,0(sp)
   4b694:	1211c83a 	sub	r8,r2,r8
   4b698:	8c22b03a 	or	r17,r17,r16
   4b69c:	373fffcc 	andi	fp,r6,65535
   4b6a0:	8abfffcc 	andi	r10,r17,65535
   4b6a4:	8820d43a 	srli	r16,r17,16
   4b6a8:	5009883a 	mov	r4,r10
   4b6ac:	e00b883a 	mov	r5,fp
   4b6b0:	302ed43a 	srli	r23,r6,16
   4b6b4:	d8c00215 	stw	r3,8(sp)
   4b6b8:	da000415 	stw	r8,16(sp)
   4b6bc:	da800115 	stw	r10,4(sp)
   4b6c0:	004a9940 	call	4a994 <__mulsi3>
   4b6c4:	800b883a 	mov	r5,r16
   4b6c8:	e009883a 	mov	r4,fp
   4b6cc:	d8800515 	stw	r2,20(sp)
   4b6d0:	004a9940 	call	4a994 <__mulsi3>
   4b6d4:	8009883a 	mov	r4,r16
   4b6d8:	b80b883a 	mov	r5,r23
   4b6dc:	d8800315 	stw	r2,12(sp)
   4b6e0:	004a9940 	call	4a994 <__mulsi3>
   4b6e4:	da800117 	ldw	r10,4(sp)
   4b6e8:	b80b883a 	mov	r5,r23
   4b6ec:	1021883a 	mov	r16,r2
   4b6f0:	5009883a 	mov	r4,r10
   4b6f4:	004a9940 	call	4a994 <__mulsi3>
   4b6f8:	d9c00517 	ldw	r7,20(sp)
   4b6fc:	da400317 	ldw	r9,12(sp)
   4b700:	d8c00217 	ldw	r3,8(sp)
   4b704:	3808d43a 	srli	r4,r7,16
   4b708:	1245883a 	add	r2,r2,r9
   4b70c:	da000417 	ldw	r8,16(sp)
   4b710:	2085883a 	add	r2,r4,r2
   4b714:	1240022e 	bgeu	r2,r9,4b720 <__divdf3+0x4b8>
   4b718:	01000074 	movhi	r4,1
   4b71c:	8121883a 	add	r16,r16,r4
   4b720:	1008d43a 	srli	r4,r2,16
   4b724:	1004943a 	slli	r2,r2,16
   4b728:	39ffffcc 	andi	r7,r7,65535
   4b72c:	2409883a 	add	r4,r4,r16
   4b730:	11c5883a 	add	r2,r2,r7
   4b734:	4100bb36 	bltu	r8,r4,4ba24 <__divdf3+0x7bc>
   4b738:	4100d726 	beq	r8,r4,4ba98 <__divdf3+0x830>
   4b73c:	4109c83a 	sub	r4,r8,r4
   4b740:	a8a1c83a 	sub	r16,r21,r2
   4b744:	ac2b803a 	cmpltu	r21,r21,r16
   4b748:	256bc83a 	sub	r21,r4,r21
   4b74c:	b540d926 	beq	r22,r21,4bab4 <__divdf3+0x84c>
   4b750:	a00b883a 	mov	r5,r20
   4b754:	a809883a 	mov	r4,r21
   4b758:	d8c00215 	stw	r3,8(sp)
   4b75c:	004a8d80 	call	4a8d8 <__udivsi3>
   4b760:	100b883a 	mov	r5,r2
   4b764:	9009883a 	mov	r4,r18
   4b768:	d8800515 	stw	r2,20(sp)
   4b76c:	004a9940 	call	4a994 <__mulsi3>
   4b770:	a809883a 	mov	r4,r21
   4b774:	a00b883a 	mov	r5,r20
   4b778:	d8800415 	stw	r2,16(sp)
   4b77c:	004a93c0 	call	4a93c <__umodsi3>
   4b780:	1004943a 	slli	r2,r2,16
   4b784:	8008d43a 	srli	r4,r16,16
   4b788:	da000417 	ldw	r8,16(sp)
   4b78c:	d8c00217 	ldw	r3,8(sp)
   4b790:	2084b03a 	or	r2,r4,r2
   4b794:	d9c00517 	ldw	r7,20(sp)
   4b798:	1200062e 	bgeu	r2,r8,4b7b4 <__divdf3+0x54c>
   4b79c:	1585883a 	add	r2,r2,r22
   4b7a0:	393fffc4 	addi	r4,r7,-1
   4b7a4:	1580c536 	bltu	r2,r22,4babc <__divdf3+0x854>
   4b7a8:	1200c42e 	bgeu	r2,r8,4babc <__divdf3+0x854>
   4b7ac:	39ffff84 	addi	r7,r7,-2
   4b7b0:	1585883a 	add	r2,r2,r22
   4b7b4:	122bc83a 	sub	r21,r2,r8
   4b7b8:	a00b883a 	mov	r5,r20
   4b7bc:	a809883a 	mov	r4,r21
   4b7c0:	d8c00215 	stw	r3,8(sp)
   4b7c4:	d9c00515 	stw	r7,20(sp)
   4b7c8:	004a8d80 	call	4a8d8 <__udivsi3>
   4b7cc:	9009883a 	mov	r4,r18
   4b7d0:	100b883a 	mov	r5,r2
   4b7d4:	d8800415 	stw	r2,16(sp)
   4b7d8:	004a9940 	call	4a994 <__mulsi3>
   4b7dc:	a809883a 	mov	r4,r21
   4b7e0:	a00b883a 	mov	r5,r20
   4b7e4:	1025883a 	mov	r18,r2
   4b7e8:	004a93c0 	call	4a93c <__umodsi3>
   4b7ec:	1004943a 	slli	r2,r2,16
   4b7f0:	813fffcc 	andi	r4,r16,65535
   4b7f4:	d8c00217 	ldw	r3,8(sp)
   4b7f8:	20a0b03a 	or	r16,r4,r2
   4b7fc:	d9c00517 	ldw	r7,20(sp)
   4b800:	da000417 	ldw	r8,16(sp)
   4b804:	8480062e 	bgeu	r16,r18,4b820 <__divdf3+0x5b8>
   4b808:	85a1883a 	add	r16,r16,r22
   4b80c:	40bfffc4 	addi	r2,r8,-1
   4b810:	8580ac36 	bltu	r16,r22,4bac4 <__divdf3+0x85c>
   4b814:	8480ab2e 	bgeu	r16,r18,4bac4 <__divdf3+0x85c>
   4b818:	423fff84 	addi	r8,r8,-2
   4b81c:	85a1883a 	add	r16,r16,r22
   4b820:	3804943a 	slli	r2,r7,16
   4b824:	84a1c83a 	sub	r16,r16,r18
   4b828:	e009883a 	mov	r4,fp
   4b82c:	1228b03a 	or	r20,r2,r8
   4b830:	a1ffffcc 	andi	r7,r20,65535
   4b834:	a024d43a 	srli	r18,r20,16
   4b838:	380b883a 	mov	r5,r7
   4b83c:	d8c00215 	stw	r3,8(sp)
   4b840:	d9c00515 	stw	r7,20(sp)
   4b844:	004a9940 	call	4a994 <__mulsi3>
   4b848:	900b883a 	mov	r5,r18
   4b84c:	e009883a 	mov	r4,fp
   4b850:	102b883a 	mov	r21,r2
   4b854:	004a9940 	call	4a994 <__mulsi3>
   4b858:	900b883a 	mov	r5,r18
   4b85c:	b809883a 	mov	r4,r23
   4b860:	1039883a 	mov	fp,r2
   4b864:	004a9940 	call	4a994 <__mulsi3>
   4b868:	d9c00517 	ldw	r7,20(sp)
   4b86c:	b80b883a 	mov	r5,r23
   4b870:	1025883a 	mov	r18,r2
   4b874:	3809883a 	mov	r4,r7
   4b878:	004a9940 	call	4a994 <__mulsi3>
   4b87c:	a808d43a 	srli	r4,r21,16
   4b880:	1705883a 	add	r2,r2,fp
   4b884:	d8c00217 	ldw	r3,8(sp)
   4b888:	2085883a 	add	r2,r4,r2
   4b88c:	1700022e 	bgeu	r2,fp,4b898 <__divdf3+0x630>
   4b890:	01000074 	movhi	r4,1
   4b894:	9125883a 	add	r18,r18,r4
   4b898:	1008d43a 	srli	r4,r2,16
   4b89c:	1004943a 	slli	r2,r2,16
   4b8a0:	ad7fffcc 	andi	r21,r21,65535
   4b8a4:	2489883a 	add	r4,r4,r18
   4b8a8:	1545883a 	add	r2,r2,r21
   4b8ac:	81003836 	bltu	r16,r4,4b990 <__divdf3+0x728>
   4b8b0:	81003626 	beq	r16,r4,4b98c <__divdf3+0x724>
   4b8b4:	a5000054 	ori	r20,r20,1
   4b8b8:	1880ffc4 	addi	r2,r3,1023
   4b8bc:	00bf2e0e 	bge	zero,r2,4b578 <__alt_data_end+0xfffef1b8>
   4b8c0:	a10001cc 	andi	r4,r20,7
   4b8c4:	20000726 	beq	r4,zero,4b8e4 <__divdf3+0x67c>
   4b8c8:	a10003cc 	andi	r4,r20,15
   4b8cc:	01400104 	movi	r5,4
   4b8d0:	21400426 	beq	r4,r5,4b8e4 <__divdf3+0x67c>
   4b8d4:	a149883a 	add	r4,r20,r5
   4b8d8:	2529803a 	cmpltu	r20,r4,r20
   4b8dc:	8d23883a 	add	r17,r17,r20
   4b8e0:	2029883a 	mov	r20,r4
   4b8e4:	8900402c 	andhi	r4,r17,256
   4b8e8:	20000426 	beq	r4,zero,4b8fc <__divdf3+0x694>
   4b8ec:	18810004 	addi	r2,r3,1024
   4b8f0:	00ffc034 	movhi	r3,65280
   4b8f4:	18ffffc4 	addi	r3,r3,-1
   4b8f8:	88e2703a 	and	r17,r17,r3
   4b8fc:	00c1ff84 	movi	r3,2046
   4b900:	18beb416 	blt	r3,r2,4b3d4 <__alt_data_end+0xfffef014>
   4b904:	a028d0fa 	srli	r20,r20,3
   4b908:	882a977a 	slli	r21,r17,29
   4b90c:	8820927a 	slli	r16,r17,9
   4b910:	1081ffcc 	andi	r2,r2,2047
   4b914:	ad2ab03a 	or	r21,r21,r20
   4b918:	8020d33a 	srli	r16,r16,12
   4b91c:	9900004c 	andi	r4,r19,1
   4b920:	003eb006 	br	4b3e4 <__alt_data_end+0xfffef024>
   4b924:	8080022c 	andhi	r2,r16,8
   4b928:	10001226 	beq	r2,zero,4b974 <__divdf3+0x70c>
   4b92c:	8880022c 	andhi	r2,r17,8
   4b930:	1000101e 	bne	r2,zero,4b974 <__divdf3+0x70c>
   4b934:	00800434 	movhi	r2,16
   4b938:	8c000234 	orhi	r16,r17,8
   4b93c:	10bfffc4 	addi	r2,r2,-1
   4b940:	b809883a 	mov	r4,r23
   4b944:	80a0703a 	and	r16,r16,r2
   4b948:	a02b883a 	mov	r21,r20
   4b94c:	003f0806 	br	4b570 <__alt_data_end+0xfffef1b0>
   4b950:	008000c4 	movi	r2,3
   4b954:	3880b126 	beq	r7,r2,4bc1c <__divdf3+0x9b4>
   4b958:	00800044 	movi	r2,1
   4b95c:	38805b1e 	bne	r7,r2,4bacc <__divdf3+0x864>
   4b960:	e009883a 	mov	r4,fp
   4b964:	0005883a 	mov	r2,zero
   4b968:	0021883a 	mov	r16,zero
   4b96c:	002b883a 	mov	r21,zero
   4b970:	003e9c06 	br	4b3e4 <__alt_data_end+0xfffef024>
   4b974:	00800434 	movhi	r2,16
   4b978:	84000234 	orhi	r16,r16,8
   4b97c:	10bfffc4 	addi	r2,r2,-1
   4b980:	b009883a 	mov	r4,r22
   4b984:	80a0703a 	and	r16,r16,r2
   4b988:	003ef906 	br	4b570 <__alt_data_end+0xfffef1b0>
   4b98c:	103fca26 	beq	r2,zero,4b8b8 <__alt_data_end+0xfffef4f8>
   4b990:	b421883a 	add	r16,r22,r16
   4b994:	a17fffc4 	addi	r5,r20,-1
   4b998:	8580422e 	bgeu	r16,r22,4baa4 <__divdf3+0x83c>
   4b99c:	2829883a 	mov	r20,r5
   4b9a0:	813fc41e 	bne	r16,r4,4b8b4 <__alt_data_end+0xfffef4f4>
   4b9a4:	d9800017 	ldw	r6,0(sp)
   4b9a8:	30bfc21e 	bne	r6,r2,4b8b4 <__alt_data_end+0xfffef4f4>
   4b9ac:	003fc206 	br	4b8b8 <__alt_data_end+0xfffef4f8>
   4b9b0:	143ff604 	addi	r16,r2,-40
   4b9b4:	8c20983a 	sll	r16,r17,r16
   4b9b8:	002b883a 	mov	r21,zero
   4b9bc:	003eb406 	br	4b490 <__alt_data_end+0xfffef0d0>
   4b9c0:	d9800215 	stw	r6,8(sp)
   4b9c4:	d9c00515 	stw	r7,20(sp)
   4b9c8:	da000415 	stw	r8,16(sp)
   4b9cc:	004d1fc0 	call	4d1fc <__clzsi2>
   4b9d0:	10800804 	addi	r2,r2,32
   4b9d4:	da000417 	ldw	r8,16(sp)
   4b9d8:	d9c00517 	ldw	r7,20(sp)
   4b9dc:	d9800217 	ldw	r6,8(sp)
   4b9e0:	003ea106 	br	4b468 <__alt_data_end+0xfffef0a8>
   4b9e4:	147ff604 	addi	r17,r2,-40
   4b9e8:	3462983a 	sll	r17,r6,r17
   4b9ec:	0029883a 	mov	r20,zero
   4b9f0:	003ec906 	br	4b518 <__alt_data_end+0xfffef158>
   4b9f4:	3009883a 	mov	r4,r6
   4b9f8:	d9400115 	stw	r5,4(sp)
   4b9fc:	d9800215 	stw	r6,8(sp)
   4ba00:	da000415 	stw	r8,16(sp)
   4ba04:	da400315 	stw	r9,12(sp)
   4ba08:	004d1fc0 	call	4d1fc <__clzsi2>
   4ba0c:	10800804 	addi	r2,r2,32
   4ba10:	da400317 	ldw	r9,12(sp)
   4ba14:	da000417 	ldw	r8,16(sp)
   4ba18:	d9800217 	ldw	r6,8(sp)
   4ba1c:	d9400117 	ldw	r5,4(sp)
   4ba20:	003eb306 	br	4b4f0 <__alt_data_end+0xfffef130>
   4ba24:	d9800017 	ldw	r6,0(sp)
   4ba28:	a9ab883a 	add	r21,r21,r6
   4ba2c:	a98b803a 	cmpltu	r5,r21,r6
   4ba30:	2d8b883a 	add	r5,r5,r22
   4ba34:	2a11883a 	add	r8,r5,r8
   4ba38:	897fffc4 	addi	r5,r17,-1
   4ba3c:	b2000c2e 	bgeu	r22,r8,4ba70 <__divdf3+0x808>
   4ba40:	41003f36 	bltu	r8,r4,4bb40 <__divdf3+0x8d8>
   4ba44:	22006c26 	beq	r4,r8,4bbf8 <__divdf3+0x990>
   4ba48:	4109c83a 	sub	r4,r8,r4
   4ba4c:	2823883a 	mov	r17,r5
   4ba50:	003f3b06 	br	4b740 <__alt_data_end+0xfffef380>
   4ba54:	ad3ed336 	bltu	r21,r20,4b5a4 <__alt_data_end+0xfffef1e4>
   4ba58:	a804d07a 	srli	r2,r21,1
   4ba5c:	802e97fa 	slli	r23,r16,31
   4ba60:	a82a97fa 	slli	r21,r21,31
   4ba64:	8020d07a 	srli	r16,r16,1
   4ba68:	b8aeb03a 	or	r23,r23,r2
   4ba6c:	003ed006 	br	4b5b0 <__alt_data_end+0xfffef1f0>
   4ba70:	b23ff51e 	bne	r22,r8,4ba48 <__alt_data_end+0xfffef688>
   4ba74:	d9800017 	ldw	r6,0(sp)
   4ba78:	a9bff12e 	bgeu	r21,r6,4ba40 <__alt_data_end+0xfffef680>
   4ba7c:	b109c83a 	sub	r4,r22,r4
   4ba80:	2823883a 	mov	r17,r5
   4ba84:	003f2e06 	br	4b740 <__alt_data_end+0xfffef380>
   4ba88:	2021883a 	mov	r16,r4
   4ba8c:	003eff06 	br	4b68c <__alt_data_end+0xfffef2cc>
   4ba90:	2023883a 	mov	r17,r4
   4ba94:	003ee406 	br	4b628 <__alt_data_end+0xfffef268>
   4ba98:	a8bfe236 	bltu	r21,r2,4ba24 <__alt_data_end+0xfffef664>
   4ba9c:	0009883a 	mov	r4,zero
   4baa0:	003f2706 	br	4b740 <__alt_data_end+0xfffef380>
   4baa4:	81002d36 	bltu	r16,r4,4bb5c <__divdf3+0x8f4>
   4baa8:	24005626 	beq	r4,r16,4bc04 <__divdf3+0x99c>
   4baac:	2829883a 	mov	r20,r5
   4bab0:	003f8006 	br	4b8b4 <__alt_data_end+0xfffef4f4>
   4bab4:	053fffc4 	movi	r20,-1
   4bab8:	003f7f06 	br	4b8b8 <__alt_data_end+0xfffef4f8>
   4babc:	200f883a 	mov	r7,r4
   4bac0:	003f3c06 	br	4b7b4 <__alt_data_end+0xfffef3f4>
   4bac4:	1011883a 	mov	r8,r2
   4bac8:	003f5506 	br	4b820 <__alt_data_end+0xfffef460>
   4bacc:	e027883a 	mov	r19,fp
   4bad0:	003f7906 	br	4b8b8 <__alt_data_end+0xfffef4f8>
   4bad4:	010007c4 	movi	r4,31
   4bad8:	20c02816 	blt	r4,r3,4bb7c <__divdf3+0x914>
   4badc:	00800804 	movi	r2,32
   4bae0:	10c5c83a 	sub	r2,r2,r3
   4bae4:	888a983a 	sll	r5,r17,r2
   4bae8:	a0c8d83a 	srl	r4,r20,r3
   4baec:	a084983a 	sll	r2,r20,r2
   4baf0:	88e2d83a 	srl	r17,r17,r3
   4baf4:	2906b03a 	or	r3,r5,r4
   4baf8:	1004c03a 	cmpne	r2,r2,zero
   4bafc:	1886b03a 	or	r3,r3,r2
   4bb00:	188001cc 	andi	r2,r3,7
   4bb04:	10000726 	beq	r2,zero,4bb24 <__divdf3+0x8bc>
   4bb08:	188003cc 	andi	r2,r3,15
   4bb0c:	01000104 	movi	r4,4
   4bb10:	11000426 	beq	r2,r4,4bb24 <__divdf3+0x8bc>
   4bb14:	1805883a 	mov	r2,r3
   4bb18:	10c00104 	addi	r3,r2,4
   4bb1c:	1885803a 	cmpltu	r2,r3,r2
   4bb20:	88a3883a 	add	r17,r17,r2
   4bb24:	8880202c 	andhi	r2,r17,128
   4bb28:	10002926 	beq	r2,zero,4bbd0 <__divdf3+0x968>
   4bb2c:	9900004c 	andi	r4,r19,1
   4bb30:	00800044 	movi	r2,1
   4bb34:	0021883a 	mov	r16,zero
   4bb38:	002b883a 	mov	r21,zero
   4bb3c:	003e2906 	br	4b3e4 <__alt_data_end+0xfffef024>
   4bb40:	d9800017 	ldw	r6,0(sp)
   4bb44:	8c7fff84 	addi	r17,r17,-2
   4bb48:	a9ab883a 	add	r21,r21,r6
   4bb4c:	a98b803a 	cmpltu	r5,r21,r6
   4bb50:	2d8b883a 	add	r5,r5,r22
   4bb54:	2a11883a 	add	r8,r5,r8
   4bb58:	003ef806 	br	4b73c <__alt_data_end+0xfffef37c>
   4bb5c:	d9800017 	ldw	r6,0(sp)
   4bb60:	318f883a 	add	r7,r6,r6
   4bb64:	398b803a 	cmpltu	r5,r7,r6
   4bb68:	2d8d883a 	add	r6,r5,r22
   4bb6c:	81a1883a 	add	r16,r16,r6
   4bb70:	a17fff84 	addi	r5,r20,-2
   4bb74:	d9c00015 	stw	r7,0(sp)
   4bb78:	003f8806 	br	4b99c <__alt_data_end+0xfffef5dc>
   4bb7c:	013ff844 	movi	r4,-31
   4bb80:	2085c83a 	sub	r2,r4,r2
   4bb84:	8888d83a 	srl	r4,r17,r2
   4bb88:	00800804 	movi	r2,32
   4bb8c:	18802126 	beq	r3,r2,4bc14 <__divdf3+0x9ac>
   4bb90:	04001004 	movi	r16,64
   4bb94:	80c7c83a 	sub	r3,r16,r3
   4bb98:	88e0983a 	sll	r16,r17,r3
   4bb9c:	8504b03a 	or	r2,r16,r20
   4bba0:	1004c03a 	cmpne	r2,r2,zero
   4bba4:	2084b03a 	or	r2,r4,r2
   4bba8:	144001cc 	andi	r17,r2,7
   4bbac:	88000d1e 	bne	r17,zero,4bbe4 <__divdf3+0x97c>
   4bbb0:	0021883a 	mov	r16,zero
   4bbb4:	102ad0fa 	srli	r21,r2,3
   4bbb8:	9900004c 	andi	r4,r19,1
   4bbbc:	0005883a 	mov	r2,zero
   4bbc0:	ac6ab03a 	or	r21,r21,r17
   4bbc4:	003e0706 	br	4b3e4 <__alt_data_end+0xfffef024>
   4bbc8:	1007883a 	mov	r3,r2
   4bbcc:	0023883a 	mov	r17,zero
   4bbd0:	8820927a 	slli	r16,r17,9
   4bbd4:	1805883a 	mov	r2,r3
   4bbd8:	8822977a 	slli	r17,r17,29
   4bbdc:	8020d33a 	srli	r16,r16,12
   4bbe0:	003ff406 	br	4bbb4 <__alt_data_end+0xfffef7f4>
   4bbe4:	10c003cc 	andi	r3,r2,15
   4bbe8:	01000104 	movi	r4,4
   4bbec:	193ff626 	beq	r3,r4,4bbc8 <__alt_data_end+0xfffef808>
   4bbf0:	0023883a 	mov	r17,zero
   4bbf4:	003fc806 	br	4bb18 <__alt_data_end+0xfffef758>
   4bbf8:	a8bfd136 	bltu	r21,r2,4bb40 <__alt_data_end+0xfffef780>
   4bbfc:	2823883a 	mov	r17,r5
   4bc00:	003fa606 	br	4ba9c <__alt_data_end+0xfffef6dc>
   4bc04:	d9800017 	ldw	r6,0(sp)
   4bc08:	30bfd436 	bltu	r6,r2,4bb5c <__alt_data_end+0xfffef79c>
   4bc0c:	2829883a 	mov	r20,r5
   4bc10:	003f6406 	br	4b9a4 <__alt_data_end+0xfffef5e4>
   4bc14:	0021883a 	mov	r16,zero
   4bc18:	003fe006 	br	4bb9c <__alt_data_end+0xfffef7dc>
   4bc1c:	00800434 	movhi	r2,16
   4bc20:	8c000234 	orhi	r16,r17,8
   4bc24:	10bfffc4 	addi	r2,r2,-1
   4bc28:	e009883a 	mov	r4,fp
   4bc2c:	80a0703a 	and	r16,r16,r2
   4bc30:	a02b883a 	mov	r21,r20
   4bc34:	003e4e06 	br	4b570 <__alt_data_end+0xfffef1b0>

0004bc38 <__eqdf2>:
   4bc38:	2804d53a 	srli	r2,r5,20
   4bc3c:	3806d53a 	srli	r3,r7,20
   4bc40:	02000434 	movhi	r8,16
   4bc44:	423fffc4 	addi	r8,r8,-1
   4bc48:	1081ffcc 	andi	r2,r2,2047
   4bc4c:	0281ffc4 	movi	r10,2047
   4bc50:	2a12703a 	and	r9,r5,r8
   4bc54:	18c1ffcc 	andi	r3,r3,2047
   4bc58:	3a10703a 	and	r8,r7,r8
   4bc5c:	280ad7fa 	srli	r5,r5,31
   4bc60:	380ed7fa 	srli	r7,r7,31
   4bc64:	12801026 	beq	r2,r10,4bca8 <__eqdf2+0x70>
   4bc68:	0281ffc4 	movi	r10,2047
   4bc6c:	1a800a26 	beq	r3,r10,4bc98 <__eqdf2+0x60>
   4bc70:	10c00226 	beq	r2,r3,4bc7c <__eqdf2+0x44>
   4bc74:	00800044 	movi	r2,1
   4bc78:	f800283a 	ret
   4bc7c:	4a3ffd1e 	bne	r9,r8,4bc74 <__alt_data_end+0xfffef8b4>
   4bc80:	21bffc1e 	bne	r4,r6,4bc74 <__alt_data_end+0xfffef8b4>
   4bc84:	29c00c26 	beq	r5,r7,4bcb8 <__eqdf2+0x80>
   4bc88:	103ffa1e 	bne	r2,zero,4bc74 <__alt_data_end+0xfffef8b4>
   4bc8c:	2244b03a 	or	r2,r4,r9
   4bc90:	1004c03a 	cmpne	r2,r2,zero
   4bc94:	f800283a 	ret
   4bc98:	3214b03a 	or	r10,r6,r8
   4bc9c:	503ff426 	beq	r10,zero,4bc70 <__alt_data_end+0xfffef8b0>
   4bca0:	00800044 	movi	r2,1
   4bca4:	f800283a 	ret
   4bca8:	2254b03a 	or	r10,r4,r9
   4bcac:	503fee26 	beq	r10,zero,4bc68 <__alt_data_end+0xfffef8a8>
   4bcb0:	00800044 	movi	r2,1
   4bcb4:	f800283a 	ret
   4bcb8:	0005883a 	mov	r2,zero
   4bcbc:	f800283a 	ret

0004bcc0 <__gedf2>:
   4bcc0:	2804d53a 	srli	r2,r5,20
   4bcc4:	3806d53a 	srli	r3,r7,20
   4bcc8:	02000434 	movhi	r8,16
   4bccc:	423fffc4 	addi	r8,r8,-1
   4bcd0:	1081ffcc 	andi	r2,r2,2047
   4bcd4:	0241ffc4 	movi	r9,2047
   4bcd8:	2a14703a 	and	r10,r5,r8
   4bcdc:	18c1ffcc 	andi	r3,r3,2047
   4bce0:	3a10703a 	and	r8,r7,r8
   4bce4:	280ad7fa 	srli	r5,r5,31
   4bce8:	380ed7fa 	srli	r7,r7,31
   4bcec:	12401d26 	beq	r2,r9,4bd64 <__gedf2+0xa4>
   4bcf0:	0241ffc4 	movi	r9,2047
   4bcf4:	1a401226 	beq	r3,r9,4bd40 <__gedf2+0x80>
   4bcf8:	1000081e 	bne	r2,zero,4bd1c <__gedf2+0x5c>
   4bcfc:	2296b03a 	or	r11,r4,r10
   4bd00:	5813003a 	cmpeq	r9,r11,zero
   4bd04:	1800091e 	bne	r3,zero,4bd2c <__gedf2+0x6c>
   4bd08:	3218b03a 	or	r12,r6,r8
   4bd0c:	6000071e 	bne	r12,zero,4bd2c <__gedf2+0x6c>
   4bd10:	0005883a 	mov	r2,zero
   4bd14:	5800101e 	bne	r11,zero,4bd58 <__gedf2+0x98>
   4bd18:	f800283a 	ret
   4bd1c:	18000c1e 	bne	r3,zero,4bd50 <__gedf2+0x90>
   4bd20:	3212b03a 	or	r9,r6,r8
   4bd24:	48000c26 	beq	r9,zero,4bd58 <__gedf2+0x98>
   4bd28:	0013883a 	mov	r9,zero
   4bd2c:	39c03fcc 	andi	r7,r7,255
   4bd30:	48000826 	beq	r9,zero,4bd54 <__gedf2+0x94>
   4bd34:	38000926 	beq	r7,zero,4bd5c <__gedf2+0x9c>
   4bd38:	00800044 	movi	r2,1
   4bd3c:	f800283a 	ret
   4bd40:	3212b03a 	or	r9,r6,r8
   4bd44:	483fec26 	beq	r9,zero,4bcf8 <__alt_data_end+0xfffef938>
   4bd48:	00bfff84 	movi	r2,-2
   4bd4c:	f800283a 	ret
   4bd50:	39c03fcc 	andi	r7,r7,255
   4bd54:	29c00626 	beq	r5,r7,4bd70 <__gedf2+0xb0>
   4bd58:	283ff726 	beq	r5,zero,4bd38 <__alt_data_end+0xfffef978>
   4bd5c:	00bfffc4 	movi	r2,-1
   4bd60:	f800283a 	ret
   4bd64:	2292b03a 	or	r9,r4,r10
   4bd68:	483fe126 	beq	r9,zero,4bcf0 <__alt_data_end+0xfffef930>
   4bd6c:	003ff606 	br	4bd48 <__alt_data_end+0xfffef988>
   4bd70:	18bff916 	blt	r3,r2,4bd58 <__alt_data_end+0xfffef998>
   4bd74:	10c00316 	blt	r2,r3,4bd84 <__gedf2+0xc4>
   4bd78:	42bff736 	bltu	r8,r10,4bd58 <__alt_data_end+0xfffef998>
   4bd7c:	52000326 	beq	r10,r8,4bd8c <__gedf2+0xcc>
   4bd80:	5200042e 	bgeu	r10,r8,4bd94 <__gedf2+0xd4>
   4bd84:	283fec1e 	bne	r5,zero,4bd38 <__alt_data_end+0xfffef978>
   4bd88:	003ff406 	br	4bd5c <__alt_data_end+0xfffef99c>
   4bd8c:	313ff236 	bltu	r6,r4,4bd58 <__alt_data_end+0xfffef998>
   4bd90:	21bffc36 	bltu	r4,r6,4bd84 <__alt_data_end+0xfffef9c4>
   4bd94:	0005883a 	mov	r2,zero
   4bd98:	f800283a 	ret

0004bd9c <__ledf2>:
   4bd9c:	2804d53a 	srli	r2,r5,20
   4bda0:	3810d53a 	srli	r8,r7,20
   4bda4:	00c00434 	movhi	r3,16
   4bda8:	18ffffc4 	addi	r3,r3,-1
   4bdac:	1081ffcc 	andi	r2,r2,2047
   4bdb0:	0241ffc4 	movi	r9,2047
   4bdb4:	28d4703a 	and	r10,r5,r3
   4bdb8:	4201ffcc 	andi	r8,r8,2047
   4bdbc:	38c6703a 	and	r3,r7,r3
   4bdc0:	280ad7fa 	srli	r5,r5,31
   4bdc4:	380ed7fa 	srli	r7,r7,31
   4bdc8:	12401f26 	beq	r2,r9,4be48 <__ledf2+0xac>
   4bdcc:	0241ffc4 	movi	r9,2047
   4bdd0:	42401426 	beq	r8,r9,4be24 <__ledf2+0x88>
   4bdd4:	1000091e 	bne	r2,zero,4bdfc <__ledf2+0x60>
   4bdd8:	2296b03a 	or	r11,r4,r10
   4bddc:	5813003a 	cmpeq	r9,r11,zero
   4bde0:	29403fcc 	andi	r5,r5,255
   4bde4:	40000a1e 	bne	r8,zero,4be10 <__ledf2+0x74>
   4bde8:	30d8b03a 	or	r12,r6,r3
   4bdec:	6000081e 	bne	r12,zero,4be10 <__ledf2+0x74>
   4bdf0:	0005883a 	mov	r2,zero
   4bdf4:	5800111e 	bne	r11,zero,4be3c <__ledf2+0xa0>
   4bdf8:	f800283a 	ret
   4bdfc:	29403fcc 	andi	r5,r5,255
   4be00:	40000c1e 	bne	r8,zero,4be34 <__ledf2+0x98>
   4be04:	30d2b03a 	or	r9,r6,r3
   4be08:	48000c26 	beq	r9,zero,4be3c <__ledf2+0xa0>
   4be0c:	0013883a 	mov	r9,zero
   4be10:	39c03fcc 	andi	r7,r7,255
   4be14:	48000826 	beq	r9,zero,4be38 <__ledf2+0x9c>
   4be18:	38001126 	beq	r7,zero,4be60 <__ledf2+0xc4>
   4be1c:	00800044 	movi	r2,1
   4be20:	f800283a 	ret
   4be24:	30d2b03a 	or	r9,r6,r3
   4be28:	483fea26 	beq	r9,zero,4bdd4 <__alt_data_end+0xfffefa14>
   4be2c:	00800084 	movi	r2,2
   4be30:	f800283a 	ret
   4be34:	39c03fcc 	andi	r7,r7,255
   4be38:	39400726 	beq	r7,r5,4be58 <__ledf2+0xbc>
   4be3c:	2800081e 	bne	r5,zero,4be60 <__ledf2+0xc4>
   4be40:	00800044 	movi	r2,1
   4be44:	f800283a 	ret
   4be48:	2292b03a 	or	r9,r4,r10
   4be4c:	483fdf26 	beq	r9,zero,4bdcc <__alt_data_end+0xfffefa0c>
   4be50:	00800084 	movi	r2,2
   4be54:	f800283a 	ret
   4be58:	4080030e 	bge	r8,r2,4be68 <__ledf2+0xcc>
   4be5c:	383fef26 	beq	r7,zero,4be1c <__alt_data_end+0xfffefa5c>
   4be60:	00bfffc4 	movi	r2,-1
   4be64:	f800283a 	ret
   4be68:	123feb16 	blt	r2,r8,4be18 <__alt_data_end+0xfffefa58>
   4be6c:	1abff336 	bltu	r3,r10,4be3c <__alt_data_end+0xfffefa7c>
   4be70:	50c00326 	beq	r10,r3,4be80 <__ledf2+0xe4>
   4be74:	50c0042e 	bgeu	r10,r3,4be88 <__ledf2+0xec>
   4be78:	283fe81e 	bne	r5,zero,4be1c <__alt_data_end+0xfffefa5c>
   4be7c:	003ff806 	br	4be60 <__alt_data_end+0xfffefaa0>
   4be80:	313fee36 	bltu	r6,r4,4be3c <__alt_data_end+0xfffefa7c>
   4be84:	21bffc36 	bltu	r4,r6,4be78 <__alt_data_end+0xfffefab8>
   4be88:	0005883a 	mov	r2,zero
   4be8c:	f800283a 	ret

0004be90 <__muldf3>:
   4be90:	deffee04 	addi	sp,sp,-72
   4be94:	dd000c15 	stw	r20,48(sp)
   4be98:	2828d53a 	srli	r20,r5,20
   4be9c:	ddc00f15 	stw	r23,60(sp)
   4bea0:	282ed7fa 	srli	r23,r5,31
   4bea4:	dc000815 	stw	r16,32(sp)
   4bea8:	04000434 	movhi	r16,16
   4beac:	dcc00b15 	stw	r19,44(sp)
   4beb0:	843fffc4 	addi	r16,r16,-1
   4beb4:	dfc01115 	stw	ra,68(sp)
   4beb8:	df001015 	stw	fp,64(sp)
   4bebc:	dd800e15 	stw	r22,56(sp)
   4bec0:	dd400d15 	stw	r21,52(sp)
   4bec4:	dc800a15 	stw	r18,40(sp)
   4bec8:	dc400915 	stw	r17,36(sp)
   4becc:	a501ffcc 	andi	r20,r20,2047
   4bed0:	2c20703a 	and	r16,r5,r16
   4bed4:	b827883a 	mov	r19,r23
   4bed8:	ba403fcc 	andi	r9,r23,255
   4bedc:	a0006026 	beq	r20,zero,4c060 <__muldf3+0x1d0>
   4bee0:	0081ffc4 	movi	r2,2047
   4bee4:	202d883a 	mov	r22,r4
   4bee8:	a0803626 	beq	r20,r2,4bfc4 <__muldf3+0x134>
   4beec:	84000434 	orhi	r16,r16,16
   4bef0:	200ad77a 	srli	r5,r4,29
   4bef4:	800490fa 	slli	r2,r16,3
   4bef8:	202c90fa 	slli	r22,r4,3
   4befc:	a53f0044 	addi	r20,r20,-1023
   4bf00:	28a0b03a 	or	r16,r5,r2
   4bf04:	002b883a 	mov	r21,zero
   4bf08:	000b883a 	mov	r5,zero
   4bf0c:	3804d53a 	srli	r2,r7,20
   4bf10:	3838d7fa 	srli	fp,r7,31
   4bf14:	04400434 	movhi	r17,16
   4bf18:	8c7fffc4 	addi	r17,r17,-1
   4bf1c:	1081ffcc 	andi	r2,r2,2047
   4bf20:	3025883a 	mov	r18,r6
   4bf24:	3c62703a 	and	r17,r7,r17
   4bf28:	e2803fcc 	andi	r10,fp,255
   4bf2c:	10006d26 	beq	r2,zero,4c0e4 <__muldf3+0x254>
   4bf30:	00c1ffc4 	movi	r3,2047
   4bf34:	10c06526 	beq	r2,r3,4c0cc <__muldf3+0x23c>
   4bf38:	8c400434 	orhi	r17,r17,16
   4bf3c:	300ed77a 	srli	r7,r6,29
   4bf40:	880690fa 	slli	r3,r17,3
   4bf44:	302490fa 	slli	r18,r6,3
   4bf48:	10bf0044 	addi	r2,r2,-1023
   4bf4c:	38e2b03a 	or	r17,r7,r3
   4bf50:	000f883a 	mov	r7,zero
   4bf54:	a087883a 	add	r3,r20,r2
   4bf58:	010003c4 	movi	r4,15
   4bf5c:	3d44b03a 	or	r2,r7,r21
   4bf60:	e5ccf03a 	xor	r6,fp,r23
   4bf64:	1a000044 	addi	r8,r3,1
   4bf68:	20809b36 	bltu	r4,r2,4c1d8 <__muldf3+0x348>
   4bf6c:	100490ba 	slli	r2,r2,2
   4bf70:	01000174 	movhi	r4,5
   4bf74:	212fe104 	addi	r4,r4,-16508
   4bf78:	1105883a 	add	r2,r2,r4
   4bf7c:	10800017 	ldw	r2,0(r2)
   4bf80:	1000683a 	jmp	r2
   4bf84:	0004c1d8 	cmpnei	zero,zero,4871
   4bf88:	0004bfe4 	muli	zero,zero,4863
   4bf8c:	0004bfe4 	muli	zero,zero,4863
   4bf90:	0004bfe0 	cmpeqi	zero,zero,4863
   4bf94:	0004c1b4 	movhi	zero,4870
   4bf98:	0004c1b4 	movhi	zero,4870
   4bf9c:	0004c19c 	xori	zero,zero,4870
   4bfa0:	0004bfe0 	cmpeqi	zero,zero,4863
   4bfa4:	0004c1b4 	movhi	zero,4870
   4bfa8:	0004c19c 	xori	zero,zero,4870
   4bfac:	0004c1b4 	movhi	zero,4870
   4bfb0:	0004bfe0 	cmpeqi	zero,zero,4863
   4bfb4:	0004c1c4 	movi	zero,4871
   4bfb8:	0004c1c4 	movi	zero,4871
   4bfbc:	0004c1c4 	movi	zero,4871
   4bfc0:	0004c524 	muli	zero,zero,4884
   4bfc4:	2404b03a 	or	r2,r4,r16
   4bfc8:	1000711e 	bne	r2,zero,4c190 <__muldf3+0x300>
   4bfcc:	05400204 	movi	r21,8
   4bfd0:	0021883a 	mov	r16,zero
   4bfd4:	002d883a 	mov	r22,zero
   4bfd8:	01400084 	movi	r5,2
   4bfdc:	003fcb06 	br	4bf0c <__alt_data_end+0xfffefb4c>
   4bfe0:	500d883a 	mov	r6,r10
   4bfe4:	00800084 	movi	r2,2
   4bfe8:	38805926 	beq	r7,r2,4c150 <__muldf3+0x2c0>
   4bfec:	008000c4 	movi	r2,3
   4bff0:	3881bb26 	beq	r7,r2,4c6e0 <__muldf3+0x850>
   4bff4:	00800044 	movi	r2,1
   4bff8:	3881961e 	bne	r7,r2,4c654 <__muldf3+0x7c4>
   4bffc:	3027883a 	mov	r19,r6
   4c000:	0005883a 	mov	r2,zero
   4c004:	0021883a 	mov	r16,zero
   4c008:	002d883a 	mov	r22,zero
   4c00c:	1004953a 	slli	r2,r2,20
   4c010:	98c03fcc 	andi	r3,r19,255
   4c014:	04400434 	movhi	r17,16
   4c018:	8c7fffc4 	addi	r17,r17,-1
   4c01c:	180697fa 	slli	r3,r3,31
   4c020:	8460703a 	and	r16,r16,r17
   4c024:	80a0b03a 	or	r16,r16,r2
   4c028:	80c6b03a 	or	r3,r16,r3
   4c02c:	b005883a 	mov	r2,r22
   4c030:	dfc01117 	ldw	ra,68(sp)
   4c034:	df001017 	ldw	fp,64(sp)
   4c038:	ddc00f17 	ldw	r23,60(sp)
   4c03c:	dd800e17 	ldw	r22,56(sp)
   4c040:	dd400d17 	ldw	r21,52(sp)
   4c044:	dd000c17 	ldw	r20,48(sp)
   4c048:	dcc00b17 	ldw	r19,44(sp)
   4c04c:	dc800a17 	ldw	r18,40(sp)
   4c050:	dc400917 	ldw	r17,36(sp)
   4c054:	dc000817 	ldw	r16,32(sp)
   4c058:	dec01204 	addi	sp,sp,72
   4c05c:	f800283a 	ret
   4c060:	2404b03a 	or	r2,r4,r16
   4c064:	202b883a 	mov	r21,r4
   4c068:	10004426 	beq	r2,zero,4c17c <__muldf3+0x2ec>
   4c06c:	80015126 	beq	r16,zero,4c5b4 <__muldf3+0x724>
   4c070:	8009883a 	mov	r4,r16
   4c074:	d9800715 	stw	r6,28(sp)
   4c078:	d9c00215 	stw	r7,8(sp)
   4c07c:	da400415 	stw	r9,16(sp)
   4c080:	004d1fc0 	call	4d1fc <__clzsi2>
   4c084:	d9800717 	ldw	r6,28(sp)
   4c088:	d9c00217 	ldw	r7,8(sp)
   4c08c:	da400417 	ldw	r9,16(sp)
   4c090:	113ffd44 	addi	r4,r2,-11
   4c094:	00c00704 	movi	r3,28
   4c098:	19014216 	blt	r3,r4,4c5a4 <__muldf3+0x714>
   4c09c:	00c00744 	movi	r3,29
   4c0a0:	15bffe04 	addi	r22,r2,-8
   4c0a4:	1907c83a 	sub	r3,r3,r4
   4c0a8:	85a0983a 	sll	r16,r16,r22
   4c0ac:	a8c6d83a 	srl	r3,r21,r3
   4c0b0:	adac983a 	sll	r22,r21,r22
   4c0b4:	1c20b03a 	or	r16,r3,r16
   4c0b8:	1080fcc4 	addi	r2,r2,1011
   4c0bc:	00a9c83a 	sub	r20,zero,r2
   4c0c0:	002b883a 	mov	r21,zero
   4c0c4:	000b883a 	mov	r5,zero
   4c0c8:	003f9006 	br	4bf0c <__alt_data_end+0xfffefb4c>
   4c0cc:	3446b03a 	or	r3,r6,r17
   4c0d0:	1800281e 	bne	r3,zero,4c174 <__muldf3+0x2e4>
   4c0d4:	0023883a 	mov	r17,zero
   4c0d8:	0025883a 	mov	r18,zero
   4c0dc:	01c00084 	movi	r7,2
   4c0e0:	003f9c06 	br	4bf54 <__alt_data_end+0xfffefb94>
   4c0e4:	3446b03a 	or	r3,r6,r17
   4c0e8:	18001e26 	beq	r3,zero,4c164 <__muldf3+0x2d4>
   4c0ec:	88012126 	beq	r17,zero,4c574 <__muldf3+0x6e4>
   4c0f0:	8809883a 	mov	r4,r17
   4c0f4:	d9400215 	stw	r5,8(sp)
   4c0f8:	d9800715 	stw	r6,28(sp)
   4c0fc:	da400415 	stw	r9,16(sp)
   4c100:	da800315 	stw	r10,12(sp)
   4c104:	004d1fc0 	call	4d1fc <__clzsi2>
   4c108:	d9400217 	ldw	r5,8(sp)
   4c10c:	d9800717 	ldw	r6,28(sp)
   4c110:	da400417 	ldw	r9,16(sp)
   4c114:	da800317 	ldw	r10,12(sp)
   4c118:	113ffd44 	addi	r4,r2,-11
   4c11c:	00c00704 	movi	r3,28
   4c120:	19011016 	blt	r3,r4,4c564 <__muldf3+0x6d4>
   4c124:	00c00744 	movi	r3,29
   4c128:	14bffe04 	addi	r18,r2,-8
   4c12c:	1907c83a 	sub	r3,r3,r4
   4c130:	8ca2983a 	sll	r17,r17,r18
   4c134:	30c6d83a 	srl	r3,r6,r3
   4c138:	34a4983a 	sll	r18,r6,r18
   4c13c:	1c62b03a 	or	r17,r3,r17
   4c140:	1080fcc4 	addi	r2,r2,1011
   4c144:	0085c83a 	sub	r2,zero,r2
   4c148:	000f883a 	mov	r7,zero
   4c14c:	003f8106 	br	4bf54 <__alt_data_end+0xfffefb94>
   4c150:	3027883a 	mov	r19,r6
   4c154:	0081ffc4 	movi	r2,2047
   4c158:	0021883a 	mov	r16,zero
   4c15c:	002d883a 	mov	r22,zero
   4c160:	003faa06 	br	4c00c <__alt_data_end+0xfffefc4c>
   4c164:	0023883a 	mov	r17,zero
   4c168:	0025883a 	mov	r18,zero
   4c16c:	01c00044 	movi	r7,1
   4c170:	003f7806 	br	4bf54 <__alt_data_end+0xfffefb94>
   4c174:	01c000c4 	movi	r7,3
   4c178:	003f7606 	br	4bf54 <__alt_data_end+0xfffefb94>
   4c17c:	05400104 	movi	r21,4
   4c180:	0021883a 	mov	r16,zero
   4c184:	002d883a 	mov	r22,zero
   4c188:	01400044 	movi	r5,1
   4c18c:	003f5f06 	br	4bf0c <__alt_data_end+0xfffefb4c>
   4c190:	05400304 	movi	r21,12
   4c194:	014000c4 	movi	r5,3
   4c198:	003f5c06 	br	4bf0c <__alt_data_end+0xfffefb4c>
   4c19c:	04000434 	movhi	r16,16
   4c1a0:	0027883a 	mov	r19,zero
   4c1a4:	843fffc4 	addi	r16,r16,-1
   4c1a8:	05bfffc4 	movi	r22,-1
   4c1ac:	0081ffc4 	movi	r2,2047
   4c1b0:	003f9606 	br	4c00c <__alt_data_end+0xfffefc4c>
   4c1b4:	8023883a 	mov	r17,r16
   4c1b8:	b025883a 	mov	r18,r22
   4c1bc:	280f883a 	mov	r7,r5
   4c1c0:	003f8806 	br	4bfe4 <__alt_data_end+0xfffefc24>
   4c1c4:	8023883a 	mov	r17,r16
   4c1c8:	b025883a 	mov	r18,r22
   4c1cc:	480d883a 	mov	r6,r9
   4c1d0:	280f883a 	mov	r7,r5
   4c1d4:	003f8306 	br	4bfe4 <__alt_data_end+0xfffefc24>
   4c1d8:	b026d43a 	srli	r19,r22,16
   4c1dc:	902ed43a 	srli	r23,r18,16
   4c1e0:	b5bfffcc 	andi	r22,r22,65535
   4c1e4:	94bfffcc 	andi	r18,r18,65535
   4c1e8:	b00b883a 	mov	r5,r22
   4c1ec:	9009883a 	mov	r4,r18
   4c1f0:	d8c00515 	stw	r3,20(sp)
   4c1f4:	d9800715 	stw	r6,28(sp)
   4c1f8:	da000615 	stw	r8,24(sp)
   4c1fc:	004a9940 	call	4a994 <__mulsi3>
   4c200:	980b883a 	mov	r5,r19
   4c204:	9009883a 	mov	r4,r18
   4c208:	1029883a 	mov	r20,r2
   4c20c:	004a9940 	call	4a994 <__mulsi3>
   4c210:	b80b883a 	mov	r5,r23
   4c214:	9809883a 	mov	r4,r19
   4c218:	102b883a 	mov	r21,r2
   4c21c:	004a9940 	call	4a994 <__mulsi3>
   4c220:	b809883a 	mov	r4,r23
   4c224:	b00b883a 	mov	r5,r22
   4c228:	1039883a 	mov	fp,r2
   4c22c:	004a9940 	call	4a994 <__mulsi3>
   4c230:	a008d43a 	srli	r4,r20,16
   4c234:	1545883a 	add	r2,r2,r21
   4c238:	d8c00517 	ldw	r3,20(sp)
   4c23c:	2085883a 	add	r2,r4,r2
   4c240:	d9800717 	ldw	r6,28(sp)
   4c244:	da000617 	ldw	r8,24(sp)
   4c248:	1540022e 	bgeu	r2,r21,4c254 <__muldf3+0x3c4>
   4c24c:	01000074 	movhi	r4,1
   4c250:	e139883a 	add	fp,fp,r4
   4c254:	100e943a 	slli	r7,r2,16
   4c258:	1004d43a 	srli	r2,r2,16
   4c25c:	882ad43a 	srli	r21,r17,16
   4c260:	a53fffcc 	andi	r20,r20,65535
   4c264:	8c7fffcc 	andi	r17,r17,65535
   4c268:	3d29883a 	add	r20,r7,r20
   4c26c:	b00b883a 	mov	r5,r22
   4c270:	8809883a 	mov	r4,r17
   4c274:	d8c00515 	stw	r3,20(sp)
   4c278:	d9800715 	stw	r6,28(sp)
   4c27c:	da000615 	stw	r8,24(sp)
   4c280:	dd000115 	stw	r20,4(sp)
   4c284:	d8800015 	stw	r2,0(sp)
   4c288:	004a9940 	call	4a994 <__mulsi3>
   4c28c:	980b883a 	mov	r5,r19
   4c290:	8809883a 	mov	r4,r17
   4c294:	d8800215 	stw	r2,8(sp)
   4c298:	004a9940 	call	4a994 <__mulsi3>
   4c29c:	9809883a 	mov	r4,r19
   4c2a0:	a80b883a 	mov	r5,r21
   4c2a4:	1029883a 	mov	r20,r2
   4c2a8:	004a9940 	call	4a994 <__mulsi3>
   4c2ac:	b00b883a 	mov	r5,r22
   4c2b0:	a809883a 	mov	r4,r21
   4c2b4:	d8800415 	stw	r2,16(sp)
   4c2b8:	004a9940 	call	4a994 <__mulsi3>
   4c2bc:	d9c00217 	ldw	r7,8(sp)
   4c2c0:	1505883a 	add	r2,r2,r20
   4c2c4:	d8c00517 	ldw	r3,20(sp)
   4c2c8:	3826d43a 	srli	r19,r7,16
   4c2cc:	d9800717 	ldw	r6,28(sp)
   4c2d0:	da000617 	ldw	r8,24(sp)
   4c2d4:	9885883a 	add	r2,r19,r2
   4c2d8:	da400417 	ldw	r9,16(sp)
   4c2dc:	1500022e 	bgeu	r2,r20,4c2e8 <__muldf3+0x458>
   4c2e0:	01000074 	movhi	r4,1
   4c2e4:	4913883a 	add	r9,r9,r4
   4c2e8:	1028d43a 	srli	r20,r2,16
   4c2ec:	1004943a 	slli	r2,r2,16
   4c2f0:	802cd43a 	srli	r22,r16,16
   4c2f4:	843fffcc 	andi	r16,r16,65535
   4c2f8:	3cffffcc 	andi	r19,r7,65535
   4c2fc:	9009883a 	mov	r4,r18
   4c300:	800b883a 	mov	r5,r16
   4c304:	a269883a 	add	r20,r20,r9
   4c308:	d8c00515 	stw	r3,20(sp)
   4c30c:	d9800715 	stw	r6,28(sp)
   4c310:	da000615 	stw	r8,24(sp)
   4c314:	14e7883a 	add	r19,r2,r19
   4c318:	004a9940 	call	4a994 <__mulsi3>
   4c31c:	9009883a 	mov	r4,r18
   4c320:	b00b883a 	mov	r5,r22
   4c324:	d8800315 	stw	r2,12(sp)
   4c328:	004a9940 	call	4a994 <__mulsi3>
   4c32c:	b809883a 	mov	r4,r23
   4c330:	b00b883a 	mov	r5,r22
   4c334:	d8800215 	stw	r2,8(sp)
   4c338:	004a9940 	call	4a994 <__mulsi3>
   4c33c:	b80b883a 	mov	r5,r23
   4c340:	8009883a 	mov	r4,r16
   4c344:	d8800415 	stw	r2,16(sp)
   4c348:	004a9940 	call	4a994 <__mulsi3>
   4c34c:	da800317 	ldw	r10,12(sp)
   4c350:	d9c00217 	ldw	r7,8(sp)
   4c354:	d9000017 	ldw	r4,0(sp)
   4c358:	502ed43a 	srli	r23,r10,16
   4c35c:	11c5883a 	add	r2,r2,r7
   4c360:	24e5883a 	add	r18,r4,r19
   4c364:	b885883a 	add	r2,r23,r2
   4c368:	d8c00517 	ldw	r3,20(sp)
   4c36c:	d9800717 	ldw	r6,28(sp)
   4c370:	da000617 	ldw	r8,24(sp)
   4c374:	da400417 	ldw	r9,16(sp)
   4c378:	11c0022e 	bgeu	r2,r7,4c384 <__muldf3+0x4f4>
   4c37c:	01000074 	movhi	r4,1
   4c380:	4913883a 	add	r9,r9,r4
   4c384:	100ed43a 	srli	r7,r2,16
   4c388:	1004943a 	slli	r2,r2,16
   4c38c:	55ffffcc 	andi	r23,r10,65535
   4c390:	3a53883a 	add	r9,r7,r9
   4c394:	8809883a 	mov	r4,r17
   4c398:	800b883a 	mov	r5,r16
   4c39c:	d8c00515 	stw	r3,20(sp)
   4c3a0:	d9800715 	stw	r6,28(sp)
   4c3a4:	da000615 	stw	r8,24(sp)
   4c3a8:	da400415 	stw	r9,16(sp)
   4c3ac:	15ef883a 	add	r23,r2,r23
   4c3b0:	004a9940 	call	4a994 <__mulsi3>
   4c3b4:	8809883a 	mov	r4,r17
   4c3b8:	b00b883a 	mov	r5,r22
   4c3bc:	d8800215 	stw	r2,8(sp)
   4c3c0:	004a9940 	call	4a994 <__mulsi3>
   4c3c4:	b00b883a 	mov	r5,r22
   4c3c8:	a809883a 	mov	r4,r21
   4c3cc:	d8800315 	stw	r2,12(sp)
   4c3d0:	004a9940 	call	4a994 <__mulsi3>
   4c3d4:	8009883a 	mov	r4,r16
   4c3d8:	a80b883a 	mov	r5,r21
   4c3dc:	1023883a 	mov	r17,r2
   4c3e0:	004a9940 	call	4a994 <__mulsi3>
   4c3e4:	d9c00217 	ldw	r7,8(sp)
   4c3e8:	da800317 	ldw	r10,12(sp)
   4c3ec:	d8c00517 	ldw	r3,20(sp)
   4c3f0:	3808d43a 	srli	r4,r7,16
   4c3f4:	1285883a 	add	r2,r2,r10
   4c3f8:	d9800717 	ldw	r6,28(sp)
   4c3fc:	2085883a 	add	r2,r4,r2
   4c400:	da000617 	ldw	r8,24(sp)
   4c404:	da400417 	ldw	r9,16(sp)
   4c408:	1280022e 	bgeu	r2,r10,4c414 <__muldf3+0x584>
   4c40c:	01000074 	movhi	r4,1
   4c410:	8923883a 	add	r17,r17,r4
   4c414:	1008943a 	slli	r4,r2,16
   4c418:	39ffffcc 	andi	r7,r7,65535
   4c41c:	e4b9883a 	add	fp,fp,r18
   4c420:	21cf883a 	add	r7,r4,r7
   4c424:	e4e7803a 	cmpltu	r19,fp,r19
   4c428:	3d0f883a 	add	r7,r7,r20
   4c42c:	bf39883a 	add	fp,r23,fp
   4c430:	99c9883a 	add	r4,r19,r7
   4c434:	e5ef803a 	cmpltu	r23,fp,r23
   4c438:	490b883a 	add	r5,r9,r4
   4c43c:	1004d43a 	srli	r2,r2,16
   4c440:	b965883a 	add	r18,r23,r5
   4c444:	24c9803a 	cmpltu	r4,r4,r19
   4c448:	3d29803a 	cmpltu	r20,r7,r20
   4c44c:	a128b03a 	or	r20,r20,r4
   4c450:	95ef803a 	cmpltu	r23,r18,r23
   4c454:	2a53803a 	cmpltu	r9,r5,r9
   4c458:	a0a9883a 	add	r20,r20,r2
   4c45c:	4deeb03a 	or	r23,r9,r23
   4c460:	a5ef883a 	add	r23,r20,r23
   4c464:	bc63883a 	add	r17,r23,r17
   4c468:	e004927a 	slli	r2,fp,9
   4c46c:	d9000117 	ldw	r4,4(sp)
   4c470:	882e927a 	slli	r23,r17,9
   4c474:	9022d5fa 	srli	r17,r18,23
   4c478:	e038d5fa 	srli	fp,fp,23
   4c47c:	1104b03a 	or	r2,r2,r4
   4c480:	9024927a 	slli	r18,r18,9
   4c484:	1004c03a 	cmpne	r2,r2,zero
   4c488:	bc62b03a 	or	r17,r23,r17
   4c48c:	1738b03a 	or	fp,r2,fp
   4c490:	8880402c 	andhi	r2,r17,256
   4c494:	e4a4b03a 	or	r18,fp,r18
   4c498:	10000726 	beq	r2,zero,4c4b8 <__muldf3+0x628>
   4c49c:	9006d07a 	srli	r3,r18,1
   4c4a0:	880497fa 	slli	r2,r17,31
   4c4a4:	9480004c 	andi	r18,r18,1
   4c4a8:	8822d07a 	srli	r17,r17,1
   4c4ac:	1ca4b03a 	or	r18,r3,r18
   4c4b0:	14a4b03a 	or	r18,r2,r18
   4c4b4:	4007883a 	mov	r3,r8
   4c4b8:	1880ffc4 	addi	r2,r3,1023
   4c4bc:	0080460e 	bge	zero,r2,4c5d8 <__muldf3+0x748>
   4c4c0:	910001cc 	andi	r4,r18,7
   4c4c4:	20000726 	beq	r4,zero,4c4e4 <__muldf3+0x654>
   4c4c8:	910003cc 	andi	r4,r18,15
   4c4cc:	01400104 	movi	r5,4
   4c4d0:	21400426 	beq	r4,r5,4c4e4 <__muldf3+0x654>
   4c4d4:	9149883a 	add	r4,r18,r5
   4c4d8:	24a5803a 	cmpltu	r18,r4,r18
   4c4dc:	8ca3883a 	add	r17,r17,r18
   4c4e0:	2025883a 	mov	r18,r4
   4c4e4:	8900402c 	andhi	r4,r17,256
   4c4e8:	20000426 	beq	r4,zero,4c4fc <__muldf3+0x66c>
   4c4ec:	18810004 	addi	r2,r3,1024
   4c4f0:	00ffc034 	movhi	r3,65280
   4c4f4:	18ffffc4 	addi	r3,r3,-1
   4c4f8:	88e2703a 	and	r17,r17,r3
   4c4fc:	00c1ff84 	movi	r3,2046
   4c500:	18bf1316 	blt	r3,r2,4c150 <__alt_data_end+0xfffefd90>
   4c504:	882c977a 	slli	r22,r17,29
   4c508:	9024d0fa 	srli	r18,r18,3
   4c50c:	8822927a 	slli	r17,r17,9
   4c510:	1081ffcc 	andi	r2,r2,2047
   4c514:	b4acb03a 	or	r22,r22,r18
   4c518:	8820d33a 	srli	r16,r17,12
   4c51c:	3027883a 	mov	r19,r6
   4c520:	003eba06 	br	4c00c <__alt_data_end+0xfffefc4c>
   4c524:	8080022c 	andhi	r2,r16,8
   4c528:	10000926 	beq	r2,zero,4c550 <__muldf3+0x6c0>
   4c52c:	8880022c 	andhi	r2,r17,8
   4c530:	1000071e 	bne	r2,zero,4c550 <__muldf3+0x6c0>
   4c534:	00800434 	movhi	r2,16
   4c538:	8c000234 	orhi	r16,r17,8
   4c53c:	10bfffc4 	addi	r2,r2,-1
   4c540:	e027883a 	mov	r19,fp
   4c544:	80a0703a 	and	r16,r16,r2
   4c548:	902d883a 	mov	r22,r18
   4c54c:	003f1706 	br	4c1ac <__alt_data_end+0xfffefdec>
   4c550:	00800434 	movhi	r2,16
   4c554:	84000234 	orhi	r16,r16,8
   4c558:	10bfffc4 	addi	r2,r2,-1
   4c55c:	80a0703a 	and	r16,r16,r2
   4c560:	003f1206 	br	4c1ac <__alt_data_end+0xfffefdec>
   4c564:	147ff604 	addi	r17,r2,-40
   4c568:	3462983a 	sll	r17,r6,r17
   4c56c:	0025883a 	mov	r18,zero
   4c570:	003ef306 	br	4c140 <__alt_data_end+0xfffefd80>
   4c574:	3009883a 	mov	r4,r6
   4c578:	d9400215 	stw	r5,8(sp)
   4c57c:	d9800715 	stw	r6,28(sp)
   4c580:	da400415 	stw	r9,16(sp)
   4c584:	da800315 	stw	r10,12(sp)
   4c588:	004d1fc0 	call	4d1fc <__clzsi2>
   4c58c:	10800804 	addi	r2,r2,32
   4c590:	da800317 	ldw	r10,12(sp)
   4c594:	da400417 	ldw	r9,16(sp)
   4c598:	d9800717 	ldw	r6,28(sp)
   4c59c:	d9400217 	ldw	r5,8(sp)
   4c5a0:	003edd06 	br	4c118 <__alt_data_end+0xfffefd58>
   4c5a4:	143ff604 	addi	r16,r2,-40
   4c5a8:	ac20983a 	sll	r16,r21,r16
   4c5ac:	002d883a 	mov	r22,zero
   4c5b0:	003ec106 	br	4c0b8 <__alt_data_end+0xfffefcf8>
   4c5b4:	d9800715 	stw	r6,28(sp)
   4c5b8:	d9c00215 	stw	r7,8(sp)
   4c5bc:	da400415 	stw	r9,16(sp)
   4c5c0:	004d1fc0 	call	4d1fc <__clzsi2>
   4c5c4:	10800804 	addi	r2,r2,32
   4c5c8:	da400417 	ldw	r9,16(sp)
   4c5cc:	d9c00217 	ldw	r7,8(sp)
   4c5d0:	d9800717 	ldw	r6,28(sp)
   4c5d4:	003eae06 	br	4c090 <__alt_data_end+0xfffefcd0>
   4c5d8:	00c00044 	movi	r3,1
   4c5dc:	1887c83a 	sub	r3,r3,r2
   4c5e0:	01000e04 	movi	r4,56
   4c5e4:	20fe8516 	blt	r4,r3,4bffc <__alt_data_end+0xfffefc3c>
   4c5e8:	010007c4 	movi	r4,31
   4c5ec:	20c01b16 	blt	r4,r3,4c65c <__muldf3+0x7cc>
   4c5f0:	00800804 	movi	r2,32
   4c5f4:	10c5c83a 	sub	r2,r2,r3
   4c5f8:	888a983a 	sll	r5,r17,r2
   4c5fc:	90c8d83a 	srl	r4,r18,r3
   4c600:	9084983a 	sll	r2,r18,r2
   4c604:	88e2d83a 	srl	r17,r17,r3
   4c608:	2906b03a 	or	r3,r5,r4
   4c60c:	1004c03a 	cmpne	r2,r2,zero
   4c610:	1886b03a 	or	r3,r3,r2
   4c614:	188001cc 	andi	r2,r3,7
   4c618:	10000726 	beq	r2,zero,4c638 <__muldf3+0x7a8>
   4c61c:	188003cc 	andi	r2,r3,15
   4c620:	01000104 	movi	r4,4
   4c624:	11000426 	beq	r2,r4,4c638 <__muldf3+0x7a8>
   4c628:	1805883a 	mov	r2,r3
   4c62c:	10c00104 	addi	r3,r2,4
   4c630:	1885803a 	cmpltu	r2,r3,r2
   4c634:	88a3883a 	add	r17,r17,r2
   4c638:	8880202c 	andhi	r2,r17,128
   4c63c:	10001c26 	beq	r2,zero,4c6b0 <__muldf3+0x820>
   4c640:	3027883a 	mov	r19,r6
   4c644:	00800044 	movi	r2,1
   4c648:	0021883a 	mov	r16,zero
   4c64c:	002d883a 	mov	r22,zero
   4c650:	003e6e06 	br	4c00c <__alt_data_end+0xfffefc4c>
   4c654:	4007883a 	mov	r3,r8
   4c658:	003f9706 	br	4c4b8 <__alt_data_end+0xffff00f8>
   4c65c:	017ff844 	movi	r5,-31
   4c660:	2885c83a 	sub	r2,r5,r2
   4c664:	888ad83a 	srl	r5,r17,r2
   4c668:	00800804 	movi	r2,32
   4c66c:	18801a26 	beq	r3,r2,4c6d8 <__muldf3+0x848>
   4c670:	01001004 	movi	r4,64
   4c674:	20c7c83a 	sub	r3,r4,r3
   4c678:	88e2983a 	sll	r17,r17,r3
   4c67c:	8ca4b03a 	or	r18,r17,r18
   4c680:	9004c03a 	cmpne	r2,r18,zero
   4c684:	2884b03a 	or	r2,r5,r2
   4c688:	144001cc 	andi	r17,r2,7
   4c68c:	88000d1e 	bne	r17,zero,4c6c4 <__muldf3+0x834>
   4c690:	0021883a 	mov	r16,zero
   4c694:	102cd0fa 	srli	r22,r2,3
   4c698:	3027883a 	mov	r19,r6
   4c69c:	0005883a 	mov	r2,zero
   4c6a0:	b46cb03a 	or	r22,r22,r17
   4c6a4:	003e5906 	br	4c00c <__alt_data_end+0xfffefc4c>
   4c6a8:	1007883a 	mov	r3,r2
   4c6ac:	0023883a 	mov	r17,zero
   4c6b0:	8820927a 	slli	r16,r17,9
   4c6b4:	1805883a 	mov	r2,r3
   4c6b8:	8822977a 	slli	r17,r17,29
   4c6bc:	8020d33a 	srli	r16,r16,12
   4c6c0:	003ff406 	br	4c694 <__alt_data_end+0xffff02d4>
   4c6c4:	10c003cc 	andi	r3,r2,15
   4c6c8:	01000104 	movi	r4,4
   4c6cc:	193ff626 	beq	r3,r4,4c6a8 <__alt_data_end+0xffff02e8>
   4c6d0:	0023883a 	mov	r17,zero
   4c6d4:	003fd506 	br	4c62c <__alt_data_end+0xffff026c>
   4c6d8:	0023883a 	mov	r17,zero
   4c6dc:	003fe706 	br	4c67c <__alt_data_end+0xffff02bc>
   4c6e0:	00800434 	movhi	r2,16
   4c6e4:	8c000234 	orhi	r16,r17,8
   4c6e8:	10bfffc4 	addi	r2,r2,-1
   4c6ec:	3027883a 	mov	r19,r6
   4c6f0:	80a0703a 	and	r16,r16,r2
   4c6f4:	902d883a 	mov	r22,r18
   4c6f8:	003eac06 	br	4c1ac <__alt_data_end+0xfffefdec>

0004c6fc <__subdf3>:
   4c6fc:	02000434 	movhi	r8,16
   4c700:	423fffc4 	addi	r8,r8,-1
   4c704:	defffb04 	addi	sp,sp,-20
   4c708:	2a14703a 	and	r10,r5,r8
   4c70c:	3812d53a 	srli	r9,r7,20
   4c710:	3a10703a 	and	r8,r7,r8
   4c714:	2006d77a 	srli	r3,r4,29
   4c718:	3004d77a 	srli	r2,r6,29
   4c71c:	dc000015 	stw	r16,0(sp)
   4c720:	501490fa 	slli	r10,r10,3
   4c724:	2820d53a 	srli	r16,r5,20
   4c728:	401090fa 	slli	r8,r8,3
   4c72c:	dc800215 	stw	r18,8(sp)
   4c730:	dc400115 	stw	r17,4(sp)
   4c734:	dfc00415 	stw	ra,16(sp)
   4c738:	202290fa 	slli	r17,r4,3
   4c73c:	dcc00315 	stw	r19,12(sp)
   4c740:	4a41ffcc 	andi	r9,r9,2047
   4c744:	0101ffc4 	movi	r4,2047
   4c748:	2824d7fa 	srli	r18,r5,31
   4c74c:	8401ffcc 	andi	r16,r16,2047
   4c750:	50c6b03a 	or	r3,r10,r3
   4c754:	380ed7fa 	srli	r7,r7,31
   4c758:	408ab03a 	or	r5,r8,r2
   4c75c:	300c90fa 	slli	r6,r6,3
   4c760:	49009626 	beq	r9,r4,4c9bc <__subdf3+0x2c0>
   4c764:	39c0005c 	xori	r7,r7,1
   4c768:	8245c83a 	sub	r2,r16,r9
   4c76c:	3c807426 	beq	r7,r18,4c940 <__subdf3+0x244>
   4c770:	0080af0e 	bge	zero,r2,4ca30 <__subdf3+0x334>
   4c774:	48002a1e 	bne	r9,zero,4c820 <__subdf3+0x124>
   4c778:	2988b03a 	or	r4,r5,r6
   4c77c:	20009a1e 	bne	r4,zero,4c9e8 <__subdf3+0x2ec>
   4c780:	888001cc 	andi	r2,r17,7
   4c784:	10000726 	beq	r2,zero,4c7a4 <__subdf3+0xa8>
   4c788:	888003cc 	andi	r2,r17,15
   4c78c:	01000104 	movi	r4,4
   4c790:	11000426 	beq	r2,r4,4c7a4 <__subdf3+0xa8>
   4c794:	890b883a 	add	r5,r17,r4
   4c798:	2c63803a 	cmpltu	r17,r5,r17
   4c79c:	1c47883a 	add	r3,r3,r17
   4c7a0:	2823883a 	mov	r17,r5
   4c7a4:	1880202c 	andhi	r2,r3,128
   4c7a8:	10005926 	beq	r2,zero,4c910 <__subdf3+0x214>
   4c7ac:	84000044 	addi	r16,r16,1
   4c7b0:	0081ffc4 	movi	r2,2047
   4c7b4:	8080be26 	beq	r16,r2,4cab0 <__subdf3+0x3b4>
   4c7b8:	017fe034 	movhi	r5,65408
   4c7bc:	297fffc4 	addi	r5,r5,-1
   4c7c0:	1946703a 	and	r3,r3,r5
   4c7c4:	1804977a 	slli	r2,r3,29
   4c7c8:	1806927a 	slli	r3,r3,9
   4c7cc:	8822d0fa 	srli	r17,r17,3
   4c7d0:	8401ffcc 	andi	r16,r16,2047
   4c7d4:	180ad33a 	srli	r5,r3,12
   4c7d8:	9100004c 	andi	r4,r18,1
   4c7dc:	1444b03a 	or	r2,r2,r17
   4c7e0:	80c1ffcc 	andi	r3,r16,2047
   4c7e4:	1820953a 	slli	r16,r3,20
   4c7e8:	20c03fcc 	andi	r3,r4,255
   4c7ec:	180897fa 	slli	r4,r3,31
   4c7f0:	00c00434 	movhi	r3,16
   4c7f4:	18ffffc4 	addi	r3,r3,-1
   4c7f8:	28c6703a 	and	r3,r5,r3
   4c7fc:	1c06b03a 	or	r3,r3,r16
   4c800:	1906b03a 	or	r3,r3,r4
   4c804:	dfc00417 	ldw	ra,16(sp)
   4c808:	dcc00317 	ldw	r19,12(sp)
   4c80c:	dc800217 	ldw	r18,8(sp)
   4c810:	dc400117 	ldw	r17,4(sp)
   4c814:	dc000017 	ldw	r16,0(sp)
   4c818:	dec00504 	addi	sp,sp,20
   4c81c:	f800283a 	ret
   4c820:	0101ffc4 	movi	r4,2047
   4c824:	813fd626 	beq	r16,r4,4c780 <__alt_data_end+0xffff03c0>
   4c828:	29402034 	orhi	r5,r5,128
   4c82c:	01000e04 	movi	r4,56
   4c830:	2080a316 	blt	r4,r2,4cac0 <__subdf3+0x3c4>
   4c834:	010007c4 	movi	r4,31
   4c838:	2080c616 	blt	r4,r2,4cb54 <__subdf3+0x458>
   4c83c:	01000804 	movi	r4,32
   4c840:	2089c83a 	sub	r4,r4,r2
   4c844:	2910983a 	sll	r8,r5,r4
   4c848:	308ed83a 	srl	r7,r6,r2
   4c84c:	3108983a 	sll	r4,r6,r4
   4c850:	2884d83a 	srl	r2,r5,r2
   4c854:	41ccb03a 	or	r6,r8,r7
   4c858:	2008c03a 	cmpne	r4,r4,zero
   4c85c:	310cb03a 	or	r6,r6,r4
   4c860:	898dc83a 	sub	r6,r17,r6
   4c864:	89a3803a 	cmpltu	r17,r17,r6
   4c868:	1887c83a 	sub	r3,r3,r2
   4c86c:	1c47c83a 	sub	r3,r3,r17
   4c870:	3023883a 	mov	r17,r6
   4c874:	1880202c 	andhi	r2,r3,128
   4c878:	10002326 	beq	r2,zero,4c908 <__subdf3+0x20c>
   4c87c:	04c02034 	movhi	r19,128
   4c880:	9cffffc4 	addi	r19,r19,-1
   4c884:	1ce6703a 	and	r19,r3,r19
   4c888:	98007a26 	beq	r19,zero,4ca74 <__subdf3+0x378>
   4c88c:	9809883a 	mov	r4,r19
   4c890:	004d1fc0 	call	4d1fc <__clzsi2>
   4c894:	113ffe04 	addi	r4,r2,-8
   4c898:	00c007c4 	movi	r3,31
   4c89c:	19007b16 	blt	r3,r4,4ca8c <__subdf3+0x390>
   4c8a0:	00800804 	movi	r2,32
   4c8a4:	1105c83a 	sub	r2,r2,r4
   4c8a8:	8884d83a 	srl	r2,r17,r2
   4c8ac:	9906983a 	sll	r3,r19,r4
   4c8b0:	8922983a 	sll	r17,r17,r4
   4c8b4:	10c4b03a 	or	r2,r2,r3
   4c8b8:	24007816 	blt	r4,r16,4ca9c <__subdf3+0x3a0>
   4c8bc:	2421c83a 	sub	r16,r4,r16
   4c8c0:	80c00044 	addi	r3,r16,1
   4c8c4:	010007c4 	movi	r4,31
   4c8c8:	20c09516 	blt	r4,r3,4cb20 <__subdf3+0x424>
   4c8cc:	01400804 	movi	r5,32
   4c8d0:	28cbc83a 	sub	r5,r5,r3
   4c8d4:	88c8d83a 	srl	r4,r17,r3
   4c8d8:	8962983a 	sll	r17,r17,r5
   4c8dc:	114a983a 	sll	r5,r2,r5
   4c8e0:	10c6d83a 	srl	r3,r2,r3
   4c8e4:	8804c03a 	cmpne	r2,r17,zero
   4c8e8:	290ab03a 	or	r5,r5,r4
   4c8ec:	28a2b03a 	or	r17,r5,r2
   4c8f0:	0021883a 	mov	r16,zero
   4c8f4:	003fa206 	br	4c780 <__alt_data_end+0xffff03c0>
   4c8f8:	2090b03a 	or	r8,r4,r2
   4c8fc:	40018e26 	beq	r8,zero,4cf38 <__subdf3+0x83c>
   4c900:	1007883a 	mov	r3,r2
   4c904:	2023883a 	mov	r17,r4
   4c908:	888001cc 	andi	r2,r17,7
   4c90c:	103f9e1e 	bne	r2,zero,4c788 <__alt_data_end+0xffff03c8>
   4c910:	1804977a 	slli	r2,r3,29
   4c914:	8822d0fa 	srli	r17,r17,3
   4c918:	1810d0fa 	srli	r8,r3,3
   4c91c:	9100004c 	andi	r4,r18,1
   4c920:	1444b03a 	or	r2,r2,r17
   4c924:	00c1ffc4 	movi	r3,2047
   4c928:	80c02826 	beq	r16,r3,4c9cc <__subdf3+0x2d0>
   4c92c:	01400434 	movhi	r5,16
   4c930:	297fffc4 	addi	r5,r5,-1
   4c934:	80e0703a 	and	r16,r16,r3
   4c938:	414a703a 	and	r5,r8,r5
   4c93c:	003fa806 	br	4c7e0 <__alt_data_end+0xffff0420>
   4c940:	0080630e 	bge	zero,r2,4cad0 <__subdf3+0x3d4>
   4c944:	48003026 	beq	r9,zero,4ca08 <__subdf3+0x30c>
   4c948:	0101ffc4 	movi	r4,2047
   4c94c:	813f8c26 	beq	r16,r4,4c780 <__alt_data_end+0xffff03c0>
   4c950:	29402034 	orhi	r5,r5,128
   4c954:	01000e04 	movi	r4,56
   4c958:	2080a90e 	bge	r4,r2,4cc00 <__subdf3+0x504>
   4c95c:	298cb03a 	or	r6,r5,r6
   4c960:	3012c03a 	cmpne	r9,r6,zero
   4c964:	0005883a 	mov	r2,zero
   4c968:	4c53883a 	add	r9,r9,r17
   4c96c:	4c63803a 	cmpltu	r17,r9,r17
   4c970:	10c7883a 	add	r3,r2,r3
   4c974:	88c7883a 	add	r3,r17,r3
   4c978:	4823883a 	mov	r17,r9
   4c97c:	1880202c 	andhi	r2,r3,128
   4c980:	1000d026 	beq	r2,zero,4ccc4 <__subdf3+0x5c8>
   4c984:	84000044 	addi	r16,r16,1
   4c988:	0081ffc4 	movi	r2,2047
   4c98c:	8080fe26 	beq	r16,r2,4cd88 <__subdf3+0x68c>
   4c990:	00bfe034 	movhi	r2,65408
   4c994:	10bfffc4 	addi	r2,r2,-1
   4c998:	1886703a 	and	r3,r3,r2
   4c99c:	880ad07a 	srli	r5,r17,1
   4c9a0:	180497fa 	slli	r2,r3,31
   4c9a4:	8900004c 	andi	r4,r17,1
   4c9a8:	2922b03a 	or	r17,r5,r4
   4c9ac:	1806d07a 	srli	r3,r3,1
   4c9b0:	1462b03a 	or	r17,r2,r17
   4c9b4:	3825883a 	mov	r18,r7
   4c9b8:	003f7106 	br	4c780 <__alt_data_end+0xffff03c0>
   4c9bc:	2984b03a 	or	r2,r5,r6
   4c9c0:	103f6826 	beq	r2,zero,4c764 <__alt_data_end+0xffff03a4>
   4c9c4:	39c03fcc 	andi	r7,r7,255
   4c9c8:	003f6706 	br	4c768 <__alt_data_end+0xffff03a8>
   4c9cc:	4086b03a 	or	r3,r8,r2
   4c9d0:	18015226 	beq	r3,zero,4cf1c <__subdf3+0x820>
   4c9d4:	00c00434 	movhi	r3,16
   4c9d8:	41400234 	orhi	r5,r8,8
   4c9dc:	18ffffc4 	addi	r3,r3,-1
   4c9e0:	28ca703a 	and	r5,r5,r3
   4c9e4:	003f7e06 	br	4c7e0 <__alt_data_end+0xffff0420>
   4c9e8:	10bfffc4 	addi	r2,r2,-1
   4c9ec:	1000491e 	bne	r2,zero,4cb14 <__subdf3+0x418>
   4c9f0:	898fc83a 	sub	r7,r17,r6
   4c9f4:	89e3803a 	cmpltu	r17,r17,r7
   4c9f8:	1947c83a 	sub	r3,r3,r5
   4c9fc:	1c47c83a 	sub	r3,r3,r17
   4ca00:	3823883a 	mov	r17,r7
   4ca04:	003f9b06 	br	4c874 <__alt_data_end+0xffff04b4>
   4ca08:	2988b03a 	or	r4,r5,r6
   4ca0c:	203f5c26 	beq	r4,zero,4c780 <__alt_data_end+0xffff03c0>
   4ca10:	10bfffc4 	addi	r2,r2,-1
   4ca14:	1000931e 	bne	r2,zero,4cc64 <__subdf3+0x568>
   4ca18:	898d883a 	add	r6,r17,r6
   4ca1c:	3463803a 	cmpltu	r17,r6,r17
   4ca20:	1947883a 	add	r3,r3,r5
   4ca24:	88c7883a 	add	r3,r17,r3
   4ca28:	3023883a 	mov	r17,r6
   4ca2c:	003fd306 	br	4c97c <__alt_data_end+0xffff05bc>
   4ca30:	1000541e 	bne	r2,zero,4cb84 <__subdf3+0x488>
   4ca34:	80800044 	addi	r2,r16,1
   4ca38:	1081ffcc 	andi	r2,r2,2047
   4ca3c:	01000044 	movi	r4,1
   4ca40:	2080a20e 	bge	r4,r2,4cccc <__subdf3+0x5d0>
   4ca44:	8989c83a 	sub	r4,r17,r6
   4ca48:	8905803a 	cmpltu	r2,r17,r4
   4ca4c:	1967c83a 	sub	r19,r3,r5
   4ca50:	98a7c83a 	sub	r19,r19,r2
   4ca54:	9880202c 	andhi	r2,r19,128
   4ca58:	10006326 	beq	r2,zero,4cbe8 <__subdf3+0x4ec>
   4ca5c:	3463c83a 	sub	r17,r6,r17
   4ca60:	28c7c83a 	sub	r3,r5,r3
   4ca64:	344d803a 	cmpltu	r6,r6,r17
   4ca68:	19a7c83a 	sub	r19,r3,r6
   4ca6c:	3825883a 	mov	r18,r7
   4ca70:	983f861e 	bne	r19,zero,4c88c <__alt_data_end+0xffff04cc>
   4ca74:	8809883a 	mov	r4,r17
   4ca78:	004d1fc0 	call	4d1fc <__clzsi2>
   4ca7c:	10800804 	addi	r2,r2,32
   4ca80:	113ffe04 	addi	r4,r2,-8
   4ca84:	00c007c4 	movi	r3,31
   4ca88:	193f850e 	bge	r3,r4,4c8a0 <__alt_data_end+0xffff04e0>
   4ca8c:	10bff604 	addi	r2,r2,-40
   4ca90:	8884983a 	sll	r2,r17,r2
   4ca94:	0023883a 	mov	r17,zero
   4ca98:	243f880e 	bge	r4,r16,4c8bc <__alt_data_end+0xffff04fc>
   4ca9c:	00ffe034 	movhi	r3,65408
   4caa0:	18ffffc4 	addi	r3,r3,-1
   4caa4:	8121c83a 	sub	r16,r16,r4
   4caa8:	10c6703a 	and	r3,r2,r3
   4caac:	003f3406 	br	4c780 <__alt_data_end+0xffff03c0>
   4cab0:	9100004c 	andi	r4,r18,1
   4cab4:	000b883a 	mov	r5,zero
   4cab8:	0005883a 	mov	r2,zero
   4cabc:	003f4806 	br	4c7e0 <__alt_data_end+0xffff0420>
   4cac0:	298cb03a 	or	r6,r5,r6
   4cac4:	300cc03a 	cmpne	r6,r6,zero
   4cac8:	0005883a 	mov	r2,zero
   4cacc:	003f6406 	br	4c860 <__alt_data_end+0xffff04a0>
   4cad0:	10009a1e 	bne	r2,zero,4cd3c <__subdf3+0x640>
   4cad4:	82400044 	addi	r9,r16,1
   4cad8:	4881ffcc 	andi	r2,r9,2047
   4cadc:	02800044 	movi	r10,1
   4cae0:	5080670e 	bge	r10,r2,4cc80 <__subdf3+0x584>
   4cae4:	0081ffc4 	movi	r2,2047
   4cae8:	4880af26 	beq	r9,r2,4cda8 <__subdf3+0x6ac>
   4caec:	898d883a 	add	r6,r17,r6
   4caf0:	1945883a 	add	r2,r3,r5
   4caf4:	3447803a 	cmpltu	r3,r6,r17
   4caf8:	1887883a 	add	r3,r3,r2
   4cafc:	182297fa 	slli	r17,r3,31
   4cb00:	300cd07a 	srli	r6,r6,1
   4cb04:	1806d07a 	srli	r3,r3,1
   4cb08:	4821883a 	mov	r16,r9
   4cb0c:	89a2b03a 	or	r17,r17,r6
   4cb10:	003f1b06 	br	4c780 <__alt_data_end+0xffff03c0>
   4cb14:	0101ffc4 	movi	r4,2047
   4cb18:	813f441e 	bne	r16,r4,4c82c <__alt_data_end+0xffff046c>
   4cb1c:	003f1806 	br	4c780 <__alt_data_end+0xffff03c0>
   4cb20:	843ff844 	addi	r16,r16,-31
   4cb24:	01400804 	movi	r5,32
   4cb28:	1408d83a 	srl	r4,r2,r16
   4cb2c:	19405026 	beq	r3,r5,4cc70 <__subdf3+0x574>
   4cb30:	01401004 	movi	r5,64
   4cb34:	28c7c83a 	sub	r3,r5,r3
   4cb38:	10c4983a 	sll	r2,r2,r3
   4cb3c:	88a2b03a 	or	r17,r17,r2
   4cb40:	8822c03a 	cmpne	r17,r17,zero
   4cb44:	2462b03a 	or	r17,r4,r17
   4cb48:	0007883a 	mov	r3,zero
   4cb4c:	0021883a 	mov	r16,zero
   4cb50:	003f6d06 	br	4c908 <__alt_data_end+0xffff0548>
   4cb54:	11fff804 	addi	r7,r2,-32
   4cb58:	01000804 	movi	r4,32
   4cb5c:	29ced83a 	srl	r7,r5,r7
   4cb60:	11004526 	beq	r2,r4,4cc78 <__subdf3+0x57c>
   4cb64:	01001004 	movi	r4,64
   4cb68:	2089c83a 	sub	r4,r4,r2
   4cb6c:	2904983a 	sll	r2,r5,r4
   4cb70:	118cb03a 	or	r6,r2,r6
   4cb74:	300cc03a 	cmpne	r6,r6,zero
   4cb78:	398cb03a 	or	r6,r7,r6
   4cb7c:	0005883a 	mov	r2,zero
   4cb80:	003f3706 	br	4c860 <__alt_data_end+0xffff04a0>
   4cb84:	80002a26 	beq	r16,zero,4cc30 <__subdf3+0x534>
   4cb88:	0101ffc4 	movi	r4,2047
   4cb8c:	49006626 	beq	r9,r4,4cd28 <__subdf3+0x62c>
   4cb90:	0085c83a 	sub	r2,zero,r2
   4cb94:	18c02034 	orhi	r3,r3,128
   4cb98:	01000e04 	movi	r4,56
   4cb9c:	20807e16 	blt	r4,r2,4cd98 <__subdf3+0x69c>
   4cba0:	010007c4 	movi	r4,31
   4cba4:	2080e716 	blt	r4,r2,4cf44 <__subdf3+0x848>
   4cba8:	01000804 	movi	r4,32
   4cbac:	2089c83a 	sub	r4,r4,r2
   4cbb0:	1914983a 	sll	r10,r3,r4
   4cbb4:	8890d83a 	srl	r8,r17,r2
   4cbb8:	8908983a 	sll	r4,r17,r4
   4cbbc:	1884d83a 	srl	r2,r3,r2
   4cbc0:	5222b03a 	or	r17,r10,r8
   4cbc4:	2006c03a 	cmpne	r3,r4,zero
   4cbc8:	88e2b03a 	or	r17,r17,r3
   4cbcc:	3463c83a 	sub	r17,r6,r17
   4cbd0:	2885c83a 	sub	r2,r5,r2
   4cbd4:	344d803a 	cmpltu	r6,r6,r17
   4cbd8:	1187c83a 	sub	r3,r2,r6
   4cbdc:	4821883a 	mov	r16,r9
   4cbe0:	3825883a 	mov	r18,r7
   4cbe4:	003f2306 	br	4c874 <__alt_data_end+0xffff04b4>
   4cbe8:	24d0b03a 	or	r8,r4,r19
   4cbec:	40001b1e 	bne	r8,zero,4cc5c <__subdf3+0x560>
   4cbf0:	0005883a 	mov	r2,zero
   4cbf4:	0009883a 	mov	r4,zero
   4cbf8:	0021883a 	mov	r16,zero
   4cbfc:	003f4906 	br	4c924 <__alt_data_end+0xffff0564>
   4cc00:	010007c4 	movi	r4,31
   4cc04:	20803a16 	blt	r4,r2,4ccf0 <__subdf3+0x5f4>
   4cc08:	01000804 	movi	r4,32
   4cc0c:	2089c83a 	sub	r4,r4,r2
   4cc10:	2912983a 	sll	r9,r5,r4
   4cc14:	3090d83a 	srl	r8,r6,r2
   4cc18:	3108983a 	sll	r4,r6,r4
   4cc1c:	2884d83a 	srl	r2,r5,r2
   4cc20:	4a12b03a 	or	r9,r9,r8
   4cc24:	2008c03a 	cmpne	r4,r4,zero
   4cc28:	4912b03a 	or	r9,r9,r4
   4cc2c:	003f4e06 	br	4c968 <__alt_data_end+0xffff05a8>
   4cc30:	1c48b03a 	or	r4,r3,r17
   4cc34:	20003c26 	beq	r4,zero,4cd28 <__subdf3+0x62c>
   4cc38:	0084303a 	nor	r2,zero,r2
   4cc3c:	1000381e 	bne	r2,zero,4cd20 <__subdf3+0x624>
   4cc40:	3463c83a 	sub	r17,r6,r17
   4cc44:	28c5c83a 	sub	r2,r5,r3
   4cc48:	344d803a 	cmpltu	r6,r6,r17
   4cc4c:	1187c83a 	sub	r3,r2,r6
   4cc50:	4821883a 	mov	r16,r9
   4cc54:	3825883a 	mov	r18,r7
   4cc58:	003f0606 	br	4c874 <__alt_data_end+0xffff04b4>
   4cc5c:	2023883a 	mov	r17,r4
   4cc60:	003f0906 	br	4c888 <__alt_data_end+0xffff04c8>
   4cc64:	0101ffc4 	movi	r4,2047
   4cc68:	813f3a1e 	bne	r16,r4,4c954 <__alt_data_end+0xffff0594>
   4cc6c:	003ec406 	br	4c780 <__alt_data_end+0xffff03c0>
   4cc70:	0005883a 	mov	r2,zero
   4cc74:	003fb106 	br	4cb3c <__alt_data_end+0xffff077c>
   4cc78:	0005883a 	mov	r2,zero
   4cc7c:	003fbc06 	br	4cb70 <__alt_data_end+0xffff07b0>
   4cc80:	1c44b03a 	or	r2,r3,r17
   4cc84:	80008e1e 	bne	r16,zero,4cec0 <__subdf3+0x7c4>
   4cc88:	1000c826 	beq	r2,zero,4cfac <__subdf3+0x8b0>
   4cc8c:	2984b03a 	or	r2,r5,r6
   4cc90:	103ebb26 	beq	r2,zero,4c780 <__alt_data_end+0xffff03c0>
   4cc94:	8989883a 	add	r4,r17,r6
   4cc98:	1945883a 	add	r2,r3,r5
   4cc9c:	2447803a 	cmpltu	r3,r4,r17
   4cca0:	1887883a 	add	r3,r3,r2
   4cca4:	1880202c 	andhi	r2,r3,128
   4cca8:	2023883a 	mov	r17,r4
   4ccac:	103f1626 	beq	r2,zero,4c908 <__alt_data_end+0xffff0548>
   4ccb0:	00bfe034 	movhi	r2,65408
   4ccb4:	10bfffc4 	addi	r2,r2,-1
   4ccb8:	5021883a 	mov	r16,r10
   4ccbc:	1886703a 	and	r3,r3,r2
   4ccc0:	003eaf06 	br	4c780 <__alt_data_end+0xffff03c0>
   4ccc4:	3825883a 	mov	r18,r7
   4ccc8:	003f0f06 	br	4c908 <__alt_data_end+0xffff0548>
   4cccc:	1c44b03a 	or	r2,r3,r17
   4ccd0:	8000251e 	bne	r16,zero,4cd68 <__subdf3+0x66c>
   4ccd4:	1000661e 	bne	r2,zero,4ce70 <__subdf3+0x774>
   4ccd8:	2990b03a 	or	r8,r5,r6
   4ccdc:	40009626 	beq	r8,zero,4cf38 <__subdf3+0x83c>
   4cce0:	2807883a 	mov	r3,r5
   4cce4:	3023883a 	mov	r17,r6
   4cce8:	3825883a 	mov	r18,r7
   4ccec:	003ea406 	br	4c780 <__alt_data_end+0xffff03c0>
   4ccf0:	127ff804 	addi	r9,r2,-32
   4ccf4:	01000804 	movi	r4,32
   4ccf8:	2a52d83a 	srl	r9,r5,r9
   4ccfc:	11008c26 	beq	r2,r4,4cf30 <__subdf3+0x834>
   4cd00:	01001004 	movi	r4,64
   4cd04:	2085c83a 	sub	r2,r4,r2
   4cd08:	2884983a 	sll	r2,r5,r2
   4cd0c:	118cb03a 	or	r6,r2,r6
   4cd10:	300cc03a 	cmpne	r6,r6,zero
   4cd14:	4992b03a 	or	r9,r9,r6
   4cd18:	0005883a 	mov	r2,zero
   4cd1c:	003f1206 	br	4c968 <__alt_data_end+0xffff05a8>
   4cd20:	0101ffc4 	movi	r4,2047
   4cd24:	493f9c1e 	bne	r9,r4,4cb98 <__alt_data_end+0xffff07d8>
   4cd28:	2807883a 	mov	r3,r5
   4cd2c:	3023883a 	mov	r17,r6
   4cd30:	4821883a 	mov	r16,r9
   4cd34:	3825883a 	mov	r18,r7
   4cd38:	003e9106 	br	4c780 <__alt_data_end+0xffff03c0>
   4cd3c:	80001f1e 	bne	r16,zero,4cdbc <__subdf3+0x6c0>
   4cd40:	1c48b03a 	or	r4,r3,r17
   4cd44:	20005a26 	beq	r4,zero,4ceb0 <__subdf3+0x7b4>
   4cd48:	0084303a 	nor	r2,zero,r2
   4cd4c:	1000561e 	bne	r2,zero,4cea8 <__subdf3+0x7ac>
   4cd50:	89a3883a 	add	r17,r17,r6
   4cd54:	1945883a 	add	r2,r3,r5
   4cd58:	898d803a 	cmpltu	r6,r17,r6
   4cd5c:	3087883a 	add	r3,r6,r2
   4cd60:	4821883a 	mov	r16,r9
   4cd64:	003f0506 	br	4c97c <__alt_data_end+0xffff05bc>
   4cd68:	10002b1e 	bne	r2,zero,4ce18 <__subdf3+0x71c>
   4cd6c:	2984b03a 	or	r2,r5,r6
   4cd70:	10008026 	beq	r2,zero,4cf74 <__subdf3+0x878>
   4cd74:	2807883a 	mov	r3,r5
   4cd78:	3023883a 	mov	r17,r6
   4cd7c:	3825883a 	mov	r18,r7
   4cd80:	0401ffc4 	movi	r16,2047
   4cd84:	003e7e06 	br	4c780 <__alt_data_end+0xffff03c0>
   4cd88:	3809883a 	mov	r4,r7
   4cd8c:	0011883a 	mov	r8,zero
   4cd90:	0005883a 	mov	r2,zero
   4cd94:	003ee306 	br	4c924 <__alt_data_end+0xffff0564>
   4cd98:	1c62b03a 	or	r17,r3,r17
   4cd9c:	8822c03a 	cmpne	r17,r17,zero
   4cda0:	0005883a 	mov	r2,zero
   4cda4:	003f8906 	br	4cbcc <__alt_data_end+0xffff080c>
   4cda8:	3809883a 	mov	r4,r7
   4cdac:	4821883a 	mov	r16,r9
   4cdb0:	0011883a 	mov	r8,zero
   4cdb4:	0005883a 	mov	r2,zero
   4cdb8:	003eda06 	br	4c924 <__alt_data_end+0xffff0564>
   4cdbc:	0101ffc4 	movi	r4,2047
   4cdc0:	49003b26 	beq	r9,r4,4ceb0 <__subdf3+0x7b4>
   4cdc4:	0085c83a 	sub	r2,zero,r2
   4cdc8:	18c02034 	orhi	r3,r3,128
   4cdcc:	01000e04 	movi	r4,56
   4cdd0:	20806e16 	blt	r4,r2,4cf8c <__subdf3+0x890>
   4cdd4:	010007c4 	movi	r4,31
   4cdd8:	20807716 	blt	r4,r2,4cfb8 <__subdf3+0x8bc>
   4cddc:	01000804 	movi	r4,32
   4cde0:	2089c83a 	sub	r4,r4,r2
   4cde4:	1914983a 	sll	r10,r3,r4
   4cde8:	8890d83a 	srl	r8,r17,r2
   4cdec:	8908983a 	sll	r4,r17,r4
   4cdf0:	1884d83a 	srl	r2,r3,r2
   4cdf4:	5222b03a 	or	r17,r10,r8
   4cdf8:	2006c03a 	cmpne	r3,r4,zero
   4cdfc:	88e2b03a 	or	r17,r17,r3
   4ce00:	89a3883a 	add	r17,r17,r6
   4ce04:	1145883a 	add	r2,r2,r5
   4ce08:	898d803a 	cmpltu	r6,r17,r6
   4ce0c:	3087883a 	add	r3,r6,r2
   4ce10:	4821883a 	mov	r16,r9
   4ce14:	003ed906 	br	4c97c <__alt_data_end+0xffff05bc>
   4ce18:	2984b03a 	or	r2,r5,r6
   4ce1c:	10004226 	beq	r2,zero,4cf28 <__subdf3+0x82c>
   4ce20:	1808d0fa 	srli	r4,r3,3
   4ce24:	8822d0fa 	srli	r17,r17,3
   4ce28:	1806977a 	slli	r3,r3,29
   4ce2c:	2080022c 	andhi	r2,r4,8
   4ce30:	1c62b03a 	or	r17,r3,r17
   4ce34:	10000826 	beq	r2,zero,4ce58 <__subdf3+0x75c>
   4ce38:	2812d0fa 	srli	r9,r5,3
   4ce3c:	4880022c 	andhi	r2,r9,8
   4ce40:	1000051e 	bne	r2,zero,4ce58 <__subdf3+0x75c>
   4ce44:	300cd0fa 	srli	r6,r6,3
   4ce48:	2804977a 	slli	r2,r5,29
   4ce4c:	4809883a 	mov	r4,r9
   4ce50:	3825883a 	mov	r18,r7
   4ce54:	11a2b03a 	or	r17,r2,r6
   4ce58:	8806d77a 	srli	r3,r17,29
   4ce5c:	200890fa 	slli	r4,r4,3
   4ce60:	882290fa 	slli	r17,r17,3
   4ce64:	0401ffc4 	movi	r16,2047
   4ce68:	1906b03a 	or	r3,r3,r4
   4ce6c:	003e4406 	br	4c780 <__alt_data_end+0xffff03c0>
   4ce70:	2984b03a 	or	r2,r5,r6
   4ce74:	103e4226 	beq	r2,zero,4c780 <__alt_data_end+0xffff03c0>
   4ce78:	8989c83a 	sub	r4,r17,r6
   4ce7c:	8911803a 	cmpltu	r8,r17,r4
   4ce80:	1945c83a 	sub	r2,r3,r5
   4ce84:	1205c83a 	sub	r2,r2,r8
   4ce88:	1200202c 	andhi	r8,r2,128
   4ce8c:	403e9a26 	beq	r8,zero,4c8f8 <__alt_data_end+0xffff0538>
   4ce90:	3463c83a 	sub	r17,r6,r17
   4ce94:	28c5c83a 	sub	r2,r5,r3
   4ce98:	344d803a 	cmpltu	r6,r6,r17
   4ce9c:	1187c83a 	sub	r3,r2,r6
   4cea0:	3825883a 	mov	r18,r7
   4cea4:	003e3606 	br	4c780 <__alt_data_end+0xffff03c0>
   4cea8:	0101ffc4 	movi	r4,2047
   4ceac:	493fc71e 	bne	r9,r4,4cdcc <__alt_data_end+0xffff0a0c>
   4ceb0:	2807883a 	mov	r3,r5
   4ceb4:	3023883a 	mov	r17,r6
   4ceb8:	4821883a 	mov	r16,r9
   4cebc:	003e3006 	br	4c780 <__alt_data_end+0xffff03c0>
   4cec0:	10003626 	beq	r2,zero,4cf9c <__subdf3+0x8a0>
   4cec4:	2984b03a 	or	r2,r5,r6
   4cec8:	10001726 	beq	r2,zero,4cf28 <__subdf3+0x82c>
   4cecc:	1808d0fa 	srli	r4,r3,3
   4ced0:	8822d0fa 	srli	r17,r17,3
   4ced4:	1806977a 	slli	r3,r3,29
   4ced8:	2080022c 	andhi	r2,r4,8
   4cedc:	1c62b03a 	or	r17,r3,r17
   4cee0:	10000726 	beq	r2,zero,4cf00 <__subdf3+0x804>
   4cee4:	2812d0fa 	srli	r9,r5,3
   4cee8:	4880022c 	andhi	r2,r9,8
   4ceec:	1000041e 	bne	r2,zero,4cf00 <__subdf3+0x804>
   4cef0:	300cd0fa 	srli	r6,r6,3
   4cef4:	2804977a 	slli	r2,r5,29
   4cef8:	4809883a 	mov	r4,r9
   4cefc:	11a2b03a 	or	r17,r2,r6
   4cf00:	8806d77a 	srli	r3,r17,29
   4cf04:	200890fa 	slli	r4,r4,3
   4cf08:	882290fa 	slli	r17,r17,3
   4cf0c:	3825883a 	mov	r18,r7
   4cf10:	1906b03a 	or	r3,r3,r4
   4cf14:	0401ffc4 	movi	r16,2047
   4cf18:	003e1906 	br	4c780 <__alt_data_end+0xffff03c0>
   4cf1c:	000b883a 	mov	r5,zero
   4cf20:	0005883a 	mov	r2,zero
   4cf24:	003e2e06 	br	4c7e0 <__alt_data_end+0xffff0420>
   4cf28:	0401ffc4 	movi	r16,2047
   4cf2c:	003e1406 	br	4c780 <__alt_data_end+0xffff03c0>
   4cf30:	0005883a 	mov	r2,zero
   4cf34:	003f7506 	br	4cd0c <__alt_data_end+0xffff094c>
   4cf38:	0005883a 	mov	r2,zero
   4cf3c:	0009883a 	mov	r4,zero
   4cf40:	003e7806 	br	4c924 <__alt_data_end+0xffff0564>
   4cf44:	123ff804 	addi	r8,r2,-32
   4cf48:	01000804 	movi	r4,32
   4cf4c:	1a10d83a 	srl	r8,r3,r8
   4cf50:	11002526 	beq	r2,r4,4cfe8 <__subdf3+0x8ec>
   4cf54:	01001004 	movi	r4,64
   4cf58:	2085c83a 	sub	r2,r4,r2
   4cf5c:	1884983a 	sll	r2,r3,r2
   4cf60:	1444b03a 	or	r2,r2,r17
   4cf64:	1004c03a 	cmpne	r2,r2,zero
   4cf68:	40a2b03a 	or	r17,r8,r2
   4cf6c:	0005883a 	mov	r2,zero
   4cf70:	003f1606 	br	4cbcc <__alt_data_end+0xffff080c>
   4cf74:	02000434 	movhi	r8,16
   4cf78:	0009883a 	mov	r4,zero
   4cf7c:	423fffc4 	addi	r8,r8,-1
   4cf80:	00bfffc4 	movi	r2,-1
   4cf84:	0401ffc4 	movi	r16,2047
   4cf88:	003e6606 	br	4c924 <__alt_data_end+0xffff0564>
   4cf8c:	1c62b03a 	or	r17,r3,r17
   4cf90:	8822c03a 	cmpne	r17,r17,zero
   4cf94:	0005883a 	mov	r2,zero
   4cf98:	003f9906 	br	4ce00 <__alt_data_end+0xffff0a40>
   4cf9c:	2807883a 	mov	r3,r5
   4cfa0:	3023883a 	mov	r17,r6
   4cfa4:	0401ffc4 	movi	r16,2047
   4cfa8:	003df506 	br	4c780 <__alt_data_end+0xffff03c0>
   4cfac:	2807883a 	mov	r3,r5
   4cfb0:	3023883a 	mov	r17,r6
   4cfb4:	003df206 	br	4c780 <__alt_data_end+0xffff03c0>
   4cfb8:	123ff804 	addi	r8,r2,-32
   4cfbc:	01000804 	movi	r4,32
   4cfc0:	1a10d83a 	srl	r8,r3,r8
   4cfc4:	11000a26 	beq	r2,r4,4cff0 <__subdf3+0x8f4>
   4cfc8:	01001004 	movi	r4,64
   4cfcc:	2085c83a 	sub	r2,r4,r2
   4cfd0:	1884983a 	sll	r2,r3,r2
   4cfd4:	1444b03a 	or	r2,r2,r17
   4cfd8:	1004c03a 	cmpne	r2,r2,zero
   4cfdc:	40a2b03a 	or	r17,r8,r2
   4cfe0:	0005883a 	mov	r2,zero
   4cfe4:	003f8606 	br	4ce00 <__alt_data_end+0xffff0a40>
   4cfe8:	0005883a 	mov	r2,zero
   4cfec:	003fdc06 	br	4cf60 <__alt_data_end+0xffff0ba0>
   4cff0:	0005883a 	mov	r2,zero
   4cff4:	003ff706 	br	4cfd4 <__alt_data_end+0xffff0c14>

0004cff8 <__fixdfsi>:
   4cff8:	280cd53a 	srli	r6,r5,20
   4cffc:	00c00434 	movhi	r3,16
   4d000:	18ffffc4 	addi	r3,r3,-1
   4d004:	3181ffcc 	andi	r6,r6,2047
   4d008:	01c0ff84 	movi	r7,1022
   4d00c:	28c6703a 	and	r3,r5,r3
   4d010:	280ad7fa 	srli	r5,r5,31
   4d014:	3980120e 	bge	r7,r6,4d060 <__fixdfsi+0x68>
   4d018:	00810744 	movi	r2,1053
   4d01c:	11800c16 	blt	r2,r6,4d050 <__fixdfsi+0x58>
   4d020:	00810cc4 	movi	r2,1075
   4d024:	1185c83a 	sub	r2,r2,r6
   4d028:	01c007c4 	movi	r7,31
   4d02c:	18c00434 	orhi	r3,r3,16
   4d030:	38800d16 	blt	r7,r2,4d068 <__fixdfsi+0x70>
   4d034:	31befb44 	addi	r6,r6,-1043
   4d038:	2084d83a 	srl	r2,r4,r2
   4d03c:	1986983a 	sll	r3,r3,r6
   4d040:	1884b03a 	or	r2,r3,r2
   4d044:	28000726 	beq	r5,zero,4d064 <__fixdfsi+0x6c>
   4d048:	0085c83a 	sub	r2,zero,r2
   4d04c:	f800283a 	ret
   4d050:	00a00034 	movhi	r2,32768
   4d054:	10bfffc4 	addi	r2,r2,-1
   4d058:	2885883a 	add	r2,r5,r2
   4d05c:	f800283a 	ret
   4d060:	0005883a 	mov	r2,zero
   4d064:	f800283a 	ret
   4d068:	008104c4 	movi	r2,1043
   4d06c:	1185c83a 	sub	r2,r2,r6
   4d070:	1884d83a 	srl	r2,r3,r2
   4d074:	003ff306 	br	4d044 <__alt_data_end+0xffff0c84>

0004d078 <__floatsidf>:
   4d078:	defffd04 	addi	sp,sp,-12
   4d07c:	dfc00215 	stw	ra,8(sp)
   4d080:	dc400115 	stw	r17,4(sp)
   4d084:	dc000015 	stw	r16,0(sp)
   4d088:	20002b26 	beq	r4,zero,4d138 <__floatsidf+0xc0>
   4d08c:	2023883a 	mov	r17,r4
   4d090:	2020d7fa 	srli	r16,r4,31
   4d094:	20002d16 	blt	r4,zero,4d14c <__floatsidf+0xd4>
   4d098:	8809883a 	mov	r4,r17
   4d09c:	004d1fc0 	call	4d1fc <__clzsi2>
   4d0a0:	01410784 	movi	r5,1054
   4d0a4:	288bc83a 	sub	r5,r5,r2
   4d0a8:	01010cc4 	movi	r4,1075
   4d0ac:	2149c83a 	sub	r4,r4,r5
   4d0b0:	00c007c4 	movi	r3,31
   4d0b4:	1900160e 	bge	r3,r4,4d110 <__floatsidf+0x98>
   4d0b8:	00c104c4 	movi	r3,1043
   4d0bc:	1947c83a 	sub	r3,r3,r5
   4d0c0:	88c6983a 	sll	r3,r17,r3
   4d0c4:	00800434 	movhi	r2,16
   4d0c8:	10bfffc4 	addi	r2,r2,-1
   4d0cc:	1886703a 	and	r3,r3,r2
   4d0d0:	2941ffcc 	andi	r5,r5,2047
   4d0d4:	800d883a 	mov	r6,r16
   4d0d8:	0005883a 	mov	r2,zero
   4d0dc:	280a953a 	slli	r5,r5,20
   4d0e0:	31803fcc 	andi	r6,r6,255
   4d0e4:	01000434 	movhi	r4,16
   4d0e8:	300c97fa 	slli	r6,r6,31
   4d0ec:	213fffc4 	addi	r4,r4,-1
   4d0f0:	1906703a 	and	r3,r3,r4
   4d0f4:	1946b03a 	or	r3,r3,r5
   4d0f8:	1986b03a 	or	r3,r3,r6
   4d0fc:	dfc00217 	ldw	ra,8(sp)
   4d100:	dc400117 	ldw	r17,4(sp)
   4d104:	dc000017 	ldw	r16,0(sp)
   4d108:	dec00304 	addi	sp,sp,12
   4d10c:	f800283a 	ret
   4d110:	00c002c4 	movi	r3,11
   4d114:	1887c83a 	sub	r3,r3,r2
   4d118:	88c6d83a 	srl	r3,r17,r3
   4d11c:	8904983a 	sll	r2,r17,r4
   4d120:	01000434 	movhi	r4,16
   4d124:	213fffc4 	addi	r4,r4,-1
   4d128:	2941ffcc 	andi	r5,r5,2047
   4d12c:	1906703a 	and	r3,r3,r4
   4d130:	800d883a 	mov	r6,r16
   4d134:	003fe906 	br	4d0dc <__alt_data_end+0xffff0d1c>
   4d138:	000d883a 	mov	r6,zero
   4d13c:	000b883a 	mov	r5,zero
   4d140:	0007883a 	mov	r3,zero
   4d144:	0005883a 	mov	r2,zero
   4d148:	003fe406 	br	4d0dc <__alt_data_end+0xffff0d1c>
   4d14c:	0123c83a 	sub	r17,zero,r4
   4d150:	003fd106 	br	4d098 <__alt_data_end+0xffff0cd8>

0004d154 <__floatunsidf>:
   4d154:	defffe04 	addi	sp,sp,-8
   4d158:	dc000015 	stw	r16,0(sp)
   4d15c:	dfc00115 	stw	ra,4(sp)
   4d160:	2021883a 	mov	r16,r4
   4d164:	20002226 	beq	r4,zero,4d1f0 <__floatunsidf+0x9c>
   4d168:	004d1fc0 	call	4d1fc <__clzsi2>
   4d16c:	01010784 	movi	r4,1054
   4d170:	2089c83a 	sub	r4,r4,r2
   4d174:	01810cc4 	movi	r6,1075
   4d178:	310dc83a 	sub	r6,r6,r4
   4d17c:	00c007c4 	movi	r3,31
   4d180:	1980120e 	bge	r3,r6,4d1cc <__floatunsidf+0x78>
   4d184:	00c104c4 	movi	r3,1043
   4d188:	1907c83a 	sub	r3,r3,r4
   4d18c:	80ca983a 	sll	r5,r16,r3
   4d190:	00800434 	movhi	r2,16
   4d194:	10bfffc4 	addi	r2,r2,-1
   4d198:	2101ffcc 	andi	r4,r4,2047
   4d19c:	0021883a 	mov	r16,zero
   4d1a0:	288a703a 	and	r5,r5,r2
   4d1a4:	2008953a 	slli	r4,r4,20
   4d1a8:	00c00434 	movhi	r3,16
   4d1ac:	18ffffc4 	addi	r3,r3,-1
   4d1b0:	28c6703a 	and	r3,r5,r3
   4d1b4:	8005883a 	mov	r2,r16
   4d1b8:	1906b03a 	or	r3,r3,r4
   4d1bc:	dfc00117 	ldw	ra,4(sp)
   4d1c0:	dc000017 	ldw	r16,0(sp)
   4d1c4:	dec00204 	addi	sp,sp,8
   4d1c8:	f800283a 	ret
   4d1cc:	00c002c4 	movi	r3,11
   4d1d0:	188bc83a 	sub	r5,r3,r2
   4d1d4:	814ad83a 	srl	r5,r16,r5
   4d1d8:	00c00434 	movhi	r3,16
   4d1dc:	18ffffc4 	addi	r3,r3,-1
   4d1e0:	81a0983a 	sll	r16,r16,r6
   4d1e4:	2101ffcc 	andi	r4,r4,2047
   4d1e8:	28ca703a 	and	r5,r5,r3
   4d1ec:	003fed06 	br	4d1a4 <__alt_data_end+0xffff0de4>
   4d1f0:	0009883a 	mov	r4,zero
   4d1f4:	000b883a 	mov	r5,zero
   4d1f8:	003fea06 	br	4d1a4 <__alt_data_end+0xffff0de4>

0004d1fc <__clzsi2>:
   4d1fc:	00bfffd4 	movui	r2,65535
   4d200:	11000536 	bltu	r2,r4,4d218 <__clzsi2+0x1c>
   4d204:	00803fc4 	movi	r2,255
   4d208:	11000f36 	bltu	r2,r4,4d248 <__clzsi2+0x4c>
   4d20c:	00800804 	movi	r2,32
   4d210:	0007883a 	mov	r3,zero
   4d214:	00000506 	br	4d22c <__clzsi2+0x30>
   4d218:	00804034 	movhi	r2,256
   4d21c:	10bfffc4 	addi	r2,r2,-1
   4d220:	11000c2e 	bgeu	r2,r4,4d254 <__clzsi2+0x58>
   4d224:	00800204 	movi	r2,8
   4d228:	00c00604 	movi	r3,24
   4d22c:	20c8d83a 	srl	r4,r4,r3
   4d230:	00c00174 	movhi	r3,5
   4d234:	18feb404 	addi	r3,r3,-1328
   4d238:	1909883a 	add	r4,r3,r4
   4d23c:	20c00003 	ldbu	r3,0(r4)
   4d240:	10c5c83a 	sub	r2,r2,r3
   4d244:	f800283a 	ret
   4d248:	00800604 	movi	r2,24
   4d24c:	00c00204 	movi	r3,8
   4d250:	003ff606 	br	4d22c <__alt_data_end+0xffff0e6c>
   4d254:	00800404 	movi	r2,16
   4d258:	1007883a 	mov	r3,r2
   4d25c:	003ff306 	br	4d22c <__alt_data_end+0xffff0e6c>

0004d260 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d260:	defffe04 	addi	sp,sp,-8
   4d264:	dfc00115 	stw	ra,4(sp)
   4d268:	df000015 	stw	fp,0(sp)
   4d26c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d270:	d0a00e17 	ldw	r2,-32712(gp)
   4d274:	10000326 	beq	r2,zero,4d284 <alt_get_errno+0x24>
   4d278:	d0a00e17 	ldw	r2,-32712(gp)
   4d27c:	103ee83a 	callr	r2
   4d280:	00000106 	br	4d288 <alt_get_errno+0x28>
   4d284:	d0a72404 	addi	r2,gp,-25456
}
   4d288:	e037883a 	mov	sp,fp
   4d28c:	dfc00117 	ldw	ra,4(sp)
   4d290:	df000017 	ldw	fp,0(sp)
   4d294:	dec00204 	addi	sp,sp,8
   4d298:	f800283a 	ret

0004d29c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d29c:	defffb04 	addi	sp,sp,-20
   4d2a0:	dfc00415 	stw	ra,16(sp)
   4d2a4:	df000315 	stw	fp,12(sp)
   4d2a8:	df000304 	addi	fp,sp,12
   4d2ac:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d2b0:	e0bfff17 	ldw	r2,-4(fp)
   4d2b4:	10000816 	blt	r2,zero,4d2d8 <close+0x3c>
   4d2b8:	01400304 	movi	r5,12
   4d2bc:	e13fff17 	ldw	r4,-4(fp)
   4d2c0:	004a9940 	call	4a994 <__mulsi3>
   4d2c4:	1007883a 	mov	r3,r2
   4d2c8:	00800174 	movhi	r2,5
   4d2cc:	10817f04 	addi	r2,r2,1532
   4d2d0:	1885883a 	add	r2,r3,r2
   4d2d4:	00000106 	br	4d2dc <close+0x40>
   4d2d8:	0005883a 	mov	r2,zero
   4d2dc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4d2e0:	e0bffd17 	ldw	r2,-12(fp)
   4d2e4:	10001926 	beq	r2,zero,4d34c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d2e8:	e0bffd17 	ldw	r2,-12(fp)
   4d2ec:	10800017 	ldw	r2,0(r2)
   4d2f0:	10800417 	ldw	r2,16(r2)
   4d2f4:	10000626 	beq	r2,zero,4d310 <close+0x74>
   4d2f8:	e0bffd17 	ldw	r2,-12(fp)
   4d2fc:	10800017 	ldw	r2,0(r2)
   4d300:	10800417 	ldw	r2,16(r2)
   4d304:	e13ffd17 	ldw	r4,-12(fp)
   4d308:	103ee83a 	callr	r2
   4d30c:	00000106 	br	4d314 <close+0x78>
   4d310:	0005883a 	mov	r2,zero
   4d314:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d318:	e13fff17 	ldw	r4,-4(fp)
   4d31c:	004d9840 	call	4d984 <alt_release_fd>
    if (rval < 0)
   4d320:	e0bffe17 	ldw	r2,-8(fp)
   4d324:	1000070e 	bge	r2,zero,4d344 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   4d328:	004d2600 	call	4d260 <alt_get_errno>
   4d32c:	1007883a 	mov	r3,r2
   4d330:	e0bffe17 	ldw	r2,-8(fp)
   4d334:	0085c83a 	sub	r2,zero,r2
   4d338:	18800015 	stw	r2,0(r3)
      return -1;
   4d33c:	00bfffc4 	movi	r2,-1
   4d340:	00000706 	br	4d360 <close+0xc4>
    }
    return 0;
   4d344:	0005883a 	mov	r2,zero
   4d348:	00000506 	br	4d360 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d34c:	004d2600 	call	4d260 <alt_get_errno>
   4d350:	1007883a 	mov	r3,r2
   4d354:	00801444 	movi	r2,81
   4d358:	18800015 	stw	r2,0(r3)
    return -1;
   4d35c:	00bfffc4 	movi	r2,-1
  }
}
   4d360:	e037883a 	mov	sp,fp
   4d364:	dfc00117 	ldw	ra,4(sp)
   4d368:	df000017 	ldw	fp,0(sp)
   4d36c:	dec00204 	addi	sp,sp,8
   4d370:	f800283a 	ret

0004d374 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d374:	defffc04 	addi	sp,sp,-16
   4d378:	df000315 	stw	fp,12(sp)
   4d37c:	df000304 	addi	fp,sp,12
   4d380:	e13ffd15 	stw	r4,-12(fp)
   4d384:	e17ffe15 	stw	r5,-8(fp)
   4d388:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d38c:	e0bfff17 	ldw	r2,-4(fp)
}
   4d390:	e037883a 	mov	sp,fp
   4d394:	df000017 	ldw	fp,0(sp)
   4d398:	dec00104 	addi	sp,sp,4
   4d39c:	f800283a 	ret

0004d3a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d3a0:	defffe04 	addi	sp,sp,-8
   4d3a4:	dfc00115 	stw	ra,4(sp)
   4d3a8:	df000015 	stw	fp,0(sp)
   4d3ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d3b0:	d0a00e17 	ldw	r2,-32712(gp)
   4d3b4:	10000326 	beq	r2,zero,4d3c4 <alt_get_errno+0x24>
   4d3b8:	d0a00e17 	ldw	r2,-32712(gp)
   4d3bc:	103ee83a 	callr	r2
   4d3c0:	00000106 	br	4d3c8 <alt_get_errno+0x28>
   4d3c4:	d0a72404 	addi	r2,gp,-25456
}
   4d3c8:	e037883a 	mov	sp,fp
   4d3cc:	dfc00117 	ldw	ra,4(sp)
   4d3d0:	df000017 	ldw	fp,0(sp)
   4d3d4:	dec00204 	addi	sp,sp,8
   4d3d8:	f800283a 	ret

0004d3dc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d3dc:	defffb04 	addi	sp,sp,-20
   4d3e0:	dfc00415 	stw	ra,16(sp)
   4d3e4:	df000315 	stw	fp,12(sp)
   4d3e8:	df000304 	addi	fp,sp,12
   4d3ec:	e13ffe15 	stw	r4,-8(fp)
   4d3f0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d3f4:	e0bffe17 	ldw	r2,-8(fp)
   4d3f8:	10000816 	blt	r2,zero,4d41c <fstat+0x40>
   4d3fc:	01400304 	movi	r5,12
   4d400:	e13ffe17 	ldw	r4,-8(fp)
   4d404:	004a9940 	call	4a994 <__mulsi3>
   4d408:	1007883a 	mov	r3,r2
   4d40c:	00800174 	movhi	r2,5
   4d410:	10817f04 	addi	r2,r2,1532
   4d414:	1885883a 	add	r2,r3,r2
   4d418:	00000106 	br	4d420 <fstat+0x44>
   4d41c:	0005883a 	mov	r2,zero
   4d420:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d424:	e0bffd17 	ldw	r2,-12(fp)
   4d428:	10001026 	beq	r2,zero,4d46c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d42c:	e0bffd17 	ldw	r2,-12(fp)
   4d430:	10800017 	ldw	r2,0(r2)
   4d434:	10800817 	ldw	r2,32(r2)
   4d438:	10000726 	beq	r2,zero,4d458 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   4d43c:	e0bffd17 	ldw	r2,-12(fp)
   4d440:	10800017 	ldw	r2,0(r2)
   4d444:	10800817 	ldw	r2,32(r2)
   4d448:	e17fff17 	ldw	r5,-4(fp)
   4d44c:	e13ffd17 	ldw	r4,-12(fp)
   4d450:	103ee83a 	callr	r2
   4d454:	00000a06 	br	4d480 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d458:	e0bfff17 	ldw	r2,-4(fp)
   4d45c:	00c80004 	movi	r3,8192
   4d460:	10c00115 	stw	r3,4(r2)
      return 0;
   4d464:	0005883a 	mov	r2,zero
   4d468:	00000506 	br	4d480 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d46c:	004d3a00 	call	4d3a0 <alt_get_errno>
   4d470:	1007883a 	mov	r3,r2
   4d474:	00801444 	movi	r2,81
   4d478:	18800015 	stw	r2,0(r3)
    return -1;
   4d47c:	00bfffc4 	movi	r2,-1
  }
}
   4d480:	e037883a 	mov	sp,fp
   4d484:	dfc00117 	ldw	ra,4(sp)
   4d488:	df000017 	ldw	fp,0(sp)
   4d48c:	dec00204 	addi	sp,sp,8
   4d490:	f800283a 	ret

0004d494 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d494:	defffe04 	addi	sp,sp,-8
   4d498:	dfc00115 	stw	ra,4(sp)
   4d49c:	df000015 	stw	fp,0(sp)
   4d4a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d4a4:	d0a00e17 	ldw	r2,-32712(gp)
   4d4a8:	10000326 	beq	r2,zero,4d4b8 <alt_get_errno+0x24>
   4d4ac:	d0a00e17 	ldw	r2,-32712(gp)
   4d4b0:	103ee83a 	callr	r2
   4d4b4:	00000106 	br	4d4bc <alt_get_errno+0x28>
   4d4b8:	d0a72404 	addi	r2,gp,-25456
}
   4d4bc:	e037883a 	mov	sp,fp
   4d4c0:	dfc00117 	ldw	ra,4(sp)
   4d4c4:	df000017 	ldw	fp,0(sp)
   4d4c8:	dec00204 	addi	sp,sp,8
   4d4cc:	f800283a 	ret

0004d4d0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d4d0:	deffed04 	addi	sp,sp,-76
   4d4d4:	dfc01215 	stw	ra,72(sp)
   4d4d8:	df001115 	stw	fp,68(sp)
   4d4dc:	df001104 	addi	fp,sp,68
   4d4e0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d4e4:	e0bfff17 	ldw	r2,-4(fp)
   4d4e8:	10000816 	blt	r2,zero,4d50c <isatty+0x3c>
   4d4ec:	01400304 	movi	r5,12
   4d4f0:	e13fff17 	ldw	r4,-4(fp)
   4d4f4:	004a9940 	call	4a994 <__mulsi3>
   4d4f8:	1007883a 	mov	r3,r2
   4d4fc:	00800174 	movhi	r2,5
   4d500:	10817f04 	addi	r2,r2,1532
   4d504:	1885883a 	add	r2,r3,r2
   4d508:	00000106 	br	4d510 <isatty+0x40>
   4d50c:	0005883a 	mov	r2,zero
   4d510:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d514:	e0bfef17 	ldw	r2,-68(fp)
   4d518:	10000e26 	beq	r2,zero,4d554 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d51c:	e0bfef17 	ldw	r2,-68(fp)
   4d520:	10800017 	ldw	r2,0(r2)
   4d524:	10800817 	ldw	r2,32(r2)
   4d528:	1000021e 	bne	r2,zero,4d534 <isatty+0x64>
    {
      return 1;
   4d52c:	00800044 	movi	r2,1
   4d530:	00000d06 	br	4d568 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d534:	e0bff004 	addi	r2,fp,-64
   4d538:	100b883a 	mov	r5,r2
   4d53c:	e13fff17 	ldw	r4,-4(fp)
   4d540:	004d3dc0 	call	4d3dc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d544:	e0bff117 	ldw	r2,-60(fp)
   4d548:	10880020 	cmpeqi	r2,r2,8192
   4d54c:	10803fcc 	andi	r2,r2,255
   4d550:	00000506 	br	4d568 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d554:	004d4940 	call	4d494 <alt_get_errno>
   4d558:	1007883a 	mov	r3,r2
   4d55c:	00801444 	movi	r2,81
   4d560:	18800015 	stw	r2,0(r3)
    return 0;
   4d564:	0005883a 	mov	r2,zero
  }
}
   4d568:	e037883a 	mov	sp,fp
   4d56c:	dfc00117 	ldw	ra,4(sp)
   4d570:	df000017 	ldw	fp,0(sp)
   4d574:	dec00204 	addi	sp,sp,8
   4d578:	f800283a 	ret

0004d57c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d57c:	defffc04 	addi	sp,sp,-16
   4d580:	df000315 	stw	fp,12(sp)
   4d584:	df000304 	addi	fp,sp,12
   4d588:	e13ffd15 	stw	r4,-12(fp)
   4d58c:	e17ffe15 	stw	r5,-8(fp)
   4d590:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d594:	e0fffe17 	ldw	r3,-8(fp)
   4d598:	e0bffd17 	ldw	r2,-12(fp)
   4d59c:	18800c26 	beq	r3,r2,4d5d0 <alt_load_section+0x54>
  {
    while( to != end )
   4d5a0:	00000806 	br	4d5c4 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d5a4:	e0bffe17 	ldw	r2,-8(fp)
   4d5a8:	10c00104 	addi	r3,r2,4
   4d5ac:	e0fffe15 	stw	r3,-8(fp)
   4d5b0:	e0fffd17 	ldw	r3,-12(fp)
   4d5b4:	19000104 	addi	r4,r3,4
   4d5b8:	e13ffd15 	stw	r4,-12(fp)
   4d5bc:	18c00017 	ldw	r3,0(r3)
   4d5c0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d5c4:	e0fffe17 	ldw	r3,-8(fp)
   4d5c8:	e0bfff17 	ldw	r2,-4(fp)
   4d5cc:	18bff51e 	bne	r3,r2,4d5a4 <__alt_data_end+0xffff11e4>
    {
      *to++ = *from++;
    }
  }
}
   4d5d0:	0001883a 	nop
   4d5d4:	e037883a 	mov	sp,fp
   4d5d8:	df000017 	ldw	fp,0(sp)
   4d5dc:	dec00104 	addi	sp,sp,4
   4d5e0:	f800283a 	ret

0004d5e4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d5e4:	defffe04 	addi	sp,sp,-8
   4d5e8:	dfc00115 	stw	ra,4(sp)
   4d5ec:	df000015 	stw	fp,0(sp)
   4d5f0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d5f4:	01800174 	movhi	r6,5
   4d5f8:	31860a04 	addi	r6,r6,6184
   4d5fc:	01400174 	movhi	r5,5
   4d600:	297eff04 	addi	r5,r5,-1028
   4d604:	01000174 	movhi	r4,5
   4d608:	21060a04 	addi	r4,r4,6184
   4d60c:	004d57c0 	call	4d57c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d610:	01800134 	movhi	r6,4
   4d614:	31808c04 	addi	r6,r6,560
   4d618:	01400134 	movhi	r5,4
   4d61c:	29400804 	addi	r5,r5,32
   4d620:	01000134 	movhi	r4,4
   4d624:	21000804 	addi	r4,r4,32
   4d628:	004d57c0 	call	4d57c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d62c:	01800174 	movhi	r6,5
   4d630:	31beff04 	addi	r6,r6,-1028
   4d634:	01400174 	movhi	r5,5
   4d638:	297e3d04 	addi	r5,r5,-1804
   4d63c:	01000174 	movhi	r4,5
   4d640:	213e3d04 	addi	r4,r4,-1804
   4d644:	004d57c0 	call	4d57c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d648:	004e83c0 	call	4e83c <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d64c:	004e9fc0 	call	4e9fc <alt_icache_flush_all>
}
   4d650:	0001883a 	nop
   4d654:	e037883a 	mov	sp,fp
   4d658:	dfc00117 	ldw	ra,4(sp)
   4d65c:	df000017 	ldw	fp,0(sp)
   4d660:	dec00204 	addi	sp,sp,8
   4d664:	f800283a 	ret

0004d668 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d668:	defffe04 	addi	sp,sp,-8
   4d66c:	dfc00115 	stw	ra,4(sp)
   4d670:	df000015 	stw	fp,0(sp)
   4d674:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d678:	d0a00e17 	ldw	r2,-32712(gp)
   4d67c:	10000326 	beq	r2,zero,4d68c <alt_get_errno+0x24>
   4d680:	d0a00e17 	ldw	r2,-32712(gp)
   4d684:	103ee83a 	callr	r2
   4d688:	00000106 	br	4d690 <alt_get_errno+0x28>
   4d68c:	d0a72404 	addi	r2,gp,-25456
}
   4d690:	e037883a 	mov	sp,fp
   4d694:	dfc00117 	ldw	ra,4(sp)
   4d698:	df000017 	ldw	fp,0(sp)
   4d69c:	dec00204 	addi	sp,sp,8
   4d6a0:	f800283a 	ret

0004d6a4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d6a4:	defff904 	addi	sp,sp,-28
   4d6a8:	dfc00615 	stw	ra,24(sp)
   4d6ac:	df000515 	stw	fp,20(sp)
   4d6b0:	df000504 	addi	fp,sp,20
   4d6b4:	e13ffd15 	stw	r4,-12(fp)
   4d6b8:	e17ffe15 	stw	r5,-8(fp)
   4d6bc:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d6c0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d6c4:	e0bffd17 	ldw	r2,-12(fp)
   4d6c8:	10000816 	blt	r2,zero,4d6ec <lseek+0x48>
   4d6cc:	01400304 	movi	r5,12
   4d6d0:	e13ffd17 	ldw	r4,-12(fp)
   4d6d4:	004a9940 	call	4a994 <__mulsi3>
   4d6d8:	1007883a 	mov	r3,r2
   4d6dc:	00800174 	movhi	r2,5
   4d6e0:	10817f04 	addi	r2,r2,1532
   4d6e4:	1885883a 	add	r2,r3,r2
   4d6e8:	00000106 	br	4d6f0 <lseek+0x4c>
   4d6ec:	0005883a 	mov	r2,zero
   4d6f0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d6f4:	e0bffc17 	ldw	r2,-16(fp)
   4d6f8:	10001026 	beq	r2,zero,4d73c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d6fc:	e0bffc17 	ldw	r2,-16(fp)
   4d700:	10800017 	ldw	r2,0(r2)
   4d704:	10800717 	ldw	r2,28(r2)
   4d708:	10000926 	beq	r2,zero,4d730 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d70c:	e0bffc17 	ldw	r2,-16(fp)
   4d710:	10800017 	ldw	r2,0(r2)
   4d714:	10800717 	ldw	r2,28(r2)
   4d718:	e1bfff17 	ldw	r6,-4(fp)
   4d71c:	e17ffe17 	ldw	r5,-8(fp)
   4d720:	e13ffc17 	ldw	r4,-16(fp)
   4d724:	103ee83a 	callr	r2
   4d728:	e0bffb15 	stw	r2,-20(fp)
   4d72c:	00000506 	br	4d744 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d730:	00bfde84 	movi	r2,-134
   4d734:	e0bffb15 	stw	r2,-20(fp)
   4d738:	00000206 	br	4d744 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d73c:	00bfebc4 	movi	r2,-81
   4d740:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d744:	e0bffb17 	ldw	r2,-20(fp)
   4d748:	1000070e 	bge	r2,zero,4d768 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   4d74c:	004d6680 	call	4d668 <alt_get_errno>
   4d750:	1007883a 	mov	r3,r2
   4d754:	e0bffb17 	ldw	r2,-20(fp)
   4d758:	0085c83a 	sub	r2,zero,r2
   4d75c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d760:	00bfffc4 	movi	r2,-1
   4d764:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d768:	e0bffb17 	ldw	r2,-20(fp)
}
   4d76c:	e037883a 	mov	sp,fp
   4d770:	dfc00117 	ldw	ra,4(sp)
   4d774:	df000017 	ldw	fp,0(sp)
   4d778:	dec00204 	addi	sp,sp,8
   4d77c:	f800283a 	ret

0004d780 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d780:	defffd04 	addi	sp,sp,-12
   4d784:	dfc00215 	stw	ra,8(sp)
   4d788:	df000115 	stw	fp,4(sp)
   4d78c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d790:	0009883a 	mov	r4,zero
   4d794:	004dc280 	call	4dc28 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d798:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d79c:	004dc600 	call	4dc60 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d7a0:	01800174 	movhi	r6,5
   4d7a4:	31bef704 	addi	r6,r6,-1060
   4d7a8:	01400174 	movhi	r5,5
   4d7ac:	297ef704 	addi	r5,r5,-1060
   4d7b0:	01000174 	movhi	r4,5
   4d7b4:	213ef704 	addi	r4,r4,-1060
   4d7b8:	004eda00 	call	4eda0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d7bc:	004e93c0 	call	4e93c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d7c0:	01000174 	movhi	r4,5
   4d7c4:	213a6704 	addi	r4,r4,-5732
   4d7c8:	004f5600 	call	4f560 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d7cc:	d0a72517 	ldw	r2,-25452(gp)
   4d7d0:	d0e72617 	ldw	r3,-25448(gp)
   4d7d4:	d1272717 	ldw	r4,-25444(gp)
   4d7d8:	200d883a 	mov	r6,r4
   4d7dc:	180b883a 	mov	r5,r3
   4d7e0:	1009883a 	mov	r4,r2
   4d7e4:	004026c0 	call	4026c <main>
   4d7e8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d7ec:	01000044 	movi	r4,1
   4d7f0:	004d29c0 	call	4d29c <close>
  exit (result);
   4d7f4:	e13fff17 	ldw	r4,-4(fp)
   4d7f8:	004f5740 	call	4f574 <exit>

0004d7fc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4d7fc:	defffe04 	addi	sp,sp,-8
   4d800:	df000115 	stw	fp,4(sp)
   4d804:	df000104 	addi	fp,sp,4
   4d808:	e13fff15 	stw	r4,-4(fp)
}
   4d80c:	0001883a 	nop
   4d810:	e037883a 	mov	sp,fp
   4d814:	df000017 	ldw	fp,0(sp)
   4d818:	dec00104 	addi	sp,sp,4
   4d81c:	f800283a 	ret

0004d820 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4d820:	defffe04 	addi	sp,sp,-8
   4d824:	df000115 	stw	fp,4(sp)
   4d828:	df000104 	addi	fp,sp,4
   4d82c:	e13fff15 	stw	r4,-4(fp)
}
   4d830:	0001883a 	nop
   4d834:	e037883a 	mov	sp,fp
   4d838:	df000017 	ldw	fp,0(sp)
   4d83c:	dec00104 	addi	sp,sp,4
   4d840:	f800283a 	ret

0004d844 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d844:	defffe04 	addi	sp,sp,-8
   4d848:	dfc00115 	stw	ra,4(sp)
   4d84c:	df000015 	stw	fp,0(sp)
   4d850:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d854:	d0a00e17 	ldw	r2,-32712(gp)
   4d858:	10000326 	beq	r2,zero,4d868 <alt_get_errno+0x24>
   4d85c:	d0a00e17 	ldw	r2,-32712(gp)
   4d860:	103ee83a 	callr	r2
   4d864:	00000106 	br	4d86c <alt_get_errno+0x28>
   4d868:	d0a72404 	addi	r2,gp,-25456
}
   4d86c:	e037883a 	mov	sp,fp
   4d870:	dfc00117 	ldw	ra,4(sp)
   4d874:	df000017 	ldw	fp,0(sp)
   4d878:	dec00204 	addi	sp,sp,8
   4d87c:	f800283a 	ret

0004d880 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d880:	defff904 	addi	sp,sp,-28
   4d884:	dfc00615 	stw	ra,24(sp)
   4d888:	df000515 	stw	fp,20(sp)
   4d88c:	df000504 	addi	fp,sp,20
   4d890:	e13ffd15 	stw	r4,-12(fp)
   4d894:	e17ffe15 	stw	r5,-8(fp)
   4d898:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d89c:	e0bffd17 	ldw	r2,-12(fp)
   4d8a0:	10000816 	blt	r2,zero,4d8c4 <read+0x44>
   4d8a4:	01400304 	movi	r5,12
   4d8a8:	e13ffd17 	ldw	r4,-12(fp)
   4d8ac:	004a9940 	call	4a994 <__mulsi3>
   4d8b0:	1007883a 	mov	r3,r2
   4d8b4:	00800174 	movhi	r2,5
   4d8b8:	10817f04 	addi	r2,r2,1532
   4d8bc:	1885883a 	add	r2,r3,r2
   4d8c0:	00000106 	br	4d8c8 <read+0x48>
   4d8c4:	0005883a 	mov	r2,zero
   4d8c8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d8cc:	e0bffb17 	ldw	r2,-20(fp)
   4d8d0:	10002226 	beq	r2,zero,4d95c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8d4:	e0bffb17 	ldw	r2,-20(fp)
   4d8d8:	10800217 	ldw	r2,8(r2)
   4d8dc:	108000cc 	andi	r2,r2,3
   4d8e0:	10800060 	cmpeqi	r2,r2,1
   4d8e4:	1000181e 	bne	r2,zero,4d948 <read+0xc8>
        (fd->dev->read))
   4d8e8:	e0bffb17 	ldw	r2,-20(fp)
   4d8ec:	10800017 	ldw	r2,0(r2)
   4d8f0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8f4:	10001426 	beq	r2,zero,4d948 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d8f8:	e0bffb17 	ldw	r2,-20(fp)
   4d8fc:	10800017 	ldw	r2,0(r2)
   4d900:	10800517 	ldw	r2,20(r2)
   4d904:	e0ffff17 	ldw	r3,-4(fp)
   4d908:	180d883a 	mov	r6,r3
   4d90c:	e17ffe17 	ldw	r5,-8(fp)
   4d910:	e13ffb17 	ldw	r4,-20(fp)
   4d914:	103ee83a 	callr	r2
   4d918:	e0bffc15 	stw	r2,-16(fp)
   4d91c:	e0bffc17 	ldw	r2,-16(fp)
   4d920:	1000070e 	bge	r2,zero,4d940 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   4d924:	004d8440 	call	4d844 <alt_get_errno>
   4d928:	1007883a 	mov	r3,r2
   4d92c:	e0bffc17 	ldw	r2,-16(fp)
   4d930:	0085c83a 	sub	r2,zero,r2
   4d934:	18800015 	stw	r2,0(r3)
          return -1;
   4d938:	00bfffc4 	movi	r2,-1
   4d93c:	00000c06 	br	4d970 <read+0xf0>
        }
        return rval;
   4d940:	e0bffc17 	ldw	r2,-16(fp)
   4d944:	00000a06 	br	4d970 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d948:	004d8440 	call	4d844 <alt_get_errno>
   4d94c:	1007883a 	mov	r3,r2
   4d950:	00800344 	movi	r2,13
   4d954:	18800015 	stw	r2,0(r3)
   4d958:	00000406 	br	4d96c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d95c:	004d8440 	call	4d844 <alt_get_errno>
   4d960:	1007883a 	mov	r3,r2
   4d964:	00801444 	movi	r2,81
   4d968:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d96c:	00bfffc4 	movi	r2,-1
}
   4d970:	e037883a 	mov	sp,fp
   4d974:	dfc00117 	ldw	ra,4(sp)
   4d978:	df000017 	ldw	fp,0(sp)
   4d97c:	dec00204 	addi	sp,sp,8
   4d980:	f800283a 	ret

0004d984 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d984:	defffc04 	addi	sp,sp,-16
   4d988:	dfc00315 	stw	ra,12(sp)
   4d98c:	df000215 	stw	fp,8(sp)
   4d990:	dc000115 	stw	r16,4(sp)
   4d994:	df000204 	addi	fp,sp,8
   4d998:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   4d99c:	e0bffe17 	ldw	r2,-8(fp)
   4d9a0:	108000d0 	cmplti	r2,r2,3
   4d9a4:	1000111e 	bne	r2,zero,4d9ec <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d9a8:	04000174 	movhi	r16,5
   4d9ac:	84017f04 	addi	r16,r16,1532
   4d9b0:	e0bffe17 	ldw	r2,-8(fp)
   4d9b4:	01400304 	movi	r5,12
   4d9b8:	1009883a 	mov	r4,r2
   4d9bc:	004a9940 	call	4a994 <__mulsi3>
   4d9c0:	8085883a 	add	r2,r16,r2
   4d9c4:	10800204 	addi	r2,r2,8
   4d9c8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d9cc:	04000174 	movhi	r16,5
   4d9d0:	84017f04 	addi	r16,r16,1532
   4d9d4:	e0bffe17 	ldw	r2,-8(fp)
   4d9d8:	01400304 	movi	r5,12
   4d9dc:	1009883a 	mov	r4,r2
   4d9e0:	004a9940 	call	4a994 <__mulsi3>
   4d9e4:	8085883a 	add	r2,r16,r2
   4d9e8:	10000015 	stw	zero,0(r2)
  }
}
   4d9ec:	0001883a 	nop
   4d9f0:	e6ffff04 	addi	sp,fp,-4
   4d9f4:	dfc00217 	ldw	ra,8(sp)
   4d9f8:	df000117 	ldw	fp,4(sp)
   4d9fc:	dc000017 	ldw	r16,0(sp)
   4da00:	dec00304 	addi	sp,sp,12
   4da04:	f800283a 	ret

0004da08 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4da08:	defff904 	addi	sp,sp,-28
   4da0c:	df000615 	stw	fp,24(sp)
   4da10:	df000604 	addi	fp,sp,24
   4da14:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4da18:	0005303a 	rdctl	r2,status
   4da1c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4da20:	e0fffe17 	ldw	r3,-8(fp)
   4da24:	00bfff84 	movi	r2,-2
   4da28:	1884703a 	and	r2,r3,r2
   4da2c:	1001703a 	wrctl	status,r2
  
  return context;
   4da30:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4da34:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4da38:	d0a00f17 	ldw	r2,-32708(gp)
   4da3c:	10c000c4 	addi	r3,r2,3
   4da40:	00bfff04 	movi	r2,-4
   4da44:	1884703a 	and	r2,r3,r2
   4da48:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4da4c:	d0e00f17 	ldw	r3,-32708(gp)
   4da50:	e0bfff17 	ldw	r2,-4(fp)
   4da54:	1887883a 	add	r3,r3,r2
   4da58:	008001b4 	movhi	r2,6
   4da5c:	10b0f004 	addi	r2,r2,-15424
   4da60:	10c0062e 	bgeu	r2,r3,4da7c <sbrk+0x74>
   4da64:	e0bffb17 	ldw	r2,-20(fp)
   4da68:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4da6c:	e0bffa17 	ldw	r2,-24(fp)
   4da70:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4da74:	00bfffc4 	movi	r2,-1
   4da78:	00000b06 	br	4daa8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4da7c:	d0a00f17 	ldw	r2,-32708(gp)
   4da80:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4da84:	d0e00f17 	ldw	r3,-32708(gp)
   4da88:	e0bfff17 	ldw	r2,-4(fp)
   4da8c:	1885883a 	add	r2,r3,r2
   4da90:	d0a00f15 	stw	r2,-32708(gp)
   4da94:	e0bffb17 	ldw	r2,-20(fp)
   4da98:	e0bffc15 	stw	r2,-16(fp)
   4da9c:	e0bffc17 	ldw	r2,-16(fp)
   4daa0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4daa4:	e0bffd17 	ldw	r2,-12(fp)
} 
   4daa8:	e037883a 	mov	sp,fp
   4daac:	df000017 	ldw	fp,0(sp)
   4dab0:	dec00104 	addi	sp,sp,4
   4dab4:	f800283a 	ret

0004dab8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4dab8:	defffe04 	addi	sp,sp,-8
   4dabc:	dfc00115 	stw	ra,4(sp)
   4dac0:	df000015 	stw	fp,0(sp)
   4dac4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4dac8:	d0a00e17 	ldw	r2,-32712(gp)
   4dacc:	10000326 	beq	r2,zero,4dadc <alt_get_errno+0x24>
   4dad0:	d0a00e17 	ldw	r2,-32712(gp)
   4dad4:	103ee83a 	callr	r2
   4dad8:	00000106 	br	4dae0 <alt_get_errno+0x28>
   4dadc:	d0a72404 	addi	r2,gp,-25456
}
   4dae0:	e037883a 	mov	sp,fp
   4dae4:	dfc00117 	ldw	ra,4(sp)
   4dae8:	df000017 	ldw	fp,0(sp)
   4daec:	dec00204 	addi	sp,sp,8
   4daf0:	f800283a 	ret

0004daf4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4daf4:	defff904 	addi	sp,sp,-28
   4daf8:	dfc00615 	stw	ra,24(sp)
   4dafc:	df000515 	stw	fp,20(sp)
   4db00:	df000504 	addi	fp,sp,20
   4db04:	e13ffd15 	stw	r4,-12(fp)
   4db08:	e17ffe15 	stw	r5,-8(fp)
   4db0c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4db10:	e0bffd17 	ldw	r2,-12(fp)
   4db14:	10000816 	blt	r2,zero,4db38 <write+0x44>
   4db18:	01400304 	movi	r5,12
   4db1c:	e13ffd17 	ldw	r4,-12(fp)
   4db20:	004a9940 	call	4a994 <__mulsi3>
   4db24:	1007883a 	mov	r3,r2
   4db28:	00800174 	movhi	r2,5
   4db2c:	10817f04 	addi	r2,r2,1532
   4db30:	1885883a 	add	r2,r3,r2
   4db34:	00000106 	br	4db3c <write+0x48>
   4db38:	0005883a 	mov	r2,zero
   4db3c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4db40:	e0bffb17 	ldw	r2,-20(fp)
   4db44:	10002126 	beq	r2,zero,4dbcc <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4db48:	e0bffb17 	ldw	r2,-20(fp)
   4db4c:	10800217 	ldw	r2,8(r2)
   4db50:	108000cc 	andi	r2,r2,3
   4db54:	10001826 	beq	r2,zero,4dbb8 <write+0xc4>
   4db58:	e0bffb17 	ldw	r2,-20(fp)
   4db5c:	10800017 	ldw	r2,0(r2)
   4db60:	10800617 	ldw	r2,24(r2)
   4db64:	10001426 	beq	r2,zero,4dbb8 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4db68:	e0bffb17 	ldw	r2,-20(fp)
   4db6c:	10800017 	ldw	r2,0(r2)
   4db70:	10800617 	ldw	r2,24(r2)
   4db74:	e0ffff17 	ldw	r3,-4(fp)
   4db78:	180d883a 	mov	r6,r3
   4db7c:	e17ffe17 	ldw	r5,-8(fp)
   4db80:	e13ffb17 	ldw	r4,-20(fp)
   4db84:	103ee83a 	callr	r2
   4db88:	e0bffc15 	stw	r2,-16(fp)
   4db8c:	e0bffc17 	ldw	r2,-16(fp)
   4db90:	1000070e 	bge	r2,zero,4dbb0 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   4db94:	004dab80 	call	4dab8 <alt_get_errno>
   4db98:	1007883a 	mov	r3,r2
   4db9c:	e0bffc17 	ldw	r2,-16(fp)
   4dba0:	0085c83a 	sub	r2,zero,r2
   4dba4:	18800015 	stw	r2,0(r3)
        return -1;
   4dba8:	00bfffc4 	movi	r2,-1
   4dbac:	00000c06 	br	4dbe0 <write+0xec>
      }
      return rval;
   4dbb0:	e0bffc17 	ldw	r2,-16(fp)
   4dbb4:	00000a06 	br	4dbe0 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4dbb8:	004dab80 	call	4dab8 <alt_get_errno>
   4dbbc:	1007883a 	mov	r3,r2
   4dbc0:	00800344 	movi	r2,13
   4dbc4:	18800015 	stw	r2,0(r3)
   4dbc8:	00000406 	br	4dbdc <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4dbcc:	004dab80 	call	4dab8 <alt_get_errno>
   4dbd0:	1007883a 	mov	r3,r2
   4dbd4:	00801444 	movi	r2,81
   4dbd8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4dbdc:	00bfffc4 	movi	r2,-1
}
   4dbe0:	e037883a 	mov	sp,fp
   4dbe4:	dfc00117 	ldw	ra,4(sp)
   4dbe8:	df000017 	ldw	fp,0(sp)
   4dbec:	dec00204 	addi	sp,sp,8
   4dbf0:	f800283a 	ret

0004dbf4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4dbf4:	defffd04 	addi	sp,sp,-12
   4dbf8:	dfc00215 	stw	ra,8(sp)
   4dbfc:	df000115 	stw	fp,4(sp)
   4dc00:	df000104 	addi	fp,sp,4
   4dc04:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4dc08:	d1600b04 	addi	r5,gp,-32724
   4dc0c:	e13fff17 	ldw	r4,-4(fp)
   4dc10:	004e8980 	call	4e898 <alt_dev_llist_insert>
}
   4dc14:	e037883a 	mov	sp,fp
   4dc18:	dfc00117 	ldw	ra,4(sp)
   4dc1c:	df000017 	ldw	fp,0(sp)
   4dc20:	dec00204 	addi	sp,sp,8
   4dc24:	f800283a 	ret

0004dc28 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4dc28:	defffd04 	addi	sp,sp,-12
   4dc2c:	dfc00215 	stw	ra,8(sp)
   4dc30:	df000115 	stw	fp,4(sp)
   4dc34:	df000104 	addi	fp,sp,4
   4dc38:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( PROCESSADOR, Processador);
   4dc3c:	004f2440 	call	4f244 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4dc40:	00800044 	movi	r2,1
   4dc44:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4dc48:	0001883a 	nop
   4dc4c:	e037883a 	mov	sp,fp
   4dc50:	dfc00117 	ldw	ra,4(sp)
   4dc54:	df000017 	ldw	fp,0(sp)
   4dc58:	dec00204 	addi	sp,sp,8
   4dc5c:	f800283a 	ret

0004dc60 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4dc60:	defffe04 	addi	sp,sp,-8
   4dc64:	dfc00115 	stw	ra,4(sp)
   4dc68:	df000015 	stw	fp,0(sp)
   4dc6c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4dc70:	01800184 	movi	r6,6
   4dc74:	000b883a 	mov	r5,zero
   4dc78:	01000174 	movhi	r4,5
   4dc7c:	2101e904 	addi	r4,r4,1956
   4dc80:	004de0c0 	call	4de0c <altera_avalon_jtag_uart_init>
   4dc84:	01000174 	movhi	r4,5
   4dc88:	2101df04 	addi	r4,r4,1916
   4dc8c:	004dbf40 	call	4dbf4 <alt_dev_reg>
}
   4dc90:	0001883a 	nop
   4dc94:	e037883a 	mov	sp,fp
   4dc98:	dfc00117 	ldw	ra,4(sp)
   4dc9c:	df000017 	ldw	fp,0(sp)
   4dca0:	dec00204 	addi	sp,sp,8
   4dca4:	f800283a 	ret

0004dca8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4dca8:	defffa04 	addi	sp,sp,-24
   4dcac:	dfc00515 	stw	ra,20(sp)
   4dcb0:	df000415 	stw	fp,16(sp)
   4dcb4:	df000404 	addi	fp,sp,16
   4dcb8:	e13ffd15 	stw	r4,-12(fp)
   4dcbc:	e17ffe15 	stw	r5,-8(fp)
   4dcc0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dcc4:	e0bffd17 	ldw	r2,-12(fp)
   4dcc8:	10800017 	ldw	r2,0(r2)
   4dccc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4dcd0:	e0bffc17 	ldw	r2,-16(fp)
   4dcd4:	10c00a04 	addi	r3,r2,40
   4dcd8:	e0bffd17 	ldw	r2,-12(fp)
   4dcdc:	10800217 	ldw	r2,8(r2)
   4dce0:	100f883a 	mov	r7,r2
   4dce4:	e1bfff17 	ldw	r6,-4(fp)
   4dce8:	e17ffe17 	ldw	r5,-8(fp)
   4dcec:	1809883a 	mov	r4,r3
   4dcf0:	004e2d00 	call	4e2d0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4dcf4:	e037883a 	mov	sp,fp
   4dcf8:	dfc00117 	ldw	ra,4(sp)
   4dcfc:	df000017 	ldw	fp,0(sp)
   4dd00:	dec00204 	addi	sp,sp,8
   4dd04:	f800283a 	ret

0004dd08 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4dd08:	defffa04 	addi	sp,sp,-24
   4dd0c:	dfc00515 	stw	ra,20(sp)
   4dd10:	df000415 	stw	fp,16(sp)
   4dd14:	df000404 	addi	fp,sp,16
   4dd18:	e13ffd15 	stw	r4,-12(fp)
   4dd1c:	e17ffe15 	stw	r5,-8(fp)
   4dd20:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dd24:	e0bffd17 	ldw	r2,-12(fp)
   4dd28:	10800017 	ldw	r2,0(r2)
   4dd2c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4dd30:	e0bffc17 	ldw	r2,-16(fp)
   4dd34:	10c00a04 	addi	r3,r2,40
   4dd38:	e0bffd17 	ldw	r2,-12(fp)
   4dd3c:	10800217 	ldw	r2,8(r2)
   4dd40:	100f883a 	mov	r7,r2
   4dd44:	e1bfff17 	ldw	r6,-4(fp)
   4dd48:	e17ffe17 	ldw	r5,-8(fp)
   4dd4c:	1809883a 	mov	r4,r3
   4dd50:	004e4ec0 	call	4e4ec <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4dd54:	e037883a 	mov	sp,fp
   4dd58:	dfc00117 	ldw	ra,4(sp)
   4dd5c:	df000017 	ldw	fp,0(sp)
   4dd60:	dec00204 	addi	sp,sp,8
   4dd64:	f800283a 	ret

0004dd68 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4dd68:	defffc04 	addi	sp,sp,-16
   4dd6c:	dfc00315 	stw	ra,12(sp)
   4dd70:	df000215 	stw	fp,8(sp)
   4dd74:	df000204 	addi	fp,sp,8
   4dd78:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dd7c:	e0bfff17 	ldw	r2,-4(fp)
   4dd80:	10800017 	ldw	r2,0(r2)
   4dd84:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4dd88:	e0bffe17 	ldw	r2,-8(fp)
   4dd8c:	10c00a04 	addi	r3,r2,40
   4dd90:	e0bfff17 	ldw	r2,-4(fp)
   4dd94:	10800217 	ldw	r2,8(r2)
   4dd98:	100b883a 	mov	r5,r2
   4dd9c:	1809883a 	mov	r4,r3
   4dda0:	004e1780 	call	4e178 <altera_avalon_jtag_uart_close>
}
   4dda4:	e037883a 	mov	sp,fp
   4dda8:	dfc00117 	ldw	ra,4(sp)
   4ddac:	df000017 	ldw	fp,0(sp)
   4ddb0:	dec00204 	addi	sp,sp,8
   4ddb4:	f800283a 	ret

0004ddb8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4ddb8:	defffa04 	addi	sp,sp,-24
   4ddbc:	dfc00515 	stw	ra,20(sp)
   4ddc0:	df000415 	stw	fp,16(sp)
   4ddc4:	df000404 	addi	fp,sp,16
   4ddc8:	e13ffd15 	stw	r4,-12(fp)
   4ddcc:	e17ffe15 	stw	r5,-8(fp)
   4ddd0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4ddd4:	e0bffd17 	ldw	r2,-12(fp)
   4ddd8:	10800017 	ldw	r2,0(r2)
   4dddc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4dde0:	e0bffc17 	ldw	r2,-16(fp)
   4dde4:	10800a04 	addi	r2,r2,40
   4dde8:	e1bfff17 	ldw	r6,-4(fp)
   4ddec:	e17ffe17 	ldw	r5,-8(fp)
   4ddf0:	1009883a 	mov	r4,r2
   4ddf4:	004e1e00 	call	4e1e0 <altera_avalon_jtag_uart_ioctl>
}
   4ddf8:	e037883a 	mov	sp,fp
   4ddfc:	dfc00117 	ldw	ra,4(sp)
   4de00:	df000017 	ldw	fp,0(sp)
   4de04:	dec00204 	addi	sp,sp,8
   4de08:	f800283a 	ret

0004de0c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4de0c:	defffa04 	addi	sp,sp,-24
   4de10:	dfc00515 	stw	ra,20(sp)
   4de14:	df000415 	stw	fp,16(sp)
   4de18:	df000404 	addi	fp,sp,16
   4de1c:	e13ffd15 	stw	r4,-12(fp)
   4de20:	e17ffe15 	stw	r5,-8(fp)
   4de24:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4de28:	e0bffd17 	ldw	r2,-12(fp)
   4de2c:	00c00044 	movi	r3,1
   4de30:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4de34:	e0bffd17 	ldw	r2,-12(fp)
   4de38:	10800017 	ldw	r2,0(r2)
   4de3c:	10800104 	addi	r2,r2,4
   4de40:	1007883a 	mov	r3,r2
   4de44:	e0bffd17 	ldw	r2,-12(fp)
   4de48:	10800817 	ldw	r2,32(r2)
   4de4c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4de50:	e0bffe17 	ldw	r2,-8(fp)
   4de54:	e0ffff17 	ldw	r3,-4(fp)
   4de58:	d8000015 	stw	zero,0(sp)
   4de5c:	e1fffd17 	ldw	r7,-12(fp)
   4de60:	01800174 	movhi	r6,5
   4de64:	31b7b304 	addi	r6,r6,-8500
   4de68:	180b883a 	mov	r5,r3
   4de6c:	1009883a 	mov	r4,r2
   4de70:	004ea1c0 	call	4ea1c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4de74:	e0bffd17 	ldw	r2,-12(fp)
   4de78:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4de7c:	e0bffd17 	ldw	r2,-12(fp)
   4de80:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4de84:	d0e72917 	ldw	r3,-25436(gp)
   4de88:	e1fffd17 	ldw	r7,-12(fp)
   4de8c:	01800174 	movhi	r6,5
   4de90:	31b83604 	addi	r6,r6,-7976
   4de94:	180b883a 	mov	r5,r3
   4de98:	1009883a 	mov	r4,r2
   4de9c:	004e7100 	call	4e710 <alt_alarm_start>
   4dea0:	1000040e 	bge	r2,zero,4deb4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4dea4:	e0fffd17 	ldw	r3,-12(fp)
   4dea8:	00a00034 	movhi	r2,32768
   4deac:	10bfffc4 	addi	r2,r2,-1
   4deb0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4deb4:	0001883a 	nop
   4deb8:	e037883a 	mov	sp,fp
   4debc:	dfc00117 	ldw	ra,4(sp)
   4dec0:	df000017 	ldw	fp,0(sp)
   4dec4:	dec00204 	addi	sp,sp,8
   4dec8:	f800283a 	ret

0004decc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4decc:	defff804 	addi	sp,sp,-32
   4ded0:	df000715 	stw	fp,28(sp)
   4ded4:	df000704 	addi	fp,sp,28
   4ded8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4dedc:	e0bfff17 	ldw	r2,-4(fp)
   4dee0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4dee4:	e0bffb17 	ldw	r2,-20(fp)
   4dee8:	10800017 	ldw	r2,0(r2)
   4deec:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4def0:	e0bffc17 	ldw	r2,-16(fp)
   4def4:	10800104 	addi	r2,r2,4
   4def8:	10800037 	ldwio	r2,0(r2)
   4defc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4df00:	e0bffd17 	ldw	r2,-12(fp)
   4df04:	1080c00c 	andi	r2,r2,768
   4df08:	10006d26 	beq	r2,zero,4e0c0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4df0c:	e0bffd17 	ldw	r2,-12(fp)
   4df10:	1080400c 	andi	r2,r2,256
   4df14:	10003526 	beq	r2,zero,4dfec <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4df18:	00800074 	movhi	r2,1
   4df1c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4df20:	e0bffb17 	ldw	r2,-20(fp)
   4df24:	10800a17 	ldw	r2,40(r2)
   4df28:	10800044 	addi	r2,r2,1
   4df2c:	1081ffcc 	andi	r2,r2,2047
   4df30:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4df34:	e0bffb17 	ldw	r2,-20(fp)
   4df38:	10c00b17 	ldw	r3,44(r2)
   4df3c:	e0bffe17 	ldw	r2,-8(fp)
   4df40:	18801526 	beq	r3,r2,4df98 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4df44:	e0bffc17 	ldw	r2,-16(fp)
   4df48:	10800037 	ldwio	r2,0(r2)
   4df4c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4df50:	e0bff917 	ldw	r2,-28(fp)
   4df54:	10a0000c 	andi	r2,r2,32768
   4df58:	10001126 	beq	r2,zero,4dfa0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4df5c:	e0bffb17 	ldw	r2,-20(fp)
   4df60:	10800a17 	ldw	r2,40(r2)
   4df64:	e0fff917 	ldw	r3,-28(fp)
   4df68:	1809883a 	mov	r4,r3
   4df6c:	e0fffb17 	ldw	r3,-20(fp)
   4df70:	1885883a 	add	r2,r3,r2
   4df74:	10800e04 	addi	r2,r2,56
   4df78:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4df7c:	e0bffb17 	ldw	r2,-20(fp)
   4df80:	10800a17 	ldw	r2,40(r2)
   4df84:	10800044 	addi	r2,r2,1
   4df88:	10c1ffcc 	andi	r3,r2,2047
   4df8c:	e0bffb17 	ldw	r2,-20(fp)
   4df90:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4df94:	003fe206 	br	4df20 <__alt_data_end+0xffff1b60>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4df98:	0001883a 	nop
   4df9c:	00000106 	br	4dfa4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4dfa0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4dfa4:	e0bff917 	ldw	r2,-28(fp)
   4dfa8:	10bfffec 	andhi	r2,r2,65535
   4dfac:	10000f26 	beq	r2,zero,4dfec <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dfb0:	e0bffb17 	ldw	r2,-20(fp)
   4dfb4:	10c00817 	ldw	r3,32(r2)
   4dfb8:	00bfff84 	movi	r2,-2
   4dfbc:	1886703a 	and	r3,r3,r2
   4dfc0:	e0bffb17 	ldw	r2,-20(fp)
   4dfc4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4dfc8:	e0bffc17 	ldw	r2,-16(fp)
   4dfcc:	10800104 	addi	r2,r2,4
   4dfd0:	1007883a 	mov	r3,r2
   4dfd4:	e0bffb17 	ldw	r2,-20(fp)
   4dfd8:	10800817 	ldw	r2,32(r2)
   4dfdc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dfe0:	e0bffc17 	ldw	r2,-16(fp)
   4dfe4:	10800104 	addi	r2,r2,4
   4dfe8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4dfec:	e0bffd17 	ldw	r2,-12(fp)
   4dff0:	1080800c 	andi	r2,r2,512
   4dff4:	103fbe26 	beq	r2,zero,4def0 <__alt_data_end+0xffff1b30>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4dff8:	e0bffd17 	ldw	r2,-12(fp)
   4dffc:	1004d43a 	srli	r2,r2,16
   4e000:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e004:	00001406 	br	4e058 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4e008:	e0bffc17 	ldw	r2,-16(fp)
   4e00c:	e0fffb17 	ldw	r3,-20(fp)
   4e010:	18c00d17 	ldw	r3,52(r3)
   4e014:	e13ffb17 	ldw	r4,-20(fp)
   4e018:	20c7883a 	add	r3,r4,r3
   4e01c:	18c20e04 	addi	r3,r3,2104
   4e020:	18c00003 	ldbu	r3,0(r3)
   4e024:	18c03fcc 	andi	r3,r3,255
   4e028:	18c0201c 	xori	r3,r3,128
   4e02c:	18ffe004 	addi	r3,r3,-128
   4e030:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e034:	e0bffb17 	ldw	r2,-20(fp)
   4e038:	10800d17 	ldw	r2,52(r2)
   4e03c:	10800044 	addi	r2,r2,1
   4e040:	10c1ffcc 	andi	r3,r2,2047
   4e044:	e0bffb17 	ldw	r2,-20(fp)
   4e048:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4e04c:	e0bffa17 	ldw	r2,-24(fp)
   4e050:	10bfffc4 	addi	r2,r2,-1
   4e054:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e058:	e0bffa17 	ldw	r2,-24(fp)
   4e05c:	10000526 	beq	r2,zero,4e074 <altera_avalon_jtag_uart_irq+0x1a8>
   4e060:	e0bffb17 	ldw	r2,-20(fp)
   4e064:	10c00d17 	ldw	r3,52(r2)
   4e068:	e0bffb17 	ldw	r2,-20(fp)
   4e06c:	10800c17 	ldw	r2,48(r2)
   4e070:	18bfe51e 	bne	r3,r2,4e008 <__alt_data_end+0xffff1c48>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4e074:	e0bffa17 	ldw	r2,-24(fp)
   4e078:	103f9d26 	beq	r2,zero,4def0 <__alt_data_end+0xffff1b30>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e07c:	e0bffb17 	ldw	r2,-20(fp)
   4e080:	10c00817 	ldw	r3,32(r2)
   4e084:	00bfff44 	movi	r2,-3
   4e088:	1886703a 	and	r3,r3,r2
   4e08c:	e0bffb17 	ldw	r2,-20(fp)
   4e090:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e094:	e0bffb17 	ldw	r2,-20(fp)
   4e098:	10800017 	ldw	r2,0(r2)
   4e09c:	10800104 	addi	r2,r2,4
   4e0a0:	1007883a 	mov	r3,r2
   4e0a4:	e0bffb17 	ldw	r2,-20(fp)
   4e0a8:	10800817 	ldw	r2,32(r2)
   4e0ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e0b0:	e0bffc17 	ldw	r2,-16(fp)
   4e0b4:	10800104 	addi	r2,r2,4
   4e0b8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4e0bc:	003f8c06 	br	4def0 <__alt_data_end+0xffff1b30>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4e0c0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4e0c4:	0001883a 	nop
   4e0c8:	e037883a 	mov	sp,fp
   4e0cc:	df000017 	ldw	fp,0(sp)
   4e0d0:	dec00104 	addi	sp,sp,4
   4e0d4:	f800283a 	ret

0004e0d8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e0d8:	defff804 	addi	sp,sp,-32
   4e0dc:	df000715 	stw	fp,28(sp)
   4e0e0:	df000704 	addi	fp,sp,28
   4e0e4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e0e8:	e0bffb17 	ldw	r2,-20(fp)
   4e0ec:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e0f0:	e0bff917 	ldw	r2,-28(fp)
   4e0f4:	10800017 	ldw	r2,0(r2)
   4e0f8:	10800104 	addi	r2,r2,4
   4e0fc:	10800037 	ldwio	r2,0(r2)
   4e100:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e104:	e0bffa17 	ldw	r2,-24(fp)
   4e108:	1081000c 	andi	r2,r2,1024
   4e10c:	10000b26 	beq	r2,zero,4e13c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e110:	e0bff917 	ldw	r2,-28(fp)
   4e114:	10800017 	ldw	r2,0(r2)
   4e118:	10800104 	addi	r2,r2,4
   4e11c:	1007883a 	mov	r3,r2
   4e120:	e0bff917 	ldw	r2,-28(fp)
   4e124:	10800817 	ldw	r2,32(r2)
   4e128:	10810014 	ori	r2,r2,1024
   4e12c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e130:	e0bff917 	ldw	r2,-28(fp)
   4e134:	10000915 	stw	zero,36(r2)
   4e138:	00000a06 	br	4e164 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e13c:	e0bff917 	ldw	r2,-28(fp)
   4e140:	10c00917 	ldw	r3,36(r2)
   4e144:	00a00034 	movhi	r2,32768
   4e148:	10bfff04 	addi	r2,r2,-4
   4e14c:	10c00536 	bltu	r2,r3,4e164 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4e150:	e0bff917 	ldw	r2,-28(fp)
   4e154:	10800917 	ldw	r2,36(r2)
   4e158:	10c00044 	addi	r3,r2,1
   4e15c:	e0bff917 	ldw	r2,-28(fp)
   4e160:	10c00915 	stw	r3,36(r2)
   4e164:	d0a72917 	ldw	r2,-25436(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e168:	e037883a 	mov	sp,fp
   4e16c:	df000017 	ldw	fp,0(sp)
   4e170:	dec00104 	addi	sp,sp,4
   4e174:	f800283a 	ret

0004e178 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e178:	defffd04 	addi	sp,sp,-12
   4e17c:	df000215 	stw	fp,8(sp)
   4e180:	df000204 	addi	fp,sp,8
   4e184:	e13ffe15 	stw	r4,-8(fp)
   4e188:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e18c:	00000506 	br	4e1a4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e190:	e0bfff17 	ldw	r2,-4(fp)
   4e194:	1090000c 	andi	r2,r2,16384
   4e198:	10000226 	beq	r2,zero,4e1a4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e19c:	00bffd44 	movi	r2,-11
   4e1a0:	00000b06 	br	4e1d0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e1a4:	e0bffe17 	ldw	r2,-8(fp)
   4e1a8:	10c00d17 	ldw	r3,52(r2)
   4e1ac:	e0bffe17 	ldw	r2,-8(fp)
   4e1b0:	10800c17 	ldw	r2,48(r2)
   4e1b4:	18800526 	beq	r3,r2,4e1cc <altera_avalon_jtag_uart_close+0x54>
   4e1b8:	e0bffe17 	ldw	r2,-8(fp)
   4e1bc:	10c00917 	ldw	r3,36(r2)
   4e1c0:	e0bffe17 	ldw	r2,-8(fp)
   4e1c4:	10800117 	ldw	r2,4(r2)
   4e1c8:	18bff136 	bltu	r3,r2,4e190 <__alt_data_end+0xffff1dd0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4e1cc:	0005883a 	mov	r2,zero
}
   4e1d0:	e037883a 	mov	sp,fp
   4e1d4:	df000017 	ldw	fp,0(sp)
   4e1d8:	dec00104 	addi	sp,sp,4
   4e1dc:	f800283a 	ret

0004e1e0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e1e0:	defffa04 	addi	sp,sp,-24
   4e1e4:	df000515 	stw	fp,20(sp)
   4e1e8:	df000504 	addi	fp,sp,20
   4e1ec:	e13ffd15 	stw	r4,-12(fp)
   4e1f0:	e17ffe15 	stw	r5,-8(fp)
   4e1f4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4e1f8:	00bff9c4 	movi	r2,-25
   4e1fc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4e200:	e0bffe17 	ldw	r2,-8(fp)
   4e204:	10da8060 	cmpeqi	r3,r2,27137
   4e208:	1800031e 	bne	r3,zero,4e218 <altera_avalon_jtag_uart_ioctl+0x38>
   4e20c:	109a80a0 	cmpeqi	r2,r2,27138
   4e210:	1000181e 	bne	r2,zero,4e274 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4e214:	00002906 	br	4e2bc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4e218:	e0bffd17 	ldw	r2,-12(fp)
   4e21c:	10c00117 	ldw	r3,4(r2)
   4e220:	00a00034 	movhi	r2,32768
   4e224:	10bfffc4 	addi	r2,r2,-1
   4e228:	18802126 	beq	r3,r2,4e2b0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4e22c:	e0bfff17 	ldw	r2,-4(fp)
   4e230:	10800017 	ldw	r2,0(r2)
   4e234:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e238:	e0bffc17 	ldw	r2,-16(fp)
   4e23c:	10800090 	cmplti	r2,r2,2
   4e240:	1000061e 	bne	r2,zero,4e25c <altera_avalon_jtag_uart_ioctl+0x7c>
   4e244:	e0fffc17 	ldw	r3,-16(fp)
   4e248:	00a00034 	movhi	r2,32768
   4e24c:	10bfffc4 	addi	r2,r2,-1
   4e250:	18800226 	beq	r3,r2,4e25c <altera_avalon_jtag_uart_ioctl+0x7c>
   4e254:	e0bffc17 	ldw	r2,-16(fp)
   4e258:	00000206 	br	4e264 <altera_avalon_jtag_uart_ioctl+0x84>
   4e25c:	00a00034 	movhi	r2,32768
   4e260:	10bfff84 	addi	r2,r2,-2
   4e264:	e0fffd17 	ldw	r3,-12(fp)
   4e268:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e26c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e270:	00000f06 	br	4e2b0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4e274:	e0bffd17 	ldw	r2,-12(fp)
   4e278:	10c00117 	ldw	r3,4(r2)
   4e27c:	00a00034 	movhi	r2,32768
   4e280:	10bfffc4 	addi	r2,r2,-1
   4e284:	18800c26 	beq	r3,r2,4e2b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e288:	e0bffd17 	ldw	r2,-12(fp)
   4e28c:	10c00917 	ldw	r3,36(r2)
   4e290:	e0bffd17 	ldw	r2,-12(fp)
   4e294:	10800117 	ldw	r2,4(r2)
   4e298:	1885803a 	cmpltu	r2,r3,r2
   4e29c:	10c03fcc 	andi	r3,r2,255
   4e2a0:	e0bfff17 	ldw	r2,-4(fp)
   4e2a4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e2a8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e2ac:	00000206 	br	4e2b8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4e2b0:	0001883a 	nop
   4e2b4:	00000106 	br	4e2bc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4e2b8:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4e2bc:	e0bffb17 	ldw	r2,-20(fp)
}
   4e2c0:	e037883a 	mov	sp,fp
   4e2c4:	df000017 	ldw	fp,0(sp)
   4e2c8:	dec00104 	addi	sp,sp,4
   4e2cc:	f800283a 	ret

0004e2d0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e2d0:	defff304 	addi	sp,sp,-52
   4e2d4:	dfc00c15 	stw	ra,48(sp)
   4e2d8:	df000b15 	stw	fp,44(sp)
   4e2dc:	df000b04 	addi	fp,sp,44
   4e2e0:	e13ffc15 	stw	r4,-16(fp)
   4e2e4:	e17ffd15 	stw	r5,-12(fp)
   4e2e8:	e1bffe15 	stw	r6,-8(fp)
   4e2ec:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4e2f0:	e0bffd17 	ldw	r2,-12(fp)
   4e2f4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e2f8:	00004706 	br	4e418 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e2fc:	e0bffc17 	ldw	r2,-16(fp)
   4e300:	10800a17 	ldw	r2,40(r2)
   4e304:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4e308:	e0bffc17 	ldw	r2,-16(fp)
   4e30c:	10800b17 	ldw	r2,44(r2)
   4e310:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4e314:	e0fff717 	ldw	r3,-36(fp)
   4e318:	e0bff817 	ldw	r2,-32(fp)
   4e31c:	18800536 	bltu	r3,r2,4e334 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e320:	e0fff717 	ldw	r3,-36(fp)
   4e324:	e0bff817 	ldw	r2,-32(fp)
   4e328:	1885c83a 	sub	r2,r3,r2
   4e32c:	e0bff615 	stw	r2,-40(fp)
   4e330:	00000406 	br	4e344 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e334:	00c20004 	movi	r3,2048
   4e338:	e0bff817 	ldw	r2,-32(fp)
   4e33c:	1885c83a 	sub	r2,r3,r2
   4e340:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e344:	e0bff617 	ldw	r2,-40(fp)
   4e348:	10001e26 	beq	r2,zero,4e3c4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e34c:	e0fffe17 	ldw	r3,-8(fp)
   4e350:	e0bff617 	ldw	r2,-40(fp)
   4e354:	1880022e 	bgeu	r3,r2,4e360 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e358:	e0bffe17 	ldw	r2,-8(fp)
   4e35c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e360:	e0bffc17 	ldw	r2,-16(fp)
   4e364:	10c00e04 	addi	r3,r2,56
   4e368:	e0bff817 	ldw	r2,-32(fp)
   4e36c:	1885883a 	add	r2,r3,r2
   4e370:	e1bff617 	ldw	r6,-40(fp)
   4e374:	100b883a 	mov	r5,r2
   4e378:	e13ff517 	ldw	r4,-44(fp)
   4e37c:	00459b40 	call	459b4 <memcpy>
      ptr   += n;
   4e380:	e0fff517 	ldw	r3,-44(fp)
   4e384:	e0bff617 	ldw	r2,-40(fp)
   4e388:	1885883a 	add	r2,r3,r2
   4e38c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e390:	e0fffe17 	ldw	r3,-8(fp)
   4e394:	e0bff617 	ldw	r2,-40(fp)
   4e398:	1885c83a 	sub	r2,r3,r2
   4e39c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e3a0:	e0fff817 	ldw	r3,-32(fp)
   4e3a4:	e0bff617 	ldw	r2,-40(fp)
   4e3a8:	1885883a 	add	r2,r3,r2
   4e3ac:	10c1ffcc 	andi	r3,r2,2047
   4e3b0:	e0bffc17 	ldw	r2,-16(fp)
   4e3b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e3b8:	e0bffe17 	ldw	r2,-8(fp)
   4e3bc:	00bfcf16 	blt	zero,r2,4e2fc <__alt_data_end+0xffff1f3c>
   4e3c0:	00000106 	br	4e3c8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e3c4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e3c8:	e0fff517 	ldw	r3,-44(fp)
   4e3cc:	e0bffd17 	ldw	r2,-12(fp)
   4e3d0:	1880141e 	bne	r3,r2,4e424 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e3d4:	e0bfff17 	ldw	r2,-4(fp)
   4e3d8:	1090000c 	andi	r2,r2,16384
   4e3dc:	1000131e 	bne	r2,zero,4e42c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e3e0:	0001883a 	nop
   4e3e4:	e0bffc17 	ldw	r2,-16(fp)
   4e3e8:	10c00a17 	ldw	r3,40(r2)
   4e3ec:	e0bff717 	ldw	r2,-36(fp)
   4e3f0:	1880051e 	bne	r3,r2,4e408 <altera_avalon_jtag_uart_read+0x138>
   4e3f4:	e0bffc17 	ldw	r2,-16(fp)
   4e3f8:	10c00917 	ldw	r3,36(r2)
   4e3fc:	e0bffc17 	ldw	r2,-16(fp)
   4e400:	10800117 	ldw	r2,4(r2)
   4e404:	18bff736 	bltu	r3,r2,4e3e4 <__alt_data_end+0xffff2024>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e408:	e0bffc17 	ldw	r2,-16(fp)
   4e40c:	10c00a17 	ldw	r3,40(r2)
   4e410:	e0bff717 	ldw	r2,-36(fp)
   4e414:	18800726 	beq	r3,r2,4e434 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e418:	e0bffe17 	ldw	r2,-8(fp)
   4e41c:	00bfb716 	blt	zero,r2,4e2fc <__alt_data_end+0xffff1f3c>
   4e420:	00000506 	br	4e438 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e424:	0001883a 	nop
   4e428:	00000306 	br	4e438 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e42c:	0001883a 	nop
   4e430:	00000106 	br	4e438 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e434:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e438:	e0fff517 	ldw	r3,-44(fp)
   4e43c:	e0bffd17 	ldw	r2,-12(fp)
   4e440:	18801826 	beq	r3,r2,4e4a4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e444:	0005303a 	rdctl	r2,status
   4e448:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e44c:	e0fffb17 	ldw	r3,-20(fp)
   4e450:	00bfff84 	movi	r2,-2
   4e454:	1884703a 	and	r2,r3,r2
   4e458:	1001703a 	wrctl	status,r2
  
  return context;
   4e45c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e460:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e464:	e0bffc17 	ldw	r2,-16(fp)
   4e468:	10800817 	ldw	r2,32(r2)
   4e46c:	10c00054 	ori	r3,r2,1
   4e470:	e0bffc17 	ldw	r2,-16(fp)
   4e474:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e478:	e0bffc17 	ldw	r2,-16(fp)
   4e47c:	10800017 	ldw	r2,0(r2)
   4e480:	10800104 	addi	r2,r2,4
   4e484:	1007883a 	mov	r3,r2
   4e488:	e0bffc17 	ldw	r2,-16(fp)
   4e48c:	10800817 	ldw	r2,32(r2)
   4e490:	18800035 	stwio	r2,0(r3)
   4e494:	e0bffa17 	ldw	r2,-24(fp)
   4e498:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e49c:	e0bff917 	ldw	r2,-28(fp)
   4e4a0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e4a4:	e0fff517 	ldw	r3,-44(fp)
   4e4a8:	e0bffd17 	ldw	r2,-12(fp)
   4e4ac:	18800426 	beq	r3,r2,4e4c0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e4b0:	e0fff517 	ldw	r3,-44(fp)
   4e4b4:	e0bffd17 	ldw	r2,-12(fp)
   4e4b8:	1885c83a 	sub	r2,r3,r2
   4e4bc:	00000606 	br	4e4d8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e4c0:	e0bfff17 	ldw	r2,-4(fp)
   4e4c4:	1090000c 	andi	r2,r2,16384
   4e4c8:	10000226 	beq	r2,zero,4e4d4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e4cc:	00bffd44 	movi	r2,-11
   4e4d0:	00000106 	br	4e4d8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e4d4:	00bffec4 	movi	r2,-5
}
   4e4d8:	e037883a 	mov	sp,fp
   4e4dc:	dfc00117 	ldw	ra,4(sp)
   4e4e0:	df000017 	ldw	fp,0(sp)
   4e4e4:	dec00204 	addi	sp,sp,8
   4e4e8:	f800283a 	ret

0004e4ec <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e4ec:	defff304 	addi	sp,sp,-52
   4e4f0:	dfc00c15 	stw	ra,48(sp)
   4e4f4:	df000b15 	stw	fp,44(sp)
   4e4f8:	df000b04 	addi	fp,sp,44
   4e4fc:	e13ffc15 	stw	r4,-16(fp)
   4e500:	e17ffd15 	stw	r5,-12(fp)
   4e504:	e1bffe15 	stw	r6,-8(fp)
   4e508:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e50c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e510:	e0bffd17 	ldw	r2,-12(fp)
   4e514:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e518:	00003706 	br	4e5f8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e51c:	e0bffc17 	ldw	r2,-16(fp)
   4e520:	10800c17 	ldw	r2,48(r2)
   4e524:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e528:	e0bffc17 	ldw	r2,-16(fp)
   4e52c:	10800d17 	ldw	r2,52(r2)
   4e530:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e534:	e0fff917 	ldw	r3,-28(fp)
   4e538:	e0bff517 	ldw	r2,-44(fp)
   4e53c:	1880062e 	bgeu	r3,r2,4e558 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e540:	e0fff517 	ldw	r3,-44(fp)
   4e544:	e0bff917 	ldw	r2,-28(fp)
   4e548:	1885c83a 	sub	r2,r3,r2
   4e54c:	10bfffc4 	addi	r2,r2,-1
   4e550:	e0bff615 	stw	r2,-40(fp)
   4e554:	00000b06 	br	4e584 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e558:	e0bff517 	ldw	r2,-44(fp)
   4e55c:	10000526 	beq	r2,zero,4e574 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e560:	00c20004 	movi	r3,2048
   4e564:	e0bff917 	ldw	r2,-28(fp)
   4e568:	1885c83a 	sub	r2,r3,r2
   4e56c:	e0bff615 	stw	r2,-40(fp)
   4e570:	00000406 	br	4e584 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e574:	00c1ffc4 	movi	r3,2047
   4e578:	e0bff917 	ldw	r2,-28(fp)
   4e57c:	1885c83a 	sub	r2,r3,r2
   4e580:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e584:	e0bff617 	ldw	r2,-40(fp)
   4e588:	10001e26 	beq	r2,zero,4e604 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e58c:	e0fffe17 	ldw	r3,-8(fp)
   4e590:	e0bff617 	ldw	r2,-40(fp)
   4e594:	1880022e 	bgeu	r3,r2,4e5a0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e598:	e0bffe17 	ldw	r2,-8(fp)
   4e59c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e5a0:	e0bffc17 	ldw	r2,-16(fp)
   4e5a4:	10c20e04 	addi	r3,r2,2104
   4e5a8:	e0bff917 	ldw	r2,-28(fp)
   4e5ac:	1885883a 	add	r2,r3,r2
   4e5b0:	e1bff617 	ldw	r6,-40(fp)
   4e5b4:	e17ffd17 	ldw	r5,-12(fp)
   4e5b8:	1009883a 	mov	r4,r2
   4e5bc:	00459b40 	call	459b4 <memcpy>
      ptr   += n;
   4e5c0:	e0fffd17 	ldw	r3,-12(fp)
   4e5c4:	e0bff617 	ldw	r2,-40(fp)
   4e5c8:	1885883a 	add	r2,r3,r2
   4e5cc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e5d0:	e0fffe17 	ldw	r3,-8(fp)
   4e5d4:	e0bff617 	ldw	r2,-40(fp)
   4e5d8:	1885c83a 	sub	r2,r3,r2
   4e5dc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e5e0:	e0fff917 	ldw	r3,-28(fp)
   4e5e4:	e0bff617 	ldw	r2,-40(fp)
   4e5e8:	1885883a 	add	r2,r3,r2
   4e5ec:	10c1ffcc 	andi	r3,r2,2047
   4e5f0:	e0bffc17 	ldw	r2,-16(fp)
   4e5f4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e5f8:	e0bffe17 	ldw	r2,-8(fp)
   4e5fc:	00bfc716 	blt	zero,r2,4e51c <__alt_data_end+0xffff215c>
   4e600:	00000106 	br	4e608 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e604:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e608:	0005303a 	rdctl	r2,status
   4e60c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e610:	e0fffb17 	ldw	r3,-20(fp)
   4e614:	00bfff84 	movi	r2,-2
   4e618:	1884703a 	and	r2,r3,r2
   4e61c:	1001703a 	wrctl	status,r2
  
  return context;
   4e620:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e624:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e628:	e0bffc17 	ldw	r2,-16(fp)
   4e62c:	10800817 	ldw	r2,32(r2)
   4e630:	10c00094 	ori	r3,r2,2
   4e634:	e0bffc17 	ldw	r2,-16(fp)
   4e638:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e63c:	e0bffc17 	ldw	r2,-16(fp)
   4e640:	10800017 	ldw	r2,0(r2)
   4e644:	10800104 	addi	r2,r2,4
   4e648:	1007883a 	mov	r3,r2
   4e64c:	e0bffc17 	ldw	r2,-16(fp)
   4e650:	10800817 	ldw	r2,32(r2)
   4e654:	18800035 	stwio	r2,0(r3)
   4e658:	e0bffa17 	ldw	r2,-24(fp)
   4e65c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e660:	e0bff817 	ldw	r2,-32(fp)
   4e664:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e668:	e0bffe17 	ldw	r2,-8(fp)
   4e66c:	0080100e 	bge	zero,r2,4e6b0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e670:	e0bfff17 	ldw	r2,-4(fp)
   4e674:	1090000c 	andi	r2,r2,16384
   4e678:	1000101e 	bne	r2,zero,4e6bc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e67c:	0001883a 	nop
   4e680:	e0bffc17 	ldw	r2,-16(fp)
   4e684:	10c00d17 	ldw	r3,52(r2)
   4e688:	e0bff517 	ldw	r2,-44(fp)
   4e68c:	1880051e 	bne	r3,r2,4e6a4 <altera_avalon_jtag_uart_write+0x1b8>
   4e690:	e0bffc17 	ldw	r2,-16(fp)
   4e694:	10c00917 	ldw	r3,36(r2)
   4e698:	e0bffc17 	ldw	r2,-16(fp)
   4e69c:	10800117 	ldw	r2,4(r2)
   4e6a0:	18bff736 	bltu	r3,r2,4e680 <__alt_data_end+0xffff22c0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e6a4:	e0bffc17 	ldw	r2,-16(fp)
   4e6a8:	10800917 	ldw	r2,36(r2)
   4e6ac:	1000051e 	bne	r2,zero,4e6c4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e6b0:	e0bffe17 	ldw	r2,-8(fp)
   4e6b4:	00bfd016 	blt	zero,r2,4e5f8 <__alt_data_end+0xffff2238>
   4e6b8:	00000306 	br	4e6c8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e6bc:	0001883a 	nop
   4e6c0:	00000106 	br	4e6c8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e6c4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e6c8:	e0fffd17 	ldw	r3,-12(fp)
   4e6cc:	e0bff717 	ldw	r2,-36(fp)
   4e6d0:	18800426 	beq	r3,r2,4e6e4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e6d4:	e0fffd17 	ldw	r3,-12(fp)
   4e6d8:	e0bff717 	ldw	r2,-36(fp)
   4e6dc:	1885c83a 	sub	r2,r3,r2
   4e6e0:	00000606 	br	4e6fc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e6e4:	e0bfff17 	ldw	r2,-4(fp)
   4e6e8:	1090000c 	andi	r2,r2,16384
   4e6ec:	10000226 	beq	r2,zero,4e6f8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e6f0:	00bffd44 	movi	r2,-11
   4e6f4:	00000106 	br	4e6fc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e6f8:	00bffec4 	movi	r2,-5
}
   4e6fc:	e037883a 	mov	sp,fp
   4e700:	dfc00117 	ldw	ra,4(sp)
   4e704:	df000017 	ldw	fp,0(sp)
   4e708:	dec00204 	addi	sp,sp,8
   4e70c:	f800283a 	ret

0004e710 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e710:	defff504 	addi	sp,sp,-44
   4e714:	df000a15 	stw	fp,40(sp)
   4e718:	df000a04 	addi	fp,sp,40
   4e71c:	e13ffc15 	stw	r4,-16(fp)
   4e720:	e17ffd15 	stw	r5,-12(fp)
   4e724:	e1bffe15 	stw	r6,-8(fp)
   4e728:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e72c:	e03ff615 	stw	zero,-40(fp)
   4e730:	d0a72917 	ldw	r2,-25436(gp)
  
  if (alt_ticks_per_second ())
   4e734:	10003c26 	beq	r2,zero,4e828 <alt_alarm_start+0x118>
  {
    if (alarm)
   4e738:	e0bffc17 	ldw	r2,-16(fp)
   4e73c:	10003826 	beq	r2,zero,4e820 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e740:	e0bffc17 	ldw	r2,-16(fp)
   4e744:	e0fffe17 	ldw	r3,-8(fp)
   4e748:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e74c:	e0bffc17 	ldw	r2,-16(fp)
   4e750:	e0ffff17 	ldw	r3,-4(fp)
   4e754:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e758:	0005303a 	rdctl	r2,status
   4e75c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e760:	e0fff917 	ldw	r3,-28(fp)
   4e764:	00bfff84 	movi	r2,-2
   4e768:	1884703a 	and	r2,r3,r2
   4e76c:	1001703a 	wrctl	status,r2
  
  return context;
   4e770:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e774:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e778:	d0a72a17 	ldw	r2,-25432(gp)
      
      current_nticks = alt_nticks();
   4e77c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e780:	e0fffd17 	ldw	r3,-12(fp)
   4e784:	e0bff617 	ldw	r2,-40(fp)
   4e788:	1885883a 	add	r2,r3,r2
   4e78c:	10c00044 	addi	r3,r2,1
   4e790:	e0bffc17 	ldw	r2,-16(fp)
   4e794:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e798:	e0bffc17 	ldw	r2,-16(fp)
   4e79c:	10c00217 	ldw	r3,8(r2)
   4e7a0:	e0bff617 	ldw	r2,-40(fp)
   4e7a4:	1880042e 	bgeu	r3,r2,4e7b8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e7a8:	e0bffc17 	ldw	r2,-16(fp)
   4e7ac:	00c00044 	movi	r3,1
   4e7b0:	10c00405 	stb	r3,16(r2)
   4e7b4:	00000206 	br	4e7c0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e7b8:	e0bffc17 	ldw	r2,-16(fp)
   4e7bc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e7c0:	e0bffc17 	ldw	r2,-16(fp)
   4e7c4:	d0e01104 	addi	r3,gp,-32700
   4e7c8:	e0fffa15 	stw	r3,-24(fp)
   4e7cc:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e7d0:	e0bffb17 	ldw	r2,-20(fp)
   4e7d4:	e0fffa17 	ldw	r3,-24(fp)
   4e7d8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e7dc:	e0bffa17 	ldw	r2,-24(fp)
   4e7e0:	10c00017 	ldw	r3,0(r2)
   4e7e4:	e0bffb17 	ldw	r2,-20(fp)
   4e7e8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e7ec:	e0bffa17 	ldw	r2,-24(fp)
   4e7f0:	10800017 	ldw	r2,0(r2)
   4e7f4:	e0fffb17 	ldw	r3,-20(fp)
   4e7f8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e7fc:	e0bffa17 	ldw	r2,-24(fp)
   4e800:	e0fffb17 	ldw	r3,-20(fp)
   4e804:	10c00015 	stw	r3,0(r2)
   4e808:	e0bff817 	ldw	r2,-32(fp)
   4e80c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e810:	e0bff717 	ldw	r2,-36(fp)
   4e814:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e818:	0005883a 	mov	r2,zero
   4e81c:	00000306 	br	4e82c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e820:	00bffa84 	movi	r2,-22
   4e824:	00000106 	br	4e82c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e828:	00bfde84 	movi	r2,-134
  }
}
   4e82c:	e037883a 	mov	sp,fp
   4e830:	df000017 	ldw	fp,0(sp)
   4e834:	dec00104 	addi	sp,sp,4
   4e838:	f800283a 	ret

0004e83c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4e83c:	deffff04 	addi	sp,sp,-4
   4e840:	df000015 	stw	fp,0(sp)
   4e844:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4e848:	0001883a 	nop
   4e84c:	e037883a 	mov	sp,fp
   4e850:	df000017 	ldw	fp,0(sp)
   4e854:	dec00104 	addi	sp,sp,4
   4e858:	f800283a 	ret

0004e85c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e85c:	defffe04 	addi	sp,sp,-8
   4e860:	dfc00115 	stw	ra,4(sp)
   4e864:	df000015 	stw	fp,0(sp)
   4e868:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e86c:	d0a00e17 	ldw	r2,-32712(gp)
   4e870:	10000326 	beq	r2,zero,4e880 <alt_get_errno+0x24>
   4e874:	d0a00e17 	ldw	r2,-32712(gp)
   4e878:	103ee83a 	callr	r2
   4e87c:	00000106 	br	4e884 <alt_get_errno+0x28>
   4e880:	d0a72404 	addi	r2,gp,-25456
}
   4e884:	e037883a 	mov	sp,fp
   4e888:	dfc00117 	ldw	ra,4(sp)
   4e88c:	df000017 	ldw	fp,0(sp)
   4e890:	dec00204 	addi	sp,sp,8
   4e894:	f800283a 	ret

0004e898 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4e898:	defffa04 	addi	sp,sp,-24
   4e89c:	dfc00515 	stw	ra,20(sp)
   4e8a0:	df000415 	stw	fp,16(sp)
   4e8a4:	df000404 	addi	fp,sp,16
   4e8a8:	e13ffe15 	stw	r4,-8(fp)
   4e8ac:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4e8b0:	e0bffe17 	ldw	r2,-8(fp)
   4e8b4:	10000326 	beq	r2,zero,4e8c4 <alt_dev_llist_insert+0x2c>
   4e8b8:	e0bffe17 	ldw	r2,-8(fp)
   4e8bc:	10800217 	ldw	r2,8(r2)
   4e8c0:	1000061e 	bne	r2,zero,4e8dc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4e8c4:	004e85c0 	call	4e85c <alt_get_errno>
   4e8c8:	1007883a 	mov	r3,r2
   4e8cc:	00800584 	movi	r2,22
   4e8d0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4e8d4:	00bffa84 	movi	r2,-22
   4e8d8:	00001306 	br	4e928 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4e8dc:	e0bffe17 	ldw	r2,-8(fp)
   4e8e0:	e0ffff17 	ldw	r3,-4(fp)
   4e8e4:	e0fffc15 	stw	r3,-16(fp)
   4e8e8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e8ec:	e0bffd17 	ldw	r2,-12(fp)
   4e8f0:	e0fffc17 	ldw	r3,-16(fp)
   4e8f4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e8f8:	e0bffc17 	ldw	r2,-16(fp)
   4e8fc:	10c00017 	ldw	r3,0(r2)
   4e900:	e0bffd17 	ldw	r2,-12(fp)
   4e904:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e908:	e0bffc17 	ldw	r2,-16(fp)
   4e90c:	10800017 	ldw	r2,0(r2)
   4e910:	e0fffd17 	ldw	r3,-12(fp)
   4e914:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e918:	e0bffc17 	ldw	r2,-16(fp)
   4e91c:	e0fffd17 	ldw	r3,-12(fp)
   4e920:	10c00015 	stw	r3,0(r2)

  return 0;  
   4e924:	0005883a 	mov	r2,zero
}
   4e928:	e037883a 	mov	sp,fp
   4e92c:	dfc00117 	ldw	ra,4(sp)
   4e930:	df000017 	ldw	fp,0(sp)
   4e934:	dec00204 	addi	sp,sp,8
   4e938:	f800283a 	ret

0004e93c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4e93c:	defffd04 	addi	sp,sp,-12
   4e940:	dfc00215 	stw	ra,8(sp)
   4e944:	df000115 	stw	fp,4(sp)
   4e948:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e94c:	00800174 	movhi	r2,5
   4e950:	10be3c04 	addi	r2,r2,-1808
   4e954:	e0bfff15 	stw	r2,-4(fp)
   4e958:	00000606 	br	4e974 <_do_ctors+0x38>
        (*ctor) (); 
   4e95c:	e0bfff17 	ldw	r2,-4(fp)
   4e960:	10800017 	ldw	r2,0(r2)
   4e964:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e968:	e0bfff17 	ldw	r2,-4(fp)
   4e96c:	10bfff04 	addi	r2,r2,-4
   4e970:	e0bfff15 	stw	r2,-4(fp)
   4e974:	e0ffff17 	ldw	r3,-4(fp)
   4e978:	00800174 	movhi	r2,5
   4e97c:	10be3d04 	addi	r2,r2,-1804
   4e980:	18bff62e 	bgeu	r3,r2,4e95c <__alt_data_end+0xffff259c>
        (*ctor) (); 
}
   4e984:	0001883a 	nop
   4e988:	e037883a 	mov	sp,fp
   4e98c:	dfc00117 	ldw	ra,4(sp)
   4e990:	df000017 	ldw	fp,0(sp)
   4e994:	dec00204 	addi	sp,sp,8
   4e998:	f800283a 	ret

0004e99c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4e99c:	defffd04 	addi	sp,sp,-12
   4e9a0:	dfc00215 	stw	ra,8(sp)
   4e9a4:	df000115 	stw	fp,4(sp)
   4e9a8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e9ac:	00800174 	movhi	r2,5
   4e9b0:	10be3c04 	addi	r2,r2,-1808
   4e9b4:	e0bfff15 	stw	r2,-4(fp)
   4e9b8:	00000606 	br	4e9d4 <_do_dtors+0x38>
        (*dtor) (); 
   4e9bc:	e0bfff17 	ldw	r2,-4(fp)
   4e9c0:	10800017 	ldw	r2,0(r2)
   4e9c4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e9c8:	e0bfff17 	ldw	r2,-4(fp)
   4e9cc:	10bfff04 	addi	r2,r2,-4
   4e9d0:	e0bfff15 	stw	r2,-4(fp)
   4e9d4:	e0ffff17 	ldw	r3,-4(fp)
   4e9d8:	00800174 	movhi	r2,5
   4e9dc:	10be3d04 	addi	r2,r2,-1804
   4e9e0:	18bff62e 	bgeu	r3,r2,4e9bc <__alt_data_end+0xffff25fc>
        (*dtor) (); 
}
   4e9e4:	0001883a 	nop
   4e9e8:	e037883a 	mov	sp,fp
   4e9ec:	dfc00117 	ldw	ra,4(sp)
   4e9f0:	df000017 	ldw	fp,0(sp)
   4e9f4:	dec00204 	addi	sp,sp,8
   4e9f8:	f800283a 	ret

0004e9fc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4e9fc:	deffff04 	addi	sp,sp,-4
   4ea00:	df000015 	stw	fp,0(sp)
   4ea04:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   4ea08:	0001883a 	nop
   4ea0c:	e037883a 	mov	sp,fp
   4ea10:	df000017 	ldw	fp,0(sp)
   4ea14:	dec00104 	addi	sp,sp,4
   4ea18:	f800283a 	ret

0004ea1c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ea1c:	defff904 	addi	sp,sp,-28
   4ea20:	dfc00615 	stw	ra,24(sp)
   4ea24:	df000515 	stw	fp,20(sp)
   4ea28:	df000504 	addi	fp,sp,20
   4ea2c:	e13ffc15 	stw	r4,-16(fp)
   4ea30:	e17ffd15 	stw	r5,-12(fp)
   4ea34:	e1bffe15 	stw	r6,-8(fp)
   4ea38:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4ea3c:	e0800217 	ldw	r2,8(fp)
   4ea40:	d8800015 	stw	r2,0(sp)
   4ea44:	e1ffff17 	ldw	r7,-4(fp)
   4ea48:	e1bffe17 	ldw	r6,-8(fp)
   4ea4c:	e17ffd17 	ldw	r5,-12(fp)
   4ea50:	e13ffc17 	ldw	r4,-16(fp)
   4ea54:	004ebcc0 	call	4ebcc <alt_iic_isr_register>
}  
   4ea58:	e037883a 	mov	sp,fp
   4ea5c:	dfc00117 	ldw	ra,4(sp)
   4ea60:	df000017 	ldw	fp,0(sp)
   4ea64:	dec00204 	addi	sp,sp,8
   4ea68:	f800283a 	ret

0004ea6c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4ea6c:	defff904 	addi	sp,sp,-28
   4ea70:	df000615 	stw	fp,24(sp)
   4ea74:	df000604 	addi	fp,sp,24
   4ea78:	e13ffe15 	stw	r4,-8(fp)
   4ea7c:	e17fff15 	stw	r5,-4(fp)
   4ea80:	e0bfff17 	ldw	r2,-4(fp)
   4ea84:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ea88:	0005303a 	rdctl	r2,status
   4ea8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea90:	e0fffb17 	ldw	r3,-20(fp)
   4ea94:	00bfff84 	movi	r2,-2
   4ea98:	1884703a 	and	r2,r3,r2
   4ea9c:	1001703a 	wrctl	status,r2
  
  return context;
   4eaa0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eaa4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4eaa8:	00c00044 	movi	r3,1
   4eaac:	e0bffa17 	ldw	r2,-24(fp)
   4eab0:	1884983a 	sll	r2,r3,r2
   4eab4:	1007883a 	mov	r3,r2
   4eab8:	d0a72817 	ldw	r2,-25440(gp)
   4eabc:	1884b03a 	or	r2,r3,r2
   4eac0:	d0a72815 	stw	r2,-25440(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eac4:	d0a72817 	ldw	r2,-25440(gp)
   4eac8:	100170fa 	wrctl	ienable,r2
   4eacc:	e0bffc17 	ldw	r2,-16(fp)
   4ead0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ead4:	e0bffd17 	ldw	r2,-12(fp)
   4ead8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4eadc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4eae0:	0001883a 	nop
}
   4eae4:	e037883a 	mov	sp,fp
   4eae8:	df000017 	ldw	fp,0(sp)
   4eaec:	dec00104 	addi	sp,sp,4
   4eaf0:	f800283a 	ret

0004eaf4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4eaf4:	defff904 	addi	sp,sp,-28
   4eaf8:	df000615 	stw	fp,24(sp)
   4eafc:	df000604 	addi	fp,sp,24
   4eb00:	e13ffe15 	stw	r4,-8(fp)
   4eb04:	e17fff15 	stw	r5,-4(fp)
   4eb08:	e0bfff17 	ldw	r2,-4(fp)
   4eb0c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eb10:	0005303a 	rdctl	r2,status
   4eb14:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eb18:	e0fffb17 	ldw	r3,-20(fp)
   4eb1c:	00bfff84 	movi	r2,-2
   4eb20:	1884703a 	and	r2,r3,r2
   4eb24:	1001703a 	wrctl	status,r2
  
  return context;
   4eb28:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eb2c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4eb30:	00c00044 	movi	r3,1
   4eb34:	e0bffa17 	ldw	r2,-24(fp)
   4eb38:	1884983a 	sll	r2,r3,r2
   4eb3c:	0084303a 	nor	r2,zero,r2
   4eb40:	1007883a 	mov	r3,r2
   4eb44:	d0a72817 	ldw	r2,-25440(gp)
   4eb48:	1884703a 	and	r2,r3,r2
   4eb4c:	d0a72815 	stw	r2,-25440(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eb50:	d0a72817 	ldw	r2,-25440(gp)
   4eb54:	100170fa 	wrctl	ienable,r2
   4eb58:	e0bffc17 	ldw	r2,-16(fp)
   4eb5c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eb60:	e0bffd17 	ldw	r2,-12(fp)
   4eb64:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4eb68:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4eb6c:	0001883a 	nop
}
   4eb70:	e037883a 	mov	sp,fp
   4eb74:	df000017 	ldw	fp,0(sp)
   4eb78:	dec00104 	addi	sp,sp,4
   4eb7c:	f800283a 	ret

0004eb80 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4eb80:	defffc04 	addi	sp,sp,-16
   4eb84:	df000315 	stw	fp,12(sp)
   4eb88:	df000304 	addi	fp,sp,12
   4eb8c:	e13ffe15 	stw	r4,-8(fp)
   4eb90:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4eb94:	000530fa 	rdctl	r2,ienable
   4eb98:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4eb9c:	00c00044 	movi	r3,1
   4eba0:	e0bfff17 	ldw	r2,-4(fp)
   4eba4:	1884983a 	sll	r2,r3,r2
   4eba8:	1007883a 	mov	r3,r2
   4ebac:	e0bffd17 	ldw	r2,-12(fp)
   4ebb0:	1884703a 	and	r2,r3,r2
   4ebb4:	1004c03a 	cmpne	r2,r2,zero
   4ebb8:	10803fcc 	andi	r2,r2,255
}
   4ebbc:	e037883a 	mov	sp,fp
   4ebc0:	df000017 	ldw	fp,0(sp)
   4ebc4:	dec00104 	addi	sp,sp,4
   4ebc8:	f800283a 	ret

0004ebcc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ebcc:	defff504 	addi	sp,sp,-44
   4ebd0:	dfc00a15 	stw	ra,40(sp)
   4ebd4:	df000915 	stw	fp,36(sp)
   4ebd8:	df000904 	addi	fp,sp,36
   4ebdc:	e13ffc15 	stw	r4,-16(fp)
   4ebe0:	e17ffd15 	stw	r5,-12(fp)
   4ebe4:	e1bffe15 	stw	r6,-8(fp)
   4ebe8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4ebec:	00bffa84 	movi	r2,-22
   4ebf0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4ebf4:	e0bffd17 	ldw	r2,-12(fp)
   4ebf8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ebfc:	e0bff817 	ldw	r2,-32(fp)
   4ec00:	10800808 	cmpgei	r2,r2,32
   4ec04:	1000271e 	bne	r2,zero,4eca4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ec08:	0005303a 	rdctl	r2,status
   4ec0c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ec10:	e0fffb17 	ldw	r3,-20(fp)
   4ec14:	00bfff84 	movi	r2,-2
   4ec18:	1884703a 	and	r2,r3,r2
   4ec1c:	1001703a 	wrctl	status,r2
  
  return context;
   4ec20:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ec24:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4ec28:	00800174 	movhi	r2,5
   4ec2c:	108d2d04 	addi	r2,r2,13492
   4ec30:	e0fff817 	ldw	r3,-32(fp)
   4ec34:	180690fa 	slli	r3,r3,3
   4ec38:	10c5883a 	add	r2,r2,r3
   4ec3c:	e0fffe17 	ldw	r3,-8(fp)
   4ec40:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4ec44:	00800174 	movhi	r2,5
   4ec48:	108d2d04 	addi	r2,r2,13492
   4ec4c:	e0fff817 	ldw	r3,-32(fp)
   4ec50:	180690fa 	slli	r3,r3,3
   4ec54:	10c5883a 	add	r2,r2,r3
   4ec58:	10800104 	addi	r2,r2,4
   4ec5c:	e0ffff17 	ldw	r3,-4(fp)
   4ec60:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ec64:	e0bffe17 	ldw	r2,-8(fp)
   4ec68:	10000526 	beq	r2,zero,4ec80 <alt_iic_isr_register+0xb4>
   4ec6c:	e0bff817 	ldw	r2,-32(fp)
   4ec70:	100b883a 	mov	r5,r2
   4ec74:	e13ffc17 	ldw	r4,-16(fp)
   4ec78:	004ea6c0 	call	4ea6c <alt_ic_irq_enable>
   4ec7c:	00000406 	br	4ec90 <alt_iic_isr_register+0xc4>
   4ec80:	e0bff817 	ldw	r2,-32(fp)
   4ec84:	100b883a 	mov	r5,r2
   4ec88:	e13ffc17 	ldw	r4,-16(fp)
   4ec8c:	004eaf40 	call	4eaf4 <alt_ic_irq_disable>
   4ec90:	e0bff715 	stw	r2,-36(fp)
   4ec94:	e0bffa17 	ldw	r2,-24(fp)
   4ec98:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ec9c:	e0bff917 	ldw	r2,-28(fp)
   4eca0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4eca4:	e0bff717 	ldw	r2,-36(fp)
}
   4eca8:	e037883a 	mov	sp,fp
   4ecac:	dfc00117 	ldw	ra,4(sp)
   4ecb0:	df000017 	ldw	fp,0(sp)
   4ecb4:	dec00204 	addi	sp,sp,8
   4ecb8:	f800283a 	ret

0004ecbc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4ecbc:	defff804 	addi	sp,sp,-32
   4ecc0:	dfc00715 	stw	ra,28(sp)
   4ecc4:	df000615 	stw	fp,24(sp)
   4ecc8:	dc000515 	stw	r16,20(sp)
   4eccc:	df000604 	addi	fp,sp,24
   4ecd0:	e13ffb15 	stw	r4,-20(fp)
   4ecd4:	e17ffc15 	stw	r5,-16(fp)
   4ecd8:	e1bffd15 	stw	r6,-12(fp)
   4ecdc:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   4ece0:	e1bffe17 	ldw	r6,-8(fp)
   4ece4:	e17ffd17 	ldw	r5,-12(fp)
   4ece8:	e13ffc17 	ldw	r4,-16(fp)
   4ecec:	004ef440 	call	4ef44 <open>
   4ecf0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   4ecf4:	e0bffa17 	ldw	r2,-24(fp)
   4ecf8:	10002216 	blt	r2,zero,4ed84 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   4ecfc:	04000174 	movhi	r16,5
   4ed00:	84017f04 	addi	r16,r16,1532
   4ed04:	e0bffa17 	ldw	r2,-24(fp)
   4ed08:	01400304 	movi	r5,12
   4ed0c:	1009883a 	mov	r4,r2
   4ed10:	004a9940 	call	4a994 <__mulsi3>
   4ed14:	8085883a 	add	r2,r16,r2
   4ed18:	10c00017 	ldw	r3,0(r2)
   4ed1c:	e0bffb17 	ldw	r2,-20(fp)
   4ed20:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4ed24:	04000174 	movhi	r16,5
   4ed28:	84017f04 	addi	r16,r16,1532
   4ed2c:	e0bffa17 	ldw	r2,-24(fp)
   4ed30:	01400304 	movi	r5,12
   4ed34:	1009883a 	mov	r4,r2
   4ed38:	004a9940 	call	4a994 <__mulsi3>
   4ed3c:	8085883a 	add	r2,r16,r2
   4ed40:	10800104 	addi	r2,r2,4
   4ed44:	10c00017 	ldw	r3,0(r2)
   4ed48:	e0bffb17 	ldw	r2,-20(fp)
   4ed4c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ed50:	04000174 	movhi	r16,5
   4ed54:	84017f04 	addi	r16,r16,1532
   4ed58:	e0bffa17 	ldw	r2,-24(fp)
   4ed5c:	01400304 	movi	r5,12
   4ed60:	1009883a 	mov	r4,r2
   4ed64:	004a9940 	call	4a994 <__mulsi3>
   4ed68:	8085883a 	add	r2,r16,r2
   4ed6c:	10800204 	addi	r2,r2,8
   4ed70:	10c00017 	ldw	r3,0(r2)
   4ed74:	e0bffb17 	ldw	r2,-20(fp)
   4ed78:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4ed7c:	e13ffa17 	ldw	r4,-24(fp)
   4ed80:	004d9840 	call	4d984 <alt_release_fd>
  }
} 
   4ed84:	0001883a 	nop
   4ed88:	e6ffff04 	addi	sp,fp,-4
   4ed8c:	dfc00217 	ldw	ra,8(sp)
   4ed90:	df000117 	ldw	fp,4(sp)
   4ed94:	dc000017 	ldw	r16,0(sp)
   4ed98:	dec00304 	addi	sp,sp,12
   4ed9c:	f800283a 	ret

0004eda0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4eda0:	defffb04 	addi	sp,sp,-20
   4eda4:	dfc00415 	stw	ra,16(sp)
   4eda8:	df000315 	stw	fp,12(sp)
   4edac:	df000304 	addi	fp,sp,12
   4edb0:	e13ffd15 	stw	r4,-12(fp)
   4edb4:	e17ffe15 	stw	r5,-8(fp)
   4edb8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4edbc:	01c07fc4 	movi	r7,511
   4edc0:	01800044 	movi	r6,1
   4edc4:	e17ffd17 	ldw	r5,-12(fp)
   4edc8:	01000174 	movhi	r4,5
   4edcc:	21018204 	addi	r4,r4,1544
   4edd0:	004ecbc0 	call	4ecbc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4edd4:	01c07fc4 	movi	r7,511
   4edd8:	000d883a 	mov	r6,zero
   4eddc:	e17ffe17 	ldw	r5,-8(fp)
   4ede0:	01000174 	movhi	r4,5
   4ede4:	21017f04 	addi	r4,r4,1532
   4ede8:	004ecbc0 	call	4ecbc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4edec:	01c07fc4 	movi	r7,511
   4edf0:	01800044 	movi	r6,1
   4edf4:	e17fff17 	ldw	r5,-4(fp)
   4edf8:	01000174 	movhi	r4,5
   4edfc:	21018504 	addi	r4,r4,1556
   4ee00:	004ecbc0 	call	4ecbc <alt_open_fd>
}  
   4ee04:	0001883a 	nop
   4ee08:	e037883a 	mov	sp,fp
   4ee0c:	dfc00117 	ldw	ra,4(sp)
   4ee10:	df000017 	ldw	fp,0(sp)
   4ee14:	dec00204 	addi	sp,sp,8
   4ee18:	f800283a 	ret

0004ee1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ee1c:	defffe04 	addi	sp,sp,-8
   4ee20:	dfc00115 	stw	ra,4(sp)
   4ee24:	df000015 	stw	fp,0(sp)
   4ee28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ee2c:	d0a00e17 	ldw	r2,-32712(gp)
   4ee30:	10000326 	beq	r2,zero,4ee40 <alt_get_errno+0x24>
   4ee34:	d0a00e17 	ldw	r2,-32712(gp)
   4ee38:	103ee83a 	callr	r2
   4ee3c:	00000106 	br	4ee44 <alt_get_errno+0x28>
   4ee40:	d0a72404 	addi	r2,gp,-25456
}
   4ee44:	e037883a 	mov	sp,fp
   4ee48:	dfc00117 	ldw	ra,4(sp)
   4ee4c:	df000017 	ldw	fp,0(sp)
   4ee50:	dec00204 	addi	sp,sp,8
   4ee54:	f800283a 	ret

0004ee58 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ee58:	defffb04 	addi	sp,sp,-20
   4ee5c:	dfc00415 	stw	ra,16(sp)
   4ee60:	df000315 	stw	fp,12(sp)
   4ee64:	dc000215 	stw	r16,8(sp)
   4ee68:	df000304 	addi	fp,sp,12
   4ee6c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ee70:	e0bffe17 	ldw	r2,-8(fp)
   4ee74:	10800217 	ldw	r2,8(r2)
   4ee78:	10d00034 	orhi	r3,r2,16384
   4ee7c:	e0bffe17 	ldw	r2,-8(fp)
   4ee80:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ee84:	e03ffd15 	stw	zero,-12(fp)
   4ee88:	00002306 	br	4ef18 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ee8c:	04000174 	movhi	r16,5
   4ee90:	84017f04 	addi	r16,r16,1532
   4ee94:	e0bffd17 	ldw	r2,-12(fp)
   4ee98:	01400304 	movi	r5,12
   4ee9c:	1009883a 	mov	r4,r2
   4eea0:	004a9940 	call	4a994 <__mulsi3>
   4eea4:	8085883a 	add	r2,r16,r2
   4eea8:	10c00017 	ldw	r3,0(r2)
   4eeac:	e0bffe17 	ldw	r2,-8(fp)
   4eeb0:	10800017 	ldw	r2,0(r2)
   4eeb4:	1880151e 	bne	r3,r2,4ef0c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4eeb8:	04000174 	movhi	r16,5
   4eebc:	84017f04 	addi	r16,r16,1532
   4eec0:	e0bffd17 	ldw	r2,-12(fp)
   4eec4:	01400304 	movi	r5,12
   4eec8:	1009883a 	mov	r4,r2
   4eecc:	004a9940 	call	4a994 <__mulsi3>
   4eed0:	8085883a 	add	r2,r16,r2
   4eed4:	10800204 	addi	r2,r2,8
   4eed8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4eedc:	10000b0e 	bge	r2,zero,4ef0c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4eee0:	01400304 	movi	r5,12
   4eee4:	e13ffd17 	ldw	r4,-12(fp)
   4eee8:	004a9940 	call	4a994 <__mulsi3>
   4eeec:	1007883a 	mov	r3,r2
   4eef0:	00800174 	movhi	r2,5
   4eef4:	10817f04 	addi	r2,r2,1532
   4eef8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4eefc:	e0bffe17 	ldw	r2,-8(fp)
   4ef00:	18800226 	beq	r3,r2,4ef0c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4ef04:	00bffcc4 	movi	r2,-13
   4ef08:	00000806 	br	4ef2c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ef0c:	e0bffd17 	ldw	r2,-12(fp)
   4ef10:	10800044 	addi	r2,r2,1
   4ef14:	e0bffd15 	stw	r2,-12(fp)
   4ef18:	d0a00d17 	ldw	r2,-32716(gp)
   4ef1c:	1007883a 	mov	r3,r2
   4ef20:	e0bffd17 	ldw	r2,-12(fp)
   4ef24:	18bfd92e 	bgeu	r3,r2,4ee8c <__alt_data_end+0xffff2acc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4ef28:	0005883a 	mov	r2,zero
}
   4ef2c:	e6ffff04 	addi	sp,fp,-4
   4ef30:	dfc00217 	ldw	ra,8(sp)
   4ef34:	df000117 	ldw	fp,4(sp)
   4ef38:	dc000017 	ldw	r16,0(sp)
   4ef3c:	dec00304 	addi	sp,sp,12
   4ef40:	f800283a 	ret

0004ef44 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ef44:	defff604 	addi	sp,sp,-40
   4ef48:	dfc00915 	stw	ra,36(sp)
   4ef4c:	df000815 	stw	fp,32(sp)
   4ef50:	df000804 	addi	fp,sp,32
   4ef54:	e13ffd15 	stw	r4,-12(fp)
   4ef58:	e17ffe15 	stw	r5,-8(fp)
   4ef5c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4ef60:	00bfffc4 	movi	r2,-1
   4ef64:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4ef68:	00bffb44 	movi	r2,-19
   4ef6c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4ef70:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4ef74:	d1600b04 	addi	r5,gp,-32724
   4ef78:	e13ffd17 	ldw	r4,-12(fp)
   4ef7c:	004f2680 	call	4f268 <alt_find_dev>
   4ef80:	e0bff815 	stw	r2,-32(fp)
   4ef84:	e0bff817 	ldw	r2,-32(fp)
   4ef88:	1000051e 	bne	r2,zero,4efa0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4ef8c:	e13ffd17 	ldw	r4,-12(fp)
   4ef90:	004f2f80 	call	4f2f8 <alt_find_file>
   4ef94:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4ef98:	00800044 	movi	r2,1
   4ef9c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4efa0:	e0bff817 	ldw	r2,-32(fp)
   4efa4:	10002b26 	beq	r2,zero,4f054 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4efa8:	e13ff817 	ldw	r4,-32(fp)
   4efac:	004f4000 	call	4f400 <alt_get_fd>
   4efb0:	e0bff915 	stw	r2,-28(fp)
   4efb4:	e0bff917 	ldw	r2,-28(fp)
   4efb8:	1000030e 	bge	r2,zero,4efc8 <open+0x84>
    {
      status = index;
   4efbc:	e0bff917 	ldw	r2,-28(fp)
   4efc0:	e0bffa15 	stw	r2,-24(fp)
   4efc4:	00002506 	br	4f05c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   4efc8:	01400304 	movi	r5,12
   4efcc:	e13ff917 	ldw	r4,-28(fp)
   4efd0:	004a9940 	call	4a994 <__mulsi3>
   4efd4:	1007883a 	mov	r3,r2
   4efd8:	00800174 	movhi	r2,5
   4efdc:	10817f04 	addi	r2,r2,1532
   4efe0:	1885883a 	add	r2,r3,r2
   4efe4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4efe8:	e0fffe17 	ldw	r3,-8(fp)
   4efec:	00900034 	movhi	r2,16384
   4eff0:	10bfffc4 	addi	r2,r2,-1
   4eff4:	1886703a 	and	r3,r3,r2
   4eff8:	e0bffc17 	ldw	r2,-16(fp)
   4effc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4f000:	e0bffb17 	ldw	r2,-20(fp)
   4f004:	1000051e 	bne	r2,zero,4f01c <open+0xd8>
   4f008:	e13ffc17 	ldw	r4,-16(fp)
   4f00c:	004ee580 	call	4ee58 <alt_file_locked>
   4f010:	e0bffa15 	stw	r2,-24(fp)
   4f014:	e0bffa17 	ldw	r2,-24(fp)
   4f018:	10001016 	blt	r2,zero,4f05c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f01c:	e0bff817 	ldw	r2,-32(fp)
   4f020:	10800317 	ldw	r2,12(r2)
   4f024:	10000826 	beq	r2,zero,4f048 <open+0x104>
   4f028:	e0bff817 	ldw	r2,-32(fp)
   4f02c:	10800317 	ldw	r2,12(r2)
   4f030:	e1ffff17 	ldw	r7,-4(fp)
   4f034:	e1bffe17 	ldw	r6,-8(fp)
   4f038:	e17ffd17 	ldw	r5,-12(fp)
   4f03c:	e13ffc17 	ldw	r4,-16(fp)
   4f040:	103ee83a 	callr	r2
   4f044:	00000106 	br	4f04c <open+0x108>
   4f048:	0005883a 	mov	r2,zero
   4f04c:	e0bffa15 	stw	r2,-24(fp)
   4f050:	00000206 	br	4f05c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f054:	00bffb44 	movi	r2,-19
   4f058:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f05c:	e0bffa17 	ldw	r2,-24(fp)
   4f060:	1000090e 	bge	r2,zero,4f088 <open+0x144>
  {
    alt_release_fd (index);  
   4f064:	e13ff917 	ldw	r4,-28(fp)
   4f068:	004d9840 	call	4d984 <alt_release_fd>
    ALT_ERRNO = -status;
   4f06c:	004ee1c0 	call	4ee1c <alt_get_errno>
   4f070:	1007883a 	mov	r3,r2
   4f074:	e0bffa17 	ldw	r2,-24(fp)
   4f078:	0085c83a 	sub	r2,zero,r2
   4f07c:	18800015 	stw	r2,0(r3)
    return -1;
   4f080:	00bfffc4 	movi	r2,-1
   4f084:	00000106 	br	4f08c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   4f088:	e0bff917 	ldw	r2,-28(fp)
}
   4f08c:	e037883a 	mov	sp,fp
   4f090:	dfc00117 	ldw	ra,4(sp)
   4f094:	df000017 	ldw	fp,0(sp)
   4f098:	dec00204 	addi	sp,sp,8
   4f09c:	f800283a 	ret

0004f0a0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f0a0:	defffa04 	addi	sp,sp,-24
   4f0a4:	df000515 	stw	fp,20(sp)
   4f0a8:	df000504 	addi	fp,sp,20
   4f0ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f0b0:	0005303a 	rdctl	r2,status
   4f0b4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f0b8:	e0fffc17 	ldw	r3,-16(fp)
   4f0bc:	00bfff84 	movi	r2,-2
   4f0c0:	1884703a 	and	r2,r3,r2
   4f0c4:	1001703a 	wrctl	status,r2
  
  return context;
   4f0c8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f0cc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4f0d0:	e0bfff17 	ldw	r2,-4(fp)
   4f0d4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f0d8:	e0bffd17 	ldw	r2,-12(fp)
   4f0dc:	10800017 	ldw	r2,0(r2)
   4f0e0:	e0fffd17 	ldw	r3,-12(fp)
   4f0e4:	18c00117 	ldw	r3,4(r3)
   4f0e8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f0ec:	e0bffd17 	ldw	r2,-12(fp)
   4f0f0:	10800117 	ldw	r2,4(r2)
   4f0f4:	e0fffd17 	ldw	r3,-12(fp)
   4f0f8:	18c00017 	ldw	r3,0(r3)
   4f0fc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f100:	e0bffd17 	ldw	r2,-12(fp)
   4f104:	e0fffd17 	ldw	r3,-12(fp)
   4f108:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f10c:	e0bffd17 	ldw	r2,-12(fp)
   4f110:	e0fffd17 	ldw	r3,-12(fp)
   4f114:	10c00015 	stw	r3,0(r2)
   4f118:	e0bffb17 	ldw	r2,-20(fp)
   4f11c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f120:	e0bffe17 	ldw	r2,-8(fp)
   4f124:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4f128:	0001883a 	nop
   4f12c:	e037883a 	mov	sp,fp
   4f130:	df000017 	ldw	fp,0(sp)
   4f134:	dec00104 	addi	sp,sp,4
   4f138:	f800283a 	ret

0004f13c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f13c:	defffb04 	addi	sp,sp,-20
   4f140:	dfc00415 	stw	ra,16(sp)
   4f144:	df000315 	stw	fp,12(sp)
   4f148:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f14c:	d0a01117 	ldw	r2,-32700(gp)
   4f150:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f154:	d0a72a17 	ldw	r2,-25432(gp)
   4f158:	10800044 	addi	r2,r2,1
   4f15c:	d0a72a15 	stw	r2,-25432(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f160:	00002e06 	br	4f21c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f164:	e0bffd17 	ldw	r2,-12(fp)
   4f168:	10800017 	ldw	r2,0(r2)
   4f16c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f170:	e0bffd17 	ldw	r2,-12(fp)
   4f174:	10800403 	ldbu	r2,16(r2)
   4f178:	10803fcc 	andi	r2,r2,255
   4f17c:	10000426 	beq	r2,zero,4f190 <alt_tick+0x54>
   4f180:	d0a72a17 	ldw	r2,-25432(gp)
   4f184:	1000021e 	bne	r2,zero,4f190 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f188:	e0bffd17 	ldw	r2,-12(fp)
   4f18c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f190:	e0bffd17 	ldw	r2,-12(fp)
   4f194:	10800217 	ldw	r2,8(r2)
   4f198:	d0e72a17 	ldw	r3,-25432(gp)
   4f19c:	18801d36 	bltu	r3,r2,4f214 <alt_tick+0xd8>
   4f1a0:	e0bffd17 	ldw	r2,-12(fp)
   4f1a4:	10800403 	ldbu	r2,16(r2)
   4f1a8:	10803fcc 	andi	r2,r2,255
   4f1ac:	1000191e 	bne	r2,zero,4f214 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f1b0:	e0bffd17 	ldw	r2,-12(fp)
   4f1b4:	10800317 	ldw	r2,12(r2)
   4f1b8:	e0fffd17 	ldw	r3,-12(fp)
   4f1bc:	18c00517 	ldw	r3,20(r3)
   4f1c0:	1809883a 	mov	r4,r3
   4f1c4:	103ee83a 	callr	r2
   4f1c8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f1cc:	e0bfff17 	ldw	r2,-4(fp)
   4f1d0:	1000031e 	bne	r2,zero,4f1e0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f1d4:	e13ffd17 	ldw	r4,-12(fp)
   4f1d8:	004f0a00 	call	4f0a0 <alt_alarm_stop>
   4f1dc:	00000d06 	br	4f214 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f1e0:	e0bffd17 	ldw	r2,-12(fp)
   4f1e4:	10c00217 	ldw	r3,8(r2)
   4f1e8:	e0bfff17 	ldw	r2,-4(fp)
   4f1ec:	1887883a 	add	r3,r3,r2
   4f1f0:	e0bffd17 	ldw	r2,-12(fp)
   4f1f4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f1f8:	e0bffd17 	ldw	r2,-12(fp)
   4f1fc:	10c00217 	ldw	r3,8(r2)
   4f200:	d0a72a17 	ldw	r2,-25432(gp)
   4f204:	1880032e 	bgeu	r3,r2,4f214 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f208:	e0bffd17 	ldw	r2,-12(fp)
   4f20c:	00c00044 	movi	r3,1
   4f210:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f214:	e0bffe17 	ldw	r2,-8(fp)
   4f218:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f21c:	e0fffd17 	ldw	r3,-12(fp)
   4f220:	d0a01104 	addi	r2,gp,-32700
   4f224:	18bfcf1e 	bne	r3,r2,4f164 <__alt_data_end+0xffff2da4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f228:	0001883a 	nop
}
   4f22c:	0001883a 	nop
   4f230:	e037883a 	mov	sp,fp
   4f234:	dfc00117 	ldw	ra,4(sp)
   4f238:	df000017 	ldw	fp,0(sp)
   4f23c:	dec00204 	addi	sp,sp,8
   4f240:	f800283a 	ret

0004f244 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f244:	deffff04 	addi	sp,sp,-4
   4f248:	df000015 	stw	fp,0(sp)
   4f24c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f250:	000170fa 	wrctl	ienable,zero
}
   4f254:	0001883a 	nop
   4f258:	e037883a 	mov	sp,fp
   4f25c:	df000017 	ldw	fp,0(sp)
   4f260:	dec00104 	addi	sp,sp,4
   4f264:	f800283a 	ret

0004f268 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f268:	defffa04 	addi	sp,sp,-24
   4f26c:	dfc00515 	stw	ra,20(sp)
   4f270:	df000415 	stw	fp,16(sp)
   4f274:	df000404 	addi	fp,sp,16
   4f278:	e13ffe15 	stw	r4,-8(fp)
   4f27c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f280:	e0bfff17 	ldw	r2,-4(fp)
   4f284:	10800017 	ldw	r2,0(r2)
   4f288:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f28c:	e13ffe17 	ldw	r4,-8(fp)
   4f290:	0046fbc0 	call	46fbc <strlen>
   4f294:	10800044 	addi	r2,r2,1
   4f298:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f29c:	00000d06 	br	4f2d4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f2a0:	e0bffc17 	ldw	r2,-16(fp)
   4f2a4:	10800217 	ldw	r2,8(r2)
   4f2a8:	e0fffd17 	ldw	r3,-12(fp)
   4f2ac:	180d883a 	mov	r6,r3
   4f2b0:	e17ffe17 	ldw	r5,-8(fp)
   4f2b4:	1009883a 	mov	r4,r2
   4f2b8:	004f5ac0 	call	4f5ac <memcmp>
   4f2bc:	1000021e 	bne	r2,zero,4f2c8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f2c0:	e0bffc17 	ldw	r2,-16(fp)
   4f2c4:	00000706 	br	4f2e4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f2c8:	e0bffc17 	ldw	r2,-16(fp)
   4f2cc:	10800017 	ldw	r2,0(r2)
   4f2d0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f2d4:	e0fffc17 	ldw	r3,-16(fp)
   4f2d8:	e0bfff17 	ldw	r2,-4(fp)
   4f2dc:	18bff01e 	bne	r3,r2,4f2a0 <__alt_data_end+0xffff2ee0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f2e0:	0005883a 	mov	r2,zero
}
   4f2e4:	e037883a 	mov	sp,fp
   4f2e8:	dfc00117 	ldw	ra,4(sp)
   4f2ec:	df000017 	ldw	fp,0(sp)
   4f2f0:	dec00204 	addi	sp,sp,8
   4f2f4:	f800283a 	ret

0004f2f8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f2f8:	defffb04 	addi	sp,sp,-20
   4f2fc:	dfc00415 	stw	ra,16(sp)
   4f300:	df000315 	stw	fp,12(sp)
   4f304:	df000304 	addi	fp,sp,12
   4f308:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f30c:	d0a00917 	ldw	r2,-32732(gp)
   4f310:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f314:	00003106 	br	4f3dc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f318:	e0bffd17 	ldw	r2,-12(fp)
   4f31c:	10800217 	ldw	r2,8(r2)
   4f320:	1009883a 	mov	r4,r2
   4f324:	0046fbc0 	call	46fbc <strlen>
   4f328:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f32c:	e0bffd17 	ldw	r2,-12(fp)
   4f330:	10c00217 	ldw	r3,8(r2)
   4f334:	e0bffe17 	ldw	r2,-8(fp)
   4f338:	10bfffc4 	addi	r2,r2,-1
   4f33c:	1885883a 	add	r2,r3,r2
   4f340:	10800003 	ldbu	r2,0(r2)
   4f344:	10803fcc 	andi	r2,r2,255
   4f348:	1080201c 	xori	r2,r2,128
   4f34c:	10bfe004 	addi	r2,r2,-128
   4f350:	10800bd8 	cmpnei	r2,r2,47
   4f354:	1000031e 	bne	r2,zero,4f364 <alt_find_file+0x6c>
    {
      len -= 1;
   4f358:	e0bffe17 	ldw	r2,-8(fp)
   4f35c:	10bfffc4 	addi	r2,r2,-1
   4f360:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f364:	e0bffe17 	ldw	r2,-8(fp)
   4f368:	e0ffff17 	ldw	r3,-4(fp)
   4f36c:	1885883a 	add	r2,r3,r2
   4f370:	10800003 	ldbu	r2,0(r2)
   4f374:	10803fcc 	andi	r2,r2,255
   4f378:	1080201c 	xori	r2,r2,128
   4f37c:	10bfe004 	addi	r2,r2,-128
   4f380:	10800be0 	cmpeqi	r2,r2,47
   4f384:	1000081e 	bne	r2,zero,4f3a8 <alt_find_file+0xb0>
   4f388:	e0bffe17 	ldw	r2,-8(fp)
   4f38c:	e0ffff17 	ldw	r3,-4(fp)
   4f390:	1885883a 	add	r2,r3,r2
   4f394:	10800003 	ldbu	r2,0(r2)
   4f398:	10803fcc 	andi	r2,r2,255
   4f39c:	1080201c 	xori	r2,r2,128
   4f3a0:	10bfe004 	addi	r2,r2,-128
   4f3a4:	10000a1e 	bne	r2,zero,4f3d0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f3a8:	e0bffd17 	ldw	r2,-12(fp)
   4f3ac:	10800217 	ldw	r2,8(r2)
   4f3b0:	e0fffe17 	ldw	r3,-8(fp)
   4f3b4:	180d883a 	mov	r6,r3
   4f3b8:	e17fff17 	ldw	r5,-4(fp)
   4f3bc:	1009883a 	mov	r4,r2
   4f3c0:	004f5ac0 	call	4f5ac <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f3c4:	1000021e 	bne	r2,zero,4f3d0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f3c8:	e0bffd17 	ldw	r2,-12(fp)
   4f3cc:	00000706 	br	4f3ec <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f3d0:	e0bffd17 	ldw	r2,-12(fp)
   4f3d4:	10800017 	ldw	r2,0(r2)
   4f3d8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f3dc:	e0fffd17 	ldw	r3,-12(fp)
   4f3e0:	d0a00904 	addi	r2,gp,-32732
   4f3e4:	18bfcc1e 	bne	r3,r2,4f318 <__alt_data_end+0xffff2f58>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f3e8:	0005883a 	mov	r2,zero
}
   4f3ec:	e037883a 	mov	sp,fp
   4f3f0:	dfc00117 	ldw	ra,4(sp)
   4f3f4:	df000017 	ldw	fp,0(sp)
   4f3f8:	dec00204 	addi	sp,sp,8
   4f3fc:	f800283a 	ret

0004f400 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f400:	defffa04 	addi	sp,sp,-24
   4f404:	dfc00515 	stw	ra,20(sp)
   4f408:	df000415 	stw	fp,16(sp)
   4f40c:	dc000315 	stw	r16,12(sp)
   4f410:	df000404 	addi	fp,sp,16
   4f414:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f418:	00bffa04 	movi	r2,-24
   4f41c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f420:	e03ffc15 	stw	zero,-16(fp)
   4f424:	00001d06 	br	4f49c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   4f428:	04000174 	movhi	r16,5
   4f42c:	84017f04 	addi	r16,r16,1532
   4f430:	e0bffc17 	ldw	r2,-16(fp)
   4f434:	01400304 	movi	r5,12
   4f438:	1009883a 	mov	r4,r2
   4f43c:	004a9940 	call	4a994 <__mulsi3>
   4f440:	8085883a 	add	r2,r16,r2
   4f444:	10800017 	ldw	r2,0(r2)
   4f448:	1000111e 	bne	r2,zero,4f490 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   4f44c:	04000174 	movhi	r16,5
   4f450:	84017f04 	addi	r16,r16,1532
   4f454:	e0bffc17 	ldw	r2,-16(fp)
   4f458:	01400304 	movi	r5,12
   4f45c:	1009883a 	mov	r4,r2
   4f460:	004a9940 	call	4a994 <__mulsi3>
   4f464:	8085883a 	add	r2,r16,r2
   4f468:	e0fffe17 	ldw	r3,-8(fp)
   4f46c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f470:	d0e00d17 	ldw	r3,-32716(gp)
   4f474:	e0bffc17 	ldw	r2,-16(fp)
   4f478:	1880020e 	bge	r3,r2,4f484 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   4f47c:	e0bffc17 	ldw	r2,-16(fp)
   4f480:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
   4f484:	e0bffc17 	ldw	r2,-16(fp)
   4f488:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   4f48c:	00000606 	br	4f4a8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f490:	e0bffc17 	ldw	r2,-16(fp)
   4f494:	10800044 	addi	r2,r2,1
   4f498:	e0bffc15 	stw	r2,-16(fp)
   4f49c:	e0bffc17 	ldw	r2,-16(fp)
   4f4a0:	10800810 	cmplti	r2,r2,32
   4f4a4:	103fe01e 	bne	r2,zero,4f428 <__alt_data_end+0xffff3068>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f4a8:	e0bffd17 	ldw	r2,-12(fp)
}
   4f4ac:	e6ffff04 	addi	sp,fp,-4
   4f4b0:	dfc00217 	ldw	ra,8(sp)
   4f4b4:	df000117 	ldw	fp,4(sp)
   4f4b8:	dc000017 	ldw	r16,0(sp)
   4f4bc:	dec00304 	addi	sp,sp,12
   4f4c0:	f800283a 	ret

0004f4c4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4f4c4:	defffe04 	addi	sp,sp,-8
   4f4c8:	df000115 	stw	fp,4(sp)
   4f4cc:	df000104 	addi	fp,sp,4
   4f4d0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4f4d4:	e0bfff17 	ldw	r2,-4(fp)
   4f4d8:	10bffe84 	addi	r2,r2,-6
   4f4dc:	10c00428 	cmpgeui	r3,r2,16
   4f4e0:	18001a1e 	bne	r3,zero,4f54c <alt_exception_cause_generated_bad_addr+0x88>
   4f4e4:	100690ba 	slli	r3,r2,2
   4f4e8:	00800174 	movhi	r2,5
   4f4ec:	10bd3f04 	addi	r2,r2,-2820
   4f4f0:	1885883a 	add	r2,r3,r2
   4f4f4:	10800017 	ldw	r2,0(r2)
   4f4f8:	1000683a 	jmp	r2
   4f4fc:	0004f53c 	xorhi	zero,zero,5076
   4f500:	0004f53c 	xorhi	zero,zero,5076
   4f504:	0004f54c 	andi	zero,zero,5077
   4f508:	0004f54c 	andi	zero,zero,5077
   4f50c:	0004f54c 	andi	zero,zero,5077
   4f510:	0004f53c 	xorhi	zero,zero,5076
   4f514:	0004f544 	movi	zero,5077
   4f518:	0004f54c 	andi	zero,zero,5077
   4f51c:	0004f53c 	xorhi	zero,zero,5076
   4f520:	0004f53c 	xorhi	zero,zero,5076
   4f524:	0004f54c 	andi	zero,zero,5077
   4f528:	0004f53c 	xorhi	zero,zero,5076
   4f52c:	0004f544 	movi	zero,5077
   4f530:	0004f54c 	andi	zero,zero,5077
   4f534:	0004f54c 	andi	zero,zero,5077
   4f538:	0004f53c 	xorhi	zero,zero,5076
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4f53c:	00800044 	movi	r2,1
   4f540:	00000306 	br	4f550 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4f544:	0005883a 	mov	r2,zero
   4f548:	00000106 	br	4f550 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4f54c:	0005883a 	mov	r2,zero
  }
}
   4f550:	e037883a 	mov	sp,fp
   4f554:	df000017 	ldw	fp,0(sp)
   4f558:	dec00104 	addi	sp,sp,4
   4f55c:	f800283a 	ret

0004f560 <atexit>:
   4f560:	200b883a 	mov	r5,r4
   4f564:	000f883a 	mov	r7,zero
   4f568:	000d883a 	mov	r6,zero
   4f56c:	0009883a 	mov	r4,zero
   4f570:	004f6281 	jmpi	4f628 <__register_exitproc>

0004f574 <exit>:
   4f574:	defffe04 	addi	sp,sp,-8
   4f578:	000b883a 	mov	r5,zero
   4f57c:	dc000015 	stw	r16,0(sp)
   4f580:	dfc00115 	stw	ra,4(sp)
   4f584:	2021883a 	mov	r16,r4
   4f588:	004f7400 	call	4f740 <__call_exitprocs>
   4f58c:	00800174 	movhi	r2,5
   4f590:	1085fa04 	addi	r2,r2,6120
   4f594:	11000017 	ldw	r4,0(r2)
   4f598:	20800f17 	ldw	r2,60(r4)
   4f59c:	10000126 	beq	r2,zero,4f5a4 <exit+0x30>
   4f5a0:	103ee83a 	callr	r2
   4f5a4:	8009883a 	mov	r4,r16
   4f5a8:	004f8c00 	call	4f8c0 <_exit>

0004f5ac <memcmp>:
   4f5ac:	01c000c4 	movi	r7,3
   4f5b0:	3980192e 	bgeu	r7,r6,4f618 <memcmp+0x6c>
   4f5b4:	2144b03a 	or	r2,r4,r5
   4f5b8:	11c4703a 	and	r2,r2,r7
   4f5bc:	10000f26 	beq	r2,zero,4f5fc <memcmp+0x50>
   4f5c0:	20800003 	ldbu	r2,0(r4)
   4f5c4:	28c00003 	ldbu	r3,0(r5)
   4f5c8:	10c0151e 	bne	r2,r3,4f620 <memcmp+0x74>
   4f5cc:	31bfff84 	addi	r6,r6,-2
   4f5d0:	01ffffc4 	movi	r7,-1
   4f5d4:	00000406 	br	4f5e8 <memcmp+0x3c>
   4f5d8:	20800003 	ldbu	r2,0(r4)
   4f5dc:	28c00003 	ldbu	r3,0(r5)
   4f5e0:	31bfffc4 	addi	r6,r6,-1
   4f5e4:	10c00e1e 	bne	r2,r3,4f620 <memcmp+0x74>
   4f5e8:	21000044 	addi	r4,r4,1
   4f5ec:	29400044 	addi	r5,r5,1
   4f5f0:	31fff91e 	bne	r6,r7,4f5d8 <__alt_data_end+0xffff3218>
   4f5f4:	0005883a 	mov	r2,zero
   4f5f8:	f800283a 	ret
   4f5fc:	20c00017 	ldw	r3,0(r4)
   4f600:	28800017 	ldw	r2,0(r5)
   4f604:	18bfee1e 	bne	r3,r2,4f5c0 <__alt_data_end+0xffff3200>
   4f608:	31bfff04 	addi	r6,r6,-4
   4f60c:	21000104 	addi	r4,r4,4
   4f610:	29400104 	addi	r5,r5,4
   4f614:	39bff936 	bltu	r7,r6,4f5fc <__alt_data_end+0xffff323c>
   4f618:	303fe91e 	bne	r6,zero,4f5c0 <__alt_data_end+0xffff3200>
   4f61c:	003ff506 	br	4f5f4 <__alt_data_end+0xffff3234>
   4f620:	10c5c83a 	sub	r2,r2,r3
   4f624:	f800283a 	ret

0004f628 <__register_exitproc>:
   4f628:	defffa04 	addi	sp,sp,-24
   4f62c:	dc000315 	stw	r16,12(sp)
   4f630:	04000174 	movhi	r16,5
   4f634:	8405fa04 	addi	r16,r16,6120
   4f638:	80c00017 	ldw	r3,0(r16)
   4f63c:	dc400415 	stw	r17,16(sp)
   4f640:	dfc00515 	stw	ra,20(sp)
   4f644:	18805217 	ldw	r2,328(r3)
   4f648:	2023883a 	mov	r17,r4
   4f64c:	10003726 	beq	r2,zero,4f72c <__register_exitproc+0x104>
   4f650:	10c00117 	ldw	r3,4(r2)
   4f654:	010007c4 	movi	r4,31
   4f658:	20c00e16 	blt	r4,r3,4f694 <__register_exitproc+0x6c>
   4f65c:	1a000044 	addi	r8,r3,1
   4f660:	8800221e 	bne	r17,zero,4f6ec <__register_exitproc+0xc4>
   4f664:	18c00084 	addi	r3,r3,2
   4f668:	18c7883a 	add	r3,r3,r3
   4f66c:	18c7883a 	add	r3,r3,r3
   4f670:	12000115 	stw	r8,4(r2)
   4f674:	10c7883a 	add	r3,r2,r3
   4f678:	19400015 	stw	r5,0(r3)
   4f67c:	0005883a 	mov	r2,zero
   4f680:	dfc00517 	ldw	ra,20(sp)
   4f684:	dc400417 	ldw	r17,16(sp)
   4f688:	dc000317 	ldw	r16,12(sp)
   4f68c:	dec00604 	addi	sp,sp,24
   4f690:	f800283a 	ret
   4f694:	00800034 	movhi	r2,0
   4f698:	10800004 	addi	r2,r2,0
   4f69c:	10002626 	beq	r2,zero,4f738 <__register_exitproc+0x110>
   4f6a0:	01006404 	movi	r4,400
   4f6a4:	d9400015 	stw	r5,0(sp)
   4f6a8:	d9800115 	stw	r6,4(sp)
   4f6ac:	d9c00215 	stw	r7,8(sp)
   4f6b0:	00000000 	call	0 <__alt_mem_MemoriaDados>
   4f6b4:	d9400017 	ldw	r5,0(sp)
   4f6b8:	d9800117 	ldw	r6,4(sp)
   4f6bc:	d9c00217 	ldw	r7,8(sp)
   4f6c0:	10001d26 	beq	r2,zero,4f738 <__register_exitproc+0x110>
   4f6c4:	81000017 	ldw	r4,0(r16)
   4f6c8:	10000115 	stw	zero,4(r2)
   4f6cc:	02000044 	movi	r8,1
   4f6d0:	22405217 	ldw	r9,328(r4)
   4f6d4:	0007883a 	mov	r3,zero
   4f6d8:	12400015 	stw	r9,0(r2)
   4f6dc:	20805215 	stw	r2,328(r4)
   4f6e0:	10006215 	stw	zero,392(r2)
   4f6e4:	10006315 	stw	zero,396(r2)
   4f6e8:	883fde26 	beq	r17,zero,4f664 <__alt_data_end+0xffff32a4>
   4f6ec:	18c9883a 	add	r4,r3,r3
   4f6f0:	2109883a 	add	r4,r4,r4
   4f6f4:	1109883a 	add	r4,r2,r4
   4f6f8:	21802215 	stw	r6,136(r4)
   4f6fc:	01800044 	movi	r6,1
   4f700:	12406217 	ldw	r9,392(r2)
   4f704:	30cc983a 	sll	r6,r6,r3
   4f708:	4992b03a 	or	r9,r9,r6
   4f70c:	12406215 	stw	r9,392(r2)
   4f710:	21c04215 	stw	r7,264(r4)
   4f714:	01000084 	movi	r4,2
   4f718:	893fd21e 	bne	r17,r4,4f664 <__alt_data_end+0xffff32a4>
   4f71c:	11006317 	ldw	r4,396(r2)
   4f720:	218cb03a 	or	r6,r4,r6
   4f724:	11806315 	stw	r6,396(r2)
   4f728:	003fce06 	br	4f664 <__alt_data_end+0xffff32a4>
   4f72c:	18805304 	addi	r2,r3,332
   4f730:	18805215 	stw	r2,328(r3)
   4f734:	003fc606 	br	4f650 <__alt_data_end+0xffff3290>
   4f738:	00bfffc4 	movi	r2,-1
   4f73c:	003fd006 	br	4f680 <__alt_data_end+0xffff32c0>

0004f740 <__call_exitprocs>:
   4f740:	defff504 	addi	sp,sp,-44
   4f744:	df000915 	stw	fp,36(sp)
   4f748:	dd400615 	stw	r21,24(sp)
   4f74c:	dc800315 	stw	r18,12(sp)
   4f750:	dfc00a15 	stw	ra,40(sp)
   4f754:	ddc00815 	stw	r23,32(sp)
   4f758:	dd800715 	stw	r22,28(sp)
   4f75c:	dd000515 	stw	r20,20(sp)
   4f760:	dcc00415 	stw	r19,16(sp)
   4f764:	dc400215 	stw	r17,8(sp)
   4f768:	dc000115 	stw	r16,4(sp)
   4f76c:	d9000015 	stw	r4,0(sp)
   4f770:	2839883a 	mov	fp,r5
   4f774:	04800044 	movi	r18,1
   4f778:	057fffc4 	movi	r21,-1
   4f77c:	00800174 	movhi	r2,5
   4f780:	1085fa04 	addi	r2,r2,6120
   4f784:	12000017 	ldw	r8,0(r2)
   4f788:	45005217 	ldw	r20,328(r8)
   4f78c:	44c05204 	addi	r19,r8,328
   4f790:	a0001c26 	beq	r20,zero,4f804 <__call_exitprocs+0xc4>
   4f794:	a0800117 	ldw	r2,4(r20)
   4f798:	15ffffc4 	addi	r23,r2,-1
   4f79c:	b8000d16 	blt	r23,zero,4f7d4 <__call_exitprocs+0x94>
   4f7a0:	14000044 	addi	r16,r2,1
   4f7a4:	8421883a 	add	r16,r16,r16
   4f7a8:	8421883a 	add	r16,r16,r16
   4f7ac:	84402004 	addi	r17,r16,128
   4f7b0:	a463883a 	add	r17,r20,r17
   4f7b4:	a421883a 	add	r16,r20,r16
   4f7b8:	e0001e26 	beq	fp,zero,4f834 <__call_exitprocs+0xf4>
   4f7bc:	80804017 	ldw	r2,256(r16)
   4f7c0:	e0801c26 	beq	fp,r2,4f834 <__call_exitprocs+0xf4>
   4f7c4:	bdffffc4 	addi	r23,r23,-1
   4f7c8:	843fff04 	addi	r16,r16,-4
   4f7cc:	8c7fff04 	addi	r17,r17,-4
   4f7d0:	bd7ff91e 	bne	r23,r21,4f7b8 <__alt_data_end+0xffff33f8>
   4f7d4:	00800034 	movhi	r2,0
   4f7d8:	10800004 	addi	r2,r2,0
   4f7dc:	10000926 	beq	r2,zero,4f804 <__call_exitprocs+0xc4>
   4f7e0:	a0800117 	ldw	r2,4(r20)
   4f7e4:	1000301e 	bne	r2,zero,4f8a8 <__call_exitprocs+0x168>
   4f7e8:	a0800017 	ldw	r2,0(r20)
   4f7ec:	10003226 	beq	r2,zero,4f8b8 <__call_exitprocs+0x178>
   4f7f0:	a009883a 	mov	r4,r20
   4f7f4:	98800015 	stw	r2,0(r19)
   4f7f8:	00000000 	call	0 <__alt_mem_MemoriaDados>
   4f7fc:	9d000017 	ldw	r20,0(r19)
   4f800:	a03fe41e 	bne	r20,zero,4f794 <__alt_data_end+0xffff33d4>
   4f804:	dfc00a17 	ldw	ra,40(sp)
   4f808:	df000917 	ldw	fp,36(sp)
   4f80c:	ddc00817 	ldw	r23,32(sp)
   4f810:	dd800717 	ldw	r22,28(sp)
   4f814:	dd400617 	ldw	r21,24(sp)
   4f818:	dd000517 	ldw	r20,20(sp)
   4f81c:	dcc00417 	ldw	r19,16(sp)
   4f820:	dc800317 	ldw	r18,12(sp)
   4f824:	dc400217 	ldw	r17,8(sp)
   4f828:	dc000117 	ldw	r16,4(sp)
   4f82c:	dec00b04 	addi	sp,sp,44
   4f830:	f800283a 	ret
   4f834:	a0800117 	ldw	r2,4(r20)
   4f838:	80c00017 	ldw	r3,0(r16)
   4f83c:	10bfffc4 	addi	r2,r2,-1
   4f840:	15c01426 	beq	r2,r23,4f894 <__call_exitprocs+0x154>
   4f844:	80000015 	stw	zero,0(r16)
   4f848:	183fde26 	beq	r3,zero,4f7c4 <__alt_data_end+0xffff3404>
   4f84c:	95c8983a 	sll	r4,r18,r23
   4f850:	a0806217 	ldw	r2,392(r20)
   4f854:	a5800117 	ldw	r22,4(r20)
   4f858:	2084703a 	and	r2,r4,r2
   4f85c:	10000b26 	beq	r2,zero,4f88c <__call_exitprocs+0x14c>
   4f860:	a0806317 	ldw	r2,396(r20)
   4f864:	2088703a 	and	r4,r4,r2
   4f868:	20000c1e 	bne	r4,zero,4f89c <__call_exitprocs+0x15c>
   4f86c:	89400017 	ldw	r5,0(r17)
   4f870:	d9000017 	ldw	r4,0(sp)
   4f874:	183ee83a 	callr	r3
   4f878:	a0800117 	ldw	r2,4(r20)
   4f87c:	15bfbf1e 	bne	r2,r22,4f77c <__alt_data_end+0xffff33bc>
   4f880:	98800017 	ldw	r2,0(r19)
   4f884:	153fcf26 	beq	r2,r20,4f7c4 <__alt_data_end+0xffff3404>
   4f888:	003fbc06 	br	4f77c <__alt_data_end+0xffff33bc>
   4f88c:	183ee83a 	callr	r3
   4f890:	003ff906 	br	4f878 <__alt_data_end+0xffff34b8>
   4f894:	a5c00115 	stw	r23,4(r20)
   4f898:	003feb06 	br	4f848 <__alt_data_end+0xffff3488>
   4f89c:	89000017 	ldw	r4,0(r17)
   4f8a0:	183ee83a 	callr	r3
   4f8a4:	003ff406 	br	4f878 <__alt_data_end+0xffff34b8>
   4f8a8:	a0800017 	ldw	r2,0(r20)
   4f8ac:	a027883a 	mov	r19,r20
   4f8b0:	1029883a 	mov	r20,r2
   4f8b4:	003fb606 	br	4f790 <__alt_data_end+0xffff33d0>
   4f8b8:	0005883a 	mov	r2,zero
   4f8bc:	003ffb06 	br	4f8ac <__alt_data_end+0xffff34ec>

0004f8c0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f8c0:	defffd04 	addi	sp,sp,-12
   4f8c4:	df000215 	stw	fp,8(sp)
   4f8c8:	df000204 	addi	fp,sp,8
   4f8cc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f8d0:	0001883a 	nop
   4f8d4:	e0bfff17 	ldw	r2,-4(fp)
   4f8d8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f8dc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f8e0:	10000226 	beq	r2,zero,4f8ec <_exit+0x2c>
    ALT_SIM_FAIL();
   4f8e4:	002af070 	cmpltui	zero,zero,43969
   4f8e8:	00000106 	br	4f8f0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f8ec:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f8f0:	003fff06 	br	4f8f0 <__alt_data_end+0xffff3530>
