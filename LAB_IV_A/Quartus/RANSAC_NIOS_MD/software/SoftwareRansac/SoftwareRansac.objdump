
SoftwareRansac.elf:     file format elf32-littlenios2
SoftwareRansac.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040230

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x000130a0 memsz 0x000130a0 flags r-x
    LOAD off    0x000140c0 vaddr 0x000530c0 paddr 0x0005518c align 2**12
         filesz 0x000020cc memsz 0x000020cc flags rw-
    LOAD off    0x00016258 vaddr 0x00057258 paddr 0x00057258 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012b1c  00040230  00040230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000374  00052d4c  00052d4c  00013d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000020cc  000530c0  0005518c  000140c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00057258  00057258  00016258  2**2
                  ALLOC, SMALL_DATA
  6 .MemoriaDados 00000000  00000000  00000000  0001618c  2**0
                  CONTENTS
  7 .MemoriaPrograma 00000000  000573b8  000573b8  0001618c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001618c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000010a0  00000000  00000000  000161b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002613e  00000000  00000000  00017250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000a0c6  00000000  00000000  0003d38e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000c859  00000000  00000000  00047454  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002580  00000000  00000000  00053cb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003f13  00000000  00000000  00056230  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001ae2b  00000000  00000000  0005a143  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00074f70  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001f88  00000000  00000000  00074f80  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0007a45e  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000b  00000000  00000000  0007a461  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0007a46c  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0007a46d  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0007a46e  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0007a477  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0007a480  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000010  00000000  00000000  0007a489  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000001f  00000000  00000000  0007a499  2**0
                  CONTENTS, READONLY
 27 .jdi          0000567a  00000000  00000000  0007a4b8  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0003ccb5  00000000  00000000  0007fb32  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040230 l    d  .text	00000000 .text
00052d4c l    d  .rodata	00000000 .rodata
000530c0 l    d  .rwdata	00000000 .rwdata
00057258 l    d  .bss	00000000 .bss
00000000 l    d  .MemoriaDados	00000000 .MemoriaDados
000573b8 l    d  .MemoriaPrograma	00000000 .MemoriaPrograma
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../SoftwareRansac_bsp//obj/HAL/src/crt0.o
00040268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 ransac.c
00000000 l    df *ABS*	00000000 s_atan.c
00052da8 l     O .rodata	00000020 atanhi
00052d88 l     O .rodata	00000020 atanlo
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00052f0e l     O .rodata	00000010 zeroes.4404
0004848c l     F .text	000000bc __sbprintf
00052f1e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0004869c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0004a1f4 l     F .text	00000008 __fp_unlock
0004a208 l     F .text	0000019c __sinit.part.1
0004a3a4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0005369c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00053ae0 l     O .rwdata	00000020 lc_ctype_charset
00053ac0 l     O .rwdata	00000020 lc_message_charset
00053b00 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00052f50 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004d878 l     F .text	000000fc __sprint_r.part.0
00053074 l     O .rodata	00000010 zeroes.4349
0004eeb4 l     F .text	000000bc __sbprintf
00053084 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
000506b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
000507cc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
000507f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
000508ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
000509d4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00050ac0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00050c9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0005517c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00050f10 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0005104c l     F .text	00000034 alt_dev_reg
000540e8 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00051324 l     F .text	0000020c altera_avalon_jtag_uart_irq
00051530 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00051cb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00052114 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00052274 l     F .text	0000003c alt_get_errno
000522b0 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0005728c g     O .bss	00000004 alt_instruction_exception_handler
0004cebc g     F .text	00000074 _mprec_log10
0004cfa8 g     F .text	0000008c __any_on
0004f468 g     F .text	00000054 _isatty_r
00052f5c g     O .rodata	00000028 __mprec_tinytens
00050bd8 g     F .text	0000007c alt_main
00045fac g     F .text	000000c0 _puts_r
000572b8 g     O .bss	00000100 alt_irq
00041d78 g     F .text	00000014 fabs
0004f4bc g     F .text	00000060 _lseek_r
0005518c g       *ABS*	00000000 __flash_rwdata_start
00050588 g     F .text	00000088 .hidden __eqdf2
000573b8 g       *ABS*	00000000 __alt_heap_start
00045f70 g     F .text	0000003c printf
0004f6d4 g     F .text	0000009c _wcrtomb_r
0004d738 g     F .text	0000005c __sseek
0004a554 g     F .text	00000010 __sinit
0004f57c g     F .text	00000140 __swbuf_r
0004b028 g     F .text	0000007c _setlocale_r
0004a3ac g     F .text	00000078 __sfmoreglue
00050c78 g     F .text	00000024 __malloc_unlock
00040b00 g     F .text	000001b8 coefficientOfDetermination
00042430 g     F .text	00000440 .hidden __divsf3
0004bcf8 g     F .text	0000015c memmove
0004a53c g     F .text	00000018 _cleanup
0004bf7c g     F .text	000000a8 _Balloc
00043380 g     F .text	00000070 .hidden __fixsfsi
00044790 g     F .text	000000dc .hidden __gtdf2
0005269c g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00055149 g     O .rwdata	00000001 size_2
0004f40c g     F .text	0000005c _fstat_r
00057270 g     O .bss	00000004 errno
0004d6b4 g     F .text	00000008 __seofread
00057278 g     O .bss	00000004 alt_argv
0005d148 g       *ABS*	00000000 _gp
00042e9c g     F .text	000004e4 .hidden __subsf3
00053f68 g     O .rwdata	00000180 alt_fd_list
000526c0 g     F .text	00000090 alt_find_dev
0004bbb0 g     F .text	00000148 memcpy
0004a1fc g     F .text	0000000c _cleanup_r
00045b48 g     F .text	000000dc .hidden __floatsidf
00040680 g     F .text	00000104 calculateIntersection
000521f8 g     F .text	0000007c alt_io_redirect
0004486c g     F .text	000000f4 .hidden __ltdf2
00052d4c g       *ABS*	00000000 __DTOR_END__
0004606c g     F .text	00000014 puts
0005291c g     F .text	0000009c alt_exception_cause_generated_bad_addr
0004d598 g     F .text	00000074 __fpclassifyd
0004ce18 g     F .text	000000a4 __ratio
0004ee98 g     F .text	0000001c __vfiprintf_internal
00051728 g     F .text	0000021c altera_avalon_jtag_uart_read
00045f40 g     F .text	00000030 _printf_r
00041e84 g     F .text	00000064 .hidden __udivsi3
00050928 g     F .text	000000ac isatty
00052fac g     O .rodata	000000c8 __mprec_tens
0004b0a4 g     F .text	0000000c __locale_charset
000429a4 g     F .text	000000c8 .hidden __lesf2
0005726c g     O .bss	00000004 __malloc_top_pad
00055154 g     O .rwdata	00000004 __mb_cur_max
0004b0d4 g     F .text	0000000c _localeconv_r
0004c3b0 g     F .text	0000003c __i2b
0004a9d8 g     F .text	000004c8 __sfvwrite_r
00040cb8 g     F .text	00000320 inliersOutliersMemory
0004d60c g     F .text	00000054 _sbrk_r
00041444 g     F .text	000000a0 squareDistanceBetweenPoints
0004f51c g     F .text	00000060 _read_r
00055174 g     O .rwdata	00000004 alt_max_fd
0004f100 g     F .text	000000f0 _fclose_r
0004a1c4 g     F .text	00000030 fflush
00057268 g     O .bss	00000004 __malloc_max_sbrked_mem
00045c24 g     F .text	00000110 .hidden __extendsfdf2
00043514 g     F .text	000008ac .hidden __adddf3
00042870 g     F .text	00000078 .hidden __nesf2
0004cbc0 g     F .text	0000010c __b2d
0004ffc4 g     F .text	000005c4 .hidden __umoddi3
00050afc g     F .text	000000dc lseek
0005514c g     O .rwdata	00000004 _global_impure_ptr
0004d034 g     F .text	00000564 _realloc_r
000573b8 g       *ABS*	00000000 __bss_end
00052024 g     F .text	000000f0 alt_iic_isr_register
000414e4 g     F .text	0000030c RANSAC
00052594 g     F .text	00000108 alt_tick
0004f9c8 g     F .text	000005fc .hidden __udivdi3
0004f368 g     F .text	00000024 _fputwc_r
00052f84 g     O .rodata	00000028 __mprec_bigtens
0004c194 g     F .text	00000104 __s2b
00050610 g     F .text	000000a8 .hidden __floatunsidf
0004c900 g     F .text	00000060 __mcmp
0004a574 g     F .text	00000018 __fp_lock_all
00051fd8 g     F .text	0000004c alt_ic_irq_enabled
000524f8 g     F .text	0000009c alt_alarm_stop
00057280 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
00053f40 g     O .rwdata	00000028 alt_dev_null
00000000 g       *ABS*	00000000 __alt_mem_MemoriaDados
00051c94 g     F .text	00000020 alt_dcache_flush_all
0004c298 g     F .text	00000068 __hi0bits
00045ac8 g     F .text	00000080 .hidden __fixdfsi
0005518c g       *ABS*	00000000 __ram_rwdata_end
0005516c g     O .rwdata	00000008 alt_dev_list
00050f4c g     F .text	00000100 write
000428e8 g     F .text	000000bc .hidden __gtsf2
000530c0 g       *ABS*	00000000 __ram_rodata_end
00050834 g     F .text	000000b8 fstat
0004486c g     F .text	000000f4 .hidden __ledf2
0004c678 g     F .text	00000140 __pow5mult
0004d98c g     F .text	0000150c ___vfiprintf_internal_r
00057260 g     O .bss	00000004 __nlocale_changed
00041ee8 g     F .text	00000058 .hidden __umodsi3
000573b8 g       *ABS*	00000000 end
00040000 g       *ABS*	00000000 __alt_mem_MemoriaPrograma
00051264 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000060 alt_instruction_exception_entry
00052d4c g       *ABS*	00000000 __CTOR_LIST__
0005c3c0 g       *ABS*	00000000 __alt_stack_pointer
00045edc g     F .text	00000064 .hidden __clzsi2
00051944 g     F .text	00000224 altera_avalon_jtag_uart_write
0004a564 g     F .text	00000004 __sfp_lock_acquire
0004bacc g     F .text	000000e4 memchr
00046194 g     F .text	000022dc ___vfprintf_internal_r
0004a6c8 g     F .text	00000310 _free_r
0004b0b0 g     F .text	00000010 __locale_mb_cur_max
00052b98 g     F .text	00000180 __call_exitprocs
0005725c g     O .bss	00000004 __mlocale_changed
00055158 g     O .rwdata	00000004 __malloc_sbrk_base
00040230 g     F .text	0000003c _start
00057284 g     O .bss	00000004 _alt_tick_rate
00046098 g     F .text	00000064 rand
0004c7b8 g     F .text	00000148 __lshift
00057288 g     O .bss	00000004 _alt_nticks
00050cd8 g     F .text	00000104 read
00055148 g     O .rwdata	00000001 size_1
000510b8 g     F .text	00000048 alt_sys_init
000433f0 g     F .text	00000124 .hidden __floatsisf
00052a80 g     F .text	00000118 __register_exitproc
0004c3ec g     F .text	0000028c __multiply
000515d0 g     F .text	00000068 altera_avalon_jtag_uart_close
00041f40 g     F .text	00000028 .hidden __mulsi3
000530c0 g       *ABS*	00000000 __ram_rwdata_start
00052d4c g       *ABS*	00000000 __ram_rodata_start
00057290 g     O .bss	00000028 __malloc_current_mallinfo
00042870 g     F .text	00000078 .hidden __eqsf2
0004cccc g     F .text	0000014c __d2b
00051100 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00052858 g     F .text	000000c4 alt_get_fd
0004efd0 g     F .text	00000054 _close_r
00052a04 g     F .text	0000007c memcmp
000511c0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000573b8 g       *ABS*	00000000 __alt_stack_base
00051210 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00040784 g     F .text	00000070 getAngleFromModel
00048548 g     F .text	00000154 __swsetup_r
00043dc0 g     F .text	000009d0 .hidden __divdf3
0004a424 g     F .text	00000118 __sfp
0004cf30 g     F .text	00000078 __copybits
00053b38 g     O .rwdata	00000408 __malloc_av_
0004a570 g     F .text	00000004 __sinit_lock_release
00044960 g     F .text	0000086c .hidden __muldf3
0004d660 g     F .text	00000054 __sread
00052750 g     F .text	00000108 alt_find_file
00051cf0 g     F .text	000000a4 alt_dev_llist_insert
00050c54 g     F .text	00000024 __malloc_lock
00050e60 g     F .text	000000b0 sbrk
0004a168 g     F .text	0000005c _fflush_r
0004f024 g     F .text	000000dc _calloc_r
00057258 g       *ABS*	00000000 __bss_start
0004be54 g     F .text	00000128 memset
0004026c g     F .text	00000360 main
0005727c g     O .bss	00000004 alt_envp
00057264 g     O .bss	00000004 __malloc_max_total_mem
00051160 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004f6bc g     F .text	00000018 __swbuf
00046080 g     F .text	00000018 srand
000429a4 g     F .text	000000c8 .hidden __ltsf2
0004d794 g     F .text	00000008 __sclose
0005c3c0 g       *ABS*	00000000 __alt_heap_limit
0004f1f0 g     F .text	00000014 fclose
00045d34 g     F .text	000001a8 .hidden __truncdfsf2
000488c4 g     F .text	00001688 _dtoa_r
0004b2c0 g     F .text	0000080c _malloc_r
0004f830 g     F .text	00000030 __ascii_wctomb
000407f4 g     F .text	0000030c leastSquare
00055178 g     O .rwdata	00000004 alt_errno
0004aea0 g     F .text	000000c4 _fwalk
00041d8c g     F .text	00000084 .hidden __divsi3
0004a5a4 g     F .text	00000124 _malloc_trim_r
00052d4c g       *ABS*	00000000 __CTOR_END__
00042a6c g     F .text	00000430 .hidden __mulsf3
0004d79c g     F .text	000000dc strcmp
00052d4c g       *ABS*	00000000 __flash_rodata_start
00052d4c g       *ABS*	00000000 __DTOR_LIST__
00050588 g     F .text	00000088 .hidden __nedf2
00051080 g     F .text	00000038 alt_irq_init
00050ddc g     F .text	00000084 alt_release_fd
000417f0 g     F .text	00000588 atan
00052dc8 g     O .rodata	00000100 .hidden __clz_tab
00057258 g     O .bss	00000004 _PathLocale
000529b8 g     F .text	00000014 atexit
000428e8 g     F .text	000000bc .hidden __gesf2
0004ef70 g     F .text	00000060 _write_r
0004b0e0 g     F .text	00000018 setlocale
00055150 g     O .rwdata	00000004 _impure_ptr
00057274 g     O .bss	00000004 alt_argc
00049f4c g     F .text	0000021c __sflush_r
00051df4 g     F .text	00000060 _do_dtors
0004b0cc g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
0004cb5c g     F .text	00000064 __ulp
0004a58c g     F .text	00000018 __fp_unlock_all
000531f4 g     O .rwdata	000004a8 coords_2
00055164 g     O .rwdata	00000008 alt_fs_list
00040fd8 g     F .text	0000026c inliersOutliers
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004b0f8 g     F .text	0000000c localeconv
00051e74 g     F .text	00000050 alt_ic_isr_register
0005518c g       *ABS*	00000000 _edata
000530c0 g     O .rwdata	00000132 coords_1
000573b8 g       *ABS*	00000000 _end
0004f204 g     F .text	00000164 __fputwc
00040230 g       *ABS*	00000000 __ram_exceptions_end
00051638 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
000405cc g     F .text	000000b4 square_root
00041244 g     F .text	00000200 checkModel
00051f4c g     F .text	0000008c alt_ic_irq_disable
0004d6bc g     F .text	0000007c __swrite
0005515c g     O .rwdata	00000004 __malloc_trim_threshold
0004b0c0 g     F .text	0000000c __locale_msgcharset
000529cc g     F .text	00000038 exit
0004af64 g     F .text	000000c4 _fwalk_reent
0004c960 g     F .text	000001fc __mdiff
00041e10 g     F .text	00000074 .hidden __modsi3
0005c3c0 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004a568 g     F .text	00000004 __sfp_lock_release
00052d18 g     F .text	00000034 _exit
00051b68 g     F .text	0000012c alt_alarm_start
0004f8bc g     F .text	0000010c .hidden __muldi3
0004b104 g     F .text	000001bc __smakebuf_r
000460fc g     F .text	00000098 strlen
0005239c g     F .text	0000015c open
00044790 g     F .text	000000dc .hidden __gedf2
00055160 g     O .rwdata	00000004 __wctomb
0004d974 g     F .text	00000018 __sprint_r
00051e54 g     F .text	00000020 alt_icache_flush_all
00055180 g     O .rwdata	00000004 alt_priority_mask
00051ec4 g     F .text	00000088 alt_ic_irq_enable
00048470 g     F .text	0000001c __vfprintf_internal
0004f860 g     F .text	0000005c _wctomb_r
000451cc g     F .text	000008fc .hidden __subdf3
0004c300 g     F .text	000000b0 __lo0bits
00055184 g     O .rwdata	00000008 alt_alarm_list
00051d94 g     F .text	00000060 _do_ctors
0004f770 g     F .text	000000c0 wcrtomb
000506f4 g     F .text	000000d8 close
00041f68 g     F .text	000004c8 .hidden __addsf3
00050a3c g     F .text	00000084 alt_load
0004f38c g     F .text	00000080 fputwc
0004a56c g     F .text	00000004 __sinit_lock_acquire
0004c04c g     F .text	00000148 __multadd
0004c024 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408c14 	ori	at,at,560
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	109cae04 	addi	r2,r2,29368
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	109cae04 	addi	r2,r2,29368
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <_gp+0xfffe2fe4>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <_gp+0xfffe2fd8>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401e4:	00bfffc4 	movi	r2,-1
   401e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   401ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f0:	d0a85117 	ldw	r2,-24252(gp)
   401f4:	10000726 	beq	r2,zero,40214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401f8:	d0a85117 	ldw	r2,-24252(gp)
   401fc:	e0fffd17 	ldw	r3,-12(fp)
   40200:	e1bffe17 	ldw	r6,-8(fp)
   40204:	e17fff17 	ldw	r5,-4(fp)
   40208:	1809883a 	mov	r4,r3
   4020c:	103ee83a 	callr	r2
   40210:	00000206 	br	4021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40218:	0005883a 	mov	r2,zero
}
   4021c:	e037883a 	mov	sp,fp
   40220:	dfc00117 	ldw	ra,4(sp)
   40224:	df000017 	ldw	fp,0(sp)
   40228:	dec00204 	addi	sp,sp,8
   4022c:	f800283a 	ret

Disassembly of section .text:

00040230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40230:	06c00174 	movhi	sp,5
    ori sp, sp, %lo(__alt_stack_pointer)
   40234:	def0f014 	ori	sp,sp,50112
    movhi gp, %hi(_gp)
   40238:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   4023c:	d6b45214 	ori	gp,gp,53576
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40240:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40244:	109c9614 	ori	r2,r2,29272

    movhi r3, %hi(__bss_end)
   40248:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   4024c:	18dcee14 	ori	r3,r3,29624

    beq r2, r3, 1f
   40250:	10c00326 	beq	r2,r3,40260 <_start+0x30>

0:
    stw zero, (r2)
   40254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   4025c:	10fffd36 	bltu	r2,r3,40254 <_gp+0xfffe310c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40260:	0050a3c0 	call	50a3c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40264:	0050bd80 	call	50bd8 <alt_main>

00040268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40268:	003fff06 	br	40268 <_gp+0xfffe3120>

0004026c <main>:
#define END_BASE_ANGLE (int *) 0x00010
#define END_BASE_DATA (int *) 0x0018
#define STEP coords_2
#define SIZE size_2

int main() {
   4026c:	defd8f04 	addi	sp,sp,-2500
   40270:	dfc27015 	stw	ra,2496(sp)
   40274:	df026f15 	stw	fp,2492(sp)
   40278:	dc426e15 	stw	r17,2488(sp)
   4027c:	dc026d15 	stw	r16,2484(sp)
   40280:	df026f04 	addi	fp,sp,2492
	int *data = END_BASE_DATA;
   40284:	00800604 	movi	r2,24
   40288:	e0bd9715 	stw	r2,-2468(fp)
    Point outliers[MAX_POINTS];

    int data_size = 0;
   4028c:	e03d9215 	stw	zero,-2488(fp)

    //read data_size
    data_size = (int)(SIZE&0xFF);
   40290:	d0a00043 	ldbu	r2,-32767(gp)
   40294:	10803fcc 	andi	r2,r2,255
   40298:	1080201c 	xori	r2,r2,128
   4029c:	10bfe004 	addi	r2,r2,-128
   402a0:	10803fcc 	andi	r2,r2,255
   402a4:	e0bd9215 	stw	r2,-2488(fp)

    int j = 0;
   402a8:	e03d9315 	stw	zero,-2484(fp)
    for (int i = 0; i<=data_size; i+=1) {
   402ac:	e03d9415 	stw	zero,-2480(fp)
   402b0:	00001f06 	br	40330 <main+0xc4>
    	data[i] = (STEP[X]&0xFF)|(STEP[Y]<<8);
   402b4:	e0bd9417 	ldw	r2,-2480(fp)
   402b8:	1085883a 	add	r2,r2,r2
   402bc:	1085883a 	add	r2,r2,r2
   402c0:	1007883a 	mov	r3,r2
   402c4:	e0bd9717 	ldw	r2,-2468(fp)
   402c8:	10c9883a 	add	r4,r2,r3
   402cc:	00800174 	movhi	r2,5
   402d0:	108c7d04 	addi	r2,r2,12788
   402d4:	e0fd9317 	ldw	r3,-2484(fp)
   402d8:	18c7883a 	add	r3,r3,r3
   402dc:	18c7883a 	add	r3,r3,r3
   402e0:	10c5883a 	add	r2,r2,r3
   402e4:	10800017 	ldw	r2,0(r2)
   402e8:	11403fcc 	andi	r5,r2,255
   402ec:	e0bd9317 	ldw	r2,-2484(fp)
   402f0:	10c00044 	addi	r3,r2,1
   402f4:	00800174 	movhi	r2,5
   402f8:	108c7d04 	addi	r2,r2,12788
   402fc:	18c7883a 	add	r3,r3,r3
   40300:	18c7883a 	add	r3,r3,r3
   40304:	10c5883a 	add	r2,r2,r3
   40308:	10800017 	ldw	r2,0(r2)
   4030c:	1004923a 	slli	r2,r2,8
   40310:	2884b03a 	or	r2,r5,r2
   40314:	20800015 	stw	r2,0(r4)
    	j+=2;
   40318:	e0bd9317 	ldw	r2,-2484(fp)
   4031c:	10800084 	addi	r2,r2,2
   40320:	e0bd9315 	stw	r2,-2484(fp)

    //read data_size
    data_size = (int)(SIZE&0xFF);

    int j = 0;
    for (int i = 0; i<=data_size; i+=1) {
   40324:	e0bd9417 	ldw	r2,-2480(fp)
   40328:	10800044 	addi	r2,r2,1
   4032c:	e0bd9415 	stw	r2,-2480(fp)
   40330:	e0bd9417 	ldw	r2,-2480(fp)
   40334:	e0fd9217 	ldw	r3,-2488(fp)
   40338:	18bfde0e 	bge	r3,r2,402b4 <_gp+0xfffe316c>
    	data[i] = (STEP[X]&0xFF)|(STEP[Y]<<8);
    	j+=2;
    }

    if(data_size > MAX_POINTS) data_size = MAX_POINTS;
   4033c:	e0bd9217 	ldw	r2,-2488(fp)
   40340:	10804b50 	cmplti	r2,r2,301
   40344:	1000021e 	bne	r2,zero,40350 <main+0xe4>
   40348:	00804b04 	movi	r2,300
   4034c:	e0bd9215 	stw	r2,-2488(fp)

        // ------------ Calcula primeiro modelo de linha ------------//
    //Posicao inical do robo
    Point start;
    start.x = 0;
   40350:	e03ff015 	stw	zero,-64(fp)
    start.y = 25;
   40354:	00800644 	movi	r2,25
   40358:	e0bff115 	stw	r2,-60(fp)
    RansacResult model;
    Line reference;
	reference.a = 0;
   4035c:	e03ff615 	stw	zero,-40(fp)
	reference.b = 25;
   40360:	00907234 	movhi	r2,16840
   40364:	e0bff715 	stw	r2,-36(fp)

	*MEDIDOR_ESCRITA = 0; // para resetar a contagem
   40368:	00800074 	movhi	r2,1
   4036c:	10840204 	addi	r2,r2,4104
   40370:	10000015 	stw	zero,0(r2)
	*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
   40374:	00800074 	movhi	r2,1
   40378:	10840204 	addi	r2,r2,4104
   4037c:	00c00044 	movi	r3,1
   40380:	10c00015 	stw	r3,0(r2)
    model = RANSAC(data, &start, outliers, data_size);
   40384:	e0fffa04 	addi	r3,fp,-24
   40388:	e17d9804 	addi	r5,fp,-2464
   4038c:	e13ff004 	addi	r4,fp,-64
   40390:	e0bd9217 	ldw	r2,-2488(fp)
   40394:	d8800015 	stw	r2,0(sp)
   40398:	280f883a 	mov	r7,r5
   4039c:	200d883a 	mov	r6,r4
   403a0:	e17d9717 	ldw	r5,-2468(fp)
   403a4:	1809883a 	mov	r4,r3
   403a8:	00414e40 	call	414e4 <RANSAC>
   403ac:	e0bffa17 	ldw	r2,-24(fp)
   403b0:	e0bff215 	stw	r2,-56(fp)
   403b4:	e0bffb17 	ldw	r2,-20(fp)
   403b8:	e0bff315 	stw	r2,-52(fp)
   403bc:	e0bffc17 	ldw	r2,-16(fp)
   403c0:	e0bff415 	stw	r2,-48(fp)
   403c4:	e0bffd17 	ldw	r2,-12(fp)
   403c8:	e0bff515 	stw	r2,-44(fp)


    // ------------ Variaveis para resultado final -------------//
    Point intersection = { 0.0, 0.0 };
   403cc:	e03ff815 	stw	zero,-32(fp)
   403d0:	e03ff915 	stw	zero,-28(fp)
    int distance = 0;
   403d4:	e03d9515 	stw	zero,-2476(fp)
    float angle = 0.0;
   403d8:	e03d9615 	stw	zero,-2472(fp)

    if  ((model.bestModel.a < 0.1)&&(model.bestModel.a > -0.1)){
   403dc:	e0bff217 	ldw	r2,-56(fp)
   403e0:	1009883a 	mov	r4,r2
   403e4:	0045c240 	call	45c24 <__extendsfdf2>
   403e8:	1011883a 	mov	r8,r2
   403ec:	1813883a 	mov	r9,r3
   403f0:	01a666b4 	movhi	r6,39322
   403f4:	31a66684 	addi	r6,r6,-26214
   403f8:	01cfeeb4 	movhi	r7,16314
   403fc:	39e66644 	addi	r7,r7,-26215
   40400:	4009883a 	mov	r4,r8
   40404:	480b883a 	mov	r5,r9
   40408:	004486c0 	call	4486c <__ledf2>
   4040c:	1000100e 	bge	r2,zero,40450 <main+0x1e4>
   40410:	e0bff217 	ldw	r2,-56(fp)
   40414:	1009883a 	mov	r4,r2
   40418:	0045c240 	call	45c24 <__extendsfdf2>
   4041c:	1011883a 	mov	r8,r2
   40420:	1813883a 	mov	r9,r3
   40424:	01a666b4 	movhi	r6,39322
   40428:	31a66684 	addi	r6,r6,-26214
   4042c:	01efeeb4 	movhi	r7,49082
   40430:	39e66644 	addi	r7,r7,-26215
   40434:	4009883a 	mov	r4,r8
   40438:	480b883a 	mov	r5,r9
   4043c:	00447900 	call	44790 <__gedf2>
   40440:	0080030e 	bge	zero,r2,40450 <main+0x1e4>
    		distance = 50;
   40444:	00800c84 	movi	r2,50
   40448:	e0bd9515 	stw	r2,-2476(fp)
   4044c:	00001906 	br	404b4 <main+0x248>
    }
	else
	{
		intersection = calculateIntersection(&model.bestModel,  &reference);
   40450:	e0fff604 	addi	r3,fp,-40
   40454:	e0bff204 	addi	r2,fp,-56
   40458:	180b883a 	mov	r5,r3
   4045c:	1009883a 	mov	r4,r2
   40460:	00406800 	call	40680 <calculateIntersection>
   40464:	1009883a 	mov	r4,r2
   40468:	180b883a 	mov	r5,r3
   4046c:	e13ff815 	stw	r4,-32(fp)
   40470:	e17ff915 	stw	r5,-28(fp)
		distance = square_root(squareDistanceBetweenPoints(&intersection, &start));
   40474:	e0fff004 	addi	r3,fp,-64
   40478:	e0bff804 	addi	r2,fp,-32
   4047c:	180b883a 	mov	r5,r3
   40480:	1009883a 	mov	r4,r2
   40484:	00414440 	call	41444 <squareDistanceBetweenPoints>
   40488:	1007883a 	mov	r3,r2
   4048c:	1809883a 	mov	r4,r3
   40490:	00405cc0 	call	405cc <square_root>
   40494:	1007883a 	mov	r3,r2
   40498:	1809883a 	mov	r4,r3
   4049c:	00433800 	call	43380 <__fixsfsi>
   404a0:	e0bd9515 	stw	r2,-2476(fp)
		angle = getAngleFromModel (model.bestModel.a);
   404a4:	e0bff217 	ldw	r2,-56(fp)
   404a8:	1009883a 	mov	r4,r2
   404ac:	00407840 	call	40784 <getAngleFromModel>
   404b0:	e0bd9615 	stw	r2,-2472(fp)
	}

    *MEDIDOR_ESCRITA = 2; // para pausar a contagem
   404b4:	00800074 	movhi	r2,1
   404b8:	10840204 	addi	r2,r2,4104
   404bc:	00c00084 	movi	r3,2
   404c0:	10c00015 	stw	r3,0(r2)

	printf("-----LOG-----\n");
   404c4:	01000174 	movhi	r4,5
   404c8:	210b5304 	addi	r4,r4,11596
   404cc:	004606c0 	call	4606c <puts>
    printf("%d %d\n", intersection.x, intersection.y);
   404d0:	e0bff817 	ldw	r2,-32(fp)
   404d4:	e0fff917 	ldw	r3,-28(fp)
   404d8:	180d883a 	mov	r6,r3
   404dc:	100b883a 	mov	r5,r2
   404e0:	01000174 	movhi	r4,5
   404e4:	210b5704 	addi	r4,r4,11612
   404e8:	0045f700 	call	45f70 <printf>
    printf("-----RESULTADO-----\n");
   404ec:	01000174 	movhi	r4,5
   404f0:	210b5904 	addi	r4,r4,11620
   404f4:	004606c0 	call	4606c <puts>
    printf("%f %f\n", model.bestModel.a, model.bestModel.b );
   404f8:	e0bff217 	ldw	r2,-56(fp)
   404fc:	1009883a 	mov	r4,r2
   40500:	0045c240 	call	45c24 <__extendsfdf2>
   40504:	1021883a 	mov	r16,r2
   40508:	1823883a 	mov	r17,r3
   4050c:	e0bff317 	ldw	r2,-52(fp)
   40510:	1009883a 	mov	r4,r2
   40514:	0045c240 	call	45c24 <__extendsfdf2>
   40518:	1009883a 	mov	r4,r2
   4051c:	180b883a 	mov	r5,r3
   40520:	d9400015 	stw	r5,0(sp)
   40524:	200f883a 	mov	r7,r4
   40528:	800b883a 	mov	r5,r16
   4052c:	880d883a 	mov	r6,r17
   40530:	01000174 	movhi	r4,5
   40534:	210b5e04 	addi	r4,r4,11640
   40538:	0045f700 	call	45f70 <printf>
    printf("%f\n", model.bestFit);
   4053c:	e0bff417 	ldw	r2,-48(fp)
   40540:	1009883a 	mov	r4,r2
   40544:	0045c240 	call	45c24 <__extendsfdf2>
   40548:	100d883a 	mov	r6,r2
   4054c:	180f883a 	mov	r7,r3
   40550:	300b883a 	mov	r5,r6
   40554:	380d883a 	mov	r6,r7
   40558:	01000174 	movhi	r4,5
   4055c:	210b6004 	addi	r4,r4,11648
   40560:	0045f700 	call	45f70 <printf>
    printf("%d\n", model.bestQty);
   40564:	e0bff517 	ldw	r2,-44(fp)
   40568:	100b883a 	mov	r5,r2
   4056c:	01000174 	movhi	r4,5
   40570:	210b6104 	addi	r4,r4,11652
   40574:	0045f700 	call	45f70 <printf>
    printf("%f\n", angle);
   40578:	e13d9617 	ldw	r4,-2472(fp)
   4057c:	0045c240 	call	45c24 <__extendsfdf2>
   40580:	100d883a 	mov	r6,r2
   40584:	180f883a 	mov	r7,r3
   40588:	300b883a 	mov	r5,r6
   4058c:	380d883a 	mov	r6,r7
   40590:	01000174 	movhi	r4,5
   40594:	210b6004 	addi	r4,r4,11648
   40598:	0045f700 	call	45f70 <printf>
    printf("%d\n", distance);
   4059c:	e17d9517 	ldw	r5,-2476(fp)
   405a0:	01000174 	movhi	r4,5
   405a4:	210b6104 	addi	r4,r4,11652
   405a8:	0045f700 	call	45f70 <printf>

    return 0;
   405ac:	0005883a 	mov	r2,zero
}
   405b0:	e6fffe04 	addi	sp,fp,-8
   405b4:	dfc00317 	ldw	ra,12(sp)
   405b8:	df000217 	ldw	fp,8(sp)
   405bc:	dc400117 	ldw	r17,4(sp)
   405c0:	dc000017 	ldw	r16,0(sp)
   405c4:	dec00404 	addi	sp,sp,16
   405c8:	f800283a 	ret

000405cc <square_root>:
#define E 5               // - A threshold value to determine data points that are fit well by the model (inlier).
#define N 10                // - Number of iterations required
#define MIN_DIST_POINTS 25  // - The minimum points distance required to select the sample


float square_root(float number) {
   405cc:	defffa04 	addi	sp,sp,-24
   405d0:	dfc00515 	stw	ra,20(sp)
   405d4:	df000415 	stw	fp,16(sp)
   405d8:	df000404 	addi	fp,sp,16
   405dc:	e13fff15 	stw	r4,-4(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float x = number;
   405e0:	e0bfff17 	ldw	r2,-4(fp)
   405e4:	e0bffc15 	stw	r2,-16(fp)
	float y = 1;
   405e8:	008fe034 	movhi	r2,16256
   405ec:	e0bffd15 	stw	r2,-12(fp)
    float precision = 0.1;
   405f0:	008f7374 	movhi	r2,15821
   405f4:	10b33344 	addi	r2,r2,-13107
   405f8:	e0bffe15 	stw	r2,-8(fp)
    while (x - y > precision) {
   405fc:	00000f06 	br	4063c <square_root+0x70>
        x = (x + y) / 2;
   40600:	e17ffd17 	ldw	r5,-12(fp)
   40604:	e13ffc17 	ldw	r4,-16(fp)
   40608:	0041f680 	call	41f68 <__addsf3>
   4060c:	1007883a 	mov	r3,r2
   40610:	1805883a 	mov	r2,r3
   40614:	01500034 	movhi	r5,16384
   40618:	1009883a 	mov	r4,r2
   4061c:	00424300 	call	42430 <__divsf3>
   40620:	1007883a 	mov	r3,r2
   40624:	e0fffc15 	stw	r3,-16(fp)
        y = number / x;
   40628:	e17ffc17 	ldw	r5,-16(fp)
   4062c:	e13fff17 	ldw	r4,-4(fp)
   40630:	00424300 	call	42430 <__divsf3>
   40634:	1007883a 	mov	r3,r2
   40638:	e0fffd15 	stw	r3,-12(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float x = number;
	float y = 1;
    float precision = 0.1;
    while (x - y > precision) {
   4063c:	e17ffd17 	ldw	r5,-12(fp)
   40640:	e13ffc17 	ldw	r4,-16(fp)
   40644:	0042e9c0 	call	42e9c <__subsf3>
   40648:	1007883a 	mov	r3,r2
   4064c:	1805883a 	mov	r2,r3
   40650:	e17ffe17 	ldw	r5,-8(fp)
   40654:	1009883a 	mov	r4,r2
   40658:	00428e80 	call	428e8 <__gesf2>
   4065c:	00bfe816 	blt	zero,r2,40600 <_gp+0xfffe34b8>
        y = number / x;
    }

    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    //fprintf('square_root = %d', MEDIDOR_LEITURA);
    return x;
   40660:	e0bffc17 	ldw	r2,-16(fp)
   40664:	1007883a 	mov	r3,r2
}
   40668:	1805883a 	mov	r2,r3
   4066c:	e037883a 	mov	sp,fp
   40670:	dfc00117 	ldw	ra,4(sp)
   40674:	df000017 	ldw	fp,0(sp)
   40678:	dec00204 	addi	sp,sp,8
   4067c:	f800283a 	ret

00040680 <calculateIntersection>:

Point calculateIntersection(Line* k, Line* l) {
   40680:	defff904 	addi	sp,sp,-28
   40684:	dfc00615 	stw	ra,24(sp)
   40688:	df000515 	stw	fp,20(sp)
   4068c:	dc000415 	stw	r16,16(sp)
   40690:	df000504 	addi	fp,sp,20
   40694:	e13ffd15 	stw	r4,-12(fp)
   40698:	e17ffe15 	stw	r5,-8(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	Point intersection;
    intersection.x = (l->b - k->b) / (k->a - l->a);
   4069c:	e0bffe17 	ldw	r2,-8(fp)
   406a0:	10c00117 	ldw	r3,4(r2)
   406a4:	e0bffd17 	ldw	r2,-12(fp)
   406a8:	11000117 	ldw	r4,4(r2)
   406ac:	200b883a 	mov	r5,r4
   406b0:	1809883a 	mov	r4,r3
   406b4:	0042e9c0 	call	42e9c <__subsf3>
   406b8:	1007883a 	mov	r3,r2
   406bc:	1821883a 	mov	r16,r3
   406c0:	e0bffd17 	ldw	r2,-12(fp)
   406c4:	10c00017 	ldw	r3,0(r2)
   406c8:	e0bffe17 	ldw	r2,-8(fp)
   406cc:	11000017 	ldw	r4,0(r2)
   406d0:	200b883a 	mov	r5,r4
   406d4:	1809883a 	mov	r4,r3
   406d8:	0042e9c0 	call	42e9c <__subsf3>
   406dc:	1007883a 	mov	r3,r2
   406e0:	1805883a 	mov	r2,r3
   406e4:	100b883a 	mov	r5,r2
   406e8:	8009883a 	mov	r4,r16
   406ec:	00424300 	call	42430 <__divsf3>
   406f0:	1007883a 	mov	r3,r2
   406f4:	1805883a 	mov	r2,r3
   406f8:	1009883a 	mov	r4,r2
   406fc:	00433800 	call	43380 <__fixsfsi>
   40700:	e0bffb15 	stw	r2,-20(fp)
    intersection.y = (k->a * intersection.x + k->b);
   40704:	e0bffd17 	ldw	r2,-12(fp)
   40708:	14000017 	ldw	r16,0(r2)
   4070c:	e0bffb17 	ldw	r2,-20(fp)
   40710:	1009883a 	mov	r4,r2
   40714:	00433f00 	call	433f0 <__floatsisf>
   40718:	1007883a 	mov	r3,r2
   4071c:	180b883a 	mov	r5,r3
   40720:	8009883a 	mov	r4,r16
   40724:	0042a6c0 	call	42a6c <__mulsf3>
   40728:	1007883a 	mov	r3,r2
   4072c:	1809883a 	mov	r4,r3
   40730:	e0bffd17 	ldw	r2,-12(fp)
   40734:	10c00117 	ldw	r3,4(r2)
   40738:	180b883a 	mov	r5,r3
   4073c:	0041f680 	call	41f68 <__addsf3>
   40740:	1007883a 	mov	r3,r2
   40744:	1805883a 	mov	r2,r3
   40748:	1009883a 	mov	r4,r2
   4074c:	00433800 	call	43380 <__fixsfsi>
   40750:	e0bffc15 	stw	r2,-16(fp)
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    return intersection;
   40754:	e0bffb17 	ldw	r2,-20(fp)
   40758:	e0fffc17 	ldw	r3,-16(fp)
   4075c:	1009883a 	mov	r4,r2
   40760:	180b883a 	mov	r5,r3
}
   40764:	2005883a 	mov	r2,r4
   40768:	2807883a 	mov	r3,r5
   4076c:	e6ffff04 	addi	sp,fp,-4
   40770:	dfc00217 	ldw	ra,8(sp)
   40774:	df000117 	ldw	fp,4(sp)
   40778:	dc000017 	ldw	r16,0(sp)
   4077c:	dec00304 	addi	sp,sp,12
   40780:	f800283a 	ret

00040784 <getAngleFromModel>:

float getAngleFromModel(float a) {
   40784:	defffc04 	addi	sp,sp,-16
   40788:	dfc00315 	stw	ra,12(sp)
   4078c:	df000215 	stw	fp,8(sp)
   40790:	df000204 	addi	fp,sp,8
   40794:	e13fff15 	stw	r4,-4(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float radian = -atan(a);
   40798:	e13fff17 	ldw	r4,-4(fp)
   4079c:	0045c240 	call	45c24 <__extendsfdf2>
   407a0:	100b883a 	mov	r5,r2
   407a4:	180d883a 	mov	r6,r3
   407a8:	2809883a 	mov	r4,r5
   407ac:	300b883a 	mov	r5,r6
   407b0:	00417f00 	call	417f0 <atan>
   407b4:	100b883a 	mov	r5,r2
   407b8:	180d883a 	mov	r6,r3
   407bc:	2809883a 	mov	r4,r5
   407c0:	300b883a 	mov	r5,r6
   407c4:	0045d340 	call	45d34 <__truncdfsf2>
   407c8:	1007883a 	mov	r3,r2
   407cc:	18a0003c 	xorhi	r2,r3,32768
   407d0:	e0bffe15 	stw	r2,-8(fp)
	//*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    return radian;
   407d4:	e0bffe17 	ldw	r2,-8(fp)
   407d8:	1007883a 	mov	r3,r2
}
   407dc:	1805883a 	mov	r2,r3
   407e0:	e037883a 	mov	sp,fp
   407e4:	dfc00117 	ldw	ra,4(sp)
   407e8:	df000017 	ldw	fp,0(sp)
   407ec:	dec00204 	addi	sp,sp,8
   407f0:	f800283a 	ret

000407f4 <leastSquare>:

Line leastSquare(Point* data, int size) {
   407f4:	deffec04 	addi	sp,sp,-80
   407f8:	dfc01315 	stw	ra,76(sp)
   407fc:	df001215 	stw	fp,72(sp)
   40800:	dc001115 	stw	r16,68(sp)
   40804:	df001204 	addi	fp,sp,72
   40808:	e13ffd15 	stw	r4,-12(fp)
   4080c:	e17ffe15 	stw	r5,-8(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float sx = 0;
   40810:	e03fee15 	stw	zero,-72(fp)
    float sy = 0;
   40814:	e03fef15 	stw	zero,-68(fp)
    float sxy = 0;
   40818:	e03ff015 	stw	zero,-64(fp)
    float sx2 = 0;
   4081c:	e03ff115 	stw	zero,-60(fp)
    if (size == 0) {
   40820:	e0bffe17 	ldw	r2,-8(fp)
   40824:	1000061e 	bne	r2,zero,40840 <leastSquare+0x4c>
        Line line = {INFINITY, 0};
   40828:	009fe034 	movhi	r2,32640
   4082c:	e0bff915 	stw	r2,-28(fp)
   40830:	e03ffa15 	stw	zero,-24(fp)
        return line;
   40834:	e0bff917 	ldw	r2,-28(fp)
   40838:	e0fffa17 	ldw	r3,-24(fp)
   4083c:	0000a606 	br	40ad8 <leastSquare+0x2e4>
    }
    for (int i = 0; i < size; i++) {
   40840:	e03ff215 	stw	zero,-56(fp)
   40844:	00004506 	br	4095c <leastSquare+0x168>
        sx += data[i].x;
   40848:	e0bff217 	ldw	r2,-56(fp)
   4084c:	100490fa 	slli	r2,r2,3
   40850:	e0fffd17 	ldw	r3,-12(fp)
   40854:	1885883a 	add	r2,r3,r2
   40858:	10800017 	ldw	r2,0(r2)
   4085c:	1009883a 	mov	r4,r2
   40860:	00433f00 	call	433f0 <__floatsisf>
   40864:	1007883a 	mov	r3,r2
   40868:	180b883a 	mov	r5,r3
   4086c:	e13fee17 	ldw	r4,-72(fp)
   40870:	0041f680 	call	41f68 <__addsf3>
   40874:	1007883a 	mov	r3,r2
   40878:	e0ffee15 	stw	r3,-72(fp)
        sy += data[i].y;
   4087c:	e0bff217 	ldw	r2,-56(fp)
   40880:	100490fa 	slli	r2,r2,3
   40884:	e0fffd17 	ldw	r3,-12(fp)
   40888:	1885883a 	add	r2,r3,r2
   4088c:	10800117 	ldw	r2,4(r2)
   40890:	1009883a 	mov	r4,r2
   40894:	00433f00 	call	433f0 <__floatsisf>
   40898:	1007883a 	mov	r3,r2
   4089c:	180b883a 	mov	r5,r3
   408a0:	e13fef17 	ldw	r4,-68(fp)
   408a4:	0041f680 	call	41f68 <__addsf3>
   408a8:	1007883a 	mov	r3,r2
   408ac:	e0ffef15 	stw	r3,-68(fp)
        sxy += data[i].x * data[i].y;
   408b0:	e0bff217 	ldw	r2,-56(fp)
   408b4:	100490fa 	slli	r2,r2,3
   408b8:	e0fffd17 	ldw	r3,-12(fp)
   408bc:	1885883a 	add	r2,r3,r2
   408c0:	11000017 	ldw	r4,0(r2)
   408c4:	e0bff217 	ldw	r2,-56(fp)
   408c8:	100490fa 	slli	r2,r2,3
   408cc:	e0fffd17 	ldw	r3,-12(fp)
   408d0:	1885883a 	add	r2,r3,r2
   408d4:	10800117 	ldw	r2,4(r2)
   408d8:	100b883a 	mov	r5,r2
   408dc:	0041f400 	call	41f40 <__mulsi3>
   408e0:	1009883a 	mov	r4,r2
   408e4:	00433f00 	call	433f0 <__floatsisf>
   408e8:	1007883a 	mov	r3,r2
   408ec:	180b883a 	mov	r5,r3
   408f0:	e13ff017 	ldw	r4,-64(fp)
   408f4:	0041f680 	call	41f68 <__addsf3>
   408f8:	1007883a 	mov	r3,r2
   408fc:	e0fff015 	stw	r3,-64(fp)
        sx2 += data[i].x * data[i].x;
   40900:	e0bff217 	ldw	r2,-56(fp)
   40904:	100490fa 	slli	r2,r2,3
   40908:	e0fffd17 	ldw	r3,-12(fp)
   4090c:	1885883a 	add	r2,r3,r2
   40910:	11000017 	ldw	r4,0(r2)
   40914:	e0bff217 	ldw	r2,-56(fp)
   40918:	100490fa 	slli	r2,r2,3
   4091c:	e0fffd17 	ldw	r3,-12(fp)
   40920:	1885883a 	add	r2,r3,r2
   40924:	10800017 	ldw	r2,0(r2)
   40928:	100b883a 	mov	r5,r2
   4092c:	0041f400 	call	41f40 <__mulsi3>
   40930:	1009883a 	mov	r4,r2
   40934:	00433f00 	call	433f0 <__floatsisf>
   40938:	1007883a 	mov	r3,r2
   4093c:	180b883a 	mov	r5,r3
   40940:	e13ff117 	ldw	r4,-60(fp)
   40944:	0041f680 	call	41f68 <__addsf3>
   40948:	1007883a 	mov	r3,r2
   4094c:	e0fff115 	stw	r3,-60(fp)
    float sx2 = 0;
    if (size == 0) {
        Line line = {INFINITY, 0};
        return line;
    }
    for (int i = 0; i < size; i++) {
   40950:	e0bff217 	ldw	r2,-56(fp)
   40954:	10800044 	addi	r2,r2,1
   40958:	e0bff215 	stw	r2,-56(fp)
   4095c:	e0fff217 	ldw	r3,-56(fp)
   40960:	e0bffe17 	ldw	r2,-8(fp)
   40964:	18bfb816 	blt	r3,r2,40848 <_gp+0xfffe3700>
        sx += data[i].x;
        sy += data[i].y;
        sxy += data[i].x * data[i].y;
        sx2 += data[i].x * data[i].x;
    }
    float avg_y = sy / size;
   40968:	e13ffe17 	ldw	r4,-8(fp)
   4096c:	00433f00 	call	433f0 <__floatsisf>
   40970:	1007883a 	mov	r3,r2
   40974:	180b883a 	mov	r5,r3
   40978:	e13fef17 	ldw	r4,-68(fp)
   4097c:	00424300 	call	42430 <__divsf3>
   40980:	1007883a 	mov	r3,r2
   40984:	e0fff315 	stw	r3,-52(fp)
    float den = (size * sx2 - sx * sx);
   40988:	e13ffe17 	ldw	r4,-8(fp)
   4098c:	00433f00 	call	433f0 <__floatsisf>
   40990:	1007883a 	mov	r3,r2
   40994:	e17ff117 	ldw	r5,-60(fp)
   40998:	1809883a 	mov	r4,r3
   4099c:	0042a6c0 	call	42a6c <__mulsf3>
   409a0:	1007883a 	mov	r3,r2
   409a4:	1821883a 	mov	r16,r3
   409a8:	e17fee17 	ldw	r5,-72(fp)
   409ac:	e13fee17 	ldw	r4,-72(fp)
   409b0:	0042a6c0 	call	42a6c <__mulsf3>
   409b4:	1007883a 	mov	r3,r2
   409b8:	1805883a 	mov	r2,r3
   409bc:	100b883a 	mov	r5,r2
   409c0:	8009883a 	mov	r4,r16
   409c4:	0042e9c0 	call	42e9c <__subsf3>
   409c8:	1007883a 	mov	r3,r2
   409cc:	e0fff415 	stw	r3,-48(fp)
    if (den == 0) {
   409d0:	000b883a 	mov	r5,zero
   409d4:	e13ff417 	ldw	r4,-48(fp)
   409d8:	00428700 	call	42870 <__eqsf2>
   409dc:	1000071e 	bne	r2,zero,409fc <leastSquare+0x208>
        Line line = {INFINITY, avg_y};
   409e0:	009fe034 	movhi	r2,32640
   409e4:	e0bffb15 	stw	r2,-20(fp)
   409e8:	e0bff317 	ldw	r2,-52(fp)
   409ec:	e0bffc15 	stw	r2,-16(fp)
        return line;
   409f0:	e0bffb17 	ldw	r2,-20(fp)
   409f4:	e0fffc17 	ldw	r3,-16(fp)
   409f8:	00003706 	br	40ad8 <leastSquare+0x2e4>
    }
    float a = (size * sxy - sx * sy) / den;
   409fc:	e13ffe17 	ldw	r4,-8(fp)
   40a00:	00433f00 	call	433f0 <__floatsisf>
   40a04:	1007883a 	mov	r3,r2
   40a08:	e17ff017 	ldw	r5,-64(fp)
   40a0c:	1809883a 	mov	r4,r3
   40a10:	0042a6c0 	call	42a6c <__mulsf3>
   40a14:	1007883a 	mov	r3,r2
   40a18:	1821883a 	mov	r16,r3
   40a1c:	e17fef17 	ldw	r5,-68(fp)
   40a20:	e13fee17 	ldw	r4,-72(fp)
   40a24:	0042a6c0 	call	42a6c <__mulsf3>
   40a28:	1007883a 	mov	r3,r2
   40a2c:	1805883a 	mov	r2,r3
   40a30:	100b883a 	mov	r5,r2
   40a34:	8009883a 	mov	r4,r16
   40a38:	0042e9c0 	call	42e9c <__subsf3>
   40a3c:	1007883a 	mov	r3,r2
   40a40:	1805883a 	mov	r2,r3
   40a44:	e17ff417 	ldw	r5,-48(fp)
   40a48:	1009883a 	mov	r4,r2
   40a4c:	00424300 	call	42430 <__divsf3>
   40a50:	1007883a 	mov	r3,r2
   40a54:	e0fff515 	stw	r3,-44(fp)
    float b = (sy / size) - a * (sx / size);
   40a58:	e13ffe17 	ldw	r4,-8(fp)
   40a5c:	00433f00 	call	433f0 <__floatsisf>
   40a60:	1007883a 	mov	r3,r2
   40a64:	180b883a 	mov	r5,r3
   40a68:	e13fef17 	ldw	r4,-68(fp)
   40a6c:	00424300 	call	42430 <__divsf3>
   40a70:	1007883a 	mov	r3,r2
   40a74:	1821883a 	mov	r16,r3
   40a78:	e13ffe17 	ldw	r4,-8(fp)
   40a7c:	00433f00 	call	433f0 <__floatsisf>
   40a80:	1007883a 	mov	r3,r2
   40a84:	180b883a 	mov	r5,r3
   40a88:	e13fee17 	ldw	r4,-72(fp)
   40a8c:	00424300 	call	42430 <__divsf3>
   40a90:	1007883a 	mov	r3,r2
   40a94:	1805883a 	mov	r2,r3
   40a98:	e17ff517 	ldw	r5,-44(fp)
   40a9c:	1009883a 	mov	r4,r2
   40aa0:	0042a6c0 	call	42a6c <__mulsf3>
   40aa4:	1007883a 	mov	r3,r2
   40aa8:	1805883a 	mov	r2,r3
   40aac:	100b883a 	mov	r5,r2
   40ab0:	8009883a 	mov	r4,r16
   40ab4:	0042e9c0 	call	42e9c <__subsf3>
   40ab8:	1007883a 	mov	r3,r2
   40abc:	e0fff615 	stw	r3,-40(fp)
    Line line = {a, b};
   40ac0:	e0bff517 	ldw	r2,-44(fp)
   40ac4:	e0bff715 	stw	r2,-36(fp)
   40ac8:	e0bff617 	ldw	r2,-40(fp)
   40acc:	e0bff815 	stw	r2,-32(fp)
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    return line;
   40ad0:	e0bff717 	ldw	r2,-36(fp)
   40ad4:	e0fff817 	ldw	r3,-32(fp)
   40ad8:	1009883a 	mov	r4,r2
   40adc:	180b883a 	mov	r5,r3
}
   40ae0:	2005883a 	mov	r2,r4
   40ae4:	2807883a 	mov	r3,r5
   40ae8:	e6ffff04 	addi	sp,fp,-4
   40aec:	dfc00217 	ldw	ra,8(sp)
   40af0:	df000117 	ldw	fp,4(sp)
   40af4:	dc000017 	ldw	r16,0(sp)
   40af8:	dec00304 	addi	sp,sp,12
   40afc:	f800283a 	ret

00040b00 <coefficientOfDetermination>:

float coefficientOfDetermination(Point* data, Line model, float avg_y, int data_size) {
   40b00:	defff204 	addi	sp,sp,-56
   40b04:	dfc00d15 	stw	ra,52(sp)
   40b08:	df000c15 	stw	fp,48(sp)
   40b0c:	dc000b15 	stw	r16,44(sp)
   40b10:	df000c04 	addi	fp,sp,48
   40b14:	e13ffb15 	stw	r4,-20(fp)
   40b18:	e17ffc15 	stw	r5,-16(fp)
   40b1c:	e1bffd15 	stw	r6,-12(fp)
   40b20:	e1fffe15 	stw	r7,-8(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float ss_res = 0;
   40b24:	e03ff415 	stw	zero,-48(fp)
    float ss_tot = 0;
   40b28:	e03ff515 	stw	zero,-44(fp)
    for (int i = 0; i < data_size; i++) {
   40b2c:	e03ff615 	stw	zero,-40(fp)
   40b30:	00005006 	br	40c74 <coefficientOfDetermination+0x174>
    	*MEDIDOR_ESCRITA = 0; // para resetar a contagem
   40b34:	00800074 	movhi	r2,1
   40b38:	10840204 	addi	r2,r2,4104
   40b3c:	10000015 	stw	zero,0(r2)
    	*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
   40b40:	00800074 	movhi	r2,1
   40b44:	10840204 	addi	r2,r2,4104
   40b48:	00c00044 	movi	r3,1
   40b4c:	10c00015 	stw	r3,0(r2)
        float f = model.a * data[i].x + model.b;
   40b50:	e43ffc17 	ldw	r16,-16(fp)
   40b54:	e0bff617 	ldw	r2,-40(fp)
   40b58:	100490fa 	slli	r2,r2,3
   40b5c:	e0fffb17 	ldw	r3,-20(fp)
   40b60:	1885883a 	add	r2,r3,r2
   40b64:	10800017 	ldw	r2,0(r2)
   40b68:	1009883a 	mov	r4,r2
   40b6c:	00433f00 	call	433f0 <__floatsisf>
   40b70:	1007883a 	mov	r3,r2
   40b74:	180b883a 	mov	r5,r3
   40b78:	8009883a 	mov	r4,r16
   40b7c:	0042a6c0 	call	42a6c <__mulsf3>
   40b80:	1009883a 	mov	r4,r2
   40b84:	2007883a 	mov	r3,r4
   40b88:	e0bffd17 	ldw	r2,-12(fp)
   40b8c:	100b883a 	mov	r5,r2
   40b90:	1809883a 	mov	r4,r3
   40b94:	0041f680 	call	41f68 <__addsf3>
   40b98:	1007883a 	mov	r3,r2
   40b9c:	e0fff715 	stw	r3,-36(fp)
        float y_f = (data[i].y - f);
   40ba0:	e0bff617 	ldw	r2,-40(fp)
   40ba4:	100490fa 	slli	r2,r2,3
   40ba8:	e0fffb17 	ldw	r3,-20(fp)
   40bac:	1885883a 	add	r2,r3,r2
   40bb0:	10800117 	ldw	r2,4(r2)
   40bb4:	1009883a 	mov	r4,r2
   40bb8:	00433f00 	call	433f0 <__floatsisf>
   40bbc:	1007883a 	mov	r3,r2
   40bc0:	e17ff717 	ldw	r5,-36(fp)
   40bc4:	1809883a 	mov	r4,r3
   40bc8:	0042e9c0 	call	42e9c <__subsf3>
   40bcc:	1007883a 	mov	r3,r2
   40bd0:	e0fff815 	stw	r3,-32(fp)
        float y_y = (data[i].y - avg_y);
   40bd4:	e0bff617 	ldw	r2,-40(fp)
   40bd8:	100490fa 	slli	r2,r2,3
   40bdc:	e0fffb17 	ldw	r3,-20(fp)
   40be0:	1885883a 	add	r2,r3,r2
   40be4:	10800117 	ldw	r2,4(r2)
   40be8:	1009883a 	mov	r4,r2
   40bec:	00433f00 	call	433f0 <__floatsisf>
   40bf0:	1007883a 	mov	r3,r2
   40bf4:	e17ffe17 	ldw	r5,-8(fp)
   40bf8:	1809883a 	mov	r4,r3
   40bfc:	0042e9c0 	call	42e9c <__subsf3>
   40c00:	1007883a 	mov	r3,r2
   40c04:	e0fff915 	stw	r3,-28(fp)
        ss_res += y_f * y_f;
   40c08:	e17ff817 	ldw	r5,-32(fp)
   40c0c:	e13ff817 	ldw	r4,-32(fp)
   40c10:	0042a6c0 	call	42a6c <__mulsf3>
   40c14:	1007883a 	mov	r3,r2
   40c18:	1805883a 	mov	r2,r3
   40c1c:	100b883a 	mov	r5,r2
   40c20:	e13ff417 	ldw	r4,-48(fp)
   40c24:	0041f680 	call	41f68 <__addsf3>
   40c28:	1007883a 	mov	r3,r2
   40c2c:	e0fff415 	stw	r3,-48(fp)
        ss_tot += y_y * y_y;
   40c30:	e17ff917 	ldw	r5,-28(fp)
   40c34:	e13ff917 	ldw	r4,-28(fp)
   40c38:	0042a6c0 	call	42a6c <__mulsf3>
   40c3c:	1007883a 	mov	r3,r2
   40c40:	1805883a 	mov	r2,r3
   40c44:	100b883a 	mov	r5,r2
   40c48:	e13ff517 	ldw	r4,-44(fp)
   40c4c:	0041f680 	call	41f68 <__addsf3>
   40c50:	1007883a 	mov	r3,r2
   40c54:	e0fff515 	stw	r3,-44(fp)
        *MEDIDOR_ESCRITA = 2; // para pausar a contagem
   40c58:	00800074 	movhi	r2,1
   40c5c:	10840204 	addi	r2,r2,4104
   40c60:	00c00084 	movi	r3,2
   40c64:	10c00015 	stw	r3,0(r2)
float coefficientOfDetermination(Point* data, Line model, float avg_y, int data_size) {
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	float ss_res = 0;
    float ss_tot = 0;
    for (int i = 0; i < data_size; i++) {
   40c68:	e0bff617 	ldw	r2,-40(fp)
   40c6c:	10800044 	addi	r2,r2,1
   40c70:	e0bff615 	stw	r2,-40(fp)
   40c74:	e0fff617 	ldw	r3,-40(fp)
   40c78:	e0800217 	ldw	r2,8(fp)
   40c7c:	18bfad16 	blt	r3,r2,40b34 <_gp+0xfffe39ec>
        float y_y = (data[i].y - avg_y);
        ss_res += y_f * y_f;
        ss_tot += y_y * y_y;
        *MEDIDOR_ESCRITA = 2; // para pausar a contagem
    }
    float r = (ss_res / ss_tot);
   40c80:	e17ff517 	ldw	r5,-44(fp)
   40c84:	e13ff417 	ldw	r4,-48(fp)
   40c88:	00424300 	call	42430 <__divsf3>
   40c8c:	1007883a 	mov	r3,r2
   40c90:	e0fffa15 	stw	r3,-24(fp)
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    return r;
   40c94:	e0bffa17 	ldw	r2,-24(fp)
   40c98:	1007883a 	mov	r3,r2
}
   40c9c:	1805883a 	mov	r2,r3
   40ca0:	e6ffff04 	addi	sp,fp,-4
   40ca4:	dfc00217 	ldw	ra,8(sp)
   40ca8:	df000117 	ldw	fp,4(sp)
   40cac:	dc000017 	ldw	r16,0(sp)
   40cb0:	dec00304 	addi	sp,sp,12
   40cb4:	f800283a 	ret

00040cb8 <inliersOutliersMemory>:

void inliersOutliersMemory(int* data, Line model, Point* inliers, Point* outliers, int dataSize, int* inlierSize, int* outlierSize) {
   40cb8:	defff404 	addi	sp,sp,-48
   40cbc:	dfc00b15 	stw	ra,44(sp)
   40cc0:	df000a15 	stw	fp,40(sp)
   40cc4:	dc000915 	stw	r16,36(sp)
   40cc8:	df000a04 	addi	fp,sp,40
   40ccc:	e13ffb15 	stw	r4,-20(fp)
   40cd0:	e17ffc15 	stw	r5,-16(fp)
   40cd4:	e1bffd15 	stw	r6,-12(fp)
   40cd8:	e1fffe15 	stw	r7,-8(fp)

	*MEDIDOR_ESCRITA = 0; // para resetar a contagem
   40cdc:	00800074 	movhi	r2,1
   40ce0:	10840204 	addi	r2,r2,4104
   40ce4:	10000015 	stw	zero,0(r2)
	*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
   40ce8:	00800074 	movhi	r2,1
   40cec:	10840204 	addi	r2,r2,4104
   40cf0:	00c00044 	movi	r3,1
   40cf4:	10c00015 	stw	r3,0(r2)
    float square2 = E * E * (model.a * model.a + 1.0);
   40cf8:	e0bffc17 	ldw	r2,-16(fp)
   40cfc:	e0fffc17 	ldw	r3,-16(fp)
   40d00:	180b883a 	mov	r5,r3
   40d04:	1009883a 	mov	r4,r2
   40d08:	0042a6c0 	call	42a6c <__mulsf3>
   40d0c:	1007883a 	mov	r3,r2
   40d10:	1805883a 	mov	r2,r3
   40d14:	1009883a 	mov	r4,r2
   40d18:	0045c240 	call	45c24 <__extendsfdf2>
   40d1c:	1011883a 	mov	r8,r2
   40d20:	1813883a 	mov	r9,r3
   40d24:	000d883a 	mov	r6,zero
   40d28:	01cffc34 	movhi	r7,16368
   40d2c:	4009883a 	mov	r4,r8
   40d30:	480b883a 	mov	r5,r9
   40d34:	00435140 	call	43514 <__adddf3>
   40d38:	1009883a 	mov	r4,r2
   40d3c:	180b883a 	mov	r5,r3
   40d40:	2005883a 	mov	r2,r4
   40d44:	2807883a 	mov	r3,r5
   40d48:	000d883a 	mov	r6,zero
   40d4c:	01d00e74 	movhi	r7,16441
   40d50:	1009883a 	mov	r4,r2
   40d54:	180b883a 	mov	r5,r3
   40d58:	00449600 	call	44960 <__muldf3>
   40d5c:	1009883a 	mov	r4,r2
   40d60:	180b883a 	mov	r5,r3
   40d64:	2005883a 	mov	r2,r4
   40d68:	2807883a 	mov	r3,r5
   40d6c:	1009883a 	mov	r4,r2
   40d70:	180b883a 	mov	r5,r3
   40d74:	0045d340 	call	45d34 <__truncdfsf2>
   40d78:	1007883a 	mov	r3,r2
   40d7c:	e0fff715 	stw	r3,-36(fp)
    *MEDIDOR_ESCRITA = 2; // para pausar a contagem
   40d80:	00800074 	movhi	r2,1
   40d84:	10840204 	addi	r2,r2,4104
   40d88:	00c00084 	movi	r3,2
   40d8c:	10c00015 	stw	r3,0(r2)

    for (int k = 0; k < dataSize; k++) {
   40d90:	e03ff615 	stw	zero,-40(fp)
   40d94:	00008606 	br	40fb0 <inliersOutliersMemory+0x2f8>
    	int tempX = data[k]&0xFF;
   40d98:	e0bff617 	ldw	r2,-40(fp)
   40d9c:	1085883a 	add	r2,r2,r2
   40da0:	1085883a 	add	r2,r2,r2
   40da4:	1007883a 	mov	r3,r2
   40da8:	e0bffb17 	ldw	r2,-20(fp)
   40dac:	10c5883a 	add	r2,r2,r3
   40db0:	10800017 	ldw	r2,0(r2)
   40db4:	10803fcc 	andi	r2,r2,255
   40db8:	e0bff815 	stw	r2,-32(fp)
    	int tempY = (data[k]>>8)&0xFF ;
   40dbc:	e0bff617 	ldw	r2,-40(fp)
   40dc0:	1085883a 	add	r2,r2,r2
   40dc4:	1085883a 	add	r2,r2,r2
   40dc8:	1007883a 	mov	r3,r2
   40dcc:	e0bffb17 	ldw	r2,-20(fp)
   40dd0:	10c5883a 	add	r2,r2,r3
   40dd4:	10800017 	ldw	r2,0(r2)
   40dd8:	1005d23a 	srai	r2,r2,8
   40ddc:	10803fcc 	andi	r2,r2,255
   40de0:	e0bff915 	stw	r2,-28(fp)

    	*MEDIDOR_ESCRITA = 0; // para resetar a contagem
   40de4:	00800074 	movhi	r2,1
   40de8:	10840204 	addi	r2,r2,4104
   40dec:	10000015 	stw	zero,0(r2)
    	*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
   40df0:	00800074 	movhi	r2,1
   40df4:	10840204 	addi	r2,r2,4104
   40df8:	00c00044 	movi	r3,1
   40dfc:	10c00015 	stw	r3,0(r2)
        float dist = (model.a * tempX - tempY + model.b);
   40e00:	e43ffc17 	ldw	r16,-16(fp)
   40e04:	e13ff817 	ldw	r4,-32(fp)
   40e08:	00433f00 	call	433f0 <__floatsisf>
   40e0c:	1007883a 	mov	r3,r2
   40e10:	180b883a 	mov	r5,r3
   40e14:	8009883a 	mov	r4,r16
   40e18:	0042a6c0 	call	42a6c <__mulsf3>
   40e1c:	1007883a 	mov	r3,r2
   40e20:	1821883a 	mov	r16,r3
   40e24:	e13ff917 	ldw	r4,-28(fp)
   40e28:	00433f00 	call	433f0 <__floatsisf>
   40e2c:	1007883a 	mov	r3,r2
   40e30:	180b883a 	mov	r5,r3
   40e34:	8009883a 	mov	r4,r16
   40e38:	0042e9c0 	call	42e9c <__subsf3>
   40e3c:	1009883a 	mov	r4,r2
   40e40:	2007883a 	mov	r3,r4
   40e44:	e0bffd17 	ldw	r2,-12(fp)
   40e48:	100b883a 	mov	r5,r2
   40e4c:	1809883a 	mov	r4,r3
   40e50:	0041f680 	call	41f68 <__addsf3>
   40e54:	1007883a 	mov	r3,r2
   40e58:	e0fffa15 	stw	r3,-24(fp)
        *MEDIDOR_ESCRITA = 2; // para pausar a contagem
   40e5c:	00800074 	movhi	r2,1
   40e60:	10840204 	addi	r2,r2,4104
   40e64:	00c00084 	movi	r3,2
   40e68:	10c00015 	stw	r3,0(r2)

        if (dist * dist <= square2) {
   40e6c:	e17ffa17 	ldw	r5,-24(fp)
   40e70:	e13ffa17 	ldw	r4,-24(fp)
   40e74:	0042a6c0 	call	42a6c <__mulsf3>
   40e78:	1007883a 	mov	r3,r2
   40e7c:	1805883a 	mov	r2,r3
   40e80:	e17ff717 	ldw	r5,-36(fp)
   40e84:	1009883a 	mov	r4,r2
   40e88:	00429a40 	call	429a4 <__lesf2>
   40e8c:	00802316 	blt	zero,r2,40f1c <inliersOutliersMemory+0x264>
        	inliers[*inlierSize].x = data[k]&0xFF;
   40e90:	e0800417 	ldw	r2,16(fp)
   40e94:	10800017 	ldw	r2,0(r2)
   40e98:	100490fa 	slli	r2,r2,3
   40e9c:	e0fffe17 	ldw	r3,-8(fp)
   40ea0:	1887883a 	add	r3,r3,r2
   40ea4:	e0bff617 	ldw	r2,-40(fp)
   40ea8:	1085883a 	add	r2,r2,r2
   40eac:	1085883a 	add	r2,r2,r2
   40eb0:	1009883a 	mov	r4,r2
   40eb4:	e0bffb17 	ldw	r2,-20(fp)
   40eb8:	1105883a 	add	r2,r2,r4
   40ebc:	10800017 	ldw	r2,0(r2)
   40ec0:	10803fcc 	andi	r2,r2,255
   40ec4:	18800015 	stw	r2,0(r3)
        	inliers[*inlierSize].y = (data[k]>>8)&0xFF;
   40ec8:	e0800417 	ldw	r2,16(fp)
   40ecc:	10800017 	ldw	r2,0(r2)
   40ed0:	100490fa 	slli	r2,r2,3
   40ed4:	e0fffe17 	ldw	r3,-8(fp)
   40ed8:	1887883a 	add	r3,r3,r2
   40edc:	e0bff617 	ldw	r2,-40(fp)
   40ee0:	1085883a 	add	r2,r2,r2
   40ee4:	1085883a 	add	r2,r2,r2
   40ee8:	1009883a 	mov	r4,r2
   40eec:	e0bffb17 	ldw	r2,-20(fp)
   40ef0:	1105883a 	add	r2,r2,r4
   40ef4:	10800017 	ldw	r2,0(r2)
   40ef8:	1005d23a 	srai	r2,r2,8
   40efc:	10803fcc 	andi	r2,r2,255
   40f00:	18800115 	stw	r2,4(r3)
            (*inlierSize)++;
   40f04:	e0800417 	ldw	r2,16(fp)
   40f08:	10800017 	ldw	r2,0(r2)
   40f0c:	10c00044 	addi	r3,r2,1
   40f10:	e0800417 	ldw	r2,16(fp)
   40f14:	10c00015 	stw	r3,0(r2)
   40f18:	00002206 	br	40fa4 <inliersOutliersMemory+0x2ec>
        } else {
        	outliers[*outlierSize].x = data[k]&0xFF;
   40f1c:	e0800517 	ldw	r2,20(fp)
   40f20:	10800017 	ldw	r2,0(r2)
   40f24:	100490fa 	slli	r2,r2,3
   40f28:	e0c00217 	ldw	r3,8(fp)
   40f2c:	1887883a 	add	r3,r3,r2
   40f30:	e0bff617 	ldw	r2,-40(fp)
   40f34:	1085883a 	add	r2,r2,r2
   40f38:	1085883a 	add	r2,r2,r2
   40f3c:	1009883a 	mov	r4,r2
   40f40:	e0bffb17 	ldw	r2,-20(fp)
   40f44:	1105883a 	add	r2,r2,r4
   40f48:	10800017 	ldw	r2,0(r2)
   40f4c:	10803fcc 	andi	r2,r2,255
   40f50:	18800015 	stw	r2,0(r3)
        	outliers[*outlierSize].y = (data[k]>>8)&0xFF;
   40f54:	e0800517 	ldw	r2,20(fp)
   40f58:	10800017 	ldw	r2,0(r2)
   40f5c:	100490fa 	slli	r2,r2,3
   40f60:	e0c00217 	ldw	r3,8(fp)
   40f64:	1887883a 	add	r3,r3,r2
   40f68:	e0bff617 	ldw	r2,-40(fp)
   40f6c:	1085883a 	add	r2,r2,r2
   40f70:	1085883a 	add	r2,r2,r2
   40f74:	1009883a 	mov	r4,r2
   40f78:	e0bffb17 	ldw	r2,-20(fp)
   40f7c:	1105883a 	add	r2,r2,r4
   40f80:	10800017 	ldw	r2,0(r2)
   40f84:	1005d23a 	srai	r2,r2,8
   40f88:	10803fcc 	andi	r2,r2,255
   40f8c:	18800115 	stw	r2,4(r3)
            (*outlierSize)++;
   40f90:	e0800517 	ldw	r2,20(fp)
   40f94:	10800017 	ldw	r2,0(r2)
   40f98:	10c00044 	addi	r3,r2,1
   40f9c:	e0800517 	ldw	r2,20(fp)
   40fa0:	10c00015 	stw	r3,0(r2)
	*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
    float square2 = E * E * (model.a * model.a + 1.0);
    *MEDIDOR_ESCRITA = 2; // para pausar a contagem

    for (int k = 0; k < dataSize; k++) {
   40fa4:	e0bff617 	ldw	r2,-40(fp)
   40fa8:	10800044 	addi	r2,r2,1
   40fac:	e0bff615 	stw	r2,-40(fp)
   40fb0:	e0fff617 	ldw	r3,-40(fp)
   40fb4:	e0800317 	ldw	r2,12(fp)
   40fb8:	18bf7716 	blt	r3,r2,40d98 <_gp+0xfffe3c50>
        }
    }
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem

}
   40fbc:	0001883a 	nop
   40fc0:	e6ffff04 	addi	sp,fp,-4
   40fc4:	dfc00217 	ldw	ra,8(sp)
   40fc8:	df000117 	ldw	fp,4(sp)
   40fcc:	dc000017 	ldw	r16,0(sp)
   40fd0:	dec00304 	addi	sp,sp,12
   40fd4:	f800283a 	ret

00040fd8 <inliersOutliers>:

void inliersOutliers(Point* data, Line model, Point* inliers, Point* outliers, int dataSize, int* inlierSize, int* outlierSize) {
   40fd8:	defff604 	addi	sp,sp,-40
   40fdc:	dfc00915 	stw	ra,36(sp)
   40fe0:	df000815 	stw	fp,32(sp)
   40fe4:	dc000715 	stw	r16,28(sp)
   40fe8:	df000804 	addi	fp,sp,32
   40fec:	e13ffb15 	stw	r4,-20(fp)
   40ff0:	e17ffc15 	stw	r5,-16(fp)
   40ff4:	e1bffd15 	stw	r6,-12(fp)
   40ff8:	e1fffe15 	stw	r7,-8(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
    float square2 = E * E * (model.a * model.a + 1.0);
   40ffc:	e0bffc17 	ldw	r2,-16(fp)
   41000:	e0fffc17 	ldw	r3,-16(fp)
   41004:	180b883a 	mov	r5,r3
   41008:	1009883a 	mov	r4,r2
   4100c:	0042a6c0 	call	42a6c <__mulsf3>
   41010:	1007883a 	mov	r3,r2
   41014:	1805883a 	mov	r2,r3
   41018:	1009883a 	mov	r4,r2
   4101c:	0045c240 	call	45c24 <__extendsfdf2>
   41020:	1011883a 	mov	r8,r2
   41024:	1813883a 	mov	r9,r3
   41028:	000d883a 	mov	r6,zero
   4102c:	01cffc34 	movhi	r7,16368
   41030:	4009883a 	mov	r4,r8
   41034:	480b883a 	mov	r5,r9
   41038:	00435140 	call	43514 <__adddf3>
   4103c:	1009883a 	mov	r4,r2
   41040:	180b883a 	mov	r5,r3
   41044:	2005883a 	mov	r2,r4
   41048:	2807883a 	mov	r3,r5
   4104c:	000d883a 	mov	r6,zero
   41050:	01d00e74 	movhi	r7,16441
   41054:	1009883a 	mov	r4,r2
   41058:	180b883a 	mov	r5,r3
   4105c:	00449600 	call	44960 <__muldf3>
   41060:	1009883a 	mov	r4,r2
   41064:	180b883a 	mov	r5,r3
   41068:	2005883a 	mov	r2,r4
   4106c:	2807883a 	mov	r3,r5
   41070:	1009883a 	mov	r4,r2
   41074:	180b883a 	mov	r5,r3
   41078:	0045d340 	call	45d34 <__truncdfsf2>
   4107c:	1007883a 	mov	r3,r2
   41080:	e0fff915 	stw	r3,-28(fp)

    for (int k = 0; k < dataSize; k++) {
   41084:	e03ff815 	stw	zero,-32(fp)
   41088:	00006406 	br	4121c <inliersOutliers+0x244>
        float dist = (model.a * data[k].x - data[k].y + model.b);
   4108c:	e43ffc17 	ldw	r16,-16(fp)
   41090:	e0bff817 	ldw	r2,-32(fp)
   41094:	100490fa 	slli	r2,r2,3
   41098:	e0fffb17 	ldw	r3,-20(fp)
   4109c:	1885883a 	add	r2,r3,r2
   410a0:	10800017 	ldw	r2,0(r2)
   410a4:	1009883a 	mov	r4,r2
   410a8:	00433f00 	call	433f0 <__floatsisf>
   410ac:	1007883a 	mov	r3,r2
   410b0:	180b883a 	mov	r5,r3
   410b4:	8009883a 	mov	r4,r16
   410b8:	0042a6c0 	call	42a6c <__mulsf3>
   410bc:	1007883a 	mov	r3,r2
   410c0:	1821883a 	mov	r16,r3
   410c4:	e0bff817 	ldw	r2,-32(fp)
   410c8:	100490fa 	slli	r2,r2,3
   410cc:	e0fffb17 	ldw	r3,-20(fp)
   410d0:	1885883a 	add	r2,r3,r2
   410d4:	10800117 	ldw	r2,4(r2)
   410d8:	1009883a 	mov	r4,r2
   410dc:	00433f00 	call	433f0 <__floatsisf>
   410e0:	1007883a 	mov	r3,r2
   410e4:	180b883a 	mov	r5,r3
   410e8:	8009883a 	mov	r4,r16
   410ec:	0042e9c0 	call	42e9c <__subsf3>
   410f0:	1009883a 	mov	r4,r2
   410f4:	2007883a 	mov	r3,r4
   410f8:	e0bffd17 	ldw	r2,-12(fp)
   410fc:	100b883a 	mov	r5,r2
   41100:	1809883a 	mov	r4,r3
   41104:	0041f680 	call	41f68 <__addsf3>
   41108:	1007883a 	mov	r3,r2
   4110c:	e0fffa15 	stw	r3,-24(fp)
        if (dist * dist <= square2) {
   41110:	e17ffa17 	ldw	r5,-24(fp)
   41114:	e13ffa17 	ldw	r4,-24(fp)
   41118:	0042a6c0 	call	42a6c <__mulsf3>
   4111c:	1007883a 	mov	r3,r2
   41120:	1805883a 	mov	r2,r3
   41124:	e17ff917 	ldw	r5,-28(fp)
   41128:	1009883a 	mov	r4,r2
   4112c:	00429a40 	call	429a4 <__lesf2>
   41130:	00801c16 	blt	zero,r2,411a4 <inliersOutliers+0x1cc>
            inliers[*inlierSize].x = data[k].x;
   41134:	e0800417 	ldw	r2,16(fp)
   41138:	10800017 	ldw	r2,0(r2)
   4113c:	100490fa 	slli	r2,r2,3
   41140:	e0fffe17 	ldw	r3,-8(fp)
   41144:	1885883a 	add	r2,r3,r2
   41148:	e0fff817 	ldw	r3,-32(fp)
   4114c:	180690fa 	slli	r3,r3,3
   41150:	e13ffb17 	ldw	r4,-20(fp)
   41154:	20c7883a 	add	r3,r4,r3
   41158:	18c00017 	ldw	r3,0(r3)
   4115c:	10c00015 	stw	r3,0(r2)
            inliers[*inlierSize].y = data[k].y;
   41160:	e0800417 	ldw	r2,16(fp)
   41164:	10800017 	ldw	r2,0(r2)
   41168:	100490fa 	slli	r2,r2,3
   4116c:	e0fffe17 	ldw	r3,-8(fp)
   41170:	1885883a 	add	r2,r3,r2
   41174:	e0fff817 	ldw	r3,-32(fp)
   41178:	180690fa 	slli	r3,r3,3
   4117c:	e13ffb17 	ldw	r4,-20(fp)
   41180:	20c7883a 	add	r3,r4,r3
   41184:	18c00117 	ldw	r3,4(r3)
   41188:	10c00115 	stw	r3,4(r2)
            (*inlierSize)++;
   4118c:	e0800417 	ldw	r2,16(fp)
   41190:	10800017 	ldw	r2,0(r2)
   41194:	10c00044 	addi	r3,r2,1
   41198:	e0800417 	ldw	r2,16(fp)
   4119c:	10c00015 	stw	r3,0(r2)
   411a0:	00001b06 	br	41210 <inliersOutliers+0x238>
        } else {
            outliers[*outlierSize].x = data[k].x;
   411a4:	e0800517 	ldw	r2,20(fp)
   411a8:	10800017 	ldw	r2,0(r2)
   411ac:	100490fa 	slli	r2,r2,3
   411b0:	e0c00217 	ldw	r3,8(fp)
   411b4:	1885883a 	add	r2,r3,r2
   411b8:	e0fff817 	ldw	r3,-32(fp)
   411bc:	180690fa 	slli	r3,r3,3
   411c0:	e13ffb17 	ldw	r4,-20(fp)
   411c4:	20c7883a 	add	r3,r4,r3
   411c8:	18c00017 	ldw	r3,0(r3)
   411cc:	10c00015 	stw	r3,0(r2)
            outliers[*outlierSize].y = data[k].y;
   411d0:	e0800517 	ldw	r2,20(fp)
   411d4:	10800017 	ldw	r2,0(r2)
   411d8:	100490fa 	slli	r2,r2,3
   411dc:	e0c00217 	ldw	r3,8(fp)
   411e0:	1885883a 	add	r2,r3,r2
   411e4:	e0fff817 	ldw	r3,-32(fp)
   411e8:	180690fa 	slli	r3,r3,3
   411ec:	e13ffb17 	ldw	r4,-20(fp)
   411f0:	20c7883a 	add	r3,r4,r3
   411f4:	18c00117 	ldw	r3,4(r3)
   411f8:	10c00115 	stw	r3,4(r2)
            (*outlierSize)++;
   411fc:	e0800517 	ldw	r2,20(fp)
   41200:	10800017 	ldw	r2,0(r2)
   41204:	10c00044 	addi	r3,r2,1
   41208:	e0800517 	ldw	r2,20(fp)
   4120c:	10c00015 	stw	r3,0(r2)
void inliersOutliers(Point* data, Line model, Point* inliers, Point* outliers, int dataSize, int* inlierSize, int* outlierSize) {
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
    float square2 = E * E * (model.a * model.a + 1.0);

    for (int k = 0; k < dataSize; k++) {
   41210:	e0bff817 	ldw	r2,-32(fp)
   41214:	10800044 	addi	r2,r2,1
   41218:	e0bff815 	stw	r2,-32(fp)
   4121c:	e0fff817 	ldw	r3,-32(fp)
   41220:	e0800317 	ldw	r2,12(fp)
   41224:	18bf9916 	blt	r3,r2,4108c <_gp+0xfffe3f44>
        }
    }
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem

}
   41228:	0001883a 	nop
   4122c:	e6ffff04 	addi	sp,fp,-4
   41230:	dfc00217 	ldw	ra,8(sp)
   41234:	df000117 	ldw	fp,4(sp)
   41238:	dc000017 	ldw	r16,0(sp)
   4123c:	dec00304 	addi	sp,sp,12
   41240:	f800283a 	ret

00041244 <checkModel>:

void checkModel(Point* data, Point* temp, RansacResult* rs, int data_size, int temp_size) {
   41244:	defb3d04 	addi	sp,sp,-4876
   41248:	dfc4c215 	stw	ra,4872(sp)
   4124c:	df04c115 	stw	fp,4868(sp)
   41250:	df04c104 	addi	fp,sp,4868
   41254:	e13ffc15 	stw	r4,-16(fp)
   41258:	e17ffd15 	stw	r5,-12(fp)
   4125c:	e1bffe15 	stw	r6,-8(fp)
   41260:	e1ffff15 	stw	r7,-4(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
    Point inliers[MAX_POINTS];
    Point outliers[MAX_POINTS];
    int inlinersSize = 0;
   41264:	e03ff615 	stw	zero,-40(fp)
    int outlierSize = 0;
   41268:	e03ff715 	stw	zero,-36(fp)
    Line model = leastSquare(temp, temp_size);
   4126c:	e1400217 	ldw	r5,8(fp)
   41270:	e13ffd17 	ldw	r4,-12(fp)
   41274:	00407f40 	call	407f4 <leastSquare>
   41278:	1009883a 	mov	r4,r2
   4127c:	180b883a 	mov	r5,r3
   41280:	e13ff815 	stw	r4,-32(fp)
   41284:	e17ff915 	stw	r5,-28(fp)

    inliersOutliers(data, model, inliers, outliers, data_size, &inlinersSize, &outlierSize);
   41288:	e0fb4604 	addi	r3,fp,-4840
   4128c:	e0bff704 	addi	r2,fp,-36
   41290:	d8800315 	stw	r2,12(sp)
   41294:	e0bff604 	addi	r2,fp,-40
   41298:	d8800215 	stw	r2,8(sp)
   4129c:	e0bfff17 	ldw	r2,-4(fp)
   412a0:	d8800115 	stw	r2,4(sp)
   412a4:	e0bd9e04 	addi	r2,fp,-2440
   412a8:	d8800015 	stw	r2,0(sp)
   412ac:	180f883a 	mov	r7,r3
   412b0:	e17ff817 	ldw	r5,-32(fp)
   412b4:	e1bff917 	ldw	r6,-28(fp)
   412b8:	e13ffc17 	ldw	r4,-16(fp)
   412bc:	0040fd80 	call	40fd8 <inliersOutliers>

    if(inlinersSize >= rs->bestQty && inlinersSize >= (int)(data_size * C)){
   412c0:	e0bffe17 	ldw	r2,-8(fp)
   412c4:	10800317 	ldw	r2,12(r2)
   412c8:	e0fff617 	ldw	r3,-40(fp)
   412cc:	18805716 	blt	r3,r2,4142c <checkModel+0x1e8>
   412d0:	e13fff17 	ldw	r4,-4(fp)
   412d4:	0045b480 	call	45b48 <__floatsidf>
   412d8:	1011883a 	mov	r8,r2
   412dc:	1813883a 	mov	r9,r3
   412e0:	000d883a 	mov	r6,zero
   412e4:	01cff834 	movhi	r7,16352
   412e8:	4009883a 	mov	r4,r8
   412ec:	480b883a 	mov	r5,r9
   412f0:	00449600 	call	44960 <__muldf3>
   412f4:	1009883a 	mov	r4,r2
   412f8:	180b883a 	mov	r5,r3
   412fc:	2005883a 	mov	r2,r4
   41300:	2807883a 	mov	r3,r5
   41304:	1009883a 	mov	r4,r2
   41308:	180b883a 	mov	r5,r3
   4130c:	0045ac80 	call	45ac8 <__fixdfsi>
   41310:	1007883a 	mov	r3,r2
   41314:	e0bff617 	ldw	r2,-40(fp)
   41318:	10c04416 	blt	r2,r3,4142c <checkModel+0x1e8>
        Line inliersModel = leastSquare(inliers, inlinersSize);
   4131c:	e0fff617 	ldw	r3,-40(fp)
   41320:	e0bb4604 	addi	r2,fp,-4840
   41324:	180b883a 	mov	r5,r3
   41328:	1009883a 	mov	r4,r2
   4132c:	00407f40 	call	407f4 <leastSquare>
   41330:	1009883a 	mov	r4,r2
   41334:	180b883a 	mov	r5,r3
   41338:	e13ffa15 	stw	r4,-24(fp)
   4133c:	e17ffb15 	stw	r5,-20(fp)
        float inliersAvg_y = 0;
   41340:	e03b4315 	stw	zero,-4852(fp)
        for (int i = 0; i < inlinersSize; i++) {
   41344:	e03b4415 	stw	zero,-4848(fp)
   41348:	00001106 	br	41390 <checkModel+0x14c>
            inliersAvg_y += inliers[i].y;
   4134c:	e0bb4417 	ldw	r2,-4848(fp)
   41350:	100490fa 	slli	r2,r2,3
   41354:	e0fb4304 	addi	r3,fp,-4852
   41358:	1885883a 	add	r2,r3,r2
   4135c:	10800404 	addi	r2,r2,16
   41360:	10800017 	ldw	r2,0(r2)
   41364:	1009883a 	mov	r4,r2
   41368:	00433f00 	call	433f0 <__floatsisf>
   4136c:	1007883a 	mov	r3,r2
   41370:	180b883a 	mov	r5,r3
   41374:	e13b4317 	ldw	r4,-4852(fp)
   41378:	0041f680 	call	41f68 <__addsf3>
   4137c:	1007883a 	mov	r3,r2
   41380:	e0fb4315 	stw	r3,-4852(fp)
    inliersOutliers(data, model, inliers, outliers, data_size, &inlinersSize, &outlierSize);

    if(inlinersSize >= rs->bestQty && inlinersSize >= (int)(data_size * C)){
        Line inliersModel = leastSquare(inliers, inlinersSize);
        float inliersAvg_y = 0;
        for (int i = 0; i < inlinersSize; i++) {
   41384:	e0bb4417 	ldw	r2,-4848(fp)
   41388:	10800044 	addi	r2,r2,1
   4138c:	e0bb4415 	stw	r2,-4848(fp)
   41390:	e0bff617 	ldw	r2,-40(fp)
   41394:	e0fb4417 	ldw	r3,-4848(fp)
   41398:	18bfec16 	blt	r3,r2,4134c <_gp+0xfffe4204>
            inliersAvg_y += inliers[i].y;
        }
        inliersAvg_y /= inlinersSize;
   4139c:	e0bff617 	ldw	r2,-40(fp)
   413a0:	1009883a 	mov	r4,r2
   413a4:	00433f00 	call	433f0 <__floatsisf>
   413a8:	1007883a 	mov	r3,r2
   413ac:	180b883a 	mov	r5,r3
   413b0:	e13b4317 	ldw	r4,-4852(fp)
   413b4:	00424300 	call	42430 <__divsf3>
   413b8:	1007883a 	mov	r3,r2
   413bc:	e0fb4315 	stw	r3,-4852(fp)
        float  inliersFit = coefficientOfDetermination(inliers, inliersModel, inliersAvg_y, data_size);
   413c0:	e0fb4604 	addi	r3,fp,-4840
   413c4:	e0bfff17 	ldw	r2,-4(fp)
   413c8:	d8800015 	stw	r2,0(sp)
   413cc:	e1fb4317 	ldw	r7,-4852(fp)
   413d0:	e17ffa17 	ldw	r5,-24(fp)
   413d4:	e1bffb17 	ldw	r6,-20(fp)
   413d8:	1809883a 	mov	r4,r3
   413dc:	0040b000 	call	40b00 <coefficientOfDetermination>
   413e0:	e0bb4515 	stw	r2,-4844(fp)
        if (inliersFit < rs->bestFit) {
   413e4:	e0bffe17 	ldw	r2,-8(fp)
   413e8:	10c00217 	ldw	r3,8(r2)
   413ec:	e17b4517 	ldw	r5,-4844(fp)
   413f0:	1809883a 	mov	r4,r3
   413f4:	00428e80 	call	428e8 <__gesf2>
   413f8:	00800116 	blt	zero,r2,41400 <checkModel+0x1bc>
        rs->bestQty = inlinersSize;
        }
    }
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    //*MEDIDOR_ESCRITA = 2;
}
   413fc:	00000b06 	br	4142c <checkModel+0x1e8>
            inliersAvg_y += inliers[i].y;
        }
        inliersAvg_y /= inlinersSize;
        float  inliersFit = coefficientOfDetermination(inliers, inliersModel, inliersAvg_y, data_size);
        if (inliersFit < rs->bestFit) {
        rs->bestModel = inliersModel;
   41400:	e0bffe17 	ldw	r2,-8(fp)
   41404:	e0fffa17 	ldw	r3,-24(fp)
   41408:	10c00015 	stw	r3,0(r2)
   4140c:	e0fffb17 	ldw	r3,-20(fp)
   41410:	10c00115 	stw	r3,4(r2)
        rs->bestFit = inliersFit;
   41414:	e0bffe17 	ldw	r2,-8(fp)
   41418:	e0fb4517 	ldw	r3,-4844(fp)
   4141c:	10c00215 	stw	r3,8(r2)
        rs->bestQty = inlinersSize;
   41420:	e0fff617 	ldw	r3,-40(fp)
   41424:	e0bffe17 	ldw	r2,-8(fp)
   41428:	10c00315 	stw	r3,12(r2)
        }
    }
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    //*MEDIDOR_ESCRITA = 2;
}
   4142c:	0001883a 	nop
   41430:	e037883a 	mov	sp,fp
   41434:	dfc00117 	ldw	ra,4(sp)
   41438:	df000017 	ldw	fp,0(sp)
   4143c:	dec00204 	addi	sp,sp,8
   41440:	f800283a 	ret

00041444 <squareDistanceBetweenPoints>:

float squareDistanceBetweenPoints (Point* a, Point* b){
   41444:	defff804 	addi	sp,sp,-32
   41448:	dfc00715 	stw	ra,28(sp)
   4144c:	df000615 	stw	fp,24(sp)
   41450:	dc000515 	stw	r16,20(sp)
   41454:	df000604 	addi	fp,sp,24
   41458:	e13ffd15 	stw	r4,-12(fp)
   4145c:	e17ffe15 	stw	r5,-8(fp)
	//*MEDIDOR_ESCRITA = 0; // para resetar a contagem
	//*MEDIDOR_ESCRITA = 1; // para iniciar a contagem
	int dx = a->x - b->x;
   41460:	e0bffd17 	ldw	r2,-12(fp)
   41464:	10c00017 	ldw	r3,0(r2)
   41468:	e0bffe17 	ldw	r2,-8(fp)
   4146c:	10800017 	ldw	r2,0(r2)
   41470:	1885c83a 	sub	r2,r3,r2
   41474:	e0bffa15 	stw	r2,-24(fp)
    int dy = a->y - b->y;
   41478:	e0bffd17 	ldw	r2,-12(fp)
   4147c:	10c00117 	ldw	r3,4(r2)
   41480:	e0bffe17 	ldw	r2,-8(fp)
   41484:	10800117 	ldw	r2,4(r2)
   41488:	1885c83a 	sub	r2,r3,r2
   4148c:	e0bffb15 	stw	r2,-20(fp)
    float resultado = (dx * dx) + (dy * dy);
   41490:	e17ffa17 	ldw	r5,-24(fp)
   41494:	e13ffa17 	ldw	r4,-24(fp)
   41498:	0041f400 	call	41f40 <__mulsi3>
   4149c:	1021883a 	mov	r16,r2
   414a0:	e17ffb17 	ldw	r5,-20(fp)
   414a4:	e13ffb17 	ldw	r4,-20(fp)
   414a8:	0041f400 	call	41f40 <__mulsi3>
   414ac:	8085883a 	add	r2,r16,r2
   414b0:	1009883a 	mov	r4,r2
   414b4:	00433f00 	call	433f0 <__floatsisf>
   414b8:	1007883a 	mov	r3,r2
   414bc:	e0fffc15 	stw	r3,-16(fp)
    //*MEDIDOR_ESCRITA = 2; // para pausar a contagem
    return resultado;
   414c0:	e0bffc17 	ldw	r2,-16(fp)
   414c4:	1007883a 	mov	r3,r2
}
   414c8:	1805883a 	mov	r2,r3
   414cc:	e6ffff04 	addi	sp,fp,-4
   414d0:	dfc00217 	ldw	ra,8(sp)
   414d4:	df000117 	ldw	fp,4(sp)
   414d8:	dc000017 	ldw	r16,0(sp)
   414dc:	dec00304 	addi	sp,sp,12
   414e0:	f800283a 	ret

000414e4 <RANSAC>:

RansacResult RANSAC(int* data, Point* botPos, Point* outliers, int data_size) {
   414e4:	defd8804 	addi	sp,sp,-2528
   414e8:	dfc27715 	stw	ra,2524(sp)
   414ec:	df027615 	stw	fp,2520(sp)
   414f0:	ddc27515 	stw	r23,2516(sp)
   414f4:	dd827415 	stw	r22,2512(sp)
   414f8:	dd427315 	stw	r21,2508(sp)
   414fc:	dd027215 	stw	r20,2504(sp)
   41500:	dcc27115 	stw	r19,2500(sp)
   41504:	dc827015 	stw	r18,2496(sp)
   41508:	dc426f15 	stw	r17,2492(sp)
   4150c:	dc026e15 	stw	r16,2488(sp)
   41510:	df027604 	addi	fp,sp,2520
   41514:	e13ff315 	stw	r4,-52(fp)
   41518:	e17ff415 	stw	r5,-48(fp)
   4151c:	e1bff515 	stw	r6,-44(fp)
   41520:	e1fff615 	stw	r7,-40(fp)
   41524:	d805883a 	mov	r2,sp
   41528:	e0bff715 	stw	r2,-36(fp)
    RansacResult rs;
    //srand(32);
    rs.bestModel.a = 0.0;
   4152c:	e03d9515 	stw	zero,-2476(fp)
    rs.bestModel.b = (float)botPos->y;
   41530:	e0bff517 	ldw	r2,-44(fp)
   41534:	10800117 	ldw	r2,4(r2)
   41538:	1009883a 	mov	r4,r2
   4153c:	00433f00 	call	433f0 <__floatsisf>
   41540:	1007883a 	mov	r3,r2
   41544:	e0fd9615 	stw	r3,-2472(fp)
    rs.bestFit = INFINITY;
   41548:	009fe034 	movhi	r2,32640
   4154c:	e0bd9715 	stw	r2,-2468(fp)
    rs.bestQty = 0;
   41550:	e03d9815 	stw	zero,-2464(fp)

    Point inliers[MAX_POINTS];

    int temp_dist_points = 0;
   41554:	e03d8e15 	stw	zero,-2504(fp)
    int temp_index = 0;
   41558:	e03d9115 	stw	zero,-2492(fp)

    int loopCounter = 0;
   4155c:	e03d8f15 	stw	zero,-2500(fp)
    int inlinersSize = 0;
   41560:	e03ff115 	stw	zero,-60(fp)
    int outlierSize = 0;
   41564:	e03ff215 	stw	zero,-56(fp)

    inliersOutliersMemory(data, rs.bestModel, inliers, outliers, data_size, &inlinersSize, &outlierSize);
   41568:	e0fd9904 	addi	r3,fp,-2460
   4156c:	e0bff204 	addi	r2,fp,-56
   41570:	d8800315 	stw	r2,12(sp)
   41574:	e0bff104 	addi	r2,fp,-60
   41578:	d8800215 	stw	r2,8(sp)
   4157c:	e0800217 	ldw	r2,8(fp)
   41580:	d8800115 	stw	r2,4(sp)
   41584:	e0bff617 	ldw	r2,-40(fp)
   41588:	d8800015 	stw	r2,0(sp)
   4158c:	180f883a 	mov	r7,r3
   41590:	e17d9517 	ldw	r5,-2476(fp)
   41594:	e1bd9617 	ldw	r6,-2472(fp)
   41598:	e13ff417 	ldw	r4,-48(fp)
   4159c:	0040cb80 	call	40cb8 <inliersOutliersMemory>

    if (outlierSize <= 25) {
   415a0:	e0bff217 	ldw	r2,-56(fp)
   415a4:	10800688 	cmpgei	r2,r2,26
   415a8:	10000e1e 	bne	r2,zero,415e4 <RANSAC+0x100>
        rs.bestFit = INFINITY;
   415ac:	009fe034 	movhi	r2,32640
   415b0:	e0bd9715 	stw	r2,-2468(fp)
        rs.bestQty = data_size;
   415b4:	e0800217 	ldw	r2,8(fp)
   415b8:	e0bd9815 	stw	r2,-2464(fp)
        return rs;
   415bc:	e0bff317 	ldw	r2,-52(fp)
   415c0:	e0fd9517 	ldw	r3,-2476(fp)
   415c4:	10c00015 	stw	r3,0(r2)
   415c8:	e0fd9617 	ldw	r3,-2472(fp)
   415cc:	10c00115 	stw	r3,4(r2)
   415d0:	e0fd9717 	ldw	r3,-2468(fp)
   415d4:	10c00215 	stw	r3,8(r2)
   415d8:	e0fd9817 	ldw	r3,-2464(fp)
   415dc:	10c00315 	stw	r3,12(r2)
   415e0:	00007406 	br	417b4 <RANSAC+0x2d0>
    }

    int temp_size = MIN_POINTS;
   415e4:	00800084 	movi	r2,2
   415e8:	e0bd9215 	stw	r2,-2488(fp)
    Point temp[temp_size]; // alocacao tamanho P
   415ec:	e0bd9217 	ldw	r2,-2488(fp)
   415f0:	10ffffc4 	addi	r3,r2,-1
   415f4:	e0fd9315 	stw	r3,-2484(fp)
   415f8:	1007883a 	mov	r3,r2
   415fc:	182d883a 	mov	r22,r3
   41600:	002f883a 	mov	r23,zero
   41604:	b006d6ba 	srli	r3,r22,26
   41608:	b82691ba 	slli	r19,r23,6
   4160c:	1ce6b03a 	or	r19,r3,r19
   41610:	b02491ba 	slli	r18,r22,6
   41614:	1007883a 	mov	r3,r2
   41618:	1829883a 	mov	r20,r3
   4161c:	002b883a 	mov	r21,zero
   41620:	a006d6ba 	srli	r3,r20,26
   41624:	a82291ba 	slli	r17,r21,6
   41628:	1c62b03a 	or	r17,r3,r17
   4162c:	a02091ba 	slli	r16,r20,6
   41630:	100490fa 	slli	r2,r2,3
   41634:	108000c4 	addi	r2,r2,3
   41638:	108000c4 	addi	r2,r2,3
   4163c:	1004d0ba 	srli	r2,r2,2
   41640:	1085883a 	add	r2,r2,r2
   41644:	1085883a 	add	r2,r2,r2
   41648:	d8b7c83a 	sub	sp,sp,r2
   4164c:	d8800404 	addi	r2,sp,16
   41650:	108000c4 	addi	r2,r2,3
   41654:	1004d0ba 	srli	r2,r2,2
   41658:	1085883a 	add	r2,r2,r2
   4165c:	1085883a 	add	r2,r2,r2
   41660:	e0bd9415 	stw	r2,-2480(fp)

    //Posicao inicial do robo
    temp[0] = outliers[0];
   41664:	e0bd9417 	ldw	r2,-2480(fp)
   41668:	e0fff617 	ldw	r3,-40(fp)
   4166c:	19000017 	ldw	r4,0(r3)
   41670:	11000015 	stw	r4,0(r2)
   41674:	18c00117 	ldw	r3,4(r3)
   41678:	10c00115 	stw	r3,4(r2)
    //Execute for N iterations
    while(loopCounter < N) {
   4167c:	00004106 	br	41784 <RANSAC+0x2a0>
		//Sorteia 2 coordenadas que tenham uma distancia minima entre si
		if(temp_dist_points < MIN_DIST_POINTS) {
   41680:	e0bd8e17 	ldw	r2,-2504(fp)
   41684:	10800648 	cmpgei	r2,r2,25
   41688:	1000301e 	bne	r2,zero,4174c <RANSAC+0x268>
		for (int j = 1; j < temp_size; j++) {
   4168c:	00800044 	movi	r2,1
   41690:	e0bd9015 	stw	r2,-2496(fp)
   41694:	00002906 	br	4173c <RANSAC+0x258>
			temp_index = rand() % outlierSize;
   41698:	00460980 	call	46098 <rand>
   4169c:	1007883a 	mov	r3,r2
   416a0:	e0bff217 	ldw	r2,-56(fp)
   416a4:	100b883a 	mov	r5,r2
   416a8:	1809883a 	mov	r4,r3
   416ac:	0041e100 	call	41e10 <__modsi3>
   416b0:	e0bd9115 	stw	r2,-2492(fp)
			temp[j].x = outliers[temp_index].x;
   416b4:	e0bd9117 	ldw	r2,-2492(fp)
   416b8:	100490fa 	slli	r2,r2,3
   416bc:	e0fff617 	ldw	r3,-40(fp)
   416c0:	1885883a 	add	r2,r3,r2
   416c4:	10c00017 	ldw	r3,0(r2)
   416c8:	e13d9417 	ldw	r4,-2480(fp)
   416cc:	e0bd9017 	ldw	r2,-2496(fp)
   416d0:	100490fa 	slli	r2,r2,3
   416d4:	2085883a 	add	r2,r4,r2
   416d8:	10c00015 	stw	r3,0(r2)
			temp[j].y = outliers[temp_index].y;
   416dc:	e0bd9117 	ldw	r2,-2492(fp)
   416e0:	100490fa 	slli	r2,r2,3
   416e4:	e0fff617 	ldw	r3,-40(fp)
   416e8:	1885883a 	add	r2,r3,r2
   416ec:	10c00117 	ldw	r3,4(r2)
   416f0:	e13d9417 	ldw	r4,-2480(fp)
   416f4:	e0bd9017 	ldw	r2,-2496(fp)
   416f8:	100490fa 	slli	r2,r2,3
   416fc:	2085883a 	add	r2,r4,r2
   41700:	10800104 	addi	r2,r2,4
   41704:	10c00015 	stw	r3,0(r2)
			temp_dist_points = squareDistanceBetweenPoints(&temp[0], &temp[1]);
   41708:	e0fd9417 	ldw	r3,-2480(fp)
   4170c:	e0bd9417 	ldw	r2,-2480(fp)
   41710:	10800204 	addi	r2,r2,8
   41714:	100b883a 	mov	r5,r2
   41718:	1809883a 	mov	r4,r3
   4171c:	00414440 	call	41444 <squareDistanceBetweenPoints>
   41720:	1007883a 	mov	r3,r2
   41724:	1809883a 	mov	r4,r3
   41728:	00433800 	call	43380 <__fixsfsi>
   4172c:	e0bd8e15 	stw	r2,-2504(fp)
    temp[0] = outliers[0];
    //Execute for N iterations
    while(loopCounter < N) {
		//Sorteia 2 coordenadas que tenham uma distancia minima entre si
		if(temp_dist_points < MIN_DIST_POINTS) {
		for (int j = 1; j < temp_size; j++) {
   41730:	e0bd9017 	ldw	r2,-2496(fp)
   41734:	10800044 	addi	r2,r2,1
   41738:	e0bd9015 	stw	r2,-2496(fp)
   4173c:	e0fd9017 	ldw	r3,-2496(fp)
   41740:	e0bd9217 	ldw	r2,-2488(fp)
   41744:	18bfd416 	blt	r3,r2,41698 <_gp+0xfffe4550>
   41748:	00000e06 	br	41784 <RANSAC+0x2a0>
			temp[j].y = outliers[temp_index].y;
			temp_dist_points = squareDistanceBetweenPoints(&temp[0], &temp[1]);
		}
        }
        else {
        	checkModel(outliers, temp, &rs, outlierSize, temp_size);
   4174c:	e0fd9417 	ldw	r3,-2480(fp)
   41750:	e17ff217 	ldw	r5,-56(fp)
   41754:	e13d9504 	addi	r4,fp,-2476
   41758:	e0bd9217 	ldw	r2,-2488(fp)
   4175c:	d8800015 	stw	r2,0(sp)
   41760:	280f883a 	mov	r7,r5
   41764:	200d883a 	mov	r6,r4
   41768:	180b883a 	mov	r5,r3
   4176c:	e13ff617 	ldw	r4,-40(fp)
   41770:	00412440 	call	41244 <checkModel>
            temp_dist_points = 0;
   41774:	e03d8e15 	stw	zero,-2504(fp)
            loopCounter++;
   41778:	e0bd8f17 	ldw	r2,-2500(fp)
   4177c:	10800044 	addi	r2,r2,1
   41780:	e0bd8f15 	stw	r2,-2500(fp)
    Point temp[temp_size]; // alocacao tamanho P

    //Posicao inicial do robo
    temp[0] = outliers[0];
    //Execute for N iterations
    while(loopCounter < N) {
   41784:	e0bd8f17 	ldw	r2,-2500(fp)
   41788:	10800290 	cmplti	r2,r2,10
   4178c:	103fbc1e 	bne	r2,zero,41680 <_gp+0xfffe4538>
            temp_dist_points = 0;
            loopCounter++;
        }
    }

    return rs;
   41790:	e0bff317 	ldw	r2,-52(fp)
   41794:	e0fd9517 	ldw	r3,-2476(fp)
   41798:	10c00015 	stw	r3,0(r2)
   4179c:	e0fd9617 	ldw	r3,-2472(fp)
   417a0:	10c00115 	stw	r3,4(r2)
   417a4:	e0fd9717 	ldw	r3,-2468(fp)
   417a8:	10c00215 	stw	r3,8(r2)
   417ac:	e0fd9817 	ldw	r3,-2464(fp)
   417b0:	10c00315 	stw	r3,12(r2)
   417b4:	e6fff717 	ldw	sp,-36(fp)
}
   417b8:	e0bff317 	ldw	r2,-52(fp)
   417bc:	e6fff804 	addi	sp,fp,-32
   417c0:	dfc00917 	ldw	ra,36(sp)
   417c4:	df000817 	ldw	fp,32(sp)
   417c8:	ddc00717 	ldw	r23,28(sp)
   417cc:	dd800617 	ldw	r22,24(sp)
   417d0:	dd400517 	ldw	r21,20(sp)
   417d4:	dd000417 	ldw	r20,16(sp)
   417d8:	dcc00317 	ldw	r19,12(sp)
   417dc:	dc800217 	ldw	r18,8(sp)
   417e0:	dc400117 	ldw	r17,4(sp)
   417e4:	dc000017 	ldw	r16,0(sp)
   417e8:	dec00a04 	addi	sp,sp,40
   417ec:	f800283a 	ret

000417f0 <atan>:
   417f0:	defff704 	addi	sp,sp,-36
   417f4:	dc400115 	stw	r17,4(sp)
   417f8:	04600034 	movhi	r17,32768
   417fc:	8c7fffc4 	addi	r17,r17,-1
   41800:	00910434 	movhi	r2,17424
   41804:	dc800215 	stw	r18,8(sp)
   41808:	dc000015 	stw	r16,0(sp)
   4180c:	dfc00815 	stw	ra,32(sp)
   41810:	ddc00715 	stw	r23,28(sp)
   41814:	dd800615 	stw	r22,24(sp)
   41818:	dd400515 	stw	r21,20(sp)
   4181c:	dd000415 	stw	r20,16(sp)
   41820:	dcc00315 	stw	r19,12(sp)
   41824:	2c62703a 	and	r17,r5,r17
   41828:	10bfffc4 	addi	r2,r2,-1
   4182c:	2821883a 	mov	r16,r5
   41830:	2025883a 	mov	r18,r4
   41834:	1440090e 	bge	r2,r17,4185c <atan+0x6c>
   41838:	009ffc34 	movhi	r2,32752
   4183c:	1440bf16 	blt	r2,r17,41b3c <atan+0x34c>
   41840:	8880bd26 	beq	r17,r2,41b38 <atan+0x348>
   41844:	00951134 	movhi	r2,21572
   41848:	108b4604 	addi	r2,r2,11544
   4184c:	0400fc0e 	bge	zero,r16,41c40 <atan+0x450>
   41850:	00cffe74 	movhi	r3,16377
   41854:	18c87ec4 	addi	r3,r3,8699
   41858:	0000bd06 	br	41b50 <atan+0x360>
   4185c:	008ff734 	movhi	r2,16348
   41860:	10bfffc4 	addi	r2,r2,-1
   41864:	282b883a 	mov	r21,r5
   41868:	1440d216 	blt	r2,r17,41bb4 <atan+0x3c4>
   4186c:	008f8834 	movhi	r2,15904
   41870:	10bfffc4 	addi	r2,r2,-1
   41874:	1440c10e 	bge	r2,r17,41b7c <atan+0x38c>
   41878:	053fffc4 	movi	r20,-1
   4187c:	900d883a 	mov	r6,r18
   41880:	800f883a 	mov	r7,r16
   41884:	9009883a 	mov	r4,r18
   41888:	800b883a 	mov	r5,r16
   4188c:	00449600 	call	44960 <__muldf3>
   41890:	100d883a 	mov	r6,r2
   41894:	180f883a 	mov	r7,r3
   41898:	1009883a 	mov	r4,r2
   4189c:	180b883a 	mov	r5,r3
   418a0:	102f883a 	mov	r23,r2
   418a4:	182d883a 	mov	r22,r3
   418a8:	00449600 	call	44960 <__muldf3>
   418ac:	01b8c8f4 	movhi	r6,58147
   418b0:	01cfe474 	movhi	r7,16273
   418b4:	31b68444 	addi	r6,r6,-9711
   418b8:	39eb4e84 	addi	r7,r7,-21190
   418bc:	1009883a 	mov	r4,r2
   418c0:	180b883a 	mov	r5,r3
   418c4:	1027883a 	mov	r19,r2
   418c8:	1823883a 	mov	r17,r3
   418cc:	00449600 	call	44960 <__muldf3>
   418d0:	01891db4 	movhi	r6,9334
   418d4:	01cfea74 	movhi	r7,16297
   418d8:	31837ac4 	addi	r6,r6,3563
   418dc:	39ded2c4 	addi	r7,r7,31563
   418e0:	1009883a 	mov	r4,r2
   418e4:	180b883a 	mov	r5,r3
   418e8:	00435140 	call	43514 <__adddf3>
   418ec:	980d883a 	mov	r6,r19
   418f0:	880f883a 	mov	r7,r17
   418f4:	1009883a 	mov	r4,r2
   418f8:	180b883a 	mov	r5,r3
   418fc:	00449600 	call	44960 <__muldf3>
   41900:	01a83434 	movhi	r6,41168
   41904:	01cfec74 	movhi	r7,16305
   41908:	318f5444 	addi	r6,r6,15697
   4190c:	39c35984 	addi	r7,r7,3430
   41910:	1009883a 	mov	r4,r2
   41914:	180b883a 	mov	r5,r3
   41918:	00435140 	call	43514 <__adddf3>
   4191c:	980d883a 	mov	r6,r19
   41920:	880f883a 	mov	r7,r17
   41924:	1009883a 	mov	r4,r2
   41928:	180b883a 	mov	r5,r3
   4192c:	00449600 	call	44960 <__muldf3>
   41930:	01b15334 	movhi	r6,50508
   41934:	01cfedf4 	movhi	r7,16311
   41938:	31881b84 	addi	r6,r6,8302
   4193c:	39d17344 	addi	r7,r7,17869
   41940:	1009883a 	mov	r4,r2
   41944:	180b883a 	mov	r5,r3
   41948:	00435140 	call	43514 <__adddf3>
   4194c:	980d883a 	mov	r6,r19
   41950:	880f883a 	mov	r7,r17
   41954:	1009883a 	mov	r4,r2
   41958:	180b883a 	mov	r5,r3
   4195c:	00449600 	call	44960 <__muldf3>
   41960:	01a48074 	movhi	r6,37377
   41964:	01cff0b4 	movhi	r7,16322
   41968:	31a0ffc4 	addi	r6,r6,-31745
   4196c:	39d24904 	addi	r7,r7,18724
   41970:	1009883a 	mov	r4,r2
   41974:	180b883a 	mov	r5,r3
   41978:	00435140 	call	43514 <__adddf3>
   4197c:	980d883a 	mov	r6,r19
   41980:	880f883a 	mov	r7,r17
   41984:	1009883a 	mov	r4,r2
   41988:	180b883a 	mov	r5,r3
   4198c:	00449600 	call	44960 <__muldf3>
   41990:	01955574 	movhi	r6,21845
   41994:	01cff574 	movhi	r7,16341
   41998:	31954344 	addi	r6,r6,21773
   4199c:	39d55544 	addi	r7,r7,21845
   419a0:	1009883a 	mov	r4,r2
   419a4:	180b883a 	mov	r5,r3
   419a8:	00435140 	call	43514 <__adddf3>
   419ac:	b80d883a 	mov	r6,r23
   419b0:	b00f883a 	mov	r7,r22
   419b4:	1009883a 	mov	r4,r2
   419b8:	180b883a 	mov	r5,r3
   419bc:	00449600 	call	44960 <__muldf3>
   419c0:	018b1ab4 	movhi	r6,11370
   419c4:	01efe8f4 	movhi	r7,49059
   419c8:	319b0bc4 	addi	r6,r6,27695
   419cc:	39ed1104 	addi	r7,r7,-19388
   419d0:	9809883a 	mov	r4,r19
   419d4:	880b883a 	mov	r5,r17
   419d8:	102f883a 	mov	r23,r2
   419dc:	182d883a 	mov	r22,r3
   419e0:	00449600 	call	44960 <__muldf3>
   419e4:	0194b7f4 	movhi	r6,21215
   419e8:	01cfebb4 	movhi	r7,16302
   419ec:	31bf6684 	addi	r6,r6,-614
   419f0:	39f78b44 	addi	r7,r7,-8659
   419f4:	1009883a 	mov	r4,r2
   419f8:	180b883a 	mov	r5,r3
   419fc:	00451cc0 	call	451cc <__subdf3>
   41a00:	980d883a 	mov	r6,r19
   41a04:	880f883a 	mov	r7,r17
   41a08:	1009883a 	mov	r4,r2
   41a0c:	180b883a 	mov	r5,r3
   41a10:	00449600 	call	44960 <__muldf3>
   41a14:	01abdd74 	movhi	r6,44917
   41a18:	01cfed34 	movhi	r7,16308
   41a1c:	31a69b44 	addi	r6,r6,-26003
   41a20:	39ec3c84 	addi	r7,r7,-20238
   41a24:	1009883a 	mov	r4,r2
   41a28:	180b883a 	mov	r5,r3
   41a2c:	00451cc0 	call	451cc <__subdf3>
   41a30:	980d883a 	mov	r6,r19
   41a34:	880f883a 	mov	r7,r17
   41a38:	1009883a 	mov	r4,r2
   41a3c:	180b883a 	mov	r5,r3
   41a40:	00449600 	call	44960 <__muldf3>
   41a44:	01bf88f4 	movhi	r6,65059
   41a48:	01cfef34 	movhi	r7,16316
   41a4c:	31859c44 	addi	r6,r6,5745
   41a50:	39dc7184 	addi	r7,r7,29126
   41a54:	1009883a 	mov	r4,r2
   41a58:	180b883a 	mov	r5,r3
   41a5c:	00451cc0 	call	451cc <__subdf3>
   41a60:	980d883a 	mov	r6,r19
   41a64:	880f883a 	mov	r7,r17
   41a68:	1009883a 	mov	r4,r2
   41a6c:	180b883a 	mov	r5,r3
   41a70:	00449600 	call	44960 <__muldf3>
   41a74:	01a66674 	movhi	r6,39321
   41a78:	01cff2b4 	movhi	r7,16330
   41a7c:	31baf104 	addi	r6,r6,-5180
   41a80:	39e66644 	addi	r7,r7,-26215
   41a84:	1009883a 	mov	r4,r2
   41a88:	180b883a 	mov	r5,r3
   41a8c:	00451cc0 	call	451cc <__subdf3>
   41a90:	1009883a 	mov	r4,r2
   41a94:	980d883a 	mov	r6,r19
   41a98:	880f883a 	mov	r7,r17
   41a9c:	180b883a 	mov	r5,r3
   41aa0:	00449600 	call	44960 <__muldf3>
   41aa4:	013fffc4 	movi	r4,-1
   41aa8:	a1006826 	beq	r20,r4,41c4c <atan+0x45c>
   41aac:	100d883a 	mov	r6,r2
   41ab0:	180f883a 	mov	r7,r3
   41ab4:	b809883a 	mov	r4,r23
   41ab8:	b00b883a 	mov	r5,r22
   41abc:	00435140 	call	43514 <__adddf3>
   41ac0:	900d883a 	mov	r6,r18
   41ac4:	800f883a 	mov	r7,r16
   41ac8:	1009883a 	mov	r4,r2
   41acc:	180b883a 	mov	r5,r3
   41ad0:	00449600 	call	44960 <__muldf3>
   41ad4:	a02890fa 	slli	r20,r20,3
   41ad8:	1009883a 	mov	r4,r2
   41adc:	04400174 	movhi	r17,5
   41ae0:	00800174 	movhi	r2,5
   41ae4:	108b6204 	addi	r2,r2,11656
   41ae8:	8c4b6a04 	addi	r17,r17,11688
   41aec:	8d23883a 	add	r17,r17,r20
   41af0:	1529883a 	add	r20,r2,r20
   41af4:	a1800017 	ldw	r6,0(r20)
   41af8:	a1c00117 	ldw	r7,4(r20)
   41afc:	180b883a 	mov	r5,r3
   41b00:	00451cc0 	call	451cc <__subdf3>
   41b04:	900d883a 	mov	r6,r18
   41b08:	800f883a 	mov	r7,r16
   41b0c:	1009883a 	mov	r4,r2
   41b10:	180b883a 	mov	r5,r3
   41b14:	00451cc0 	call	451cc <__subdf3>
   41b18:	89000017 	ldw	r4,0(r17)
   41b1c:	89400117 	ldw	r5,4(r17)
   41b20:	100d883a 	mov	r6,r2
   41b24:	180f883a 	mov	r7,r3
   41b28:	00451cc0 	call	451cc <__subdf3>
   41b2c:	a800080e 	bge	r21,zero,41b50 <atan+0x360>
   41b30:	18e0003c 	xorhi	r3,r3,32768
   41b34:	00000606 	br	41b50 <atan+0x360>
   41b38:	203f4226 	beq	r4,zero,41844 <_gp+0xfffe46fc>
   41b3c:	900d883a 	mov	r6,r18
   41b40:	800f883a 	mov	r7,r16
   41b44:	9009883a 	mov	r4,r18
   41b48:	800b883a 	mov	r5,r16
   41b4c:	00435140 	call	43514 <__adddf3>
   41b50:	dfc00817 	ldw	ra,32(sp)
   41b54:	ddc00717 	ldw	r23,28(sp)
   41b58:	dd800617 	ldw	r22,24(sp)
   41b5c:	dd400517 	ldw	r21,20(sp)
   41b60:	dd000417 	ldw	r20,16(sp)
   41b64:	dcc00317 	ldw	r19,12(sp)
   41b68:	dc800217 	ldw	r18,8(sp)
   41b6c:	dc400117 	ldw	r17,4(sp)
   41b70:	dc000017 	ldw	r16,0(sp)
   41b74:	dec00904 	addi	sp,sp,36
   41b78:	f800283a 	ret
   41b7c:	01a20034 	movhi	r6,34816
   41b80:	01df8e34 	movhi	r7,32312
   41b84:	319d6704 	addi	r6,r6,30108
   41b88:	39f90f04 	addi	r7,r7,-7108
   41b8c:	00435140 	call	43514 <__adddf3>
   41b90:	000d883a 	mov	r6,zero
   41b94:	01cffc34 	movhi	r7,16368
   41b98:	1009883a 	mov	r4,r2
   41b9c:	180b883a 	mov	r5,r3
   41ba0:	00447900 	call	44790 <__gedf2>
   41ba4:	00bf340e 	bge	zero,r2,41878 <_gp+0xfffe4730>
   41ba8:	9005883a 	mov	r2,r18
   41bac:	8007883a 	mov	r3,r16
   41bb0:	003fe706 	br	41b50 <_gp+0xfffe4a08>
   41bb4:	0041d780 	call	41d78 <fabs>
   41bb8:	1025883a 	mov	r18,r2
   41bbc:	008ffcf4 	movhi	r2,16371
   41bc0:	10bfffc4 	addi	r2,r2,-1
   41bc4:	1821883a 	mov	r16,r3
   41bc8:	14403016 	blt	r2,r17,41c8c <atan+0x49c>
   41bcc:	008ff9b4 	movhi	r2,16358
   41bd0:	10bfffc4 	addi	r2,r2,-1
   41bd4:	14405316 	blt	r2,r17,41d24 <atan+0x534>
   41bd8:	900d883a 	mov	r6,r18
   41bdc:	9009883a 	mov	r4,r18
   41be0:	180f883a 	mov	r7,r3
   41be4:	180b883a 	mov	r5,r3
   41be8:	00435140 	call	43514 <__adddf3>
   41bec:	000d883a 	mov	r6,zero
   41bf0:	01cffc34 	movhi	r7,16368
   41bf4:	1009883a 	mov	r4,r2
   41bf8:	180b883a 	mov	r5,r3
   41bfc:	00451cc0 	call	451cc <__subdf3>
   41c00:	9009883a 	mov	r4,r18
   41c04:	800b883a 	mov	r5,r16
   41c08:	000d883a 	mov	r6,zero
   41c0c:	01d00034 	movhi	r7,16384
   41c10:	1027883a 	mov	r19,r2
   41c14:	1823883a 	mov	r17,r3
   41c18:	00435140 	call	43514 <__adddf3>
   41c1c:	100d883a 	mov	r6,r2
   41c20:	180f883a 	mov	r7,r3
   41c24:	9809883a 	mov	r4,r19
   41c28:	880b883a 	mov	r5,r17
   41c2c:	0043dc00 	call	43dc0 <__divdf3>
   41c30:	1025883a 	mov	r18,r2
   41c34:	1821883a 	mov	r16,r3
   41c38:	0029883a 	mov	r20,zero
   41c3c:	003f0f06 	br	4187c <_gp+0xfffe4734>
   41c40:	00effe74 	movhi	r3,49145
   41c44:	18c87ec4 	addi	r3,r3,8699
   41c48:	003fc106 	br	41b50 <_gp+0xfffe4a08>
   41c4c:	b809883a 	mov	r4,r23
   41c50:	b00b883a 	mov	r5,r22
   41c54:	100d883a 	mov	r6,r2
   41c58:	180f883a 	mov	r7,r3
   41c5c:	00435140 	call	43514 <__adddf3>
   41c60:	900d883a 	mov	r6,r18
   41c64:	800f883a 	mov	r7,r16
   41c68:	1009883a 	mov	r4,r2
   41c6c:	180b883a 	mov	r5,r3
   41c70:	00449600 	call	44960 <__muldf3>
   41c74:	100d883a 	mov	r6,r2
   41c78:	180f883a 	mov	r7,r3
   41c7c:	9009883a 	mov	r4,r18
   41c80:	800b883a 	mov	r5,r16
   41c84:	00451cc0 	call	451cc <__subdf3>
   41c88:	003fb106 	br	41b50 <_gp+0xfffe4a08>
   41c8c:	009000f4 	movhi	r2,16387
   41c90:	109fffc4 	addi	r2,r2,32767
   41c94:	14401a16 	blt	r2,r17,41d00 <atan+0x510>
   41c98:	9009883a 	mov	r4,r18
   41c9c:	000d883a 	mov	r6,zero
   41ca0:	01cffe34 	movhi	r7,16376
   41ca4:	180b883a 	mov	r5,r3
   41ca8:	00451cc0 	call	451cc <__subdf3>
   41cac:	9009883a 	mov	r4,r18
   41cb0:	800b883a 	mov	r5,r16
   41cb4:	000d883a 	mov	r6,zero
   41cb8:	01cffe34 	movhi	r7,16376
   41cbc:	1027883a 	mov	r19,r2
   41cc0:	1823883a 	mov	r17,r3
   41cc4:	00449600 	call	44960 <__muldf3>
   41cc8:	000d883a 	mov	r6,zero
   41ccc:	01cffc34 	movhi	r7,16368
   41cd0:	1009883a 	mov	r4,r2
   41cd4:	180b883a 	mov	r5,r3
   41cd8:	00435140 	call	43514 <__adddf3>
   41cdc:	100d883a 	mov	r6,r2
   41ce0:	180f883a 	mov	r7,r3
   41ce4:	9809883a 	mov	r4,r19
   41ce8:	880b883a 	mov	r5,r17
   41cec:	0043dc00 	call	43dc0 <__divdf3>
   41cf0:	1025883a 	mov	r18,r2
   41cf4:	1821883a 	mov	r16,r3
   41cf8:	05000084 	movi	r20,2
   41cfc:	003edf06 	br	4187c <_gp+0xfffe4734>
   41d00:	900d883a 	mov	r6,r18
   41d04:	180f883a 	mov	r7,r3
   41d08:	0009883a 	mov	r4,zero
   41d0c:	016ffc34 	movhi	r5,49136
   41d10:	0043dc00 	call	43dc0 <__divdf3>
   41d14:	1025883a 	mov	r18,r2
   41d18:	1821883a 	mov	r16,r3
   41d1c:	050000c4 	movi	r20,3
   41d20:	003ed606 	br	4187c <_gp+0xfffe4734>
   41d24:	9009883a 	mov	r4,r18
   41d28:	000d883a 	mov	r6,zero
   41d2c:	01cffc34 	movhi	r7,16368
   41d30:	180b883a 	mov	r5,r3
   41d34:	00451cc0 	call	451cc <__subdf3>
   41d38:	9009883a 	mov	r4,r18
   41d3c:	800b883a 	mov	r5,r16
   41d40:	000d883a 	mov	r6,zero
   41d44:	01cffc34 	movhi	r7,16368
   41d48:	1027883a 	mov	r19,r2
   41d4c:	1823883a 	mov	r17,r3
   41d50:	00435140 	call	43514 <__adddf3>
   41d54:	100d883a 	mov	r6,r2
   41d58:	180f883a 	mov	r7,r3
   41d5c:	9809883a 	mov	r4,r19
   41d60:	880b883a 	mov	r5,r17
   41d64:	0043dc00 	call	43dc0 <__divdf3>
   41d68:	1025883a 	mov	r18,r2
   41d6c:	1821883a 	mov	r16,r3
   41d70:	05000044 	movi	r20,1
   41d74:	003ec106 	br	4187c <_gp+0xfffe4734>

00041d78 <fabs>:
   41d78:	00e00034 	movhi	r3,32768
   41d7c:	18ffffc4 	addi	r3,r3,-1
   41d80:	2005883a 	mov	r2,r4
   41d84:	28c6703a 	and	r3,r5,r3
   41d88:	f800283a 	ret

00041d8c <__divsi3>:
   41d8c:	20001b16 	blt	r4,zero,41dfc <__divsi3+0x70>
   41d90:	000f883a 	mov	r7,zero
   41d94:	28001616 	blt	r5,zero,41df0 <__divsi3+0x64>
   41d98:	200d883a 	mov	r6,r4
   41d9c:	29001a2e 	bgeu	r5,r4,41e08 <__divsi3+0x7c>
   41da0:	00800804 	movi	r2,32
   41da4:	00c00044 	movi	r3,1
   41da8:	00000106 	br	41db0 <__divsi3+0x24>
   41dac:	10000d26 	beq	r2,zero,41de4 <__divsi3+0x58>
   41db0:	294b883a 	add	r5,r5,r5
   41db4:	10bfffc4 	addi	r2,r2,-1
   41db8:	18c7883a 	add	r3,r3,r3
   41dbc:	293ffb36 	bltu	r5,r4,41dac <_gp+0xfffe4c64>
   41dc0:	0005883a 	mov	r2,zero
   41dc4:	18000726 	beq	r3,zero,41de4 <__divsi3+0x58>
   41dc8:	0005883a 	mov	r2,zero
   41dcc:	31400236 	bltu	r6,r5,41dd8 <__divsi3+0x4c>
   41dd0:	314dc83a 	sub	r6,r6,r5
   41dd4:	10c4b03a 	or	r2,r2,r3
   41dd8:	1806d07a 	srli	r3,r3,1
   41ddc:	280ad07a 	srli	r5,r5,1
   41de0:	183ffa1e 	bne	r3,zero,41dcc <_gp+0xfffe4c84>
   41de4:	38000126 	beq	r7,zero,41dec <__divsi3+0x60>
   41de8:	0085c83a 	sub	r2,zero,r2
   41dec:	f800283a 	ret
   41df0:	014bc83a 	sub	r5,zero,r5
   41df4:	39c0005c 	xori	r7,r7,1
   41df8:	003fe706 	br	41d98 <_gp+0xfffe4c50>
   41dfc:	0109c83a 	sub	r4,zero,r4
   41e00:	01c00044 	movi	r7,1
   41e04:	003fe306 	br	41d94 <_gp+0xfffe4c4c>
   41e08:	00c00044 	movi	r3,1
   41e0c:	003fee06 	br	41dc8 <_gp+0xfffe4c80>

00041e10 <__modsi3>:
   41e10:	20001716 	blt	r4,zero,41e70 <__modsi3+0x60>
   41e14:	000f883a 	mov	r7,zero
   41e18:	2005883a 	mov	r2,r4
   41e1c:	28001216 	blt	r5,zero,41e68 <__modsi3+0x58>
   41e20:	2900162e 	bgeu	r5,r4,41e7c <__modsi3+0x6c>
   41e24:	01800804 	movi	r6,32
   41e28:	00c00044 	movi	r3,1
   41e2c:	00000106 	br	41e34 <__modsi3+0x24>
   41e30:	30000a26 	beq	r6,zero,41e5c <__modsi3+0x4c>
   41e34:	294b883a 	add	r5,r5,r5
   41e38:	31bfffc4 	addi	r6,r6,-1
   41e3c:	18c7883a 	add	r3,r3,r3
   41e40:	293ffb36 	bltu	r5,r4,41e30 <_gp+0xfffe4ce8>
   41e44:	18000526 	beq	r3,zero,41e5c <__modsi3+0x4c>
   41e48:	1806d07a 	srli	r3,r3,1
   41e4c:	11400136 	bltu	r2,r5,41e54 <__modsi3+0x44>
   41e50:	1145c83a 	sub	r2,r2,r5
   41e54:	280ad07a 	srli	r5,r5,1
   41e58:	183ffb1e 	bne	r3,zero,41e48 <_gp+0xfffe4d00>
   41e5c:	38000126 	beq	r7,zero,41e64 <__modsi3+0x54>
   41e60:	0085c83a 	sub	r2,zero,r2
   41e64:	f800283a 	ret
   41e68:	014bc83a 	sub	r5,zero,r5
   41e6c:	003fec06 	br	41e20 <_gp+0xfffe4cd8>
   41e70:	0109c83a 	sub	r4,zero,r4
   41e74:	01c00044 	movi	r7,1
   41e78:	003fe706 	br	41e18 <_gp+0xfffe4cd0>
   41e7c:	00c00044 	movi	r3,1
   41e80:	003ff106 	br	41e48 <_gp+0xfffe4d00>

00041e84 <__udivsi3>:
   41e84:	200d883a 	mov	r6,r4
   41e88:	2900152e 	bgeu	r5,r4,41ee0 <__udivsi3+0x5c>
   41e8c:	28001416 	blt	r5,zero,41ee0 <__udivsi3+0x5c>
   41e90:	00800804 	movi	r2,32
   41e94:	00c00044 	movi	r3,1
   41e98:	00000206 	br	41ea4 <__udivsi3+0x20>
   41e9c:	10000e26 	beq	r2,zero,41ed8 <__udivsi3+0x54>
   41ea0:	28000516 	blt	r5,zero,41eb8 <__udivsi3+0x34>
   41ea4:	294b883a 	add	r5,r5,r5
   41ea8:	10bfffc4 	addi	r2,r2,-1
   41eac:	18c7883a 	add	r3,r3,r3
   41eb0:	293ffa36 	bltu	r5,r4,41e9c <_gp+0xfffe4d54>
   41eb4:	18000826 	beq	r3,zero,41ed8 <__udivsi3+0x54>
   41eb8:	0005883a 	mov	r2,zero
   41ebc:	31400236 	bltu	r6,r5,41ec8 <__udivsi3+0x44>
   41ec0:	314dc83a 	sub	r6,r6,r5
   41ec4:	10c4b03a 	or	r2,r2,r3
   41ec8:	1806d07a 	srli	r3,r3,1
   41ecc:	280ad07a 	srli	r5,r5,1
   41ed0:	183ffa1e 	bne	r3,zero,41ebc <_gp+0xfffe4d74>
   41ed4:	f800283a 	ret
   41ed8:	0005883a 	mov	r2,zero
   41edc:	f800283a 	ret
   41ee0:	00c00044 	movi	r3,1
   41ee4:	003ff406 	br	41eb8 <_gp+0xfffe4d70>

00041ee8 <__umodsi3>:
   41ee8:	2005883a 	mov	r2,r4
   41eec:	2900122e 	bgeu	r5,r4,41f38 <__umodsi3+0x50>
   41ef0:	28001116 	blt	r5,zero,41f38 <__umodsi3+0x50>
   41ef4:	01800804 	movi	r6,32
   41ef8:	00c00044 	movi	r3,1
   41efc:	00000206 	br	41f08 <__umodsi3+0x20>
   41f00:	30000c26 	beq	r6,zero,41f34 <__umodsi3+0x4c>
   41f04:	28000516 	blt	r5,zero,41f1c <__umodsi3+0x34>
   41f08:	294b883a 	add	r5,r5,r5
   41f0c:	31bfffc4 	addi	r6,r6,-1
   41f10:	18c7883a 	add	r3,r3,r3
   41f14:	293ffa36 	bltu	r5,r4,41f00 <_gp+0xfffe4db8>
   41f18:	18000626 	beq	r3,zero,41f34 <__umodsi3+0x4c>
   41f1c:	1806d07a 	srli	r3,r3,1
   41f20:	11400136 	bltu	r2,r5,41f28 <__umodsi3+0x40>
   41f24:	1145c83a 	sub	r2,r2,r5
   41f28:	280ad07a 	srli	r5,r5,1
   41f2c:	183ffb1e 	bne	r3,zero,41f1c <_gp+0xfffe4dd4>
   41f30:	f800283a 	ret
   41f34:	f800283a 	ret
   41f38:	00c00044 	movi	r3,1
   41f3c:	003ff706 	br	41f1c <_gp+0xfffe4dd4>

00041f40 <__mulsi3>:
   41f40:	0005883a 	mov	r2,zero
   41f44:	20000726 	beq	r4,zero,41f64 <__mulsi3+0x24>
   41f48:	20c0004c 	andi	r3,r4,1
   41f4c:	2008d07a 	srli	r4,r4,1
   41f50:	18000126 	beq	r3,zero,41f58 <__mulsi3+0x18>
   41f54:	1145883a 	add	r2,r2,r5
   41f58:	294b883a 	add	r5,r5,r5
   41f5c:	203ffa1e 	bne	r4,zero,41f48 <_gp+0xfffe4e00>
   41f60:	f800283a 	ret
   41f64:	f800283a 	ret

00041f68 <__addsf3>:
   41f68:	defffc04 	addi	sp,sp,-16
   41f6c:	2004d7fa 	srli	r2,r4,31
   41f70:	280cd5fa 	srli	r6,r5,23
   41f74:	dc000015 	stw	r16,0(sp)
   41f78:	00c02034 	movhi	r3,128
   41f7c:	2020d5fa 	srli	r16,r4,23
   41f80:	280ed7fa 	srli	r7,r5,31
   41f84:	18ffffc4 	addi	r3,r3,-1
   41f88:	dc400115 	stw	r17,4(sp)
   41f8c:	1908703a 	and	r4,r3,r4
   41f90:	194a703a 	and	r5,r3,r5
   41f94:	dfc00315 	stw	ra,12(sp)
   41f98:	dc800215 	stw	r18,8(sp)
   41f9c:	14403fcc 	andi	r17,r2,255
   41fa0:	84003fcc 	andi	r16,r16,255
   41fa4:	200890fa 	slli	r4,r4,3
   41fa8:	31803fcc 	andi	r6,r6,255
   41fac:	280a90fa 	slli	r5,r5,3
   41fb0:	89c05026 	beq	r17,r7,420f4 <__addsf3+0x18c>
   41fb4:	8185c83a 	sub	r2,r16,r6
   41fb8:	00807a0e 	bge	zero,r2,421a4 <__addsf3+0x23c>
   41fbc:	30001e1e 	bne	r6,zero,42038 <__addsf3+0xd0>
   41fc0:	28006d1e 	bne	r5,zero,42178 <__addsf3+0x210>
   41fc4:	208001cc 	andi	r2,r4,7
   41fc8:	10000426 	beq	r2,zero,41fdc <__addsf3+0x74>
   41fcc:	208003cc 	andi	r2,r4,15
   41fd0:	00c00104 	movi	r3,4
   41fd4:	10c00126 	beq	r2,r3,41fdc <__addsf3+0x74>
   41fd8:	20c9883a 	add	r4,r4,r3
   41fdc:	2081002c 	andhi	r2,r4,1024
   41fe0:	10003926 	beq	r2,zero,420c8 <__addsf3+0x160>
   41fe4:	84000044 	addi	r16,r16,1
   41fe8:	00803fc4 	movi	r2,255
   41fec:	80807826 	beq	r16,r2,421d0 <__addsf3+0x268>
   41ff0:	200891ba 	slli	r4,r4,6
   41ff4:	8805883a 	mov	r2,r17
   41ff8:	2008d27a 	srli	r4,r4,9
   41ffc:	84003fcc 	andi	r16,r16,255
   42000:	800695fa 	slli	r3,r16,23
   42004:	10803fcc 	andi	r2,r2,255
   42008:	04002034 	movhi	r16,128
   4200c:	843fffc4 	addi	r16,r16,-1
   42010:	100497fa 	slli	r2,r2,31
   42014:	2408703a 	and	r4,r4,r16
   42018:	20e0b03a 	or	r16,r4,r3
   4201c:	8084b03a 	or	r2,r16,r2
   42020:	dfc00317 	ldw	ra,12(sp)
   42024:	dc800217 	ldw	r18,8(sp)
   42028:	dc400117 	ldw	r17,4(sp)
   4202c:	dc000017 	ldw	r16,0(sp)
   42030:	dec00404 	addi	sp,sp,16
   42034:	f800283a 	ret
   42038:	00c03fc4 	movi	r3,255
   4203c:	80ffe126 	beq	r16,r3,41fc4 <_gp+0xfffe4e7c>
   42040:	29410034 	orhi	r5,r5,1024
   42044:	00c006c4 	movi	r3,27
   42048:	18807516 	blt	r3,r2,42220 <__addsf3+0x2b8>
   4204c:	00c00804 	movi	r3,32
   42050:	1887c83a 	sub	r3,r3,r2
   42054:	28c6983a 	sll	r3,r5,r3
   42058:	288ad83a 	srl	r5,r5,r2
   4205c:	1804c03a 	cmpne	r2,r3,zero
   42060:	288ab03a 	or	r5,r5,r2
   42064:	2149c83a 	sub	r4,r4,r5
   42068:	2081002c 	andhi	r2,r4,1024
   4206c:	10001426 	beq	r2,zero,420c0 <__addsf3+0x158>
   42070:	04810034 	movhi	r18,1024
   42074:	94bfffc4 	addi	r18,r18,-1
   42078:	24a4703a 	and	r18,r4,r18
   4207c:	9009883a 	mov	r4,r18
   42080:	0045edc0 	call	45edc <__clzsi2>
   42084:	10bffec4 	addi	r2,r2,-5
   42088:	90a4983a 	sll	r18,r18,r2
   4208c:	14005416 	blt	r2,r16,421e0 <__addsf3+0x278>
   42090:	1405c83a 	sub	r2,r2,r16
   42094:	11000044 	addi	r4,r2,1
   42098:	00800804 	movi	r2,32
   4209c:	1105c83a 	sub	r2,r2,r4
   420a0:	9084983a 	sll	r2,r18,r2
   420a4:	9124d83a 	srl	r18,r18,r4
   420a8:	0021883a 	mov	r16,zero
   420ac:	1008c03a 	cmpne	r4,r2,zero
   420b0:	9108b03a 	or	r4,r18,r4
   420b4:	003fc306 	br	41fc4 <_gp+0xfffe4e7c>
   420b8:	1000db26 	beq	r2,zero,42428 <__addsf3+0x4c0>
   420bc:	1009883a 	mov	r4,r2
   420c0:	208001cc 	andi	r2,r4,7
   420c4:	103fc11e 	bne	r2,zero,41fcc <_gp+0xfffe4e84>
   420c8:	2006d0fa 	srli	r3,r4,3
   420cc:	01003fc4 	movi	r4,255
   420d0:	8805883a 	mov	r2,r17
   420d4:	8100241e 	bne	r16,r4,42168 <__addsf3+0x200>
   420d8:	18006e26 	beq	r3,zero,42294 <__addsf3+0x32c>
   420dc:	19001034 	orhi	r4,r3,64
   420e0:	00c02034 	movhi	r3,128
   420e4:	18ffffc4 	addi	r3,r3,-1
   420e8:	043fffc4 	movi	r16,-1
   420ec:	20c8703a 	and	r4,r4,r3
   420f0:	003fc206 	br	41ffc <_gp+0xfffe4eb4>
   420f4:	8187c83a 	sub	r3,r16,r6
   420f8:	00c03e0e 	bge	zero,r3,421f4 <__addsf3+0x28c>
   420fc:	30002326 	beq	r6,zero,4218c <__addsf3+0x224>
   42100:	01803fc4 	movi	r6,255
   42104:	81bfaf26 	beq	r16,r6,41fc4 <_gp+0xfffe4e7c>
   42108:	29410034 	orhi	r5,r5,1024
   4210c:	018006c4 	movi	r6,27
   42110:	30c07416 	blt	r6,r3,422e4 <__addsf3+0x37c>
   42114:	01800804 	movi	r6,32
   42118:	30cdc83a 	sub	r6,r6,r3
   4211c:	298c983a 	sll	r6,r5,r6
   42120:	28cad83a 	srl	r5,r5,r3
   42124:	3006c03a 	cmpne	r3,r6,zero
   42128:	28cab03a 	or	r5,r5,r3
   4212c:	2149883a 	add	r4,r4,r5
   42130:	20c1002c 	andhi	r3,r4,1024
   42134:	183fe226 	beq	r3,zero,420c0 <_gp+0xfffe4f78>
   42138:	84000044 	addi	r16,r16,1
   4213c:	00c03fc4 	movi	r3,255
   42140:	80c05426 	beq	r16,r3,42294 <__addsf3+0x32c>
   42144:	00bf0034 	movhi	r2,64512
   42148:	10bfffc4 	addi	r2,r2,-1
   4214c:	20c0004c 	andi	r3,r4,1
   42150:	2088703a 	and	r4,r4,r2
   42154:	2008d07a 	srli	r4,r4,1
   42158:	20c8b03a 	or	r4,r4,r3
   4215c:	003f9906 	br	41fc4 <_gp+0xfffe4e7c>
   42160:	0007883a 	mov	r3,zero
   42164:	0005883a 	mov	r2,zero
   42168:	01002034 	movhi	r4,128
   4216c:	213fffc4 	addi	r4,r4,-1
   42170:	1908703a 	and	r4,r3,r4
   42174:	003fa106 	br	41ffc <_gp+0xfffe4eb4>
   42178:	10bfffc4 	addi	r2,r2,-1
   4217c:	103fb926 	beq	r2,zero,42064 <_gp+0xfffe4f1c>
   42180:	00c03fc4 	movi	r3,255
   42184:	80ffaf1e 	bne	r16,r3,42044 <_gp+0xfffe4efc>
   42188:	003f8e06 	br	41fc4 <_gp+0xfffe4e7c>
   4218c:	283f8d26 	beq	r5,zero,41fc4 <_gp+0xfffe4e7c>
   42190:	18ffffc4 	addi	r3,r3,-1
   42194:	183fe526 	beq	r3,zero,4212c <_gp+0xfffe4fe4>
   42198:	01803fc4 	movi	r6,255
   4219c:	81bfdb1e 	bne	r16,r6,4210c <_gp+0xfffe4fc4>
   421a0:	003f8806 	br	41fc4 <_gp+0xfffe4e7c>
   421a4:	1000201e 	bne	r2,zero,42228 <__addsf3+0x2c0>
   421a8:	80800044 	addi	r2,r16,1
   421ac:	10803fcc 	andi	r2,r2,255
   421b0:	01800044 	movi	r6,1
   421b4:	3080450e 	bge	r6,r2,422cc <__addsf3+0x364>
   421b8:	2165c83a 	sub	r18,r4,r5
   421bc:	90c1002c 	andhi	r3,r18,1024
   421c0:	18002b26 	beq	r3,zero,42270 <__addsf3+0x308>
   421c4:	2925c83a 	sub	r18,r5,r4
   421c8:	3823883a 	mov	r17,r7
   421cc:	003fab06 	br	4207c <_gp+0xfffe4f34>
   421d0:	8805883a 	mov	r2,r17
   421d4:	043fffc4 	movi	r16,-1
   421d8:	0009883a 	mov	r4,zero
   421dc:	003f8706 	br	41ffc <_gp+0xfffe4eb4>
   421e0:	013f0034 	movhi	r4,64512
   421e4:	213fffc4 	addi	r4,r4,-1
   421e8:	80a1c83a 	sub	r16,r16,r2
   421ec:	9108703a 	and	r4,r18,r4
   421f0:	003f7406 	br	41fc4 <_gp+0xfffe4e7c>
   421f4:	1800411e 	bne	r3,zero,422fc <__addsf3+0x394>
   421f8:	80c00044 	addi	r3,r16,1
   421fc:	19c03fcc 	andi	r7,r3,255
   42200:	01800044 	movi	r6,1
   42204:	31c0260e 	bge	r6,r7,422a0 <__addsf3+0x338>
   42208:	01803fc4 	movi	r6,255
   4220c:	19802126 	beq	r3,r6,42294 <__addsf3+0x32c>
   42210:	2149883a 	add	r4,r4,r5
   42214:	2008d07a 	srli	r4,r4,1
   42218:	1821883a 	mov	r16,r3
   4221c:	003f6906 	br	41fc4 <_gp+0xfffe4e7c>
   42220:	01400044 	movi	r5,1
   42224:	003f8f06 	br	42064 <_gp+0xfffe4f1c>
   42228:	8000151e 	bne	r16,zero,42280 <__addsf3+0x318>
   4222c:	20002f26 	beq	r4,zero,422ec <__addsf3+0x384>
   42230:	0084303a 	nor	r2,zero,r2
   42234:	10000a26 	beq	r2,zero,42260 <__addsf3+0x2f8>
   42238:	00c03fc4 	movi	r3,255
   4223c:	30c02b26 	beq	r6,r3,422ec <__addsf3+0x384>
   42240:	00c006c4 	movi	r3,27
   42244:	18806d16 	blt	r3,r2,423fc <__addsf3+0x494>
   42248:	00c00804 	movi	r3,32
   4224c:	1887c83a 	sub	r3,r3,r2
   42250:	20c6983a 	sll	r3,r4,r3
   42254:	2084d83a 	srl	r2,r4,r2
   42258:	1808c03a 	cmpne	r4,r3,zero
   4225c:	1108b03a 	or	r4,r2,r4
   42260:	2909c83a 	sub	r4,r5,r4
   42264:	3021883a 	mov	r16,r6
   42268:	3823883a 	mov	r17,r7
   4226c:	003f7e06 	br	42068 <_gp+0xfffe4f20>
   42270:	903f821e 	bne	r18,zero,4207c <_gp+0xfffe4f34>
   42274:	0005883a 	mov	r2,zero
   42278:	0021883a 	mov	r16,zero
   4227c:	003fba06 	br	42168 <_gp+0xfffe5020>
   42280:	00c03fc4 	movi	r3,255
   42284:	30c01926 	beq	r6,r3,422ec <__addsf3+0x384>
   42288:	0085c83a 	sub	r2,zero,r2
   4228c:	21010034 	orhi	r4,r4,1024
   42290:	003feb06 	br	42240 <_gp+0xfffe50f8>
   42294:	043fffc4 	movi	r16,-1
   42298:	0009883a 	mov	r4,zero
   4229c:	003f5706 	br	41ffc <_gp+0xfffe4eb4>
   422a0:	80004a1e 	bne	r16,zero,423cc <__addsf3+0x464>
   422a4:	20005926 	beq	r4,zero,4240c <__addsf3+0x4a4>
   422a8:	283f4626 	beq	r5,zero,41fc4 <_gp+0xfffe4e7c>
   422ac:	2149883a 	add	r4,r4,r5
   422b0:	2081002c 	andhi	r2,r4,1024
   422b4:	103f8226 	beq	r2,zero,420c0 <_gp+0xfffe4f78>
   422b8:	00bf0034 	movhi	r2,64512
   422bc:	10bfffc4 	addi	r2,r2,-1
   422c0:	3021883a 	mov	r16,r6
   422c4:	2088703a 	and	r4,r4,r2
   422c8:	003f3e06 	br	41fc4 <_gp+0xfffe4e7c>
   422cc:	8000121e 	bne	r16,zero,42318 <__addsf3+0x3b0>
   422d0:	2000261e 	bne	r4,zero,4236c <__addsf3+0x404>
   422d4:	283fa226 	beq	r5,zero,42160 <_gp+0xfffe5018>
   422d8:	2809883a 	mov	r4,r5
   422dc:	3823883a 	mov	r17,r7
   422e0:	003f3806 	br	41fc4 <_gp+0xfffe4e7c>
   422e4:	01400044 	movi	r5,1
   422e8:	003f9006 	br	4212c <_gp+0xfffe4fe4>
   422ec:	2809883a 	mov	r4,r5
   422f0:	3021883a 	mov	r16,r6
   422f4:	3823883a 	mov	r17,r7
   422f8:	003f3206 	br	41fc4 <_gp+0xfffe4e7c>
   422fc:	80000c1e 	bne	r16,zero,42330 <__addsf3+0x3c8>
   42300:	20002f26 	beq	r4,zero,423c0 <__addsf3+0x458>
   42304:	00c6303a 	nor	r3,zero,r3
   42308:	18002b1e 	bne	r3,zero,423b8 <__addsf3+0x450>
   4230c:	2149883a 	add	r4,r4,r5
   42310:	3021883a 	mov	r16,r6
   42314:	003f8606 	br	42130 <_gp+0xfffe4fe8>
   42318:	20001b1e 	bne	r4,zero,42388 <__addsf3+0x420>
   4231c:	28003926 	beq	r5,zero,42404 <__addsf3+0x49c>
   42320:	2809883a 	mov	r4,r5
   42324:	3823883a 	mov	r17,r7
   42328:	04003fc4 	movi	r16,255
   4232c:	003f2506 	br	41fc4 <_gp+0xfffe4e7c>
   42330:	01c03fc4 	movi	r7,255
   42334:	31c02226 	beq	r6,r7,423c0 <__addsf3+0x458>
   42338:	00c7c83a 	sub	r3,zero,r3
   4233c:	21010034 	orhi	r4,r4,1024
   42340:	01c006c4 	movi	r7,27
   42344:	38c03616 	blt	r7,r3,42420 <__addsf3+0x4b8>
   42348:	01c00804 	movi	r7,32
   4234c:	38cfc83a 	sub	r7,r7,r3
   42350:	21ce983a 	sll	r7,r4,r7
   42354:	20c6d83a 	srl	r3,r4,r3
   42358:	3808c03a 	cmpne	r4,r7,zero
   4235c:	1906b03a 	or	r3,r3,r4
   42360:	1949883a 	add	r4,r3,r5
   42364:	3021883a 	mov	r16,r6
   42368:	003f7106 	br	42130 <_gp+0xfffe4fe8>
   4236c:	283f1526 	beq	r5,zero,41fc4 <_gp+0xfffe4e7c>
   42370:	2145c83a 	sub	r2,r4,r5
   42374:	10c1002c 	andhi	r3,r2,1024
   42378:	183f4f26 	beq	r3,zero,420b8 <_gp+0xfffe4f70>
   4237c:	2909c83a 	sub	r4,r5,r4
   42380:	3823883a 	mov	r17,r7
   42384:	003f0f06 	br	41fc4 <_gp+0xfffe4e7c>
   42388:	28001a26 	beq	r5,zero,423f4 <__addsf3+0x48c>
   4238c:	2008d0fa 	srli	r4,r4,3
   42390:	2080102c 	andhi	r2,r4,64
   42394:	10000526 	beq	r2,zero,423ac <__addsf3+0x444>
   42398:	280ad0fa 	srli	r5,r5,3
   4239c:	2880102c 	andhi	r2,r5,64
   423a0:	1000021e 	bne	r2,zero,423ac <__addsf3+0x444>
   423a4:	2809883a 	mov	r4,r5
   423a8:	3823883a 	mov	r17,r7
   423ac:	200890fa 	slli	r4,r4,3
   423b0:	04003fc4 	movi	r16,255
   423b4:	003f0306 	br	41fc4 <_gp+0xfffe4e7c>
   423b8:	01c03fc4 	movi	r7,255
   423bc:	31ffe01e 	bne	r6,r7,42340 <_gp+0xfffe51f8>
   423c0:	2809883a 	mov	r4,r5
   423c4:	3021883a 	mov	r16,r6
   423c8:	003efe06 	br	41fc4 <_gp+0xfffe4e7c>
   423cc:	20001126 	beq	r4,zero,42414 <__addsf3+0x4ac>
   423d0:	28000826 	beq	r5,zero,423f4 <__addsf3+0x48c>
   423d4:	2008d0fa 	srli	r4,r4,3
   423d8:	2080102c 	andhi	r2,r4,64
   423dc:	103ff326 	beq	r2,zero,423ac <_gp+0xfffe5264>
   423e0:	280ad0fa 	srli	r5,r5,3
   423e4:	2880102c 	andhi	r2,r5,64
   423e8:	103ff01e 	bne	r2,zero,423ac <_gp+0xfffe5264>
   423ec:	2809883a 	mov	r4,r5
   423f0:	003fee06 	br	423ac <_gp+0xfffe5264>
   423f4:	04003fc4 	movi	r16,255
   423f8:	003ef206 	br	41fc4 <_gp+0xfffe4e7c>
   423fc:	01000044 	movi	r4,1
   42400:	003f9706 	br	42260 <_gp+0xfffe5118>
   42404:	0005883a 	mov	r2,zero
   42408:	003f3406 	br	420dc <_gp+0xfffe4f94>
   4240c:	2809883a 	mov	r4,r5
   42410:	003eec06 	br	41fc4 <_gp+0xfffe4e7c>
   42414:	2809883a 	mov	r4,r5
   42418:	04003fc4 	movi	r16,255
   4241c:	003ee906 	br	41fc4 <_gp+0xfffe4e7c>
   42420:	00c00044 	movi	r3,1
   42424:	003fce06 	br	42360 <_gp+0xfffe5218>
   42428:	0005883a 	mov	r2,zero
   4242c:	003f4e06 	br	42168 <_gp+0xfffe5020>

00042430 <__divsf3>:
   42430:	defff504 	addi	sp,sp,-44
   42434:	200cd5fa 	srli	r6,r4,23
   42438:	dcc00415 	stw	r19,16(sp)
   4243c:	2026d7fa 	srli	r19,r4,31
   42440:	00c02034 	movhi	r3,128
   42444:	dd800715 	stw	r22,28(sp)
   42448:	dd000515 	stw	r20,20(sp)
   4244c:	dc800315 	stw	r18,12(sp)
   42450:	18ffffc4 	addi	r3,r3,-1
   42454:	dfc00a15 	stw	ra,40(sp)
   42458:	df000915 	stw	fp,36(sp)
   4245c:	ddc00815 	stw	r23,32(sp)
   42460:	dd400615 	stw	r21,24(sp)
   42464:	dc400215 	stw	r17,8(sp)
   42468:	dc000115 	stw	r16,4(sp)
   4246c:	35003fcc 	andi	r20,r6,255
   42470:	1924703a 	and	r18,r3,r4
   42474:	9d803fcc 	andi	r22,r19,255
   42478:	a0005226 	beq	r20,zero,425c4 <__divsf3+0x194>
   4247c:	00803fc4 	movi	r2,255
   42480:	a0802e26 	beq	r20,r2,4253c <__divsf3+0x10c>
   42484:	91002034 	orhi	r4,r18,128
   42488:	202490fa 	slli	r18,r4,3
   4248c:	a53fe044 	addi	r20,r20,-127
   42490:	0021883a 	mov	r16,zero
   42494:	002f883a 	mov	r23,zero
   42498:	280cd5fa 	srli	r6,r5,23
   4249c:	282ad7fa 	srli	r21,r5,31
   424a0:	00c02034 	movhi	r3,128
   424a4:	18ffffc4 	addi	r3,r3,-1
   424a8:	31803fcc 	andi	r6,r6,255
   424ac:	1962703a 	and	r17,r3,r5
   424b0:	af003fcc 	andi	fp,r21,255
   424b4:	30004a26 	beq	r6,zero,425e0 <__divsf3+0x1b0>
   424b8:	00803fc4 	movi	r2,255
   424bc:	30804526 	beq	r6,r2,425d4 <__divsf3+0x1a4>
   424c0:	89402034 	orhi	r5,r17,128
   424c4:	282290fa 	slli	r17,r5,3
   424c8:	31bfe044 	addi	r6,r6,-127
   424cc:	000b883a 	mov	r5,zero
   424d0:	2c20b03a 	or	r16,r5,r16
   424d4:	802090ba 	slli	r16,r16,2
   424d8:	00800134 	movhi	r2,4
   424dc:	10893f04 	addi	r2,r2,9468
   424e0:	80a1883a 	add	r16,r16,r2
   424e4:	81000017 	ldw	r4,0(r16)
   424e8:	9d46f03a 	xor	r3,r19,r21
   424ec:	180f883a 	mov	r7,r3
   424f0:	18803fcc 	andi	r2,r3,255
   424f4:	a18dc83a 	sub	r6,r20,r6
   424f8:	2000683a 	jmp	r4
   424fc:	000426e0 	cmpeqi	zero,zero,4251
   42500:	00042564 	muli	zero,zero,4245
   42504:	000426d4 	movui	zero,4251
   42508:	00042550 	cmplti	zero,zero,4245
   4250c:	000426d4 	movui	zero,4251
   42510:	000426ac 	andhi	zero,zero,4250
   42514:	000426d4 	movui	zero,4251
   42518:	00042550 	cmplti	zero,zero,4245
   4251c:	00042564 	muli	zero,zero,4245
   42520:	00042564 	muli	zero,zero,4245
   42524:	000426ac 	andhi	zero,zero,4250
   42528:	00042550 	cmplti	zero,zero,4245
   4252c:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42530:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42534:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42538:	00042774 	movhi	zero,4253
   4253c:	9000581e 	bne	r18,zero,426a0 <__divsf3+0x270>
   42540:	04000204 	movi	r16,8
   42544:	05c00084 	movi	r23,2
   42548:	003fd306 	br	42498 <_gp+0xfffe5350>
   4254c:	0023883a 	mov	r17,zero
   42550:	e02d883a 	mov	r22,fp
   42554:	282f883a 	mov	r23,r5
   42558:	00800084 	movi	r2,2
   4255c:	b8808f1e 	bne	r23,r2,4279c <__divsf3+0x36c>
   42560:	b005883a 	mov	r2,r22
   42564:	11c0004c 	andi	r7,r2,1
   42568:	013fffc4 	movi	r4,-1
   4256c:	000d883a 	mov	r6,zero
   42570:	21003fcc 	andi	r4,r4,255
   42574:	200895fa 	slli	r4,r4,23
   42578:	38803fcc 	andi	r2,r7,255
   4257c:	00c02034 	movhi	r3,128
   42580:	100497fa 	slli	r2,r2,31
   42584:	18ffffc4 	addi	r3,r3,-1
   42588:	30c6703a 	and	r3,r6,r3
   4258c:	1906b03a 	or	r3,r3,r4
   42590:	1884b03a 	or	r2,r3,r2
   42594:	dfc00a17 	ldw	ra,40(sp)
   42598:	df000917 	ldw	fp,36(sp)
   4259c:	ddc00817 	ldw	r23,32(sp)
   425a0:	dd800717 	ldw	r22,28(sp)
   425a4:	dd400617 	ldw	r21,24(sp)
   425a8:	dd000517 	ldw	r20,20(sp)
   425ac:	dcc00417 	ldw	r19,16(sp)
   425b0:	dc800317 	ldw	r18,12(sp)
   425b4:	dc400217 	ldw	r17,8(sp)
   425b8:	dc000117 	ldw	r16,4(sp)
   425bc:	dec00b04 	addi	sp,sp,44
   425c0:	f800283a 	ret
   425c4:	90002b1e 	bne	r18,zero,42674 <__divsf3+0x244>
   425c8:	04000104 	movi	r16,4
   425cc:	05c00044 	movi	r23,1
   425d0:	003fb106 	br	42498 <_gp+0xfffe5350>
   425d4:	8800251e 	bne	r17,zero,4266c <__divsf3+0x23c>
   425d8:	01400084 	movi	r5,2
   425dc:	00000206 	br	425e8 <__divsf3+0x1b8>
   425e0:	88001a1e 	bne	r17,zero,4264c <__divsf3+0x21c>
   425e4:	01400044 	movi	r5,1
   425e8:	8160b03a 	or	r16,r16,r5
   425ec:	802090ba 	slli	r16,r16,2
   425f0:	00c00134 	movhi	r3,4
   425f4:	18c98304 	addi	r3,r3,9740
   425f8:	80e1883a 	add	r16,r16,r3
   425fc:	80c00017 	ldw	r3,0(r16)
   42600:	9d44f03a 	xor	r2,r19,r21
   42604:	a18dc83a 	sub	r6,r20,r6
   42608:	1800683a 	jmp	r3
   4260c:	00042564 	muli	zero,zero,4245
   42610:	00042564 	muli	zero,zero,4245
   42614:	000427b0 	cmpltui	zero,zero,4254
   42618:	0004254c 	andi	zero,zero,4245
   4261c:	000427b0 	cmpltui	zero,zero,4254
   42620:	000426ac 	andhi	zero,zero,4250
   42624:	000427b0 	cmpltui	zero,zero,4254
   42628:	0004254c 	andi	zero,zero,4245
   4262c:	00042564 	muli	zero,zero,4245
   42630:	00042564 	muli	zero,zero,4245
   42634:	000426ac 	andhi	zero,zero,4250
   42638:	0004254c 	andi	zero,zero,4245
   4263c:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42640:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42644:	000427c0 	call	427c <__alt_mem_MemoriaDados+0x427c>
   42648:	000427d8 	cmpnei	zero,zero,4255
   4264c:	8809883a 	mov	r4,r17
   42650:	0045edc0 	call	45edc <__clzsi2>
   42654:	10fffec4 	addi	r3,r2,-5
   42658:	10801d84 	addi	r2,r2,118
   4265c:	88e2983a 	sll	r17,r17,r3
   42660:	008dc83a 	sub	r6,zero,r2
   42664:	000b883a 	mov	r5,zero
   42668:	003f9906 	br	424d0 <_gp+0xfffe5388>
   4266c:	014000c4 	movi	r5,3
   42670:	003f9706 	br	424d0 <_gp+0xfffe5388>
   42674:	9009883a 	mov	r4,r18
   42678:	d9400015 	stw	r5,0(sp)
   4267c:	0045edc0 	call	45edc <__clzsi2>
   42680:	10fffec4 	addi	r3,r2,-5
   42684:	11801d84 	addi	r6,r2,118
   42688:	90e4983a 	sll	r18,r18,r3
   4268c:	01a9c83a 	sub	r20,zero,r6
   42690:	0021883a 	mov	r16,zero
   42694:	002f883a 	mov	r23,zero
   42698:	d9400017 	ldw	r5,0(sp)
   4269c:	003f7e06 	br	42498 <_gp+0xfffe5350>
   426a0:	04000304 	movi	r16,12
   426a4:	05c000c4 	movi	r23,3
   426a8:	003f7b06 	br	42498 <_gp+0xfffe5350>
   426ac:	01802034 	movhi	r6,128
   426b0:	000f883a 	mov	r7,zero
   426b4:	31bfffc4 	addi	r6,r6,-1
   426b8:	013fffc4 	movi	r4,-1
   426bc:	003fac06 	br	42570 <_gp+0xfffe5428>
   426c0:	01400044 	movi	r5,1
   426c4:	2909c83a 	sub	r4,r5,r4
   426c8:	00c006c4 	movi	r3,27
   426cc:	19004b0e 	bge	r3,r4,427fc <__divsf3+0x3cc>
   426d0:	114e703a 	and	r7,r2,r5
   426d4:	0009883a 	mov	r4,zero
   426d8:	000d883a 	mov	r6,zero
   426dc:	003fa406 	br	42570 <_gp+0xfffe5428>
   426e0:	9006917a 	slli	r3,r18,5
   426e4:	8822917a 	slli	r17,r17,5
   426e8:	1c40372e 	bgeu	r3,r17,427c8 <__divsf3+0x398>
   426ec:	31bfffc4 	addi	r6,r6,-1
   426f0:	010006c4 	movi	r4,27
   426f4:	000b883a 	mov	r5,zero
   426f8:	180f883a 	mov	r7,r3
   426fc:	294b883a 	add	r5,r5,r5
   42700:	18c7883a 	add	r3,r3,r3
   42704:	38000116 	blt	r7,zero,4270c <__divsf3+0x2dc>
   42708:	1c400236 	bltu	r3,r17,42714 <__divsf3+0x2e4>
   4270c:	1c47c83a 	sub	r3,r3,r17
   42710:	29400054 	ori	r5,r5,1
   42714:	213fffc4 	addi	r4,r4,-1
   42718:	203ff71e 	bne	r4,zero,426f8 <_gp+0xfffe55b0>
   4271c:	1806c03a 	cmpne	r3,r3,zero
   42720:	1962b03a 	or	r17,r3,r5
   42724:	31001fc4 	addi	r4,r6,127
   42728:	013fe50e 	bge	zero,r4,426c0 <_gp+0xfffe5578>
   4272c:	88c001cc 	andi	r3,r17,7
   42730:	18000426 	beq	r3,zero,42744 <__divsf3+0x314>
   42734:	88c003cc 	andi	r3,r17,15
   42738:	01400104 	movi	r5,4
   4273c:	19400126 	beq	r3,r5,42744 <__divsf3+0x314>
   42740:	8963883a 	add	r17,r17,r5
   42744:	88c2002c 	andhi	r3,r17,2048
   42748:	18000426 	beq	r3,zero,4275c <__divsf3+0x32c>
   4274c:	00fe0034 	movhi	r3,63488
   42750:	18ffffc4 	addi	r3,r3,-1
   42754:	31002004 	addi	r4,r6,128
   42758:	88e2703a 	and	r17,r17,r3
   4275c:	00c03f84 	movi	r3,254
   42760:	193f8016 	blt	r3,r4,42564 <_gp+0xfffe541c>
   42764:	880c91ba 	slli	r6,r17,6
   42768:	11c0004c 	andi	r7,r2,1
   4276c:	300cd27a 	srli	r6,r6,9
   42770:	003f7f06 	br	42570 <_gp+0xfffe5428>
   42774:	9080102c 	andhi	r2,r18,64
   42778:	10000226 	beq	r2,zero,42784 <__divsf3+0x354>
   4277c:	8880102c 	andhi	r2,r17,64
   42780:	10001826 	beq	r2,zero,427e4 <__divsf3+0x3b4>
   42784:	00802034 	movhi	r2,128
   42788:	91801034 	orhi	r6,r18,64
   4278c:	10bfffc4 	addi	r2,r2,-1
   42790:	980f883a 	mov	r7,r19
   42794:	308c703a 	and	r6,r6,r2
   42798:	003fc706 	br	426b8 <_gp+0xfffe5570>
   4279c:	008000c4 	movi	r2,3
   427a0:	b8802d26 	beq	r23,r2,42858 <__divsf3+0x428>
   427a4:	00c00044 	movi	r3,1
   427a8:	b005883a 	mov	r2,r22
   427ac:	b8ffdd1e 	bne	r23,r3,42724 <_gp+0xfffe55dc>
   427b0:	11c0004c 	andi	r7,r2,1
   427b4:	0009883a 	mov	r4,zero
   427b8:	000d883a 	mov	r6,zero
   427bc:	003f6c06 	br	42570 <_gp+0xfffe5428>
   427c0:	9023883a 	mov	r17,r18
   427c4:	003f6406 	br	42558 <_gp+0xfffe5410>
   427c8:	1c47c83a 	sub	r3,r3,r17
   427cc:	01000684 	movi	r4,26
   427d0:	01400044 	movi	r5,1
   427d4:	003fc806 	br	426f8 <_gp+0xfffe55b0>
   427d8:	9080102c 	andhi	r2,r18,64
   427dc:	103fe926 	beq	r2,zero,42784 <_gp+0xfffe563c>
   427e0:	0023883a 	mov	r17,zero
   427e4:	00802034 	movhi	r2,128
   427e8:	89801034 	orhi	r6,r17,64
   427ec:	10bfffc4 	addi	r2,r2,-1
   427f0:	a80f883a 	mov	r7,r21
   427f4:	308c703a 	and	r6,r6,r2
   427f8:	003faf06 	br	426b8 <_gp+0xfffe5570>
   427fc:	01c00804 	movi	r7,32
   42800:	390fc83a 	sub	r7,r7,r4
   42804:	89ce983a 	sll	r7,r17,r7
   42808:	890ad83a 	srl	r5,r17,r4
   4280c:	380ec03a 	cmpne	r7,r7,zero
   42810:	29cab03a 	or	r5,r5,r7
   42814:	28c001cc 	andi	r3,r5,7
   42818:	18000426 	beq	r3,zero,4282c <__divsf3+0x3fc>
   4281c:	28c003cc 	andi	r3,r5,15
   42820:	01000104 	movi	r4,4
   42824:	19000126 	beq	r3,r4,4282c <__divsf3+0x3fc>
   42828:	290b883a 	add	r5,r5,r4
   4282c:	28c1002c 	andhi	r3,r5,1024
   42830:	18000426 	beq	r3,zero,42844 <__divsf3+0x414>
   42834:	11c0004c 	andi	r7,r2,1
   42838:	01000044 	movi	r4,1
   4283c:	000d883a 	mov	r6,zero
   42840:	003f4b06 	br	42570 <_gp+0xfffe5428>
   42844:	280a91ba 	slli	r5,r5,6
   42848:	11c0004c 	andi	r7,r2,1
   4284c:	0009883a 	mov	r4,zero
   42850:	280cd27a 	srli	r6,r5,9
   42854:	003f4606 	br	42570 <_gp+0xfffe5428>
   42858:	00802034 	movhi	r2,128
   4285c:	89801034 	orhi	r6,r17,64
   42860:	10bfffc4 	addi	r2,r2,-1
   42864:	b00f883a 	mov	r7,r22
   42868:	308c703a 	and	r6,r6,r2
   4286c:	003f9206 	br	426b8 <_gp+0xfffe5570>

00042870 <__eqsf2>:
   42870:	2006d5fa 	srli	r3,r4,23
   42874:	280cd5fa 	srli	r6,r5,23
   42878:	01c02034 	movhi	r7,128
   4287c:	39ffffc4 	addi	r7,r7,-1
   42880:	18c03fcc 	andi	r3,r3,255
   42884:	02003fc4 	movi	r8,255
   42888:	3904703a 	and	r2,r7,r4
   4288c:	31803fcc 	andi	r6,r6,255
   42890:	394e703a 	and	r7,r7,r5
   42894:	2008d7fa 	srli	r4,r4,31
   42898:	280ad7fa 	srli	r5,r5,31
   4289c:	1a000d26 	beq	r3,r8,428d4 <__eqsf2+0x64>
   428a0:	02003fc4 	movi	r8,255
   428a4:	32000826 	beq	r6,r8,428c8 <__eqsf2+0x58>
   428a8:	19800226 	beq	r3,r6,428b4 <__eqsf2+0x44>
   428ac:	00800044 	movi	r2,1
   428b0:	f800283a 	ret
   428b4:	11fffd1e 	bne	r2,r7,428ac <_gp+0xfffe5764>
   428b8:	21400926 	beq	r4,r5,428e0 <__eqsf2+0x70>
   428bc:	183ffb1e 	bne	r3,zero,428ac <_gp+0xfffe5764>
   428c0:	1004c03a 	cmpne	r2,r2,zero
   428c4:	f800283a 	ret
   428c8:	383ff726 	beq	r7,zero,428a8 <_gp+0xfffe5760>
   428cc:	00800044 	movi	r2,1
   428d0:	f800283a 	ret
   428d4:	103ff226 	beq	r2,zero,428a0 <_gp+0xfffe5758>
   428d8:	00800044 	movi	r2,1
   428dc:	f800283a 	ret
   428e0:	0005883a 	mov	r2,zero
   428e4:	f800283a 	ret

000428e8 <__gesf2>:
   428e8:	2004d5fa 	srli	r2,r4,23
   428ec:	2806d5fa 	srli	r3,r5,23
   428f0:	01802034 	movhi	r6,128
   428f4:	31bfffc4 	addi	r6,r6,-1
   428f8:	10803fcc 	andi	r2,r2,255
   428fc:	01c03fc4 	movi	r7,255
   42900:	3110703a 	and	r8,r6,r4
   42904:	18c03fcc 	andi	r3,r3,255
   42908:	314c703a 	and	r6,r6,r5
   4290c:	2008d7fa 	srli	r4,r4,31
   42910:	280ad7fa 	srli	r5,r5,31
   42914:	11c01926 	beq	r2,r7,4297c <__gesf2+0x94>
   42918:	01c03fc4 	movi	r7,255
   4291c:	19c00f26 	beq	r3,r7,4295c <__gesf2+0x74>
   42920:	1000061e 	bne	r2,zero,4293c <__gesf2+0x54>
   42924:	400f003a 	cmpeq	r7,r8,zero
   42928:	1800071e 	bne	r3,zero,42948 <__gesf2+0x60>
   4292c:	3000061e 	bne	r6,zero,42948 <__gesf2+0x60>
   42930:	0005883a 	mov	r2,zero
   42934:	40000e1e 	bne	r8,zero,42970 <__gesf2+0x88>
   42938:	f800283a 	ret
   4293c:	18000a1e 	bne	r3,zero,42968 <__gesf2+0x80>
   42940:	30000b26 	beq	r6,zero,42970 <__gesf2+0x88>
   42944:	000f883a 	mov	r7,zero
   42948:	29403fcc 	andi	r5,r5,255
   4294c:	38000726 	beq	r7,zero,4296c <__gesf2+0x84>
   42950:	28000826 	beq	r5,zero,42974 <__gesf2+0x8c>
   42954:	00800044 	movi	r2,1
   42958:	f800283a 	ret
   4295c:	303ff026 	beq	r6,zero,42920 <_gp+0xfffe57d8>
   42960:	00bfff84 	movi	r2,-2
   42964:	f800283a 	ret
   42968:	29403fcc 	andi	r5,r5,255
   4296c:	21400526 	beq	r4,r5,42984 <__gesf2+0x9c>
   42970:	203ff826 	beq	r4,zero,42954 <_gp+0xfffe580c>
   42974:	00bfffc4 	movi	r2,-1
   42978:	f800283a 	ret
   4297c:	403fe626 	beq	r8,zero,42918 <_gp+0xfffe57d0>
   42980:	003ff706 	br	42960 <_gp+0xfffe5818>
   42984:	18bffa16 	blt	r3,r2,42970 <_gp+0xfffe5828>
   42988:	10c00216 	blt	r2,r3,42994 <__gesf2+0xac>
   4298c:	323ff836 	bltu	r6,r8,42970 <_gp+0xfffe5828>
   42990:	4180022e 	bgeu	r8,r6,4299c <__gesf2+0xb4>
   42994:	203fef1e 	bne	r4,zero,42954 <_gp+0xfffe580c>
   42998:	003ff606 	br	42974 <_gp+0xfffe582c>
   4299c:	0005883a 	mov	r2,zero
   429a0:	f800283a 	ret

000429a4 <__lesf2>:
   429a4:	2004d5fa 	srli	r2,r4,23
   429a8:	280cd5fa 	srli	r6,r5,23
   429ac:	00c02034 	movhi	r3,128
   429b0:	18ffffc4 	addi	r3,r3,-1
   429b4:	10803fcc 	andi	r2,r2,255
   429b8:	01c03fc4 	movi	r7,255
   429bc:	1910703a 	and	r8,r3,r4
   429c0:	31803fcc 	andi	r6,r6,255
   429c4:	1946703a 	and	r3,r3,r5
   429c8:	2008d7fa 	srli	r4,r4,31
   429cc:	280ad7fa 	srli	r5,r5,31
   429d0:	11c01b26 	beq	r2,r7,42a40 <__lesf2+0x9c>
   429d4:	01c03fc4 	movi	r7,255
   429d8:	31c01126 	beq	r6,r7,42a20 <__lesf2+0x7c>
   429dc:	1000071e 	bne	r2,zero,429fc <__lesf2+0x58>
   429e0:	400f003a 	cmpeq	r7,r8,zero
   429e4:	21003fcc 	andi	r4,r4,255
   429e8:	3000081e 	bne	r6,zero,42a0c <__lesf2+0x68>
   429ec:	1800071e 	bne	r3,zero,42a0c <__lesf2+0x68>
   429f0:	0005883a 	mov	r2,zero
   429f4:	40000f1e 	bne	r8,zero,42a34 <__lesf2+0x90>
   429f8:	f800283a 	ret
   429fc:	21003fcc 	andi	r4,r4,255
   42a00:	30000a1e 	bne	r6,zero,42a2c <__lesf2+0x88>
   42a04:	18000b26 	beq	r3,zero,42a34 <__lesf2+0x90>
   42a08:	000f883a 	mov	r7,zero
   42a0c:	29403fcc 	andi	r5,r5,255
   42a10:	38000726 	beq	r7,zero,42a30 <__lesf2+0x8c>
   42a14:	28000826 	beq	r5,zero,42a38 <__lesf2+0x94>
   42a18:	00800044 	movi	r2,1
   42a1c:	f800283a 	ret
   42a20:	183fee26 	beq	r3,zero,429dc <_gp+0xfffe5894>
   42a24:	00800084 	movi	r2,2
   42a28:	f800283a 	ret
   42a2c:	29403fcc 	andi	r5,r5,255
   42a30:	21400626 	beq	r4,r5,42a4c <__lesf2+0xa8>
   42a34:	203ff826 	beq	r4,zero,42a18 <_gp+0xfffe58d0>
   42a38:	00bfffc4 	movi	r2,-1
   42a3c:	f800283a 	ret
   42a40:	403fe426 	beq	r8,zero,429d4 <_gp+0xfffe588c>
   42a44:	00800084 	movi	r2,2
   42a48:	f800283a 	ret
   42a4c:	30bff916 	blt	r6,r2,42a34 <_gp+0xfffe58ec>
   42a50:	11800216 	blt	r2,r6,42a5c <__lesf2+0xb8>
   42a54:	1a3ff736 	bltu	r3,r8,42a34 <_gp+0xfffe58ec>
   42a58:	40c0022e 	bgeu	r8,r3,42a64 <__lesf2+0xc0>
   42a5c:	203fee1e 	bne	r4,zero,42a18 <_gp+0xfffe58d0>
   42a60:	003ff506 	br	42a38 <_gp+0xfffe58f0>
   42a64:	0005883a 	mov	r2,zero
   42a68:	f800283a 	ret

00042a6c <__mulsf3>:
   42a6c:	defff504 	addi	sp,sp,-44
   42a70:	dc000115 	stw	r16,4(sp)
   42a74:	2020d5fa 	srli	r16,r4,23
   42a78:	dd400615 	stw	r21,24(sp)
   42a7c:	202ad7fa 	srli	r21,r4,31
   42a80:	dc800315 	stw	r18,12(sp)
   42a84:	04802034 	movhi	r18,128
   42a88:	df000915 	stw	fp,36(sp)
   42a8c:	dd000515 	stw	r20,20(sp)
   42a90:	94bfffc4 	addi	r18,r18,-1
   42a94:	dfc00a15 	stw	ra,40(sp)
   42a98:	ddc00815 	stw	r23,32(sp)
   42a9c:	dd800715 	stw	r22,28(sp)
   42aa0:	dcc00415 	stw	r19,16(sp)
   42aa4:	dc400215 	stw	r17,8(sp)
   42aa8:	84003fcc 	andi	r16,r16,255
   42aac:	9124703a 	and	r18,r18,r4
   42ab0:	a829883a 	mov	r20,r21
   42ab4:	af003fcc 	andi	fp,r21,255
   42ab8:	80005426 	beq	r16,zero,42c0c <__mulsf3+0x1a0>
   42abc:	00803fc4 	movi	r2,255
   42ac0:	80802f26 	beq	r16,r2,42b80 <__mulsf3+0x114>
   42ac4:	91002034 	orhi	r4,r18,128
   42ac8:	202490fa 	slli	r18,r4,3
   42acc:	843fe044 	addi	r16,r16,-127
   42ad0:	0023883a 	mov	r17,zero
   42ad4:	002f883a 	mov	r23,zero
   42ad8:	2804d5fa 	srli	r2,r5,23
   42adc:	282cd7fa 	srli	r22,r5,31
   42ae0:	01002034 	movhi	r4,128
   42ae4:	213fffc4 	addi	r4,r4,-1
   42ae8:	10803fcc 	andi	r2,r2,255
   42aec:	2166703a 	and	r19,r4,r5
   42af0:	b1803fcc 	andi	r6,r22,255
   42af4:	10004c26 	beq	r2,zero,42c28 <__mulsf3+0x1bc>
   42af8:	00c03fc4 	movi	r3,255
   42afc:	10c04726 	beq	r2,r3,42c1c <__mulsf3+0x1b0>
   42b00:	99002034 	orhi	r4,r19,128
   42b04:	202690fa 	slli	r19,r4,3
   42b08:	10bfe044 	addi	r2,r2,-127
   42b0c:	0007883a 	mov	r3,zero
   42b10:	80a1883a 	add	r16,r16,r2
   42b14:	010003c4 	movi	r4,15
   42b18:	1c44b03a 	or	r2,r3,r17
   42b1c:	b56af03a 	xor	r21,r22,r21
   42b20:	81c00044 	addi	r7,r16,1
   42b24:	20806b36 	bltu	r4,r2,42cd4 <__mulsf3+0x268>
   42b28:	100490ba 	slli	r2,r2,2
   42b2c:	01000134 	movhi	r4,4
   42b30:	210ad004 	addi	r4,r4,11072
   42b34:	1105883a 	add	r2,r2,r4
   42b38:	10800017 	ldw	r2,0(r2)
   42b3c:	1000683a 	jmp	r2
   42b40:	00042cd4 	movui	zero,4275
   42b44:	00042b94 	movui	zero,4270
   42b48:	00042b94 	movui	zero,4270
   42b4c:	00042b90 	cmplti	zero,zero,4270
   42b50:	00042cb8 	rdprs	zero,zero,4274
   42b54:	00042cb8 	rdprs	zero,zero,4274
   42b58:	00042ca4 	muli	zero,zero,4274
   42b5c:	00042b90 	cmplti	zero,zero,4270
   42b60:	00042cb8 	rdprs	zero,zero,4274
   42b64:	00042ca4 	muli	zero,zero,4274
   42b68:	00042cb8 	rdprs	zero,zero,4274
   42b6c:	00042b90 	cmplti	zero,zero,4270
   42b70:	00042cc4 	movi	zero,4275
   42b74:	00042cc4 	movi	zero,4275
   42b78:	00042cc4 	movi	zero,4275
   42b7c:	00042dd4 	movui	zero,4279
   42b80:	90003b1e 	bne	r18,zero,42c70 <__mulsf3+0x204>
   42b84:	04400204 	movi	r17,8
   42b88:	05c00084 	movi	r23,2
   42b8c:	003fd206 	br	42ad8 <_gp+0xfffe5990>
   42b90:	302b883a 	mov	r21,r6
   42b94:	00800084 	movi	r2,2
   42b98:	18802626 	beq	r3,r2,42c34 <__mulsf3+0x1c8>
   42b9c:	008000c4 	movi	r2,3
   42ba0:	1880b826 	beq	r3,r2,42e84 <__mulsf3+0x418>
   42ba4:	00800044 	movi	r2,1
   42ba8:	1880af1e 	bne	r3,r2,42e68 <__mulsf3+0x3fc>
   42bac:	a829883a 	mov	r20,r21
   42bb0:	0007883a 	mov	r3,zero
   42bb4:	0009883a 	mov	r4,zero
   42bb8:	18803fcc 	andi	r2,r3,255
   42bbc:	100695fa 	slli	r3,r2,23
   42bc0:	a0803fcc 	andi	r2,r20,255
   42bc4:	100a97fa 	slli	r5,r2,31
   42bc8:	00802034 	movhi	r2,128
   42bcc:	10bfffc4 	addi	r2,r2,-1
   42bd0:	2084703a 	and	r2,r4,r2
   42bd4:	10c4b03a 	or	r2,r2,r3
   42bd8:	1144b03a 	or	r2,r2,r5
   42bdc:	dfc00a17 	ldw	ra,40(sp)
   42be0:	df000917 	ldw	fp,36(sp)
   42be4:	ddc00817 	ldw	r23,32(sp)
   42be8:	dd800717 	ldw	r22,28(sp)
   42bec:	dd400617 	ldw	r21,24(sp)
   42bf0:	dd000517 	ldw	r20,20(sp)
   42bf4:	dcc00417 	ldw	r19,16(sp)
   42bf8:	dc800317 	ldw	r18,12(sp)
   42bfc:	dc400217 	ldw	r17,8(sp)
   42c00:	dc000117 	ldw	r16,4(sp)
   42c04:	dec00b04 	addi	sp,sp,44
   42c08:	f800283a 	ret
   42c0c:	90000d1e 	bne	r18,zero,42c44 <__mulsf3+0x1d8>
   42c10:	04400104 	movi	r17,4
   42c14:	05c00044 	movi	r23,1
   42c18:	003faf06 	br	42ad8 <_gp+0xfffe5990>
   42c1c:	9806c03a 	cmpne	r3,r19,zero
   42c20:	18c00084 	addi	r3,r3,2
   42c24:	003fba06 	br	42b10 <_gp+0xfffe59c8>
   42c28:	9800141e 	bne	r19,zero,42c7c <__mulsf3+0x210>
   42c2c:	00c00044 	movi	r3,1
   42c30:	003fb706 	br	42b10 <_gp+0xfffe59c8>
   42c34:	a829883a 	mov	r20,r21
   42c38:	00ffffc4 	movi	r3,-1
   42c3c:	0009883a 	mov	r4,zero
   42c40:	003fdd06 	br	42bb8 <_gp+0xfffe5a70>
   42c44:	9009883a 	mov	r4,r18
   42c48:	d9400015 	stw	r5,0(sp)
   42c4c:	0045edc0 	call	45edc <__clzsi2>
   42c50:	10fffec4 	addi	r3,r2,-5
   42c54:	10801d84 	addi	r2,r2,118
   42c58:	90e4983a 	sll	r18,r18,r3
   42c5c:	00a1c83a 	sub	r16,zero,r2
   42c60:	0023883a 	mov	r17,zero
   42c64:	002f883a 	mov	r23,zero
   42c68:	d9400017 	ldw	r5,0(sp)
   42c6c:	003f9a06 	br	42ad8 <_gp+0xfffe5990>
   42c70:	04400304 	movi	r17,12
   42c74:	05c000c4 	movi	r23,3
   42c78:	003f9706 	br	42ad8 <_gp+0xfffe5990>
   42c7c:	9809883a 	mov	r4,r19
   42c80:	d9800015 	stw	r6,0(sp)
   42c84:	0045edc0 	call	45edc <__clzsi2>
   42c88:	10fffec4 	addi	r3,r2,-5
   42c8c:	10801d84 	addi	r2,r2,118
   42c90:	98e6983a 	sll	r19,r19,r3
   42c94:	0085c83a 	sub	r2,zero,r2
   42c98:	0007883a 	mov	r3,zero
   42c9c:	d9800017 	ldw	r6,0(sp)
   42ca0:	003f9b06 	br	42b10 <_gp+0xfffe59c8>
   42ca4:	01002034 	movhi	r4,128
   42ca8:	0029883a 	mov	r20,zero
   42cac:	213fffc4 	addi	r4,r4,-1
   42cb0:	00ffffc4 	movi	r3,-1
   42cb4:	003fc006 	br	42bb8 <_gp+0xfffe5a70>
   42cb8:	9027883a 	mov	r19,r18
   42cbc:	b807883a 	mov	r3,r23
   42cc0:	003fb406 	br	42b94 <_gp+0xfffe5a4c>
   42cc4:	9027883a 	mov	r19,r18
   42cc8:	e02b883a 	mov	r21,fp
   42ccc:	b807883a 	mov	r3,r23
   42cd0:	003fb006 	br	42b94 <_gp+0xfffe5a4c>
   42cd4:	9028d43a 	srli	r20,r18,16
   42cd8:	982cd43a 	srli	r22,r19,16
   42cdc:	94bfffcc 	andi	r18,r18,65535
   42ce0:	9cffffcc 	andi	r19,r19,65535
   42ce4:	980b883a 	mov	r5,r19
   42ce8:	9009883a 	mov	r4,r18
   42cec:	d9c00015 	stw	r7,0(sp)
   42cf0:	0041f400 	call	41f40 <__mulsi3>
   42cf4:	a00b883a 	mov	r5,r20
   42cf8:	9809883a 	mov	r4,r19
   42cfc:	1023883a 	mov	r17,r2
   42d00:	0041f400 	call	41f40 <__mulsi3>
   42d04:	a009883a 	mov	r4,r20
   42d08:	b00b883a 	mov	r5,r22
   42d0c:	1027883a 	mov	r19,r2
   42d10:	0041f400 	call	41f40 <__mulsi3>
   42d14:	b00b883a 	mov	r5,r22
   42d18:	9009883a 	mov	r4,r18
   42d1c:	1029883a 	mov	r20,r2
   42d20:	0041f400 	call	41f40 <__mulsi3>
   42d24:	8806d43a 	srli	r3,r17,16
   42d28:	14c5883a 	add	r2,r2,r19
   42d2c:	d9c00017 	ldw	r7,0(sp)
   42d30:	1885883a 	add	r2,r3,r2
   42d34:	14c0022e 	bgeu	r2,r19,42d40 <__mulsf3+0x2d4>
   42d38:	00c00074 	movhi	r3,1
   42d3c:	a0e9883a 	add	r20,r20,r3
   42d40:	1026943a 	slli	r19,r2,16
   42d44:	8c7fffcc 	andi	r17,r17,65535
   42d48:	1004d43a 	srli	r2,r2,16
   42d4c:	9c63883a 	add	r17,r19,r17
   42d50:	882691ba 	slli	r19,r17,6
   42d54:	1505883a 	add	r2,r2,r20
   42d58:	8822d6ba 	srli	r17,r17,26
   42d5c:	100891ba 	slli	r4,r2,6
   42d60:	9826c03a 	cmpne	r19,r19,zero
   42d64:	9c62b03a 	or	r17,r19,r17
   42d68:	8926b03a 	or	r19,r17,r4
   42d6c:	9882002c 	andhi	r2,r19,2048
   42d70:	10000426 	beq	r2,zero,42d84 <__mulsf3+0x318>
   42d74:	9804d07a 	srli	r2,r19,1
   42d78:	9900004c 	andi	r4,r19,1
   42d7c:	3821883a 	mov	r16,r7
   42d80:	1126b03a 	or	r19,r2,r4
   42d84:	80c01fc4 	addi	r3,r16,127
   42d88:	00c0210e 	bge	zero,r3,42e10 <__mulsf3+0x3a4>
   42d8c:	988001cc 	andi	r2,r19,7
   42d90:	10000426 	beq	r2,zero,42da4 <__mulsf3+0x338>
   42d94:	988003cc 	andi	r2,r19,15
   42d98:	01000104 	movi	r4,4
   42d9c:	11000126 	beq	r2,r4,42da4 <__mulsf3+0x338>
   42da0:	9927883a 	add	r19,r19,r4
   42da4:	9882002c 	andhi	r2,r19,2048
   42da8:	10000426 	beq	r2,zero,42dbc <__mulsf3+0x350>
   42dac:	00be0034 	movhi	r2,63488
   42db0:	10bfffc4 	addi	r2,r2,-1
   42db4:	80c02004 	addi	r3,r16,128
   42db8:	98a6703a 	and	r19,r19,r2
   42dbc:	00803f84 	movi	r2,254
   42dc0:	10ff9c16 	blt	r2,r3,42c34 <_gp+0xfffe5aec>
   42dc4:	980891ba 	slli	r4,r19,6
   42dc8:	a829883a 	mov	r20,r21
   42dcc:	2008d27a 	srli	r4,r4,9
   42dd0:	003f7906 	br	42bb8 <_gp+0xfffe5a70>
   42dd4:	9080102c 	andhi	r2,r18,64
   42dd8:	10000826 	beq	r2,zero,42dfc <__mulsf3+0x390>
   42ddc:	9880102c 	andhi	r2,r19,64
   42de0:	1000061e 	bne	r2,zero,42dfc <__mulsf3+0x390>
   42de4:	00802034 	movhi	r2,128
   42de8:	99001034 	orhi	r4,r19,64
   42dec:	10bfffc4 	addi	r2,r2,-1
   42df0:	b029883a 	mov	r20,r22
   42df4:	2088703a 	and	r4,r4,r2
   42df8:	003fad06 	br	42cb0 <_gp+0xfffe5b68>
   42dfc:	00802034 	movhi	r2,128
   42e00:	91001034 	orhi	r4,r18,64
   42e04:	10bfffc4 	addi	r2,r2,-1
   42e08:	2088703a 	and	r4,r4,r2
   42e0c:	003fa806 	br	42cb0 <_gp+0xfffe5b68>
   42e10:	00800044 	movi	r2,1
   42e14:	10c7c83a 	sub	r3,r2,r3
   42e18:	008006c4 	movi	r2,27
   42e1c:	10ff6316 	blt	r2,r3,42bac <_gp+0xfffe5a64>
   42e20:	00800804 	movi	r2,32
   42e24:	10c5c83a 	sub	r2,r2,r3
   42e28:	9884983a 	sll	r2,r19,r2
   42e2c:	98c6d83a 	srl	r3,r19,r3
   42e30:	1004c03a 	cmpne	r2,r2,zero
   42e34:	1884b03a 	or	r2,r3,r2
   42e38:	10c001cc 	andi	r3,r2,7
   42e3c:	18000426 	beq	r3,zero,42e50 <__mulsf3+0x3e4>
   42e40:	10c003cc 	andi	r3,r2,15
   42e44:	01000104 	movi	r4,4
   42e48:	19000126 	beq	r3,r4,42e50 <__mulsf3+0x3e4>
   42e4c:	1105883a 	add	r2,r2,r4
   42e50:	10c1002c 	andhi	r3,r2,1024
   42e54:	18000626 	beq	r3,zero,42e70 <__mulsf3+0x404>
   42e58:	a829883a 	mov	r20,r21
   42e5c:	00c00044 	movi	r3,1
   42e60:	0009883a 	mov	r4,zero
   42e64:	003f5406 	br	42bb8 <_gp+0xfffe5a70>
   42e68:	3821883a 	mov	r16,r7
   42e6c:	003fc506 	br	42d84 <_gp+0xfffe5c3c>
   42e70:	100491ba 	slli	r2,r2,6
   42e74:	a829883a 	mov	r20,r21
   42e78:	0007883a 	mov	r3,zero
   42e7c:	1008d27a 	srli	r4,r2,9
   42e80:	003f4d06 	br	42bb8 <_gp+0xfffe5a70>
   42e84:	00802034 	movhi	r2,128
   42e88:	99001034 	orhi	r4,r19,64
   42e8c:	10bfffc4 	addi	r2,r2,-1
   42e90:	a829883a 	mov	r20,r21
   42e94:	2088703a 	and	r4,r4,r2
   42e98:	003f8506 	br	42cb0 <_gp+0xfffe5b68>

00042e9c <__subsf3>:
   42e9c:	defffc04 	addi	sp,sp,-16
   42ea0:	280cd5fa 	srli	r6,r5,23
   42ea4:	dc000015 	stw	r16,0(sp)
   42ea8:	01c02034 	movhi	r7,128
   42eac:	2020d5fa 	srli	r16,r4,23
   42eb0:	39ffffc4 	addi	r7,r7,-1
   42eb4:	3906703a 	and	r3,r7,r4
   42eb8:	dc400115 	stw	r17,4(sp)
   42ebc:	394e703a 	and	r7,r7,r5
   42ec0:	2022d7fa 	srli	r17,r4,31
   42ec4:	dfc00315 	stw	ra,12(sp)
   42ec8:	dc800215 	stw	r18,8(sp)
   42ecc:	31803fcc 	andi	r6,r6,255
   42ed0:	01003fc4 	movi	r4,255
   42ed4:	84003fcc 	andi	r16,r16,255
   42ed8:	180690fa 	slli	r3,r3,3
   42edc:	2804d7fa 	srli	r2,r5,31
   42ee0:	380e90fa 	slli	r7,r7,3
   42ee4:	31006d26 	beq	r6,r4,4309c <__subsf3+0x200>
   42ee8:	1080005c 	xori	r2,r2,1
   42eec:	8189c83a 	sub	r4,r16,r6
   42ef0:	14404f26 	beq	r2,r17,43030 <__subsf3+0x194>
   42ef4:	0100770e 	bge	zero,r4,430d4 <__subsf3+0x238>
   42ef8:	30001e1e 	bne	r6,zero,42f74 <__subsf3+0xd8>
   42efc:	38006a1e 	bne	r7,zero,430a8 <__subsf3+0x20c>
   42f00:	188001cc 	andi	r2,r3,7
   42f04:	10000426 	beq	r2,zero,42f18 <__subsf3+0x7c>
   42f08:	188003cc 	andi	r2,r3,15
   42f0c:	01000104 	movi	r4,4
   42f10:	11000126 	beq	r2,r4,42f18 <__subsf3+0x7c>
   42f14:	1907883a 	add	r3,r3,r4
   42f18:	1881002c 	andhi	r2,r3,1024
   42f1c:	10003926 	beq	r2,zero,43004 <__subsf3+0x168>
   42f20:	84000044 	addi	r16,r16,1
   42f24:	00803fc4 	movi	r2,255
   42f28:	80807526 	beq	r16,r2,43100 <__subsf3+0x264>
   42f2c:	180691ba 	slli	r3,r3,6
   42f30:	8880004c 	andi	r2,r17,1
   42f34:	180ad27a 	srli	r5,r3,9
   42f38:	84003fcc 	andi	r16,r16,255
   42f3c:	800695fa 	slli	r3,r16,23
   42f40:	10803fcc 	andi	r2,r2,255
   42f44:	01002034 	movhi	r4,128
   42f48:	213fffc4 	addi	r4,r4,-1
   42f4c:	100497fa 	slli	r2,r2,31
   42f50:	2920703a 	and	r16,r5,r4
   42f54:	80e0b03a 	or	r16,r16,r3
   42f58:	8084b03a 	or	r2,r16,r2
   42f5c:	dfc00317 	ldw	ra,12(sp)
   42f60:	dc800217 	ldw	r18,8(sp)
   42f64:	dc400117 	ldw	r17,4(sp)
   42f68:	dc000017 	ldw	r16,0(sp)
   42f6c:	dec00404 	addi	sp,sp,16
   42f70:	f800283a 	ret
   42f74:	00803fc4 	movi	r2,255
   42f78:	80bfe126 	beq	r16,r2,42f00 <_gp+0xfffe5db8>
   42f7c:	39c10034 	orhi	r7,r7,1024
   42f80:	008006c4 	movi	r2,27
   42f84:	11007416 	blt	r2,r4,43158 <__subsf3+0x2bc>
   42f88:	00800804 	movi	r2,32
   42f8c:	1105c83a 	sub	r2,r2,r4
   42f90:	3884983a 	sll	r2,r7,r2
   42f94:	390ed83a 	srl	r7,r7,r4
   42f98:	1008c03a 	cmpne	r4,r2,zero
   42f9c:	390eb03a 	or	r7,r7,r4
   42fa0:	19c7c83a 	sub	r3,r3,r7
   42fa4:	1881002c 	andhi	r2,r3,1024
   42fa8:	10001426 	beq	r2,zero,42ffc <__subsf3+0x160>
   42fac:	04810034 	movhi	r18,1024
   42fb0:	94bfffc4 	addi	r18,r18,-1
   42fb4:	1ca4703a 	and	r18,r3,r18
   42fb8:	9009883a 	mov	r4,r18
   42fbc:	0045edc0 	call	45edc <__clzsi2>
   42fc0:	10bffec4 	addi	r2,r2,-5
   42fc4:	90a4983a 	sll	r18,r18,r2
   42fc8:	14005116 	blt	r2,r16,43110 <__subsf3+0x274>
   42fcc:	1405c83a 	sub	r2,r2,r16
   42fd0:	10c00044 	addi	r3,r2,1
   42fd4:	00800804 	movi	r2,32
   42fd8:	10c5c83a 	sub	r2,r2,r3
   42fdc:	9084983a 	sll	r2,r18,r2
   42fe0:	90e4d83a 	srl	r18,r18,r3
   42fe4:	0021883a 	mov	r16,zero
   42fe8:	1006c03a 	cmpne	r3,r2,zero
   42fec:	90c6b03a 	or	r3,r18,r3
   42ff0:	003fc306 	br	42f00 <_gp+0xfffe5db8>
   42ff4:	2000e026 	beq	r4,zero,43378 <__subsf3+0x4dc>
   42ff8:	2007883a 	mov	r3,r4
   42ffc:	188001cc 	andi	r2,r3,7
   43000:	103fc11e 	bne	r2,zero,42f08 <_gp+0xfffe5dc0>
   43004:	180ad0fa 	srli	r5,r3,3
   43008:	00c03fc4 	movi	r3,255
   4300c:	8880004c 	andi	r2,r17,1
   43010:	80c0031e 	bne	r16,r3,43020 <__subsf3+0x184>
   43014:	28006d26 	beq	r5,zero,431cc <__subsf3+0x330>
   43018:	29401034 	orhi	r5,r5,64
   4301c:	043fffc4 	movi	r16,-1
   43020:	00c02034 	movhi	r3,128
   43024:	18ffffc4 	addi	r3,r3,-1
   43028:	28ca703a 	and	r5,r5,r3
   4302c:	003fc206 	br	42f38 <_gp+0xfffe5df0>
   43030:	01003c0e 	bge	zero,r4,43124 <__subsf3+0x288>
   43034:	30002126 	beq	r6,zero,430bc <__subsf3+0x220>
   43038:	01403fc4 	movi	r5,255
   4303c:	817fb026 	beq	r16,r5,42f00 <_gp+0xfffe5db8>
   43040:	39c10034 	orhi	r7,r7,1024
   43044:	014006c4 	movi	r5,27
   43048:	29007416 	blt	r5,r4,4321c <__subsf3+0x380>
   4304c:	01400804 	movi	r5,32
   43050:	290bc83a 	sub	r5,r5,r4
   43054:	394a983a 	sll	r5,r7,r5
   43058:	390ed83a 	srl	r7,r7,r4
   4305c:	2808c03a 	cmpne	r4,r5,zero
   43060:	390eb03a 	or	r7,r7,r4
   43064:	19c7883a 	add	r3,r3,r7
   43068:	1901002c 	andhi	r4,r3,1024
   4306c:	20003826 	beq	r4,zero,43150 <__subsf3+0x2b4>
   43070:	84000044 	addi	r16,r16,1
   43074:	01003fc4 	movi	r4,255
   43078:	81005426 	beq	r16,r4,431cc <__subsf3+0x330>
   4307c:	1023883a 	mov	r17,r2
   43080:	00bf0034 	movhi	r2,64512
   43084:	10bfffc4 	addi	r2,r2,-1
   43088:	1900004c 	andi	r4,r3,1
   4308c:	1886703a 	and	r3,r3,r2
   43090:	1806d07a 	srli	r3,r3,1
   43094:	1906b03a 	or	r3,r3,r4
   43098:	003f9906 	br	42f00 <_gp+0xfffe5db8>
   4309c:	383f9226 	beq	r7,zero,42ee8 <_gp+0xfffe5da0>
   430a0:	10803fcc 	andi	r2,r2,255
   430a4:	003f9106 	br	42eec <_gp+0xfffe5da4>
   430a8:	213fffc4 	addi	r4,r4,-1
   430ac:	203fbc26 	beq	r4,zero,42fa0 <_gp+0xfffe5e58>
   430b0:	00803fc4 	movi	r2,255
   430b4:	80bfb21e 	bne	r16,r2,42f80 <_gp+0xfffe5e38>
   430b8:	003f9106 	br	42f00 <_gp+0xfffe5db8>
   430bc:	383f9026 	beq	r7,zero,42f00 <_gp+0xfffe5db8>
   430c0:	213fffc4 	addi	r4,r4,-1
   430c4:	203fe726 	beq	r4,zero,43064 <_gp+0xfffe5f1c>
   430c8:	01403fc4 	movi	r5,255
   430cc:	817fdd1e 	bne	r16,r5,43044 <_gp+0xfffe5efc>
   430d0:	003f8b06 	br	42f00 <_gp+0xfffe5db8>
   430d4:	2000221e 	bne	r4,zero,43160 <__subsf3+0x2c4>
   430d8:	81000044 	addi	r4,r16,1
   430dc:	21003fcc 	andi	r4,r4,255
   430e0:	01400044 	movi	r5,1
   430e4:	2900470e 	bge	r5,r4,43204 <__subsf3+0x368>
   430e8:	19e5c83a 	sub	r18,r3,r7
   430ec:	9141002c 	andhi	r5,r18,1024
   430f0:	28002d26 	beq	r5,zero,431a8 <__subsf3+0x30c>
   430f4:	38e5c83a 	sub	r18,r7,r3
   430f8:	1023883a 	mov	r17,r2
   430fc:	003fae06 	br	42fb8 <_gp+0xfffe5e70>
   43100:	8880004c 	andi	r2,r17,1
   43104:	043fffc4 	movi	r16,-1
   43108:	000b883a 	mov	r5,zero
   4310c:	003f8a06 	br	42f38 <_gp+0xfffe5df0>
   43110:	00ff0034 	movhi	r3,64512
   43114:	18ffffc4 	addi	r3,r3,-1
   43118:	80a1c83a 	sub	r16,r16,r2
   4311c:	90c6703a 	and	r3,r18,r3
   43120:	003f7706 	br	42f00 <_gp+0xfffe5db8>
   43124:	2000431e 	bne	r4,zero,43234 <__subsf3+0x398>
   43128:	81000044 	addi	r4,r16,1
   4312c:	21803fcc 	andi	r6,r4,255
   43130:	01400044 	movi	r5,1
   43134:	2980280e 	bge	r5,r6,431d8 <__subsf3+0x33c>
   43138:	01403fc4 	movi	r5,255
   4313c:	21402326 	beq	r4,r5,431cc <__subsf3+0x330>
   43140:	19c7883a 	add	r3,r3,r7
   43144:	1806d07a 	srli	r3,r3,1
   43148:	2021883a 	mov	r16,r4
   4314c:	003f6c06 	br	42f00 <_gp+0xfffe5db8>
   43150:	1023883a 	mov	r17,r2
   43154:	003fa906 	br	42ffc <_gp+0xfffe5eb4>
   43158:	01c00044 	movi	r7,1
   4315c:	003f9006 	br	42fa0 <_gp+0xfffe5e58>
   43160:	8000151e 	bne	r16,zero,431b8 <__subsf3+0x31c>
   43164:	18002f26 	beq	r3,zero,43224 <__subsf3+0x388>
   43168:	0108303a 	nor	r4,zero,r4
   4316c:	20000a26 	beq	r4,zero,43198 <__subsf3+0x2fc>
   43170:	01403fc4 	movi	r5,255
   43174:	31402b26 	beq	r6,r5,43224 <__subsf3+0x388>
   43178:	014006c4 	movi	r5,27
   4317c:	29006e16 	blt	r5,r4,43338 <__subsf3+0x49c>
   43180:	01400804 	movi	r5,32
   43184:	290bc83a 	sub	r5,r5,r4
   43188:	194a983a 	sll	r5,r3,r5
   4318c:	1908d83a 	srl	r4,r3,r4
   43190:	2806c03a 	cmpne	r3,r5,zero
   43194:	20c6b03a 	or	r3,r4,r3
   43198:	38c7c83a 	sub	r3,r7,r3
   4319c:	3021883a 	mov	r16,r6
   431a0:	1023883a 	mov	r17,r2
   431a4:	003f7f06 	br	42fa4 <_gp+0xfffe5e5c>
   431a8:	903f831e 	bne	r18,zero,42fb8 <_gp+0xfffe5e70>
   431ac:	0005883a 	mov	r2,zero
   431b0:	0021883a 	mov	r16,zero
   431b4:	003f9a06 	br	43020 <_gp+0xfffe5ed8>
   431b8:	01403fc4 	movi	r5,255
   431bc:	31401926 	beq	r6,r5,43224 <__subsf3+0x388>
   431c0:	0109c83a 	sub	r4,zero,r4
   431c4:	18c10034 	orhi	r3,r3,1024
   431c8:	003feb06 	br	43178 <_gp+0xfffe6030>
   431cc:	043fffc4 	movi	r16,-1
   431d0:	000b883a 	mov	r5,zero
   431d4:	003f5806 	br	42f38 <_gp+0xfffe5df0>
   431d8:	8000481e 	bne	r16,zero,432fc <__subsf3+0x460>
   431dc:	18006226 	beq	r3,zero,43368 <__subsf3+0x4cc>
   431e0:	383f4726 	beq	r7,zero,42f00 <_gp+0xfffe5db8>
   431e4:	19c7883a 	add	r3,r3,r7
   431e8:	1881002c 	andhi	r2,r3,1024
   431ec:	103f8326 	beq	r2,zero,42ffc <_gp+0xfffe5eb4>
   431f0:	00bf0034 	movhi	r2,64512
   431f4:	10bfffc4 	addi	r2,r2,-1
   431f8:	2821883a 	mov	r16,r5
   431fc:	1886703a 	and	r3,r3,r2
   43200:	003f3f06 	br	42f00 <_gp+0xfffe5db8>
   43204:	80001c1e 	bne	r16,zero,43278 <__subsf3+0x3dc>
   43208:	1800261e 	bne	r3,zero,432a4 <__subsf3+0x408>
   4320c:	38004c26 	beq	r7,zero,43340 <__subsf3+0x4a4>
   43210:	3807883a 	mov	r3,r7
   43214:	1023883a 	mov	r17,r2
   43218:	003f3906 	br	42f00 <_gp+0xfffe5db8>
   4321c:	01c00044 	movi	r7,1
   43220:	003f9006 	br	43064 <_gp+0xfffe5f1c>
   43224:	3807883a 	mov	r3,r7
   43228:	3021883a 	mov	r16,r6
   4322c:	1023883a 	mov	r17,r2
   43230:	003f3306 	br	42f00 <_gp+0xfffe5db8>
   43234:	8000161e 	bne	r16,zero,43290 <__subsf3+0x3f4>
   43238:	18002d26 	beq	r3,zero,432f0 <__subsf3+0x454>
   4323c:	0108303a 	nor	r4,zero,r4
   43240:	20000a26 	beq	r4,zero,4326c <__subsf3+0x3d0>
   43244:	01403fc4 	movi	r5,255
   43248:	31402926 	beq	r6,r5,432f0 <__subsf3+0x454>
   4324c:	014006c4 	movi	r5,27
   43250:	29004716 	blt	r5,r4,43370 <__subsf3+0x4d4>
   43254:	01400804 	movi	r5,32
   43258:	290bc83a 	sub	r5,r5,r4
   4325c:	194a983a 	sll	r5,r3,r5
   43260:	1908d83a 	srl	r4,r3,r4
   43264:	2806c03a 	cmpne	r3,r5,zero
   43268:	20c6b03a 	or	r3,r4,r3
   4326c:	19c7883a 	add	r3,r3,r7
   43270:	3021883a 	mov	r16,r6
   43274:	003f7c06 	br	43068 <_gp+0xfffe5f20>
   43278:	1800111e 	bne	r3,zero,432c0 <__subsf3+0x424>
   4327c:	38003326 	beq	r7,zero,4334c <__subsf3+0x4b0>
   43280:	3807883a 	mov	r3,r7
   43284:	1023883a 	mov	r17,r2
   43288:	04003fc4 	movi	r16,255
   4328c:	003f1c06 	br	42f00 <_gp+0xfffe5db8>
   43290:	01403fc4 	movi	r5,255
   43294:	31401626 	beq	r6,r5,432f0 <__subsf3+0x454>
   43298:	0109c83a 	sub	r4,zero,r4
   4329c:	18c10034 	orhi	r3,r3,1024
   432a0:	003fea06 	br	4324c <_gp+0xfffe6104>
   432a4:	383f1626 	beq	r7,zero,42f00 <_gp+0xfffe5db8>
   432a8:	19c9c83a 	sub	r4,r3,r7
   432ac:	2141002c 	andhi	r5,r4,1024
   432b0:	283f5026 	beq	r5,zero,42ff4 <_gp+0xfffe5eac>
   432b4:	38c7c83a 	sub	r3,r7,r3
   432b8:	1023883a 	mov	r17,r2
   432bc:	003f1006 	br	42f00 <_gp+0xfffe5db8>
   432c0:	38001b26 	beq	r7,zero,43330 <__subsf3+0x494>
   432c4:	1806d0fa 	srli	r3,r3,3
   432c8:	1900102c 	andhi	r4,r3,64
   432cc:	20000526 	beq	r4,zero,432e4 <__subsf3+0x448>
   432d0:	380ed0fa 	srli	r7,r7,3
   432d4:	3900102c 	andhi	r4,r7,64
   432d8:	2000021e 	bne	r4,zero,432e4 <__subsf3+0x448>
   432dc:	3807883a 	mov	r3,r7
   432e0:	1023883a 	mov	r17,r2
   432e4:	180690fa 	slli	r3,r3,3
   432e8:	04003fc4 	movi	r16,255
   432ec:	003f0406 	br	42f00 <_gp+0xfffe5db8>
   432f0:	3807883a 	mov	r3,r7
   432f4:	3021883a 	mov	r16,r6
   432f8:	003f0106 	br	42f00 <_gp+0xfffe5db8>
   432fc:	18001726 	beq	r3,zero,4335c <__subsf3+0x4c0>
   43300:	38000b26 	beq	r7,zero,43330 <__subsf3+0x494>
   43304:	1806d0fa 	srli	r3,r3,3
   43308:	1900102c 	andhi	r4,r3,64
   4330c:	20000426 	beq	r4,zero,43320 <__subsf3+0x484>
   43310:	380ed0fa 	srli	r7,r7,3
   43314:	3900102c 	andhi	r4,r7,64
   43318:	2000011e 	bne	r4,zero,43320 <__subsf3+0x484>
   4331c:	3807883a 	mov	r3,r7
   43320:	180690fa 	slli	r3,r3,3
   43324:	1023883a 	mov	r17,r2
   43328:	04003fc4 	movi	r16,255
   4332c:	003ef406 	br	42f00 <_gp+0xfffe5db8>
   43330:	04003fc4 	movi	r16,255
   43334:	003ef206 	br	42f00 <_gp+0xfffe5db8>
   43338:	00c00044 	movi	r3,1
   4333c:	003f9606 	br	43198 <_gp+0xfffe6050>
   43340:	000b883a 	mov	r5,zero
   43344:	0005883a 	mov	r2,zero
   43348:	003f3506 	br	43020 <_gp+0xfffe5ed8>
   4334c:	01402034 	movhi	r5,128
   43350:	297fffc4 	addi	r5,r5,-1
   43354:	0005883a 	mov	r2,zero
   43358:	003f2f06 	br	43018 <_gp+0xfffe5ed0>
   4335c:	3807883a 	mov	r3,r7
   43360:	04003fc4 	movi	r16,255
   43364:	003ee606 	br	42f00 <_gp+0xfffe5db8>
   43368:	3807883a 	mov	r3,r7
   4336c:	003ee406 	br	42f00 <_gp+0xfffe5db8>
   43370:	00c00044 	movi	r3,1
   43374:	003fbd06 	br	4326c <_gp+0xfffe6124>
   43378:	0005883a 	mov	r2,zero
   4337c:	003f2806 	br	43020 <_gp+0xfffe5ed8>

00043380 <__fixsfsi>:
   43380:	200ad5fa 	srli	r5,r4,23
   43384:	00c02034 	movhi	r3,128
   43388:	18ffffc4 	addi	r3,r3,-1
   4338c:	29403fcc 	andi	r5,r5,255
   43390:	00801f84 	movi	r2,126
   43394:	1906703a 	and	r3,r3,r4
   43398:	2008d7fa 	srli	r4,r4,31
   4339c:	11400e0e 	bge	r2,r5,433d8 <__fixsfsi+0x58>
   433a0:	00802744 	movi	r2,157
   433a4:	11400816 	blt	r2,r5,433c8 <__fixsfsi+0x48>
   433a8:	00802544 	movi	r2,149
   433ac:	18c02034 	orhi	r3,r3,128
   433b0:	11400b0e 	bge	r2,r5,433e0 <__fixsfsi+0x60>
   433b4:	28bfda84 	addi	r2,r5,-150
   433b8:	1884983a 	sll	r2,r3,r2
   433bc:	20000726 	beq	r4,zero,433dc <__fixsfsi+0x5c>
   433c0:	0085c83a 	sub	r2,zero,r2
   433c4:	f800283a 	ret
   433c8:	00a00034 	movhi	r2,32768
   433cc:	10bfffc4 	addi	r2,r2,-1
   433d0:	2085883a 	add	r2,r4,r2
   433d4:	f800283a 	ret
   433d8:	0005883a 	mov	r2,zero
   433dc:	f800283a 	ret
   433e0:	00802584 	movi	r2,150
   433e4:	1145c83a 	sub	r2,r2,r5
   433e8:	1884d83a 	srl	r2,r3,r2
   433ec:	003ff306 	br	433bc <_gp+0xfffe6274>

000433f0 <__floatsisf>:
   433f0:	defffd04 	addi	sp,sp,-12
   433f4:	dfc00215 	stw	ra,8(sp)
   433f8:	dc400115 	stw	r17,4(sp)
   433fc:	dc000015 	stw	r16,0(sp)
   43400:	20003526 	beq	r4,zero,434d8 <__floatsisf+0xe8>
   43404:	2021883a 	mov	r16,r4
   43408:	2022d7fa 	srli	r17,r4,31
   4340c:	20003616 	blt	r4,zero,434e8 <__floatsisf+0xf8>
   43410:	8009883a 	mov	r4,r16
   43414:	0045edc0 	call	45edc <__clzsi2>
   43418:	00c02784 	movi	r3,158
   4341c:	1887c83a 	sub	r3,r3,r2
   43420:	01002584 	movi	r4,150
   43424:	20c01416 	blt	r4,r3,43478 <__floatsisf+0x88>
   43428:	20c9c83a 	sub	r4,r4,r3
   4342c:	8120983a 	sll	r16,r16,r4
   43430:	00802034 	movhi	r2,128
   43434:	10bfffc4 	addi	r2,r2,-1
   43438:	8809883a 	mov	r4,r17
   4343c:	80a0703a 	and	r16,r16,r2
   43440:	18803fcc 	andi	r2,r3,255
   43444:	100695fa 	slli	r3,r2,23
   43448:	20803fcc 	andi	r2,r4,255
   4344c:	100897fa 	slli	r4,r2,31
   43450:	00802034 	movhi	r2,128
   43454:	10bfffc4 	addi	r2,r2,-1
   43458:	8084703a 	and	r2,r16,r2
   4345c:	10c4b03a 	or	r2,r2,r3
   43460:	1104b03a 	or	r2,r2,r4
   43464:	dfc00217 	ldw	ra,8(sp)
   43468:	dc400117 	ldw	r17,4(sp)
   4346c:	dc000017 	ldw	r16,0(sp)
   43470:	dec00304 	addi	sp,sp,12
   43474:	f800283a 	ret
   43478:	01002644 	movi	r4,153
   4347c:	20c01c16 	blt	r4,r3,434f0 <__floatsisf+0x100>
   43480:	20c9c83a 	sub	r4,r4,r3
   43484:	8120983a 	sll	r16,r16,r4
   43488:	013f0034 	movhi	r4,64512
   4348c:	213fffc4 	addi	r4,r4,-1
   43490:	814001cc 	andi	r5,r16,7
   43494:	8108703a 	and	r4,r16,r4
   43498:	28000426 	beq	r5,zero,434ac <__floatsisf+0xbc>
   4349c:	840003cc 	andi	r16,r16,15
   434a0:	01400104 	movi	r5,4
   434a4:	81400126 	beq	r16,r5,434ac <__floatsisf+0xbc>
   434a8:	2149883a 	add	r4,r4,r5
   434ac:	2141002c 	andhi	r5,r4,1024
   434b0:	28000526 	beq	r5,zero,434c8 <__floatsisf+0xd8>
   434b4:	00c027c4 	movi	r3,159
   434b8:	1887c83a 	sub	r3,r3,r2
   434bc:	00bf0034 	movhi	r2,64512
   434c0:	10bfffc4 	addi	r2,r2,-1
   434c4:	2088703a 	and	r4,r4,r2
   434c8:	202091ba 	slli	r16,r4,6
   434cc:	8809883a 	mov	r4,r17
   434d0:	8020d27a 	srli	r16,r16,9
   434d4:	003fda06 	br	43440 <_gp+0xfffe62f8>
   434d8:	0009883a 	mov	r4,zero
   434dc:	0007883a 	mov	r3,zero
   434e0:	0021883a 	mov	r16,zero
   434e4:	003fd606 	br	43440 <_gp+0xfffe62f8>
   434e8:	0121c83a 	sub	r16,zero,r4
   434ec:	003fc806 	br	43410 <_gp+0xfffe62c8>
   434f0:	01002e44 	movi	r4,185
   434f4:	20c9c83a 	sub	r4,r4,r3
   434f8:	01400144 	movi	r5,5
   434fc:	8108983a 	sll	r4,r16,r4
   43500:	288bc83a 	sub	r5,r5,r2
   43504:	8160d83a 	srl	r16,r16,r5
   43508:	2008c03a 	cmpne	r4,r4,zero
   4350c:	8120b03a 	or	r16,r16,r4
   43510:	003fdd06 	br	43488 <_gp+0xfffe6340>

00043514 <__adddf3>:
   43514:	02c00434 	movhi	r11,16
   43518:	5affffc4 	addi	r11,r11,-1
   4351c:	2806d7fa 	srli	r3,r5,31
   43520:	2ad4703a 	and	r10,r5,r11
   43524:	3ad2703a 	and	r9,r7,r11
   43528:	3804d53a 	srli	r2,r7,20
   4352c:	3018d77a 	srli	r12,r6,29
   43530:	280ad53a 	srli	r5,r5,20
   43534:	501490fa 	slli	r10,r10,3
   43538:	2010d77a 	srli	r8,r4,29
   4353c:	481290fa 	slli	r9,r9,3
   43540:	380ed7fa 	srli	r7,r7,31
   43544:	defffb04 	addi	sp,sp,-20
   43548:	dc800215 	stw	r18,8(sp)
   4354c:	dc400115 	stw	r17,4(sp)
   43550:	dc000015 	stw	r16,0(sp)
   43554:	dfc00415 	stw	ra,16(sp)
   43558:	dcc00315 	stw	r19,12(sp)
   4355c:	1c803fcc 	andi	r18,r3,255
   43560:	2c01ffcc 	andi	r16,r5,2047
   43564:	5210b03a 	or	r8,r10,r8
   43568:	202290fa 	slli	r17,r4,3
   4356c:	1081ffcc 	andi	r2,r2,2047
   43570:	4b12b03a 	or	r9,r9,r12
   43574:	300c90fa 	slli	r6,r6,3
   43578:	91c07526 	beq	r18,r7,43750 <__adddf3+0x23c>
   4357c:	8087c83a 	sub	r3,r16,r2
   43580:	00c0ab0e 	bge	zero,r3,43830 <__adddf3+0x31c>
   43584:	10002a1e 	bne	r2,zero,43630 <__adddf3+0x11c>
   43588:	4984b03a 	or	r2,r9,r6
   4358c:	1000961e 	bne	r2,zero,437e8 <__adddf3+0x2d4>
   43590:	888001cc 	andi	r2,r17,7
   43594:	10000726 	beq	r2,zero,435b4 <__adddf3+0xa0>
   43598:	888003cc 	andi	r2,r17,15
   4359c:	00c00104 	movi	r3,4
   435a0:	10c00426 	beq	r2,r3,435b4 <__adddf3+0xa0>
   435a4:	88c7883a 	add	r3,r17,r3
   435a8:	1c63803a 	cmpltu	r17,r3,r17
   435ac:	4451883a 	add	r8,r8,r17
   435b0:	1823883a 	mov	r17,r3
   435b4:	4080202c 	andhi	r2,r8,128
   435b8:	10005926 	beq	r2,zero,43720 <__adddf3+0x20c>
   435bc:	84000044 	addi	r16,r16,1
   435c0:	0081ffc4 	movi	r2,2047
   435c4:	8080ba26 	beq	r16,r2,438b0 <__adddf3+0x39c>
   435c8:	00bfe034 	movhi	r2,65408
   435cc:	10bfffc4 	addi	r2,r2,-1
   435d0:	4090703a 	and	r8,r8,r2
   435d4:	4004977a 	slli	r2,r8,29
   435d8:	4010927a 	slli	r8,r8,9
   435dc:	8822d0fa 	srli	r17,r17,3
   435e0:	8401ffcc 	andi	r16,r16,2047
   435e4:	4010d33a 	srli	r8,r8,12
   435e8:	9007883a 	mov	r3,r18
   435ec:	1444b03a 	or	r2,r2,r17
   435f0:	8401ffcc 	andi	r16,r16,2047
   435f4:	8020953a 	slli	r16,r16,20
   435f8:	18c03fcc 	andi	r3,r3,255
   435fc:	01000434 	movhi	r4,16
   43600:	213fffc4 	addi	r4,r4,-1
   43604:	180697fa 	slli	r3,r3,31
   43608:	4110703a 	and	r8,r8,r4
   4360c:	4410b03a 	or	r8,r8,r16
   43610:	40c6b03a 	or	r3,r8,r3
   43614:	dfc00417 	ldw	ra,16(sp)
   43618:	dcc00317 	ldw	r19,12(sp)
   4361c:	dc800217 	ldw	r18,8(sp)
   43620:	dc400117 	ldw	r17,4(sp)
   43624:	dc000017 	ldw	r16,0(sp)
   43628:	dec00504 	addi	sp,sp,20
   4362c:	f800283a 	ret
   43630:	0081ffc4 	movi	r2,2047
   43634:	80bfd626 	beq	r16,r2,43590 <_gp+0xfffe6448>
   43638:	4a402034 	orhi	r9,r9,128
   4363c:	00800e04 	movi	r2,56
   43640:	10c09f16 	blt	r2,r3,438c0 <__adddf3+0x3ac>
   43644:	008007c4 	movi	r2,31
   43648:	10c0c216 	blt	r2,r3,43954 <__adddf3+0x440>
   4364c:	00800804 	movi	r2,32
   43650:	10c5c83a 	sub	r2,r2,r3
   43654:	488a983a 	sll	r5,r9,r2
   43658:	30c8d83a 	srl	r4,r6,r3
   4365c:	3084983a 	sll	r2,r6,r2
   43660:	48c6d83a 	srl	r3,r9,r3
   43664:	290cb03a 	or	r6,r5,r4
   43668:	1004c03a 	cmpne	r2,r2,zero
   4366c:	308cb03a 	or	r6,r6,r2
   43670:	898dc83a 	sub	r6,r17,r6
   43674:	89a3803a 	cmpltu	r17,r17,r6
   43678:	40d1c83a 	sub	r8,r8,r3
   4367c:	4451c83a 	sub	r8,r8,r17
   43680:	3023883a 	mov	r17,r6
   43684:	4080202c 	andhi	r2,r8,128
   43688:	10002326 	beq	r2,zero,43718 <__adddf3+0x204>
   4368c:	04c02034 	movhi	r19,128
   43690:	9cffffc4 	addi	r19,r19,-1
   43694:	44e6703a 	and	r19,r8,r19
   43698:	98007626 	beq	r19,zero,43874 <__adddf3+0x360>
   4369c:	9809883a 	mov	r4,r19
   436a0:	0045edc0 	call	45edc <__clzsi2>
   436a4:	10fffe04 	addi	r3,r2,-8
   436a8:	010007c4 	movi	r4,31
   436ac:	20c07716 	blt	r4,r3,4388c <__adddf3+0x378>
   436b0:	00800804 	movi	r2,32
   436b4:	10c5c83a 	sub	r2,r2,r3
   436b8:	8884d83a 	srl	r2,r17,r2
   436bc:	98d0983a 	sll	r8,r19,r3
   436c0:	88e2983a 	sll	r17,r17,r3
   436c4:	1204b03a 	or	r2,r2,r8
   436c8:	1c007416 	blt	r3,r16,4389c <__adddf3+0x388>
   436cc:	1c21c83a 	sub	r16,r3,r16
   436d0:	82000044 	addi	r8,r16,1
   436d4:	00c007c4 	movi	r3,31
   436d8:	1a009116 	blt	r3,r8,43920 <__adddf3+0x40c>
   436dc:	00c00804 	movi	r3,32
   436e0:	1a07c83a 	sub	r3,r3,r8
   436e4:	8a08d83a 	srl	r4,r17,r8
   436e8:	88e2983a 	sll	r17,r17,r3
   436ec:	10c6983a 	sll	r3,r2,r3
   436f0:	1210d83a 	srl	r8,r2,r8
   436f4:	8804c03a 	cmpne	r2,r17,zero
   436f8:	1906b03a 	or	r3,r3,r4
   436fc:	18a2b03a 	or	r17,r3,r2
   43700:	0021883a 	mov	r16,zero
   43704:	003fa206 	br	43590 <_gp+0xfffe6448>
   43708:	1890b03a 	or	r8,r3,r2
   4370c:	40017d26 	beq	r8,zero,43d04 <__adddf3+0x7f0>
   43710:	1011883a 	mov	r8,r2
   43714:	1823883a 	mov	r17,r3
   43718:	888001cc 	andi	r2,r17,7
   4371c:	103f9e1e 	bne	r2,zero,43598 <_gp+0xfffe6450>
   43720:	4004977a 	slli	r2,r8,29
   43724:	8822d0fa 	srli	r17,r17,3
   43728:	4010d0fa 	srli	r8,r8,3
   4372c:	9007883a 	mov	r3,r18
   43730:	1444b03a 	or	r2,r2,r17
   43734:	0101ffc4 	movi	r4,2047
   43738:	81002426 	beq	r16,r4,437cc <__adddf3+0x2b8>
   4373c:	8120703a 	and	r16,r16,r4
   43740:	01000434 	movhi	r4,16
   43744:	213fffc4 	addi	r4,r4,-1
   43748:	4110703a 	and	r8,r8,r4
   4374c:	003fa806 	br	435f0 <_gp+0xfffe64a8>
   43750:	8089c83a 	sub	r4,r16,r2
   43754:	01005e0e 	bge	zero,r4,438d0 <__adddf3+0x3bc>
   43758:	10002b26 	beq	r2,zero,43808 <__adddf3+0x2f4>
   4375c:	0081ffc4 	movi	r2,2047
   43760:	80bf8b26 	beq	r16,r2,43590 <_gp+0xfffe6448>
   43764:	4a402034 	orhi	r9,r9,128
   43768:	00800e04 	movi	r2,56
   4376c:	1100a40e 	bge	r2,r4,43a00 <__adddf3+0x4ec>
   43770:	498cb03a 	or	r6,r9,r6
   43774:	300ac03a 	cmpne	r5,r6,zero
   43778:	0013883a 	mov	r9,zero
   4377c:	2c4b883a 	add	r5,r5,r17
   43780:	2c63803a 	cmpltu	r17,r5,r17
   43784:	4a11883a 	add	r8,r9,r8
   43788:	8a11883a 	add	r8,r17,r8
   4378c:	2823883a 	mov	r17,r5
   43790:	4080202c 	andhi	r2,r8,128
   43794:	103fe026 	beq	r2,zero,43718 <_gp+0xfffe65d0>
   43798:	84000044 	addi	r16,r16,1
   4379c:	0081ffc4 	movi	r2,2047
   437a0:	8080d226 	beq	r16,r2,43aec <__adddf3+0x5d8>
   437a4:	00bfe034 	movhi	r2,65408
   437a8:	10bfffc4 	addi	r2,r2,-1
   437ac:	4090703a 	and	r8,r8,r2
   437b0:	880ad07a 	srli	r5,r17,1
   437b4:	400897fa 	slli	r4,r8,31
   437b8:	88c0004c 	andi	r3,r17,1
   437bc:	28e2b03a 	or	r17,r5,r3
   437c0:	4010d07a 	srli	r8,r8,1
   437c4:	2462b03a 	or	r17,r4,r17
   437c8:	003f7106 	br	43590 <_gp+0xfffe6448>
   437cc:	4088b03a 	or	r4,r8,r2
   437d0:	20014526 	beq	r4,zero,43ce8 <__adddf3+0x7d4>
   437d4:	01000434 	movhi	r4,16
   437d8:	42000234 	orhi	r8,r8,8
   437dc:	213fffc4 	addi	r4,r4,-1
   437e0:	4110703a 	and	r8,r8,r4
   437e4:	003f8206 	br	435f0 <_gp+0xfffe64a8>
   437e8:	18ffffc4 	addi	r3,r3,-1
   437ec:	1800491e 	bne	r3,zero,43914 <__adddf3+0x400>
   437f0:	898bc83a 	sub	r5,r17,r6
   437f4:	8963803a 	cmpltu	r17,r17,r5
   437f8:	4251c83a 	sub	r8,r8,r9
   437fc:	4451c83a 	sub	r8,r8,r17
   43800:	2823883a 	mov	r17,r5
   43804:	003f9f06 	br	43684 <_gp+0xfffe653c>
   43808:	4984b03a 	or	r2,r9,r6
   4380c:	103f6026 	beq	r2,zero,43590 <_gp+0xfffe6448>
   43810:	213fffc4 	addi	r4,r4,-1
   43814:	2000931e 	bne	r4,zero,43a64 <__adddf3+0x550>
   43818:	898d883a 	add	r6,r17,r6
   4381c:	3463803a 	cmpltu	r17,r6,r17
   43820:	4251883a 	add	r8,r8,r9
   43824:	8a11883a 	add	r8,r17,r8
   43828:	3023883a 	mov	r17,r6
   4382c:	003fd806 	br	43790 <_gp+0xfffe6648>
   43830:	1800541e 	bne	r3,zero,43984 <__adddf3+0x470>
   43834:	80800044 	addi	r2,r16,1
   43838:	1081ffcc 	andi	r2,r2,2047
   4383c:	00c00044 	movi	r3,1
   43840:	1880a00e 	bge	r3,r2,43ac4 <__adddf3+0x5b0>
   43844:	8989c83a 	sub	r4,r17,r6
   43848:	8905803a 	cmpltu	r2,r17,r4
   4384c:	4267c83a 	sub	r19,r8,r9
   43850:	98a7c83a 	sub	r19,r19,r2
   43854:	9880202c 	andhi	r2,r19,128
   43858:	10006326 	beq	r2,zero,439e8 <__adddf3+0x4d4>
   4385c:	3463c83a 	sub	r17,r6,r17
   43860:	4a07c83a 	sub	r3,r9,r8
   43864:	344d803a 	cmpltu	r6,r6,r17
   43868:	19a7c83a 	sub	r19,r3,r6
   4386c:	3825883a 	mov	r18,r7
   43870:	983f8a1e 	bne	r19,zero,4369c <_gp+0xfffe6554>
   43874:	8809883a 	mov	r4,r17
   43878:	0045edc0 	call	45edc <__clzsi2>
   4387c:	10800804 	addi	r2,r2,32
   43880:	10fffe04 	addi	r3,r2,-8
   43884:	010007c4 	movi	r4,31
   43888:	20ff890e 	bge	r4,r3,436b0 <_gp+0xfffe6568>
   4388c:	10bff604 	addi	r2,r2,-40
   43890:	8884983a 	sll	r2,r17,r2
   43894:	0023883a 	mov	r17,zero
   43898:	1c3f8c0e 	bge	r3,r16,436cc <_gp+0xfffe6584>
   4389c:	023fe034 	movhi	r8,65408
   438a0:	423fffc4 	addi	r8,r8,-1
   438a4:	80e1c83a 	sub	r16,r16,r3
   438a8:	1210703a 	and	r8,r2,r8
   438ac:	003f3806 	br	43590 <_gp+0xfffe6448>
   438b0:	9007883a 	mov	r3,r18
   438b4:	0011883a 	mov	r8,zero
   438b8:	0005883a 	mov	r2,zero
   438bc:	003f4c06 	br	435f0 <_gp+0xfffe64a8>
   438c0:	498cb03a 	or	r6,r9,r6
   438c4:	300cc03a 	cmpne	r6,r6,zero
   438c8:	0007883a 	mov	r3,zero
   438cc:	003f6806 	br	43670 <_gp+0xfffe6528>
   438d0:	20009c1e 	bne	r4,zero,43b44 <__adddf3+0x630>
   438d4:	80800044 	addi	r2,r16,1
   438d8:	1141ffcc 	andi	r5,r2,2047
   438dc:	01000044 	movi	r4,1
   438e0:	2140670e 	bge	r4,r5,43a80 <__adddf3+0x56c>
   438e4:	0101ffc4 	movi	r4,2047
   438e8:	11007f26 	beq	r2,r4,43ae8 <__adddf3+0x5d4>
   438ec:	898d883a 	add	r6,r17,r6
   438f0:	4247883a 	add	r3,r8,r9
   438f4:	3451803a 	cmpltu	r8,r6,r17
   438f8:	40d1883a 	add	r8,r8,r3
   438fc:	402297fa 	slli	r17,r8,31
   43900:	300cd07a 	srli	r6,r6,1
   43904:	4010d07a 	srli	r8,r8,1
   43908:	1021883a 	mov	r16,r2
   4390c:	89a2b03a 	or	r17,r17,r6
   43910:	003f1f06 	br	43590 <_gp+0xfffe6448>
   43914:	0081ffc4 	movi	r2,2047
   43918:	80bf481e 	bne	r16,r2,4363c <_gp+0xfffe64f4>
   4391c:	003f1c06 	br	43590 <_gp+0xfffe6448>
   43920:	843ff844 	addi	r16,r16,-31
   43924:	01000804 	movi	r4,32
   43928:	1406d83a 	srl	r3,r2,r16
   4392c:	41005026 	beq	r8,r4,43a70 <__adddf3+0x55c>
   43930:	01001004 	movi	r4,64
   43934:	2211c83a 	sub	r8,r4,r8
   43938:	1204983a 	sll	r2,r2,r8
   4393c:	88a2b03a 	or	r17,r17,r2
   43940:	8822c03a 	cmpne	r17,r17,zero
   43944:	1c62b03a 	or	r17,r3,r17
   43948:	0011883a 	mov	r8,zero
   4394c:	0021883a 	mov	r16,zero
   43950:	003f7106 	br	43718 <_gp+0xfffe65d0>
   43954:	193ff804 	addi	r4,r3,-32
   43958:	00800804 	movi	r2,32
   4395c:	4908d83a 	srl	r4,r9,r4
   43960:	18804526 	beq	r3,r2,43a78 <__adddf3+0x564>
   43964:	00801004 	movi	r2,64
   43968:	10c5c83a 	sub	r2,r2,r3
   4396c:	4886983a 	sll	r3,r9,r2
   43970:	198cb03a 	or	r6,r3,r6
   43974:	300cc03a 	cmpne	r6,r6,zero
   43978:	218cb03a 	or	r6,r4,r6
   4397c:	0007883a 	mov	r3,zero
   43980:	003f3b06 	br	43670 <_gp+0xfffe6528>
   43984:	80002a26 	beq	r16,zero,43a30 <__adddf3+0x51c>
   43988:	0101ffc4 	movi	r4,2047
   4398c:	11006826 	beq	r2,r4,43b30 <__adddf3+0x61c>
   43990:	00c7c83a 	sub	r3,zero,r3
   43994:	42002034 	orhi	r8,r8,128
   43998:	01000e04 	movi	r4,56
   4399c:	20c07c16 	blt	r4,r3,43b90 <__adddf3+0x67c>
   439a0:	010007c4 	movi	r4,31
   439a4:	20c0da16 	blt	r4,r3,43d10 <__adddf3+0x7fc>
   439a8:	01000804 	movi	r4,32
   439ac:	20c9c83a 	sub	r4,r4,r3
   439b0:	4114983a 	sll	r10,r8,r4
   439b4:	88cad83a 	srl	r5,r17,r3
   439b8:	8908983a 	sll	r4,r17,r4
   439bc:	40c6d83a 	srl	r3,r8,r3
   439c0:	5162b03a 	or	r17,r10,r5
   439c4:	2008c03a 	cmpne	r4,r4,zero
   439c8:	8922b03a 	or	r17,r17,r4
   439cc:	3463c83a 	sub	r17,r6,r17
   439d0:	48c7c83a 	sub	r3,r9,r3
   439d4:	344d803a 	cmpltu	r6,r6,r17
   439d8:	1991c83a 	sub	r8,r3,r6
   439dc:	1021883a 	mov	r16,r2
   439e0:	3825883a 	mov	r18,r7
   439e4:	003f2706 	br	43684 <_gp+0xfffe653c>
   439e8:	24d0b03a 	or	r8,r4,r19
   439ec:	40001b1e 	bne	r8,zero,43a5c <__adddf3+0x548>
   439f0:	0005883a 	mov	r2,zero
   439f4:	0007883a 	mov	r3,zero
   439f8:	0021883a 	mov	r16,zero
   439fc:	003f4d06 	br	43734 <_gp+0xfffe65ec>
   43a00:	008007c4 	movi	r2,31
   43a04:	11003c16 	blt	r2,r4,43af8 <__adddf3+0x5e4>
   43a08:	00800804 	movi	r2,32
   43a0c:	1105c83a 	sub	r2,r2,r4
   43a10:	488e983a 	sll	r7,r9,r2
   43a14:	310ad83a 	srl	r5,r6,r4
   43a18:	3084983a 	sll	r2,r6,r2
   43a1c:	4912d83a 	srl	r9,r9,r4
   43a20:	394ab03a 	or	r5,r7,r5
   43a24:	1004c03a 	cmpne	r2,r2,zero
   43a28:	288ab03a 	or	r5,r5,r2
   43a2c:	003f5306 	br	4377c <_gp+0xfffe6634>
   43a30:	4448b03a 	or	r4,r8,r17
   43a34:	20003e26 	beq	r4,zero,43b30 <__adddf3+0x61c>
   43a38:	00c6303a 	nor	r3,zero,r3
   43a3c:	18003a1e 	bne	r3,zero,43b28 <__adddf3+0x614>
   43a40:	3463c83a 	sub	r17,r6,r17
   43a44:	4a07c83a 	sub	r3,r9,r8
   43a48:	344d803a 	cmpltu	r6,r6,r17
   43a4c:	1991c83a 	sub	r8,r3,r6
   43a50:	1021883a 	mov	r16,r2
   43a54:	3825883a 	mov	r18,r7
   43a58:	003f0a06 	br	43684 <_gp+0xfffe653c>
   43a5c:	2023883a 	mov	r17,r4
   43a60:	003f0d06 	br	43698 <_gp+0xfffe6550>
   43a64:	0081ffc4 	movi	r2,2047
   43a68:	80bf3f1e 	bne	r16,r2,43768 <_gp+0xfffe6620>
   43a6c:	003ec806 	br	43590 <_gp+0xfffe6448>
   43a70:	0005883a 	mov	r2,zero
   43a74:	003fb106 	br	4393c <_gp+0xfffe67f4>
   43a78:	0007883a 	mov	r3,zero
   43a7c:	003fbc06 	br	43970 <_gp+0xfffe6828>
   43a80:	4444b03a 	or	r2,r8,r17
   43a84:	8000871e 	bne	r16,zero,43ca4 <__adddf3+0x790>
   43a88:	1000ba26 	beq	r2,zero,43d74 <__adddf3+0x860>
   43a8c:	4984b03a 	or	r2,r9,r6
   43a90:	103ebf26 	beq	r2,zero,43590 <_gp+0xfffe6448>
   43a94:	8985883a 	add	r2,r17,r6
   43a98:	4247883a 	add	r3,r8,r9
   43a9c:	1451803a 	cmpltu	r8,r2,r17
   43aa0:	40d1883a 	add	r8,r8,r3
   43aa4:	40c0202c 	andhi	r3,r8,128
   43aa8:	1023883a 	mov	r17,r2
   43aac:	183f1a26 	beq	r3,zero,43718 <_gp+0xfffe65d0>
   43ab0:	00bfe034 	movhi	r2,65408
   43ab4:	10bfffc4 	addi	r2,r2,-1
   43ab8:	2021883a 	mov	r16,r4
   43abc:	4090703a 	and	r8,r8,r2
   43ac0:	003eb306 	br	43590 <_gp+0xfffe6448>
   43ac4:	4444b03a 	or	r2,r8,r17
   43ac8:	8000291e 	bne	r16,zero,43b70 <__adddf3+0x65c>
   43acc:	10004b1e 	bne	r2,zero,43bfc <__adddf3+0x6e8>
   43ad0:	4990b03a 	or	r8,r9,r6
   43ad4:	40008b26 	beq	r8,zero,43d04 <__adddf3+0x7f0>
   43ad8:	4811883a 	mov	r8,r9
   43adc:	3023883a 	mov	r17,r6
   43ae0:	3825883a 	mov	r18,r7
   43ae4:	003eaa06 	br	43590 <_gp+0xfffe6448>
   43ae8:	1021883a 	mov	r16,r2
   43aec:	0011883a 	mov	r8,zero
   43af0:	0005883a 	mov	r2,zero
   43af4:	003f0f06 	br	43734 <_gp+0xfffe65ec>
   43af8:	217ff804 	addi	r5,r4,-32
   43afc:	00800804 	movi	r2,32
   43b00:	494ad83a 	srl	r5,r9,r5
   43b04:	20807d26 	beq	r4,r2,43cfc <__adddf3+0x7e8>
   43b08:	00801004 	movi	r2,64
   43b0c:	1109c83a 	sub	r4,r2,r4
   43b10:	4912983a 	sll	r9,r9,r4
   43b14:	498cb03a 	or	r6,r9,r6
   43b18:	300cc03a 	cmpne	r6,r6,zero
   43b1c:	298ab03a 	or	r5,r5,r6
   43b20:	0013883a 	mov	r9,zero
   43b24:	003f1506 	br	4377c <_gp+0xfffe6634>
   43b28:	0101ffc4 	movi	r4,2047
   43b2c:	113f9a1e 	bne	r2,r4,43998 <_gp+0xfffe6850>
   43b30:	4811883a 	mov	r8,r9
   43b34:	3023883a 	mov	r17,r6
   43b38:	1021883a 	mov	r16,r2
   43b3c:	3825883a 	mov	r18,r7
   43b40:	003e9306 	br	43590 <_gp+0xfffe6448>
   43b44:	8000161e 	bne	r16,zero,43ba0 <__adddf3+0x68c>
   43b48:	444ab03a 	or	r5,r8,r17
   43b4c:	28005126 	beq	r5,zero,43c94 <__adddf3+0x780>
   43b50:	0108303a 	nor	r4,zero,r4
   43b54:	20004d1e 	bne	r4,zero,43c8c <__adddf3+0x778>
   43b58:	89a3883a 	add	r17,r17,r6
   43b5c:	4253883a 	add	r9,r8,r9
   43b60:	898d803a 	cmpltu	r6,r17,r6
   43b64:	3251883a 	add	r8,r6,r9
   43b68:	1021883a 	mov	r16,r2
   43b6c:	003f0806 	br	43790 <_gp+0xfffe6648>
   43b70:	1000301e 	bne	r2,zero,43c34 <__adddf3+0x720>
   43b74:	4984b03a 	or	r2,r9,r6
   43b78:	10007126 	beq	r2,zero,43d40 <__adddf3+0x82c>
   43b7c:	4811883a 	mov	r8,r9
   43b80:	3023883a 	mov	r17,r6
   43b84:	3825883a 	mov	r18,r7
   43b88:	0401ffc4 	movi	r16,2047
   43b8c:	003e8006 	br	43590 <_gp+0xfffe6448>
   43b90:	4462b03a 	or	r17,r8,r17
   43b94:	8822c03a 	cmpne	r17,r17,zero
   43b98:	0007883a 	mov	r3,zero
   43b9c:	003f8b06 	br	439cc <_gp+0xfffe6884>
   43ba0:	0141ffc4 	movi	r5,2047
   43ba4:	11403b26 	beq	r2,r5,43c94 <__adddf3+0x780>
   43ba8:	0109c83a 	sub	r4,zero,r4
   43bac:	42002034 	orhi	r8,r8,128
   43bb0:	01400e04 	movi	r5,56
   43bb4:	29006716 	blt	r5,r4,43d54 <__adddf3+0x840>
   43bb8:	014007c4 	movi	r5,31
   43bbc:	29007016 	blt	r5,r4,43d80 <__adddf3+0x86c>
   43bc0:	01400804 	movi	r5,32
   43bc4:	290bc83a 	sub	r5,r5,r4
   43bc8:	4154983a 	sll	r10,r8,r5
   43bcc:	890ed83a 	srl	r7,r17,r4
   43bd0:	894a983a 	sll	r5,r17,r5
   43bd4:	4108d83a 	srl	r4,r8,r4
   43bd8:	51e2b03a 	or	r17,r10,r7
   43bdc:	280ac03a 	cmpne	r5,r5,zero
   43be0:	8962b03a 	or	r17,r17,r5
   43be4:	89a3883a 	add	r17,r17,r6
   43be8:	2253883a 	add	r9,r4,r9
   43bec:	898d803a 	cmpltu	r6,r17,r6
   43bf0:	3251883a 	add	r8,r6,r9
   43bf4:	1021883a 	mov	r16,r2
   43bf8:	003ee506 	br	43790 <_gp+0xfffe6648>
   43bfc:	4984b03a 	or	r2,r9,r6
   43c00:	103e6326 	beq	r2,zero,43590 <_gp+0xfffe6448>
   43c04:	8987c83a 	sub	r3,r17,r6
   43c08:	88c9803a 	cmpltu	r4,r17,r3
   43c0c:	4245c83a 	sub	r2,r8,r9
   43c10:	1105c83a 	sub	r2,r2,r4
   43c14:	1100202c 	andhi	r4,r2,128
   43c18:	203ebb26 	beq	r4,zero,43708 <_gp+0xfffe65c0>
   43c1c:	3463c83a 	sub	r17,r6,r17
   43c20:	4a07c83a 	sub	r3,r9,r8
   43c24:	344d803a 	cmpltu	r6,r6,r17
   43c28:	1991c83a 	sub	r8,r3,r6
   43c2c:	3825883a 	mov	r18,r7
   43c30:	003e5706 	br	43590 <_gp+0xfffe6448>
   43c34:	4984b03a 	or	r2,r9,r6
   43c38:	10002e26 	beq	r2,zero,43cf4 <__adddf3+0x7e0>
   43c3c:	4004d0fa 	srli	r2,r8,3
   43c40:	8822d0fa 	srli	r17,r17,3
   43c44:	4010977a 	slli	r8,r8,29
   43c48:	10c0022c 	andhi	r3,r2,8
   43c4c:	4462b03a 	or	r17,r8,r17
   43c50:	18000826 	beq	r3,zero,43c74 <__adddf3+0x760>
   43c54:	4808d0fa 	srli	r4,r9,3
   43c58:	20c0022c 	andhi	r3,r4,8
   43c5c:	1800051e 	bne	r3,zero,43c74 <__adddf3+0x760>
   43c60:	300cd0fa 	srli	r6,r6,3
   43c64:	4806977a 	slli	r3,r9,29
   43c68:	2005883a 	mov	r2,r4
   43c6c:	3825883a 	mov	r18,r7
   43c70:	19a2b03a 	or	r17,r3,r6
   43c74:	8810d77a 	srli	r8,r17,29
   43c78:	100490fa 	slli	r2,r2,3
   43c7c:	882290fa 	slli	r17,r17,3
   43c80:	0401ffc4 	movi	r16,2047
   43c84:	4090b03a 	or	r8,r8,r2
   43c88:	003e4106 	br	43590 <_gp+0xfffe6448>
   43c8c:	0141ffc4 	movi	r5,2047
   43c90:	117fc71e 	bne	r2,r5,43bb0 <_gp+0xfffe6a68>
   43c94:	4811883a 	mov	r8,r9
   43c98:	3023883a 	mov	r17,r6
   43c9c:	1021883a 	mov	r16,r2
   43ca0:	003e3b06 	br	43590 <_gp+0xfffe6448>
   43ca4:	10002f26 	beq	r2,zero,43d64 <__adddf3+0x850>
   43ca8:	4984b03a 	or	r2,r9,r6
   43cac:	10001126 	beq	r2,zero,43cf4 <__adddf3+0x7e0>
   43cb0:	4004d0fa 	srli	r2,r8,3
   43cb4:	8822d0fa 	srli	r17,r17,3
   43cb8:	4010977a 	slli	r8,r8,29
   43cbc:	10c0022c 	andhi	r3,r2,8
   43cc0:	4462b03a 	or	r17,r8,r17
   43cc4:	183feb26 	beq	r3,zero,43c74 <_gp+0xfffe6b2c>
   43cc8:	4808d0fa 	srli	r4,r9,3
   43ccc:	20c0022c 	andhi	r3,r4,8
   43cd0:	183fe81e 	bne	r3,zero,43c74 <_gp+0xfffe6b2c>
   43cd4:	300cd0fa 	srli	r6,r6,3
   43cd8:	4806977a 	slli	r3,r9,29
   43cdc:	2005883a 	mov	r2,r4
   43ce0:	19a2b03a 	or	r17,r3,r6
   43ce4:	003fe306 	br	43c74 <_gp+0xfffe6b2c>
   43ce8:	0011883a 	mov	r8,zero
   43cec:	0005883a 	mov	r2,zero
   43cf0:	003e3f06 	br	435f0 <_gp+0xfffe64a8>
   43cf4:	0401ffc4 	movi	r16,2047
   43cf8:	003e2506 	br	43590 <_gp+0xfffe6448>
   43cfc:	0013883a 	mov	r9,zero
   43d00:	003f8406 	br	43b14 <_gp+0xfffe69cc>
   43d04:	0005883a 	mov	r2,zero
   43d08:	0007883a 	mov	r3,zero
   43d0c:	003e8906 	br	43734 <_gp+0xfffe65ec>
   43d10:	197ff804 	addi	r5,r3,-32
   43d14:	01000804 	movi	r4,32
   43d18:	414ad83a 	srl	r5,r8,r5
   43d1c:	19002426 	beq	r3,r4,43db0 <__adddf3+0x89c>
   43d20:	01001004 	movi	r4,64
   43d24:	20c7c83a 	sub	r3,r4,r3
   43d28:	40c6983a 	sll	r3,r8,r3
   43d2c:	1c46b03a 	or	r3,r3,r17
   43d30:	1806c03a 	cmpne	r3,r3,zero
   43d34:	28e2b03a 	or	r17,r5,r3
   43d38:	0007883a 	mov	r3,zero
   43d3c:	003f2306 	br	439cc <_gp+0xfffe6884>
   43d40:	0007883a 	mov	r3,zero
   43d44:	5811883a 	mov	r8,r11
   43d48:	00bfffc4 	movi	r2,-1
   43d4c:	0401ffc4 	movi	r16,2047
   43d50:	003e7806 	br	43734 <_gp+0xfffe65ec>
   43d54:	4462b03a 	or	r17,r8,r17
   43d58:	8822c03a 	cmpne	r17,r17,zero
   43d5c:	0009883a 	mov	r4,zero
   43d60:	003fa006 	br	43be4 <_gp+0xfffe6a9c>
   43d64:	4811883a 	mov	r8,r9
   43d68:	3023883a 	mov	r17,r6
   43d6c:	0401ffc4 	movi	r16,2047
   43d70:	003e0706 	br	43590 <_gp+0xfffe6448>
   43d74:	4811883a 	mov	r8,r9
   43d78:	3023883a 	mov	r17,r6
   43d7c:	003e0406 	br	43590 <_gp+0xfffe6448>
   43d80:	21fff804 	addi	r7,r4,-32
   43d84:	01400804 	movi	r5,32
   43d88:	41ced83a 	srl	r7,r8,r7
   43d8c:	21400a26 	beq	r4,r5,43db8 <__adddf3+0x8a4>
   43d90:	01401004 	movi	r5,64
   43d94:	2909c83a 	sub	r4,r5,r4
   43d98:	4108983a 	sll	r4,r8,r4
   43d9c:	2448b03a 	or	r4,r4,r17
   43da0:	2008c03a 	cmpne	r4,r4,zero
   43da4:	3922b03a 	or	r17,r7,r4
   43da8:	0009883a 	mov	r4,zero
   43dac:	003f8d06 	br	43be4 <_gp+0xfffe6a9c>
   43db0:	0007883a 	mov	r3,zero
   43db4:	003fdd06 	br	43d2c <_gp+0xfffe6be4>
   43db8:	0009883a 	mov	r4,zero
   43dbc:	003ff706 	br	43d9c <_gp+0xfffe6c54>

00043dc0 <__divdf3>:
   43dc0:	defff004 	addi	sp,sp,-64
   43dc4:	dc800815 	stw	r18,32(sp)
   43dc8:	2824d53a 	srli	r18,r5,20
   43dcc:	dd800c15 	stw	r22,48(sp)
   43dd0:	282cd7fa 	srli	r22,r5,31
   43dd4:	dc000615 	stw	r16,24(sp)
   43dd8:	04000434 	movhi	r16,16
   43ddc:	843fffc4 	addi	r16,r16,-1
   43de0:	dfc00f15 	stw	ra,60(sp)
   43de4:	df000e15 	stw	fp,56(sp)
   43de8:	ddc00d15 	stw	r23,52(sp)
   43dec:	dd400b15 	stw	r21,44(sp)
   43df0:	dd000a15 	stw	r20,40(sp)
   43df4:	dcc00915 	stw	r19,36(sp)
   43df8:	dc400715 	stw	r17,28(sp)
   43dfc:	9481ffcc 	andi	r18,r18,2047
   43e00:	2c20703a 	and	r16,r5,r16
   43e04:	b2003fcc 	andi	r8,r22,255
   43e08:	90006126 	beq	r18,zero,43f90 <__divdf3+0x1d0>
   43e0c:	0081ffc4 	movi	r2,2047
   43e10:	202b883a 	mov	r21,r4
   43e14:	90803726 	beq	r18,r2,43ef4 <__divdf3+0x134>
   43e18:	80800434 	orhi	r2,r16,16
   43e1c:	100490fa 	slli	r2,r2,3
   43e20:	2020d77a 	srli	r16,r4,29
   43e24:	202a90fa 	slli	r21,r4,3
   43e28:	94bf0044 	addi	r18,r18,-1023
   43e2c:	80a0b03a 	or	r16,r16,r2
   43e30:	0013883a 	mov	r9,zero
   43e34:	000b883a 	mov	r5,zero
   43e38:	3806d53a 	srli	r3,r7,20
   43e3c:	382ed7fa 	srli	r23,r7,31
   43e40:	04400434 	movhi	r17,16
   43e44:	8c7fffc4 	addi	r17,r17,-1
   43e48:	18c1ffcc 	andi	r3,r3,2047
   43e4c:	3029883a 	mov	r20,r6
   43e50:	3c62703a 	and	r17,r7,r17
   43e54:	bf003fcc 	andi	fp,r23,255
   43e58:	18006e26 	beq	r3,zero,44014 <__divdf3+0x254>
   43e5c:	0081ffc4 	movi	r2,2047
   43e60:	18806626 	beq	r3,r2,43ffc <__divdf3+0x23c>
   43e64:	88800434 	orhi	r2,r17,16
   43e68:	100490fa 	slli	r2,r2,3
   43e6c:	3022d77a 	srli	r17,r6,29
   43e70:	302890fa 	slli	r20,r6,3
   43e74:	18ff0044 	addi	r3,r3,-1023
   43e78:	88a2b03a 	or	r17,r17,r2
   43e7c:	000f883a 	mov	r7,zero
   43e80:	b5e6f03a 	xor	r19,r22,r23
   43e84:	3a4cb03a 	or	r6,r7,r9
   43e88:	008003c4 	movi	r2,15
   43e8c:	9809883a 	mov	r4,r19
   43e90:	90c7c83a 	sub	r3,r18,r3
   43e94:	9cc03fcc 	andi	r19,r19,255
   43e98:	11809636 	bltu	r2,r6,440f4 <__divdf3+0x334>
   43e9c:	300c90ba 	slli	r6,r6,2
   43ea0:	00800134 	movhi	r2,4
   43ea4:	108fad04 	addi	r2,r2,16052
   43ea8:	308d883a 	add	r6,r6,r2
   43eac:	30800017 	ldw	r2,0(r6)
   43eb0:	1000683a 	jmp	r2
   43eb4:	000440f4 	movhi	zero,4355
   43eb8:	00043f2c 	andhi	zero,zero,4348
   43ebc:	000440e4 	muli	zero,zero,4355
   43ec0:	00043f20 	cmpeqi	zero,zero,4348
   43ec4:	000440e4 	muli	zero,zero,4355
   43ec8:	000440b8 	rdprs	zero,zero,4354
   43ecc:	000440e4 	muli	zero,zero,4355
   43ed0:	00043f20 	cmpeqi	zero,zero,4348
   43ed4:	00043f2c 	andhi	zero,zero,4348
   43ed8:	00043f2c 	andhi	zero,zero,4348
   43edc:	000440b8 	rdprs	zero,zero,4354
   43ee0:	00043f20 	cmpeqi	zero,zero,4348
   43ee4:	00043f10 	cmplti	zero,zero,4348
   43ee8:	00043f10 	cmplti	zero,zero,4348
   43eec:	00043f10 	cmplti	zero,zero,4348
   43ef0:	0004447c 	xorhi	zero,zero,4369
   43ef4:	2404b03a 	or	r2,r4,r16
   43ef8:	10006c1e 	bne	r2,zero,440ac <__divdf3+0x2ec>
   43efc:	02400204 	movi	r9,8
   43f00:	0021883a 	mov	r16,zero
   43f04:	002b883a 	mov	r21,zero
   43f08:	01400084 	movi	r5,2
   43f0c:	003fca06 	br	43e38 <_gp+0xfffe6cf0>
   43f10:	8023883a 	mov	r17,r16
   43f14:	a829883a 	mov	r20,r21
   43f18:	4039883a 	mov	fp,r8
   43f1c:	280f883a 	mov	r7,r5
   43f20:	00800084 	movi	r2,2
   43f24:	3881601e 	bne	r7,r2,444a8 <__divdf3+0x6e8>
   43f28:	e027883a 	mov	r19,fp
   43f2c:	9900004c 	andi	r4,r19,1
   43f30:	0081ffc4 	movi	r2,2047
   43f34:	0021883a 	mov	r16,zero
   43f38:	002b883a 	mov	r21,zero
   43f3c:	1004953a 	slli	r2,r2,20
   43f40:	20c03fcc 	andi	r3,r4,255
   43f44:	01400434 	movhi	r5,16
   43f48:	297fffc4 	addi	r5,r5,-1
   43f4c:	180697fa 	slli	r3,r3,31
   43f50:	8160703a 	and	r16,r16,r5
   43f54:	80a0b03a 	or	r16,r16,r2
   43f58:	80c6b03a 	or	r3,r16,r3
   43f5c:	a805883a 	mov	r2,r21
   43f60:	dfc00f17 	ldw	ra,60(sp)
   43f64:	df000e17 	ldw	fp,56(sp)
   43f68:	ddc00d17 	ldw	r23,52(sp)
   43f6c:	dd800c17 	ldw	r22,48(sp)
   43f70:	dd400b17 	ldw	r21,44(sp)
   43f74:	dd000a17 	ldw	r20,40(sp)
   43f78:	dcc00917 	ldw	r19,36(sp)
   43f7c:	dc800817 	ldw	r18,32(sp)
   43f80:	dc400717 	ldw	r17,28(sp)
   43f84:	dc000617 	ldw	r16,24(sp)
   43f88:	dec01004 	addi	sp,sp,64
   43f8c:	f800283a 	ret
   43f90:	2404b03a 	or	r2,r4,r16
   43f94:	2023883a 	mov	r17,r4
   43f98:	10003f26 	beq	r2,zero,44098 <__divdf3+0x2d8>
   43f9c:	80015e26 	beq	r16,zero,44518 <__divdf3+0x758>
   43fa0:	8009883a 	mov	r4,r16
   43fa4:	d9800215 	stw	r6,8(sp)
   43fa8:	d9c00515 	stw	r7,20(sp)
   43fac:	da000415 	stw	r8,16(sp)
   43fb0:	0045edc0 	call	45edc <__clzsi2>
   43fb4:	d9800217 	ldw	r6,8(sp)
   43fb8:	d9c00517 	ldw	r7,20(sp)
   43fbc:	da000417 	ldw	r8,16(sp)
   43fc0:	113ffd44 	addi	r4,r2,-11
   43fc4:	00c00704 	movi	r3,28
   43fc8:	19014f16 	blt	r3,r4,44508 <__divdf3+0x748>
   43fcc:	00c00744 	movi	r3,29
   43fd0:	157ffe04 	addi	r21,r2,-8
   43fd4:	1907c83a 	sub	r3,r3,r4
   43fd8:	8560983a 	sll	r16,r16,r21
   43fdc:	88c6d83a 	srl	r3,r17,r3
   43fe0:	8d6a983a 	sll	r21,r17,r21
   43fe4:	1c20b03a 	or	r16,r3,r16
   43fe8:	1080fcc4 	addi	r2,r2,1011
   43fec:	00a5c83a 	sub	r18,zero,r2
   43ff0:	0013883a 	mov	r9,zero
   43ff4:	000b883a 	mov	r5,zero
   43ff8:	003f8f06 	br	43e38 <_gp+0xfffe6cf0>
   43ffc:	3444b03a 	or	r2,r6,r17
   44000:	1000231e 	bne	r2,zero,44090 <__divdf3+0x2d0>
   44004:	0023883a 	mov	r17,zero
   44008:	0029883a 	mov	r20,zero
   4400c:	01c00084 	movi	r7,2
   44010:	003f9b06 	br	43e80 <_gp+0xfffe6d38>
   44014:	3444b03a 	or	r2,r6,r17
   44018:	10001926 	beq	r2,zero,44080 <__divdf3+0x2c0>
   4401c:	88014b26 	beq	r17,zero,4454c <__divdf3+0x78c>
   44020:	8809883a 	mov	r4,r17
   44024:	d9400115 	stw	r5,4(sp)
   44028:	d9800215 	stw	r6,8(sp)
   4402c:	da000415 	stw	r8,16(sp)
   44030:	da400315 	stw	r9,12(sp)
   44034:	0045edc0 	call	45edc <__clzsi2>
   44038:	d9400117 	ldw	r5,4(sp)
   4403c:	d9800217 	ldw	r6,8(sp)
   44040:	da000417 	ldw	r8,16(sp)
   44044:	da400317 	ldw	r9,12(sp)
   44048:	113ffd44 	addi	r4,r2,-11
   4404c:	00c00704 	movi	r3,28
   44050:	19013a16 	blt	r3,r4,4453c <__divdf3+0x77c>
   44054:	00c00744 	movi	r3,29
   44058:	153ffe04 	addi	r20,r2,-8
   4405c:	1907c83a 	sub	r3,r3,r4
   44060:	8d22983a 	sll	r17,r17,r20
   44064:	30c6d83a 	srl	r3,r6,r3
   44068:	3528983a 	sll	r20,r6,r20
   4406c:	1c62b03a 	or	r17,r3,r17
   44070:	1080fcc4 	addi	r2,r2,1011
   44074:	0087c83a 	sub	r3,zero,r2
   44078:	000f883a 	mov	r7,zero
   4407c:	003f8006 	br	43e80 <_gp+0xfffe6d38>
   44080:	0023883a 	mov	r17,zero
   44084:	0029883a 	mov	r20,zero
   44088:	01c00044 	movi	r7,1
   4408c:	003f7c06 	br	43e80 <_gp+0xfffe6d38>
   44090:	01c000c4 	movi	r7,3
   44094:	003f7a06 	br	43e80 <_gp+0xfffe6d38>
   44098:	02400104 	movi	r9,4
   4409c:	0021883a 	mov	r16,zero
   440a0:	002b883a 	mov	r21,zero
   440a4:	01400044 	movi	r5,1
   440a8:	003f6306 	br	43e38 <_gp+0xfffe6cf0>
   440ac:	02400304 	movi	r9,12
   440b0:	014000c4 	movi	r5,3
   440b4:	003f6006 	br	43e38 <_gp+0xfffe6cf0>
   440b8:	04000434 	movhi	r16,16
   440bc:	0009883a 	mov	r4,zero
   440c0:	843fffc4 	addi	r16,r16,-1
   440c4:	057fffc4 	movi	r21,-1
   440c8:	0081ffc4 	movi	r2,2047
   440cc:	003f9b06 	br	43f3c <_gp+0xfffe6df4>
   440d0:	00c00044 	movi	r3,1
   440d4:	1887c83a 	sub	r3,r3,r2
   440d8:	01000e04 	movi	r4,56
   440dc:	20c1530e 	bge	r4,r3,4462c <__divdf3+0x86c>
   440e0:	9900004c 	andi	r4,r19,1
   440e4:	0005883a 	mov	r2,zero
   440e8:	0021883a 	mov	r16,zero
   440ec:	002b883a 	mov	r21,zero
   440f0:	003f9206 	br	43f3c <_gp+0xfffe6df4>
   440f4:	8c012e36 	bltu	r17,r16,445b0 <__divdf3+0x7f0>
   440f8:	84412c26 	beq	r16,r17,445ac <__divdf3+0x7ec>
   440fc:	a82f883a 	mov	r23,r21
   44100:	18ffffc4 	addi	r3,r3,-1
   44104:	002b883a 	mov	r21,zero
   44108:	a004d63a 	srli	r2,r20,24
   4410c:	8822923a 	slli	r17,r17,8
   44110:	a028923a 	slli	r20,r20,8
   44114:	8009883a 	mov	r4,r16
   44118:	88acb03a 	or	r22,r17,r2
   4411c:	dd000015 	stw	r20,0(sp)
   44120:	b028d43a 	srli	r20,r22,16
   44124:	d8c00215 	stw	r3,8(sp)
   44128:	b4bfffcc 	andi	r18,r22,65535
   4412c:	a00b883a 	mov	r5,r20
   44130:	0041e840 	call	41e84 <__udivsi3>
   44134:	100b883a 	mov	r5,r2
   44138:	9009883a 	mov	r4,r18
   4413c:	1023883a 	mov	r17,r2
   44140:	0041f400 	call	41f40 <__mulsi3>
   44144:	8009883a 	mov	r4,r16
   44148:	a00b883a 	mov	r5,r20
   4414c:	1039883a 	mov	fp,r2
   44150:	0041ee80 	call	41ee8 <__umodsi3>
   44154:	1004943a 	slli	r2,r2,16
   44158:	b808d43a 	srli	r4,r23,16
   4415c:	d8c00217 	ldw	r3,8(sp)
   44160:	2084b03a 	or	r2,r4,r2
   44164:	1700062e 	bgeu	r2,fp,44180 <__divdf3+0x3c0>
   44168:	1585883a 	add	r2,r2,r22
   4416c:	893fffc4 	addi	r4,r17,-1
   44170:	15811d36 	bltu	r2,r22,445e8 <__divdf3+0x828>
   44174:	17011c2e 	bgeu	r2,fp,445e8 <__divdf3+0x828>
   44178:	8c7fff84 	addi	r17,r17,-2
   4417c:	1585883a 	add	r2,r2,r22
   44180:	1739c83a 	sub	fp,r2,fp
   44184:	a00b883a 	mov	r5,r20
   44188:	e009883a 	mov	r4,fp
   4418c:	d8c00215 	stw	r3,8(sp)
   44190:	0041e840 	call	41e84 <__udivsi3>
   44194:	100b883a 	mov	r5,r2
   44198:	9009883a 	mov	r4,r18
   4419c:	1021883a 	mov	r16,r2
   441a0:	0041f400 	call	41f40 <__mulsi3>
   441a4:	a00b883a 	mov	r5,r20
   441a8:	e009883a 	mov	r4,fp
   441ac:	d8800415 	stw	r2,16(sp)
   441b0:	0041ee80 	call	41ee8 <__umodsi3>
   441b4:	1004943a 	slli	r2,r2,16
   441b8:	da000417 	ldw	r8,16(sp)
   441bc:	bdffffcc 	andi	r23,r23,65535
   441c0:	b884b03a 	or	r2,r23,r2
   441c4:	d8c00217 	ldw	r3,8(sp)
   441c8:	1200062e 	bgeu	r2,r8,441e4 <__divdf3+0x424>
   441cc:	1585883a 	add	r2,r2,r22
   441d0:	813fffc4 	addi	r4,r16,-1
   441d4:	15810236 	bltu	r2,r22,445e0 <__divdf3+0x820>
   441d8:	1201012e 	bgeu	r2,r8,445e0 <__divdf3+0x820>
   441dc:	843fff84 	addi	r16,r16,-2
   441e0:	1585883a 	add	r2,r2,r22
   441e4:	8822943a 	slli	r17,r17,16
   441e8:	d9800017 	ldw	r6,0(sp)
   441ec:	1211c83a 	sub	r8,r2,r8
   441f0:	8c22b03a 	or	r17,r17,r16
   441f4:	373fffcc 	andi	fp,r6,65535
   441f8:	8abfffcc 	andi	r10,r17,65535
   441fc:	8820d43a 	srli	r16,r17,16
   44200:	5009883a 	mov	r4,r10
   44204:	e00b883a 	mov	r5,fp
   44208:	302ed43a 	srli	r23,r6,16
   4420c:	d8c00215 	stw	r3,8(sp)
   44210:	da000415 	stw	r8,16(sp)
   44214:	da800115 	stw	r10,4(sp)
   44218:	0041f400 	call	41f40 <__mulsi3>
   4421c:	800b883a 	mov	r5,r16
   44220:	e009883a 	mov	r4,fp
   44224:	d8800515 	stw	r2,20(sp)
   44228:	0041f400 	call	41f40 <__mulsi3>
   4422c:	8009883a 	mov	r4,r16
   44230:	b80b883a 	mov	r5,r23
   44234:	d8800315 	stw	r2,12(sp)
   44238:	0041f400 	call	41f40 <__mulsi3>
   4423c:	da800117 	ldw	r10,4(sp)
   44240:	b80b883a 	mov	r5,r23
   44244:	1021883a 	mov	r16,r2
   44248:	5009883a 	mov	r4,r10
   4424c:	0041f400 	call	41f40 <__mulsi3>
   44250:	d9c00517 	ldw	r7,20(sp)
   44254:	da400317 	ldw	r9,12(sp)
   44258:	d8c00217 	ldw	r3,8(sp)
   4425c:	3808d43a 	srli	r4,r7,16
   44260:	1245883a 	add	r2,r2,r9
   44264:	da000417 	ldw	r8,16(sp)
   44268:	2085883a 	add	r2,r4,r2
   4426c:	1240022e 	bgeu	r2,r9,44278 <__divdf3+0x4b8>
   44270:	01000074 	movhi	r4,1
   44274:	8121883a 	add	r16,r16,r4
   44278:	1008d43a 	srli	r4,r2,16
   4427c:	1004943a 	slli	r2,r2,16
   44280:	39ffffcc 	andi	r7,r7,65535
   44284:	2409883a 	add	r4,r4,r16
   44288:	11c5883a 	add	r2,r2,r7
   4428c:	4100bb36 	bltu	r8,r4,4457c <__divdf3+0x7bc>
   44290:	4100d726 	beq	r8,r4,445f0 <__divdf3+0x830>
   44294:	4109c83a 	sub	r4,r8,r4
   44298:	a8a1c83a 	sub	r16,r21,r2
   4429c:	ac2b803a 	cmpltu	r21,r21,r16
   442a0:	256bc83a 	sub	r21,r4,r21
   442a4:	b540d926 	beq	r22,r21,4460c <__divdf3+0x84c>
   442a8:	a00b883a 	mov	r5,r20
   442ac:	a809883a 	mov	r4,r21
   442b0:	d8c00215 	stw	r3,8(sp)
   442b4:	0041e840 	call	41e84 <__udivsi3>
   442b8:	100b883a 	mov	r5,r2
   442bc:	9009883a 	mov	r4,r18
   442c0:	d8800515 	stw	r2,20(sp)
   442c4:	0041f400 	call	41f40 <__mulsi3>
   442c8:	a809883a 	mov	r4,r21
   442cc:	a00b883a 	mov	r5,r20
   442d0:	d8800415 	stw	r2,16(sp)
   442d4:	0041ee80 	call	41ee8 <__umodsi3>
   442d8:	1004943a 	slli	r2,r2,16
   442dc:	8008d43a 	srli	r4,r16,16
   442e0:	da000417 	ldw	r8,16(sp)
   442e4:	d8c00217 	ldw	r3,8(sp)
   442e8:	2084b03a 	or	r2,r4,r2
   442ec:	d9c00517 	ldw	r7,20(sp)
   442f0:	1200062e 	bgeu	r2,r8,4430c <__divdf3+0x54c>
   442f4:	1585883a 	add	r2,r2,r22
   442f8:	393fffc4 	addi	r4,r7,-1
   442fc:	1580c536 	bltu	r2,r22,44614 <__divdf3+0x854>
   44300:	1200c42e 	bgeu	r2,r8,44614 <__divdf3+0x854>
   44304:	39ffff84 	addi	r7,r7,-2
   44308:	1585883a 	add	r2,r2,r22
   4430c:	122bc83a 	sub	r21,r2,r8
   44310:	a00b883a 	mov	r5,r20
   44314:	a809883a 	mov	r4,r21
   44318:	d8c00215 	stw	r3,8(sp)
   4431c:	d9c00515 	stw	r7,20(sp)
   44320:	0041e840 	call	41e84 <__udivsi3>
   44324:	9009883a 	mov	r4,r18
   44328:	100b883a 	mov	r5,r2
   4432c:	d8800415 	stw	r2,16(sp)
   44330:	0041f400 	call	41f40 <__mulsi3>
   44334:	a809883a 	mov	r4,r21
   44338:	a00b883a 	mov	r5,r20
   4433c:	1025883a 	mov	r18,r2
   44340:	0041ee80 	call	41ee8 <__umodsi3>
   44344:	1004943a 	slli	r2,r2,16
   44348:	813fffcc 	andi	r4,r16,65535
   4434c:	d8c00217 	ldw	r3,8(sp)
   44350:	20a0b03a 	or	r16,r4,r2
   44354:	d9c00517 	ldw	r7,20(sp)
   44358:	da000417 	ldw	r8,16(sp)
   4435c:	8480062e 	bgeu	r16,r18,44378 <__divdf3+0x5b8>
   44360:	85a1883a 	add	r16,r16,r22
   44364:	40bfffc4 	addi	r2,r8,-1
   44368:	8580ac36 	bltu	r16,r22,4461c <__divdf3+0x85c>
   4436c:	8480ab2e 	bgeu	r16,r18,4461c <__divdf3+0x85c>
   44370:	423fff84 	addi	r8,r8,-2
   44374:	85a1883a 	add	r16,r16,r22
   44378:	3804943a 	slli	r2,r7,16
   4437c:	84a1c83a 	sub	r16,r16,r18
   44380:	e009883a 	mov	r4,fp
   44384:	1228b03a 	or	r20,r2,r8
   44388:	a1ffffcc 	andi	r7,r20,65535
   4438c:	a024d43a 	srli	r18,r20,16
   44390:	380b883a 	mov	r5,r7
   44394:	d8c00215 	stw	r3,8(sp)
   44398:	d9c00515 	stw	r7,20(sp)
   4439c:	0041f400 	call	41f40 <__mulsi3>
   443a0:	900b883a 	mov	r5,r18
   443a4:	e009883a 	mov	r4,fp
   443a8:	102b883a 	mov	r21,r2
   443ac:	0041f400 	call	41f40 <__mulsi3>
   443b0:	900b883a 	mov	r5,r18
   443b4:	b809883a 	mov	r4,r23
   443b8:	1039883a 	mov	fp,r2
   443bc:	0041f400 	call	41f40 <__mulsi3>
   443c0:	d9c00517 	ldw	r7,20(sp)
   443c4:	b80b883a 	mov	r5,r23
   443c8:	1025883a 	mov	r18,r2
   443cc:	3809883a 	mov	r4,r7
   443d0:	0041f400 	call	41f40 <__mulsi3>
   443d4:	a808d43a 	srli	r4,r21,16
   443d8:	1705883a 	add	r2,r2,fp
   443dc:	d8c00217 	ldw	r3,8(sp)
   443e0:	2085883a 	add	r2,r4,r2
   443e4:	1700022e 	bgeu	r2,fp,443f0 <__divdf3+0x630>
   443e8:	01000074 	movhi	r4,1
   443ec:	9125883a 	add	r18,r18,r4
   443f0:	1008d43a 	srli	r4,r2,16
   443f4:	1004943a 	slli	r2,r2,16
   443f8:	ad7fffcc 	andi	r21,r21,65535
   443fc:	2489883a 	add	r4,r4,r18
   44400:	1545883a 	add	r2,r2,r21
   44404:	81003836 	bltu	r16,r4,444e8 <__divdf3+0x728>
   44408:	81003626 	beq	r16,r4,444e4 <__divdf3+0x724>
   4440c:	a5000054 	ori	r20,r20,1
   44410:	1880ffc4 	addi	r2,r3,1023
   44414:	00bf2e0e 	bge	zero,r2,440d0 <_gp+0xfffe6f88>
   44418:	a10001cc 	andi	r4,r20,7
   4441c:	20000726 	beq	r4,zero,4443c <__divdf3+0x67c>
   44420:	a10003cc 	andi	r4,r20,15
   44424:	01400104 	movi	r5,4
   44428:	21400426 	beq	r4,r5,4443c <__divdf3+0x67c>
   4442c:	a149883a 	add	r4,r20,r5
   44430:	2529803a 	cmpltu	r20,r4,r20
   44434:	8d23883a 	add	r17,r17,r20
   44438:	2029883a 	mov	r20,r4
   4443c:	8900402c 	andhi	r4,r17,256
   44440:	20000426 	beq	r4,zero,44454 <__divdf3+0x694>
   44444:	18810004 	addi	r2,r3,1024
   44448:	00ffc034 	movhi	r3,65280
   4444c:	18ffffc4 	addi	r3,r3,-1
   44450:	88e2703a 	and	r17,r17,r3
   44454:	00c1ff84 	movi	r3,2046
   44458:	18beb416 	blt	r3,r2,43f2c <_gp+0xfffe6de4>
   4445c:	a028d0fa 	srli	r20,r20,3
   44460:	882a977a 	slli	r21,r17,29
   44464:	8820927a 	slli	r16,r17,9
   44468:	1081ffcc 	andi	r2,r2,2047
   4446c:	ad2ab03a 	or	r21,r21,r20
   44470:	8020d33a 	srli	r16,r16,12
   44474:	9900004c 	andi	r4,r19,1
   44478:	003eb006 	br	43f3c <_gp+0xfffe6df4>
   4447c:	8080022c 	andhi	r2,r16,8
   44480:	10001226 	beq	r2,zero,444cc <__divdf3+0x70c>
   44484:	8880022c 	andhi	r2,r17,8
   44488:	1000101e 	bne	r2,zero,444cc <__divdf3+0x70c>
   4448c:	00800434 	movhi	r2,16
   44490:	8c000234 	orhi	r16,r17,8
   44494:	10bfffc4 	addi	r2,r2,-1
   44498:	b809883a 	mov	r4,r23
   4449c:	80a0703a 	and	r16,r16,r2
   444a0:	a02b883a 	mov	r21,r20
   444a4:	003f0806 	br	440c8 <_gp+0xfffe6f80>
   444a8:	008000c4 	movi	r2,3
   444ac:	3880b126 	beq	r7,r2,44774 <__divdf3+0x9b4>
   444b0:	00800044 	movi	r2,1
   444b4:	38805b1e 	bne	r7,r2,44624 <__divdf3+0x864>
   444b8:	e009883a 	mov	r4,fp
   444bc:	0005883a 	mov	r2,zero
   444c0:	0021883a 	mov	r16,zero
   444c4:	002b883a 	mov	r21,zero
   444c8:	003e9c06 	br	43f3c <_gp+0xfffe6df4>
   444cc:	00800434 	movhi	r2,16
   444d0:	84000234 	orhi	r16,r16,8
   444d4:	10bfffc4 	addi	r2,r2,-1
   444d8:	b009883a 	mov	r4,r22
   444dc:	80a0703a 	and	r16,r16,r2
   444e0:	003ef906 	br	440c8 <_gp+0xfffe6f80>
   444e4:	103fca26 	beq	r2,zero,44410 <_gp+0xfffe72c8>
   444e8:	b421883a 	add	r16,r22,r16
   444ec:	a17fffc4 	addi	r5,r20,-1
   444f0:	8580422e 	bgeu	r16,r22,445fc <__divdf3+0x83c>
   444f4:	2829883a 	mov	r20,r5
   444f8:	813fc41e 	bne	r16,r4,4440c <_gp+0xfffe72c4>
   444fc:	d9800017 	ldw	r6,0(sp)
   44500:	30bfc21e 	bne	r6,r2,4440c <_gp+0xfffe72c4>
   44504:	003fc206 	br	44410 <_gp+0xfffe72c8>
   44508:	143ff604 	addi	r16,r2,-40
   4450c:	8c20983a 	sll	r16,r17,r16
   44510:	002b883a 	mov	r21,zero
   44514:	003eb406 	br	43fe8 <_gp+0xfffe6ea0>
   44518:	d9800215 	stw	r6,8(sp)
   4451c:	d9c00515 	stw	r7,20(sp)
   44520:	da000415 	stw	r8,16(sp)
   44524:	0045edc0 	call	45edc <__clzsi2>
   44528:	10800804 	addi	r2,r2,32
   4452c:	da000417 	ldw	r8,16(sp)
   44530:	d9c00517 	ldw	r7,20(sp)
   44534:	d9800217 	ldw	r6,8(sp)
   44538:	003ea106 	br	43fc0 <_gp+0xfffe6e78>
   4453c:	147ff604 	addi	r17,r2,-40
   44540:	3462983a 	sll	r17,r6,r17
   44544:	0029883a 	mov	r20,zero
   44548:	003ec906 	br	44070 <_gp+0xfffe6f28>
   4454c:	3009883a 	mov	r4,r6
   44550:	d9400115 	stw	r5,4(sp)
   44554:	d9800215 	stw	r6,8(sp)
   44558:	da000415 	stw	r8,16(sp)
   4455c:	da400315 	stw	r9,12(sp)
   44560:	0045edc0 	call	45edc <__clzsi2>
   44564:	10800804 	addi	r2,r2,32
   44568:	da400317 	ldw	r9,12(sp)
   4456c:	da000417 	ldw	r8,16(sp)
   44570:	d9800217 	ldw	r6,8(sp)
   44574:	d9400117 	ldw	r5,4(sp)
   44578:	003eb306 	br	44048 <_gp+0xfffe6f00>
   4457c:	d9800017 	ldw	r6,0(sp)
   44580:	a9ab883a 	add	r21,r21,r6
   44584:	a98b803a 	cmpltu	r5,r21,r6
   44588:	2d8b883a 	add	r5,r5,r22
   4458c:	2a11883a 	add	r8,r5,r8
   44590:	897fffc4 	addi	r5,r17,-1
   44594:	b2000c2e 	bgeu	r22,r8,445c8 <__divdf3+0x808>
   44598:	41003f36 	bltu	r8,r4,44698 <__divdf3+0x8d8>
   4459c:	22006c26 	beq	r4,r8,44750 <__divdf3+0x990>
   445a0:	4109c83a 	sub	r4,r8,r4
   445a4:	2823883a 	mov	r17,r5
   445a8:	003f3b06 	br	44298 <_gp+0xfffe7150>
   445ac:	ad3ed336 	bltu	r21,r20,440fc <_gp+0xfffe6fb4>
   445b0:	a804d07a 	srli	r2,r21,1
   445b4:	802e97fa 	slli	r23,r16,31
   445b8:	a82a97fa 	slli	r21,r21,31
   445bc:	8020d07a 	srli	r16,r16,1
   445c0:	b8aeb03a 	or	r23,r23,r2
   445c4:	003ed006 	br	44108 <_gp+0xfffe6fc0>
   445c8:	b23ff51e 	bne	r22,r8,445a0 <_gp+0xfffe7458>
   445cc:	d9800017 	ldw	r6,0(sp)
   445d0:	a9bff12e 	bgeu	r21,r6,44598 <_gp+0xfffe7450>
   445d4:	b109c83a 	sub	r4,r22,r4
   445d8:	2823883a 	mov	r17,r5
   445dc:	003f2e06 	br	44298 <_gp+0xfffe7150>
   445e0:	2021883a 	mov	r16,r4
   445e4:	003eff06 	br	441e4 <_gp+0xfffe709c>
   445e8:	2023883a 	mov	r17,r4
   445ec:	003ee406 	br	44180 <_gp+0xfffe7038>
   445f0:	a8bfe236 	bltu	r21,r2,4457c <_gp+0xfffe7434>
   445f4:	0009883a 	mov	r4,zero
   445f8:	003f2706 	br	44298 <_gp+0xfffe7150>
   445fc:	81002d36 	bltu	r16,r4,446b4 <__divdf3+0x8f4>
   44600:	24005626 	beq	r4,r16,4475c <__divdf3+0x99c>
   44604:	2829883a 	mov	r20,r5
   44608:	003f8006 	br	4440c <_gp+0xfffe72c4>
   4460c:	053fffc4 	movi	r20,-1
   44610:	003f7f06 	br	44410 <_gp+0xfffe72c8>
   44614:	200f883a 	mov	r7,r4
   44618:	003f3c06 	br	4430c <_gp+0xfffe71c4>
   4461c:	1011883a 	mov	r8,r2
   44620:	003f5506 	br	44378 <_gp+0xfffe7230>
   44624:	e027883a 	mov	r19,fp
   44628:	003f7906 	br	44410 <_gp+0xfffe72c8>
   4462c:	010007c4 	movi	r4,31
   44630:	20c02816 	blt	r4,r3,446d4 <__divdf3+0x914>
   44634:	00800804 	movi	r2,32
   44638:	10c5c83a 	sub	r2,r2,r3
   4463c:	888a983a 	sll	r5,r17,r2
   44640:	a0c8d83a 	srl	r4,r20,r3
   44644:	a084983a 	sll	r2,r20,r2
   44648:	88e2d83a 	srl	r17,r17,r3
   4464c:	2906b03a 	or	r3,r5,r4
   44650:	1004c03a 	cmpne	r2,r2,zero
   44654:	1886b03a 	or	r3,r3,r2
   44658:	188001cc 	andi	r2,r3,7
   4465c:	10000726 	beq	r2,zero,4467c <__divdf3+0x8bc>
   44660:	188003cc 	andi	r2,r3,15
   44664:	01000104 	movi	r4,4
   44668:	11000426 	beq	r2,r4,4467c <__divdf3+0x8bc>
   4466c:	1805883a 	mov	r2,r3
   44670:	10c00104 	addi	r3,r2,4
   44674:	1885803a 	cmpltu	r2,r3,r2
   44678:	88a3883a 	add	r17,r17,r2
   4467c:	8880202c 	andhi	r2,r17,128
   44680:	10002926 	beq	r2,zero,44728 <__divdf3+0x968>
   44684:	9900004c 	andi	r4,r19,1
   44688:	00800044 	movi	r2,1
   4468c:	0021883a 	mov	r16,zero
   44690:	002b883a 	mov	r21,zero
   44694:	003e2906 	br	43f3c <_gp+0xfffe6df4>
   44698:	d9800017 	ldw	r6,0(sp)
   4469c:	8c7fff84 	addi	r17,r17,-2
   446a0:	a9ab883a 	add	r21,r21,r6
   446a4:	a98b803a 	cmpltu	r5,r21,r6
   446a8:	2d8b883a 	add	r5,r5,r22
   446ac:	2a11883a 	add	r8,r5,r8
   446b0:	003ef806 	br	44294 <_gp+0xfffe714c>
   446b4:	d9800017 	ldw	r6,0(sp)
   446b8:	318f883a 	add	r7,r6,r6
   446bc:	398b803a 	cmpltu	r5,r7,r6
   446c0:	2d8d883a 	add	r6,r5,r22
   446c4:	81a1883a 	add	r16,r16,r6
   446c8:	a17fff84 	addi	r5,r20,-2
   446cc:	d9c00015 	stw	r7,0(sp)
   446d0:	003f8806 	br	444f4 <_gp+0xfffe73ac>
   446d4:	013ff844 	movi	r4,-31
   446d8:	2085c83a 	sub	r2,r4,r2
   446dc:	8888d83a 	srl	r4,r17,r2
   446e0:	00800804 	movi	r2,32
   446e4:	18802126 	beq	r3,r2,4476c <__divdf3+0x9ac>
   446e8:	04001004 	movi	r16,64
   446ec:	80c7c83a 	sub	r3,r16,r3
   446f0:	88e0983a 	sll	r16,r17,r3
   446f4:	8504b03a 	or	r2,r16,r20
   446f8:	1004c03a 	cmpne	r2,r2,zero
   446fc:	2084b03a 	or	r2,r4,r2
   44700:	144001cc 	andi	r17,r2,7
   44704:	88000d1e 	bne	r17,zero,4473c <__divdf3+0x97c>
   44708:	0021883a 	mov	r16,zero
   4470c:	102ad0fa 	srli	r21,r2,3
   44710:	9900004c 	andi	r4,r19,1
   44714:	0005883a 	mov	r2,zero
   44718:	ac6ab03a 	or	r21,r21,r17
   4471c:	003e0706 	br	43f3c <_gp+0xfffe6df4>
   44720:	1007883a 	mov	r3,r2
   44724:	0023883a 	mov	r17,zero
   44728:	8820927a 	slli	r16,r17,9
   4472c:	1805883a 	mov	r2,r3
   44730:	8822977a 	slli	r17,r17,29
   44734:	8020d33a 	srli	r16,r16,12
   44738:	003ff406 	br	4470c <_gp+0xfffe75c4>
   4473c:	10c003cc 	andi	r3,r2,15
   44740:	01000104 	movi	r4,4
   44744:	193ff626 	beq	r3,r4,44720 <_gp+0xfffe75d8>
   44748:	0023883a 	mov	r17,zero
   4474c:	003fc806 	br	44670 <_gp+0xfffe7528>
   44750:	a8bfd136 	bltu	r21,r2,44698 <_gp+0xfffe7550>
   44754:	2823883a 	mov	r17,r5
   44758:	003fa606 	br	445f4 <_gp+0xfffe74ac>
   4475c:	d9800017 	ldw	r6,0(sp)
   44760:	30bfd436 	bltu	r6,r2,446b4 <_gp+0xfffe756c>
   44764:	2829883a 	mov	r20,r5
   44768:	003f6406 	br	444fc <_gp+0xfffe73b4>
   4476c:	0021883a 	mov	r16,zero
   44770:	003fe006 	br	446f4 <_gp+0xfffe75ac>
   44774:	00800434 	movhi	r2,16
   44778:	8c000234 	orhi	r16,r17,8
   4477c:	10bfffc4 	addi	r2,r2,-1
   44780:	e009883a 	mov	r4,fp
   44784:	80a0703a 	and	r16,r16,r2
   44788:	a02b883a 	mov	r21,r20
   4478c:	003e4e06 	br	440c8 <_gp+0xfffe6f80>

00044790 <__gedf2>:
   44790:	2804d53a 	srli	r2,r5,20
   44794:	3806d53a 	srli	r3,r7,20
   44798:	02000434 	movhi	r8,16
   4479c:	423fffc4 	addi	r8,r8,-1
   447a0:	1081ffcc 	andi	r2,r2,2047
   447a4:	0241ffc4 	movi	r9,2047
   447a8:	2a14703a 	and	r10,r5,r8
   447ac:	18c1ffcc 	andi	r3,r3,2047
   447b0:	3a10703a 	and	r8,r7,r8
   447b4:	280ad7fa 	srli	r5,r5,31
   447b8:	380ed7fa 	srli	r7,r7,31
   447bc:	12401d26 	beq	r2,r9,44834 <__gedf2+0xa4>
   447c0:	0241ffc4 	movi	r9,2047
   447c4:	1a401226 	beq	r3,r9,44810 <__gedf2+0x80>
   447c8:	1000081e 	bne	r2,zero,447ec <__gedf2+0x5c>
   447cc:	2296b03a 	or	r11,r4,r10
   447d0:	5813003a 	cmpeq	r9,r11,zero
   447d4:	1800091e 	bne	r3,zero,447fc <__gedf2+0x6c>
   447d8:	3218b03a 	or	r12,r6,r8
   447dc:	6000071e 	bne	r12,zero,447fc <__gedf2+0x6c>
   447e0:	0005883a 	mov	r2,zero
   447e4:	5800101e 	bne	r11,zero,44828 <__gedf2+0x98>
   447e8:	f800283a 	ret
   447ec:	18000c1e 	bne	r3,zero,44820 <__gedf2+0x90>
   447f0:	3212b03a 	or	r9,r6,r8
   447f4:	48000c26 	beq	r9,zero,44828 <__gedf2+0x98>
   447f8:	0013883a 	mov	r9,zero
   447fc:	39c03fcc 	andi	r7,r7,255
   44800:	48000826 	beq	r9,zero,44824 <__gedf2+0x94>
   44804:	38000926 	beq	r7,zero,4482c <__gedf2+0x9c>
   44808:	00800044 	movi	r2,1
   4480c:	f800283a 	ret
   44810:	3212b03a 	or	r9,r6,r8
   44814:	483fec26 	beq	r9,zero,447c8 <_gp+0xfffe7680>
   44818:	00bfff84 	movi	r2,-2
   4481c:	f800283a 	ret
   44820:	39c03fcc 	andi	r7,r7,255
   44824:	29c00626 	beq	r5,r7,44840 <__gedf2+0xb0>
   44828:	283ff726 	beq	r5,zero,44808 <_gp+0xfffe76c0>
   4482c:	00bfffc4 	movi	r2,-1
   44830:	f800283a 	ret
   44834:	2292b03a 	or	r9,r4,r10
   44838:	483fe126 	beq	r9,zero,447c0 <_gp+0xfffe7678>
   4483c:	003ff606 	br	44818 <_gp+0xfffe76d0>
   44840:	18bff916 	blt	r3,r2,44828 <_gp+0xfffe76e0>
   44844:	10c00316 	blt	r2,r3,44854 <__gedf2+0xc4>
   44848:	42bff736 	bltu	r8,r10,44828 <_gp+0xfffe76e0>
   4484c:	52000326 	beq	r10,r8,4485c <__gedf2+0xcc>
   44850:	5200042e 	bgeu	r10,r8,44864 <__gedf2+0xd4>
   44854:	283fec1e 	bne	r5,zero,44808 <_gp+0xfffe76c0>
   44858:	003ff406 	br	4482c <_gp+0xfffe76e4>
   4485c:	313ff236 	bltu	r6,r4,44828 <_gp+0xfffe76e0>
   44860:	21bffc36 	bltu	r4,r6,44854 <_gp+0xfffe770c>
   44864:	0005883a 	mov	r2,zero
   44868:	f800283a 	ret

0004486c <__ledf2>:
   4486c:	2804d53a 	srli	r2,r5,20
   44870:	3810d53a 	srli	r8,r7,20
   44874:	00c00434 	movhi	r3,16
   44878:	18ffffc4 	addi	r3,r3,-1
   4487c:	1081ffcc 	andi	r2,r2,2047
   44880:	0241ffc4 	movi	r9,2047
   44884:	28d4703a 	and	r10,r5,r3
   44888:	4201ffcc 	andi	r8,r8,2047
   4488c:	38c6703a 	and	r3,r7,r3
   44890:	280ad7fa 	srli	r5,r5,31
   44894:	380ed7fa 	srli	r7,r7,31
   44898:	12401f26 	beq	r2,r9,44918 <__ledf2+0xac>
   4489c:	0241ffc4 	movi	r9,2047
   448a0:	42401426 	beq	r8,r9,448f4 <__ledf2+0x88>
   448a4:	1000091e 	bne	r2,zero,448cc <__ledf2+0x60>
   448a8:	2296b03a 	or	r11,r4,r10
   448ac:	5813003a 	cmpeq	r9,r11,zero
   448b0:	29403fcc 	andi	r5,r5,255
   448b4:	40000a1e 	bne	r8,zero,448e0 <__ledf2+0x74>
   448b8:	30d8b03a 	or	r12,r6,r3
   448bc:	6000081e 	bne	r12,zero,448e0 <__ledf2+0x74>
   448c0:	0005883a 	mov	r2,zero
   448c4:	5800111e 	bne	r11,zero,4490c <__ledf2+0xa0>
   448c8:	f800283a 	ret
   448cc:	29403fcc 	andi	r5,r5,255
   448d0:	40000c1e 	bne	r8,zero,44904 <__ledf2+0x98>
   448d4:	30d2b03a 	or	r9,r6,r3
   448d8:	48000c26 	beq	r9,zero,4490c <__ledf2+0xa0>
   448dc:	0013883a 	mov	r9,zero
   448e0:	39c03fcc 	andi	r7,r7,255
   448e4:	48000826 	beq	r9,zero,44908 <__ledf2+0x9c>
   448e8:	38001126 	beq	r7,zero,44930 <__ledf2+0xc4>
   448ec:	00800044 	movi	r2,1
   448f0:	f800283a 	ret
   448f4:	30d2b03a 	or	r9,r6,r3
   448f8:	483fea26 	beq	r9,zero,448a4 <_gp+0xfffe775c>
   448fc:	00800084 	movi	r2,2
   44900:	f800283a 	ret
   44904:	39c03fcc 	andi	r7,r7,255
   44908:	39400726 	beq	r7,r5,44928 <__ledf2+0xbc>
   4490c:	2800081e 	bne	r5,zero,44930 <__ledf2+0xc4>
   44910:	00800044 	movi	r2,1
   44914:	f800283a 	ret
   44918:	2292b03a 	or	r9,r4,r10
   4491c:	483fdf26 	beq	r9,zero,4489c <_gp+0xfffe7754>
   44920:	00800084 	movi	r2,2
   44924:	f800283a 	ret
   44928:	4080030e 	bge	r8,r2,44938 <__ledf2+0xcc>
   4492c:	383fef26 	beq	r7,zero,448ec <_gp+0xfffe77a4>
   44930:	00bfffc4 	movi	r2,-1
   44934:	f800283a 	ret
   44938:	123feb16 	blt	r2,r8,448e8 <_gp+0xfffe77a0>
   4493c:	1abff336 	bltu	r3,r10,4490c <_gp+0xfffe77c4>
   44940:	50c00326 	beq	r10,r3,44950 <__ledf2+0xe4>
   44944:	50c0042e 	bgeu	r10,r3,44958 <__ledf2+0xec>
   44948:	283fe81e 	bne	r5,zero,448ec <_gp+0xfffe77a4>
   4494c:	003ff806 	br	44930 <_gp+0xfffe77e8>
   44950:	313fee36 	bltu	r6,r4,4490c <_gp+0xfffe77c4>
   44954:	21bffc36 	bltu	r4,r6,44948 <_gp+0xfffe7800>
   44958:	0005883a 	mov	r2,zero
   4495c:	f800283a 	ret

00044960 <__muldf3>:
   44960:	deffee04 	addi	sp,sp,-72
   44964:	dd000c15 	stw	r20,48(sp)
   44968:	2828d53a 	srli	r20,r5,20
   4496c:	ddc00f15 	stw	r23,60(sp)
   44970:	282ed7fa 	srli	r23,r5,31
   44974:	dc000815 	stw	r16,32(sp)
   44978:	04000434 	movhi	r16,16
   4497c:	dcc00b15 	stw	r19,44(sp)
   44980:	843fffc4 	addi	r16,r16,-1
   44984:	dfc01115 	stw	ra,68(sp)
   44988:	df001015 	stw	fp,64(sp)
   4498c:	dd800e15 	stw	r22,56(sp)
   44990:	dd400d15 	stw	r21,52(sp)
   44994:	dc800a15 	stw	r18,40(sp)
   44998:	dc400915 	stw	r17,36(sp)
   4499c:	a501ffcc 	andi	r20,r20,2047
   449a0:	2c20703a 	and	r16,r5,r16
   449a4:	b827883a 	mov	r19,r23
   449a8:	ba403fcc 	andi	r9,r23,255
   449ac:	a0006026 	beq	r20,zero,44b30 <__muldf3+0x1d0>
   449b0:	0081ffc4 	movi	r2,2047
   449b4:	202d883a 	mov	r22,r4
   449b8:	a0803626 	beq	r20,r2,44a94 <__muldf3+0x134>
   449bc:	84000434 	orhi	r16,r16,16
   449c0:	200ad77a 	srli	r5,r4,29
   449c4:	800490fa 	slli	r2,r16,3
   449c8:	202c90fa 	slli	r22,r4,3
   449cc:	a53f0044 	addi	r20,r20,-1023
   449d0:	28a0b03a 	or	r16,r5,r2
   449d4:	002b883a 	mov	r21,zero
   449d8:	000b883a 	mov	r5,zero
   449dc:	3804d53a 	srli	r2,r7,20
   449e0:	3838d7fa 	srli	fp,r7,31
   449e4:	04400434 	movhi	r17,16
   449e8:	8c7fffc4 	addi	r17,r17,-1
   449ec:	1081ffcc 	andi	r2,r2,2047
   449f0:	3025883a 	mov	r18,r6
   449f4:	3c62703a 	and	r17,r7,r17
   449f8:	e2803fcc 	andi	r10,fp,255
   449fc:	10006d26 	beq	r2,zero,44bb4 <__muldf3+0x254>
   44a00:	00c1ffc4 	movi	r3,2047
   44a04:	10c06526 	beq	r2,r3,44b9c <__muldf3+0x23c>
   44a08:	8c400434 	orhi	r17,r17,16
   44a0c:	300ed77a 	srli	r7,r6,29
   44a10:	880690fa 	slli	r3,r17,3
   44a14:	302490fa 	slli	r18,r6,3
   44a18:	10bf0044 	addi	r2,r2,-1023
   44a1c:	38e2b03a 	or	r17,r7,r3
   44a20:	000f883a 	mov	r7,zero
   44a24:	a087883a 	add	r3,r20,r2
   44a28:	010003c4 	movi	r4,15
   44a2c:	3d44b03a 	or	r2,r7,r21
   44a30:	e5ccf03a 	xor	r6,fp,r23
   44a34:	1a000044 	addi	r8,r3,1
   44a38:	20809b36 	bltu	r4,r2,44ca8 <__muldf3+0x348>
   44a3c:	100490ba 	slli	r2,r2,2
   44a40:	01000134 	movhi	r4,4
   44a44:	21129504 	addi	r4,r4,19028
   44a48:	1105883a 	add	r2,r2,r4
   44a4c:	10800017 	ldw	r2,0(r2)
   44a50:	1000683a 	jmp	r2
   44a54:	00044ca8 	cmpgeui	zero,zero,4402
   44a58:	00044ab4 	movhi	zero,4394
   44a5c:	00044ab4 	movhi	zero,4394
   44a60:	00044ab0 	cmpltui	zero,zero,4394
   44a64:	00044c84 	movi	zero,4402
   44a68:	00044c84 	movi	zero,4402
   44a6c:	00044c6c 	andhi	zero,zero,4401
   44a70:	00044ab0 	cmpltui	zero,zero,4394
   44a74:	00044c84 	movi	zero,4402
   44a78:	00044c6c 	andhi	zero,zero,4401
   44a7c:	00044c84 	movi	zero,4402
   44a80:	00044ab0 	cmpltui	zero,zero,4394
   44a84:	00044c94 	movui	zero,4402
   44a88:	00044c94 	movui	zero,4402
   44a8c:	00044c94 	movui	zero,4402
   44a90:	00044ff4 	movhi	zero,4415
   44a94:	2404b03a 	or	r2,r4,r16
   44a98:	1000711e 	bne	r2,zero,44c60 <__muldf3+0x300>
   44a9c:	05400204 	movi	r21,8
   44aa0:	0021883a 	mov	r16,zero
   44aa4:	002d883a 	mov	r22,zero
   44aa8:	01400084 	movi	r5,2
   44aac:	003fcb06 	br	449dc <_gp+0xfffe7894>
   44ab0:	500d883a 	mov	r6,r10
   44ab4:	00800084 	movi	r2,2
   44ab8:	38805926 	beq	r7,r2,44c20 <__muldf3+0x2c0>
   44abc:	008000c4 	movi	r2,3
   44ac0:	3881bb26 	beq	r7,r2,451b0 <__muldf3+0x850>
   44ac4:	00800044 	movi	r2,1
   44ac8:	3881961e 	bne	r7,r2,45124 <__muldf3+0x7c4>
   44acc:	3027883a 	mov	r19,r6
   44ad0:	0005883a 	mov	r2,zero
   44ad4:	0021883a 	mov	r16,zero
   44ad8:	002d883a 	mov	r22,zero
   44adc:	1004953a 	slli	r2,r2,20
   44ae0:	98c03fcc 	andi	r3,r19,255
   44ae4:	04400434 	movhi	r17,16
   44ae8:	8c7fffc4 	addi	r17,r17,-1
   44aec:	180697fa 	slli	r3,r3,31
   44af0:	8460703a 	and	r16,r16,r17
   44af4:	80a0b03a 	or	r16,r16,r2
   44af8:	80c6b03a 	or	r3,r16,r3
   44afc:	b005883a 	mov	r2,r22
   44b00:	dfc01117 	ldw	ra,68(sp)
   44b04:	df001017 	ldw	fp,64(sp)
   44b08:	ddc00f17 	ldw	r23,60(sp)
   44b0c:	dd800e17 	ldw	r22,56(sp)
   44b10:	dd400d17 	ldw	r21,52(sp)
   44b14:	dd000c17 	ldw	r20,48(sp)
   44b18:	dcc00b17 	ldw	r19,44(sp)
   44b1c:	dc800a17 	ldw	r18,40(sp)
   44b20:	dc400917 	ldw	r17,36(sp)
   44b24:	dc000817 	ldw	r16,32(sp)
   44b28:	dec01204 	addi	sp,sp,72
   44b2c:	f800283a 	ret
   44b30:	2404b03a 	or	r2,r4,r16
   44b34:	202b883a 	mov	r21,r4
   44b38:	10004426 	beq	r2,zero,44c4c <__muldf3+0x2ec>
   44b3c:	80015126 	beq	r16,zero,45084 <__muldf3+0x724>
   44b40:	8009883a 	mov	r4,r16
   44b44:	d9800715 	stw	r6,28(sp)
   44b48:	d9c00215 	stw	r7,8(sp)
   44b4c:	da400415 	stw	r9,16(sp)
   44b50:	0045edc0 	call	45edc <__clzsi2>
   44b54:	d9800717 	ldw	r6,28(sp)
   44b58:	d9c00217 	ldw	r7,8(sp)
   44b5c:	da400417 	ldw	r9,16(sp)
   44b60:	113ffd44 	addi	r4,r2,-11
   44b64:	00c00704 	movi	r3,28
   44b68:	19014216 	blt	r3,r4,45074 <__muldf3+0x714>
   44b6c:	00c00744 	movi	r3,29
   44b70:	15bffe04 	addi	r22,r2,-8
   44b74:	1907c83a 	sub	r3,r3,r4
   44b78:	85a0983a 	sll	r16,r16,r22
   44b7c:	a8c6d83a 	srl	r3,r21,r3
   44b80:	adac983a 	sll	r22,r21,r22
   44b84:	1c20b03a 	or	r16,r3,r16
   44b88:	1080fcc4 	addi	r2,r2,1011
   44b8c:	00a9c83a 	sub	r20,zero,r2
   44b90:	002b883a 	mov	r21,zero
   44b94:	000b883a 	mov	r5,zero
   44b98:	003f9006 	br	449dc <_gp+0xfffe7894>
   44b9c:	3446b03a 	or	r3,r6,r17
   44ba0:	1800281e 	bne	r3,zero,44c44 <__muldf3+0x2e4>
   44ba4:	0023883a 	mov	r17,zero
   44ba8:	0025883a 	mov	r18,zero
   44bac:	01c00084 	movi	r7,2
   44bb0:	003f9c06 	br	44a24 <_gp+0xfffe78dc>
   44bb4:	3446b03a 	or	r3,r6,r17
   44bb8:	18001e26 	beq	r3,zero,44c34 <__muldf3+0x2d4>
   44bbc:	88012126 	beq	r17,zero,45044 <__muldf3+0x6e4>
   44bc0:	8809883a 	mov	r4,r17
   44bc4:	d9400215 	stw	r5,8(sp)
   44bc8:	d9800715 	stw	r6,28(sp)
   44bcc:	da400415 	stw	r9,16(sp)
   44bd0:	da800315 	stw	r10,12(sp)
   44bd4:	0045edc0 	call	45edc <__clzsi2>
   44bd8:	d9400217 	ldw	r5,8(sp)
   44bdc:	d9800717 	ldw	r6,28(sp)
   44be0:	da400417 	ldw	r9,16(sp)
   44be4:	da800317 	ldw	r10,12(sp)
   44be8:	113ffd44 	addi	r4,r2,-11
   44bec:	00c00704 	movi	r3,28
   44bf0:	19011016 	blt	r3,r4,45034 <__muldf3+0x6d4>
   44bf4:	00c00744 	movi	r3,29
   44bf8:	14bffe04 	addi	r18,r2,-8
   44bfc:	1907c83a 	sub	r3,r3,r4
   44c00:	8ca2983a 	sll	r17,r17,r18
   44c04:	30c6d83a 	srl	r3,r6,r3
   44c08:	34a4983a 	sll	r18,r6,r18
   44c0c:	1c62b03a 	or	r17,r3,r17
   44c10:	1080fcc4 	addi	r2,r2,1011
   44c14:	0085c83a 	sub	r2,zero,r2
   44c18:	000f883a 	mov	r7,zero
   44c1c:	003f8106 	br	44a24 <_gp+0xfffe78dc>
   44c20:	3027883a 	mov	r19,r6
   44c24:	0081ffc4 	movi	r2,2047
   44c28:	0021883a 	mov	r16,zero
   44c2c:	002d883a 	mov	r22,zero
   44c30:	003faa06 	br	44adc <_gp+0xfffe7994>
   44c34:	0023883a 	mov	r17,zero
   44c38:	0025883a 	mov	r18,zero
   44c3c:	01c00044 	movi	r7,1
   44c40:	003f7806 	br	44a24 <_gp+0xfffe78dc>
   44c44:	01c000c4 	movi	r7,3
   44c48:	003f7606 	br	44a24 <_gp+0xfffe78dc>
   44c4c:	05400104 	movi	r21,4
   44c50:	0021883a 	mov	r16,zero
   44c54:	002d883a 	mov	r22,zero
   44c58:	01400044 	movi	r5,1
   44c5c:	003f5f06 	br	449dc <_gp+0xfffe7894>
   44c60:	05400304 	movi	r21,12
   44c64:	014000c4 	movi	r5,3
   44c68:	003f5c06 	br	449dc <_gp+0xfffe7894>
   44c6c:	04000434 	movhi	r16,16
   44c70:	0027883a 	mov	r19,zero
   44c74:	843fffc4 	addi	r16,r16,-1
   44c78:	05bfffc4 	movi	r22,-1
   44c7c:	0081ffc4 	movi	r2,2047
   44c80:	003f9606 	br	44adc <_gp+0xfffe7994>
   44c84:	8023883a 	mov	r17,r16
   44c88:	b025883a 	mov	r18,r22
   44c8c:	280f883a 	mov	r7,r5
   44c90:	003f8806 	br	44ab4 <_gp+0xfffe796c>
   44c94:	8023883a 	mov	r17,r16
   44c98:	b025883a 	mov	r18,r22
   44c9c:	480d883a 	mov	r6,r9
   44ca0:	280f883a 	mov	r7,r5
   44ca4:	003f8306 	br	44ab4 <_gp+0xfffe796c>
   44ca8:	b026d43a 	srli	r19,r22,16
   44cac:	902ed43a 	srli	r23,r18,16
   44cb0:	b5bfffcc 	andi	r22,r22,65535
   44cb4:	94bfffcc 	andi	r18,r18,65535
   44cb8:	b00b883a 	mov	r5,r22
   44cbc:	9009883a 	mov	r4,r18
   44cc0:	d8c00515 	stw	r3,20(sp)
   44cc4:	d9800715 	stw	r6,28(sp)
   44cc8:	da000615 	stw	r8,24(sp)
   44ccc:	0041f400 	call	41f40 <__mulsi3>
   44cd0:	980b883a 	mov	r5,r19
   44cd4:	9009883a 	mov	r4,r18
   44cd8:	1029883a 	mov	r20,r2
   44cdc:	0041f400 	call	41f40 <__mulsi3>
   44ce0:	b80b883a 	mov	r5,r23
   44ce4:	9809883a 	mov	r4,r19
   44ce8:	102b883a 	mov	r21,r2
   44cec:	0041f400 	call	41f40 <__mulsi3>
   44cf0:	b809883a 	mov	r4,r23
   44cf4:	b00b883a 	mov	r5,r22
   44cf8:	1039883a 	mov	fp,r2
   44cfc:	0041f400 	call	41f40 <__mulsi3>
   44d00:	a008d43a 	srli	r4,r20,16
   44d04:	1545883a 	add	r2,r2,r21
   44d08:	d8c00517 	ldw	r3,20(sp)
   44d0c:	2085883a 	add	r2,r4,r2
   44d10:	d9800717 	ldw	r6,28(sp)
   44d14:	da000617 	ldw	r8,24(sp)
   44d18:	1540022e 	bgeu	r2,r21,44d24 <__muldf3+0x3c4>
   44d1c:	01000074 	movhi	r4,1
   44d20:	e139883a 	add	fp,fp,r4
   44d24:	100e943a 	slli	r7,r2,16
   44d28:	1004d43a 	srli	r2,r2,16
   44d2c:	882ad43a 	srli	r21,r17,16
   44d30:	a53fffcc 	andi	r20,r20,65535
   44d34:	8c7fffcc 	andi	r17,r17,65535
   44d38:	3d29883a 	add	r20,r7,r20
   44d3c:	b00b883a 	mov	r5,r22
   44d40:	8809883a 	mov	r4,r17
   44d44:	d8c00515 	stw	r3,20(sp)
   44d48:	d9800715 	stw	r6,28(sp)
   44d4c:	da000615 	stw	r8,24(sp)
   44d50:	dd000115 	stw	r20,4(sp)
   44d54:	d8800015 	stw	r2,0(sp)
   44d58:	0041f400 	call	41f40 <__mulsi3>
   44d5c:	980b883a 	mov	r5,r19
   44d60:	8809883a 	mov	r4,r17
   44d64:	d8800215 	stw	r2,8(sp)
   44d68:	0041f400 	call	41f40 <__mulsi3>
   44d6c:	9809883a 	mov	r4,r19
   44d70:	a80b883a 	mov	r5,r21
   44d74:	1029883a 	mov	r20,r2
   44d78:	0041f400 	call	41f40 <__mulsi3>
   44d7c:	b00b883a 	mov	r5,r22
   44d80:	a809883a 	mov	r4,r21
   44d84:	d8800415 	stw	r2,16(sp)
   44d88:	0041f400 	call	41f40 <__mulsi3>
   44d8c:	d9c00217 	ldw	r7,8(sp)
   44d90:	1505883a 	add	r2,r2,r20
   44d94:	d8c00517 	ldw	r3,20(sp)
   44d98:	3826d43a 	srli	r19,r7,16
   44d9c:	d9800717 	ldw	r6,28(sp)
   44da0:	da000617 	ldw	r8,24(sp)
   44da4:	9885883a 	add	r2,r19,r2
   44da8:	da400417 	ldw	r9,16(sp)
   44dac:	1500022e 	bgeu	r2,r20,44db8 <__muldf3+0x458>
   44db0:	01000074 	movhi	r4,1
   44db4:	4913883a 	add	r9,r9,r4
   44db8:	1028d43a 	srli	r20,r2,16
   44dbc:	1004943a 	slli	r2,r2,16
   44dc0:	802cd43a 	srli	r22,r16,16
   44dc4:	843fffcc 	andi	r16,r16,65535
   44dc8:	3cffffcc 	andi	r19,r7,65535
   44dcc:	9009883a 	mov	r4,r18
   44dd0:	800b883a 	mov	r5,r16
   44dd4:	a269883a 	add	r20,r20,r9
   44dd8:	d8c00515 	stw	r3,20(sp)
   44ddc:	d9800715 	stw	r6,28(sp)
   44de0:	da000615 	stw	r8,24(sp)
   44de4:	14e7883a 	add	r19,r2,r19
   44de8:	0041f400 	call	41f40 <__mulsi3>
   44dec:	9009883a 	mov	r4,r18
   44df0:	b00b883a 	mov	r5,r22
   44df4:	d8800315 	stw	r2,12(sp)
   44df8:	0041f400 	call	41f40 <__mulsi3>
   44dfc:	b809883a 	mov	r4,r23
   44e00:	b00b883a 	mov	r5,r22
   44e04:	d8800215 	stw	r2,8(sp)
   44e08:	0041f400 	call	41f40 <__mulsi3>
   44e0c:	b80b883a 	mov	r5,r23
   44e10:	8009883a 	mov	r4,r16
   44e14:	d8800415 	stw	r2,16(sp)
   44e18:	0041f400 	call	41f40 <__mulsi3>
   44e1c:	da800317 	ldw	r10,12(sp)
   44e20:	d9c00217 	ldw	r7,8(sp)
   44e24:	d9000017 	ldw	r4,0(sp)
   44e28:	502ed43a 	srli	r23,r10,16
   44e2c:	11c5883a 	add	r2,r2,r7
   44e30:	24e5883a 	add	r18,r4,r19
   44e34:	b885883a 	add	r2,r23,r2
   44e38:	d8c00517 	ldw	r3,20(sp)
   44e3c:	d9800717 	ldw	r6,28(sp)
   44e40:	da000617 	ldw	r8,24(sp)
   44e44:	da400417 	ldw	r9,16(sp)
   44e48:	11c0022e 	bgeu	r2,r7,44e54 <__muldf3+0x4f4>
   44e4c:	01000074 	movhi	r4,1
   44e50:	4913883a 	add	r9,r9,r4
   44e54:	100ed43a 	srli	r7,r2,16
   44e58:	1004943a 	slli	r2,r2,16
   44e5c:	55ffffcc 	andi	r23,r10,65535
   44e60:	3a53883a 	add	r9,r7,r9
   44e64:	8809883a 	mov	r4,r17
   44e68:	800b883a 	mov	r5,r16
   44e6c:	d8c00515 	stw	r3,20(sp)
   44e70:	d9800715 	stw	r6,28(sp)
   44e74:	da000615 	stw	r8,24(sp)
   44e78:	da400415 	stw	r9,16(sp)
   44e7c:	15ef883a 	add	r23,r2,r23
   44e80:	0041f400 	call	41f40 <__mulsi3>
   44e84:	8809883a 	mov	r4,r17
   44e88:	b00b883a 	mov	r5,r22
   44e8c:	d8800215 	stw	r2,8(sp)
   44e90:	0041f400 	call	41f40 <__mulsi3>
   44e94:	b00b883a 	mov	r5,r22
   44e98:	a809883a 	mov	r4,r21
   44e9c:	d8800315 	stw	r2,12(sp)
   44ea0:	0041f400 	call	41f40 <__mulsi3>
   44ea4:	8009883a 	mov	r4,r16
   44ea8:	a80b883a 	mov	r5,r21
   44eac:	1023883a 	mov	r17,r2
   44eb0:	0041f400 	call	41f40 <__mulsi3>
   44eb4:	d9c00217 	ldw	r7,8(sp)
   44eb8:	da800317 	ldw	r10,12(sp)
   44ebc:	d8c00517 	ldw	r3,20(sp)
   44ec0:	3808d43a 	srli	r4,r7,16
   44ec4:	1285883a 	add	r2,r2,r10
   44ec8:	d9800717 	ldw	r6,28(sp)
   44ecc:	2085883a 	add	r2,r4,r2
   44ed0:	da000617 	ldw	r8,24(sp)
   44ed4:	da400417 	ldw	r9,16(sp)
   44ed8:	1280022e 	bgeu	r2,r10,44ee4 <__muldf3+0x584>
   44edc:	01000074 	movhi	r4,1
   44ee0:	8923883a 	add	r17,r17,r4
   44ee4:	1008943a 	slli	r4,r2,16
   44ee8:	39ffffcc 	andi	r7,r7,65535
   44eec:	e4b9883a 	add	fp,fp,r18
   44ef0:	21cf883a 	add	r7,r4,r7
   44ef4:	e4e7803a 	cmpltu	r19,fp,r19
   44ef8:	3d0f883a 	add	r7,r7,r20
   44efc:	bf39883a 	add	fp,r23,fp
   44f00:	99c9883a 	add	r4,r19,r7
   44f04:	e5ef803a 	cmpltu	r23,fp,r23
   44f08:	490b883a 	add	r5,r9,r4
   44f0c:	1004d43a 	srli	r2,r2,16
   44f10:	b965883a 	add	r18,r23,r5
   44f14:	24c9803a 	cmpltu	r4,r4,r19
   44f18:	3d29803a 	cmpltu	r20,r7,r20
   44f1c:	a128b03a 	or	r20,r20,r4
   44f20:	95ef803a 	cmpltu	r23,r18,r23
   44f24:	2a53803a 	cmpltu	r9,r5,r9
   44f28:	a0a9883a 	add	r20,r20,r2
   44f2c:	4deeb03a 	or	r23,r9,r23
   44f30:	a5ef883a 	add	r23,r20,r23
   44f34:	bc63883a 	add	r17,r23,r17
   44f38:	e004927a 	slli	r2,fp,9
   44f3c:	d9000117 	ldw	r4,4(sp)
   44f40:	882e927a 	slli	r23,r17,9
   44f44:	9022d5fa 	srli	r17,r18,23
   44f48:	e038d5fa 	srli	fp,fp,23
   44f4c:	1104b03a 	or	r2,r2,r4
   44f50:	9024927a 	slli	r18,r18,9
   44f54:	1004c03a 	cmpne	r2,r2,zero
   44f58:	bc62b03a 	or	r17,r23,r17
   44f5c:	1738b03a 	or	fp,r2,fp
   44f60:	8880402c 	andhi	r2,r17,256
   44f64:	e4a4b03a 	or	r18,fp,r18
   44f68:	10000726 	beq	r2,zero,44f88 <__muldf3+0x628>
   44f6c:	9006d07a 	srli	r3,r18,1
   44f70:	880497fa 	slli	r2,r17,31
   44f74:	9480004c 	andi	r18,r18,1
   44f78:	8822d07a 	srli	r17,r17,1
   44f7c:	1ca4b03a 	or	r18,r3,r18
   44f80:	14a4b03a 	or	r18,r2,r18
   44f84:	4007883a 	mov	r3,r8
   44f88:	1880ffc4 	addi	r2,r3,1023
   44f8c:	0080460e 	bge	zero,r2,450a8 <__muldf3+0x748>
   44f90:	910001cc 	andi	r4,r18,7
   44f94:	20000726 	beq	r4,zero,44fb4 <__muldf3+0x654>
   44f98:	910003cc 	andi	r4,r18,15
   44f9c:	01400104 	movi	r5,4
   44fa0:	21400426 	beq	r4,r5,44fb4 <__muldf3+0x654>
   44fa4:	9149883a 	add	r4,r18,r5
   44fa8:	24a5803a 	cmpltu	r18,r4,r18
   44fac:	8ca3883a 	add	r17,r17,r18
   44fb0:	2025883a 	mov	r18,r4
   44fb4:	8900402c 	andhi	r4,r17,256
   44fb8:	20000426 	beq	r4,zero,44fcc <__muldf3+0x66c>
   44fbc:	18810004 	addi	r2,r3,1024
   44fc0:	00ffc034 	movhi	r3,65280
   44fc4:	18ffffc4 	addi	r3,r3,-1
   44fc8:	88e2703a 	and	r17,r17,r3
   44fcc:	00c1ff84 	movi	r3,2046
   44fd0:	18bf1316 	blt	r3,r2,44c20 <_gp+0xfffe7ad8>
   44fd4:	882c977a 	slli	r22,r17,29
   44fd8:	9024d0fa 	srli	r18,r18,3
   44fdc:	8822927a 	slli	r17,r17,9
   44fe0:	1081ffcc 	andi	r2,r2,2047
   44fe4:	b4acb03a 	or	r22,r22,r18
   44fe8:	8820d33a 	srli	r16,r17,12
   44fec:	3027883a 	mov	r19,r6
   44ff0:	003eba06 	br	44adc <_gp+0xfffe7994>
   44ff4:	8080022c 	andhi	r2,r16,8
   44ff8:	10000926 	beq	r2,zero,45020 <__muldf3+0x6c0>
   44ffc:	8880022c 	andhi	r2,r17,8
   45000:	1000071e 	bne	r2,zero,45020 <__muldf3+0x6c0>
   45004:	00800434 	movhi	r2,16
   45008:	8c000234 	orhi	r16,r17,8
   4500c:	10bfffc4 	addi	r2,r2,-1
   45010:	e027883a 	mov	r19,fp
   45014:	80a0703a 	and	r16,r16,r2
   45018:	902d883a 	mov	r22,r18
   4501c:	003f1706 	br	44c7c <_gp+0xfffe7b34>
   45020:	00800434 	movhi	r2,16
   45024:	84000234 	orhi	r16,r16,8
   45028:	10bfffc4 	addi	r2,r2,-1
   4502c:	80a0703a 	and	r16,r16,r2
   45030:	003f1206 	br	44c7c <_gp+0xfffe7b34>
   45034:	147ff604 	addi	r17,r2,-40
   45038:	3462983a 	sll	r17,r6,r17
   4503c:	0025883a 	mov	r18,zero
   45040:	003ef306 	br	44c10 <_gp+0xfffe7ac8>
   45044:	3009883a 	mov	r4,r6
   45048:	d9400215 	stw	r5,8(sp)
   4504c:	d9800715 	stw	r6,28(sp)
   45050:	da400415 	stw	r9,16(sp)
   45054:	da800315 	stw	r10,12(sp)
   45058:	0045edc0 	call	45edc <__clzsi2>
   4505c:	10800804 	addi	r2,r2,32
   45060:	da800317 	ldw	r10,12(sp)
   45064:	da400417 	ldw	r9,16(sp)
   45068:	d9800717 	ldw	r6,28(sp)
   4506c:	d9400217 	ldw	r5,8(sp)
   45070:	003edd06 	br	44be8 <_gp+0xfffe7aa0>
   45074:	143ff604 	addi	r16,r2,-40
   45078:	ac20983a 	sll	r16,r21,r16
   4507c:	002d883a 	mov	r22,zero
   45080:	003ec106 	br	44b88 <_gp+0xfffe7a40>
   45084:	d9800715 	stw	r6,28(sp)
   45088:	d9c00215 	stw	r7,8(sp)
   4508c:	da400415 	stw	r9,16(sp)
   45090:	0045edc0 	call	45edc <__clzsi2>
   45094:	10800804 	addi	r2,r2,32
   45098:	da400417 	ldw	r9,16(sp)
   4509c:	d9c00217 	ldw	r7,8(sp)
   450a0:	d9800717 	ldw	r6,28(sp)
   450a4:	003eae06 	br	44b60 <_gp+0xfffe7a18>
   450a8:	00c00044 	movi	r3,1
   450ac:	1887c83a 	sub	r3,r3,r2
   450b0:	01000e04 	movi	r4,56
   450b4:	20fe8516 	blt	r4,r3,44acc <_gp+0xfffe7984>
   450b8:	010007c4 	movi	r4,31
   450bc:	20c01b16 	blt	r4,r3,4512c <__muldf3+0x7cc>
   450c0:	00800804 	movi	r2,32
   450c4:	10c5c83a 	sub	r2,r2,r3
   450c8:	888a983a 	sll	r5,r17,r2
   450cc:	90c8d83a 	srl	r4,r18,r3
   450d0:	9084983a 	sll	r2,r18,r2
   450d4:	88e2d83a 	srl	r17,r17,r3
   450d8:	2906b03a 	or	r3,r5,r4
   450dc:	1004c03a 	cmpne	r2,r2,zero
   450e0:	1886b03a 	or	r3,r3,r2
   450e4:	188001cc 	andi	r2,r3,7
   450e8:	10000726 	beq	r2,zero,45108 <__muldf3+0x7a8>
   450ec:	188003cc 	andi	r2,r3,15
   450f0:	01000104 	movi	r4,4
   450f4:	11000426 	beq	r2,r4,45108 <__muldf3+0x7a8>
   450f8:	1805883a 	mov	r2,r3
   450fc:	10c00104 	addi	r3,r2,4
   45100:	1885803a 	cmpltu	r2,r3,r2
   45104:	88a3883a 	add	r17,r17,r2
   45108:	8880202c 	andhi	r2,r17,128
   4510c:	10001c26 	beq	r2,zero,45180 <__muldf3+0x820>
   45110:	3027883a 	mov	r19,r6
   45114:	00800044 	movi	r2,1
   45118:	0021883a 	mov	r16,zero
   4511c:	002d883a 	mov	r22,zero
   45120:	003e6e06 	br	44adc <_gp+0xfffe7994>
   45124:	4007883a 	mov	r3,r8
   45128:	003f9706 	br	44f88 <_gp+0xfffe7e40>
   4512c:	017ff844 	movi	r5,-31
   45130:	2885c83a 	sub	r2,r5,r2
   45134:	888ad83a 	srl	r5,r17,r2
   45138:	00800804 	movi	r2,32
   4513c:	18801a26 	beq	r3,r2,451a8 <__muldf3+0x848>
   45140:	01001004 	movi	r4,64
   45144:	20c7c83a 	sub	r3,r4,r3
   45148:	88e2983a 	sll	r17,r17,r3
   4514c:	8ca4b03a 	or	r18,r17,r18
   45150:	9004c03a 	cmpne	r2,r18,zero
   45154:	2884b03a 	or	r2,r5,r2
   45158:	144001cc 	andi	r17,r2,7
   4515c:	88000d1e 	bne	r17,zero,45194 <__muldf3+0x834>
   45160:	0021883a 	mov	r16,zero
   45164:	102cd0fa 	srli	r22,r2,3
   45168:	3027883a 	mov	r19,r6
   4516c:	0005883a 	mov	r2,zero
   45170:	b46cb03a 	or	r22,r22,r17
   45174:	003e5906 	br	44adc <_gp+0xfffe7994>
   45178:	1007883a 	mov	r3,r2
   4517c:	0023883a 	mov	r17,zero
   45180:	8820927a 	slli	r16,r17,9
   45184:	1805883a 	mov	r2,r3
   45188:	8822977a 	slli	r17,r17,29
   4518c:	8020d33a 	srli	r16,r16,12
   45190:	003ff406 	br	45164 <_gp+0xfffe801c>
   45194:	10c003cc 	andi	r3,r2,15
   45198:	01000104 	movi	r4,4
   4519c:	193ff626 	beq	r3,r4,45178 <_gp+0xfffe8030>
   451a0:	0023883a 	mov	r17,zero
   451a4:	003fd506 	br	450fc <_gp+0xfffe7fb4>
   451a8:	0023883a 	mov	r17,zero
   451ac:	003fe706 	br	4514c <_gp+0xfffe8004>
   451b0:	00800434 	movhi	r2,16
   451b4:	8c000234 	orhi	r16,r17,8
   451b8:	10bfffc4 	addi	r2,r2,-1
   451bc:	3027883a 	mov	r19,r6
   451c0:	80a0703a 	and	r16,r16,r2
   451c4:	902d883a 	mov	r22,r18
   451c8:	003eac06 	br	44c7c <_gp+0xfffe7b34>

000451cc <__subdf3>:
   451cc:	02000434 	movhi	r8,16
   451d0:	423fffc4 	addi	r8,r8,-1
   451d4:	defffb04 	addi	sp,sp,-20
   451d8:	2a14703a 	and	r10,r5,r8
   451dc:	3812d53a 	srli	r9,r7,20
   451e0:	3a10703a 	and	r8,r7,r8
   451e4:	2006d77a 	srli	r3,r4,29
   451e8:	3004d77a 	srli	r2,r6,29
   451ec:	dc000015 	stw	r16,0(sp)
   451f0:	501490fa 	slli	r10,r10,3
   451f4:	2820d53a 	srli	r16,r5,20
   451f8:	401090fa 	slli	r8,r8,3
   451fc:	dc800215 	stw	r18,8(sp)
   45200:	dc400115 	stw	r17,4(sp)
   45204:	dfc00415 	stw	ra,16(sp)
   45208:	202290fa 	slli	r17,r4,3
   4520c:	dcc00315 	stw	r19,12(sp)
   45210:	4a41ffcc 	andi	r9,r9,2047
   45214:	0101ffc4 	movi	r4,2047
   45218:	2824d7fa 	srli	r18,r5,31
   4521c:	8401ffcc 	andi	r16,r16,2047
   45220:	50c6b03a 	or	r3,r10,r3
   45224:	380ed7fa 	srli	r7,r7,31
   45228:	408ab03a 	or	r5,r8,r2
   4522c:	300c90fa 	slli	r6,r6,3
   45230:	49009626 	beq	r9,r4,4548c <__subdf3+0x2c0>
   45234:	39c0005c 	xori	r7,r7,1
   45238:	8245c83a 	sub	r2,r16,r9
   4523c:	3c807426 	beq	r7,r18,45410 <__subdf3+0x244>
   45240:	0080af0e 	bge	zero,r2,45500 <__subdf3+0x334>
   45244:	48002a1e 	bne	r9,zero,452f0 <__subdf3+0x124>
   45248:	2988b03a 	or	r4,r5,r6
   4524c:	20009a1e 	bne	r4,zero,454b8 <__subdf3+0x2ec>
   45250:	888001cc 	andi	r2,r17,7
   45254:	10000726 	beq	r2,zero,45274 <__subdf3+0xa8>
   45258:	888003cc 	andi	r2,r17,15
   4525c:	01000104 	movi	r4,4
   45260:	11000426 	beq	r2,r4,45274 <__subdf3+0xa8>
   45264:	890b883a 	add	r5,r17,r4
   45268:	2c63803a 	cmpltu	r17,r5,r17
   4526c:	1c47883a 	add	r3,r3,r17
   45270:	2823883a 	mov	r17,r5
   45274:	1880202c 	andhi	r2,r3,128
   45278:	10005926 	beq	r2,zero,453e0 <__subdf3+0x214>
   4527c:	84000044 	addi	r16,r16,1
   45280:	0081ffc4 	movi	r2,2047
   45284:	8080be26 	beq	r16,r2,45580 <__subdf3+0x3b4>
   45288:	017fe034 	movhi	r5,65408
   4528c:	297fffc4 	addi	r5,r5,-1
   45290:	1946703a 	and	r3,r3,r5
   45294:	1804977a 	slli	r2,r3,29
   45298:	1806927a 	slli	r3,r3,9
   4529c:	8822d0fa 	srli	r17,r17,3
   452a0:	8401ffcc 	andi	r16,r16,2047
   452a4:	180ad33a 	srli	r5,r3,12
   452a8:	9100004c 	andi	r4,r18,1
   452ac:	1444b03a 	or	r2,r2,r17
   452b0:	80c1ffcc 	andi	r3,r16,2047
   452b4:	1820953a 	slli	r16,r3,20
   452b8:	20c03fcc 	andi	r3,r4,255
   452bc:	180897fa 	slli	r4,r3,31
   452c0:	00c00434 	movhi	r3,16
   452c4:	18ffffc4 	addi	r3,r3,-1
   452c8:	28c6703a 	and	r3,r5,r3
   452cc:	1c06b03a 	or	r3,r3,r16
   452d0:	1906b03a 	or	r3,r3,r4
   452d4:	dfc00417 	ldw	ra,16(sp)
   452d8:	dcc00317 	ldw	r19,12(sp)
   452dc:	dc800217 	ldw	r18,8(sp)
   452e0:	dc400117 	ldw	r17,4(sp)
   452e4:	dc000017 	ldw	r16,0(sp)
   452e8:	dec00504 	addi	sp,sp,20
   452ec:	f800283a 	ret
   452f0:	0101ffc4 	movi	r4,2047
   452f4:	813fd626 	beq	r16,r4,45250 <_gp+0xfffe8108>
   452f8:	29402034 	orhi	r5,r5,128
   452fc:	01000e04 	movi	r4,56
   45300:	2080a316 	blt	r4,r2,45590 <__subdf3+0x3c4>
   45304:	010007c4 	movi	r4,31
   45308:	2080c616 	blt	r4,r2,45624 <__subdf3+0x458>
   4530c:	01000804 	movi	r4,32
   45310:	2089c83a 	sub	r4,r4,r2
   45314:	2910983a 	sll	r8,r5,r4
   45318:	308ed83a 	srl	r7,r6,r2
   4531c:	3108983a 	sll	r4,r6,r4
   45320:	2884d83a 	srl	r2,r5,r2
   45324:	41ccb03a 	or	r6,r8,r7
   45328:	2008c03a 	cmpne	r4,r4,zero
   4532c:	310cb03a 	or	r6,r6,r4
   45330:	898dc83a 	sub	r6,r17,r6
   45334:	89a3803a 	cmpltu	r17,r17,r6
   45338:	1887c83a 	sub	r3,r3,r2
   4533c:	1c47c83a 	sub	r3,r3,r17
   45340:	3023883a 	mov	r17,r6
   45344:	1880202c 	andhi	r2,r3,128
   45348:	10002326 	beq	r2,zero,453d8 <__subdf3+0x20c>
   4534c:	04c02034 	movhi	r19,128
   45350:	9cffffc4 	addi	r19,r19,-1
   45354:	1ce6703a 	and	r19,r3,r19
   45358:	98007a26 	beq	r19,zero,45544 <__subdf3+0x378>
   4535c:	9809883a 	mov	r4,r19
   45360:	0045edc0 	call	45edc <__clzsi2>
   45364:	113ffe04 	addi	r4,r2,-8
   45368:	00c007c4 	movi	r3,31
   4536c:	19007b16 	blt	r3,r4,4555c <__subdf3+0x390>
   45370:	00800804 	movi	r2,32
   45374:	1105c83a 	sub	r2,r2,r4
   45378:	8884d83a 	srl	r2,r17,r2
   4537c:	9906983a 	sll	r3,r19,r4
   45380:	8922983a 	sll	r17,r17,r4
   45384:	10c4b03a 	or	r2,r2,r3
   45388:	24007816 	blt	r4,r16,4556c <__subdf3+0x3a0>
   4538c:	2421c83a 	sub	r16,r4,r16
   45390:	80c00044 	addi	r3,r16,1
   45394:	010007c4 	movi	r4,31
   45398:	20c09516 	blt	r4,r3,455f0 <__subdf3+0x424>
   4539c:	01400804 	movi	r5,32
   453a0:	28cbc83a 	sub	r5,r5,r3
   453a4:	88c8d83a 	srl	r4,r17,r3
   453a8:	8962983a 	sll	r17,r17,r5
   453ac:	114a983a 	sll	r5,r2,r5
   453b0:	10c6d83a 	srl	r3,r2,r3
   453b4:	8804c03a 	cmpne	r2,r17,zero
   453b8:	290ab03a 	or	r5,r5,r4
   453bc:	28a2b03a 	or	r17,r5,r2
   453c0:	0021883a 	mov	r16,zero
   453c4:	003fa206 	br	45250 <_gp+0xfffe8108>
   453c8:	2090b03a 	or	r8,r4,r2
   453cc:	40018e26 	beq	r8,zero,45a08 <__subdf3+0x83c>
   453d0:	1007883a 	mov	r3,r2
   453d4:	2023883a 	mov	r17,r4
   453d8:	888001cc 	andi	r2,r17,7
   453dc:	103f9e1e 	bne	r2,zero,45258 <_gp+0xfffe8110>
   453e0:	1804977a 	slli	r2,r3,29
   453e4:	8822d0fa 	srli	r17,r17,3
   453e8:	1810d0fa 	srli	r8,r3,3
   453ec:	9100004c 	andi	r4,r18,1
   453f0:	1444b03a 	or	r2,r2,r17
   453f4:	00c1ffc4 	movi	r3,2047
   453f8:	80c02826 	beq	r16,r3,4549c <__subdf3+0x2d0>
   453fc:	01400434 	movhi	r5,16
   45400:	297fffc4 	addi	r5,r5,-1
   45404:	80e0703a 	and	r16,r16,r3
   45408:	414a703a 	and	r5,r8,r5
   4540c:	003fa806 	br	452b0 <_gp+0xfffe8168>
   45410:	0080630e 	bge	zero,r2,455a0 <__subdf3+0x3d4>
   45414:	48003026 	beq	r9,zero,454d8 <__subdf3+0x30c>
   45418:	0101ffc4 	movi	r4,2047
   4541c:	813f8c26 	beq	r16,r4,45250 <_gp+0xfffe8108>
   45420:	29402034 	orhi	r5,r5,128
   45424:	01000e04 	movi	r4,56
   45428:	2080a90e 	bge	r4,r2,456d0 <__subdf3+0x504>
   4542c:	298cb03a 	or	r6,r5,r6
   45430:	3012c03a 	cmpne	r9,r6,zero
   45434:	0005883a 	mov	r2,zero
   45438:	4c53883a 	add	r9,r9,r17
   4543c:	4c63803a 	cmpltu	r17,r9,r17
   45440:	10c7883a 	add	r3,r2,r3
   45444:	88c7883a 	add	r3,r17,r3
   45448:	4823883a 	mov	r17,r9
   4544c:	1880202c 	andhi	r2,r3,128
   45450:	1000d026 	beq	r2,zero,45794 <__subdf3+0x5c8>
   45454:	84000044 	addi	r16,r16,1
   45458:	0081ffc4 	movi	r2,2047
   4545c:	8080fe26 	beq	r16,r2,45858 <__subdf3+0x68c>
   45460:	00bfe034 	movhi	r2,65408
   45464:	10bfffc4 	addi	r2,r2,-1
   45468:	1886703a 	and	r3,r3,r2
   4546c:	880ad07a 	srli	r5,r17,1
   45470:	180497fa 	slli	r2,r3,31
   45474:	8900004c 	andi	r4,r17,1
   45478:	2922b03a 	or	r17,r5,r4
   4547c:	1806d07a 	srli	r3,r3,1
   45480:	1462b03a 	or	r17,r2,r17
   45484:	3825883a 	mov	r18,r7
   45488:	003f7106 	br	45250 <_gp+0xfffe8108>
   4548c:	2984b03a 	or	r2,r5,r6
   45490:	103f6826 	beq	r2,zero,45234 <_gp+0xfffe80ec>
   45494:	39c03fcc 	andi	r7,r7,255
   45498:	003f6706 	br	45238 <_gp+0xfffe80f0>
   4549c:	4086b03a 	or	r3,r8,r2
   454a0:	18015226 	beq	r3,zero,459ec <__subdf3+0x820>
   454a4:	00c00434 	movhi	r3,16
   454a8:	41400234 	orhi	r5,r8,8
   454ac:	18ffffc4 	addi	r3,r3,-1
   454b0:	28ca703a 	and	r5,r5,r3
   454b4:	003f7e06 	br	452b0 <_gp+0xfffe8168>
   454b8:	10bfffc4 	addi	r2,r2,-1
   454bc:	1000491e 	bne	r2,zero,455e4 <__subdf3+0x418>
   454c0:	898fc83a 	sub	r7,r17,r6
   454c4:	89e3803a 	cmpltu	r17,r17,r7
   454c8:	1947c83a 	sub	r3,r3,r5
   454cc:	1c47c83a 	sub	r3,r3,r17
   454d0:	3823883a 	mov	r17,r7
   454d4:	003f9b06 	br	45344 <_gp+0xfffe81fc>
   454d8:	2988b03a 	or	r4,r5,r6
   454dc:	203f5c26 	beq	r4,zero,45250 <_gp+0xfffe8108>
   454e0:	10bfffc4 	addi	r2,r2,-1
   454e4:	1000931e 	bne	r2,zero,45734 <__subdf3+0x568>
   454e8:	898d883a 	add	r6,r17,r6
   454ec:	3463803a 	cmpltu	r17,r6,r17
   454f0:	1947883a 	add	r3,r3,r5
   454f4:	88c7883a 	add	r3,r17,r3
   454f8:	3023883a 	mov	r17,r6
   454fc:	003fd306 	br	4544c <_gp+0xfffe8304>
   45500:	1000541e 	bne	r2,zero,45654 <__subdf3+0x488>
   45504:	80800044 	addi	r2,r16,1
   45508:	1081ffcc 	andi	r2,r2,2047
   4550c:	01000044 	movi	r4,1
   45510:	2080a20e 	bge	r4,r2,4579c <__subdf3+0x5d0>
   45514:	8989c83a 	sub	r4,r17,r6
   45518:	8905803a 	cmpltu	r2,r17,r4
   4551c:	1967c83a 	sub	r19,r3,r5
   45520:	98a7c83a 	sub	r19,r19,r2
   45524:	9880202c 	andhi	r2,r19,128
   45528:	10006326 	beq	r2,zero,456b8 <__subdf3+0x4ec>
   4552c:	3463c83a 	sub	r17,r6,r17
   45530:	28c7c83a 	sub	r3,r5,r3
   45534:	344d803a 	cmpltu	r6,r6,r17
   45538:	19a7c83a 	sub	r19,r3,r6
   4553c:	3825883a 	mov	r18,r7
   45540:	983f861e 	bne	r19,zero,4535c <_gp+0xfffe8214>
   45544:	8809883a 	mov	r4,r17
   45548:	0045edc0 	call	45edc <__clzsi2>
   4554c:	10800804 	addi	r2,r2,32
   45550:	113ffe04 	addi	r4,r2,-8
   45554:	00c007c4 	movi	r3,31
   45558:	193f850e 	bge	r3,r4,45370 <_gp+0xfffe8228>
   4555c:	10bff604 	addi	r2,r2,-40
   45560:	8884983a 	sll	r2,r17,r2
   45564:	0023883a 	mov	r17,zero
   45568:	243f880e 	bge	r4,r16,4538c <_gp+0xfffe8244>
   4556c:	00ffe034 	movhi	r3,65408
   45570:	18ffffc4 	addi	r3,r3,-1
   45574:	8121c83a 	sub	r16,r16,r4
   45578:	10c6703a 	and	r3,r2,r3
   4557c:	003f3406 	br	45250 <_gp+0xfffe8108>
   45580:	9100004c 	andi	r4,r18,1
   45584:	000b883a 	mov	r5,zero
   45588:	0005883a 	mov	r2,zero
   4558c:	003f4806 	br	452b0 <_gp+0xfffe8168>
   45590:	298cb03a 	or	r6,r5,r6
   45594:	300cc03a 	cmpne	r6,r6,zero
   45598:	0005883a 	mov	r2,zero
   4559c:	003f6406 	br	45330 <_gp+0xfffe81e8>
   455a0:	10009a1e 	bne	r2,zero,4580c <__subdf3+0x640>
   455a4:	82400044 	addi	r9,r16,1
   455a8:	4881ffcc 	andi	r2,r9,2047
   455ac:	02800044 	movi	r10,1
   455b0:	5080670e 	bge	r10,r2,45750 <__subdf3+0x584>
   455b4:	0081ffc4 	movi	r2,2047
   455b8:	4880af26 	beq	r9,r2,45878 <__subdf3+0x6ac>
   455bc:	898d883a 	add	r6,r17,r6
   455c0:	1945883a 	add	r2,r3,r5
   455c4:	3447803a 	cmpltu	r3,r6,r17
   455c8:	1887883a 	add	r3,r3,r2
   455cc:	182297fa 	slli	r17,r3,31
   455d0:	300cd07a 	srli	r6,r6,1
   455d4:	1806d07a 	srli	r3,r3,1
   455d8:	4821883a 	mov	r16,r9
   455dc:	89a2b03a 	or	r17,r17,r6
   455e0:	003f1b06 	br	45250 <_gp+0xfffe8108>
   455e4:	0101ffc4 	movi	r4,2047
   455e8:	813f441e 	bne	r16,r4,452fc <_gp+0xfffe81b4>
   455ec:	003f1806 	br	45250 <_gp+0xfffe8108>
   455f0:	843ff844 	addi	r16,r16,-31
   455f4:	01400804 	movi	r5,32
   455f8:	1408d83a 	srl	r4,r2,r16
   455fc:	19405026 	beq	r3,r5,45740 <__subdf3+0x574>
   45600:	01401004 	movi	r5,64
   45604:	28c7c83a 	sub	r3,r5,r3
   45608:	10c4983a 	sll	r2,r2,r3
   4560c:	88a2b03a 	or	r17,r17,r2
   45610:	8822c03a 	cmpne	r17,r17,zero
   45614:	2462b03a 	or	r17,r4,r17
   45618:	0007883a 	mov	r3,zero
   4561c:	0021883a 	mov	r16,zero
   45620:	003f6d06 	br	453d8 <_gp+0xfffe8290>
   45624:	11fff804 	addi	r7,r2,-32
   45628:	01000804 	movi	r4,32
   4562c:	29ced83a 	srl	r7,r5,r7
   45630:	11004526 	beq	r2,r4,45748 <__subdf3+0x57c>
   45634:	01001004 	movi	r4,64
   45638:	2089c83a 	sub	r4,r4,r2
   4563c:	2904983a 	sll	r2,r5,r4
   45640:	118cb03a 	or	r6,r2,r6
   45644:	300cc03a 	cmpne	r6,r6,zero
   45648:	398cb03a 	or	r6,r7,r6
   4564c:	0005883a 	mov	r2,zero
   45650:	003f3706 	br	45330 <_gp+0xfffe81e8>
   45654:	80002a26 	beq	r16,zero,45700 <__subdf3+0x534>
   45658:	0101ffc4 	movi	r4,2047
   4565c:	49006626 	beq	r9,r4,457f8 <__subdf3+0x62c>
   45660:	0085c83a 	sub	r2,zero,r2
   45664:	18c02034 	orhi	r3,r3,128
   45668:	01000e04 	movi	r4,56
   4566c:	20807e16 	blt	r4,r2,45868 <__subdf3+0x69c>
   45670:	010007c4 	movi	r4,31
   45674:	2080e716 	blt	r4,r2,45a14 <__subdf3+0x848>
   45678:	01000804 	movi	r4,32
   4567c:	2089c83a 	sub	r4,r4,r2
   45680:	1914983a 	sll	r10,r3,r4
   45684:	8890d83a 	srl	r8,r17,r2
   45688:	8908983a 	sll	r4,r17,r4
   4568c:	1884d83a 	srl	r2,r3,r2
   45690:	5222b03a 	or	r17,r10,r8
   45694:	2006c03a 	cmpne	r3,r4,zero
   45698:	88e2b03a 	or	r17,r17,r3
   4569c:	3463c83a 	sub	r17,r6,r17
   456a0:	2885c83a 	sub	r2,r5,r2
   456a4:	344d803a 	cmpltu	r6,r6,r17
   456a8:	1187c83a 	sub	r3,r2,r6
   456ac:	4821883a 	mov	r16,r9
   456b0:	3825883a 	mov	r18,r7
   456b4:	003f2306 	br	45344 <_gp+0xfffe81fc>
   456b8:	24d0b03a 	or	r8,r4,r19
   456bc:	40001b1e 	bne	r8,zero,4572c <__subdf3+0x560>
   456c0:	0005883a 	mov	r2,zero
   456c4:	0009883a 	mov	r4,zero
   456c8:	0021883a 	mov	r16,zero
   456cc:	003f4906 	br	453f4 <_gp+0xfffe82ac>
   456d0:	010007c4 	movi	r4,31
   456d4:	20803a16 	blt	r4,r2,457c0 <__subdf3+0x5f4>
   456d8:	01000804 	movi	r4,32
   456dc:	2089c83a 	sub	r4,r4,r2
   456e0:	2912983a 	sll	r9,r5,r4
   456e4:	3090d83a 	srl	r8,r6,r2
   456e8:	3108983a 	sll	r4,r6,r4
   456ec:	2884d83a 	srl	r2,r5,r2
   456f0:	4a12b03a 	or	r9,r9,r8
   456f4:	2008c03a 	cmpne	r4,r4,zero
   456f8:	4912b03a 	or	r9,r9,r4
   456fc:	003f4e06 	br	45438 <_gp+0xfffe82f0>
   45700:	1c48b03a 	or	r4,r3,r17
   45704:	20003c26 	beq	r4,zero,457f8 <__subdf3+0x62c>
   45708:	0084303a 	nor	r2,zero,r2
   4570c:	1000381e 	bne	r2,zero,457f0 <__subdf3+0x624>
   45710:	3463c83a 	sub	r17,r6,r17
   45714:	28c5c83a 	sub	r2,r5,r3
   45718:	344d803a 	cmpltu	r6,r6,r17
   4571c:	1187c83a 	sub	r3,r2,r6
   45720:	4821883a 	mov	r16,r9
   45724:	3825883a 	mov	r18,r7
   45728:	003f0606 	br	45344 <_gp+0xfffe81fc>
   4572c:	2023883a 	mov	r17,r4
   45730:	003f0906 	br	45358 <_gp+0xfffe8210>
   45734:	0101ffc4 	movi	r4,2047
   45738:	813f3a1e 	bne	r16,r4,45424 <_gp+0xfffe82dc>
   4573c:	003ec406 	br	45250 <_gp+0xfffe8108>
   45740:	0005883a 	mov	r2,zero
   45744:	003fb106 	br	4560c <_gp+0xfffe84c4>
   45748:	0005883a 	mov	r2,zero
   4574c:	003fbc06 	br	45640 <_gp+0xfffe84f8>
   45750:	1c44b03a 	or	r2,r3,r17
   45754:	80008e1e 	bne	r16,zero,45990 <__subdf3+0x7c4>
   45758:	1000c826 	beq	r2,zero,45a7c <__subdf3+0x8b0>
   4575c:	2984b03a 	or	r2,r5,r6
   45760:	103ebb26 	beq	r2,zero,45250 <_gp+0xfffe8108>
   45764:	8989883a 	add	r4,r17,r6
   45768:	1945883a 	add	r2,r3,r5
   4576c:	2447803a 	cmpltu	r3,r4,r17
   45770:	1887883a 	add	r3,r3,r2
   45774:	1880202c 	andhi	r2,r3,128
   45778:	2023883a 	mov	r17,r4
   4577c:	103f1626 	beq	r2,zero,453d8 <_gp+0xfffe8290>
   45780:	00bfe034 	movhi	r2,65408
   45784:	10bfffc4 	addi	r2,r2,-1
   45788:	5021883a 	mov	r16,r10
   4578c:	1886703a 	and	r3,r3,r2
   45790:	003eaf06 	br	45250 <_gp+0xfffe8108>
   45794:	3825883a 	mov	r18,r7
   45798:	003f0f06 	br	453d8 <_gp+0xfffe8290>
   4579c:	1c44b03a 	or	r2,r3,r17
   457a0:	8000251e 	bne	r16,zero,45838 <__subdf3+0x66c>
   457a4:	1000661e 	bne	r2,zero,45940 <__subdf3+0x774>
   457a8:	2990b03a 	or	r8,r5,r6
   457ac:	40009626 	beq	r8,zero,45a08 <__subdf3+0x83c>
   457b0:	2807883a 	mov	r3,r5
   457b4:	3023883a 	mov	r17,r6
   457b8:	3825883a 	mov	r18,r7
   457bc:	003ea406 	br	45250 <_gp+0xfffe8108>
   457c0:	127ff804 	addi	r9,r2,-32
   457c4:	01000804 	movi	r4,32
   457c8:	2a52d83a 	srl	r9,r5,r9
   457cc:	11008c26 	beq	r2,r4,45a00 <__subdf3+0x834>
   457d0:	01001004 	movi	r4,64
   457d4:	2085c83a 	sub	r2,r4,r2
   457d8:	2884983a 	sll	r2,r5,r2
   457dc:	118cb03a 	or	r6,r2,r6
   457e0:	300cc03a 	cmpne	r6,r6,zero
   457e4:	4992b03a 	or	r9,r9,r6
   457e8:	0005883a 	mov	r2,zero
   457ec:	003f1206 	br	45438 <_gp+0xfffe82f0>
   457f0:	0101ffc4 	movi	r4,2047
   457f4:	493f9c1e 	bne	r9,r4,45668 <_gp+0xfffe8520>
   457f8:	2807883a 	mov	r3,r5
   457fc:	3023883a 	mov	r17,r6
   45800:	4821883a 	mov	r16,r9
   45804:	3825883a 	mov	r18,r7
   45808:	003e9106 	br	45250 <_gp+0xfffe8108>
   4580c:	80001f1e 	bne	r16,zero,4588c <__subdf3+0x6c0>
   45810:	1c48b03a 	or	r4,r3,r17
   45814:	20005a26 	beq	r4,zero,45980 <__subdf3+0x7b4>
   45818:	0084303a 	nor	r2,zero,r2
   4581c:	1000561e 	bne	r2,zero,45978 <__subdf3+0x7ac>
   45820:	89a3883a 	add	r17,r17,r6
   45824:	1945883a 	add	r2,r3,r5
   45828:	898d803a 	cmpltu	r6,r17,r6
   4582c:	3087883a 	add	r3,r6,r2
   45830:	4821883a 	mov	r16,r9
   45834:	003f0506 	br	4544c <_gp+0xfffe8304>
   45838:	10002b1e 	bne	r2,zero,458e8 <__subdf3+0x71c>
   4583c:	2984b03a 	or	r2,r5,r6
   45840:	10008026 	beq	r2,zero,45a44 <__subdf3+0x878>
   45844:	2807883a 	mov	r3,r5
   45848:	3023883a 	mov	r17,r6
   4584c:	3825883a 	mov	r18,r7
   45850:	0401ffc4 	movi	r16,2047
   45854:	003e7e06 	br	45250 <_gp+0xfffe8108>
   45858:	3809883a 	mov	r4,r7
   4585c:	0011883a 	mov	r8,zero
   45860:	0005883a 	mov	r2,zero
   45864:	003ee306 	br	453f4 <_gp+0xfffe82ac>
   45868:	1c62b03a 	or	r17,r3,r17
   4586c:	8822c03a 	cmpne	r17,r17,zero
   45870:	0005883a 	mov	r2,zero
   45874:	003f8906 	br	4569c <_gp+0xfffe8554>
   45878:	3809883a 	mov	r4,r7
   4587c:	4821883a 	mov	r16,r9
   45880:	0011883a 	mov	r8,zero
   45884:	0005883a 	mov	r2,zero
   45888:	003eda06 	br	453f4 <_gp+0xfffe82ac>
   4588c:	0101ffc4 	movi	r4,2047
   45890:	49003b26 	beq	r9,r4,45980 <__subdf3+0x7b4>
   45894:	0085c83a 	sub	r2,zero,r2
   45898:	18c02034 	orhi	r3,r3,128
   4589c:	01000e04 	movi	r4,56
   458a0:	20806e16 	blt	r4,r2,45a5c <__subdf3+0x890>
   458a4:	010007c4 	movi	r4,31
   458a8:	20807716 	blt	r4,r2,45a88 <__subdf3+0x8bc>
   458ac:	01000804 	movi	r4,32
   458b0:	2089c83a 	sub	r4,r4,r2
   458b4:	1914983a 	sll	r10,r3,r4
   458b8:	8890d83a 	srl	r8,r17,r2
   458bc:	8908983a 	sll	r4,r17,r4
   458c0:	1884d83a 	srl	r2,r3,r2
   458c4:	5222b03a 	or	r17,r10,r8
   458c8:	2006c03a 	cmpne	r3,r4,zero
   458cc:	88e2b03a 	or	r17,r17,r3
   458d0:	89a3883a 	add	r17,r17,r6
   458d4:	1145883a 	add	r2,r2,r5
   458d8:	898d803a 	cmpltu	r6,r17,r6
   458dc:	3087883a 	add	r3,r6,r2
   458e0:	4821883a 	mov	r16,r9
   458e4:	003ed906 	br	4544c <_gp+0xfffe8304>
   458e8:	2984b03a 	or	r2,r5,r6
   458ec:	10004226 	beq	r2,zero,459f8 <__subdf3+0x82c>
   458f0:	1808d0fa 	srli	r4,r3,3
   458f4:	8822d0fa 	srli	r17,r17,3
   458f8:	1806977a 	slli	r3,r3,29
   458fc:	2080022c 	andhi	r2,r4,8
   45900:	1c62b03a 	or	r17,r3,r17
   45904:	10000826 	beq	r2,zero,45928 <__subdf3+0x75c>
   45908:	2812d0fa 	srli	r9,r5,3
   4590c:	4880022c 	andhi	r2,r9,8
   45910:	1000051e 	bne	r2,zero,45928 <__subdf3+0x75c>
   45914:	300cd0fa 	srli	r6,r6,3
   45918:	2804977a 	slli	r2,r5,29
   4591c:	4809883a 	mov	r4,r9
   45920:	3825883a 	mov	r18,r7
   45924:	11a2b03a 	or	r17,r2,r6
   45928:	8806d77a 	srli	r3,r17,29
   4592c:	200890fa 	slli	r4,r4,3
   45930:	882290fa 	slli	r17,r17,3
   45934:	0401ffc4 	movi	r16,2047
   45938:	1906b03a 	or	r3,r3,r4
   4593c:	003e4406 	br	45250 <_gp+0xfffe8108>
   45940:	2984b03a 	or	r2,r5,r6
   45944:	103e4226 	beq	r2,zero,45250 <_gp+0xfffe8108>
   45948:	8989c83a 	sub	r4,r17,r6
   4594c:	8911803a 	cmpltu	r8,r17,r4
   45950:	1945c83a 	sub	r2,r3,r5
   45954:	1205c83a 	sub	r2,r2,r8
   45958:	1200202c 	andhi	r8,r2,128
   4595c:	403e9a26 	beq	r8,zero,453c8 <_gp+0xfffe8280>
   45960:	3463c83a 	sub	r17,r6,r17
   45964:	28c5c83a 	sub	r2,r5,r3
   45968:	344d803a 	cmpltu	r6,r6,r17
   4596c:	1187c83a 	sub	r3,r2,r6
   45970:	3825883a 	mov	r18,r7
   45974:	003e3606 	br	45250 <_gp+0xfffe8108>
   45978:	0101ffc4 	movi	r4,2047
   4597c:	493fc71e 	bne	r9,r4,4589c <_gp+0xfffe8754>
   45980:	2807883a 	mov	r3,r5
   45984:	3023883a 	mov	r17,r6
   45988:	4821883a 	mov	r16,r9
   4598c:	003e3006 	br	45250 <_gp+0xfffe8108>
   45990:	10003626 	beq	r2,zero,45a6c <__subdf3+0x8a0>
   45994:	2984b03a 	or	r2,r5,r6
   45998:	10001726 	beq	r2,zero,459f8 <__subdf3+0x82c>
   4599c:	1808d0fa 	srli	r4,r3,3
   459a0:	8822d0fa 	srli	r17,r17,3
   459a4:	1806977a 	slli	r3,r3,29
   459a8:	2080022c 	andhi	r2,r4,8
   459ac:	1c62b03a 	or	r17,r3,r17
   459b0:	10000726 	beq	r2,zero,459d0 <__subdf3+0x804>
   459b4:	2812d0fa 	srli	r9,r5,3
   459b8:	4880022c 	andhi	r2,r9,8
   459bc:	1000041e 	bne	r2,zero,459d0 <__subdf3+0x804>
   459c0:	300cd0fa 	srli	r6,r6,3
   459c4:	2804977a 	slli	r2,r5,29
   459c8:	4809883a 	mov	r4,r9
   459cc:	11a2b03a 	or	r17,r2,r6
   459d0:	8806d77a 	srli	r3,r17,29
   459d4:	200890fa 	slli	r4,r4,3
   459d8:	882290fa 	slli	r17,r17,3
   459dc:	3825883a 	mov	r18,r7
   459e0:	1906b03a 	or	r3,r3,r4
   459e4:	0401ffc4 	movi	r16,2047
   459e8:	003e1906 	br	45250 <_gp+0xfffe8108>
   459ec:	000b883a 	mov	r5,zero
   459f0:	0005883a 	mov	r2,zero
   459f4:	003e2e06 	br	452b0 <_gp+0xfffe8168>
   459f8:	0401ffc4 	movi	r16,2047
   459fc:	003e1406 	br	45250 <_gp+0xfffe8108>
   45a00:	0005883a 	mov	r2,zero
   45a04:	003f7506 	br	457dc <_gp+0xfffe8694>
   45a08:	0005883a 	mov	r2,zero
   45a0c:	0009883a 	mov	r4,zero
   45a10:	003e7806 	br	453f4 <_gp+0xfffe82ac>
   45a14:	123ff804 	addi	r8,r2,-32
   45a18:	01000804 	movi	r4,32
   45a1c:	1a10d83a 	srl	r8,r3,r8
   45a20:	11002526 	beq	r2,r4,45ab8 <__subdf3+0x8ec>
   45a24:	01001004 	movi	r4,64
   45a28:	2085c83a 	sub	r2,r4,r2
   45a2c:	1884983a 	sll	r2,r3,r2
   45a30:	1444b03a 	or	r2,r2,r17
   45a34:	1004c03a 	cmpne	r2,r2,zero
   45a38:	40a2b03a 	or	r17,r8,r2
   45a3c:	0005883a 	mov	r2,zero
   45a40:	003f1606 	br	4569c <_gp+0xfffe8554>
   45a44:	02000434 	movhi	r8,16
   45a48:	0009883a 	mov	r4,zero
   45a4c:	423fffc4 	addi	r8,r8,-1
   45a50:	00bfffc4 	movi	r2,-1
   45a54:	0401ffc4 	movi	r16,2047
   45a58:	003e6606 	br	453f4 <_gp+0xfffe82ac>
   45a5c:	1c62b03a 	or	r17,r3,r17
   45a60:	8822c03a 	cmpne	r17,r17,zero
   45a64:	0005883a 	mov	r2,zero
   45a68:	003f9906 	br	458d0 <_gp+0xfffe8788>
   45a6c:	2807883a 	mov	r3,r5
   45a70:	3023883a 	mov	r17,r6
   45a74:	0401ffc4 	movi	r16,2047
   45a78:	003df506 	br	45250 <_gp+0xfffe8108>
   45a7c:	2807883a 	mov	r3,r5
   45a80:	3023883a 	mov	r17,r6
   45a84:	003df206 	br	45250 <_gp+0xfffe8108>
   45a88:	123ff804 	addi	r8,r2,-32
   45a8c:	01000804 	movi	r4,32
   45a90:	1a10d83a 	srl	r8,r3,r8
   45a94:	11000a26 	beq	r2,r4,45ac0 <__subdf3+0x8f4>
   45a98:	01001004 	movi	r4,64
   45a9c:	2085c83a 	sub	r2,r4,r2
   45aa0:	1884983a 	sll	r2,r3,r2
   45aa4:	1444b03a 	or	r2,r2,r17
   45aa8:	1004c03a 	cmpne	r2,r2,zero
   45aac:	40a2b03a 	or	r17,r8,r2
   45ab0:	0005883a 	mov	r2,zero
   45ab4:	003f8606 	br	458d0 <_gp+0xfffe8788>
   45ab8:	0005883a 	mov	r2,zero
   45abc:	003fdc06 	br	45a30 <_gp+0xfffe88e8>
   45ac0:	0005883a 	mov	r2,zero
   45ac4:	003ff706 	br	45aa4 <_gp+0xfffe895c>

00045ac8 <__fixdfsi>:
   45ac8:	280cd53a 	srli	r6,r5,20
   45acc:	00c00434 	movhi	r3,16
   45ad0:	18ffffc4 	addi	r3,r3,-1
   45ad4:	3181ffcc 	andi	r6,r6,2047
   45ad8:	01c0ff84 	movi	r7,1022
   45adc:	28c6703a 	and	r3,r5,r3
   45ae0:	280ad7fa 	srli	r5,r5,31
   45ae4:	3980120e 	bge	r7,r6,45b30 <__fixdfsi+0x68>
   45ae8:	00810744 	movi	r2,1053
   45aec:	11800c16 	blt	r2,r6,45b20 <__fixdfsi+0x58>
   45af0:	00810cc4 	movi	r2,1075
   45af4:	1185c83a 	sub	r2,r2,r6
   45af8:	01c007c4 	movi	r7,31
   45afc:	18c00434 	orhi	r3,r3,16
   45b00:	38800d16 	blt	r7,r2,45b38 <__fixdfsi+0x70>
   45b04:	31befb44 	addi	r6,r6,-1043
   45b08:	2084d83a 	srl	r2,r4,r2
   45b0c:	1986983a 	sll	r3,r3,r6
   45b10:	1884b03a 	or	r2,r3,r2
   45b14:	28000726 	beq	r5,zero,45b34 <__fixdfsi+0x6c>
   45b18:	0085c83a 	sub	r2,zero,r2
   45b1c:	f800283a 	ret
   45b20:	00a00034 	movhi	r2,32768
   45b24:	10bfffc4 	addi	r2,r2,-1
   45b28:	2885883a 	add	r2,r5,r2
   45b2c:	f800283a 	ret
   45b30:	0005883a 	mov	r2,zero
   45b34:	f800283a 	ret
   45b38:	008104c4 	movi	r2,1043
   45b3c:	1185c83a 	sub	r2,r2,r6
   45b40:	1884d83a 	srl	r2,r3,r2
   45b44:	003ff306 	br	45b14 <_gp+0xfffe89cc>

00045b48 <__floatsidf>:
   45b48:	defffd04 	addi	sp,sp,-12
   45b4c:	dfc00215 	stw	ra,8(sp)
   45b50:	dc400115 	stw	r17,4(sp)
   45b54:	dc000015 	stw	r16,0(sp)
   45b58:	20002b26 	beq	r4,zero,45c08 <__floatsidf+0xc0>
   45b5c:	2023883a 	mov	r17,r4
   45b60:	2020d7fa 	srli	r16,r4,31
   45b64:	20002d16 	blt	r4,zero,45c1c <__floatsidf+0xd4>
   45b68:	8809883a 	mov	r4,r17
   45b6c:	0045edc0 	call	45edc <__clzsi2>
   45b70:	01410784 	movi	r5,1054
   45b74:	288bc83a 	sub	r5,r5,r2
   45b78:	01010cc4 	movi	r4,1075
   45b7c:	2149c83a 	sub	r4,r4,r5
   45b80:	00c007c4 	movi	r3,31
   45b84:	1900160e 	bge	r3,r4,45be0 <__floatsidf+0x98>
   45b88:	00c104c4 	movi	r3,1043
   45b8c:	1947c83a 	sub	r3,r3,r5
   45b90:	88c6983a 	sll	r3,r17,r3
   45b94:	00800434 	movhi	r2,16
   45b98:	10bfffc4 	addi	r2,r2,-1
   45b9c:	1886703a 	and	r3,r3,r2
   45ba0:	2941ffcc 	andi	r5,r5,2047
   45ba4:	800d883a 	mov	r6,r16
   45ba8:	0005883a 	mov	r2,zero
   45bac:	280a953a 	slli	r5,r5,20
   45bb0:	31803fcc 	andi	r6,r6,255
   45bb4:	01000434 	movhi	r4,16
   45bb8:	300c97fa 	slli	r6,r6,31
   45bbc:	213fffc4 	addi	r4,r4,-1
   45bc0:	1906703a 	and	r3,r3,r4
   45bc4:	1946b03a 	or	r3,r3,r5
   45bc8:	1986b03a 	or	r3,r3,r6
   45bcc:	dfc00217 	ldw	ra,8(sp)
   45bd0:	dc400117 	ldw	r17,4(sp)
   45bd4:	dc000017 	ldw	r16,0(sp)
   45bd8:	dec00304 	addi	sp,sp,12
   45bdc:	f800283a 	ret
   45be0:	00c002c4 	movi	r3,11
   45be4:	1887c83a 	sub	r3,r3,r2
   45be8:	88c6d83a 	srl	r3,r17,r3
   45bec:	8904983a 	sll	r2,r17,r4
   45bf0:	01000434 	movhi	r4,16
   45bf4:	213fffc4 	addi	r4,r4,-1
   45bf8:	2941ffcc 	andi	r5,r5,2047
   45bfc:	1906703a 	and	r3,r3,r4
   45c00:	800d883a 	mov	r6,r16
   45c04:	003fe906 	br	45bac <_gp+0xfffe8a64>
   45c08:	000d883a 	mov	r6,zero
   45c0c:	000b883a 	mov	r5,zero
   45c10:	0007883a 	mov	r3,zero
   45c14:	0005883a 	mov	r2,zero
   45c18:	003fe406 	br	45bac <_gp+0xfffe8a64>
   45c1c:	0123c83a 	sub	r17,zero,r4
   45c20:	003fd106 	br	45b68 <_gp+0xfffe8a20>

00045c24 <__extendsfdf2>:
   45c24:	200ad5fa 	srli	r5,r4,23
   45c28:	defffd04 	addi	sp,sp,-12
   45c2c:	dc400115 	stw	r17,4(sp)
   45c30:	29403fcc 	andi	r5,r5,255
   45c34:	29800044 	addi	r6,r5,1
   45c38:	04402034 	movhi	r17,128
   45c3c:	dc000015 	stw	r16,0(sp)
   45c40:	8c7fffc4 	addi	r17,r17,-1
   45c44:	dfc00215 	stw	ra,8(sp)
   45c48:	31803fcc 	andi	r6,r6,255
   45c4c:	00800044 	movi	r2,1
   45c50:	8922703a 	and	r17,r17,r4
   45c54:	2020d7fa 	srli	r16,r4,31
   45c58:	1180110e 	bge	r2,r6,45ca0 <__extendsfdf2+0x7c>
   45c5c:	880cd0fa 	srli	r6,r17,3
   45c60:	8822977a 	slli	r17,r17,29
   45c64:	2940e004 	addi	r5,r5,896
   45c68:	2941ffcc 	andi	r5,r5,2047
   45c6c:	2804953a 	slli	r2,r5,20
   45c70:	01400434 	movhi	r5,16
   45c74:	800697fa 	slli	r3,r16,31
   45c78:	297fffc4 	addi	r5,r5,-1
   45c7c:	314a703a 	and	r5,r6,r5
   45c80:	288ab03a 	or	r5,r5,r2
   45c84:	28c6b03a 	or	r3,r5,r3
   45c88:	8805883a 	mov	r2,r17
   45c8c:	dfc00217 	ldw	ra,8(sp)
   45c90:	dc400117 	ldw	r17,4(sp)
   45c94:	dc000017 	ldw	r16,0(sp)
   45c98:	dec00304 	addi	sp,sp,12
   45c9c:	f800283a 	ret
   45ca0:	2800111e 	bne	r5,zero,45ce8 <__extendsfdf2+0xc4>
   45ca4:	88001c26 	beq	r17,zero,45d18 <__extendsfdf2+0xf4>
   45ca8:	8809883a 	mov	r4,r17
   45cac:	0045edc0 	call	45edc <__clzsi2>
   45cb0:	00c00284 	movi	r3,10
   45cb4:	18801b16 	blt	r3,r2,45d24 <__extendsfdf2+0x100>
   45cb8:	018002c4 	movi	r6,11
   45cbc:	308dc83a 	sub	r6,r6,r2
   45cc0:	11000544 	addi	r4,r2,21
   45cc4:	8986d83a 	srl	r3,r17,r6
   45cc8:	8922983a 	sll	r17,r17,r4
   45ccc:	0180e244 	movi	r6,905
   45cd0:	01400434 	movhi	r5,16
   45cd4:	3085c83a 	sub	r2,r6,r2
   45cd8:	297fffc4 	addi	r5,r5,-1
   45cdc:	194c703a 	and	r6,r3,r5
   45ce0:	1141ffcc 	andi	r5,r2,2047
   45ce4:	003fe006 	br	45c68 <_gp+0xfffe8b20>
   45ce8:	88000826 	beq	r17,zero,45d0c <__extendsfdf2+0xe8>
   45cec:	880cd0fa 	srli	r6,r17,3
   45cf0:	00800434 	movhi	r2,16
   45cf4:	10bfffc4 	addi	r2,r2,-1
   45cf8:	31800234 	orhi	r6,r6,8
   45cfc:	8822977a 	slli	r17,r17,29
   45d00:	308c703a 	and	r6,r6,r2
   45d04:	0141ffc4 	movi	r5,2047
   45d08:	003fd706 	br	45c68 <_gp+0xfffe8b20>
   45d0c:	0141ffc4 	movi	r5,2047
   45d10:	000d883a 	mov	r6,zero
   45d14:	003fd406 	br	45c68 <_gp+0xfffe8b20>
   45d18:	000b883a 	mov	r5,zero
   45d1c:	000d883a 	mov	r6,zero
   45d20:	003fd106 	br	45c68 <_gp+0xfffe8b20>
   45d24:	11bffd44 	addi	r6,r2,-11
   45d28:	8986983a 	sll	r3,r17,r6
   45d2c:	0023883a 	mov	r17,zero
   45d30:	003fe606 	br	45ccc <_gp+0xfffe8b84>

00045d34 <__truncdfsf2>:
   45d34:	2810d53a 	srli	r8,r5,20
   45d38:	01c00434 	movhi	r7,16
   45d3c:	39ffffc4 	addi	r7,r7,-1
   45d40:	29ce703a 	and	r7,r5,r7
   45d44:	4201ffcc 	andi	r8,r8,2047
   45d48:	380e90fa 	slli	r7,r7,3
   45d4c:	200cd77a 	srli	r6,r4,29
   45d50:	42400044 	addi	r9,r8,1
   45d54:	4a41ffcc 	andi	r9,r9,2047
   45d58:	00c00044 	movi	r3,1
   45d5c:	280ad7fa 	srli	r5,r5,31
   45d60:	31ceb03a 	or	r7,r6,r7
   45d64:	200490fa 	slli	r2,r4,3
   45d68:	1a40230e 	bge	r3,r9,45df8 <__truncdfsf2+0xc4>
   45d6c:	40ff2004 	addi	r3,r8,-896
   45d70:	01803f84 	movi	r6,254
   45d74:	30c01516 	blt	r6,r3,45dcc <__truncdfsf2+0x98>
   45d78:	00c0380e 	bge	zero,r3,45e5c <__truncdfsf2+0x128>
   45d7c:	200c91ba 	slli	r6,r4,6
   45d80:	380e90fa 	slli	r7,r7,3
   45d84:	1004d77a 	srli	r2,r2,29
   45d88:	300cc03a 	cmpne	r6,r6,zero
   45d8c:	31ccb03a 	or	r6,r6,r7
   45d90:	308cb03a 	or	r6,r6,r2
   45d94:	308001cc 	andi	r2,r6,7
   45d98:	10000426 	beq	r2,zero,45dac <__truncdfsf2+0x78>
   45d9c:	308003cc 	andi	r2,r6,15
   45da0:	01000104 	movi	r4,4
   45da4:	11000126 	beq	r2,r4,45dac <__truncdfsf2+0x78>
   45da8:	31800104 	addi	r6,r6,4
   45dac:	3081002c 	andhi	r2,r6,1024
   45db0:	10001626 	beq	r2,zero,45e0c <__truncdfsf2+0xd8>
   45db4:	18c00044 	addi	r3,r3,1
   45db8:	00803fc4 	movi	r2,255
   45dbc:	18800326 	beq	r3,r2,45dcc <__truncdfsf2+0x98>
   45dc0:	300c91ba 	slli	r6,r6,6
   45dc4:	300cd27a 	srli	r6,r6,9
   45dc8:	00000206 	br	45dd4 <__truncdfsf2+0xa0>
   45dcc:	00ffffc4 	movi	r3,-1
   45dd0:	000d883a 	mov	r6,zero
   45dd4:	18c03fcc 	andi	r3,r3,255
   45dd8:	180895fa 	slli	r4,r3,23
   45ddc:	00c02034 	movhi	r3,128
   45de0:	280a97fa 	slli	r5,r5,31
   45de4:	18ffffc4 	addi	r3,r3,-1
   45de8:	30c6703a 	and	r3,r6,r3
   45dec:	1906b03a 	or	r3,r3,r4
   45df0:	1944b03a 	or	r2,r3,r5
   45df4:	f800283a 	ret
   45df8:	40000b1e 	bne	r8,zero,45e28 <__truncdfsf2+0xf4>
   45dfc:	388cb03a 	or	r6,r7,r2
   45e00:	0007883a 	mov	r3,zero
   45e04:	30000426 	beq	r6,zero,45e18 <__truncdfsf2+0xe4>
   45e08:	01800144 	movi	r6,5
   45e0c:	00803fc4 	movi	r2,255
   45e10:	300cd0fa 	srli	r6,r6,3
   45e14:	18800a26 	beq	r3,r2,45e40 <__truncdfsf2+0x10c>
   45e18:	00802034 	movhi	r2,128
   45e1c:	10bfffc4 	addi	r2,r2,-1
   45e20:	308c703a 	and	r6,r6,r2
   45e24:	003feb06 	br	45dd4 <_gp+0xfffe8c8c>
   45e28:	3888b03a 	or	r4,r7,r2
   45e2c:	203fe726 	beq	r4,zero,45dcc <_gp+0xfffe8c84>
   45e30:	380c90fa 	slli	r6,r7,3
   45e34:	00c03fc4 	movi	r3,255
   45e38:	31808034 	orhi	r6,r6,512
   45e3c:	003fd506 	br	45d94 <_gp+0xfffe8c4c>
   45e40:	303fe226 	beq	r6,zero,45dcc <_gp+0xfffe8c84>
   45e44:	00802034 	movhi	r2,128
   45e48:	31801034 	orhi	r6,r6,64
   45e4c:	10bfffc4 	addi	r2,r2,-1
   45e50:	00ffffc4 	movi	r3,-1
   45e54:	308c703a 	and	r6,r6,r2
   45e58:	003fde06 	br	45dd4 <_gp+0xfffe8c8c>
   45e5c:	013ffa44 	movi	r4,-23
   45e60:	19000e16 	blt	r3,r4,45e9c <__truncdfsf2+0x168>
   45e64:	01000784 	movi	r4,30
   45e68:	20c9c83a 	sub	r4,r4,r3
   45e6c:	018007c4 	movi	r6,31
   45e70:	39c02034 	orhi	r7,r7,128
   45e74:	31000b16 	blt	r6,r4,45ea4 <__truncdfsf2+0x170>
   45e78:	423f2084 	addi	r8,r8,-894
   45e7c:	120c983a 	sll	r6,r2,r8
   45e80:	3a0e983a 	sll	r7,r7,r8
   45e84:	1104d83a 	srl	r2,r2,r4
   45e88:	300cc03a 	cmpne	r6,r6,zero
   45e8c:	31ceb03a 	or	r7,r6,r7
   45e90:	388cb03a 	or	r6,r7,r2
   45e94:	0007883a 	mov	r3,zero
   45e98:	003fbe06 	br	45d94 <_gp+0xfffe8c4c>
   45e9c:	0007883a 	mov	r3,zero
   45ea0:	003fd906 	br	45e08 <_gp+0xfffe8cc0>
   45ea4:	01bfff84 	movi	r6,-2
   45ea8:	30cdc83a 	sub	r6,r6,r3
   45eac:	00c00804 	movi	r3,32
   45eb0:	398cd83a 	srl	r6,r7,r6
   45eb4:	20c00726 	beq	r4,r3,45ed4 <__truncdfsf2+0x1a0>
   45eb8:	423f2884 	addi	r8,r8,-862
   45ebc:	3a0e983a 	sll	r7,r7,r8
   45ec0:	3884b03a 	or	r2,r7,r2
   45ec4:	1004c03a 	cmpne	r2,r2,zero
   45ec8:	118cb03a 	or	r6,r2,r6
   45ecc:	0007883a 	mov	r3,zero
   45ed0:	003fb006 	br	45d94 <_gp+0xfffe8c4c>
   45ed4:	000f883a 	mov	r7,zero
   45ed8:	003ff906 	br	45ec0 <_gp+0xfffe8d78>

00045edc <__clzsi2>:
   45edc:	00bfffd4 	movui	r2,65535
   45ee0:	11000536 	bltu	r2,r4,45ef8 <__clzsi2+0x1c>
   45ee4:	00803fc4 	movi	r2,255
   45ee8:	11000f36 	bltu	r2,r4,45f28 <__clzsi2+0x4c>
   45eec:	00800804 	movi	r2,32
   45ef0:	0007883a 	mov	r3,zero
   45ef4:	00000506 	br	45f0c <__clzsi2+0x30>
   45ef8:	00804034 	movhi	r2,256
   45efc:	10bfffc4 	addi	r2,r2,-1
   45f00:	11000c2e 	bgeu	r2,r4,45f34 <__clzsi2+0x58>
   45f04:	00800204 	movi	r2,8
   45f08:	00c00604 	movi	r3,24
   45f0c:	20c8d83a 	srl	r4,r4,r3
   45f10:	00c00174 	movhi	r3,5
   45f14:	18cb7204 	addi	r3,r3,11720
   45f18:	1909883a 	add	r4,r3,r4
   45f1c:	20c00003 	ldbu	r3,0(r4)
   45f20:	10c5c83a 	sub	r2,r2,r3
   45f24:	f800283a 	ret
   45f28:	00800604 	movi	r2,24
   45f2c:	00c00204 	movi	r3,8
   45f30:	003ff606 	br	45f0c <_gp+0xfffe8dc4>
   45f34:	00800404 	movi	r2,16
   45f38:	1007883a 	mov	r3,r2
   45f3c:	003ff306 	br	45f0c <_gp+0xfffe8dc4>

00045f40 <_printf_r>:
   45f40:	defffd04 	addi	sp,sp,-12
   45f44:	2805883a 	mov	r2,r5
   45f48:	dfc00015 	stw	ra,0(sp)
   45f4c:	d9800115 	stw	r6,4(sp)
   45f50:	d9c00215 	stw	r7,8(sp)
   45f54:	21400217 	ldw	r5,8(r4)
   45f58:	d9c00104 	addi	r7,sp,4
   45f5c:	100d883a 	mov	r6,r2
   45f60:	00461940 	call	46194 <___vfprintf_internal_r>
   45f64:	dfc00017 	ldw	ra,0(sp)
   45f68:	dec00304 	addi	sp,sp,12
   45f6c:	f800283a 	ret

00045f70 <printf>:
   45f70:	defffc04 	addi	sp,sp,-16
   45f74:	dfc00015 	stw	ra,0(sp)
   45f78:	d9400115 	stw	r5,4(sp)
   45f7c:	d9800215 	stw	r6,8(sp)
   45f80:	d9c00315 	stw	r7,12(sp)
   45f84:	00800174 	movhi	r2,5
   45f88:	10945404 	addi	r2,r2,20816
   45f8c:	10800017 	ldw	r2,0(r2)
   45f90:	200b883a 	mov	r5,r4
   45f94:	d9800104 	addi	r6,sp,4
   45f98:	11000217 	ldw	r4,8(r2)
   45f9c:	00484700 	call	48470 <__vfprintf_internal>
   45fa0:	dfc00017 	ldw	ra,0(sp)
   45fa4:	dec00404 	addi	sp,sp,16
   45fa8:	f800283a 	ret

00045fac <_puts_r>:
   45fac:	defff604 	addi	sp,sp,-40
   45fb0:	dc000715 	stw	r16,28(sp)
   45fb4:	2021883a 	mov	r16,r4
   45fb8:	2809883a 	mov	r4,r5
   45fbc:	dc400815 	stw	r17,32(sp)
   45fc0:	dfc00915 	stw	ra,36(sp)
   45fc4:	2823883a 	mov	r17,r5
   45fc8:	00460fc0 	call	460fc <strlen>
   45fcc:	10c00044 	addi	r3,r2,1
   45fd0:	d8800115 	stw	r2,4(sp)
   45fd4:	00800174 	movhi	r2,5
   45fd8:	108bb204 	addi	r2,r2,11976
   45fdc:	d8800215 	stw	r2,8(sp)
   45fe0:	00800044 	movi	r2,1
   45fe4:	d8800315 	stw	r2,12(sp)
   45fe8:	00800084 	movi	r2,2
   45fec:	dc400015 	stw	r17,0(sp)
   45ff0:	d8c00615 	stw	r3,24(sp)
   45ff4:	dec00415 	stw	sp,16(sp)
   45ff8:	d8800515 	stw	r2,20(sp)
   45ffc:	80000226 	beq	r16,zero,46008 <_puts_r+0x5c>
   46000:	80800e17 	ldw	r2,56(r16)
   46004:	10001426 	beq	r2,zero,46058 <_puts_r+0xac>
   46008:	81400217 	ldw	r5,8(r16)
   4600c:	2880030b 	ldhu	r2,12(r5)
   46010:	10c8000c 	andi	r3,r2,8192
   46014:	1800061e 	bne	r3,zero,46030 <_puts_r+0x84>
   46018:	29001917 	ldw	r4,100(r5)
   4601c:	00f7ffc4 	movi	r3,-8193
   46020:	10880014 	ori	r2,r2,8192
   46024:	20c6703a 	and	r3,r4,r3
   46028:	2880030d 	sth	r2,12(r5)
   4602c:	28c01915 	stw	r3,100(r5)
   46030:	d9800404 	addi	r6,sp,16
   46034:	8009883a 	mov	r4,r16
   46038:	004a9d80 	call	4a9d8 <__sfvwrite_r>
   4603c:	1000091e 	bne	r2,zero,46064 <_puts_r+0xb8>
   46040:	00800284 	movi	r2,10
   46044:	dfc00917 	ldw	ra,36(sp)
   46048:	dc400817 	ldw	r17,32(sp)
   4604c:	dc000717 	ldw	r16,28(sp)
   46050:	dec00a04 	addi	sp,sp,40
   46054:	f800283a 	ret
   46058:	8009883a 	mov	r4,r16
   4605c:	004a5540 	call	4a554 <__sinit>
   46060:	003fe906 	br	46008 <_gp+0xfffe8ec0>
   46064:	00bfffc4 	movi	r2,-1
   46068:	003ff606 	br	46044 <_gp+0xfffe8efc>

0004606c <puts>:
   4606c:	00800174 	movhi	r2,5
   46070:	10945404 	addi	r2,r2,20816
   46074:	200b883a 	mov	r5,r4
   46078:	11000017 	ldw	r4,0(r2)
   4607c:	0045fac1 	jmpi	45fac <_puts_r>

00046080 <srand>:
   46080:	00800174 	movhi	r2,5
   46084:	10945404 	addi	r2,r2,20816
   46088:	10800017 	ldw	r2,0(r2)
   4608c:	11002915 	stw	r4,164(r2)
   46090:	10002a15 	stw	zero,168(r2)
   46094:	f800283a 	ret

00046098 <rand>:
   46098:	00800174 	movhi	r2,5
   4609c:	defffe04 	addi	sp,sp,-8
   460a0:	10945404 	addi	r2,r2,20816
   460a4:	dc000015 	stw	r16,0(sp)
   460a8:	14000017 	ldw	r16,0(r2)
   460ac:	dfc00115 	stw	ra,4(sp)
   460b0:	01932574 	movhi	r6,19605
   460b4:	81002917 	ldw	r4,164(r16)
   460b8:	81402a17 	ldw	r5,168(r16)
   460bc:	01d614b4 	movhi	r7,22610
   460c0:	319fcb44 	addi	r6,r6,32557
   460c4:	39fd0b44 	addi	r7,r7,-3027
   460c8:	004f8bc0 	call	4f8bc <__muldi3>
   460cc:	11000044 	addi	r4,r2,1
   460d0:	2085803a 	cmpltu	r2,r4,r2
   460d4:	10c7883a 	add	r3,r2,r3
   460d8:	00a00034 	movhi	r2,32768
   460dc:	10bfffc4 	addi	r2,r2,-1
   460e0:	1884703a 	and	r2,r3,r2
   460e4:	81002915 	stw	r4,164(r16)
   460e8:	80c02a15 	stw	r3,168(r16)
   460ec:	dfc00117 	ldw	ra,4(sp)
   460f0:	dc000017 	ldw	r16,0(sp)
   460f4:	dec00204 	addi	sp,sp,8
   460f8:	f800283a 	ret

000460fc <strlen>:
   460fc:	208000cc 	andi	r2,r4,3
   46100:	10002026 	beq	r2,zero,46184 <strlen+0x88>
   46104:	20800007 	ldb	r2,0(r4)
   46108:	10002026 	beq	r2,zero,4618c <strlen+0x90>
   4610c:	2005883a 	mov	r2,r4
   46110:	00000206 	br	4611c <strlen+0x20>
   46114:	10c00007 	ldb	r3,0(r2)
   46118:	18001826 	beq	r3,zero,4617c <strlen+0x80>
   4611c:	10800044 	addi	r2,r2,1
   46120:	10c000cc 	andi	r3,r2,3
   46124:	183ffb1e 	bne	r3,zero,46114 <_gp+0xfffe8fcc>
   46128:	10c00017 	ldw	r3,0(r2)
   4612c:	01ffbff4 	movhi	r7,65279
   46130:	39ffbfc4 	addi	r7,r7,-257
   46134:	00ca303a 	nor	r5,zero,r3
   46138:	01a02074 	movhi	r6,32897
   4613c:	19c7883a 	add	r3,r3,r7
   46140:	31a02004 	addi	r6,r6,-32640
   46144:	1946703a 	and	r3,r3,r5
   46148:	1986703a 	and	r3,r3,r6
   4614c:	1800091e 	bne	r3,zero,46174 <strlen+0x78>
   46150:	10800104 	addi	r2,r2,4
   46154:	10c00017 	ldw	r3,0(r2)
   46158:	19cb883a 	add	r5,r3,r7
   4615c:	00c6303a 	nor	r3,zero,r3
   46160:	28c6703a 	and	r3,r5,r3
   46164:	1986703a 	and	r3,r3,r6
   46168:	183ff926 	beq	r3,zero,46150 <_gp+0xfffe9008>
   4616c:	00000106 	br	46174 <strlen+0x78>
   46170:	10800044 	addi	r2,r2,1
   46174:	10c00007 	ldb	r3,0(r2)
   46178:	183ffd1e 	bne	r3,zero,46170 <_gp+0xfffe9028>
   4617c:	1105c83a 	sub	r2,r2,r4
   46180:	f800283a 	ret
   46184:	2005883a 	mov	r2,r4
   46188:	003fe706 	br	46128 <_gp+0xfffe8fe0>
   4618c:	0005883a 	mov	r2,zero
   46190:	f800283a 	ret

00046194 <___vfprintf_internal_r>:
   46194:	deffb804 	addi	sp,sp,-288
   46198:	dfc04715 	stw	ra,284(sp)
   4619c:	ddc04515 	stw	r23,276(sp)
   461a0:	dd404315 	stw	r21,268(sp)
   461a4:	d9002d15 	stw	r4,180(sp)
   461a8:	282f883a 	mov	r23,r5
   461ac:	302b883a 	mov	r21,r6
   461b0:	d9c02e15 	stw	r7,184(sp)
   461b4:	df004615 	stw	fp,280(sp)
   461b8:	dd804415 	stw	r22,272(sp)
   461bc:	dd004215 	stw	r20,264(sp)
   461c0:	dcc04115 	stw	r19,260(sp)
   461c4:	dc804015 	stw	r18,256(sp)
   461c8:	dc403f15 	stw	r17,252(sp)
   461cc:	dc003e15 	stw	r16,248(sp)
   461d0:	004b0d40 	call	4b0d4 <_localeconv_r>
   461d4:	10800017 	ldw	r2,0(r2)
   461d8:	1009883a 	mov	r4,r2
   461dc:	d8803415 	stw	r2,208(sp)
   461e0:	00460fc0 	call	460fc <strlen>
   461e4:	d8803715 	stw	r2,220(sp)
   461e8:	d8802d17 	ldw	r2,180(sp)
   461ec:	10000226 	beq	r2,zero,461f8 <___vfprintf_internal_r+0x64>
   461f0:	10800e17 	ldw	r2,56(r2)
   461f4:	1000fb26 	beq	r2,zero,465e4 <___vfprintf_internal_r+0x450>
   461f8:	b880030b 	ldhu	r2,12(r23)
   461fc:	10c8000c 	andi	r3,r2,8192
   46200:	1800061e 	bne	r3,zero,4621c <___vfprintf_internal_r+0x88>
   46204:	b9001917 	ldw	r4,100(r23)
   46208:	00f7ffc4 	movi	r3,-8193
   4620c:	10880014 	ori	r2,r2,8192
   46210:	20c6703a 	and	r3,r4,r3
   46214:	b880030d 	sth	r2,12(r23)
   46218:	b8c01915 	stw	r3,100(r23)
   4621c:	10c0020c 	andi	r3,r2,8
   46220:	1800c326 	beq	r3,zero,46530 <___vfprintf_internal_r+0x39c>
   46224:	b8c00417 	ldw	r3,16(r23)
   46228:	1800c126 	beq	r3,zero,46530 <___vfprintf_internal_r+0x39c>
   4622c:	1080068c 	andi	r2,r2,26
   46230:	00c00284 	movi	r3,10
   46234:	10c0c626 	beq	r2,r3,46550 <___vfprintf_internal_r+0x3bc>
   46238:	d8c00404 	addi	r3,sp,16
   4623c:	05000174 	movhi	r20,5
   46240:	d9001e04 	addi	r4,sp,120
   46244:	a50bc384 	addi	r20,r20,12046
   46248:	d8c01e15 	stw	r3,120(sp)
   4624c:	d8002015 	stw	zero,128(sp)
   46250:	d8001f15 	stw	zero,124(sp)
   46254:	d8003315 	stw	zero,204(sp)
   46258:	d8003615 	stw	zero,216(sp)
   4625c:	d8003815 	stw	zero,224(sp)
   46260:	1811883a 	mov	r8,r3
   46264:	d8003915 	stw	zero,228(sp)
   46268:	d8003a15 	stw	zero,232(sp)
   4626c:	d8002f15 	stw	zero,188(sp)
   46270:	d9002815 	stw	r4,160(sp)
   46274:	a8800007 	ldb	r2,0(r21)
   46278:	10028b26 	beq	r2,zero,46ca8 <___vfprintf_internal_r+0xb14>
   4627c:	00c00944 	movi	r3,37
   46280:	a823883a 	mov	r17,r21
   46284:	10c0021e 	bne	r2,r3,46290 <___vfprintf_internal_r+0xfc>
   46288:	00001406 	br	462dc <___vfprintf_internal_r+0x148>
   4628c:	10c00326 	beq	r2,r3,4629c <___vfprintf_internal_r+0x108>
   46290:	8c400044 	addi	r17,r17,1
   46294:	88800007 	ldb	r2,0(r17)
   46298:	103ffc1e 	bne	r2,zero,4628c <_gp+0xfffe9144>
   4629c:	8d61c83a 	sub	r16,r17,r21
   462a0:	80000e26 	beq	r16,zero,462dc <___vfprintf_internal_r+0x148>
   462a4:	d8c02017 	ldw	r3,128(sp)
   462a8:	d8801f17 	ldw	r2,124(sp)
   462ac:	45400015 	stw	r21,0(r8)
   462b0:	1c07883a 	add	r3,r3,r16
   462b4:	10800044 	addi	r2,r2,1
   462b8:	d8c02015 	stw	r3,128(sp)
   462bc:	44000115 	stw	r16,4(r8)
   462c0:	d8801f15 	stw	r2,124(sp)
   462c4:	00c001c4 	movi	r3,7
   462c8:	1880a916 	blt	r3,r2,46570 <___vfprintf_internal_r+0x3dc>
   462cc:	42000204 	addi	r8,r8,8
   462d0:	d9402f17 	ldw	r5,188(sp)
   462d4:	2c0b883a 	add	r5,r5,r16
   462d8:	d9402f15 	stw	r5,188(sp)
   462dc:	88800007 	ldb	r2,0(r17)
   462e0:	1000aa26 	beq	r2,zero,4658c <___vfprintf_internal_r+0x3f8>
   462e4:	8d400044 	addi	r21,r17,1
   462e8:	8c400047 	ldb	r17,1(r17)
   462ec:	0021883a 	mov	r16,zero
   462f0:	00bfffc4 	movi	r2,-1
   462f4:	0025883a 	mov	r18,zero
   462f8:	dc002905 	stb	r16,164(sp)
   462fc:	d8002785 	stb	zero,158(sp)
   46300:	d8002b05 	stb	zero,172(sp)
   46304:	d8802a15 	stw	r2,168(sp)
   46308:	d8003115 	stw	zero,196(sp)
   4630c:	04c01604 	movi	r19,88
   46310:	05800244 	movi	r22,9
   46314:	9021883a 	mov	r16,r18
   46318:	4039883a 	mov	fp,r8
   4631c:	ad400044 	addi	r21,r21,1
   46320:	88bff804 	addi	r2,r17,-32
   46324:	98833236 	bltu	r19,r2,46ff0 <___vfprintf_internal_r+0xe5c>
   46328:	100490ba 	slli	r2,r2,2
   4632c:	00c00134 	movhi	r3,4
   46330:	18d8d004 	addi	r3,r3,25408
   46334:	10c5883a 	add	r2,r2,r3
   46338:	10800017 	ldw	r2,0(r2)
   4633c:	1000683a 	jmp	r2
   46340:	00046ee8 	cmpgeui	zero,zero,4539
   46344:	00046ff0 	cmpltui	zero,zero,4543
   46348:	00046ff0 	cmpltui	zero,zero,4543
   4634c:	00046f08 	cmpgei	zero,zero,4540
   46350:	00046ff0 	cmpltui	zero,zero,4543
   46354:	00046ff0 	cmpltui	zero,zero,4543
   46358:	00046ff0 	cmpltui	zero,zero,4543
   4635c:	00046ff0 	cmpltui	zero,zero,4543
   46360:	00046ff0 	cmpltui	zero,zero,4543
   46364:	00046ff0 	cmpltui	zero,zero,4543
   46368:	000465f0 	cmpltui	zero,zero,4503
   4636c:	00046df8 	rdprs	zero,zero,4535
   46370:	00046ff0 	cmpltui	zero,zero,4543
   46374:	000464b4 	movhi	zero,4498
   46378:	00046614 	movui	zero,4504
   4637c:	00046ff0 	cmpltui	zero,zero,4543
   46380:	00046664 	muli	zero,zero,4505
   46384:	00046670 	cmpltui	zero,zero,4505
   46388:	00046670 	cmpltui	zero,zero,4505
   4638c:	00046670 	cmpltui	zero,zero,4505
   46390:	00046670 	cmpltui	zero,zero,4505
   46394:	00046670 	cmpltui	zero,zero,4505
   46398:	00046670 	cmpltui	zero,zero,4505
   4639c:	00046670 	cmpltui	zero,zero,4505
   463a0:	00046670 	cmpltui	zero,zero,4505
   463a4:	00046670 	cmpltui	zero,zero,4505
   463a8:	00046ff0 	cmpltui	zero,zero,4543
   463ac:	00046ff0 	cmpltui	zero,zero,4543
   463b0:	00046ff0 	cmpltui	zero,zero,4543
   463b4:	00046ff0 	cmpltui	zero,zero,4543
   463b8:	00046ff0 	cmpltui	zero,zero,4543
   463bc:	00046ff0 	cmpltui	zero,zero,4543
   463c0:	00046ff0 	cmpltui	zero,zero,4543
   463c4:	00046ff0 	cmpltui	zero,zero,4543
   463c8:	00046ff0 	cmpltui	zero,zero,4543
   463cc:	00046ff0 	cmpltui	zero,zero,4543
   463d0:	000466ac 	andhi	zero,zero,4506
   463d4:	00046774 	movhi	zero,4509
   463d8:	00046ff0 	cmpltui	zero,zero,4543
   463dc:	00046774 	movhi	zero,4509
   463e0:	00046ff0 	cmpltui	zero,zero,4543
   463e4:	00046ff0 	cmpltui	zero,zero,4543
   463e8:	00046ff0 	cmpltui	zero,zero,4543
   463ec:	00046ff0 	cmpltui	zero,zero,4543
   463f0:	00046820 	cmpeqi	zero,zero,4512
   463f4:	00046ff0 	cmpltui	zero,zero,4543
   463f8:	00046ff0 	cmpltui	zero,zero,4543
   463fc:	0004682c 	andhi	zero,zero,4512
   46400:	00046ff0 	cmpltui	zero,zero,4543
   46404:	00046ff0 	cmpltui	zero,zero,4543
   46408:	00046ff0 	cmpltui	zero,zero,4543
   4640c:	00046ff0 	cmpltui	zero,zero,4543
   46410:	00046ff0 	cmpltui	zero,zero,4543
   46414:	00046cb0 	cmpltui	zero,zero,4530
   46418:	00046ff0 	cmpltui	zero,zero,4543
   4641c:	00046ff0 	cmpltui	zero,zero,4543
   46420:	00046d1c 	xori	zero,zero,4532
   46424:	00046ff0 	cmpltui	zero,zero,4543
   46428:	00046ff0 	cmpltui	zero,zero,4543
   4642c:	00046ff0 	cmpltui	zero,zero,4543
   46430:	00046ff0 	cmpltui	zero,zero,4543
   46434:	00046ff0 	cmpltui	zero,zero,4543
   46438:	00046ff0 	cmpltui	zero,zero,4543
   4643c:	00046ff0 	cmpltui	zero,zero,4543
   46440:	00046ff0 	cmpltui	zero,zero,4543
   46444:	00046ff0 	cmpltui	zero,zero,4543
   46448:	00046ff0 	cmpltui	zero,zero,4543
   4644c:	00046f94 	movui	zero,4542
   46450:	00046f14 	movui	zero,4540
   46454:	00046774 	movhi	zero,4509
   46458:	00046774 	movhi	zero,4509
   4645c:	00046774 	movhi	zero,4509
   46460:	00046f34 	movhi	zero,4540
   46464:	00046f14 	movui	zero,4540
   46468:	00046ff0 	cmpltui	zero,zero,4543
   4646c:	00046ff0 	cmpltui	zero,zero,4543
   46470:	00046f40 	call	46f4 <__alt_mem_MemoriaDados+0x46f4>
   46474:	00046ff0 	cmpltui	zero,zero,4543
   46478:	00046f54 	movui	zero,4541
   4647c:	00046dd8 	cmpnei	zero,zero,4535
   46480:	000464c0 	call	464c <__alt_mem_MemoriaDados+0x464c>
   46484:	00046e10 	cmplti	zero,zero,4536
   46488:	00046ff0 	cmpltui	zero,zero,4543
   4648c:	00046e1c 	xori	zero,zero,4536
   46490:	00046ff0 	cmpltui	zero,zero,4543
   46494:	00046e80 	call	46e8 <__alt_mem_MemoriaDados+0x46e8>
   46498:	00046ff0 	cmpltui	zero,zero,4543
   4649c:	00046ff0 	cmpltui	zero,zero,4543
   464a0:	00046ea0 	cmpeqi	zero,zero,4538
   464a4:	d8c03117 	ldw	r3,196(sp)
   464a8:	d8802e15 	stw	r2,184(sp)
   464ac:	00c7c83a 	sub	r3,zero,r3
   464b0:	d8c03115 	stw	r3,196(sp)
   464b4:	84000114 	ori	r16,r16,4
   464b8:	ac400007 	ldb	r17,0(r21)
   464bc:	003f9706 	br	4631c <_gp+0xfffe91d4>
   464c0:	00800c04 	movi	r2,48
   464c4:	d8802705 	stb	r2,156(sp)
   464c8:	00801e04 	movi	r2,120
   464cc:	d8802745 	stb	r2,157(sp)
   464d0:	d9002a17 	ldw	r4,168(sp)
   464d4:	d8802e17 	ldw	r2,184(sp)
   464d8:	d8002785 	stb	zero,158(sp)
   464dc:	e011883a 	mov	r8,fp
   464e0:	10c00104 	addi	r3,r2,4
   464e4:	14c00017 	ldw	r19,0(r2)
   464e8:	002d883a 	mov	r22,zero
   464ec:	80800094 	ori	r2,r16,2
   464f0:	2002ca16 	blt	r4,zero,4701c <___vfprintf_internal_r+0xe88>
   464f4:	00bfdfc4 	movi	r2,-129
   464f8:	80a4703a 	and	r18,r16,r2
   464fc:	d8c02e15 	stw	r3,184(sp)
   46500:	94800094 	ori	r18,r18,2
   46504:	9802b41e 	bne	r19,zero,46fd8 <___vfprintf_internal_r+0xe44>
   46508:	01400174 	movhi	r5,5
   4650c:	294bbc04 	addi	r5,r5,12016
   46510:	d9403915 	stw	r5,228(sp)
   46514:	04401e04 	movi	r17,120
   46518:	d8802a17 	ldw	r2,168(sp)
   4651c:	0039883a 	mov	fp,zero
   46520:	1001fa26 	beq	r2,zero,46d0c <___vfprintf_internal_r+0xb78>
   46524:	0027883a 	mov	r19,zero
   46528:	002d883a 	mov	r22,zero
   4652c:	00021906 	br	46d94 <___vfprintf_internal_r+0xc00>
   46530:	d9002d17 	ldw	r4,180(sp)
   46534:	b80b883a 	mov	r5,r23
   46538:	00485480 	call	48548 <__swsetup_r>
   4653c:	1005dc1e 	bne	r2,zero,47cb0 <___vfprintf_internal_r+0x1b1c>
   46540:	b880030b 	ldhu	r2,12(r23)
   46544:	00c00284 	movi	r3,10
   46548:	1080068c 	andi	r2,r2,26
   4654c:	10ff3a1e 	bne	r2,r3,46238 <_gp+0xfffe90f0>
   46550:	b880038f 	ldh	r2,14(r23)
   46554:	103f3816 	blt	r2,zero,46238 <_gp+0xfffe90f0>
   46558:	d9c02e17 	ldw	r7,184(sp)
   4655c:	d9002d17 	ldw	r4,180(sp)
   46560:	a80d883a 	mov	r6,r21
   46564:	b80b883a 	mov	r5,r23
   46568:	004848c0 	call	4848c <__sbprintf>
   4656c:	00001106 	br	465b4 <___vfprintf_internal_r+0x420>
   46570:	d9002d17 	ldw	r4,180(sp)
   46574:	d9801e04 	addi	r6,sp,120
   46578:	b80b883a 	mov	r5,r23
   4657c:	004d9740 	call	4d974 <__sprint_r>
   46580:	1000081e 	bne	r2,zero,465a4 <___vfprintf_internal_r+0x410>
   46584:	da000404 	addi	r8,sp,16
   46588:	003f5106 	br	462d0 <_gp+0xfffe9188>
   4658c:	d8802017 	ldw	r2,128(sp)
   46590:	10000426 	beq	r2,zero,465a4 <___vfprintf_internal_r+0x410>
   46594:	d9002d17 	ldw	r4,180(sp)
   46598:	d9801e04 	addi	r6,sp,120
   4659c:	b80b883a 	mov	r5,r23
   465a0:	004d9740 	call	4d974 <__sprint_r>
   465a4:	b880030b 	ldhu	r2,12(r23)
   465a8:	1080100c 	andi	r2,r2,64
   465ac:	1005c01e 	bne	r2,zero,47cb0 <___vfprintf_internal_r+0x1b1c>
   465b0:	d8802f17 	ldw	r2,188(sp)
   465b4:	dfc04717 	ldw	ra,284(sp)
   465b8:	df004617 	ldw	fp,280(sp)
   465bc:	ddc04517 	ldw	r23,276(sp)
   465c0:	dd804417 	ldw	r22,272(sp)
   465c4:	dd404317 	ldw	r21,268(sp)
   465c8:	dd004217 	ldw	r20,264(sp)
   465cc:	dcc04117 	ldw	r19,260(sp)
   465d0:	dc804017 	ldw	r18,256(sp)
   465d4:	dc403f17 	ldw	r17,252(sp)
   465d8:	dc003e17 	ldw	r16,248(sp)
   465dc:	dec04804 	addi	sp,sp,288
   465e0:	f800283a 	ret
   465e4:	d9002d17 	ldw	r4,180(sp)
   465e8:	004a5540 	call	4a554 <__sinit>
   465ec:	003f0206 	br	461f8 <_gp+0xfffe90b0>
   465f0:	d9002e17 	ldw	r4,184(sp)
   465f4:	d9402e17 	ldw	r5,184(sp)
   465f8:	21000017 	ldw	r4,0(r4)
   465fc:	28800104 	addi	r2,r5,4
   46600:	d9003115 	stw	r4,196(sp)
   46604:	203fa716 	blt	r4,zero,464a4 <_gp+0xfffe935c>
   46608:	d8802e15 	stw	r2,184(sp)
   4660c:	ac400007 	ldb	r17,0(r21)
   46610:	003f4206 	br	4631c <_gp+0xfffe91d4>
   46614:	ac400007 	ldb	r17,0(r21)
   46618:	01000a84 	movi	r4,42
   4661c:	a8c00044 	addi	r3,r21,1
   46620:	89075826 	beq	r17,r4,48384 <___vfprintf_internal_r+0x21f0>
   46624:	8cbff404 	addi	r18,r17,-48
   46628:	b486ae36 	bltu	r22,r18,480e4 <___vfprintf_internal_r+0x1f50>
   4662c:	0009883a 	mov	r4,zero
   46630:	1823883a 	mov	r17,r3
   46634:	01400284 	movi	r5,10
   46638:	0041f400 	call	41f40 <__mulsi3>
   4663c:	88c00007 	ldb	r3,0(r17)
   46640:	1489883a 	add	r4,r2,r18
   46644:	8d400044 	addi	r21,r17,1
   46648:	1cbff404 	addi	r18,r3,-48
   4664c:	a823883a 	mov	r17,r21
   46650:	b4bff82e 	bgeu	r22,r18,46634 <_gp+0xfffe94ec>
   46654:	1823883a 	mov	r17,r3
   46658:	2005f616 	blt	r4,zero,47e34 <___vfprintf_internal_r+0x1ca0>
   4665c:	d9002a15 	stw	r4,168(sp)
   46660:	003f2f06 	br	46320 <_gp+0xfffe91d8>
   46664:	84002014 	ori	r16,r16,128
   46668:	ac400007 	ldb	r17,0(r21)
   4666c:	003f2b06 	br	4631c <_gp+0xfffe91d4>
   46670:	8cbff404 	addi	r18,r17,-48
   46674:	d8003115 	stw	zero,196(sp)
   46678:	0009883a 	mov	r4,zero
   4667c:	a823883a 	mov	r17,r21
   46680:	01400284 	movi	r5,10
   46684:	0041f400 	call	41f40 <__mulsi3>
   46688:	88c00007 	ldb	r3,0(r17)
   4668c:	9089883a 	add	r4,r18,r2
   46690:	ad400044 	addi	r21,r21,1
   46694:	1cbff404 	addi	r18,r3,-48
   46698:	a823883a 	mov	r17,r21
   4669c:	b4bff82e 	bgeu	r22,r18,46680 <_gp+0xfffe9538>
   466a0:	1823883a 	mov	r17,r3
   466a4:	d9003115 	stw	r4,196(sp)
   466a8:	003f1d06 	br	46320 <_gp+0xfffe91d8>
   466ac:	8025883a 	mov	r18,r16
   466b0:	dc002903 	ldbu	r16,164(sp)
   466b4:	e011883a 	mov	r8,fp
   466b8:	84003fcc 	andi	r16,r16,255
   466bc:	8007531e 	bne	r16,zero,4840c <___vfprintf_internal_r+0x2278>
   466c0:	94800414 	ori	r18,r18,16
   466c4:	9080080c 	andi	r2,r18,32
   466c8:	1003a326 	beq	r2,zero,47558 <___vfprintf_internal_r+0x13c4>
   466cc:	d9002e17 	ldw	r4,184(sp)
   466d0:	20800117 	ldw	r2,4(r4)
   466d4:	24c00017 	ldw	r19,0(r4)
   466d8:	21000204 	addi	r4,r4,8
   466dc:	d9002e15 	stw	r4,184(sp)
   466e0:	102d883a 	mov	r22,r2
   466e4:	10047316 	blt	r2,zero,478b4 <___vfprintf_internal_r+0x1720>
   466e8:	d9002a17 	ldw	r4,168(sp)
   466ec:	df002783 	ldbu	fp,158(sp)
   466f0:	2003e416 	blt	r4,zero,47684 <___vfprintf_internal_r+0x14f0>
   466f4:	00ffdfc4 	movi	r3,-129
   466f8:	9d84b03a 	or	r2,r19,r22
   466fc:	90e4703a 	and	r18,r18,r3
   46700:	10018026 	beq	r2,zero,46d04 <___vfprintf_internal_r+0xb70>
   46704:	b003ab26 	beq	r22,zero,475b4 <___vfprintf_internal_r+0x1420>
   46708:	dc402915 	stw	r17,164(sp)
   4670c:	dc001e04 	addi	r16,sp,120
   46710:	b023883a 	mov	r17,r22
   46714:	402d883a 	mov	r22,r8
   46718:	9809883a 	mov	r4,r19
   4671c:	880b883a 	mov	r5,r17
   46720:	01800284 	movi	r6,10
   46724:	000f883a 	mov	r7,zero
   46728:	004ffc40 	call	4ffc4 <__umoddi3>
   4672c:	10800c04 	addi	r2,r2,48
   46730:	843fffc4 	addi	r16,r16,-1
   46734:	9809883a 	mov	r4,r19
   46738:	880b883a 	mov	r5,r17
   4673c:	80800005 	stb	r2,0(r16)
   46740:	01800284 	movi	r6,10
   46744:	000f883a 	mov	r7,zero
   46748:	004f9c80 	call	4f9c8 <__udivdi3>
   4674c:	1027883a 	mov	r19,r2
   46750:	10c4b03a 	or	r2,r2,r3
   46754:	1823883a 	mov	r17,r3
   46758:	103fef1e 	bne	r2,zero,46718 <_gp+0xfffe95d0>
   4675c:	d8c02817 	ldw	r3,160(sp)
   46760:	dc402917 	ldw	r17,164(sp)
   46764:	b011883a 	mov	r8,r22
   46768:	1c07c83a 	sub	r3,r3,r16
   4676c:	d8c02b15 	stw	r3,172(sp)
   46770:	00005f06 	br	468f0 <___vfprintf_internal_r+0x75c>
   46774:	8025883a 	mov	r18,r16
   46778:	dc002903 	ldbu	r16,164(sp)
   4677c:	e011883a 	mov	r8,fp
   46780:	84003fcc 	andi	r16,r16,255
   46784:	80071e1e 	bne	r16,zero,48400 <___vfprintf_internal_r+0x226c>
   46788:	9080020c 	andi	r2,r18,8
   4678c:	1004af26 	beq	r2,zero,47a4c <___vfprintf_internal_r+0x18b8>
   46790:	d9002e17 	ldw	r4,184(sp)
   46794:	d9402e17 	ldw	r5,184(sp)
   46798:	d8802e17 	ldw	r2,184(sp)
   4679c:	21000017 	ldw	r4,0(r4)
   467a0:	29400117 	ldw	r5,4(r5)
   467a4:	10800204 	addi	r2,r2,8
   467a8:	d9003615 	stw	r4,216(sp)
   467ac:	d9403815 	stw	r5,224(sp)
   467b0:	d8802e15 	stw	r2,184(sp)
   467b4:	d9003617 	ldw	r4,216(sp)
   467b8:	d9403817 	ldw	r5,224(sp)
   467bc:	da003d15 	stw	r8,244(sp)
   467c0:	04000044 	movi	r16,1
   467c4:	004d5980 	call	4d598 <__fpclassifyd>
   467c8:	da003d17 	ldw	r8,244(sp)
   467cc:	1404441e 	bne	r2,r16,478e0 <___vfprintf_internal_r+0x174c>
   467d0:	d9003617 	ldw	r4,216(sp)
   467d4:	d9403817 	ldw	r5,224(sp)
   467d8:	000d883a 	mov	r6,zero
   467dc:	000f883a 	mov	r7,zero
   467e0:	004486c0 	call	4486c <__ledf2>
   467e4:	da003d17 	ldw	r8,244(sp)
   467e8:	1005e316 	blt	r2,zero,47f78 <___vfprintf_internal_r+0x1de4>
   467ec:	df002783 	ldbu	fp,158(sp)
   467f0:	008011c4 	movi	r2,71
   467f4:	1445580e 	bge	r2,r17,47d58 <___vfprintf_internal_r+0x1bc4>
   467f8:	04000174 	movhi	r16,5
   467fc:	840bb404 	addi	r16,r16,11984
   46800:	00c000c4 	movi	r3,3
   46804:	00bfdfc4 	movi	r2,-129
   46808:	d8c02915 	stw	r3,164(sp)
   4680c:	90a4703a 	and	r18,r18,r2
   46810:	d8c02b15 	stw	r3,172(sp)
   46814:	d8002a15 	stw	zero,168(sp)
   46818:	d8003215 	stw	zero,200(sp)
   4681c:	00003a06 	br	46908 <___vfprintf_internal_r+0x774>
   46820:	84000214 	ori	r16,r16,8
   46824:	ac400007 	ldb	r17,0(r21)
   46828:	003ebc06 	br	4631c <_gp+0xfffe91d4>
   4682c:	8025883a 	mov	r18,r16
   46830:	dc002903 	ldbu	r16,164(sp)
   46834:	e011883a 	mov	r8,fp
   46838:	84003fcc 	andi	r16,r16,255
   4683c:	8007001e 	bne	r16,zero,48440 <___vfprintf_internal_r+0x22ac>
   46840:	94800414 	ori	r18,r18,16
   46844:	9080080c 	andi	r2,r18,32
   46848:	1002fa26 	beq	r2,zero,47434 <___vfprintf_internal_r+0x12a0>
   4684c:	d9002e17 	ldw	r4,184(sp)
   46850:	d9402a17 	ldw	r5,168(sp)
   46854:	d8002785 	stb	zero,158(sp)
   46858:	20800204 	addi	r2,r4,8
   4685c:	24c00017 	ldw	r19,0(r4)
   46860:	25800117 	ldw	r22,4(r4)
   46864:	2804b116 	blt	r5,zero,47b2c <___vfprintf_internal_r+0x1998>
   46868:	013fdfc4 	movi	r4,-129
   4686c:	9d86b03a 	or	r3,r19,r22
   46870:	d8802e15 	stw	r2,184(sp)
   46874:	9124703a 	and	r18,r18,r4
   46878:	1802fb1e 	bne	r3,zero,47468 <___vfprintf_internal_r+0x12d4>
   4687c:	d8c02a17 	ldw	r3,168(sp)
   46880:	0039883a 	mov	fp,zero
   46884:	1805e526 	beq	r3,zero,4801c <___vfprintf_internal_r+0x1e88>
   46888:	0027883a 	mov	r19,zero
   4688c:	002d883a 	mov	r22,zero
   46890:	dc001e04 	addi	r16,sp,120
   46894:	9806d0fa 	srli	r3,r19,3
   46898:	b008977a 	slli	r4,r22,29
   4689c:	b02cd0fa 	srli	r22,r22,3
   468a0:	9cc001cc 	andi	r19,r19,7
   468a4:	98800c04 	addi	r2,r19,48
   468a8:	843fffc4 	addi	r16,r16,-1
   468ac:	20e6b03a 	or	r19,r4,r3
   468b0:	80800005 	stb	r2,0(r16)
   468b4:	9d86b03a 	or	r3,r19,r22
   468b8:	183ff61e 	bne	r3,zero,46894 <_gp+0xfffe974c>
   468bc:	90c0004c 	andi	r3,r18,1
   468c0:	18014126 	beq	r3,zero,46dc8 <___vfprintf_internal_r+0xc34>
   468c4:	10803fcc 	andi	r2,r2,255
   468c8:	1080201c 	xori	r2,r2,128
   468cc:	10bfe004 	addi	r2,r2,-128
   468d0:	00c00c04 	movi	r3,48
   468d4:	10c13c26 	beq	r2,r3,46dc8 <___vfprintf_internal_r+0xc34>
   468d8:	80ffffc5 	stb	r3,-1(r16)
   468dc:	d8c02817 	ldw	r3,160(sp)
   468e0:	80bfffc4 	addi	r2,r16,-1
   468e4:	1021883a 	mov	r16,r2
   468e8:	1887c83a 	sub	r3,r3,r2
   468ec:	d8c02b15 	stw	r3,172(sp)
   468f0:	d8802b17 	ldw	r2,172(sp)
   468f4:	d9002a17 	ldw	r4,168(sp)
   468f8:	1100010e 	bge	r2,r4,46900 <___vfprintf_internal_r+0x76c>
   468fc:	2005883a 	mov	r2,r4
   46900:	d8802915 	stw	r2,164(sp)
   46904:	d8003215 	stw	zero,200(sp)
   46908:	e7003fcc 	andi	fp,fp,255
   4690c:	e700201c 	xori	fp,fp,128
   46910:	e73fe004 	addi	fp,fp,-128
   46914:	e0000326 	beq	fp,zero,46924 <___vfprintf_internal_r+0x790>
   46918:	d8c02917 	ldw	r3,164(sp)
   4691c:	18c00044 	addi	r3,r3,1
   46920:	d8c02915 	stw	r3,164(sp)
   46924:	90c0008c 	andi	r3,r18,2
   46928:	d8c02c15 	stw	r3,176(sp)
   4692c:	18000326 	beq	r3,zero,4693c <___vfprintf_internal_r+0x7a8>
   46930:	d8c02917 	ldw	r3,164(sp)
   46934:	18c00084 	addi	r3,r3,2
   46938:	d8c02915 	stw	r3,164(sp)
   4693c:	90c0210c 	andi	r3,r18,132
   46940:	d8c03015 	stw	r3,192(sp)
   46944:	1801c51e 	bne	r3,zero,4705c <___vfprintf_internal_r+0xec8>
   46948:	d9003117 	ldw	r4,196(sp)
   4694c:	d8c02917 	ldw	r3,164(sp)
   46950:	20e7c83a 	sub	r19,r4,r3
   46954:	04c1c10e 	bge	zero,r19,4705c <___vfprintf_internal_r+0xec8>
   46958:	02400404 	movi	r9,16
   4695c:	d8c02017 	ldw	r3,128(sp)
   46960:	d8801f17 	ldw	r2,124(sp)
   46964:	4cc52f0e 	bge	r9,r19,47e24 <___vfprintf_internal_r+0x1c90>
   46968:	01400174 	movhi	r5,5
   4696c:	294bc784 	addi	r5,r5,12062
   46970:	dc403b15 	stw	r17,236(sp)
   46974:	d9403515 	stw	r5,212(sp)
   46978:	9823883a 	mov	r17,r19
   4697c:	482d883a 	mov	r22,r9
   46980:	9027883a 	mov	r19,r18
   46984:	070001c4 	movi	fp,7
   46988:	8025883a 	mov	r18,r16
   4698c:	dc002d17 	ldw	r16,180(sp)
   46990:	00000306 	br	469a0 <___vfprintf_internal_r+0x80c>
   46994:	8c7ffc04 	addi	r17,r17,-16
   46998:	42000204 	addi	r8,r8,8
   4699c:	b440130e 	bge	r22,r17,469ec <___vfprintf_internal_r+0x858>
   469a0:	01000174 	movhi	r4,5
   469a4:	18c00404 	addi	r3,r3,16
   469a8:	10800044 	addi	r2,r2,1
   469ac:	210bc784 	addi	r4,r4,12062
   469b0:	41000015 	stw	r4,0(r8)
   469b4:	45800115 	stw	r22,4(r8)
   469b8:	d8c02015 	stw	r3,128(sp)
   469bc:	d8801f15 	stw	r2,124(sp)
   469c0:	e0bff40e 	bge	fp,r2,46994 <_gp+0xfffe984c>
   469c4:	d9801e04 	addi	r6,sp,120
   469c8:	b80b883a 	mov	r5,r23
   469cc:	8009883a 	mov	r4,r16
   469d0:	004d9740 	call	4d974 <__sprint_r>
   469d4:	103ef31e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   469d8:	8c7ffc04 	addi	r17,r17,-16
   469dc:	d8c02017 	ldw	r3,128(sp)
   469e0:	d8801f17 	ldw	r2,124(sp)
   469e4:	da000404 	addi	r8,sp,16
   469e8:	b47fed16 	blt	r22,r17,469a0 <_gp+0xfffe9858>
   469ec:	9021883a 	mov	r16,r18
   469f0:	9825883a 	mov	r18,r19
   469f4:	8827883a 	mov	r19,r17
   469f8:	dc403b17 	ldw	r17,236(sp)
   469fc:	d9403517 	ldw	r5,212(sp)
   46a00:	98c7883a 	add	r3,r19,r3
   46a04:	10800044 	addi	r2,r2,1
   46a08:	41400015 	stw	r5,0(r8)
   46a0c:	44c00115 	stw	r19,4(r8)
   46a10:	d8c02015 	stw	r3,128(sp)
   46a14:	d8801f15 	stw	r2,124(sp)
   46a18:	010001c4 	movi	r4,7
   46a1c:	2082c516 	blt	r4,r2,47534 <___vfprintf_internal_r+0x13a0>
   46a20:	df002787 	ldb	fp,158(sp)
   46a24:	42000204 	addi	r8,r8,8
   46a28:	e0000c26 	beq	fp,zero,46a5c <___vfprintf_internal_r+0x8c8>
   46a2c:	d8801f17 	ldw	r2,124(sp)
   46a30:	d9002784 	addi	r4,sp,158
   46a34:	18c00044 	addi	r3,r3,1
   46a38:	10800044 	addi	r2,r2,1
   46a3c:	41000015 	stw	r4,0(r8)
   46a40:	01000044 	movi	r4,1
   46a44:	41000115 	stw	r4,4(r8)
   46a48:	d8c02015 	stw	r3,128(sp)
   46a4c:	d8801f15 	stw	r2,124(sp)
   46a50:	010001c4 	movi	r4,7
   46a54:	20825e16 	blt	r4,r2,473d0 <___vfprintf_internal_r+0x123c>
   46a58:	42000204 	addi	r8,r8,8
   46a5c:	d8802c17 	ldw	r2,176(sp)
   46a60:	10000c26 	beq	r2,zero,46a94 <___vfprintf_internal_r+0x900>
   46a64:	d8801f17 	ldw	r2,124(sp)
   46a68:	d9002704 	addi	r4,sp,156
   46a6c:	18c00084 	addi	r3,r3,2
   46a70:	10800044 	addi	r2,r2,1
   46a74:	41000015 	stw	r4,0(r8)
   46a78:	01000084 	movi	r4,2
   46a7c:	41000115 	stw	r4,4(r8)
   46a80:	d8c02015 	stw	r3,128(sp)
   46a84:	d8801f15 	stw	r2,124(sp)
   46a88:	010001c4 	movi	r4,7
   46a8c:	20825816 	blt	r4,r2,473f0 <___vfprintf_internal_r+0x125c>
   46a90:	42000204 	addi	r8,r8,8
   46a94:	d9003017 	ldw	r4,192(sp)
   46a98:	00802004 	movi	r2,128
   46a9c:	2081bb26 	beq	r4,r2,4718c <___vfprintf_internal_r+0xff8>
   46aa0:	d9402a17 	ldw	r5,168(sp)
   46aa4:	d8802b17 	ldw	r2,172(sp)
   46aa8:	28adc83a 	sub	r22,r5,r2
   46aac:	0580310e 	bge	zero,r22,46b74 <___vfprintf_internal_r+0x9e0>
   46ab0:	07000404 	movi	fp,16
   46ab4:	d8801f17 	ldw	r2,124(sp)
   46ab8:	e584360e 	bge	fp,r22,47b94 <___vfprintf_internal_r+0x1a00>
   46abc:	01400174 	movhi	r5,5
   46ac0:	294bc384 	addi	r5,r5,12046
   46ac4:	dc402a15 	stw	r17,168(sp)
   46ac8:	d9402c15 	stw	r5,176(sp)
   46acc:	b023883a 	mov	r17,r22
   46ad0:	04c001c4 	movi	r19,7
   46ad4:	a82d883a 	mov	r22,r21
   46ad8:	902b883a 	mov	r21,r18
   46adc:	8025883a 	mov	r18,r16
   46ae0:	dc002d17 	ldw	r16,180(sp)
   46ae4:	00000306 	br	46af4 <___vfprintf_internal_r+0x960>
   46ae8:	8c7ffc04 	addi	r17,r17,-16
   46aec:	42000204 	addi	r8,r8,8
   46af0:	e440110e 	bge	fp,r17,46b38 <___vfprintf_internal_r+0x9a4>
   46af4:	18c00404 	addi	r3,r3,16
   46af8:	10800044 	addi	r2,r2,1
   46afc:	45000015 	stw	r20,0(r8)
   46b00:	47000115 	stw	fp,4(r8)
   46b04:	d8c02015 	stw	r3,128(sp)
   46b08:	d8801f15 	stw	r2,124(sp)
   46b0c:	98bff60e 	bge	r19,r2,46ae8 <_gp+0xfffe99a0>
   46b10:	d9801e04 	addi	r6,sp,120
   46b14:	b80b883a 	mov	r5,r23
   46b18:	8009883a 	mov	r4,r16
   46b1c:	004d9740 	call	4d974 <__sprint_r>
   46b20:	103ea01e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   46b24:	8c7ffc04 	addi	r17,r17,-16
   46b28:	d8c02017 	ldw	r3,128(sp)
   46b2c:	d8801f17 	ldw	r2,124(sp)
   46b30:	da000404 	addi	r8,sp,16
   46b34:	e47fef16 	blt	fp,r17,46af4 <_gp+0xfffe99ac>
   46b38:	9021883a 	mov	r16,r18
   46b3c:	a825883a 	mov	r18,r21
   46b40:	b02b883a 	mov	r21,r22
   46b44:	882d883a 	mov	r22,r17
   46b48:	dc402a17 	ldw	r17,168(sp)
   46b4c:	d9002c17 	ldw	r4,176(sp)
   46b50:	1d87883a 	add	r3,r3,r22
   46b54:	10800044 	addi	r2,r2,1
   46b58:	41000015 	stw	r4,0(r8)
   46b5c:	45800115 	stw	r22,4(r8)
   46b60:	d8c02015 	stw	r3,128(sp)
   46b64:	d8801f15 	stw	r2,124(sp)
   46b68:	010001c4 	movi	r4,7
   46b6c:	20821016 	blt	r4,r2,473b0 <___vfprintf_internal_r+0x121c>
   46b70:	42000204 	addi	r8,r8,8
   46b74:	9080400c 	andi	r2,r18,256
   46b78:	10013a1e 	bne	r2,zero,47064 <___vfprintf_internal_r+0xed0>
   46b7c:	d9402b17 	ldw	r5,172(sp)
   46b80:	d8801f17 	ldw	r2,124(sp)
   46b84:	44000015 	stw	r16,0(r8)
   46b88:	1947883a 	add	r3,r3,r5
   46b8c:	10800044 	addi	r2,r2,1
   46b90:	41400115 	stw	r5,4(r8)
   46b94:	d8c02015 	stw	r3,128(sp)
   46b98:	d8801f15 	stw	r2,124(sp)
   46b9c:	010001c4 	movi	r4,7
   46ba0:	2081f516 	blt	r4,r2,47378 <___vfprintf_internal_r+0x11e4>
   46ba4:	42000204 	addi	r8,r8,8
   46ba8:	9480010c 	andi	r18,r18,4
   46bac:	90003226 	beq	r18,zero,46c78 <___vfprintf_internal_r+0xae4>
   46bb0:	d9403117 	ldw	r5,196(sp)
   46bb4:	d8802917 	ldw	r2,164(sp)
   46bb8:	28a1c83a 	sub	r16,r5,r2
   46bbc:	04002e0e 	bge	zero,r16,46c78 <___vfprintf_internal_r+0xae4>
   46bc0:	04400404 	movi	r17,16
   46bc4:	d8801f17 	ldw	r2,124(sp)
   46bc8:	8c04c40e 	bge	r17,r16,47edc <___vfprintf_internal_r+0x1d48>
   46bcc:	01400174 	movhi	r5,5
   46bd0:	294bc784 	addi	r5,r5,12062
   46bd4:	d9403515 	stw	r5,212(sp)
   46bd8:	048001c4 	movi	r18,7
   46bdc:	dcc02d17 	ldw	r19,180(sp)
   46be0:	00000306 	br	46bf0 <___vfprintf_internal_r+0xa5c>
   46be4:	843ffc04 	addi	r16,r16,-16
   46be8:	42000204 	addi	r8,r8,8
   46bec:	8c00130e 	bge	r17,r16,46c3c <___vfprintf_internal_r+0xaa8>
   46bf0:	01000174 	movhi	r4,5
   46bf4:	18c00404 	addi	r3,r3,16
   46bf8:	10800044 	addi	r2,r2,1
   46bfc:	210bc784 	addi	r4,r4,12062
   46c00:	41000015 	stw	r4,0(r8)
   46c04:	44400115 	stw	r17,4(r8)
   46c08:	d8c02015 	stw	r3,128(sp)
   46c0c:	d8801f15 	stw	r2,124(sp)
   46c10:	90bff40e 	bge	r18,r2,46be4 <_gp+0xfffe9a9c>
   46c14:	d9801e04 	addi	r6,sp,120
   46c18:	b80b883a 	mov	r5,r23
   46c1c:	9809883a 	mov	r4,r19
   46c20:	004d9740 	call	4d974 <__sprint_r>
   46c24:	103e5f1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   46c28:	843ffc04 	addi	r16,r16,-16
   46c2c:	d8c02017 	ldw	r3,128(sp)
   46c30:	d8801f17 	ldw	r2,124(sp)
   46c34:	da000404 	addi	r8,sp,16
   46c38:	8c3fed16 	blt	r17,r16,46bf0 <_gp+0xfffe9aa8>
   46c3c:	d9403517 	ldw	r5,212(sp)
   46c40:	1c07883a 	add	r3,r3,r16
   46c44:	10800044 	addi	r2,r2,1
   46c48:	41400015 	stw	r5,0(r8)
   46c4c:	44000115 	stw	r16,4(r8)
   46c50:	d8c02015 	stw	r3,128(sp)
   46c54:	d8801f15 	stw	r2,124(sp)
   46c58:	010001c4 	movi	r4,7
   46c5c:	2080060e 	bge	r4,r2,46c78 <___vfprintf_internal_r+0xae4>
   46c60:	d9002d17 	ldw	r4,180(sp)
   46c64:	d9801e04 	addi	r6,sp,120
   46c68:	b80b883a 	mov	r5,r23
   46c6c:	004d9740 	call	4d974 <__sprint_r>
   46c70:	103e4c1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   46c74:	d8c02017 	ldw	r3,128(sp)
   46c78:	d8803117 	ldw	r2,196(sp)
   46c7c:	d9002917 	ldw	r4,164(sp)
   46c80:	1100010e 	bge	r2,r4,46c88 <___vfprintf_internal_r+0xaf4>
   46c84:	2005883a 	mov	r2,r4
   46c88:	d9402f17 	ldw	r5,188(sp)
   46c8c:	288b883a 	add	r5,r5,r2
   46c90:	d9402f15 	stw	r5,188(sp)
   46c94:	1801c01e 	bne	r3,zero,47398 <___vfprintf_internal_r+0x1204>
   46c98:	a8800007 	ldb	r2,0(r21)
   46c9c:	d8001f15 	stw	zero,124(sp)
   46ca0:	da000404 	addi	r8,sp,16
   46ca4:	103d751e 	bne	r2,zero,4627c <_gp+0xfffe9134>
   46ca8:	a823883a 	mov	r17,r21
   46cac:	003d8b06 	br	462dc <_gp+0xfffe9194>
   46cb0:	8025883a 	mov	r18,r16
   46cb4:	dc002903 	ldbu	r16,164(sp)
   46cb8:	e011883a 	mov	r8,fp
   46cbc:	84003fcc 	andi	r16,r16,255
   46cc0:	8005e51e 	bne	r16,zero,48458 <___vfprintf_internal_r+0x22c4>
   46cc4:	94800414 	ori	r18,r18,16
   46cc8:	9080080c 	andi	r2,r18,32
   46ccc:	10022b26 	beq	r2,zero,4757c <___vfprintf_internal_r+0x13e8>
   46cd0:	d9002e17 	ldw	r4,184(sp)
   46cd4:	d9402a17 	ldw	r5,168(sp)
   46cd8:	d8002785 	stb	zero,158(sp)
   46cdc:	20c00204 	addi	r3,r4,8
   46ce0:	24c00017 	ldw	r19,0(r4)
   46ce4:	25800117 	ldw	r22,4(r4)
   46ce8:	28042e16 	blt	r5,zero,47da4 <___vfprintf_internal_r+0x1c10>
   46cec:	013fdfc4 	movi	r4,-129
   46cf0:	9d84b03a 	or	r2,r19,r22
   46cf4:	d8c02e15 	stw	r3,184(sp)
   46cf8:	9124703a 	and	r18,r18,r4
   46cfc:	0039883a 	mov	fp,zero
   46d00:	103e801e 	bne	r2,zero,46704 <_gp+0xfffe95bc>
   46d04:	d9002a17 	ldw	r4,168(sp)
   46d08:	2002e01e 	bne	r4,zero,4788c <___vfprintf_internal_r+0x16f8>
   46d0c:	d8002a15 	stw	zero,168(sp)
   46d10:	d8002b15 	stw	zero,172(sp)
   46d14:	dc001e04 	addi	r16,sp,120
   46d18:	003ef506 	br	468f0 <_gp+0xfffe97a8>
   46d1c:	8025883a 	mov	r18,r16
   46d20:	dc002903 	ldbu	r16,164(sp)
   46d24:	e011883a 	mov	r8,fp
   46d28:	84003fcc 	andi	r16,r16,255
   46d2c:	8005ba1e 	bne	r16,zero,48418 <___vfprintf_internal_r+0x2284>
   46d30:	01000174 	movhi	r4,5
   46d34:	210bb704 	addi	r4,r4,11996
   46d38:	d9003915 	stw	r4,228(sp)
   46d3c:	9080080c 	andi	r2,r18,32
   46d40:	10006126 	beq	r2,zero,46ec8 <___vfprintf_internal_r+0xd34>
   46d44:	d9402e17 	ldw	r5,184(sp)
   46d48:	2cc00017 	ldw	r19,0(r5)
   46d4c:	2d800117 	ldw	r22,4(r5)
   46d50:	29400204 	addi	r5,r5,8
   46d54:	d9402e15 	stw	r5,184(sp)
   46d58:	9080004c 	andi	r2,r18,1
   46d5c:	1001ac26 	beq	r2,zero,47410 <___vfprintf_internal_r+0x127c>
   46d60:	9d84b03a 	or	r2,r19,r22
   46d64:	10038526 	beq	r2,zero,47b7c <___vfprintf_internal_r+0x19e8>
   46d68:	d8c02a17 	ldw	r3,168(sp)
   46d6c:	00800c04 	movi	r2,48
   46d70:	d8802705 	stb	r2,156(sp)
   46d74:	dc402745 	stb	r17,157(sp)
   46d78:	d8002785 	stb	zero,158(sp)
   46d7c:	90800094 	ori	r2,r18,2
   46d80:	18047916 	blt	r3,zero,47f68 <___vfprintf_internal_r+0x1dd4>
   46d84:	00bfdfc4 	movi	r2,-129
   46d88:	90a4703a 	and	r18,r18,r2
   46d8c:	94800094 	ori	r18,r18,2
   46d90:	0039883a 	mov	fp,zero
   46d94:	d9003917 	ldw	r4,228(sp)
   46d98:	dc001e04 	addi	r16,sp,120
   46d9c:	988003cc 	andi	r2,r19,15
   46da0:	b006973a 	slli	r3,r22,28
   46da4:	2085883a 	add	r2,r4,r2
   46da8:	9826d13a 	srli	r19,r19,4
   46dac:	10800003 	ldbu	r2,0(r2)
   46db0:	b02cd13a 	srli	r22,r22,4
   46db4:	843fffc4 	addi	r16,r16,-1
   46db8:	1ce6b03a 	or	r19,r3,r19
   46dbc:	80800005 	stb	r2,0(r16)
   46dc0:	9d84b03a 	or	r2,r19,r22
   46dc4:	103ff51e 	bne	r2,zero,46d9c <_gp+0xfffe9c54>
   46dc8:	d8c02817 	ldw	r3,160(sp)
   46dcc:	1c07c83a 	sub	r3,r3,r16
   46dd0:	d8c02b15 	stw	r3,172(sp)
   46dd4:	003ec606 	br	468f0 <_gp+0xfffe97a8>
   46dd8:	8025883a 	mov	r18,r16
   46ddc:	dc002903 	ldbu	r16,164(sp)
   46de0:	e011883a 	mov	r8,fp
   46de4:	84003fcc 	andi	r16,r16,255
   46de8:	803e9626 	beq	r16,zero,46844 <_gp+0xfffe96fc>
   46dec:	d8c02b03 	ldbu	r3,172(sp)
   46df0:	d8c02785 	stb	r3,158(sp)
   46df4:	003e9306 	br	46844 <_gp+0xfffe96fc>
   46df8:	00c00044 	movi	r3,1
   46dfc:	d8c02905 	stb	r3,164(sp)
   46e00:	00c00ac4 	movi	r3,43
   46e04:	d8c02b05 	stb	r3,172(sp)
   46e08:	ac400007 	ldb	r17,0(r21)
   46e0c:	003d4306 	br	4631c <_gp+0xfffe91d4>
   46e10:	84000814 	ori	r16,r16,32
   46e14:	ac400007 	ldb	r17,0(r21)
   46e18:	003d4006 	br	4631c <_gp+0xfffe91d4>
   46e1c:	d8802e17 	ldw	r2,184(sp)
   46e20:	8025883a 	mov	r18,r16
   46e24:	d8002785 	stb	zero,158(sp)
   46e28:	14000017 	ldw	r16,0(r2)
   46e2c:	e011883a 	mov	r8,fp
   46e30:	14c00104 	addi	r19,r2,4
   46e34:	80042d26 	beq	r16,zero,47eec <___vfprintf_internal_r+0x1d58>
   46e38:	d8c02a17 	ldw	r3,168(sp)
   46e3c:	1803e416 	blt	r3,zero,47dd0 <___vfprintf_internal_r+0x1c3c>
   46e40:	180d883a 	mov	r6,r3
   46e44:	000b883a 	mov	r5,zero
   46e48:	8009883a 	mov	r4,r16
   46e4c:	df003d15 	stw	fp,244(sp)
   46e50:	004bacc0 	call	4bacc <memchr>
   46e54:	da003d17 	ldw	r8,244(sp)
   46e58:	10046826 	beq	r2,zero,47ffc <___vfprintf_internal_r+0x1e68>
   46e5c:	1405c83a 	sub	r2,r2,r16
   46e60:	d8802b15 	stw	r2,172(sp)
   46e64:	1003e016 	blt	r2,zero,47de8 <___vfprintf_internal_r+0x1c54>
   46e68:	df002783 	ldbu	fp,158(sp)
   46e6c:	d8802915 	stw	r2,164(sp)
   46e70:	dcc02e15 	stw	r19,184(sp)
   46e74:	d8002a15 	stw	zero,168(sp)
   46e78:	d8003215 	stw	zero,200(sp)
   46e7c:	003ea206 	br	46908 <_gp+0xfffe97c0>
   46e80:	8025883a 	mov	r18,r16
   46e84:	dc002903 	ldbu	r16,164(sp)
   46e88:	e011883a 	mov	r8,fp
   46e8c:	84003fcc 	andi	r16,r16,255
   46e90:	803f8d26 	beq	r16,zero,46cc8 <_gp+0xfffe9b80>
   46e94:	d8c02b03 	ldbu	r3,172(sp)
   46e98:	d8c02785 	stb	r3,158(sp)
   46e9c:	003f8a06 	br	46cc8 <_gp+0xfffe9b80>
   46ea0:	8025883a 	mov	r18,r16
   46ea4:	dc002903 	ldbu	r16,164(sp)
   46ea8:	e011883a 	mov	r8,fp
   46eac:	84003fcc 	andi	r16,r16,255
   46eb0:	8005661e 	bne	r16,zero,4844c <___vfprintf_internal_r+0x22b8>
   46eb4:	01000174 	movhi	r4,5
   46eb8:	210bbc04 	addi	r4,r4,12016
   46ebc:	d9003915 	stw	r4,228(sp)
   46ec0:	9080080c 	andi	r2,r18,32
   46ec4:	103f9f1e 	bne	r2,zero,46d44 <_gp+0xfffe9bfc>
   46ec8:	9080040c 	andi	r2,r18,16
   46ecc:	1002eb26 	beq	r2,zero,47a7c <___vfprintf_internal_r+0x18e8>
   46ed0:	d8802e17 	ldw	r2,184(sp)
   46ed4:	002d883a 	mov	r22,zero
   46ed8:	14c00017 	ldw	r19,0(r2)
   46edc:	10800104 	addi	r2,r2,4
   46ee0:	d8802e15 	stw	r2,184(sp)
   46ee4:	003f9c06 	br	46d58 <_gp+0xfffe9c10>
   46ee8:	d8802b07 	ldb	r2,172(sp)
   46eec:	1002e11e 	bne	r2,zero,47a74 <___vfprintf_internal_r+0x18e0>
   46ef0:	00c00044 	movi	r3,1
   46ef4:	d8c02905 	stb	r3,164(sp)
   46ef8:	00c00804 	movi	r3,32
   46efc:	d8c02b05 	stb	r3,172(sp)
   46f00:	ac400007 	ldb	r17,0(r21)
   46f04:	003d0506 	br	4631c <_gp+0xfffe91d4>
   46f08:	84000054 	ori	r16,r16,1
   46f0c:	ac400007 	ldb	r17,0(r21)
   46f10:	003d0206 	br	4631c <_gp+0xfffe91d4>
   46f14:	8025883a 	mov	r18,r16
   46f18:	dc002903 	ldbu	r16,164(sp)
   46f1c:	e011883a 	mov	r8,fp
   46f20:	84003fcc 	andi	r16,r16,255
   46f24:	803de726 	beq	r16,zero,466c4 <_gp+0xfffe957c>
   46f28:	d8c02b03 	ldbu	r3,172(sp)
   46f2c:	d8c02785 	stb	r3,158(sp)
   46f30:	003de406 	br	466c4 <_gp+0xfffe957c>
   46f34:	84001014 	ori	r16,r16,64
   46f38:	ac400007 	ldb	r17,0(r21)
   46f3c:	003cf706 	br	4631c <_gp+0xfffe91d4>
   46f40:	ac400007 	ldb	r17,0(r21)
   46f44:	00801b04 	movi	r2,108
   46f48:	88838f26 	beq	r17,r2,47d88 <___vfprintf_internal_r+0x1bf4>
   46f4c:	84000414 	ori	r16,r16,16
   46f50:	003cf206 	br	4631c <_gp+0xfffe91d4>
   46f54:	8025883a 	mov	r18,r16
   46f58:	dc002903 	ldbu	r16,164(sp)
   46f5c:	e011883a 	mov	r8,fp
   46f60:	84003fcc 	andi	r16,r16,255
   46f64:	80053f1e 	bne	r16,zero,48464 <___vfprintf_internal_r+0x22d0>
   46f68:	9080080c 	andi	r2,r18,32
   46f6c:	1002d226 	beq	r2,zero,47ab8 <___vfprintf_internal_r+0x1924>
   46f70:	d9002e17 	ldw	r4,184(sp)
   46f74:	d9402f17 	ldw	r5,188(sp)
   46f78:	20800017 	ldw	r2,0(r4)
   46f7c:	2807d7fa 	srai	r3,r5,31
   46f80:	21000104 	addi	r4,r4,4
   46f84:	d9002e15 	stw	r4,184(sp)
   46f88:	11400015 	stw	r5,0(r2)
   46f8c:	10c00115 	stw	r3,4(r2)
   46f90:	003cb806 	br	46274 <_gp+0xfffe912c>
   46f94:	d8c02e17 	ldw	r3,184(sp)
   46f98:	d9002e17 	ldw	r4,184(sp)
   46f9c:	8025883a 	mov	r18,r16
   46fa0:	18800017 	ldw	r2,0(r3)
   46fa4:	21000104 	addi	r4,r4,4
   46fa8:	00c00044 	movi	r3,1
   46fac:	e011883a 	mov	r8,fp
   46fb0:	d8c02915 	stw	r3,164(sp)
   46fb4:	d8002785 	stb	zero,158(sp)
   46fb8:	d8801405 	stb	r2,80(sp)
   46fbc:	d9002e15 	stw	r4,184(sp)
   46fc0:	d8c02b15 	stw	r3,172(sp)
   46fc4:	d8002a15 	stw	zero,168(sp)
   46fc8:	d8003215 	stw	zero,200(sp)
   46fcc:	dc001404 	addi	r16,sp,80
   46fd0:	0039883a 	mov	fp,zero
   46fd4:	003e5306 	br	46924 <_gp+0xfffe97dc>
   46fd8:	01000174 	movhi	r4,5
   46fdc:	210bbc04 	addi	r4,r4,12016
   46fe0:	0039883a 	mov	fp,zero
   46fe4:	d9003915 	stw	r4,228(sp)
   46fe8:	04401e04 	movi	r17,120
   46fec:	003f6906 	br	46d94 <_gp+0xfffe9c4c>
   46ff0:	8025883a 	mov	r18,r16
   46ff4:	dc002903 	ldbu	r16,164(sp)
   46ff8:	e011883a 	mov	r8,fp
   46ffc:	84003fcc 	andi	r16,r16,255
   47000:	8005081e 	bne	r16,zero,48424 <___vfprintf_internal_r+0x2290>
   47004:	883d6126 	beq	r17,zero,4658c <_gp+0xfffe9444>
   47008:	00c00044 	movi	r3,1
   4700c:	d8c02915 	stw	r3,164(sp)
   47010:	dc401405 	stb	r17,80(sp)
   47014:	d8002785 	stb	zero,158(sp)
   47018:	003fe906 	br	46fc0 <_gp+0xfffe9e78>
   4701c:	01400174 	movhi	r5,5
   47020:	294bbc04 	addi	r5,r5,12016
   47024:	d9403915 	stw	r5,228(sp)
   47028:	d8c02e15 	stw	r3,184(sp)
   4702c:	1025883a 	mov	r18,r2
   47030:	04401e04 	movi	r17,120
   47034:	9d84b03a 	or	r2,r19,r22
   47038:	1000fc1e 	bne	r2,zero,4742c <___vfprintf_internal_r+0x1298>
   4703c:	0039883a 	mov	fp,zero
   47040:	00800084 	movi	r2,2
   47044:	10803fcc 	andi	r2,r2,255
   47048:	00c00044 	movi	r3,1
   4704c:	10c20f26 	beq	r2,r3,4788c <___vfprintf_internal_r+0x16f8>
   47050:	00c00084 	movi	r3,2
   47054:	10fd3326 	beq	r2,r3,46524 <_gp+0xfffe93dc>
   47058:	003e0b06 	br	46888 <_gp+0xfffe9740>
   4705c:	d8c02017 	ldw	r3,128(sp)
   47060:	003e7106 	br	46a28 <_gp+0xfffe98e0>
   47064:	00801944 	movi	r2,101
   47068:	14407e0e 	bge	r2,r17,47264 <___vfprintf_internal_r+0x10d0>
   4706c:	d9003617 	ldw	r4,216(sp)
   47070:	d9403817 	ldw	r5,224(sp)
   47074:	000d883a 	mov	r6,zero
   47078:	000f883a 	mov	r7,zero
   4707c:	d8c03c15 	stw	r3,240(sp)
   47080:	da003d15 	stw	r8,244(sp)
   47084:	00505880 	call	50588 <__eqdf2>
   47088:	d8c03c17 	ldw	r3,240(sp)
   4708c:	da003d17 	ldw	r8,244(sp)
   47090:	1000f71e 	bne	r2,zero,47470 <___vfprintf_internal_r+0x12dc>
   47094:	d8801f17 	ldw	r2,124(sp)
   47098:	01000174 	movhi	r4,5
   4709c:	210bc304 	addi	r4,r4,12044
   470a0:	18c00044 	addi	r3,r3,1
   470a4:	10800044 	addi	r2,r2,1
   470a8:	41000015 	stw	r4,0(r8)
   470ac:	01000044 	movi	r4,1
   470b0:	41000115 	stw	r4,4(r8)
   470b4:	d8c02015 	stw	r3,128(sp)
   470b8:	d8801f15 	stw	r2,124(sp)
   470bc:	010001c4 	movi	r4,7
   470c0:	2082b816 	blt	r4,r2,47ba4 <___vfprintf_internal_r+0x1a10>
   470c4:	42000204 	addi	r8,r8,8
   470c8:	d8802617 	ldw	r2,152(sp)
   470cc:	d9403317 	ldw	r5,204(sp)
   470d0:	11400216 	blt	r2,r5,470dc <___vfprintf_internal_r+0xf48>
   470d4:	9080004c 	andi	r2,r18,1
   470d8:	103eb326 	beq	r2,zero,46ba8 <_gp+0xfffe9a60>
   470dc:	d8803717 	ldw	r2,220(sp)
   470e0:	d9003417 	ldw	r4,208(sp)
   470e4:	d9403717 	ldw	r5,220(sp)
   470e8:	1887883a 	add	r3,r3,r2
   470ec:	d8801f17 	ldw	r2,124(sp)
   470f0:	41000015 	stw	r4,0(r8)
   470f4:	41400115 	stw	r5,4(r8)
   470f8:	10800044 	addi	r2,r2,1
   470fc:	d8c02015 	stw	r3,128(sp)
   47100:	d8801f15 	stw	r2,124(sp)
   47104:	010001c4 	movi	r4,7
   47108:	20832916 	blt	r4,r2,47db0 <___vfprintf_internal_r+0x1c1c>
   4710c:	42000204 	addi	r8,r8,8
   47110:	d8803317 	ldw	r2,204(sp)
   47114:	143fffc4 	addi	r16,r2,-1
   47118:	043ea30e 	bge	zero,r16,46ba8 <_gp+0xfffe9a60>
   4711c:	04400404 	movi	r17,16
   47120:	d8801f17 	ldw	r2,124(sp)
   47124:	8c00880e 	bge	r17,r16,47348 <___vfprintf_internal_r+0x11b4>
   47128:	01400174 	movhi	r5,5
   4712c:	294bc384 	addi	r5,r5,12046
   47130:	d9402c15 	stw	r5,176(sp)
   47134:	058001c4 	movi	r22,7
   47138:	dcc02d17 	ldw	r19,180(sp)
   4713c:	00000306 	br	4714c <___vfprintf_internal_r+0xfb8>
   47140:	42000204 	addi	r8,r8,8
   47144:	843ffc04 	addi	r16,r16,-16
   47148:	8c00820e 	bge	r17,r16,47354 <___vfprintf_internal_r+0x11c0>
   4714c:	18c00404 	addi	r3,r3,16
   47150:	10800044 	addi	r2,r2,1
   47154:	45000015 	stw	r20,0(r8)
   47158:	44400115 	stw	r17,4(r8)
   4715c:	d8c02015 	stw	r3,128(sp)
   47160:	d8801f15 	stw	r2,124(sp)
   47164:	b0bff60e 	bge	r22,r2,47140 <_gp+0xfffe9ff8>
   47168:	d9801e04 	addi	r6,sp,120
   4716c:	b80b883a 	mov	r5,r23
   47170:	9809883a 	mov	r4,r19
   47174:	004d9740 	call	4d974 <__sprint_r>
   47178:	103d0a1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   4717c:	d8c02017 	ldw	r3,128(sp)
   47180:	d8801f17 	ldw	r2,124(sp)
   47184:	da000404 	addi	r8,sp,16
   47188:	003fee06 	br	47144 <_gp+0xfffe9ffc>
   4718c:	d9403117 	ldw	r5,196(sp)
   47190:	d8802917 	ldw	r2,164(sp)
   47194:	28adc83a 	sub	r22,r5,r2
   47198:	05be410e 	bge	zero,r22,46aa0 <_gp+0xfffe9958>
   4719c:	07000404 	movi	fp,16
   471a0:	d8801f17 	ldw	r2,124(sp)
   471a4:	e5838f0e 	bge	fp,r22,47fe4 <___vfprintf_internal_r+0x1e50>
   471a8:	01400174 	movhi	r5,5
   471ac:	294bc384 	addi	r5,r5,12046
   471b0:	dc403015 	stw	r17,192(sp)
   471b4:	d9402c15 	stw	r5,176(sp)
   471b8:	b023883a 	mov	r17,r22
   471bc:	04c001c4 	movi	r19,7
   471c0:	a82d883a 	mov	r22,r21
   471c4:	902b883a 	mov	r21,r18
   471c8:	8025883a 	mov	r18,r16
   471cc:	dc002d17 	ldw	r16,180(sp)
   471d0:	00000306 	br	471e0 <___vfprintf_internal_r+0x104c>
   471d4:	8c7ffc04 	addi	r17,r17,-16
   471d8:	42000204 	addi	r8,r8,8
   471dc:	e440110e 	bge	fp,r17,47224 <___vfprintf_internal_r+0x1090>
   471e0:	18c00404 	addi	r3,r3,16
   471e4:	10800044 	addi	r2,r2,1
   471e8:	45000015 	stw	r20,0(r8)
   471ec:	47000115 	stw	fp,4(r8)
   471f0:	d8c02015 	stw	r3,128(sp)
   471f4:	d8801f15 	stw	r2,124(sp)
   471f8:	98bff60e 	bge	r19,r2,471d4 <_gp+0xfffea08c>
   471fc:	d9801e04 	addi	r6,sp,120
   47200:	b80b883a 	mov	r5,r23
   47204:	8009883a 	mov	r4,r16
   47208:	004d9740 	call	4d974 <__sprint_r>
   4720c:	103ce51e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47210:	8c7ffc04 	addi	r17,r17,-16
   47214:	d8c02017 	ldw	r3,128(sp)
   47218:	d8801f17 	ldw	r2,124(sp)
   4721c:	da000404 	addi	r8,sp,16
   47220:	e47fef16 	blt	fp,r17,471e0 <_gp+0xfffea098>
   47224:	9021883a 	mov	r16,r18
   47228:	a825883a 	mov	r18,r21
   4722c:	b02b883a 	mov	r21,r22
   47230:	882d883a 	mov	r22,r17
   47234:	dc403017 	ldw	r17,192(sp)
   47238:	d9002c17 	ldw	r4,176(sp)
   4723c:	1d87883a 	add	r3,r3,r22
   47240:	10800044 	addi	r2,r2,1
   47244:	41000015 	stw	r4,0(r8)
   47248:	45800115 	stw	r22,4(r8)
   4724c:	d8c02015 	stw	r3,128(sp)
   47250:	d8801f15 	stw	r2,124(sp)
   47254:	010001c4 	movi	r4,7
   47258:	20818e16 	blt	r4,r2,47894 <___vfprintf_internal_r+0x1700>
   4725c:	42000204 	addi	r8,r8,8
   47260:	003e0f06 	br	46aa0 <_gp+0xfffe9958>
   47264:	d9403317 	ldw	r5,204(sp)
   47268:	00800044 	movi	r2,1
   4726c:	18c00044 	addi	r3,r3,1
   47270:	1141530e 	bge	r2,r5,477c0 <___vfprintf_internal_r+0x162c>
   47274:	dc401f17 	ldw	r17,124(sp)
   47278:	00800044 	movi	r2,1
   4727c:	40800115 	stw	r2,4(r8)
   47280:	8c400044 	addi	r17,r17,1
   47284:	44000015 	stw	r16,0(r8)
   47288:	d8c02015 	stw	r3,128(sp)
   4728c:	dc401f15 	stw	r17,124(sp)
   47290:	008001c4 	movi	r2,7
   47294:	14416b16 	blt	r2,r17,47844 <___vfprintf_internal_r+0x16b0>
   47298:	42000204 	addi	r8,r8,8
   4729c:	d8803717 	ldw	r2,220(sp)
   472a0:	d9003417 	ldw	r4,208(sp)
   472a4:	8c400044 	addi	r17,r17,1
   472a8:	10c7883a 	add	r3,r2,r3
   472ac:	40800115 	stw	r2,4(r8)
   472b0:	41000015 	stw	r4,0(r8)
   472b4:	d8c02015 	stw	r3,128(sp)
   472b8:	dc401f15 	stw	r17,124(sp)
   472bc:	008001c4 	movi	r2,7
   472c0:	14416916 	blt	r2,r17,47868 <___vfprintf_internal_r+0x16d4>
   472c4:	45800204 	addi	r22,r8,8
   472c8:	d9003617 	ldw	r4,216(sp)
   472cc:	d9403817 	ldw	r5,224(sp)
   472d0:	000d883a 	mov	r6,zero
   472d4:	000f883a 	mov	r7,zero
   472d8:	d8c03c15 	stw	r3,240(sp)
   472dc:	00505880 	call	50588 <__eqdf2>
   472e0:	d8c03c17 	ldw	r3,240(sp)
   472e4:	1000bc26 	beq	r2,zero,475d8 <___vfprintf_internal_r+0x1444>
   472e8:	d9403317 	ldw	r5,204(sp)
   472ec:	84000044 	addi	r16,r16,1
   472f0:	8c400044 	addi	r17,r17,1
   472f4:	28bfffc4 	addi	r2,r5,-1
   472f8:	1887883a 	add	r3,r3,r2
   472fc:	b0800115 	stw	r2,4(r22)
   47300:	b4000015 	stw	r16,0(r22)
   47304:	d8c02015 	stw	r3,128(sp)
   47308:	dc401f15 	stw	r17,124(sp)
   4730c:	008001c4 	movi	r2,7
   47310:	14414316 	blt	r2,r17,47820 <___vfprintf_internal_r+0x168c>
   47314:	b5800204 	addi	r22,r22,8
   47318:	d9003a17 	ldw	r4,232(sp)
   4731c:	df0022c4 	addi	fp,sp,139
   47320:	8c400044 	addi	r17,r17,1
   47324:	20c7883a 	add	r3,r4,r3
   47328:	b7000015 	stw	fp,0(r22)
   4732c:	b1000115 	stw	r4,4(r22)
   47330:	d8c02015 	stw	r3,128(sp)
   47334:	dc401f15 	stw	r17,124(sp)
   47338:	008001c4 	movi	r2,7
   4733c:	14400e16 	blt	r2,r17,47378 <___vfprintf_internal_r+0x11e4>
   47340:	b2000204 	addi	r8,r22,8
   47344:	003e1806 	br	46ba8 <_gp+0xfffe9a60>
   47348:	01000174 	movhi	r4,5
   4734c:	210bc384 	addi	r4,r4,12046
   47350:	d9002c15 	stw	r4,176(sp)
   47354:	d9002c17 	ldw	r4,176(sp)
   47358:	1c07883a 	add	r3,r3,r16
   4735c:	44000115 	stw	r16,4(r8)
   47360:	41000015 	stw	r4,0(r8)
   47364:	10800044 	addi	r2,r2,1
   47368:	d8c02015 	stw	r3,128(sp)
   4736c:	d8801f15 	stw	r2,124(sp)
   47370:	010001c4 	movi	r4,7
   47374:	20be0b0e 	bge	r4,r2,46ba4 <_gp+0xfffe9a5c>
   47378:	d9002d17 	ldw	r4,180(sp)
   4737c:	d9801e04 	addi	r6,sp,120
   47380:	b80b883a 	mov	r5,r23
   47384:	004d9740 	call	4d974 <__sprint_r>
   47388:	103c861e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   4738c:	d8c02017 	ldw	r3,128(sp)
   47390:	da000404 	addi	r8,sp,16
   47394:	003e0406 	br	46ba8 <_gp+0xfffe9a60>
   47398:	d9002d17 	ldw	r4,180(sp)
   4739c:	d9801e04 	addi	r6,sp,120
   473a0:	b80b883a 	mov	r5,r23
   473a4:	004d9740 	call	4d974 <__sprint_r>
   473a8:	103e3b26 	beq	r2,zero,46c98 <_gp+0xfffe9b50>
   473ac:	003c7d06 	br	465a4 <_gp+0xfffe945c>
   473b0:	d9002d17 	ldw	r4,180(sp)
   473b4:	d9801e04 	addi	r6,sp,120
   473b8:	b80b883a 	mov	r5,r23
   473bc:	004d9740 	call	4d974 <__sprint_r>
   473c0:	103c781e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   473c4:	d8c02017 	ldw	r3,128(sp)
   473c8:	da000404 	addi	r8,sp,16
   473cc:	003de906 	br	46b74 <_gp+0xfffe9a2c>
   473d0:	d9002d17 	ldw	r4,180(sp)
   473d4:	d9801e04 	addi	r6,sp,120
   473d8:	b80b883a 	mov	r5,r23
   473dc:	004d9740 	call	4d974 <__sprint_r>
   473e0:	103c701e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   473e4:	d8c02017 	ldw	r3,128(sp)
   473e8:	da000404 	addi	r8,sp,16
   473ec:	003d9b06 	br	46a5c <_gp+0xfffe9914>
   473f0:	d9002d17 	ldw	r4,180(sp)
   473f4:	d9801e04 	addi	r6,sp,120
   473f8:	b80b883a 	mov	r5,r23
   473fc:	004d9740 	call	4d974 <__sprint_r>
   47400:	103c681e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47404:	d8c02017 	ldw	r3,128(sp)
   47408:	da000404 	addi	r8,sp,16
   4740c:	003da106 	br	46a94 <_gp+0xfffe994c>
   47410:	d9402a17 	ldw	r5,168(sp)
   47414:	d8002785 	stb	zero,158(sp)
   47418:	283f0616 	blt	r5,zero,47034 <_gp+0xfffe9eec>
   4741c:	00ffdfc4 	movi	r3,-129
   47420:	9d84b03a 	or	r2,r19,r22
   47424:	90e4703a 	and	r18,r18,r3
   47428:	103c3b26 	beq	r2,zero,46518 <_gp+0xfffe93d0>
   4742c:	0039883a 	mov	fp,zero
   47430:	003e5806 	br	46d94 <_gp+0xfffe9c4c>
   47434:	9080040c 	andi	r2,r18,16
   47438:	1001b326 	beq	r2,zero,47b08 <___vfprintf_internal_r+0x1974>
   4743c:	d8c02e17 	ldw	r3,184(sp)
   47440:	d9002a17 	ldw	r4,168(sp)
   47444:	d8002785 	stb	zero,158(sp)
   47448:	18800104 	addi	r2,r3,4
   4744c:	1cc00017 	ldw	r19,0(r3)
   47450:	002d883a 	mov	r22,zero
   47454:	2001b516 	blt	r4,zero,47b2c <___vfprintf_internal_r+0x1998>
   47458:	00ffdfc4 	movi	r3,-129
   4745c:	d8802e15 	stw	r2,184(sp)
   47460:	90e4703a 	and	r18,r18,r3
   47464:	983d0526 	beq	r19,zero,4687c <_gp+0xfffe9734>
   47468:	0039883a 	mov	fp,zero
   4746c:	003d0806 	br	46890 <_gp+0xfffe9748>
   47470:	dc402617 	ldw	r17,152(sp)
   47474:	0441d30e 	bge	zero,r17,47bc4 <___vfprintf_internal_r+0x1a30>
   47478:	dc403217 	ldw	r17,200(sp)
   4747c:	d8803317 	ldw	r2,204(sp)
   47480:	1440010e 	bge	r2,r17,47488 <___vfprintf_internal_r+0x12f4>
   47484:	1023883a 	mov	r17,r2
   47488:	04400a0e 	bge	zero,r17,474b4 <___vfprintf_internal_r+0x1320>
   4748c:	d8801f17 	ldw	r2,124(sp)
   47490:	1c47883a 	add	r3,r3,r17
   47494:	44000015 	stw	r16,0(r8)
   47498:	10800044 	addi	r2,r2,1
   4749c:	44400115 	stw	r17,4(r8)
   474a0:	d8c02015 	stw	r3,128(sp)
   474a4:	d8801f15 	stw	r2,124(sp)
   474a8:	010001c4 	movi	r4,7
   474ac:	20826516 	blt	r4,r2,47e44 <___vfprintf_internal_r+0x1cb0>
   474b0:	42000204 	addi	r8,r8,8
   474b4:	88026116 	blt	r17,zero,47e3c <___vfprintf_internal_r+0x1ca8>
   474b8:	d9003217 	ldw	r4,200(sp)
   474bc:	2463c83a 	sub	r17,r4,r17
   474c0:	04407b0e 	bge	zero,r17,476b0 <___vfprintf_internal_r+0x151c>
   474c4:	05800404 	movi	r22,16
   474c8:	d8801f17 	ldw	r2,124(sp)
   474cc:	b4419d0e 	bge	r22,r17,47b44 <___vfprintf_internal_r+0x19b0>
   474d0:	01000174 	movhi	r4,5
   474d4:	210bc384 	addi	r4,r4,12046
   474d8:	d9002c15 	stw	r4,176(sp)
   474dc:	070001c4 	movi	fp,7
   474e0:	dcc02d17 	ldw	r19,180(sp)
   474e4:	00000306 	br	474f4 <___vfprintf_internal_r+0x1360>
   474e8:	42000204 	addi	r8,r8,8
   474ec:	8c7ffc04 	addi	r17,r17,-16
   474f0:	b441970e 	bge	r22,r17,47b50 <___vfprintf_internal_r+0x19bc>
   474f4:	18c00404 	addi	r3,r3,16
   474f8:	10800044 	addi	r2,r2,1
   474fc:	45000015 	stw	r20,0(r8)
   47500:	45800115 	stw	r22,4(r8)
   47504:	d8c02015 	stw	r3,128(sp)
   47508:	d8801f15 	stw	r2,124(sp)
   4750c:	e0bff60e 	bge	fp,r2,474e8 <_gp+0xfffea3a0>
   47510:	d9801e04 	addi	r6,sp,120
   47514:	b80b883a 	mov	r5,r23
   47518:	9809883a 	mov	r4,r19
   4751c:	004d9740 	call	4d974 <__sprint_r>
   47520:	103c201e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47524:	d8c02017 	ldw	r3,128(sp)
   47528:	d8801f17 	ldw	r2,124(sp)
   4752c:	da000404 	addi	r8,sp,16
   47530:	003fee06 	br	474ec <_gp+0xfffea3a4>
   47534:	d9002d17 	ldw	r4,180(sp)
   47538:	d9801e04 	addi	r6,sp,120
   4753c:	b80b883a 	mov	r5,r23
   47540:	004d9740 	call	4d974 <__sprint_r>
   47544:	103c171e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47548:	d8c02017 	ldw	r3,128(sp)
   4754c:	df002787 	ldb	fp,158(sp)
   47550:	da000404 	addi	r8,sp,16
   47554:	003d3406 	br	46a28 <_gp+0xfffe98e0>
   47558:	9080040c 	andi	r2,r18,16
   4755c:	10016126 	beq	r2,zero,47ae4 <___vfprintf_internal_r+0x1950>
   47560:	d9402e17 	ldw	r5,184(sp)
   47564:	2cc00017 	ldw	r19,0(r5)
   47568:	29400104 	addi	r5,r5,4
   4756c:	d9402e15 	stw	r5,184(sp)
   47570:	982dd7fa 	srai	r22,r19,31
   47574:	b005883a 	mov	r2,r22
   47578:	003c5a06 	br	466e4 <_gp+0xfffe959c>
   4757c:	9080040c 	andi	r2,r18,16
   47580:	10003526 	beq	r2,zero,47658 <___vfprintf_internal_r+0x14c4>
   47584:	d8c02e17 	ldw	r3,184(sp)
   47588:	d9002a17 	ldw	r4,168(sp)
   4758c:	d8002785 	stb	zero,158(sp)
   47590:	18800104 	addi	r2,r3,4
   47594:	1cc00017 	ldw	r19,0(r3)
   47598:	002d883a 	mov	r22,zero
   4759c:	20003716 	blt	r4,zero,4767c <___vfprintf_internal_r+0x14e8>
   475a0:	00ffdfc4 	movi	r3,-129
   475a4:	d8802e15 	stw	r2,184(sp)
   475a8:	90e4703a 	and	r18,r18,r3
   475ac:	0039883a 	mov	fp,zero
   475b0:	983dd426 	beq	r19,zero,46d04 <_gp+0xfffe9bbc>
   475b4:	00800244 	movi	r2,9
   475b8:	14fc5336 	bltu	r2,r19,46708 <_gp+0xfffe95c0>
   475bc:	d8c02817 	ldw	r3,160(sp)
   475c0:	dc001dc4 	addi	r16,sp,119
   475c4:	9cc00c04 	addi	r19,r19,48
   475c8:	1c07c83a 	sub	r3,r3,r16
   475cc:	dcc01dc5 	stb	r19,119(sp)
   475d0:	d8c02b15 	stw	r3,172(sp)
   475d4:	003cc606 	br	468f0 <_gp+0xfffe97a8>
   475d8:	d8803317 	ldw	r2,204(sp)
   475dc:	143fffc4 	addi	r16,r2,-1
   475e0:	043f4d0e 	bge	zero,r16,47318 <_gp+0xfffea1d0>
   475e4:	07000404 	movi	fp,16
   475e8:	e400810e 	bge	fp,r16,477f0 <___vfprintf_internal_r+0x165c>
   475ec:	01400174 	movhi	r5,5
   475f0:	294bc384 	addi	r5,r5,12046
   475f4:	d9402c15 	stw	r5,176(sp)
   475f8:	01c001c4 	movi	r7,7
   475fc:	dcc02d17 	ldw	r19,180(sp)
   47600:	00000306 	br	47610 <___vfprintf_internal_r+0x147c>
   47604:	b5800204 	addi	r22,r22,8
   47608:	843ffc04 	addi	r16,r16,-16
   4760c:	e4007b0e 	bge	fp,r16,477fc <___vfprintf_internal_r+0x1668>
   47610:	18c00404 	addi	r3,r3,16
   47614:	8c400044 	addi	r17,r17,1
   47618:	b5000015 	stw	r20,0(r22)
   4761c:	b7000115 	stw	fp,4(r22)
   47620:	d8c02015 	stw	r3,128(sp)
   47624:	dc401f15 	stw	r17,124(sp)
   47628:	3c7ff60e 	bge	r7,r17,47604 <_gp+0xfffea4bc>
   4762c:	d9801e04 	addi	r6,sp,120
   47630:	b80b883a 	mov	r5,r23
   47634:	9809883a 	mov	r4,r19
   47638:	d9c03c15 	stw	r7,240(sp)
   4763c:	004d9740 	call	4d974 <__sprint_r>
   47640:	d9c03c17 	ldw	r7,240(sp)
   47644:	103bd71e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47648:	d8c02017 	ldw	r3,128(sp)
   4764c:	dc401f17 	ldw	r17,124(sp)
   47650:	dd800404 	addi	r22,sp,16
   47654:	003fec06 	br	47608 <_gp+0xfffea4c0>
   47658:	9080100c 	andi	r2,r18,64
   4765c:	d8002785 	stb	zero,158(sp)
   47660:	10010e26 	beq	r2,zero,47a9c <___vfprintf_internal_r+0x1908>
   47664:	d9402e17 	ldw	r5,184(sp)
   47668:	d8c02a17 	ldw	r3,168(sp)
   4766c:	002d883a 	mov	r22,zero
   47670:	28800104 	addi	r2,r5,4
   47674:	2cc0000b 	ldhu	r19,0(r5)
   47678:	183fc90e 	bge	r3,zero,475a0 <_gp+0xfffea458>
   4767c:	d8802e15 	stw	r2,184(sp)
   47680:	0039883a 	mov	fp,zero
   47684:	9d84b03a 	or	r2,r19,r22
   47688:	103c1e1e 	bne	r2,zero,46704 <_gp+0xfffe95bc>
   4768c:	00800044 	movi	r2,1
   47690:	003e6c06 	br	47044 <_gp+0xfffe9efc>
   47694:	d9002d17 	ldw	r4,180(sp)
   47698:	d9801e04 	addi	r6,sp,120
   4769c:	b80b883a 	mov	r5,r23
   476a0:	004d9740 	call	4d974 <__sprint_r>
   476a4:	103bbf1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   476a8:	d8c02017 	ldw	r3,128(sp)
   476ac:	da000404 	addi	r8,sp,16
   476b0:	d9003217 	ldw	r4,200(sp)
   476b4:	d8802617 	ldw	r2,152(sp)
   476b8:	d9403317 	ldw	r5,204(sp)
   476bc:	8123883a 	add	r17,r16,r4
   476c0:	11400216 	blt	r2,r5,476cc <___vfprintf_internal_r+0x1538>
   476c4:	9100004c 	andi	r4,r18,1
   476c8:	20000d26 	beq	r4,zero,47700 <___vfprintf_internal_r+0x156c>
   476cc:	d9003717 	ldw	r4,220(sp)
   476d0:	d9403417 	ldw	r5,208(sp)
   476d4:	1907883a 	add	r3,r3,r4
   476d8:	d9001f17 	ldw	r4,124(sp)
   476dc:	41400015 	stw	r5,0(r8)
   476e0:	d9403717 	ldw	r5,220(sp)
   476e4:	21000044 	addi	r4,r4,1
   476e8:	d8c02015 	stw	r3,128(sp)
   476ec:	41400115 	stw	r5,4(r8)
   476f0:	d9001f15 	stw	r4,124(sp)
   476f4:	014001c4 	movi	r5,7
   476f8:	2901e816 	blt	r5,r4,47e9c <___vfprintf_internal_r+0x1d08>
   476fc:	42000204 	addi	r8,r8,8
   47700:	d9003317 	ldw	r4,204(sp)
   47704:	8121883a 	add	r16,r16,r4
   47708:	2085c83a 	sub	r2,r4,r2
   4770c:	8461c83a 	sub	r16,r16,r17
   47710:	1400010e 	bge	r2,r16,47718 <___vfprintf_internal_r+0x1584>
   47714:	1021883a 	mov	r16,r2
   47718:	04000a0e 	bge	zero,r16,47744 <___vfprintf_internal_r+0x15b0>
   4771c:	d9001f17 	ldw	r4,124(sp)
   47720:	1c07883a 	add	r3,r3,r16
   47724:	44400015 	stw	r17,0(r8)
   47728:	21000044 	addi	r4,r4,1
   4772c:	44000115 	stw	r16,4(r8)
   47730:	d8c02015 	stw	r3,128(sp)
   47734:	d9001f15 	stw	r4,124(sp)
   47738:	014001c4 	movi	r5,7
   4773c:	2901fb16 	blt	r5,r4,47f2c <___vfprintf_internal_r+0x1d98>
   47740:	42000204 	addi	r8,r8,8
   47744:	8001f716 	blt	r16,zero,47f24 <___vfprintf_internal_r+0x1d90>
   47748:	1421c83a 	sub	r16,r2,r16
   4774c:	043d160e 	bge	zero,r16,46ba8 <_gp+0xfffe9a60>
   47750:	04400404 	movi	r17,16
   47754:	d8801f17 	ldw	r2,124(sp)
   47758:	8c3efb0e 	bge	r17,r16,47348 <_gp+0xfffea200>
   4775c:	01400174 	movhi	r5,5
   47760:	294bc384 	addi	r5,r5,12046
   47764:	d9402c15 	stw	r5,176(sp)
   47768:	058001c4 	movi	r22,7
   4776c:	dcc02d17 	ldw	r19,180(sp)
   47770:	00000306 	br	47780 <___vfprintf_internal_r+0x15ec>
   47774:	42000204 	addi	r8,r8,8
   47778:	843ffc04 	addi	r16,r16,-16
   4777c:	8c3ef50e 	bge	r17,r16,47354 <_gp+0xfffea20c>
   47780:	18c00404 	addi	r3,r3,16
   47784:	10800044 	addi	r2,r2,1
   47788:	45000015 	stw	r20,0(r8)
   4778c:	44400115 	stw	r17,4(r8)
   47790:	d8c02015 	stw	r3,128(sp)
   47794:	d8801f15 	stw	r2,124(sp)
   47798:	b0bff60e 	bge	r22,r2,47774 <_gp+0xfffea62c>
   4779c:	d9801e04 	addi	r6,sp,120
   477a0:	b80b883a 	mov	r5,r23
   477a4:	9809883a 	mov	r4,r19
   477a8:	004d9740 	call	4d974 <__sprint_r>
   477ac:	103b7d1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   477b0:	d8c02017 	ldw	r3,128(sp)
   477b4:	d8801f17 	ldw	r2,124(sp)
   477b8:	da000404 	addi	r8,sp,16
   477bc:	003fee06 	br	47778 <_gp+0xfffea630>
   477c0:	9088703a 	and	r4,r18,r2
   477c4:	203eab1e 	bne	r4,zero,47274 <_gp+0xfffea12c>
   477c8:	dc401f17 	ldw	r17,124(sp)
   477cc:	40800115 	stw	r2,4(r8)
   477d0:	44000015 	stw	r16,0(r8)
   477d4:	8c400044 	addi	r17,r17,1
   477d8:	d8c02015 	stw	r3,128(sp)
   477dc:	dc401f15 	stw	r17,124(sp)
   477e0:	008001c4 	movi	r2,7
   477e4:	14400e16 	blt	r2,r17,47820 <___vfprintf_internal_r+0x168c>
   477e8:	45800204 	addi	r22,r8,8
   477ec:	003eca06 	br	47318 <_gp+0xfffea1d0>
   477f0:	01000174 	movhi	r4,5
   477f4:	210bc384 	addi	r4,r4,12046
   477f8:	d9002c15 	stw	r4,176(sp)
   477fc:	d8802c17 	ldw	r2,176(sp)
   47800:	1c07883a 	add	r3,r3,r16
   47804:	8c400044 	addi	r17,r17,1
   47808:	b0800015 	stw	r2,0(r22)
   4780c:	b4000115 	stw	r16,4(r22)
   47810:	d8c02015 	stw	r3,128(sp)
   47814:	dc401f15 	stw	r17,124(sp)
   47818:	008001c4 	movi	r2,7
   4781c:	147ebd0e 	bge	r2,r17,47314 <_gp+0xfffea1cc>
   47820:	d9002d17 	ldw	r4,180(sp)
   47824:	d9801e04 	addi	r6,sp,120
   47828:	b80b883a 	mov	r5,r23
   4782c:	004d9740 	call	4d974 <__sprint_r>
   47830:	103b5c1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47834:	d8c02017 	ldw	r3,128(sp)
   47838:	dc401f17 	ldw	r17,124(sp)
   4783c:	dd800404 	addi	r22,sp,16
   47840:	003eb506 	br	47318 <_gp+0xfffea1d0>
   47844:	d9002d17 	ldw	r4,180(sp)
   47848:	d9801e04 	addi	r6,sp,120
   4784c:	b80b883a 	mov	r5,r23
   47850:	004d9740 	call	4d974 <__sprint_r>
   47854:	103b531e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47858:	d8c02017 	ldw	r3,128(sp)
   4785c:	dc401f17 	ldw	r17,124(sp)
   47860:	da000404 	addi	r8,sp,16
   47864:	003e8d06 	br	4729c <_gp+0xfffea154>
   47868:	d9002d17 	ldw	r4,180(sp)
   4786c:	d9801e04 	addi	r6,sp,120
   47870:	b80b883a 	mov	r5,r23
   47874:	004d9740 	call	4d974 <__sprint_r>
   47878:	103b4a1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   4787c:	d8c02017 	ldw	r3,128(sp)
   47880:	dc401f17 	ldw	r17,124(sp)
   47884:	dd800404 	addi	r22,sp,16
   47888:	003e8f06 	br	472c8 <_gp+0xfffea180>
   4788c:	0027883a 	mov	r19,zero
   47890:	003f4a06 	br	475bc <_gp+0xfffea474>
   47894:	d9002d17 	ldw	r4,180(sp)
   47898:	d9801e04 	addi	r6,sp,120
   4789c:	b80b883a 	mov	r5,r23
   478a0:	004d9740 	call	4d974 <__sprint_r>
   478a4:	103b3f1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   478a8:	d8c02017 	ldw	r3,128(sp)
   478ac:	da000404 	addi	r8,sp,16
   478b0:	003c7b06 	br	46aa0 <_gp+0xfffe9958>
   478b4:	d9402a17 	ldw	r5,168(sp)
   478b8:	04e7c83a 	sub	r19,zero,r19
   478bc:	07000b44 	movi	fp,45
   478c0:	9804c03a 	cmpne	r2,r19,zero
   478c4:	05adc83a 	sub	r22,zero,r22
   478c8:	df002785 	stb	fp,158(sp)
   478cc:	b0adc83a 	sub	r22,r22,r2
   478d0:	28017b16 	blt	r5,zero,47ec0 <___vfprintf_internal_r+0x1d2c>
   478d4:	00bfdfc4 	movi	r2,-129
   478d8:	90a4703a 	and	r18,r18,r2
   478dc:	003b8906 	br	46704 <_gp+0xfffe95bc>
   478e0:	d9003617 	ldw	r4,216(sp)
   478e4:	d9403817 	ldw	r5,224(sp)
   478e8:	da003d15 	stw	r8,244(sp)
   478ec:	004d5980 	call	4d598 <__fpclassifyd>
   478f0:	da003d17 	ldw	r8,244(sp)
   478f4:	1000f026 	beq	r2,zero,47cb8 <___vfprintf_internal_r+0x1b24>
   478f8:	d9002a17 	ldw	r4,168(sp)
   478fc:	05bff7c4 	movi	r22,-33
   47900:	00bfffc4 	movi	r2,-1
   47904:	8dac703a 	and	r22,r17,r22
   47908:	20820026 	beq	r4,r2,4810c <___vfprintf_internal_r+0x1f78>
   4790c:	008011c4 	movi	r2,71
   47910:	b081f726 	beq	r22,r2,480f0 <___vfprintf_internal_r+0x1f5c>
   47914:	d9003817 	ldw	r4,224(sp)
   47918:	90c04014 	ori	r3,r18,256
   4791c:	d8c02c15 	stw	r3,176(sp)
   47920:	20021516 	blt	r4,zero,48178 <___vfprintf_internal_r+0x1fe4>
   47924:	dcc03817 	ldw	r19,224(sp)
   47928:	d8002905 	stb	zero,164(sp)
   4792c:	00801984 	movi	r2,102
   47930:	8881f926 	beq	r17,r2,48118 <___vfprintf_internal_r+0x1f84>
   47934:	00801184 	movi	r2,70
   47938:	88821c26 	beq	r17,r2,481ac <___vfprintf_internal_r+0x2018>
   4793c:	00801144 	movi	r2,69
   47940:	b081ef26 	beq	r22,r2,48100 <___vfprintf_internal_r+0x1f6c>
   47944:	d8c02a17 	ldw	r3,168(sp)
   47948:	d8802104 	addi	r2,sp,132
   4794c:	d8800315 	stw	r2,12(sp)
   47950:	d9403617 	ldw	r5,216(sp)
   47954:	d8802504 	addi	r2,sp,148
   47958:	d9002d17 	ldw	r4,180(sp)
   4795c:	d8800215 	stw	r2,8(sp)
   47960:	d8802604 	addi	r2,sp,152
   47964:	d8c00015 	stw	r3,0(sp)
   47968:	d8800115 	stw	r2,4(sp)
   4796c:	01c00084 	movi	r7,2
   47970:	980d883a 	mov	r6,r19
   47974:	d8c03c15 	stw	r3,240(sp)
   47978:	da003d15 	stw	r8,244(sp)
   4797c:	00488c40 	call	488c4 <_dtoa_r>
   47980:	1021883a 	mov	r16,r2
   47984:	008019c4 	movi	r2,103
   47988:	d8c03c17 	ldw	r3,240(sp)
   4798c:	da003d17 	ldw	r8,244(sp)
   47990:	88817126 	beq	r17,r2,47f58 <___vfprintf_internal_r+0x1dc4>
   47994:	008011c4 	movi	r2,71
   47998:	88829126 	beq	r17,r2,483e0 <___vfprintf_internal_r+0x224c>
   4799c:	80f9883a 	add	fp,r16,r3
   479a0:	d9003617 	ldw	r4,216(sp)
   479a4:	000d883a 	mov	r6,zero
   479a8:	000f883a 	mov	r7,zero
   479ac:	980b883a 	mov	r5,r19
   479b0:	da003d15 	stw	r8,244(sp)
   479b4:	00505880 	call	50588 <__eqdf2>
   479b8:	da003d17 	ldw	r8,244(sp)
   479bc:	10018d26 	beq	r2,zero,47ff4 <___vfprintf_internal_r+0x1e60>
   479c0:	d8802117 	ldw	r2,132(sp)
   479c4:	1700062e 	bgeu	r2,fp,479e0 <___vfprintf_internal_r+0x184c>
   479c8:	01000c04 	movi	r4,48
   479cc:	10c00044 	addi	r3,r2,1
   479d0:	d8c02115 	stw	r3,132(sp)
   479d4:	11000005 	stb	r4,0(r2)
   479d8:	d8802117 	ldw	r2,132(sp)
   479dc:	173ffb36 	bltu	r2,fp,479cc <_gp+0xfffea884>
   479e0:	1405c83a 	sub	r2,r2,r16
   479e4:	d8803315 	stw	r2,204(sp)
   479e8:	008011c4 	movi	r2,71
   479ec:	b0817626 	beq	r22,r2,47fc8 <___vfprintf_internal_r+0x1e34>
   479f0:	00801944 	movi	r2,101
   479f4:	1442800e 	bge	r2,r17,483f8 <___vfprintf_internal_r+0x2264>
   479f8:	d8c02617 	ldw	r3,152(sp)
   479fc:	00801984 	movi	r2,102
   47a00:	d8c03215 	stw	r3,200(sp)
   47a04:	8881fe26 	beq	r17,r2,48200 <___vfprintf_internal_r+0x206c>
   47a08:	d8c03217 	ldw	r3,200(sp)
   47a0c:	d9003317 	ldw	r4,204(sp)
   47a10:	1901dd16 	blt	r3,r4,48188 <___vfprintf_internal_r+0x1ff4>
   47a14:	9480004c 	andi	r18,r18,1
   47a18:	90022b1e 	bne	r18,zero,482c8 <___vfprintf_internal_r+0x2134>
   47a1c:	1805883a 	mov	r2,r3
   47a20:	18028316 	blt	r3,zero,48430 <___vfprintf_internal_r+0x229c>
   47a24:	d8c03217 	ldw	r3,200(sp)
   47a28:	044019c4 	movi	r17,103
   47a2c:	d8c02b15 	stw	r3,172(sp)
   47a30:	df002907 	ldb	fp,164(sp)
   47a34:	e001531e 	bne	fp,zero,47f84 <___vfprintf_internal_r+0x1df0>
   47a38:	df002783 	ldbu	fp,158(sp)
   47a3c:	d8802915 	stw	r2,164(sp)
   47a40:	dc802c17 	ldw	r18,176(sp)
   47a44:	d8002a15 	stw	zero,168(sp)
   47a48:	003baf06 	br	46908 <_gp+0xfffe97c0>
   47a4c:	d8c02e17 	ldw	r3,184(sp)
   47a50:	d9002e17 	ldw	r4,184(sp)
   47a54:	d9402e17 	ldw	r5,184(sp)
   47a58:	18c00017 	ldw	r3,0(r3)
   47a5c:	21000117 	ldw	r4,4(r4)
   47a60:	29400204 	addi	r5,r5,8
   47a64:	d8c03615 	stw	r3,216(sp)
   47a68:	d9003815 	stw	r4,224(sp)
   47a6c:	d9402e15 	stw	r5,184(sp)
   47a70:	003b5006 	br	467b4 <_gp+0xfffe966c>
   47a74:	ac400007 	ldb	r17,0(r21)
   47a78:	003a2806 	br	4631c <_gp+0xfffe91d4>
   47a7c:	9080100c 	andi	r2,r18,64
   47a80:	1000a826 	beq	r2,zero,47d24 <___vfprintf_internal_r+0x1b90>
   47a84:	d8c02e17 	ldw	r3,184(sp)
   47a88:	002d883a 	mov	r22,zero
   47a8c:	1cc0000b 	ldhu	r19,0(r3)
   47a90:	18c00104 	addi	r3,r3,4
   47a94:	d8c02e15 	stw	r3,184(sp)
   47a98:	003caf06 	br	46d58 <_gp+0xfffe9c10>
   47a9c:	d9002e17 	ldw	r4,184(sp)
   47aa0:	d9402a17 	ldw	r5,168(sp)
   47aa4:	002d883a 	mov	r22,zero
   47aa8:	20800104 	addi	r2,r4,4
   47aac:	24c00017 	ldw	r19,0(r4)
   47ab0:	283ebb0e 	bge	r5,zero,475a0 <_gp+0xfffea458>
   47ab4:	003ef106 	br	4767c <_gp+0xfffea534>
   47ab8:	9080040c 	andi	r2,r18,16
   47abc:	1000921e 	bne	r2,zero,47d08 <___vfprintf_internal_r+0x1b74>
   47ac0:	9480100c 	andi	r18,r18,64
   47ac4:	90013926 	beq	r18,zero,47fac <___vfprintf_internal_r+0x1e18>
   47ac8:	d9402e17 	ldw	r5,184(sp)
   47acc:	d8c02f17 	ldw	r3,188(sp)
   47ad0:	28800017 	ldw	r2,0(r5)
   47ad4:	29400104 	addi	r5,r5,4
   47ad8:	d9402e15 	stw	r5,184(sp)
   47adc:	10c0000d 	sth	r3,0(r2)
   47ae0:	0039e406 	br	46274 <_gp+0xfffe912c>
   47ae4:	9080100c 	andi	r2,r18,64
   47ae8:	10008026 	beq	r2,zero,47cec <___vfprintf_internal_r+0x1b58>
   47aec:	d8802e17 	ldw	r2,184(sp)
   47af0:	14c0000f 	ldh	r19,0(r2)
   47af4:	10800104 	addi	r2,r2,4
   47af8:	d8802e15 	stw	r2,184(sp)
   47afc:	982dd7fa 	srai	r22,r19,31
   47b00:	b005883a 	mov	r2,r22
   47b04:	003af706 	br	466e4 <_gp+0xfffe959c>
   47b08:	9080100c 	andi	r2,r18,64
   47b0c:	d8002785 	stb	zero,158(sp)
   47b10:	10008a1e 	bne	r2,zero,47d3c <___vfprintf_internal_r+0x1ba8>
   47b14:	d9002e17 	ldw	r4,184(sp)
   47b18:	d9402a17 	ldw	r5,168(sp)
   47b1c:	002d883a 	mov	r22,zero
   47b20:	20800104 	addi	r2,r4,4
   47b24:	24c00017 	ldw	r19,0(r4)
   47b28:	283e4b0e 	bge	r5,zero,47458 <_gp+0xfffea310>
   47b2c:	9d86b03a 	or	r3,r19,r22
   47b30:	d8802e15 	stw	r2,184(sp)
   47b34:	183e4c1e 	bne	r3,zero,47468 <_gp+0xfffea320>
   47b38:	0039883a 	mov	fp,zero
   47b3c:	0005883a 	mov	r2,zero
   47b40:	003d4006 	br	47044 <_gp+0xfffe9efc>
   47b44:	01400174 	movhi	r5,5
   47b48:	294bc384 	addi	r5,r5,12046
   47b4c:	d9402c15 	stw	r5,176(sp)
   47b50:	d9402c17 	ldw	r5,176(sp)
   47b54:	1c47883a 	add	r3,r3,r17
   47b58:	10800044 	addi	r2,r2,1
   47b5c:	41400015 	stw	r5,0(r8)
   47b60:	44400115 	stw	r17,4(r8)
   47b64:	d8c02015 	stw	r3,128(sp)
   47b68:	d8801f15 	stw	r2,124(sp)
   47b6c:	010001c4 	movi	r4,7
   47b70:	20bec816 	blt	r4,r2,47694 <_gp+0xfffea54c>
   47b74:	42000204 	addi	r8,r8,8
   47b78:	003ecd06 	br	476b0 <_gp+0xfffea568>
   47b7c:	d9002a17 	ldw	r4,168(sp)
   47b80:	d8002785 	stb	zero,158(sp)
   47b84:	203d2d16 	blt	r4,zero,4703c <_gp+0xfffe9ef4>
   47b88:	00bfdfc4 	movi	r2,-129
   47b8c:	90a4703a 	and	r18,r18,r2
   47b90:	003a6106 	br	46518 <_gp+0xfffe93d0>
   47b94:	01000174 	movhi	r4,5
   47b98:	210bc384 	addi	r4,r4,12046
   47b9c:	d9002c15 	stw	r4,176(sp)
   47ba0:	003bea06 	br	46b4c <_gp+0xfffe9a04>
   47ba4:	d9002d17 	ldw	r4,180(sp)
   47ba8:	d9801e04 	addi	r6,sp,120
   47bac:	b80b883a 	mov	r5,r23
   47bb0:	004d9740 	call	4d974 <__sprint_r>
   47bb4:	103a7b1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47bb8:	d8c02017 	ldw	r3,128(sp)
   47bbc:	da000404 	addi	r8,sp,16
   47bc0:	003d4106 	br	470c8 <_gp+0xfffe9f80>
   47bc4:	d8801f17 	ldw	r2,124(sp)
   47bc8:	01400174 	movhi	r5,5
   47bcc:	01000044 	movi	r4,1
   47bd0:	18c00044 	addi	r3,r3,1
   47bd4:	10800044 	addi	r2,r2,1
   47bd8:	294bc304 	addi	r5,r5,12044
   47bdc:	41000115 	stw	r4,4(r8)
   47be0:	41400015 	stw	r5,0(r8)
   47be4:	d8c02015 	stw	r3,128(sp)
   47be8:	d8801f15 	stw	r2,124(sp)
   47bec:	010001c4 	movi	r4,7
   47bf0:	20805c16 	blt	r4,r2,47d64 <___vfprintf_internal_r+0x1bd0>
   47bf4:	42000204 	addi	r8,r8,8
   47bf8:	8800041e 	bne	r17,zero,47c0c <___vfprintf_internal_r+0x1a78>
   47bfc:	d8803317 	ldw	r2,204(sp)
   47c00:	1000021e 	bne	r2,zero,47c0c <___vfprintf_internal_r+0x1a78>
   47c04:	9080004c 	andi	r2,r18,1
   47c08:	103be726 	beq	r2,zero,46ba8 <_gp+0xfffe9a60>
   47c0c:	d9003717 	ldw	r4,220(sp)
   47c10:	d8801f17 	ldw	r2,124(sp)
   47c14:	d9403417 	ldw	r5,208(sp)
   47c18:	20c7883a 	add	r3,r4,r3
   47c1c:	10800044 	addi	r2,r2,1
   47c20:	41000115 	stw	r4,4(r8)
   47c24:	41400015 	stw	r5,0(r8)
   47c28:	d8c02015 	stw	r3,128(sp)
   47c2c:	d8801f15 	stw	r2,124(sp)
   47c30:	010001c4 	movi	r4,7
   47c34:	20812116 	blt	r4,r2,480bc <___vfprintf_internal_r+0x1f28>
   47c38:	42000204 	addi	r8,r8,8
   47c3c:	0463c83a 	sub	r17,zero,r17
   47c40:	0440730e 	bge	zero,r17,47e10 <___vfprintf_internal_r+0x1c7c>
   47c44:	05800404 	movi	r22,16
   47c48:	b440860e 	bge	r22,r17,47e64 <___vfprintf_internal_r+0x1cd0>
   47c4c:	01400174 	movhi	r5,5
   47c50:	294bc384 	addi	r5,r5,12046
   47c54:	d9402c15 	stw	r5,176(sp)
   47c58:	070001c4 	movi	fp,7
   47c5c:	dcc02d17 	ldw	r19,180(sp)
   47c60:	00000306 	br	47c70 <___vfprintf_internal_r+0x1adc>
   47c64:	42000204 	addi	r8,r8,8
   47c68:	8c7ffc04 	addi	r17,r17,-16
   47c6c:	b440800e 	bge	r22,r17,47e70 <___vfprintf_internal_r+0x1cdc>
   47c70:	18c00404 	addi	r3,r3,16
   47c74:	10800044 	addi	r2,r2,1
   47c78:	45000015 	stw	r20,0(r8)
   47c7c:	45800115 	stw	r22,4(r8)
   47c80:	d8c02015 	stw	r3,128(sp)
   47c84:	d8801f15 	stw	r2,124(sp)
   47c88:	e0bff60e 	bge	fp,r2,47c64 <_gp+0xfffeab1c>
   47c8c:	d9801e04 	addi	r6,sp,120
   47c90:	b80b883a 	mov	r5,r23
   47c94:	9809883a 	mov	r4,r19
   47c98:	004d9740 	call	4d974 <__sprint_r>
   47c9c:	103a411e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47ca0:	d8c02017 	ldw	r3,128(sp)
   47ca4:	d8801f17 	ldw	r2,124(sp)
   47ca8:	da000404 	addi	r8,sp,16
   47cac:	003fee06 	br	47c68 <_gp+0xfffeab20>
   47cb0:	00bfffc4 	movi	r2,-1
   47cb4:	003a3f06 	br	465b4 <_gp+0xfffe946c>
   47cb8:	008011c4 	movi	r2,71
   47cbc:	1440b816 	blt	r2,r17,47fa0 <___vfprintf_internal_r+0x1e0c>
   47cc0:	04000174 	movhi	r16,5
   47cc4:	840bb504 	addi	r16,r16,11988
   47cc8:	00c000c4 	movi	r3,3
   47ccc:	00bfdfc4 	movi	r2,-129
   47cd0:	d8c02915 	stw	r3,164(sp)
   47cd4:	90a4703a 	and	r18,r18,r2
   47cd8:	df002783 	ldbu	fp,158(sp)
   47cdc:	d8c02b15 	stw	r3,172(sp)
   47ce0:	d8002a15 	stw	zero,168(sp)
   47ce4:	d8003215 	stw	zero,200(sp)
   47ce8:	003b0706 	br	46908 <_gp+0xfffe97c0>
   47cec:	d8c02e17 	ldw	r3,184(sp)
   47cf0:	1cc00017 	ldw	r19,0(r3)
   47cf4:	18c00104 	addi	r3,r3,4
   47cf8:	d8c02e15 	stw	r3,184(sp)
   47cfc:	982dd7fa 	srai	r22,r19,31
   47d00:	b005883a 	mov	r2,r22
   47d04:	003a7706 	br	466e4 <_gp+0xfffe959c>
   47d08:	d8c02e17 	ldw	r3,184(sp)
   47d0c:	d9002f17 	ldw	r4,188(sp)
   47d10:	18800017 	ldw	r2,0(r3)
   47d14:	18c00104 	addi	r3,r3,4
   47d18:	d8c02e15 	stw	r3,184(sp)
   47d1c:	11000015 	stw	r4,0(r2)
   47d20:	00395406 	br	46274 <_gp+0xfffe912c>
   47d24:	d9002e17 	ldw	r4,184(sp)
   47d28:	002d883a 	mov	r22,zero
   47d2c:	24c00017 	ldw	r19,0(r4)
   47d30:	21000104 	addi	r4,r4,4
   47d34:	d9002e15 	stw	r4,184(sp)
   47d38:	003c0706 	br	46d58 <_gp+0xfffe9c10>
   47d3c:	d9402e17 	ldw	r5,184(sp)
   47d40:	d8c02a17 	ldw	r3,168(sp)
   47d44:	002d883a 	mov	r22,zero
   47d48:	28800104 	addi	r2,r5,4
   47d4c:	2cc0000b 	ldhu	r19,0(r5)
   47d50:	183dc10e 	bge	r3,zero,47458 <_gp+0xfffea310>
   47d54:	003f7506 	br	47b2c <_gp+0xfffea9e4>
   47d58:	04000174 	movhi	r16,5
   47d5c:	840bb304 	addi	r16,r16,11980
   47d60:	003aa706 	br	46800 <_gp+0xfffe96b8>
   47d64:	d9002d17 	ldw	r4,180(sp)
   47d68:	d9801e04 	addi	r6,sp,120
   47d6c:	b80b883a 	mov	r5,r23
   47d70:	004d9740 	call	4d974 <__sprint_r>
   47d74:	103a0b1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47d78:	dc402617 	ldw	r17,152(sp)
   47d7c:	d8c02017 	ldw	r3,128(sp)
   47d80:	da000404 	addi	r8,sp,16
   47d84:	003f9c06 	br	47bf8 <_gp+0xfffeaab0>
   47d88:	ac400043 	ldbu	r17,1(r21)
   47d8c:	84000814 	ori	r16,r16,32
   47d90:	ad400044 	addi	r21,r21,1
   47d94:	8c403fcc 	andi	r17,r17,255
   47d98:	8c40201c 	xori	r17,r17,128
   47d9c:	8c7fe004 	addi	r17,r17,-128
   47da0:	00395e06 	br	4631c <_gp+0xfffe91d4>
   47da4:	d8c02e15 	stw	r3,184(sp)
   47da8:	0039883a 	mov	fp,zero
   47dac:	003e3506 	br	47684 <_gp+0xfffea53c>
   47db0:	d9002d17 	ldw	r4,180(sp)
   47db4:	d9801e04 	addi	r6,sp,120
   47db8:	b80b883a 	mov	r5,r23
   47dbc:	004d9740 	call	4d974 <__sprint_r>
   47dc0:	1039f81e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47dc4:	d8c02017 	ldw	r3,128(sp)
   47dc8:	da000404 	addi	r8,sp,16
   47dcc:	003cd006 	br	47110 <_gp+0xfffe9fc8>
   47dd0:	8009883a 	mov	r4,r16
   47dd4:	df003d15 	stw	fp,244(sp)
   47dd8:	00460fc0 	call	460fc <strlen>
   47ddc:	d8802b15 	stw	r2,172(sp)
   47de0:	da003d17 	ldw	r8,244(sp)
   47de4:	103c200e 	bge	r2,zero,46e68 <_gp+0xfffe9d20>
   47de8:	0005883a 	mov	r2,zero
   47dec:	003c1e06 	br	46e68 <_gp+0xfffe9d20>
   47df0:	d9002d17 	ldw	r4,180(sp)
   47df4:	d9801e04 	addi	r6,sp,120
   47df8:	b80b883a 	mov	r5,r23
   47dfc:	004d9740 	call	4d974 <__sprint_r>
   47e00:	1039e81e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47e04:	d8c02017 	ldw	r3,128(sp)
   47e08:	d8801f17 	ldw	r2,124(sp)
   47e0c:	da000404 	addi	r8,sp,16
   47e10:	d9403317 	ldw	r5,204(sp)
   47e14:	10800044 	addi	r2,r2,1
   47e18:	44000015 	stw	r16,0(r8)
   47e1c:	28c7883a 	add	r3,r5,r3
   47e20:	003b5b06 	br	46b90 <_gp+0xfffe9a48>
   47e24:	01000174 	movhi	r4,5
   47e28:	210bc784 	addi	r4,r4,12062
   47e2c:	d9003515 	stw	r4,212(sp)
   47e30:	003af206 	br	469fc <_gp+0xfffe98b4>
   47e34:	013fffc4 	movi	r4,-1
   47e38:	003a0806 	br	4665c <_gp+0xfffe9514>
   47e3c:	0023883a 	mov	r17,zero
   47e40:	003d9d06 	br	474b8 <_gp+0xfffea370>
   47e44:	d9002d17 	ldw	r4,180(sp)
   47e48:	d9801e04 	addi	r6,sp,120
   47e4c:	b80b883a 	mov	r5,r23
   47e50:	004d9740 	call	4d974 <__sprint_r>
   47e54:	1039d31e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47e58:	d8c02017 	ldw	r3,128(sp)
   47e5c:	da000404 	addi	r8,sp,16
   47e60:	003d9406 	br	474b4 <_gp+0xfffea36c>
   47e64:	01000174 	movhi	r4,5
   47e68:	210bc384 	addi	r4,r4,12046
   47e6c:	d9002c15 	stw	r4,176(sp)
   47e70:	d9002c17 	ldw	r4,176(sp)
   47e74:	1c47883a 	add	r3,r3,r17
   47e78:	10800044 	addi	r2,r2,1
   47e7c:	41000015 	stw	r4,0(r8)
   47e80:	44400115 	stw	r17,4(r8)
   47e84:	d8c02015 	stw	r3,128(sp)
   47e88:	d8801f15 	stw	r2,124(sp)
   47e8c:	010001c4 	movi	r4,7
   47e90:	20bfd716 	blt	r4,r2,47df0 <_gp+0xfffeaca8>
   47e94:	42000204 	addi	r8,r8,8
   47e98:	003fdd06 	br	47e10 <_gp+0xfffeacc8>
   47e9c:	d9002d17 	ldw	r4,180(sp)
   47ea0:	d9801e04 	addi	r6,sp,120
   47ea4:	b80b883a 	mov	r5,r23
   47ea8:	004d9740 	call	4d974 <__sprint_r>
   47eac:	1039bd1e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47eb0:	d8802617 	ldw	r2,152(sp)
   47eb4:	d8c02017 	ldw	r3,128(sp)
   47eb8:	da000404 	addi	r8,sp,16
   47ebc:	003e1006 	br	47700 <_gp+0xfffea5b8>
   47ec0:	00800044 	movi	r2,1
   47ec4:	10803fcc 	andi	r2,r2,255
   47ec8:	00c00044 	movi	r3,1
   47ecc:	10fa0d26 	beq	r2,r3,46704 <_gp+0xfffe95bc>
   47ed0:	00c00084 	movi	r3,2
   47ed4:	10fbaf26 	beq	r2,r3,46d94 <_gp+0xfffe9c4c>
   47ed8:	003a6d06 	br	46890 <_gp+0xfffe9748>
   47edc:	01000174 	movhi	r4,5
   47ee0:	210bc784 	addi	r4,r4,12062
   47ee4:	d9003515 	stw	r4,212(sp)
   47ee8:	003b5406 	br	46c3c <_gp+0xfffe9af4>
   47eec:	d8802a17 	ldw	r2,168(sp)
   47ef0:	00c00184 	movi	r3,6
   47ef4:	1880012e 	bgeu	r3,r2,47efc <___vfprintf_internal_r+0x1d68>
   47ef8:	1805883a 	mov	r2,r3
   47efc:	d8802b15 	stw	r2,172(sp)
   47f00:	1000ef16 	blt	r2,zero,482c0 <___vfprintf_internal_r+0x212c>
   47f04:	04000174 	movhi	r16,5
   47f08:	d8802915 	stw	r2,164(sp)
   47f0c:	dcc02e15 	stw	r19,184(sp)
   47f10:	d8002a15 	stw	zero,168(sp)
   47f14:	d8003215 	stw	zero,200(sp)
   47f18:	840bc104 	addi	r16,r16,12036
   47f1c:	0039883a 	mov	fp,zero
   47f20:	003a8006 	br	46924 <_gp+0xfffe97dc>
   47f24:	0021883a 	mov	r16,zero
   47f28:	003e0706 	br	47748 <_gp+0xfffea600>
   47f2c:	d9002d17 	ldw	r4,180(sp)
   47f30:	d9801e04 	addi	r6,sp,120
   47f34:	b80b883a 	mov	r5,r23
   47f38:	004d9740 	call	4d974 <__sprint_r>
   47f3c:	1039991e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   47f40:	d8802617 	ldw	r2,152(sp)
   47f44:	d9403317 	ldw	r5,204(sp)
   47f48:	d8c02017 	ldw	r3,128(sp)
   47f4c:	da000404 	addi	r8,sp,16
   47f50:	2885c83a 	sub	r2,r5,r2
   47f54:	003dfb06 	br	47744 <_gp+0xfffea5fc>
   47f58:	9080004c 	andi	r2,r18,1
   47f5c:	103e8f1e 	bne	r2,zero,4799c <_gp+0xfffea854>
   47f60:	d8802117 	ldw	r2,132(sp)
   47f64:	003e9e06 	br	479e0 <_gp+0xfffea898>
   47f68:	1025883a 	mov	r18,r2
   47f6c:	0039883a 	mov	fp,zero
   47f70:	00800084 	movi	r2,2
   47f74:	003fd306 	br	47ec4 <_gp+0xfffead7c>
   47f78:	07000b44 	movi	fp,45
   47f7c:	df002785 	stb	fp,158(sp)
   47f80:	003a1b06 	br	467f0 <_gp+0xfffe96a8>
   47f84:	00c00b44 	movi	r3,45
   47f88:	d8c02785 	stb	r3,158(sp)
   47f8c:	d8802915 	stw	r2,164(sp)
   47f90:	dc802c17 	ldw	r18,176(sp)
   47f94:	d8002a15 	stw	zero,168(sp)
   47f98:	07000b44 	movi	fp,45
   47f9c:	003a5e06 	br	46918 <_gp+0xfffe97d0>
   47fa0:	04000174 	movhi	r16,5
   47fa4:	840bb604 	addi	r16,r16,11992
   47fa8:	003f4706 	br	47cc8 <_gp+0xfffeab80>
   47fac:	d9002e17 	ldw	r4,184(sp)
   47fb0:	d9402f17 	ldw	r5,188(sp)
   47fb4:	20800017 	ldw	r2,0(r4)
   47fb8:	21000104 	addi	r4,r4,4
   47fbc:	d9002e15 	stw	r4,184(sp)
   47fc0:	11400015 	stw	r5,0(r2)
   47fc4:	0038ab06 	br	46274 <_gp+0xfffe912c>
   47fc8:	dd802617 	ldw	r22,152(sp)
   47fcc:	00bfff44 	movi	r2,-3
   47fd0:	b0801c16 	blt	r22,r2,48044 <___vfprintf_internal_r+0x1eb0>
   47fd4:	d9402a17 	ldw	r5,168(sp)
   47fd8:	2d801a16 	blt	r5,r22,48044 <___vfprintf_internal_r+0x1eb0>
   47fdc:	dd803215 	stw	r22,200(sp)
   47fe0:	003e8906 	br	47a08 <_gp+0xfffea8c0>
   47fe4:	01000174 	movhi	r4,5
   47fe8:	210bc384 	addi	r4,r4,12046
   47fec:	d9002c15 	stw	r4,176(sp)
   47ff0:	003c9106 	br	47238 <_gp+0xfffea0f0>
   47ff4:	e005883a 	mov	r2,fp
   47ff8:	003e7906 	br	479e0 <_gp+0xfffea898>
   47ffc:	d9002a17 	ldw	r4,168(sp)
   48000:	df002783 	ldbu	fp,158(sp)
   48004:	dcc02e15 	stw	r19,184(sp)
   48008:	d9002915 	stw	r4,164(sp)
   4800c:	d9002b15 	stw	r4,172(sp)
   48010:	d8002a15 	stw	zero,168(sp)
   48014:	d8003215 	stw	zero,200(sp)
   48018:	003a3b06 	br	46908 <_gp+0xfffe97c0>
   4801c:	9080004c 	andi	r2,r18,1
   48020:	0039883a 	mov	fp,zero
   48024:	10000426 	beq	r2,zero,48038 <___vfprintf_internal_r+0x1ea4>
   48028:	00800c04 	movi	r2,48
   4802c:	dc001dc4 	addi	r16,sp,119
   48030:	d8801dc5 	stb	r2,119(sp)
   48034:	003b6406 	br	46dc8 <_gp+0xfffe9c80>
   48038:	d8002b15 	stw	zero,172(sp)
   4803c:	dc001e04 	addi	r16,sp,120
   48040:	003a2b06 	br	468f0 <_gp+0xfffe97a8>
   48044:	8c7fff84 	addi	r17,r17,-2
   48048:	b5bfffc4 	addi	r22,r22,-1
   4804c:	dd802615 	stw	r22,152(sp)
   48050:	dc4022c5 	stb	r17,139(sp)
   48054:	b000bf16 	blt	r22,zero,48354 <___vfprintf_internal_r+0x21c0>
   48058:	00800ac4 	movi	r2,43
   4805c:	d8802305 	stb	r2,140(sp)
   48060:	00800244 	movi	r2,9
   48064:	15807016 	blt	r2,r22,48228 <___vfprintf_internal_r+0x2094>
   48068:	00800c04 	movi	r2,48
   4806c:	b5800c04 	addi	r22,r22,48
   48070:	d8802345 	stb	r2,141(sp)
   48074:	dd802385 	stb	r22,142(sp)
   48078:	d88023c4 	addi	r2,sp,143
   4807c:	df0022c4 	addi	fp,sp,139
   48080:	d8c03317 	ldw	r3,204(sp)
   48084:	1739c83a 	sub	fp,r2,fp
   48088:	d9003317 	ldw	r4,204(sp)
   4808c:	e0c7883a 	add	r3,fp,r3
   48090:	df003a15 	stw	fp,232(sp)
   48094:	d8c02b15 	stw	r3,172(sp)
   48098:	00800044 	movi	r2,1
   4809c:	1100b30e 	bge	r2,r4,4836c <___vfprintf_internal_r+0x21d8>
   480a0:	d8c02b17 	ldw	r3,172(sp)
   480a4:	18c00044 	addi	r3,r3,1
   480a8:	d8c02b15 	stw	r3,172(sp)
   480ac:	1805883a 	mov	r2,r3
   480b0:	1800ac16 	blt	r3,zero,48364 <___vfprintf_internal_r+0x21d0>
   480b4:	d8003215 	stw	zero,200(sp)
   480b8:	003e5d06 	br	47a30 <_gp+0xfffea8e8>
   480bc:	d9002d17 	ldw	r4,180(sp)
   480c0:	d9801e04 	addi	r6,sp,120
   480c4:	b80b883a 	mov	r5,r23
   480c8:	004d9740 	call	4d974 <__sprint_r>
   480cc:	1039351e 	bne	r2,zero,465a4 <_gp+0xfffe945c>
   480d0:	dc402617 	ldw	r17,152(sp)
   480d4:	d8c02017 	ldw	r3,128(sp)
   480d8:	d8801f17 	ldw	r2,124(sp)
   480dc:	da000404 	addi	r8,sp,16
   480e0:	003ed606 	br	47c3c <_gp+0xfffeaaf4>
   480e4:	182b883a 	mov	r21,r3
   480e8:	d8002a15 	stw	zero,168(sp)
   480ec:	00388c06 	br	46320 <_gp+0xfffe91d8>
   480f0:	d8802a17 	ldw	r2,168(sp)
   480f4:	103e071e 	bne	r2,zero,47914 <_gp+0xfffea7cc>
   480f8:	dc002a15 	stw	r16,168(sp)
   480fc:	003e0506 	br	47914 <_gp+0xfffea7cc>
   48100:	d9002a17 	ldw	r4,168(sp)
   48104:	20c00044 	addi	r3,r4,1
   48108:	003e0f06 	br	47948 <_gp+0xfffea800>
   4810c:	01400184 	movi	r5,6
   48110:	d9402a15 	stw	r5,168(sp)
   48114:	003dff06 	br	47914 <_gp+0xfffea7cc>
   48118:	d8802104 	addi	r2,sp,132
   4811c:	d8800315 	stw	r2,12(sp)
   48120:	d8802504 	addi	r2,sp,148
   48124:	d8800215 	stw	r2,8(sp)
   48128:	d8802604 	addi	r2,sp,152
   4812c:	d8800115 	stw	r2,4(sp)
   48130:	d8802a17 	ldw	r2,168(sp)
   48134:	d9403617 	ldw	r5,216(sp)
   48138:	d9002d17 	ldw	r4,180(sp)
   4813c:	d8800015 	stw	r2,0(sp)
   48140:	01c000c4 	movi	r7,3
   48144:	980d883a 	mov	r6,r19
   48148:	da003d15 	stw	r8,244(sp)
   4814c:	00488c40 	call	488c4 <_dtoa_r>
   48150:	d8c02a17 	ldw	r3,168(sp)
   48154:	da003d17 	ldw	r8,244(sp)
   48158:	1021883a 	mov	r16,r2
   4815c:	10f9883a 	add	fp,r2,r3
   48160:	81000007 	ldb	r4,0(r16)
   48164:	00800c04 	movi	r2,48
   48168:	20805e26 	beq	r4,r2,482e4 <___vfprintf_internal_r+0x2150>
   4816c:	d8c02617 	ldw	r3,152(sp)
   48170:	e0f9883a 	add	fp,fp,r3
   48174:	003e0a06 	br	479a0 <_gp+0xfffea858>
   48178:	00c00b44 	movi	r3,45
   4817c:	24e0003c 	xorhi	r19,r4,32768
   48180:	d8c02905 	stb	r3,164(sp)
   48184:	003de906 	br	4792c <_gp+0xfffea7e4>
   48188:	d8c03217 	ldw	r3,200(sp)
   4818c:	00c07a0e 	bge	zero,r3,48378 <___vfprintf_internal_r+0x21e4>
   48190:	00800044 	movi	r2,1
   48194:	d9003317 	ldw	r4,204(sp)
   48198:	1105883a 	add	r2,r2,r4
   4819c:	d8802b15 	stw	r2,172(sp)
   481a0:	10004e16 	blt	r2,zero,482dc <___vfprintf_internal_r+0x2148>
   481a4:	044019c4 	movi	r17,103
   481a8:	003e2106 	br	47a30 <_gp+0xfffea8e8>
   481ac:	d9002a17 	ldw	r4,168(sp)
   481b0:	d8802104 	addi	r2,sp,132
   481b4:	d8800315 	stw	r2,12(sp)
   481b8:	d9000015 	stw	r4,0(sp)
   481bc:	d8802504 	addi	r2,sp,148
   481c0:	d9403617 	ldw	r5,216(sp)
   481c4:	d9002d17 	ldw	r4,180(sp)
   481c8:	d8800215 	stw	r2,8(sp)
   481cc:	d8802604 	addi	r2,sp,152
   481d0:	d8800115 	stw	r2,4(sp)
   481d4:	01c000c4 	movi	r7,3
   481d8:	980d883a 	mov	r6,r19
   481dc:	da003d15 	stw	r8,244(sp)
   481e0:	00488c40 	call	488c4 <_dtoa_r>
   481e4:	d8c02a17 	ldw	r3,168(sp)
   481e8:	da003d17 	ldw	r8,244(sp)
   481ec:	1021883a 	mov	r16,r2
   481f0:	00801184 	movi	r2,70
   481f4:	80f9883a 	add	fp,r16,r3
   481f8:	88bfd926 	beq	r17,r2,48160 <_gp+0xfffeb018>
   481fc:	003de806 	br	479a0 <_gp+0xfffea858>
   48200:	d9002a17 	ldw	r4,168(sp)
   48204:	00c04d0e 	bge	zero,r3,4833c <___vfprintf_internal_r+0x21a8>
   48208:	2000441e 	bne	r4,zero,4831c <___vfprintf_internal_r+0x2188>
   4820c:	9480004c 	andi	r18,r18,1
   48210:	9000421e 	bne	r18,zero,4831c <___vfprintf_internal_r+0x2188>
   48214:	1805883a 	mov	r2,r3
   48218:	18006f16 	blt	r3,zero,483d8 <___vfprintf_internal_r+0x2244>
   4821c:	d8c03217 	ldw	r3,200(sp)
   48220:	d8c02b15 	stw	r3,172(sp)
   48224:	003e0206 	br	47a30 <_gp+0xfffea8e8>
   48228:	df0022c4 	addi	fp,sp,139
   4822c:	dc002a15 	stw	r16,168(sp)
   48230:	4027883a 	mov	r19,r8
   48234:	e021883a 	mov	r16,fp
   48238:	b009883a 	mov	r4,r22
   4823c:	01400284 	movi	r5,10
   48240:	0041e100 	call	41e10 <__modsi3>
   48244:	10800c04 	addi	r2,r2,48
   48248:	843fffc4 	addi	r16,r16,-1
   4824c:	b009883a 	mov	r4,r22
   48250:	01400284 	movi	r5,10
   48254:	80800005 	stb	r2,0(r16)
   48258:	0041d8c0 	call	41d8c <__divsi3>
   4825c:	102d883a 	mov	r22,r2
   48260:	00800244 	movi	r2,9
   48264:	15bff416 	blt	r2,r22,48238 <_gp+0xfffeb0f0>
   48268:	9811883a 	mov	r8,r19
   4826c:	b0800c04 	addi	r2,r22,48
   48270:	8027883a 	mov	r19,r16
   48274:	997fffc4 	addi	r5,r19,-1
   48278:	98bfffc5 	stb	r2,-1(r19)
   4827c:	dc002a17 	ldw	r16,168(sp)
   48280:	2f006d2e 	bgeu	r5,fp,48438 <___vfprintf_internal_r+0x22a4>
   48284:	d9c02384 	addi	r7,sp,142
   48288:	3ccfc83a 	sub	r7,r7,r19
   4828c:	d9002344 	addi	r4,sp,141
   48290:	e1cf883a 	add	r7,fp,r7
   48294:	00000106 	br	4829c <___vfprintf_internal_r+0x2108>
   48298:	28800003 	ldbu	r2,0(r5)
   4829c:	20800005 	stb	r2,0(r4)
   482a0:	21000044 	addi	r4,r4,1
   482a4:	29400044 	addi	r5,r5,1
   482a8:	393ffb1e 	bne	r7,r4,48298 <_gp+0xfffeb150>
   482ac:	d8802304 	addi	r2,sp,140
   482b0:	14c5c83a 	sub	r2,r2,r19
   482b4:	d8c02344 	addi	r3,sp,141
   482b8:	1885883a 	add	r2,r3,r2
   482bc:	003f7006 	br	48080 <_gp+0xfffeaf38>
   482c0:	0005883a 	mov	r2,zero
   482c4:	003f0f06 	br	47f04 <_gp+0xfffeadbc>
   482c8:	d8c03217 	ldw	r3,200(sp)
   482cc:	18c00044 	addi	r3,r3,1
   482d0:	d8c02b15 	stw	r3,172(sp)
   482d4:	1805883a 	mov	r2,r3
   482d8:	183fb20e 	bge	r3,zero,481a4 <_gp+0xfffeb05c>
   482dc:	0005883a 	mov	r2,zero
   482e0:	003fb006 	br	481a4 <_gp+0xfffeb05c>
   482e4:	d9003617 	ldw	r4,216(sp)
   482e8:	000d883a 	mov	r6,zero
   482ec:	000f883a 	mov	r7,zero
   482f0:	980b883a 	mov	r5,r19
   482f4:	d8c03c15 	stw	r3,240(sp)
   482f8:	da003d15 	stw	r8,244(sp)
   482fc:	00505880 	call	50588 <__eqdf2>
   48300:	d8c03c17 	ldw	r3,240(sp)
   48304:	da003d17 	ldw	r8,244(sp)
   48308:	103f9826 	beq	r2,zero,4816c <_gp+0xfffeb024>
   4830c:	00800044 	movi	r2,1
   48310:	10c7c83a 	sub	r3,r2,r3
   48314:	d8c02615 	stw	r3,152(sp)
   48318:	003f9506 	br	48170 <_gp+0xfffeb028>
   4831c:	d9002a17 	ldw	r4,168(sp)
   48320:	d8c03217 	ldw	r3,200(sp)
   48324:	20800044 	addi	r2,r4,1
   48328:	1885883a 	add	r2,r3,r2
   4832c:	d8802b15 	stw	r2,172(sp)
   48330:	103dbf0e 	bge	r2,zero,47a30 <_gp+0xfffea8e8>
   48334:	0005883a 	mov	r2,zero
   48338:	003dbd06 	br	47a30 <_gp+0xfffea8e8>
   4833c:	2000201e 	bne	r4,zero,483c0 <___vfprintf_internal_r+0x222c>
   48340:	9480004c 	andi	r18,r18,1
   48344:	90001e1e 	bne	r18,zero,483c0 <___vfprintf_internal_r+0x222c>
   48348:	00800044 	movi	r2,1
   4834c:	d8802b15 	stw	r2,172(sp)
   48350:	003db706 	br	47a30 <_gp+0xfffea8e8>
   48354:	00800b44 	movi	r2,45
   48358:	05adc83a 	sub	r22,zero,r22
   4835c:	d8802305 	stb	r2,140(sp)
   48360:	003f3f06 	br	48060 <_gp+0xfffeaf18>
   48364:	0005883a 	mov	r2,zero
   48368:	003f5206 	br	480b4 <_gp+0xfffeaf6c>
   4836c:	90a4703a 	and	r18,r18,r2
   48370:	903f4e26 	beq	r18,zero,480ac <_gp+0xfffeaf64>
   48374:	003f4a06 	br	480a0 <_gp+0xfffeaf58>
   48378:	00800084 	movi	r2,2
   4837c:	10c5c83a 	sub	r2,r2,r3
   48380:	003f8406 	br	48194 <_gp+0xfffeb04c>
   48384:	d9402e17 	ldw	r5,184(sp)
   48388:	d9002e17 	ldw	r4,184(sp)
   4838c:	ac400043 	ldbu	r17,1(r21)
   48390:	29400017 	ldw	r5,0(r5)
   48394:	20800104 	addi	r2,r4,4
   48398:	d8802e15 	stw	r2,184(sp)
   4839c:	d9402a15 	stw	r5,168(sp)
   483a0:	182b883a 	mov	r21,r3
   483a4:	283e7b0e 	bge	r5,zero,47d94 <_gp+0xfffeac4c>
   483a8:	8c403fcc 	andi	r17,r17,255
   483ac:	017fffc4 	movi	r5,-1
   483b0:	8c40201c 	xori	r17,r17,128
   483b4:	d9402a15 	stw	r5,168(sp)
   483b8:	8c7fe004 	addi	r17,r17,-128
   483bc:	0037d706 	br	4631c <_gp+0xfffe91d4>
   483c0:	d8c02a17 	ldw	r3,168(sp)
   483c4:	18c00084 	addi	r3,r3,2
   483c8:	d8c02b15 	stw	r3,172(sp)
   483cc:	1805883a 	mov	r2,r3
   483d0:	183d970e 	bge	r3,zero,47a30 <_gp+0xfffea8e8>
   483d4:	003fd706 	br	48334 <_gp+0xfffeb1ec>
   483d8:	0005883a 	mov	r2,zero
   483dc:	003f8f06 	br	4821c <_gp+0xfffeb0d4>
   483e0:	9080004c 	andi	r2,r18,1
   483e4:	103f821e 	bne	r2,zero,481f0 <_gp+0xfffeb0a8>
   483e8:	d8802117 	ldw	r2,132(sp)
   483ec:	1405c83a 	sub	r2,r2,r16
   483f0:	d8803315 	stw	r2,204(sp)
   483f4:	b47ef426 	beq	r22,r17,47fc8 <_gp+0xfffeae80>
   483f8:	dd802617 	ldw	r22,152(sp)
   483fc:	003f1206 	br	48048 <_gp+0xfffeaf00>
   48400:	d8c02b03 	ldbu	r3,172(sp)
   48404:	d8c02785 	stb	r3,158(sp)
   48408:	0038df06 	br	46788 <_gp+0xfffe9640>
   4840c:	d8c02b03 	ldbu	r3,172(sp)
   48410:	d8c02785 	stb	r3,158(sp)
   48414:	0038aa06 	br	466c0 <_gp+0xfffe9578>
   48418:	d8c02b03 	ldbu	r3,172(sp)
   4841c:	d8c02785 	stb	r3,158(sp)
   48420:	003a4306 	br	46d30 <_gp+0xfffe9be8>
   48424:	d8c02b03 	ldbu	r3,172(sp)
   48428:	d8c02785 	stb	r3,158(sp)
   4842c:	003af506 	br	47004 <_gp+0xfffe9ebc>
   48430:	0005883a 	mov	r2,zero
   48434:	003d7b06 	br	47a24 <_gp+0xfffea8dc>
   48438:	d8802344 	addi	r2,sp,141
   4843c:	003f1006 	br	48080 <_gp+0xfffeaf38>
   48440:	d8c02b03 	ldbu	r3,172(sp)
   48444:	d8c02785 	stb	r3,158(sp)
   48448:	0038fd06 	br	46840 <_gp+0xfffe96f8>
   4844c:	d8c02b03 	ldbu	r3,172(sp)
   48450:	d8c02785 	stb	r3,158(sp)
   48454:	003a9706 	br	46eb4 <_gp+0xfffe9d6c>
   48458:	d8c02b03 	ldbu	r3,172(sp)
   4845c:	d8c02785 	stb	r3,158(sp)
   48460:	003a1806 	br	46cc4 <_gp+0xfffe9b7c>
   48464:	d8c02b03 	ldbu	r3,172(sp)
   48468:	d8c02785 	stb	r3,158(sp)
   4846c:	003abe06 	br	46f68 <_gp+0xfffe9e20>

00048470 <__vfprintf_internal>:
   48470:	00800174 	movhi	r2,5
   48474:	10945404 	addi	r2,r2,20816
   48478:	300f883a 	mov	r7,r6
   4847c:	280d883a 	mov	r6,r5
   48480:	200b883a 	mov	r5,r4
   48484:	11000017 	ldw	r4,0(r2)
   48488:	00461941 	jmpi	46194 <___vfprintf_internal_r>

0004848c <__sbprintf>:
   4848c:	2880030b 	ldhu	r2,12(r5)
   48490:	2ac01917 	ldw	r11,100(r5)
   48494:	2a80038b 	ldhu	r10,14(r5)
   48498:	2a400717 	ldw	r9,28(r5)
   4849c:	2a000917 	ldw	r8,36(r5)
   484a0:	defee204 	addi	sp,sp,-1144
   484a4:	00c10004 	movi	r3,1024
   484a8:	dc011a15 	stw	r16,1128(sp)
   484ac:	10bfff4c 	andi	r2,r2,65533
   484b0:	2821883a 	mov	r16,r5
   484b4:	d8cb883a 	add	r5,sp,r3
   484b8:	dc811c15 	stw	r18,1136(sp)
   484bc:	dc411b15 	stw	r17,1132(sp)
   484c0:	dfc11d15 	stw	ra,1140(sp)
   484c4:	2025883a 	mov	r18,r4
   484c8:	d881030d 	sth	r2,1036(sp)
   484cc:	dac11915 	stw	r11,1124(sp)
   484d0:	da81038d 	sth	r10,1038(sp)
   484d4:	da410715 	stw	r9,1052(sp)
   484d8:	da010915 	stw	r8,1060(sp)
   484dc:	dec10015 	stw	sp,1024(sp)
   484e0:	dec10415 	stw	sp,1040(sp)
   484e4:	d8c10215 	stw	r3,1032(sp)
   484e8:	d8c10515 	stw	r3,1044(sp)
   484ec:	d8010615 	stw	zero,1048(sp)
   484f0:	00461940 	call	46194 <___vfprintf_internal_r>
   484f4:	1023883a 	mov	r17,r2
   484f8:	10000416 	blt	r2,zero,4850c <__sbprintf+0x80>
   484fc:	d9410004 	addi	r5,sp,1024
   48500:	9009883a 	mov	r4,r18
   48504:	004a1680 	call	4a168 <_fflush_r>
   48508:	10000d1e 	bne	r2,zero,48540 <__sbprintf+0xb4>
   4850c:	d881030b 	ldhu	r2,1036(sp)
   48510:	1080100c 	andi	r2,r2,64
   48514:	10000326 	beq	r2,zero,48524 <__sbprintf+0x98>
   48518:	8080030b 	ldhu	r2,12(r16)
   4851c:	10801014 	ori	r2,r2,64
   48520:	8080030d 	sth	r2,12(r16)
   48524:	8805883a 	mov	r2,r17
   48528:	dfc11d17 	ldw	ra,1140(sp)
   4852c:	dc811c17 	ldw	r18,1136(sp)
   48530:	dc411b17 	ldw	r17,1132(sp)
   48534:	dc011a17 	ldw	r16,1128(sp)
   48538:	dec11e04 	addi	sp,sp,1144
   4853c:	f800283a 	ret
   48540:	047fffc4 	movi	r17,-1
   48544:	003ff106 	br	4850c <_gp+0xfffeb3c4>

00048548 <__swsetup_r>:
   48548:	00800174 	movhi	r2,5
   4854c:	defffd04 	addi	sp,sp,-12
   48550:	10945404 	addi	r2,r2,20816
   48554:	dc400115 	stw	r17,4(sp)
   48558:	2023883a 	mov	r17,r4
   4855c:	11000017 	ldw	r4,0(r2)
   48560:	dc000015 	stw	r16,0(sp)
   48564:	dfc00215 	stw	ra,8(sp)
   48568:	2821883a 	mov	r16,r5
   4856c:	20000226 	beq	r4,zero,48578 <__swsetup_r+0x30>
   48570:	20800e17 	ldw	r2,56(r4)
   48574:	10003126 	beq	r2,zero,4863c <__swsetup_r+0xf4>
   48578:	8080030b 	ldhu	r2,12(r16)
   4857c:	10c0020c 	andi	r3,r2,8
   48580:	1009883a 	mov	r4,r2
   48584:	18000f26 	beq	r3,zero,485c4 <__swsetup_r+0x7c>
   48588:	80c00417 	ldw	r3,16(r16)
   4858c:	18001526 	beq	r3,zero,485e4 <__swsetup_r+0x9c>
   48590:	1100004c 	andi	r4,r2,1
   48594:	20001c1e 	bne	r4,zero,48608 <__swsetup_r+0xc0>
   48598:	1080008c 	andi	r2,r2,2
   4859c:	1000291e 	bne	r2,zero,48644 <__swsetup_r+0xfc>
   485a0:	80800517 	ldw	r2,20(r16)
   485a4:	80800215 	stw	r2,8(r16)
   485a8:	18001c26 	beq	r3,zero,4861c <__swsetup_r+0xd4>
   485ac:	0005883a 	mov	r2,zero
   485b0:	dfc00217 	ldw	ra,8(sp)
   485b4:	dc400117 	ldw	r17,4(sp)
   485b8:	dc000017 	ldw	r16,0(sp)
   485bc:	dec00304 	addi	sp,sp,12
   485c0:	f800283a 	ret
   485c4:	2080040c 	andi	r2,r4,16
   485c8:	10002e26 	beq	r2,zero,48684 <__swsetup_r+0x13c>
   485cc:	2080010c 	andi	r2,r4,4
   485d0:	10001e1e 	bne	r2,zero,4864c <__swsetup_r+0x104>
   485d4:	80c00417 	ldw	r3,16(r16)
   485d8:	20800214 	ori	r2,r4,8
   485dc:	8080030d 	sth	r2,12(r16)
   485e0:	183feb1e 	bne	r3,zero,48590 <_gp+0xfffeb448>
   485e4:	1100a00c 	andi	r4,r2,640
   485e8:	01408004 	movi	r5,512
   485ec:	217fe826 	beq	r4,r5,48590 <_gp+0xfffeb448>
   485f0:	800b883a 	mov	r5,r16
   485f4:	8809883a 	mov	r4,r17
   485f8:	004b1040 	call	4b104 <__smakebuf_r>
   485fc:	8080030b 	ldhu	r2,12(r16)
   48600:	80c00417 	ldw	r3,16(r16)
   48604:	003fe206 	br	48590 <_gp+0xfffeb448>
   48608:	80800517 	ldw	r2,20(r16)
   4860c:	80000215 	stw	zero,8(r16)
   48610:	0085c83a 	sub	r2,zero,r2
   48614:	80800615 	stw	r2,24(r16)
   48618:	183fe41e 	bne	r3,zero,485ac <_gp+0xfffeb464>
   4861c:	80c0030b 	ldhu	r3,12(r16)
   48620:	0005883a 	mov	r2,zero
   48624:	1900200c 	andi	r4,r3,128
   48628:	203fe126 	beq	r4,zero,485b0 <_gp+0xfffeb468>
   4862c:	18c01014 	ori	r3,r3,64
   48630:	80c0030d 	sth	r3,12(r16)
   48634:	00bfffc4 	movi	r2,-1
   48638:	003fdd06 	br	485b0 <_gp+0xfffeb468>
   4863c:	004a5540 	call	4a554 <__sinit>
   48640:	003fcd06 	br	48578 <_gp+0xfffeb430>
   48644:	0005883a 	mov	r2,zero
   48648:	003fd606 	br	485a4 <_gp+0xfffeb45c>
   4864c:	81400c17 	ldw	r5,48(r16)
   48650:	28000626 	beq	r5,zero,4866c <__swsetup_r+0x124>
   48654:	80801004 	addi	r2,r16,64
   48658:	28800326 	beq	r5,r2,48668 <__swsetup_r+0x120>
   4865c:	8809883a 	mov	r4,r17
   48660:	004a6c80 	call	4a6c8 <_free_r>
   48664:	8100030b 	ldhu	r4,12(r16)
   48668:	80000c15 	stw	zero,48(r16)
   4866c:	80c00417 	ldw	r3,16(r16)
   48670:	00bff6c4 	movi	r2,-37
   48674:	1108703a 	and	r4,r2,r4
   48678:	80000115 	stw	zero,4(r16)
   4867c:	80c00015 	stw	r3,0(r16)
   48680:	003fd506 	br	485d8 <_gp+0xfffeb490>
   48684:	00800244 	movi	r2,9
   48688:	88800015 	stw	r2,0(r17)
   4868c:	20801014 	ori	r2,r4,64
   48690:	8080030d 	sth	r2,12(r16)
   48694:	00bfffc4 	movi	r2,-1
   48698:	003fc506 	br	485b0 <_gp+0xfffeb468>

0004869c <quorem>:
   4869c:	defff204 	addi	sp,sp,-56
   486a0:	ddc00b15 	stw	r23,44(sp)
   486a4:	20800417 	ldw	r2,16(r4)
   486a8:	2dc00417 	ldw	r23,16(r5)
   486ac:	dfc00d15 	stw	ra,52(sp)
   486b0:	df000c15 	stw	fp,48(sp)
   486b4:	dd800a15 	stw	r22,40(sp)
   486b8:	dd400915 	stw	r21,36(sp)
   486bc:	dd000815 	stw	r20,32(sp)
   486c0:	dcc00715 	stw	r19,28(sp)
   486c4:	dc800615 	stw	r18,24(sp)
   486c8:	dc400515 	stw	r17,20(sp)
   486cc:	dc000415 	stw	r16,16(sp)
   486d0:	15c07a16 	blt	r2,r23,488bc <quorem+0x220>
   486d4:	bdffffc4 	addi	r23,r23,-1
   486d8:	bde9883a 	add	r20,r23,r23
   486dc:	28c00504 	addi	r3,r5,20
   486e0:	a529883a 	add	r20,r20,r20
   486e4:	1d39883a 	add	fp,r3,r20
   486e8:	24c00504 	addi	r19,r4,20
   486ec:	d9400215 	stw	r5,8(sp)
   486f0:	9d29883a 	add	r20,r19,r20
   486f4:	e1400017 	ldw	r5,0(fp)
   486f8:	d9000015 	stw	r4,0(sp)
   486fc:	a1000017 	ldw	r4,0(r20)
   48700:	29400044 	addi	r5,r5,1
   48704:	d8c00115 	stw	r3,4(sp)
   48708:	dd000315 	stw	r20,12(sp)
   4870c:	0041e840 	call	41e84 <__udivsi3>
   48710:	1025883a 	mov	r18,r2
   48714:	10003026 	beq	r2,zero,487d8 <quorem+0x13c>
   48718:	dc400117 	ldw	r17,4(sp)
   4871c:	9829883a 	mov	r20,r19
   48720:	002d883a 	mov	r22,zero
   48724:	0021883a 	mov	r16,zero
   48728:	8d400017 	ldw	r21,0(r17)
   4872c:	900b883a 	mov	r5,r18
   48730:	8c400104 	addi	r17,r17,4
   48734:	a93fffcc 	andi	r4,r21,65535
   48738:	0041f400 	call	41f40 <__mulsi3>
   4873c:	a808d43a 	srli	r4,r21,16
   48740:	900b883a 	mov	r5,r18
   48744:	15ad883a 	add	r22,r2,r22
   48748:	0041f400 	call	41f40 <__mulsi3>
   4874c:	a1000017 	ldw	r4,0(r20)
   48750:	b00cd43a 	srli	r6,r22,16
   48754:	b0ffffcc 	andi	r3,r22,65535
   48758:	217fffcc 	andi	r5,r4,65535
   4875c:	2c21883a 	add	r16,r5,r16
   48760:	80c7c83a 	sub	r3,r16,r3
   48764:	2008d43a 	srli	r4,r4,16
   48768:	1185883a 	add	r2,r2,r6
   4876c:	1821d43a 	srai	r16,r3,16
   48770:	117fffcc 	andi	r5,r2,65535
   48774:	2149c83a 	sub	r4,r4,r5
   48778:	2421883a 	add	r16,r4,r16
   4877c:	8008943a 	slli	r4,r16,16
   48780:	18ffffcc 	andi	r3,r3,65535
   48784:	102cd43a 	srli	r22,r2,16
   48788:	20c8b03a 	or	r4,r4,r3
   4878c:	a1000015 	stw	r4,0(r20)
   48790:	8021d43a 	srai	r16,r16,16
   48794:	a5000104 	addi	r20,r20,4
   48798:	e47fe32e 	bgeu	fp,r17,48728 <_gp+0xfffeb5e0>
   4879c:	d8c00317 	ldw	r3,12(sp)
   487a0:	18800017 	ldw	r2,0(r3)
   487a4:	10000c1e 	bne	r2,zero,487d8 <quorem+0x13c>
   487a8:	18bfff04 	addi	r2,r3,-4
   487ac:	9880082e 	bgeu	r19,r2,487d0 <quorem+0x134>
   487b0:	18ffff17 	ldw	r3,-4(r3)
   487b4:	18000326 	beq	r3,zero,487c4 <quorem+0x128>
   487b8:	00000506 	br	487d0 <quorem+0x134>
   487bc:	10c00017 	ldw	r3,0(r2)
   487c0:	1800031e 	bne	r3,zero,487d0 <quorem+0x134>
   487c4:	10bfff04 	addi	r2,r2,-4
   487c8:	bdffffc4 	addi	r23,r23,-1
   487cc:	98bffb36 	bltu	r19,r2,487bc <_gp+0xfffeb674>
   487d0:	d8c00017 	ldw	r3,0(sp)
   487d4:	1dc00415 	stw	r23,16(r3)
   487d8:	d9400217 	ldw	r5,8(sp)
   487dc:	d9000017 	ldw	r4,0(sp)
   487e0:	004c9000 	call	4c900 <__mcmp>
   487e4:	10002816 	blt	r2,zero,48888 <quorem+0x1ec>
   487e8:	dc400117 	ldw	r17,4(sp)
   487ec:	94800044 	addi	r18,r18,1
   487f0:	980d883a 	mov	r6,r19
   487f4:	0007883a 	mov	r3,zero
   487f8:	31000017 	ldw	r4,0(r6)
   487fc:	89400017 	ldw	r5,0(r17)
   48800:	31800104 	addi	r6,r6,4
   48804:	20bfffcc 	andi	r2,r4,65535
   48808:	10c7883a 	add	r3,r2,r3
   4880c:	28bfffcc 	andi	r2,r5,65535
   48810:	1885c83a 	sub	r2,r3,r2
   48814:	280ad43a 	srli	r5,r5,16
   48818:	2008d43a 	srli	r4,r4,16
   4881c:	1007d43a 	srai	r3,r2,16
   48820:	10bfffcc 	andi	r2,r2,65535
   48824:	2149c83a 	sub	r4,r4,r5
   48828:	20c9883a 	add	r4,r4,r3
   4882c:	200a943a 	slli	r5,r4,16
   48830:	8c400104 	addi	r17,r17,4
   48834:	2007d43a 	srai	r3,r4,16
   48838:	2884b03a 	or	r2,r5,r2
   4883c:	30bfff15 	stw	r2,-4(r6)
   48840:	e47fed2e 	bgeu	fp,r17,487f8 <_gp+0xfffeb6b0>
   48844:	bdc5883a 	add	r2,r23,r23
   48848:	1085883a 	add	r2,r2,r2
   4884c:	9887883a 	add	r3,r19,r2
   48850:	18800017 	ldw	r2,0(r3)
   48854:	10000c1e 	bne	r2,zero,48888 <quorem+0x1ec>
   48858:	18bfff04 	addi	r2,r3,-4
   4885c:	9880082e 	bgeu	r19,r2,48880 <quorem+0x1e4>
   48860:	18ffff17 	ldw	r3,-4(r3)
   48864:	18000326 	beq	r3,zero,48874 <quorem+0x1d8>
   48868:	00000506 	br	48880 <quorem+0x1e4>
   4886c:	10c00017 	ldw	r3,0(r2)
   48870:	1800031e 	bne	r3,zero,48880 <quorem+0x1e4>
   48874:	10bfff04 	addi	r2,r2,-4
   48878:	bdffffc4 	addi	r23,r23,-1
   4887c:	98bffb36 	bltu	r19,r2,4886c <_gp+0xfffeb724>
   48880:	d8c00017 	ldw	r3,0(sp)
   48884:	1dc00415 	stw	r23,16(r3)
   48888:	9005883a 	mov	r2,r18
   4888c:	dfc00d17 	ldw	ra,52(sp)
   48890:	df000c17 	ldw	fp,48(sp)
   48894:	ddc00b17 	ldw	r23,44(sp)
   48898:	dd800a17 	ldw	r22,40(sp)
   4889c:	dd400917 	ldw	r21,36(sp)
   488a0:	dd000817 	ldw	r20,32(sp)
   488a4:	dcc00717 	ldw	r19,28(sp)
   488a8:	dc800617 	ldw	r18,24(sp)
   488ac:	dc400517 	ldw	r17,20(sp)
   488b0:	dc000417 	ldw	r16,16(sp)
   488b4:	dec00e04 	addi	sp,sp,56
   488b8:	f800283a 	ret
   488bc:	0005883a 	mov	r2,zero
   488c0:	003ff206 	br	4888c <_gp+0xfffeb744>

000488c4 <_dtoa_r>:
   488c4:	20801017 	ldw	r2,64(r4)
   488c8:	deffde04 	addi	sp,sp,-136
   488cc:	df002015 	stw	fp,128(sp)
   488d0:	dcc01b15 	stw	r19,108(sp)
   488d4:	dc801a15 	stw	r18,104(sp)
   488d8:	dc401915 	stw	r17,100(sp)
   488dc:	dc001815 	stw	r16,96(sp)
   488e0:	dfc02115 	stw	ra,132(sp)
   488e4:	ddc01f15 	stw	r23,124(sp)
   488e8:	dd801e15 	stw	r22,120(sp)
   488ec:	dd401d15 	stw	r21,116(sp)
   488f0:	dd001c15 	stw	r20,112(sp)
   488f4:	d9c00315 	stw	r7,12(sp)
   488f8:	2039883a 	mov	fp,r4
   488fc:	3023883a 	mov	r17,r6
   48900:	2825883a 	mov	r18,r5
   48904:	dc002417 	ldw	r16,144(sp)
   48908:	3027883a 	mov	r19,r6
   4890c:	10000826 	beq	r2,zero,48930 <_dtoa_r+0x6c>
   48910:	21801117 	ldw	r6,68(r4)
   48914:	00c00044 	movi	r3,1
   48918:	100b883a 	mov	r5,r2
   4891c:	1986983a 	sll	r3,r3,r6
   48920:	11800115 	stw	r6,4(r2)
   48924:	10c00215 	stw	r3,8(r2)
   48928:	004c0240 	call	4c024 <_Bfree>
   4892c:	e0001015 	stw	zero,64(fp)
   48930:	88002e16 	blt	r17,zero,489ec <_dtoa_r+0x128>
   48934:	80000015 	stw	zero,0(r16)
   48938:	889ffc2c 	andhi	r2,r17,32752
   4893c:	00dffc34 	movhi	r3,32752
   48940:	10c01c26 	beq	r2,r3,489b4 <_dtoa_r+0xf0>
   48944:	000d883a 	mov	r6,zero
   48948:	000f883a 	mov	r7,zero
   4894c:	9009883a 	mov	r4,r18
   48950:	980b883a 	mov	r5,r19
   48954:	00505880 	call	50588 <__eqdf2>
   48958:	10002b1e 	bne	r2,zero,48a08 <_dtoa_r+0x144>
   4895c:	d9c02317 	ldw	r7,140(sp)
   48960:	00800044 	movi	r2,1
   48964:	38800015 	stw	r2,0(r7)
   48968:	d8802517 	ldw	r2,148(sp)
   4896c:	10019e26 	beq	r2,zero,48fe8 <_dtoa_r+0x724>
   48970:	d8c02517 	ldw	r3,148(sp)
   48974:	00800174 	movhi	r2,5
   48978:	108bc344 	addi	r2,r2,12045
   4897c:	18800015 	stw	r2,0(r3)
   48980:	10bfffc4 	addi	r2,r2,-1
   48984:	dfc02117 	ldw	ra,132(sp)
   48988:	df002017 	ldw	fp,128(sp)
   4898c:	ddc01f17 	ldw	r23,124(sp)
   48990:	dd801e17 	ldw	r22,120(sp)
   48994:	dd401d17 	ldw	r21,116(sp)
   48998:	dd001c17 	ldw	r20,112(sp)
   4899c:	dcc01b17 	ldw	r19,108(sp)
   489a0:	dc801a17 	ldw	r18,104(sp)
   489a4:	dc401917 	ldw	r17,100(sp)
   489a8:	dc001817 	ldw	r16,96(sp)
   489ac:	dec02204 	addi	sp,sp,136
   489b0:	f800283a 	ret
   489b4:	d8c02317 	ldw	r3,140(sp)
   489b8:	0089c3c4 	movi	r2,9999
   489bc:	18800015 	stw	r2,0(r3)
   489c0:	90017726 	beq	r18,zero,48fa0 <_dtoa_r+0x6dc>
   489c4:	00800174 	movhi	r2,5
   489c8:	108bcf04 	addi	r2,r2,12092
   489cc:	d9002517 	ldw	r4,148(sp)
   489d0:	203fec26 	beq	r4,zero,48984 <_gp+0xfffeb83c>
   489d4:	10c000c7 	ldb	r3,3(r2)
   489d8:	1801781e 	bne	r3,zero,48fbc <_dtoa_r+0x6f8>
   489dc:	10c000c4 	addi	r3,r2,3
   489e0:	d9802517 	ldw	r6,148(sp)
   489e4:	30c00015 	stw	r3,0(r6)
   489e8:	003fe606 	br	48984 <_gp+0xfffeb83c>
   489ec:	04e00034 	movhi	r19,32768
   489f0:	9cffffc4 	addi	r19,r19,-1
   489f4:	00800044 	movi	r2,1
   489f8:	8ce6703a 	and	r19,r17,r19
   489fc:	80800015 	stw	r2,0(r16)
   48a00:	9823883a 	mov	r17,r19
   48a04:	003fcc06 	br	48938 <_gp+0xfffeb7f0>
   48a08:	d8800204 	addi	r2,sp,8
   48a0c:	d8800015 	stw	r2,0(sp)
   48a10:	d9c00104 	addi	r7,sp,4
   48a14:	900b883a 	mov	r5,r18
   48a18:	980d883a 	mov	r6,r19
   48a1c:	e009883a 	mov	r4,fp
   48a20:	8820d53a 	srli	r16,r17,20
   48a24:	004cccc0 	call	4cccc <__d2b>
   48a28:	d8800915 	stw	r2,36(sp)
   48a2c:	8001651e 	bne	r16,zero,48fc4 <_dtoa_r+0x700>
   48a30:	dd800217 	ldw	r22,8(sp)
   48a34:	dc000117 	ldw	r16,4(sp)
   48a38:	00800804 	movi	r2,32
   48a3c:	b421883a 	add	r16,r22,r16
   48a40:	80c10c84 	addi	r3,r16,1074
   48a44:	10c2d10e 	bge	r2,r3,4958c <_dtoa_r+0xcc8>
   48a48:	00801004 	movi	r2,64
   48a4c:	81010484 	addi	r4,r16,1042
   48a50:	10c7c83a 	sub	r3,r2,r3
   48a54:	9108d83a 	srl	r4,r18,r4
   48a58:	88e2983a 	sll	r17,r17,r3
   48a5c:	2448b03a 	or	r4,r4,r17
   48a60:	00506100 	call	50610 <__floatunsidf>
   48a64:	017f8434 	movhi	r5,65040
   48a68:	01800044 	movi	r6,1
   48a6c:	1009883a 	mov	r4,r2
   48a70:	194b883a 	add	r5,r3,r5
   48a74:	843fffc4 	addi	r16,r16,-1
   48a78:	d9801115 	stw	r6,68(sp)
   48a7c:	000d883a 	mov	r6,zero
   48a80:	01cffe34 	movhi	r7,16376
   48a84:	00451cc0 	call	451cc <__subdf3>
   48a88:	0198dbf4 	movhi	r6,25455
   48a8c:	01cff4f4 	movhi	r7,16339
   48a90:	3190d844 	addi	r6,r6,17249
   48a94:	39e1e9c4 	addi	r7,r7,-30809
   48a98:	1009883a 	mov	r4,r2
   48a9c:	180b883a 	mov	r5,r3
   48aa0:	00449600 	call	44960 <__muldf3>
   48aa4:	01a2d874 	movhi	r6,35681
   48aa8:	01cff1f4 	movhi	r7,16327
   48aac:	31b22cc4 	addi	r6,r6,-14157
   48ab0:	39e28a04 	addi	r7,r7,-30168
   48ab4:	180b883a 	mov	r5,r3
   48ab8:	1009883a 	mov	r4,r2
   48abc:	00435140 	call	43514 <__adddf3>
   48ac0:	8009883a 	mov	r4,r16
   48ac4:	1029883a 	mov	r20,r2
   48ac8:	1823883a 	mov	r17,r3
   48acc:	0045b480 	call	45b48 <__floatsidf>
   48ad0:	019427f4 	movhi	r6,20639
   48ad4:	01cff4f4 	movhi	r7,16339
   48ad8:	319e7ec4 	addi	r6,r6,31227
   48adc:	39d104c4 	addi	r7,r7,17427
   48ae0:	1009883a 	mov	r4,r2
   48ae4:	180b883a 	mov	r5,r3
   48ae8:	00449600 	call	44960 <__muldf3>
   48aec:	100d883a 	mov	r6,r2
   48af0:	180f883a 	mov	r7,r3
   48af4:	a009883a 	mov	r4,r20
   48af8:	880b883a 	mov	r5,r17
   48afc:	00435140 	call	43514 <__adddf3>
   48b00:	1009883a 	mov	r4,r2
   48b04:	180b883a 	mov	r5,r3
   48b08:	1029883a 	mov	r20,r2
   48b0c:	1823883a 	mov	r17,r3
   48b10:	0045ac80 	call	45ac8 <__fixdfsi>
   48b14:	000d883a 	mov	r6,zero
   48b18:	000f883a 	mov	r7,zero
   48b1c:	a009883a 	mov	r4,r20
   48b20:	880b883a 	mov	r5,r17
   48b24:	d8800515 	stw	r2,20(sp)
   48b28:	004486c0 	call	4486c <__ledf2>
   48b2c:	10028716 	blt	r2,zero,4954c <_dtoa_r+0xc88>
   48b30:	d8c00517 	ldw	r3,20(sp)
   48b34:	00800584 	movi	r2,22
   48b38:	10c27536 	bltu	r2,r3,49510 <_dtoa_r+0xc4c>
   48b3c:	180490fa 	slli	r2,r3,3
   48b40:	00c00174 	movhi	r3,5
   48b44:	18cbeb04 	addi	r3,r3,12204
   48b48:	1885883a 	add	r2,r3,r2
   48b4c:	11000017 	ldw	r4,0(r2)
   48b50:	11400117 	ldw	r5,4(r2)
   48b54:	900d883a 	mov	r6,r18
   48b58:	980f883a 	mov	r7,r19
   48b5c:	00447900 	call	44790 <__gedf2>
   48b60:	00828d0e 	bge	zero,r2,49598 <_dtoa_r+0xcd4>
   48b64:	d9000517 	ldw	r4,20(sp)
   48b68:	d8000e15 	stw	zero,56(sp)
   48b6c:	213fffc4 	addi	r4,r4,-1
   48b70:	d9000515 	stw	r4,20(sp)
   48b74:	b42dc83a 	sub	r22,r22,r16
   48b78:	b5bfffc4 	addi	r22,r22,-1
   48b7c:	b0026f16 	blt	r22,zero,4953c <_dtoa_r+0xc78>
   48b80:	d8000815 	stw	zero,32(sp)
   48b84:	d9c00517 	ldw	r7,20(sp)
   48b88:	38026416 	blt	r7,zero,4951c <_dtoa_r+0xc58>
   48b8c:	b1ed883a 	add	r22,r22,r7
   48b90:	d9c00d15 	stw	r7,52(sp)
   48b94:	d8000a15 	stw	zero,40(sp)
   48b98:	d9800317 	ldw	r6,12(sp)
   48b9c:	00800244 	movi	r2,9
   48ba0:	11811436 	bltu	r2,r6,48ff4 <_dtoa_r+0x730>
   48ba4:	00800144 	movi	r2,5
   48ba8:	1184e10e 	bge	r2,r6,49f30 <_dtoa_r+0x166c>
   48bac:	31bfff04 	addi	r6,r6,-4
   48bb0:	d9800315 	stw	r6,12(sp)
   48bb4:	0023883a 	mov	r17,zero
   48bb8:	d9800317 	ldw	r6,12(sp)
   48bbc:	008000c4 	movi	r2,3
   48bc0:	30836726 	beq	r6,r2,49960 <_dtoa_r+0x109c>
   48bc4:	1183410e 	bge	r2,r6,498cc <_dtoa_r+0x1008>
   48bc8:	d9c00317 	ldw	r7,12(sp)
   48bcc:	00800104 	movi	r2,4
   48bd0:	38827c26 	beq	r7,r2,495c4 <_dtoa_r+0xd00>
   48bd4:	00800144 	movi	r2,5
   48bd8:	3884c41e 	bne	r7,r2,49eec <_dtoa_r+0x1628>
   48bdc:	00800044 	movi	r2,1
   48be0:	d8800b15 	stw	r2,44(sp)
   48be4:	d8c00517 	ldw	r3,20(sp)
   48be8:	d9002217 	ldw	r4,136(sp)
   48bec:	1907883a 	add	r3,r3,r4
   48bf0:	19800044 	addi	r6,r3,1
   48bf4:	d8c00c15 	stw	r3,48(sp)
   48bf8:	d9800615 	stw	r6,24(sp)
   48bfc:	0183a40e 	bge	zero,r6,49a90 <_dtoa_r+0x11cc>
   48c00:	d9800617 	ldw	r6,24(sp)
   48c04:	3021883a 	mov	r16,r6
   48c08:	e0001115 	stw	zero,68(fp)
   48c0c:	008005c4 	movi	r2,23
   48c10:	1184c92e 	bgeu	r2,r6,49f38 <_dtoa_r+0x1674>
   48c14:	00c00044 	movi	r3,1
   48c18:	00800104 	movi	r2,4
   48c1c:	1085883a 	add	r2,r2,r2
   48c20:	11000504 	addi	r4,r2,20
   48c24:	180b883a 	mov	r5,r3
   48c28:	18c00044 	addi	r3,r3,1
   48c2c:	313ffb2e 	bgeu	r6,r4,48c1c <_gp+0xfffebad4>
   48c30:	e1401115 	stw	r5,68(fp)
   48c34:	e009883a 	mov	r4,fp
   48c38:	004bf7c0 	call	4bf7c <_Balloc>
   48c3c:	d8800715 	stw	r2,28(sp)
   48c40:	e0801015 	stw	r2,64(fp)
   48c44:	00800384 	movi	r2,14
   48c48:	1400f736 	bltu	r2,r16,49028 <_dtoa_r+0x764>
   48c4c:	8800f626 	beq	r17,zero,49028 <_dtoa_r+0x764>
   48c50:	d9c00517 	ldw	r7,20(sp)
   48c54:	01c39a0e 	bge	zero,r7,49ac0 <_dtoa_r+0x11fc>
   48c58:	388003cc 	andi	r2,r7,15
   48c5c:	100490fa 	slli	r2,r2,3
   48c60:	382bd13a 	srai	r21,r7,4
   48c64:	00c00174 	movhi	r3,5
   48c68:	18cbeb04 	addi	r3,r3,12204
   48c6c:	1885883a 	add	r2,r3,r2
   48c70:	a8c0040c 	andi	r3,r21,16
   48c74:	12400017 	ldw	r9,0(r2)
   48c78:	12000117 	ldw	r8,4(r2)
   48c7c:	18037926 	beq	r3,zero,49a64 <_dtoa_r+0x11a0>
   48c80:	00800174 	movhi	r2,5
   48c84:	108be104 	addi	r2,r2,12164
   48c88:	11800817 	ldw	r6,32(r2)
   48c8c:	11c00917 	ldw	r7,36(r2)
   48c90:	9009883a 	mov	r4,r18
   48c94:	980b883a 	mov	r5,r19
   48c98:	da001715 	stw	r8,92(sp)
   48c9c:	da401615 	stw	r9,88(sp)
   48ca0:	0043dc00 	call	43dc0 <__divdf3>
   48ca4:	da001717 	ldw	r8,92(sp)
   48ca8:	da401617 	ldw	r9,88(sp)
   48cac:	ad4003cc 	andi	r21,r21,15
   48cb0:	040000c4 	movi	r16,3
   48cb4:	1023883a 	mov	r17,r2
   48cb8:	1829883a 	mov	r20,r3
   48cbc:	a8001126 	beq	r21,zero,48d04 <_dtoa_r+0x440>
   48cc0:	05c00174 	movhi	r23,5
   48cc4:	bdcbe104 	addi	r23,r23,12164
   48cc8:	4805883a 	mov	r2,r9
   48ccc:	4007883a 	mov	r3,r8
   48cd0:	a980004c 	andi	r6,r21,1
   48cd4:	1009883a 	mov	r4,r2
   48cd8:	a82bd07a 	srai	r21,r21,1
   48cdc:	180b883a 	mov	r5,r3
   48ce0:	30000426 	beq	r6,zero,48cf4 <_dtoa_r+0x430>
   48ce4:	b9800017 	ldw	r6,0(r23)
   48ce8:	b9c00117 	ldw	r7,4(r23)
   48cec:	84000044 	addi	r16,r16,1
   48cf0:	00449600 	call	44960 <__muldf3>
   48cf4:	bdc00204 	addi	r23,r23,8
   48cf8:	a83ff51e 	bne	r21,zero,48cd0 <_gp+0xfffebb88>
   48cfc:	1013883a 	mov	r9,r2
   48d00:	1811883a 	mov	r8,r3
   48d04:	480d883a 	mov	r6,r9
   48d08:	400f883a 	mov	r7,r8
   48d0c:	8809883a 	mov	r4,r17
   48d10:	a00b883a 	mov	r5,r20
   48d14:	0043dc00 	call	43dc0 <__divdf3>
   48d18:	d8800f15 	stw	r2,60(sp)
   48d1c:	d8c01015 	stw	r3,64(sp)
   48d20:	d8c00e17 	ldw	r3,56(sp)
   48d24:	18000626 	beq	r3,zero,48d40 <_dtoa_r+0x47c>
   48d28:	d9000f17 	ldw	r4,60(sp)
   48d2c:	d9401017 	ldw	r5,64(sp)
   48d30:	000d883a 	mov	r6,zero
   48d34:	01cffc34 	movhi	r7,16368
   48d38:	004486c0 	call	4486c <__ledf2>
   48d3c:	10040b16 	blt	r2,zero,49d6c <_dtoa_r+0x14a8>
   48d40:	8009883a 	mov	r4,r16
   48d44:	0045b480 	call	45b48 <__floatsidf>
   48d48:	d9800f17 	ldw	r6,60(sp)
   48d4c:	d9c01017 	ldw	r7,64(sp)
   48d50:	1009883a 	mov	r4,r2
   48d54:	180b883a 	mov	r5,r3
   48d58:	00449600 	call	44960 <__muldf3>
   48d5c:	000d883a 	mov	r6,zero
   48d60:	01d00734 	movhi	r7,16412
   48d64:	1009883a 	mov	r4,r2
   48d68:	180b883a 	mov	r5,r3
   48d6c:	00435140 	call	43514 <__adddf3>
   48d70:	1021883a 	mov	r16,r2
   48d74:	d8800617 	ldw	r2,24(sp)
   48d78:	047f3034 	movhi	r17,64704
   48d7c:	1c63883a 	add	r17,r3,r17
   48d80:	10031826 	beq	r2,zero,499e4 <_dtoa_r+0x1120>
   48d84:	d8c00517 	ldw	r3,20(sp)
   48d88:	db000617 	ldw	r12,24(sp)
   48d8c:	d8c01315 	stw	r3,76(sp)
   48d90:	d9000b17 	ldw	r4,44(sp)
   48d94:	20038f26 	beq	r4,zero,49bd4 <_dtoa_r+0x1310>
   48d98:	60bfffc4 	addi	r2,r12,-1
   48d9c:	100490fa 	slli	r2,r2,3
   48da0:	00c00174 	movhi	r3,5
   48da4:	18cbeb04 	addi	r3,r3,12204
   48da8:	1885883a 	add	r2,r3,r2
   48dac:	11800017 	ldw	r6,0(r2)
   48db0:	11c00117 	ldw	r7,4(r2)
   48db4:	d8800717 	ldw	r2,28(sp)
   48db8:	0009883a 	mov	r4,zero
   48dbc:	014ff834 	movhi	r5,16352
   48dc0:	db001615 	stw	r12,88(sp)
   48dc4:	15c00044 	addi	r23,r2,1
   48dc8:	0043dc00 	call	43dc0 <__divdf3>
   48dcc:	800d883a 	mov	r6,r16
   48dd0:	880f883a 	mov	r7,r17
   48dd4:	1009883a 	mov	r4,r2
   48dd8:	180b883a 	mov	r5,r3
   48ddc:	00451cc0 	call	451cc <__subdf3>
   48de0:	d9401017 	ldw	r5,64(sp)
   48de4:	d9000f17 	ldw	r4,60(sp)
   48de8:	102b883a 	mov	r21,r2
   48dec:	d8c01215 	stw	r3,72(sp)
   48df0:	0045ac80 	call	45ac8 <__fixdfsi>
   48df4:	1009883a 	mov	r4,r2
   48df8:	1029883a 	mov	r20,r2
   48dfc:	0045b480 	call	45b48 <__floatsidf>
   48e00:	d9000f17 	ldw	r4,60(sp)
   48e04:	d9401017 	ldw	r5,64(sp)
   48e08:	100d883a 	mov	r6,r2
   48e0c:	180f883a 	mov	r7,r3
   48e10:	00451cc0 	call	451cc <__subdf3>
   48e14:	1823883a 	mov	r17,r3
   48e18:	d8c00717 	ldw	r3,28(sp)
   48e1c:	d9401217 	ldw	r5,72(sp)
   48e20:	a2000c04 	addi	r8,r20,48
   48e24:	1021883a 	mov	r16,r2
   48e28:	1a000005 	stb	r8,0(r3)
   48e2c:	800d883a 	mov	r6,r16
   48e30:	880f883a 	mov	r7,r17
   48e34:	a809883a 	mov	r4,r21
   48e38:	4029883a 	mov	r20,r8
   48e3c:	00447900 	call	44790 <__gedf2>
   48e40:	00841d16 	blt	zero,r2,49eb8 <_dtoa_r+0x15f4>
   48e44:	800d883a 	mov	r6,r16
   48e48:	880f883a 	mov	r7,r17
   48e4c:	0009883a 	mov	r4,zero
   48e50:	014ffc34 	movhi	r5,16368
   48e54:	00451cc0 	call	451cc <__subdf3>
   48e58:	d9401217 	ldw	r5,72(sp)
   48e5c:	100d883a 	mov	r6,r2
   48e60:	180f883a 	mov	r7,r3
   48e64:	a809883a 	mov	r4,r21
   48e68:	00447900 	call	44790 <__gedf2>
   48e6c:	db001617 	ldw	r12,88(sp)
   48e70:	00840e16 	blt	zero,r2,49eac <_dtoa_r+0x15e8>
   48e74:	00800044 	movi	r2,1
   48e78:	13006b0e 	bge	r2,r12,49028 <_dtoa_r+0x764>
   48e7c:	d9000717 	ldw	r4,28(sp)
   48e80:	dd800f15 	stw	r22,60(sp)
   48e84:	dcc01015 	stw	r19,64(sp)
   48e88:	2319883a 	add	r12,r4,r12
   48e8c:	dcc01217 	ldw	r19,72(sp)
   48e90:	602d883a 	mov	r22,r12
   48e94:	dc801215 	stw	r18,72(sp)
   48e98:	b825883a 	mov	r18,r23
   48e9c:	00000906 	br	48ec4 <_dtoa_r+0x600>
   48ea0:	00451cc0 	call	451cc <__subdf3>
   48ea4:	a80d883a 	mov	r6,r21
   48ea8:	980f883a 	mov	r7,r19
   48eac:	1009883a 	mov	r4,r2
   48eb0:	180b883a 	mov	r5,r3
   48eb4:	004486c0 	call	4486c <__ledf2>
   48eb8:	1003e816 	blt	r2,zero,49e5c <_dtoa_r+0x1598>
   48ebc:	b825883a 	mov	r18,r23
   48ec0:	bd83e926 	beq	r23,r22,49e68 <_dtoa_r+0x15a4>
   48ec4:	a809883a 	mov	r4,r21
   48ec8:	980b883a 	mov	r5,r19
   48ecc:	000d883a 	mov	r6,zero
   48ed0:	01d00934 	movhi	r7,16420
   48ed4:	00449600 	call	44960 <__muldf3>
   48ed8:	000d883a 	mov	r6,zero
   48edc:	01d00934 	movhi	r7,16420
   48ee0:	8009883a 	mov	r4,r16
   48ee4:	880b883a 	mov	r5,r17
   48ee8:	102b883a 	mov	r21,r2
   48eec:	1827883a 	mov	r19,r3
   48ef0:	00449600 	call	44960 <__muldf3>
   48ef4:	180b883a 	mov	r5,r3
   48ef8:	1009883a 	mov	r4,r2
   48efc:	1821883a 	mov	r16,r3
   48f00:	1023883a 	mov	r17,r2
   48f04:	0045ac80 	call	45ac8 <__fixdfsi>
   48f08:	1009883a 	mov	r4,r2
   48f0c:	1029883a 	mov	r20,r2
   48f10:	0045b480 	call	45b48 <__floatsidf>
   48f14:	8809883a 	mov	r4,r17
   48f18:	800b883a 	mov	r5,r16
   48f1c:	100d883a 	mov	r6,r2
   48f20:	180f883a 	mov	r7,r3
   48f24:	00451cc0 	call	451cc <__subdf3>
   48f28:	a5000c04 	addi	r20,r20,48
   48f2c:	a80d883a 	mov	r6,r21
   48f30:	980f883a 	mov	r7,r19
   48f34:	1009883a 	mov	r4,r2
   48f38:	180b883a 	mov	r5,r3
   48f3c:	95000005 	stb	r20,0(r18)
   48f40:	1021883a 	mov	r16,r2
   48f44:	1823883a 	mov	r17,r3
   48f48:	004486c0 	call	4486c <__ledf2>
   48f4c:	bdc00044 	addi	r23,r23,1
   48f50:	800d883a 	mov	r6,r16
   48f54:	880f883a 	mov	r7,r17
   48f58:	0009883a 	mov	r4,zero
   48f5c:	014ffc34 	movhi	r5,16368
   48f60:	103fcf0e 	bge	r2,zero,48ea0 <_gp+0xfffebd58>
   48f64:	d8c01317 	ldw	r3,76(sp)
   48f68:	d8c00515 	stw	r3,20(sp)
   48f6c:	d9400917 	ldw	r5,36(sp)
   48f70:	e009883a 	mov	r4,fp
   48f74:	004c0240 	call	4c024 <_Bfree>
   48f78:	d9000517 	ldw	r4,20(sp)
   48f7c:	d9802317 	ldw	r6,140(sp)
   48f80:	d9c02517 	ldw	r7,148(sp)
   48f84:	b8000005 	stb	zero,0(r23)
   48f88:	20800044 	addi	r2,r4,1
   48f8c:	30800015 	stw	r2,0(r6)
   48f90:	3802aa26 	beq	r7,zero,49a3c <_dtoa_r+0x1178>
   48f94:	3dc00015 	stw	r23,0(r7)
   48f98:	d8800717 	ldw	r2,28(sp)
   48f9c:	003e7906 	br	48984 <_gp+0xfffeb83c>
   48fa0:	00800434 	movhi	r2,16
   48fa4:	10bfffc4 	addi	r2,r2,-1
   48fa8:	88a2703a 	and	r17,r17,r2
   48fac:	883e851e 	bne	r17,zero,489c4 <_gp+0xfffeb87c>
   48fb0:	00800174 	movhi	r2,5
   48fb4:	108bcc04 	addi	r2,r2,12080
   48fb8:	003e8406 	br	489cc <_gp+0xfffeb884>
   48fbc:	10c00204 	addi	r3,r2,8
   48fc0:	003e8706 	br	489e0 <_gp+0xfffeb898>
   48fc4:	01400434 	movhi	r5,16
   48fc8:	297fffc4 	addi	r5,r5,-1
   48fcc:	994a703a 	and	r5,r19,r5
   48fd0:	9009883a 	mov	r4,r18
   48fd4:	843f0044 	addi	r16,r16,-1023
   48fd8:	294ffc34 	orhi	r5,r5,16368
   48fdc:	dd800217 	ldw	r22,8(sp)
   48fe0:	d8001115 	stw	zero,68(sp)
   48fe4:	003ea506 	br	48a7c <_gp+0xfffeb934>
   48fe8:	00800174 	movhi	r2,5
   48fec:	108bc304 	addi	r2,r2,12044
   48ff0:	003e6406 	br	48984 <_gp+0xfffeb83c>
   48ff4:	e0001115 	stw	zero,68(fp)
   48ff8:	000b883a 	mov	r5,zero
   48ffc:	e009883a 	mov	r4,fp
   49000:	004bf7c0 	call	4bf7c <_Balloc>
   49004:	01bfffc4 	movi	r6,-1
   49008:	01c00044 	movi	r7,1
   4900c:	d8800715 	stw	r2,28(sp)
   49010:	d9800c15 	stw	r6,48(sp)
   49014:	e0801015 	stw	r2,64(fp)
   49018:	d8000315 	stw	zero,12(sp)
   4901c:	d9c00b15 	stw	r7,44(sp)
   49020:	d9800615 	stw	r6,24(sp)
   49024:	d8002215 	stw	zero,136(sp)
   49028:	d8800117 	ldw	r2,4(sp)
   4902c:	10008916 	blt	r2,zero,49254 <_dtoa_r+0x990>
   49030:	d9000517 	ldw	r4,20(sp)
   49034:	00c00384 	movi	r3,14
   49038:	19008616 	blt	r3,r4,49254 <_dtoa_r+0x990>
   4903c:	200490fa 	slli	r2,r4,3
   49040:	00c00174 	movhi	r3,5
   49044:	d9802217 	ldw	r6,136(sp)
   49048:	18cbeb04 	addi	r3,r3,12204
   4904c:	1885883a 	add	r2,r3,r2
   49050:	14000017 	ldw	r16,0(r2)
   49054:	14400117 	ldw	r17,4(r2)
   49058:	30016316 	blt	r6,zero,495e8 <_dtoa_r+0xd24>
   4905c:	800d883a 	mov	r6,r16
   49060:	880f883a 	mov	r7,r17
   49064:	9009883a 	mov	r4,r18
   49068:	980b883a 	mov	r5,r19
   4906c:	0043dc00 	call	43dc0 <__divdf3>
   49070:	180b883a 	mov	r5,r3
   49074:	1009883a 	mov	r4,r2
   49078:	0045ac80 	call	45ac8 <__fixdfsi>
   4907c:	1009883a 	mov	r4,r2
   49080:	102b883a 	mov	r21,r2
   49084:	0045b480 	call	45b48 <__floatsidf>
   49088:	800d883a 	mov	r6,r16
   4908c:	880f883a 	mov	r7,r17
   49090:	1009883a 	mov	r4,r2
   49094:	180b883a 	mov	r5,r3
   49098:	00449600 	call	44960 <__muldf3>
   4909c:	100d883a 	mov	r6,r2
   490a0:	180f883a 	mov	r7,r3
   490a4:	9009883a 	mov	r4,r18
   490a8:	980b883a 	mov	r5,r19
   490ac:	00451cc0 	call	451cc <__subdf3>
   490b0:	d9c00717 	ldw	r7,28(sp)
   490b4:	1009883a 	mov	r4,r2
   490b8:	a8800c04 	addi	r2,r21,48
   490bc:	38800005 	stb	r2,0(r7)
   490c0:	3dc00044 	addi	r23,r7,1
   490c4:	d9c00617 	ldw	r7,24(sp)
   490c8:	01800044 	movi	r6,1
   490cc:	180b883a 	mov	r5,r3
   490d0:	2005883a 	mov	r2,r4
   490d4:	39803826 	beq	r7,r6,491b8 <_dtoa_r+0x8f4>
   490d8:	000d883a 	mov	r6,zero
   490dc:	01d00934 	movhi	r7,16420
   490e0:	00449600 	call	44960 <__muldf3>
   490e4:	000d883a 	mov	r6,zero
   490e8:	000f883a 	mov	r7,zero
   490ec:	1009883a 	mov	r4,r2
   490f0:	180b883a 	mov	r5,r3
   490f4:	1025883a 	mov	r18,r2
   490f8:	1827883a 	mov	r19,r3
   490fc:	00505880 	call	50588 <__eqdf2>
   49100:	103f9a26 	beq	r2,zero,48f6c <_gp+0xfffebe24>
   49104:	d9c00617 	ldw	r7,24(sp)
   49108:	d8c00717 	ldw	r3,28(sp)
   4910c:	b829883a 	mov	r20,r23
   49110:	38bfffc4 	addi	r2,r7,-1
   49114:	18ad883a 	add	r22,r3,r2
   49118:	00000a06 	br	49144 <_dtoa_r+0x880>
   4911c:	00449600 	call	44960 <__muldf3>
   49120:	000d883a 	mov	r6,zero
   49124:	000f883a 	mov	r7,zero
   49128:	1009883a 	mov	r4,r2
   4912c:	180b883a 	mov	r5,r3
   49130:	1025883a 	mov	r18,r2
   49134:	1827883a 	mov	r19,r3
   49138:	b829883a 	mov	r20,r23
   4913c:	00505880 	call	50588 <__eqdf2>
   49140:	103f8a26 	beq	r2,zero,48f6c <_gp+0xfffebe24>
   49144:	800d883a 	mov	r6,r16
   49148:	880f883a 	mov	r7,r17
   4914c:	9009883a 	mov	r4,r18
   49150:	980b883a 	mov	r5,r19
   49154:	0043dc00 	call	43dc0 <__divdf3>
   49158:	180b883a 	mov	r5,r3
   4915c:	1009883a 	mov	r4,r2
   49160:	0045ac80 	call	45ac8 <__fixdfsi>
   49164:	1009883a 	mov	r4,r2
   49168:	102b883a 	mov	r21,r2
   4916c:	0045b480 	call	45b48 <__floatsidf>
   49170:	800d883a 	mov	r6,r16
   49174:	880f883a 	mov	r7,r17
   49178:	1009883a 	mov	r4,r2
   4917c:	180b883a 	mov	r5,r3
   49180:	00449600 	call	44960 <__muldf3>
   49184:	100d883a 	mov	r6,r2
   49188:	180f883a 	mov	r7,r3
   4918c:	9009883a 	mov	r4,r18
   49190:	980b883a 	mov	r5,r19
   49194:	00451cc0 	call	451cc <__subdf3>
   49198:	aa000c04 	addi	r8,r21,48
   4919c:	a2000005 	stb	r8,0(r20)
   491a0:	000d883a 	mov	r6,zero
   491a4:	01d00934 	movhi	r7,16420
   491a8:	1009883a 	mov	r4,r2
   491ac:	180b883a 	mov	r5,r3
   491b0:	a5c00044 	addi	r23,r20,1
   491b4:	b53fd91e 	bne	r22,r20,4911c <_gp+0xfffebfd4>
   491b8:	100d883a 	mov	r6,r2
   491bc:	180f883a 	mov	r7,r3
   491c0:	1009883a 	mov	r4,r2
   491c4:	180b883a 	mov	r5,r3
   491c8:	00435140 	call	43514 <__adddf3>
   491cc:	100d883a 	mov	r6,r2
   491d0:	180f883a 	mov	r7,r3
   491d4:	8009883a 	mov	r4,r16
   491d8:	880b883a 	mov	r5,r17
   491dc:	1027883a 	mov	r19,r2
   491e0:	1825883a 	mov	r18,r3
   491e4:	004486c0 	call	4486c <__ledf2>
   491e8:	10000816 	blt	r2,zero,4920c <_dtoa_r+0x948>
   491ec:	980d883a 	mov	r6,r19
   491f0:	900f883a 	mov	r7,r18
   491f4:	8009883a 	mov	r4,r16
   491f8:	880b883a 	mov	r5,r17
   491fc:	00505880 	call	50588 <__eqdf2>
   49200:	103f5a1e 	bne	r2,zero,48f6c <_gp+0xfffebe24>
   49204:	ad40004c 	andi	r21,r21,1
   49208:	a83f5826 	beq	r21,zero,48f6c <_gp+0xfffebe24>
   4920c:	bd3fffc3 	ldbu	r20,-1(r23)
   49210:	b8bfffc4 	addi	r2,r23,-1
   49214:	1007883a 	mov	r3,r2
   49218:	01400e44 	movi	r5,57
   4921c:	d9800717 	ldw	r6,28(sp)
   49220:	00000506 	br	49238 <_dtoa_r+0x974>
   49224:	18ffffc4 	addi	r3,r3,-1
   49228:	11824726 	beq	r2,r6,49b48 <_dtoa_r+0x1284>
   4922c:	1d000003 	ldbu	r20,0(r3)
   49230:	102f883a 	mov	r23,r2
   49234:	10bfffc4 	addi	r2,r2,-1
   49238:	a1003fcc 	andi	r4,r20,255
   4923c:	2100201c 	xori	r4,r4,128
   49240:	213fe004 	addi	r4,r4,-128
   49244:	217ff726 	beq	r4,r5,49224 <_gp+0xfffec0dc>
   49248:	a2000044 	addi	r8,r20,1
   4924c:	12000005 	stb	r8,0(r2)
   49250:	003f4606 	br	48f6c <_gp+0xfffebe24>
   49254:	d9000b17 	ldw	r4,44(sp)
   49258:	2000c826 	beq	r4,zero,4957c <_dtoa_r+0xcb8>
   4925c:	d9800317 	ldw	r6,12(sp)
   49260:	00c00044 	movi	r3,1
   49264:	1980f90e 	bge	r3,r6,4964c <_dtoa_r+0xd88>
   49268:	d8800617 	ldw	r2,24(sp)
   4926c:	d8c00a17 	ldw	r3,40(sp)
   49270:	157fffc4 	addi	r21,r2,-1
   49274:	1d41f316 	blt	r3,r21,49a44 <_dtoa_r+0x1180>
   49278:	1d6bc83a 	sub	r21,r3,r21
   4927c:	d9c00617 	ldw	r7,24(sp)
   49280:	3802aa16 	blt	r7,zero,49d2c <_dtoa_r+0x1468>
   49284:	dd000817 	ldw	r20,32(sp)
   49288:	d8800617 	ldw	r2,24(sp)
   4928c:	d8c00817 	ldw	r3,32(sp)
   49290:	01400044 	movi	r5,1
   49294:	e009883a 	mov	r4,fp
   49298:	1887883a 	add	r3,r3,r2
   4929c:	d8c00815 	stw	r3,32(sp)
   492a0:	b0ad883a 	add	r22,r22,r2
   492a4:	004c3b00 	call	4c3b0 <__i2b>
   492a8:	1023883a 	mov	r17,r2
   492ac:	a0000826 	beq	r20,zero,492d0 <_dtoa_r+0xa0c>
   492b0:	0580070e 	bge	zero,r22,492d0 <_dtoa_r+0xa0c>
   492b4:	a005883a 	mov	r2,r20
   492b8:	b500b916 	blt	r22,r20,495a0 <_dtoa_r+0xcdc>
   492bc:	d9000817 	ldw	r4,32(sp)
   492c0:	a0a9c83a 	sub	r20,r20,r2
   492c4:	b0adc83a 	sub	r22,r22,r2
   492c8:	2089c83a 	sub	r4,r4,r2
   492cc:	d9000815 	stw	r4,32(sp)
   492d0:	d9800a17 	ldw	r6,40(sp)
   492d4:	0181810e 	bge	zero,r6,498dc <_dtoa_r+0x1018>
   492d8:	d9c00b17 	ldw	r7,44(sp)
   492dc:	3800b326 	beq	r7,zero,495ac <_dtoa_r+0xce8>
   492e0:	a800b226 	beq	r21,zero,495ac <_dtoa_r+0xce8>
   492e4:	880b883a 	mov	r5,r17
   492e8:	a80d883a 	mov	r6,r21
   492ec:	e009883a 	mov	r4,fp
   492f0:	004c6780 	call	4c678 <__pow5mult>
   492f4:	d9800917 	ldw	r6,36(sp)
   492f8:	100b883a 	mov	r5,r2
   492fc:	e009883a 	mov	r4,fp
   49300:	1023883a 	mov	r17,r2
   49304:	004c3ec0 	call	4c3ec <__multiply>
   49308:	1021883a 	mov	r16,r2
   4930c:	d8800a17 	ldw	r2,40(sp)
   49310:	d9400917 	ldw	r5,36(sp)
   49314:	e009883a 	mov	r4,fp
   49318:	1545c83a 	sub	r2,r2,r21
   4931c:	d8800a15 	stw	r2,40(sp)
   49320:	004c0240 	call	4c024 <_Bfree>
   49324:	d8c00a17 	ldw	r3,40(sp)
   49328:	18009f1e 	bne	r3,zero,495a8 <_dtoa_r+0xce4>
   4932c:	05c00044 	movi	r23,1
   49330:	e009883a 	mov	r4,fp
   49334:	b80b883a 	mov	r5,r23
   49338:	004c3b00 	call	4c3b0 <__i2b>
   4933c:	d9000d17 	ldw	r4,52(sp)
   49340:	102b883a 	mov	r21,r2
   49344:	2000ce26 	beq	r4,zero,49680 <_dtoa_r+0xdbc>
   49348:	200d883a 	mov	r6,r4
   4934c:	100b883a 	mov	r5,r2
   49350:	e009883a 	mov	r4,fp
   49354:	004c6780 	call	4c678 <__pow5mult>
   49358:	d9800317 	ldw	r6,12(sp)
   4935c:	102b883a 	mov	r21,r2
   49360:	b981810e 	bge	r23,r6,49968 <_dtoa_r+0x10a4>
   49364:	0027883a 	mov	r19,zero
   49368:	a8800417 	ldw	r2,16(r21)
   4936c:	05c00804 	movi	r23,32
   49370:	10800104 	addi	r2,r2,4
   49374:	1085883a 	add	r2,r2,r2
   49378:	1085883a 	add	r2,r2,r2
   4937c:	a885883a 	add	r2,r21,r2
   49380:	11000017 	ldw	r4,0(r2)
   49384:	004c2980 	call	4c298 <__hi0bits>
   49388:	b885c83a 	sub	r2,r23,r2
   4938c:	1585883a 	add	r2,r2,r22
   49390:	108007cc 	andi	r2,r2,31
   49394:	1000b326 	beq	r2,zero,49664 <_dtoa_r+0xda0>
   49398:	00c00804 	movi	r3,32
   4939c:	1887c83a 	sub	r3,r3,r2
   493a0:	01000104 	movi	r4,4
   493a4:	20c2cd0e 	bge	r4,r3,49edc <_dtoa_r+0x1618>
   493a8:	00c00704 	movi	r3,28
   493ac:	1885c83a 	sub	r2,r3,r2
   493b0:	d8c00817 	ldw	r3,32(sp)
   493b4:	a0a9883a 	add	r20,r20,r2
   493b8:	b0ad883a 	add	r22,r22,r2
   493bc:	1887883a 	add	r3,r3,r2
   493c0:	d8c00815 	stw	r3,32(sp)
   493c4:	d9800817 	ldw	r6,32(sp)
   493c8:	0180040e 	bge	zero,r6,493dc <_dtoa_r+0xb18>
   493cc:	800b883a 	mov	r5,r16
   493d0:	e009883a 	mov	r4,fp
   493d4:	004c7b80 	call	4c7b8 <__lshift>
   493d8:	1021883a 	mov	r16,r2
   493dc:	0580050e 	bge	zero,r22,493f4 <_dtoa_r+0xb30>
   493e0:	a80b883a 	mov	r5,r21
   493e4:	b00d883a 	mov	r6,r22
   493e8:	e009883a 	mov	r4,fp
   493ec:	004c7b80 	call	4c7b8 <__lshift>
   493f0:	102b883a 	mov	r21,r2
   493f4:	d9c00e17 	ldw	r7,56(sp)
   493f8:	3801211e 	bne	r7,zero,49880 <_dtoa_r+0xfbc>
   493fc:	d9800617 	ldw	r6,24(sp)
   49400:	0181380e 	bge	zero,r6,498e4 <_dtoa_r+0x1020>
   49404:	d8c00b17 	ldw	r3,44(sp)
   49408:	1800ab1e 	bne	r3,zero,496b8 <_dtoa_r+0xdf4>
   4940c:	dc800717 	ldw	r18,28(sp)
   49410:	dcc00617 	ldw	r19,24(sp)
   49414:	9029883a 	mov	r20,r18
   49418:	00000206 	br	49424 <_dtoa_r+0xb60>
   4941c:	004c04c0 	call	4c04c <__multadd>
   49420:	1021883a 	mov	r16,r2
   49424:	a80b883a 	mov	r5,r21
   49428:	8009883a 	mov	r4,r16
   4942c:	004869c0 	call	4869c <quorem>
   49430:	10800c04 	addi	r2,r2,48
   49434:	90800005 	stb	r2,0(r18)
   49438:	94800044 	addi	r18,r18,1
   4943c:	9507c83a 	sub	r3,r18,r20
   49440:	000f883a 	mov	r7,zero
   49444:	01800284 	movi	r6,10
   49448:	800b883a 	mov	r5,r16
   4944c:	e009883a 	mov	r4,fp
   49450:	1cfff216 	blt	r3,r19,4941c <_gp+0xfffec2d4>
   49454:	1011883a 	mov	r8,r2
   49458:	d8800617 	ldw	r2,24(sp)
   4945c:	0082370e 	bge	zero,r2,49d3c <_dtoa_r+0x1478>
   49460:	d9000717 	ldw	r4,28(sp)
   49464:	0025883a 	mov	r18,zero
   49468:	20af883a 	add	r23,r4,r2
   4946c:	01800044 	movi	r6,1
   49470:	800b883a 	mov	r5,r16
   49474:	e009883a 	mov	r4,fp
   49478:	da001715 	stw	r8,92(sp)
   4947c:	004c7b80 	call	4c7b8 <__lshift>
   49480:	a80b883a 	mov	r5,r21
   49484:	1009883a 	mov	r4,r2
   49488:	d8800915 	stw	r2,36(sp)
   4948c:	004c9000 	call	4c900 <__mcmp>
   49490:	da001717 	ldw	r8,92(sp)
   49494:	0081800e 	bge	zero,r2,49a98 <_dtoa_r+0x11d4>
   49498:	b93fffc3 	ldbu	r4,-1(r23)
   4949c:	b8bfffc4 	addi	r2,r23,-1
   494a0:	1007883a 	mov	r3,r2
   494a4:	01800e44 	movi	r6,57
   494a8:	d9c00717 	ldw	r7,28(sp)
   494ac:	00000506 	br	494c4 <_dtoa_r+0xc00>
   494b0:	18ffffc4 	addi	r3,r3,-1
   494b4:	11c12326 	beq	r2,r7,49944 <_dtoa_r+0x1080>
   494b8:	19000003 	ldbu	r4,0(r3)
   494bc:	102f883a 	mov	r23,r2
   494c0:	10bfffc4 	addi	r2,r2,-1
   494c4:	21403fcc 	andi	r5,r4,255
   494c8:	2940201c 	xori	r5,r5,128
   494cc:	297fe004 	addi	r5,r5,-128
   494d0:	29bff726 	beq	r5,r6,494b0 <_gp+0xfffec368>
   494d4:	21000044 	addi	r4,r4,1
   494d8:	11000005 	stb	r4,0(r2)
   494dc:	a80b883a 	mov	r5,r21
   494e0:	e009883a 	mov	r4,fp
   494e4:	004c0240 	call	4c024 <_Bfree>
   494e8:	883ea026 	beq	r17,zero,48f6c <_gp+0xfffebe24>
   494ec:	90000426 	beq	r18,zero,49500 <_dtoa_r+0xc3c>
   494f0:	94400326 	beq	r18,r17,49500 <_dtoa_r+0xc3c>
   494f4:	900b883a 	mov	r5,r18
   494f8:	e009883a 	mov	r4,fp
   494fc:	004c0240 	call	4c024 <_Bfree>
   49500:	880b883a 	mov	r5,r17
   49504:	e009883a 	mov	r4,fp
   49508:	004c0240 	call	4c024 <_Bfree>
   4950c:	003e9706 	br	48f6c <_gp+0xfffebe24>
   49510:	01800044 	movi	r6,1
   49514:	d9800e15 	stw	r6,56(sp)
   49518:	003d9606 	br	48b74 <_gp+0xfffeba2c>
   4951c:	d8800817 	ldw	r2,32(sp)
   49520:	d8c00517 	ldw	r3,20(sp)
   49524:	d8000d15 	stw	zero,52(sp)
   49528:	10c5c83a 	sub	r2,r2,r3
   4952c:	00c9c83a 	sub	r4,zero,r3
   49530:	d8800815 	stw	r2,32(sp)
   49534:	d9000a15 	stw	r4,40(sp)
   49538:	003d9706 	br	48b98 <_gp+0xfffeba50>
   4953c:	05adc83a 	sub	r22,zero,r22
   49540:	dd800815 	stw	r22,32(sp)
   49544:	002d883a 	mov	r22,zero
   49548:	003d8e06 	br	48b84 <_gp+0xfffeba3c>
   4954c:	d9000517 	ldw	r4,20(sp)
   49550:	0045b480 	call	45b48 <__floatsidf>
   49554:	100d883a 	mov	r6,r2
   49558:	180f883a 	mov	r7,r3
   4955c:	a009883a 	mov	r4,r20
   49560:	880b883a 	mov	r5,r17
   49564:	00505880 	call	50588 <__eqdf2>
   49568:	103d7126 	beq	r2,zero,48b30 <_gp+0xfffeb9e8>
   4956c:	d9c00517 	ldw	r7,20(sp)
   49570:	39ffffc4 	addi	r7,r7,-1
   49574:	d9c00515 	stw	r7,20(sp)
   49578:	003d6d06 	br	48b30 <_gp+0xfffeb9e8>
   4957c:	dd400a17 	ldw	r21,40(sp)
   49580:	dd000817 	ldw	r20,32(sp)
   49584:	0023883a 	mov	r17,zero
   49588:	003f4806 	br	492ac <_gp+0xfffec164>
   4958c:	10e3c83a 	sub	r17,r2,r3
   49590:	9448983a 	sll	r4,r18,r17
   49594:	003d3206 	br	48a60 <_gp+0xfffeb918>
   49598:	d8000e15 	stw	zero,56(sp)
   4959c:	003d7506 	br	48b74 <_gp+0xfffeba2c>
   495a0:	b005883a 	mov	r2,r22
   495a4:	003f4506 	br	492bc <_gp+0xfffec174>
   495a8:	dc000915 	stw	r16,36(sp)
   495ac:	d9800a17 	ldw	r6,40(sp)
   495b0:	d9400917 	ldw	r5,36(sp)
   495b4:	e009883a 	mov	r4,fp
   495b8:	004c6780 	call	4c678 <__pow5mult>
   495bc:	1021883a 	mov	r16,r2
   495c0:	003f5a06 	br	4932c <_gp+0xfffec1e4>
   495c4:	01c00044 	movi	r7,1
   495c8:	d9c00b15 	stw	r7,44(sp)
   495cc:	d8802217 	ldw	r2,136(sp)
   495d0:	0081280e 	bge	zero,r2,49a74 <_dtoa_r+0x11b0>
   495d4:	100d883a 	mov	r6,r2
   495d8:	1021883a 	mov	r16,r2
   495dc:	d8800c15 	stw	r2,48(sp)
   495e0:	d8800615 	stw	r2,24(sp)
   495e4:	003d8806 	br	48c08 <_gp+0xfffebac0>
   495e8:	d8800617 	ldw	r2,24(sp)
   495ec:	00be9b16 	blt	zero,r2,4905c <_gp+0xfffebf14>
   495f0:	10010f1e 	bne	r2,zero,49a30 <_dtoa_r+0x116c>
   495f4:	880b883a 	mov	r5,r17
   495f8:	000d883a 	mov	r6,zero
   495fc:	01d00534 	movhi	r7,16404
   49600:	8009883a 	mov	r4,r16
   49604:	00449600 	call	44960 <__muldf3>
   49608:	900d883a 	mov	r6,r18
   4960c:	980f883a 	mov	r7,r19
   49610:	1009883a 	mov	r4,r2
   49614:	180b883a 	mov	r5,r3
   49618:	00447900 	call	44790 <__gedf2>
   4961c:	002b883a 	mov	r21,zero
   49620:	0023883a 	mov	r17,zero
   49624:	1000bf16 	blt	r2,zero,49924 <_dtoa_r+0x1060>
   49628:	d9802217 	ldw	r6,136(sp)
   4962c:	ddc00717 	ldw	r23,28(sp)
   49630:	018c303a 	nor	r6,zero,r6
   49634:	d9800515 	stw	r6,20(sp)
   49638:	a80b883a 	mov	r5,r21
   4963c:	e009883a 	mov	r4,fp
   49640:	004c0240 	call	4c024 <_Bfree>
   49644:	883e4926 	beq	r17,zero,48f6c <_gp+0xfffebe24>
   49648:	003fad06 	br	49500 <_gp+0xfffec3b8>
   4964c:	d9c01117 	ldw	r7,68(sp)
   49650:	3801bc26 	beq	r7,zero,49d44 <_dtoa_r+0x1480>
   49654:	10810cc4 	addi	r2,r2,1075
   49658:	dd400a17 	ldw	r21,40(sp)
   4965c:	dd000817 	ldw	r20,32(sp)
   49660:	003f0a06 	br	4928c <_gp+0xfffec144>
   49664:	00800704 	movi	r2,28
   49668:	d9000817 	ldw	r4,32(sp)
   4966c:	a0a9883a 	add	r20,r20,r2
   49670:	b0ad883a 	add	r22,r22,r2
   49674:	2089883a 	add	r4,r4,r2
   49678:	d9000815 	stw	r4,32(sp)
   4967c:	003f5106 	br	493c4 <_gp+0xfffec27c>
   49680:	d8c00317 	ldw	r3,12(sp)
   49684:	b8c1fc0e 	bge	r23,r3,49e78 <_dtoa_r+0x15b4>
   49688:	0027883a 	mov	r19,zero
   4968c:	b805883a 	mov	r2,r23
   49690:	003f3e06 	br	4938c <_gp+0xfffec244>
   49694:	880b883a 	mov	r5,r17
   49698:	e009883a 	mov	r4,fp
   4969c:	000f883a 	mov	r7,zero
   496a0:	01800284 	movi	r6,10
   496a4:	004c04c0 	call	4c04c <__multadd>
   496a8:	d9000c17 	ldw	r4,48(sp)
   496ac:	1023883a 	mov	r17,r2
   496b0:	0102040e 	bge	zero,r4,49ec4 <_dtoa_r+0x1600>
   496b4:	d9000615 	stw	r4,24(sp)
   496b8:	0500050e 	bge	zero,r20,496d0 <_dtoa_r+0xe0c>
   496bc:	880b883a 	mov	r5,r17
   496c0:	a00d883a 	mov	r6,r20
   496c4:	e009883a 	mov	r4,fp
   496c8:	004c7b80 	call	4c7b8 <__lshift>
   496cc:	1023883a 	mov	r17,r2
   496d0:	9801241e 	bne	r19,zero,49b64 <_dtoa_r+0x12a0>
   496d4:	8829883a 	mov	r20,r17
   496d8:	d9000617 	ldw	r4,24(sp)
   496dc:	dcc00717 	ldw	r19,28(sp)
   496e0:	9480004c 	andi	r18,r18,1
   496e4:	20bfffc4 	addi	r2,r4,-1
   496e8:	9885883a 	add	r2,r19,r2
   496ec:	d8800415 	stw	r2,16(sp)
   496f0:	dc800615 	stw	r18,24(sp)
   496f4:	a80b883a 	mov	r5,r21
   496f8:	8009883a 	mov	r4,r16
   496fc:	004869c0 	call	4869c <quorem>
   49700:	880b883a 	mov	r5,r17
   49704:	8009883a 	mov	r4,r16
   49708:	102f883a 	mov	r23,r2
   4970c:	004c9000 	call	4c900 <__mcmp>
   49710:	a80b883a 	mov	r5,r21
   49714:	a00d883a 	mov	r6,r20
   49718:	e009883a 	mov	r4,fp
   4971c:	102d883a 	mov	r22,r2
   49720:	004c9600 	call	4c960 <__mdiff>
   49724:	1007883a 	mov	r3,r2
   49728:	10800317 	ldw	r2,12(r2)
   4972c:	bc800c04 	addi	r18,r23,48
   49730:	180b883a 	mov	r5,r3
   49734:	10004e1e 	bne	r2,zero,49870 <_dtoa_r+0xfac>
   49738:	8009883a 	mov	r4,r16
   4973c:	d8c01615 	stw	r3,88(sp)
   49740:	004c9000 	call	4c900 <__mcmp>
   49744:	d8c01617 	ldw	r3,88(sp)
   49748:	e009883a 	mov	r4,fp
   4974c:	d8801615 	stw	r2,88(sp)
   49750:	180b883a 	mov	r5,r3
   49754:	004c0240 	call	4c024 <_Bfree>
   49758:	d8801617 	ldw	r2,88(sp)
   4975c:	1000041e 	bne	r2,zero,49770 <_dtoa_r+0xeac>
   49760:	d9800317 	ldw	r6,12(sp)
   49764:	3000021e 	bne	r6,zero,49770 <_dtoa_r+0xeac>
   49768:	d8c00617 	ldw	r3,24(sp)
   4976c:	18003726 	beq	r3,zero,4984c <_dtoa_r+0xf88>
   49770:	b0002016 	blt	r22,zero,497f4 <_dtoa_r+0xf30>
   49774:	b000041e 	bne	r22,zero,49788 <_dtoa_r+0xec4>
   49778:	d9000317 	ldw	r4,12(sp)
   4977c:	2000021e 	bne	r4,zero,49788 <_dtoa_r+0xec4>
   49780:	d8c00617 	ldw	r3,24(sp)
   49784:	18001b26 	beq	r3,zero,497f4 <_dtoa_r+0xf30>
   49788:	00810716 	blt	zero,r2,49ba8 <_dtoa_r+0x12e4>
   4978c:	d8c00417 	ldw	r3,16(sp)
   49790:	9d800044 	addi	r22,r19,1
   49794:	9c800005 	stb	r18,0(r19)
   49798:	b02f883a 	mov	r23,r22
   4979c:	98c10626 	beq	r19,r3,49bb8 <_dtoa_r+0x12f4>
   497a0:	800b883a 	mov	r5,r16
   497a4:	000f883a 	mov	r7,zero
   497a8:	01800284 	movi	r6,10
   497ac:	e009883a 	mov	r4,fp
   497b0:	004c04c0 	call	4c04c <__multadd>
   497b4:	1021883a 	mov	r16,r2
   497b8:	000f883a 	mov	r7,zero
   497bc:	01800284 	movi	r6,10
   497c0:	880b883a 	mov	r5,r17
   497c4:	e009883a 	mov	r4,fp
   497c8:	8d002526 	beq	r17,r20,49860 <_dtoa_r+0xf9c>
   497cc:	004c04c0 	call	4c04c <__multadd>
   497d0:	a00b883a 	mov	r5,r20
   497d4:	000f883a 	mov	r7,zero
   497d8:	01800284 	movi	r6,10
   497dc:	e009883a 	mov	r4,fp
   497e0:	1023883a 	mov	r17,r2
   497e4:	004c04c0 	call	4c04c <__multadd>
   497e8:	1029883a 	mov	r20,r2
   497ec:	b027883a 	mov	r19,r22
   497f0:	003fc006 	br	496f4 <_gp+0xfffec5ac>
   497f4:	9011883a 	mov	r8,r18
   497f8:	00800e0e 	bge	zero,r2,49834 <_dtoa_r+0xf70>
   497fc:	800b883a 	mov	r5,r16
   49800:	01800044 	movi	r6,1
   49804:	e009883a 	mov	r4,fp
   49808:	da001715 	stw	r8,92(sp)
   4980c:	004c7b80 	call	4c7b8 <__lshift>
   49810:	a80b883a 	mov	r5,r21
   49814:	1009883a 	mov	r4,r2
   49818:	1021883a 	mov	r16,r2
   4981c:	004c9000 	call	4c900 <__mcmp>
   49820:	da001717 	ldw	r8,92(sp)
   49824:	0081960e 	bge	zero,r2,49e80 <_dtoa_r+0x15bc>
   49828:	00800e44 	movi	r2,57
   4982c:	40817026 	beq	r8,r2,49df0 <_dtoa_r+0x152c>
   49830:	ba000c44 	addi	r8,r23,49
   49834:	8825883a 	mov	r18,r17
   49838:	9dc00044 	addi	r23,r19,1
   4983c:	9a000005 	stb	r8,0(r19)
   49840:	a023883a 	mov	r17,r20
   49844:	dc000915 	stw	r16,36(sp)
   49848:	003f2406 	br	494dc <_gp+0xfffec394>
   4984c:	00800e44 	movi	r2,57
   49850:	9011883a 	mov	r8,r18
   49854:	90816626 	beq	r18,r2,49df0 <_dtoa_r+0x152c>
   49858:	05bff516 	blt	zero,r22,49830 <_gp+0xfffec6e8>
   4985c:	003ff506 	br	49834 <_gp+0xfffec6ec>
   49860:	004c04c0 	call	4c04c <__multadd>
   49864:	1023883a 	mov	r17,r2
   49868:	1029883a 	mov	r20,r2
   4986c:	003fdf06 	br	497ec <_gp+0xfffec6a4>
   49870:	e009883a 	mov	r4,fp
   49874:	004c0240 	call	4c024 <_Bfree>
   49878:	00800044 	movi	r2,1
   4987c:	003fbc06 	br	49770 <_gp+0xfffec628>
   49880:	a80b883a 	mov	r5,r21
   49884:	8009883a 	mov	r4,r16
   49888:	004c9000 	call	4c900 <__mcmp>
   4988c:	103edb0e 	bge	r2,zero,493fc <_gp+0xfffec2b4>
   49890:	800b883a 	mov	r5,r16
   49894:	000f883a 	mov	r7,zero
   49898:	01800284 	movi	r6,10
   4989c:	e009883a 	mov	r4,fp
   498a0:	004c04c0 	call	4c04c <__multadd>
   498a4:	1021883a 	mov	r16,r2
   498a8:	d8800517 	ldw	r2,20(sp)
   498ac:	d8c00b17 	ldw	r3,44(sp)
   498b0:	10bfffc4 	addi	r2,r2,-1
   498b4:	d8800515 	stw	r2,20(sp)
   498b8:	183f761e 	bne	r3,zero,49694 <_gp+0xfffec54c>
   498bc:	d9000c17 	ldw	r4,48(sp)
   498c0:	0101730e 	bge	zero,r4,49e90 <_dtoa_r+0x15cc>
   498c4:	d9000615 	stw	r4,24(sp)
   498c8:	003ed006 	br	4940c <_gp+0xfffec2c4>
   498cc:	00800084 	movi	r2,2
   498d0:	3081861e 	bne	r6,r2,49eec <_dtoa_r+0x1628>
   498d4:	d8000b15 	stw	zero,44(sp)
   498d8:	003f3c06 	br	495cc <_gp+0xfffec484>
   498dc:	dc000917 	ldw	r16,36(sp)
   498e0:	003e9206 	br	4932c <_gp+0xfffec1e4>
   498e4:	d9c00317 	ldw	r7,12(sp)
   498e8:	00800084 	movi	r2,2
   498ec:	11fec50e 	bge	r2,r7,49404 <_gp+0xfffec2bc>
   498f0:	d9000617 	ldw	r4,24(sp)
   498f4:	20013c1e 	bne	r4,zero,49de8 <_dtoa_r+0x1524>
   498f8:	a80b883a 	mov	r5,r21
   498fc:	000f883a 	mov	r7,zero
   49900:	01800144 	movi	r6,5
   49904:	e009883a 	mov	r4,fp
   49908:	004c04c0 	call	4c04c <__multadd>
   4990c:	100b883a 	mov	r5,r2
   49910:	8009883a 	mov	r4,r16
   49914:	102b883a 	mov	r21,r2
   49918:	004c9000 	call	4c900 <__mcmp>
   4991c:	dc000915 	stw	r16,36(sp)
   49920:	00bf410e 	bge	zero,r2,49628 <_gp+0xfffec4e0>
   49924:	d9c00717 	ldw	r7,28(sp)
   49928:	00800c44 	movi	r2,49
   4992c:	38800005 	stb	r2,0(r7)
   49930:	d8800517 	ldw	r2,20(sp)
   49934:	3dc00044 	addi	r23,r7,1
   49938:	10800044 	addi	r2,r2,1
   4993c:	d8800515 	stw	r2,20(sp)
   49940:	003f3d06 	br	49638 <_gp+0xfffec4f0>
   49944:	d9800517 	ldw	r6,20(sp)
   49948:	d9c00717 	ldw	r7,28(sp)
   4994c:	00800c44 	movi	r2,49
   49950:	31800044 	addi	r6,r6,1
   49954:	d9800515 	stw	r6,20(sp)
   49958:	38800005 	stb	r2,0(r7)
   4995c:	003edf06 	br	494dc <_gp+0xfffec394>
   49960:	d8000b15 	stw	zero,44(sp)
   49964:	003c9f06 	br	48be4 <_gp+0xfffeba9c>
   49968:	903e7e1e 	bne	r18,zero,49364 <_gp+0xfffec21c>
   4996c:	00800434 	movhi	r2,16
   49970:	10bfffc4 	addi	r2,r2,-1
   49974:	9884703a 	and	r2,r19,r2
   49978:	1000ea1e 	bne	r2,zero,49d24 <_dtoa_r+0x1460>
   4997c:	9cdffc2c 	andhi	r19,r19,32752
   49980:	9800e826 	beq	r19,zero,49d24 <_dtoa_r+0x1460>
   49984:	d9c00817 	ldw	r7,32(sp)
   49988:	b5800044 	addi	r22,r22,1
   4998c:	04c00044 	movi	r19,1
   49990:	39c00044 	addi	r7,r7,1
   49994:	d9c00815 	stw	r7,32(sp)
   49998:	d8800d17 	ldw	r2,52(sp)
   4999c:	103e721e 	bne	r2,zero,49368 <_gp+0xfffec220>
   499a0:	00800044 	movi	r2,1
   499a4:	003e7906 	br	4938c <_gp+0xfffec244>
   499a8:	8009883a 	mov	r4,r16
   499ac:	0045b480 	call	45b48 <__floatsidf>
   499b0:	d9800f17 	ldw	r6,60(sp)
   499b4:	d9c01017 	ldw	r7,64(sp)
   499b8:	1009883a 	mov	r4,r2
   499bc:	180b883a 	mov	r5,r3
   499c0:	00449600 	call	44960 <__muldf3>
   499c4:	000d883a 	mov	r6,zero
   499c8:	01d00734 	movhi	r7,16412
   499cc:	1009883a 	mov	r4,r2
   499d0:	180b883a 	mov	r5,r3
   499d4:	00435140 	call	43514 <__adddf3>
   499d8:	047f3034 	movhi	r17,64704
   499dc:	1021883a 	mov	r16,r2
   499e0:	1c63883a 	add	r17,r3,r17
   499e4:	d9000f17 	ldw	r4,60(sp)
   499e8:	d9401017 	ldw	r5,64(sp)
   499ec:	000d883a 	mov	r6,zero
   499f0:	01d00534 	movhi	r7,16404
   499f4:	00451cc0 	call	451cc <__subdf3>
   499f8:	800d883a 	mov	r6,r16
   499fc:	880f883a 	mov	r7,r17
   49a00:	1009883a 	mov	r4,r2
   49a04:	180b883a 	mov	r5,r3
   49a08:	102b883a 	mov	r21,r2
   49a0c:	1829883a 	mov	r20,r3
   49a10:	00447900 	call	44790 <__gedf2>
   49a14:	00806c16 	blt	zero,r2,49bc8 <_dtoa_r+0x1304>
   49a18:	89e0003c 	xorhi	r7,r17,32768
   49a1c:	800d883a 	mov	r6,r16
   49a20:	a809883a 	mov	r4,r21
   49a24:	a00b883a 	mov	r5,r20
   49a28:	004486c0 	call	4486c <__ledf2>
   49a2c:	103d7e0e 	bge	r2,zero,49028 <_gp+0xfffebee0>
   49a30:	002b883a 	mov	r21,zero
   49a34:	0023883a 	mov	r17,zero
   49a38:	003efb06 	br	49628 <_gp+0xfffec4e0>
   49a3c:	d8800717 	ldw	r2,28(sp)
   49a40:	003bd006 	br	48984 <_gp+0xfffeb83c>
   49a44:	d9000a17 	ldw	r4,40(sp)
   49a48:	d9800d17 	ldw	r6,52(sp)
   49a4c:	dd400a15 	stw	r21,40(sp)
   49a50:	a905c83a 	sub	r2,r21,r4
   49a54:	308d883a 	add	r6,r6,r2
   49a58:	d9800d15 	stw	r6,52(sp)
   49a5c:	002b883a 	mov	r21,zero
   49a60:	003e0606 	br	4927c <_gp+0xfffec134>
   49a64:	9023883a 	mov	r17,r18
   49a68:	9829883a 	mov	r20,r19
   49a6c:	04000084 	movi	r16,2
   49a70:	003c9206 	br	48cbc <_gp+0xfffebb74>
   49a74:	04000044 	movi	r16,1
   49a78:	dc000c15 	stw	r16,48(sp)
   49a7c:	dc000615 	stw	r16,24(sp)
   49a80:	dc002215 	stw	r16,136(sp)
   49a84:	e0001115 	stw	zero,68(fp)
   49a88:	000b883a 	mov	r5,zero
   49a8c:	003c6906 	br	48c34 <_gp+0xfffebaec>
   49a90:	3021883a 	mov	r16,r6
   49a94:	003ffb06 	br	49a84 <_gp+0xfffec93c>
   49a98:	1000021e 	bne	r2,zero,49aa4 <_dtoa_r+0x11e0>
   49a9c:	4200004c 	andi	r8,r8,1
   49aa0:	403e7d1e 	bne	r8,zero,49498 <_gp+0xfffec350>
   49aa4:	01000c04 	movi	r4,48
   49aa8:	00000106 	br	49ab0 <_dtoa_r+0x11ec>
   49aac:	102f883a 	mov	r23,r2
   49ab0:	b8bfffc4 	addi	r2,r23,-1
   49ab4:	10c00007 	ldb	r3,0(r2)
   49ab8:	193ffc26 	beq	r3,r4,49aac <_gp+0xfffec964>
   49abc:	003e8706 	br	494dc <_gp+0xfffec394>
   49ac0:	d8800517 	ldw	r2,20(sp)
   49ac4:	00a3c83a 	sub	r17,zero,r2
   49ac8:	8800a426 	beq	r17,zero,49d5c <_dtoa_r+0x1498>
   49acc:	888003cc 	andi	r2,r17,15
   49ad0:	100490fa 	slli	r2,r2,3
   49ad4:	00c00174 	movhi	r3,5
   49ad8:	18cbeb04 	addi	r3,r3,12204
   49adc:	1885883a 	add	r2,r3,r2
   49ae0:	11800017 	ldw	r6,0(r2)
   49ae4:	11c00117 	ldw	r7,4(r2)
   49ae8:	9009883a 	mov	r4,r18
   49aec:	980b883a 	mov	r5,r19
   49af0:	8823d13a 	srai	r17,r17,4
   49af4:	00449600 	call	44960 <__muldf3>
   49af8:	d8800f15 	stw	r2,60(sp)
   49afc:	d8c01015 	stw	r3,64(sp)
   49b00:	8800e826 	beq	r17,zero,49ea4 <_dtoa_r+0x15e0>
   49b04:	05000174 	movhi	r20,5
   49b08:	a50be104 	addi	r20,r20,12164
   49b0c:	04000084 	movi	r16,2
   49b10:	8980004c 	andi	r6,r17,1
   49b14:	1009883a 	mov	r4,r2
   49b18:	8823d07a 	srai	r17,r17,1
   49b1c:	180b883a 	mov	r5,r3
   49b20:	30000426 	beq	r6,zero,49b34 <_dtoa_r+0x1270>
   49b24:	a1800017 	ldw	r6,0(r20)
   49b28:	a1c00117 	ldw	r7,4(r20)
   49b2c:	84000044 	addi	r16,r16,1
   49b30:	00449600 	call	44960 <__muldf3>
   49b34:	a5000204 	addi	r20,r20,8
   49b38:	883ff51e 	bne	r17,zero,49b10 <_gp+0xfffec9c8>
   49b3c:	d8800f15 	stw	r2,60(sp)
   49b40:	d8c01015 	stw	r3,64(sp)
   49b44:	003c7606 	br	48d20 <_gp+0xfffebbd8>
   49b48:	00c00c04 	movi	r3,48
   49b4c:	10c00005 	stb	r3,0(r2)
   49b50:	d8c00517 	ldw	r3,20(sp)
   49b54:	bd3fffc3 	ldbu	r20,-1(r23)
   49b58:	18c00044 	addi	r3,r3,1
   49b5c:	d8c00515 	stw	r3,20(sp)
   49b60:	003db906 	br	49248 <_gp+0xfffec100>
   49b64:	89400117 	ldw	r5,4(r17)
   49b68:	e009883a 	mov	r4,fp
   49b6c:	004bf7c0 	call	4bf7c <_Balloc>
   49b70:	89800417 	ldw	r6,16(r17)
   49b74:	89400304 	addi	r5,r17,12
   49b78:	11000304 	addi	r4,r2,12
   49b7c:	31800084 	addi	r6,r6,2
   49b80:	318d883a 	add	r6,r6,r6
   49b84:	318d883a 	add	r6,r6,r6
   49b88:	1027883a 	mov	r19,r2
   49b8c:	004bbb00 	call	4bbb0 <memcpy>
   49b90:	01800044 	movi	r6,1
   49b94:	980b883a 	mov	r5,r19
   49b98:	e009883a 	mov	r4,fp
   49b9c:	004c7b80 	call	4c7b8 <__lshift>
   49ba0:	1029883a 	mov	r20,r2
   49ba4:	003ecc06 	br	496d8 <_gp+0xfffec590>
   49ba8:	00800e44 	movi	r2,57
   49bac:	90809026 	beq	r18,r2,49df0 <_dtoa_r+0x152c>
   49bb0:	92000044 	addi	r8,r18,1
   49bb4:	003f1f06 	br	49834 <_gp+0xfffec6ec>
   49bb8:	9011883a 	mov	r8,r18
   49bbc:	8825883a 	mov	r18,r17
   49bc0:	a023883a 	mov	r17,r20
   49bc4:	003e2906 	br	4946c <_gp+0xfffec324>
   49bc8:	002b883a 	mov	r21,zero
   49bcc:	0023883a 	mov	r17,zero
   49bd0:	003f5406 	br	49924 <_gp+0xfffec7dc>
   49bd4:	61bfffc4 	addi	r6,r12,-1
   49bd8:	300490fa 	slli	r2,r6,3
   49bdc:	00c00174 	movhi	r3,5
   49be0:	18cbeb04 	addi	r3,r3,12204
   49be4:	1885883a 	add	r2,r3,r2
   49be8:	11000017 	ldw	r4,0(r2)
   49bec:	11400117 	ldw	r5,4(r2)
   49bf0:	d8800717 	ldw	r2,28(sp)
   49bf4:	880f883a 	mov	r7,r17
   49bf8:	d9801215 	stw	r6,72(sp)
   49bfc:	800d883a 	mov	r6,r16
   49c00:	db001615 	stw	r12,88(sp)
   49c04:	15c00044 	addi	r23,r2,1
   49c08:	00449600 	call	44960 <__muldf3>
   49c0c:	d9401017 	ldw	r5,64(sp)
   49c10:	d9000f17 	ldw	r4,60(sp)
   49c14:	d8c01515 	stw	r3,84(sp)
   49c18:	d8801415 	stw	r2,80(sp)
   49c1c:	0045ac80 	call	45ac8 <__fixdfsi>
   49c20:	1009883a 	mov	r4,r2
   49c24:	1021883a 	mov	r16,r2
   49c28:	0045b480 	call	45b48 <__floatsidf>
   49c2c:	d9000f17 	ldw	r4,60(sp)
   49c30:	d9401017 	ldw	r5,64(sp)
   49c34:	100d883a 	mov	r6,r2
   49c38:	180f883a 	mov	r7,r3
   49c3c:	00451cc0 	call	451cc <__subdf3>
   49c40:	1829883a 	mov	r20,r3
   49c44:	d8c00717 	ldw	r3,28(sp)
   49c48:	84000c04 	addi	r16,r16,48
   49c4c:	1023883a 	mov	r17,r2
   49c50:	1c000005 	stb	r16,0(r3)
   49c54:	db001617 	ldw	r12,88(sp)
   49c58:	00800044 	movi	r2,1
   49c5c:	60802226 	beq	r12,r2,49ce8 <_dtoa_r+0x1424>
   49c60:	d9c00717 	ldw	r7,28(sp)
   49c64:	8805883a 	mov	r2,r17
   49c68:	b82b883a 	mov	r21,r23
   49c6c:	3b19883a 	add	r12,r7,r12
   49c70:	6023883a 	mov	r17,r12
   49c74:	a007883a 	mov	r3,r20
   49c78:	dc800f15 	stw	r18,60(sp)
   49c7c:	000d883a 	mov	r6,zero
   49c80:	01d00934 	movhi	r7,16420
   49c84:	1009883a 	mov	r4,r2
   49c88:	180b883a 	mov	r5,r3
   49c8c:	00449600 	call	44960 <__muldf3>
   49c90:	180b883a 	mov	r5,r3
   49c94:	1009883a 	mov	r4,r2
   49c98:	1829883a 	mov	r20,r3
   49c9c:	1025883a 	mov	r18,r2
   49ca0:	0045ac80 	call	45ac8 <__fixdfsi>
   49ca4:	1009883a 	mov	r4,r2
   49ca8:	1021883a 	mov	r16,r2
   49cac:	0045b480 	call	45b48 <__floatsidf>
   49cb0:	100d883a 	mov	r6,r2
   49cb4:	180f883a 	mov	r7,r3
   49cb8:	9009883a 	mov	r4,r18
   49cbc:	a00b883a 	mov	r5,r20
   49cc0:	84000c04 	addi	r16,r16,48
   49cc4:	00451cc0 	call	451cc <__subdf3>
   49cc8:	ad400044 	addi	r21,r21,1
   49ccc:	ac3fffc5 	stb	r16,-1(r21)
   49cd0:	ac7fea1e 	bne	r21,r17,49c7c <_gp+0xfffecb34>
   49cd4:	1023883a 	mov	r17,r2
   49cd8:	d8801217 	ldw	r2,72(sp)
   49cdc:	dc800f17 	ldw	r18,60(sp)
   49ce0:	1829883a 	mov	r20,r3
   49ce4:	b8af883a 	add	r23,r23,r2
   49ce8:	d9001417 	ldw	r4,80(sp)
   49cec:	d9401517 	ldw	r5,84(sp)
   49cf0:	000d883a 	mov	r6,zero
   49cf4:	01cff834 	movhi	r7,16352
   49cf8:	00435140 	call	43514 <__adddf3>
   49cfc:	880d883a 	mov	r6,r17
   49d00:	a00f883a 	mov	r7,r20
   49d04:	1009883a 	mov	r4,r2
   49d08:	180b883a 	mov	r5,r3
   49d0c:	004486c0 	call	4486c <__ledf2>
   49d10:	10003e0e 	bge	r2,zero,49e0c <_dtoa_r+0x1548>
   49d14:	d9001317 	ldw	r4,76(sp)
   49d18:	bd3fffc3 	ldbu	r20,-1(r23)
   49d1c:	d9000515 	stw	r4,20(sp)
   49d20:	003d3b06 	br	49210 <_gp+0xfffec0c8>
   49d24:	0027883a 	mov	r19,zero
   49d28:	003f1b06 	br	49998 <_gp+0xfffec850>
   49d2c:	d8800817 	ldw	r2,32(sp)
   49d30:	11e9c83a 	sub	r20,r2,r7
   49d34:	0005883a 	mov	r2,zero
   49d38:	003d5406 	br	4928c <_gp+0xfffec144>
   49d3c:	00800044 	movi	r2,1
   49d40:	003dc706 	br	49460 <_gp+0xfffec318>
   49d44:	d8c00217 	ldw	r3,8(sp)
   49d48:	00800d84 	movi	r2,54
   49d4c:	dd400a17 	ldw	r21,40(sp)
   49d50:	10c5c83a 	sub	r2,r2,r3
   49d54:	dd000817 	ldw	r20,32(sp)
   49d58:	003d4c06 	br	4928c <_gp+0xfffec144>
   49d5c:	dc800f15 	stw	r18,60(sp)
   49d60:	dcc01015 	stw	r19,64(sp)
   49d64:	04000084 	movi	r16,2
   49d68:	003bed06 	br	48d20 <_gp+0xfffebbd8>
   49d6c:	d9000617 	ldw	r4,24(sp)
   49d70:	203f0d26 	beq	r4,zero,499a8 <_gp+0xfffec860>
   49d74:	d9800c17 	ldw	r6,48(sp)
   49d78:	01bcab0e 	bge	zero,r6,49028 <_gp+0xfffebee0>
   49d7c:	d9401017 	ldw	r5,64(sp)
   49d80:	d9000f17 	ldw	r4,60(sp)
   49d84:	000d883a 	mov	r6,zero
   49d88:	01d00934 	movhi	r7,16420
   49d8c:	00449600 	call	44960 <__muldf3>
   49d90:	81000044 	addi	r4,r16,1
   49d94:	d8800f15 	stw	r2,60(sp)
   49d98:	d8c01015 	stw	r3,64(sp)
   49d9c:	0045b480 	call	45b48 <__floatsidf>
   49da0:	d9800f17 	ldw	r6,60(sp)
   49da4:	d9c01017 	ldw	r7,64(sp)
   49da8:	1009883a 	mov	r4,r2
   49dac:	180b883a 	mov	r5,r3
   49db0:	00449600 	call	44960 <__muldf3>
   49db4:	01d00734 	movhi	r7,16412
   49db8:	000d883a 	mov	r6,zero
   49dbc:	1009883a 	mov	r4,r2
   49dc0:	180b883a 	mov	r5,r3
   49dc4:	00435140 	call	43514 <__adddf3>
   49dc8:	d9c00517 	ldw	r7,20(sp)
   49dcc:	047f3034 	movhi	r17,64704
   49dd0:	1021883a 	mov	r16,r2
   49dd4:	39ffffc4 	addi	r7,r7,-1
   49dd8:	d9c01315 	stw	r7,76(sp)
   49ddc:	1c63883a 	add	r17,r3,r17
   49de0:	db000c17 	ldw	r12,48(sp)
   49de4:	003bea06 	br	48d90 <_gp+0xfffebc48>
   49de8:	dc000915 	stw	r16,36(sp)
   49dec:	003e0e06 	br	49628 <_gp+0xfffec4e0>
   49df0:	01000e44 	movi	r4,57
   49df4:	8825883a 	mov	r18,r17
   49df8:	9dc00044 	addi	r23,r19,1
   49dfc:	99000005 	stb	r4,0(r19)
   49e00:	a023883a 	mov	r17,r20
   49e04:	dc000915 	stw	r16,36(sp)
   49e08:	003da406 	br	4949c <_gp+0xfffec354>
   49e0c:	d9801417 	ldw	r6,80(sp)
   49e10:	d9c01517 	ldw	r7,84(sp)
   49e14:	0009883a 	mov	r4,zero
   49e18:	014ff834 	movhi	r5,16352
   49e1c:	00451cc0 	call	451cc <__subdf3>
   49e20:	880d883a 	mov	r6,r17
   49e24:	a00f883a 	mov	r7,r20
   49e28:	1009883a 	mov	r4,r2
   49e2c:	180b883a 	mov	r5,r3
   49e30:	00447900 	call	44790 <__gedf2>
   49e34:	00bc7c0e 	bge	zero,r2,49028 <_gp+0xfffebee0>
   49e38:	01000c04 	movi	r4,48
   49e3c:	00000106 	br	49e44 <_dtoa_r+0x1580>
   49e40:	102f883a 	mov	r23,r2
   49e44:	b8bfffc4 	addi	r2,r23,-1
   49e48:	10c00007 	ldb	r3,0(r2)
   49e4c:	193ffc26 	beq	r3,r4,49e40 <_gp+0xfffeccf8>
   49e50:	d9801317 	ldw	r6,76(sp)
   49e54:	d9800515 	stw	r6,20(sp)
   49e58:	003c4406 	br	48f6c <_gp+0xfffebe24>
   49e5c:	d9801317 	ldw	r6,76(sp)
   49e60:	d9800515 	stw	r6,20(sp)
   49e64:	003cea06 	br	49210 <_gp+0xfffec0c8>
   49e68:	dd800f17 	ldw	r22,60(sp)
   49e6c:	dcc01017 	ldw	r19,64(sp)
   49e70:	dc801217 	ldw	r18,72(sp)
   49e74:	003c6c06 	br	49028 <_gp+0xfffebee0>
   49e78:	903e031e 	bne	r18,zero,49688 <_gp+0xfffec540>
   49e7c:	003ebb06 	br	4996c <_gp+0xfffec824>
   49e80:	103e6c1e 	bne	r2,zero,49834 <_gp+0xfffec6ec>
   49e84:	4080004c 	andi	r2,r8,1
   49e88:	103e6a26 	beq	r2,zero,49834 <_gp+0xfffec6ec>
   49e8c:	003e6606 	br	49828 <_gp+0xfffec6e0>
   49e90:	d8c00317 	ldw	r3,12(sp)
   49e94:	00800084 	movi	r2,2
   49e98:	10c02916 	blt	r2,r3,49f40 <_dtoa_r+0x167c>
   49e9c:	d9000c17 	ldw	r4,48(sp)
   49ea0:	003e8806 	br	498c4 <_gp+0xfffec77c>
   49ea4:	04000084 	movi	r16,2
   49ea8:	003b9d06 	br	48d20 <_gp+0xfffebbd8>
   49eac:	d9001317 	ldw	r4,76(sp)
   49eb0:	d9000515 	stw	r4,20(sp)
   49eb4:	003cd606 	br	49210 <_gp+0xfffec0c8>
   49eb8:	d8801317 	ldw	r2,76(sp)
   49ebc:	d8800515 	stw	r2,20(sp)
   49ec0:	003c2a06 	br	48f6c <_gp+0xfffebe24>
   49ec4:	d9800317 	ldw	r6,12(sp)
   49ec8:	00800084 	movi	r2,2
   49ecc:	11801516 	blt	r2,r6,49f24 <_dtoa_r+0x1660>
   49ed0:	d9c00c17 	ldw	r7,48(sp)
   49ed4:	d9c00615 	stw	r7,24(sp)
   49ed8:	003df706 	br	496b8 <_gp+0xfffec570>
   49edc:	193d3926 	beq	r3,r4,493c4 <_gp+0xfffec27c>
   49ee0:	00c00f04 	movi	r3,60
   49ee4:	1885c83a 	sub	r2,r3,r2
   49ee8:	003ddf06 	br	49668 <_gp+0xfffec520>
   49eec:	e009883a 	mov	r4,fp
   49ef0:	e0001115 	stw	zero,68(fp)
   49ef4:	000b883a 	mov	r5,zero
   49ef8:	004bf7c0 	call	4bf7c <_Balloc>
   49efc:	d8800715 	stw	r2,28(sp)
   49f00:	d8c00717 	ldw	r3,28(sp)
   49f04:	00bfffc4 	movi	r2,-1
   49f08:	01000044 	movi	r4,1
   49f0c:	d8800c15 	stw	r2,48(sp)
   49f10:	e0c01015 	stw	r3,64(fp)
   49f14:	d9000b15 	stw	r4,44(sp)
   49f18:	d8800615 	stw	r2,24(sp)
   49f1c:	d8002215 	stw	zero,136(sp)
   49f20:	003c4106 	br	49028 <_gp+0xfffebee0>
   49f24:	d8c00c17 	ldw	r3,48(sp)
   49f28:	d8c00615 	stw	r3,24(sp)
   49f2c:	003e7006 	br	498f0 <_gp+0xfffec7a8>
   49f30:	04400044 	movi	r17,1
   49f34:	003b2006 	br	48bb8 <_gp+0xfffeba70>
   49f38:	000b883a 	mov	r5,zero
   49f3c:	003b3d06 	br	48c34 <_gp+0xfffebaec>
   49f40:	d8800c17 	ldw	r2,48(sp)
   49f44:	d8800615 	stw	r2,24(sp)
   49f48:	003e6906 	br	498f0 <_gp+0xfffec7a8>

00049f4c <__sflush_r>:
   49f4c:	2880030b 	ldhu	r2,12(r5)
   49f50:	defffb04 	addi	sp,sp,-20
   49f54:	dcc00315 	stw	r19,12(sp)
   49f58:	dc400115 	stw	r17,4(sp)
   49f5c:	dfc00415 	stw	ra,16(sp)
   49f60:	dc800215 	stw	r18,8(sp)
   49f64:	dc000015 	stw	r16,0(sp)
   49f68:	10c0020c 	andi	r3,r2,8
   49f6c:	2823883a 	mov	r17,r5
   49f70:	2027883a 	mov	r19,r4
   49f74:	1800311e 	bne	r3,zero,4a03c <__sflush_r+0xf0>
   49f78:	28c00117 	ldw	r3,4(r5)
   49f7c:	10820014 	ori	r2,r2,2048
   49f80:	2880030d 	sth	r2,12(r5)
   49f84:	00c04b0e 	bge	zero,r3,4a0b4 <__sflush_r+0x168>
   49f88:	8a000a17 	ldw	r8,40(r17)
   49f8c:	40002326 	beq	r8,zero,4a01c <__sflush_r+0xd0>
   49f90:	9c000017 	ldw	r16,0(r19)
   49f94:	10c4000c 	andi	r3,r2,4096
   49f98:	98000015 	stw	zero,0(r19)
   49f9c:	18004826 	beq	r3,zero,4a0c0 <__sflush_r+0x174>
   49fa0:	89801417 	ldw	r6,80(r17)
   49fa4:	10c0010c 	andi	r3,r2,4
   49fa8:	18000626 	beq	r3,zero,49fc4 <__sflush_r+0x78>
   49fac:	88c00117 	ldw	r3,4(r17)
   49fb0:	88800c17 	ldw	r2,48(r17)
   49fb4:	30cdc83a 	sub	r6,r6,r3
   49fb8:	10000226 	beq	r2,zero,49fc4 <__sflush_r+0x78>
   49fbc:	88800f17 	ldw	r2,60(r17)
   49fc0:	308dc83a 	sub	r6,r6,r2
   49fc4:	89400717 	ldw	r5,28(r17)
   49fc8:	000f883a 	mov	r7,zero
   49fcc:	9809883a 	mov	r4,r19
   49fd0:	403ee83a 	callr	r8
   49fd4:	00ffffc4 	movi	r3,-1
   49fd8:	10c04426 	beq	r2,r3,4a0ec <__sflush_r+0x1a0>
   49fdc:	88c0030b 	ldhu	r3,12(r17)
   49fe0:	89000417 	ldw	r4,16(r17)
   49fe4:	88000115 	stw	zero,4(r17)
   49fe8:	197dffcc 	andi	r5,r3,63487
   49fec:	8940030d 	sth	r5,12(r17)
   49ff0:	89000015 	stw	r4,0(r17)
   49ff4:	18c4000c 	andi	r3,r3,4096
   49ff8:	18002c1e 	bne	r3,zero,4a0ac <__sflush_r+0x160>
   49ffc:	89400c17 	ldw	r5,48(r17)
   4a000:	9c000015 	stw	r16,0(r19)
   4a004:	28000526 	beq	r5,zero,4a01c <__sflush_r+0xd0>
   4a008:	88801004 	addi	r2,r17,64
   4a00c:	28800226 	beq	r5,r2,4a018 <__sflush_r+0xcc>
   4a010:	9809883a 	mov	r4,r19
   4a014:	004a6c80 	call	4a6c8 <_free_r>
   4a018:	88000c15 	stw	zero,48(r17)
   4a01c:	0005883a 	mov	r2,zero
   4a020:	dfc00417 	ldw	ra,16(sp)
   4a024:	dcc00317 	ldw	r19,12(sp)
   4a028:	dc800217 	ldw	r18,8(sp)
   4a02c:	dc400117 	ldw	r17,4(sp)
   4a030:	dc000017 	ldw	r16,0(sp)
   4a034:	dec00504 	addi	sp,sp,20
   4a038:	f800283a 	ret
   4a03c:	2c800417 	ldw	r18,16(r5)
   4a040:	903ff626 	beq	r18,zero,4a01c <_gp+0xfffeced4>
   4a044:	2c000017 	ldw	r16,0(r5)
   4a048:	108000cc 	andi	r2,r2,3
   4a04c:	2c800015 	stw	r18,0(r5)
   4a050:	84a1c83a 	sub	r16,r16,r18
   4a054:	1000131e 	bne	r2,zero,4a0a4 <__sflush_r+0x158>
   4a058:	28800517 	ldw	r2,20(r5)
   4a05c:	88800215 	stw	r2,8(r17)
   4a060:	04000316 	blt	zero,r16,4a070 <__sflush_r+0x124>
   4a064:	003fed06 	br	4a01c <_gp+0xfffeced4>
   4a068:	90a5883a 	add	r18,r18,r2
   4a06c:	043feb0e 	bge	zero,r16,4a01c <_gp+0xfffeced4>
   4a070:	88800917 	ldw	r2,36(r17)
   4a074:	89400717 	ldw	r5,28(r17)
   4a078:	800f883a 	mov	r7,r16
   4a07c:	900d883a 	mov	r6,r18
   4a080:	9809883a 	mov	r4,r19
   4a084:	103ee83a 	callr	r2
   4a088:	80a1c83a 	sub	r16,r16,r2
   4a08c:	00bff616 	blt	zero,r2,4a068 <_gp+0xfffecf20>
   4a090:	88c0030b 	ldhu	r3,12(r17)
   4a094:	00bfffc4 	movi	r2,-1
   4a098:	18c01014 	ori	r3,r3,64
   4a09c:	88c0030d 	sth	r3,12(r17)
   4a0a0:	003fdf06 	br	4a020 <_gp+0xfffeced8>
   4a0a4:	0005883a 	mov	r2,zero
   4a0a8:	003fec06 	br	4a05c <_gp+0xfffecf14>
   4a0ac:	88801415 	stw	r2,80(r17)
   4a0b0:	003fd206 	br	49ffc <_gp+0xfffeceb4>
   4a0b4:	28c00f17 	ldw	r3,60(r5)
   4a0b8:	00ffb316 	blt	zero,r3,49f88 <_gp+0xfffece40>
   4a0bc:	003fd706 	br	4a01c <_gp+0xfffeced4>
   4a0c0:	89400717 	ldw	r5,28(r17)
   4a0c4:	000d883a 	mov	r6,zero
   4a0c8:	01c00044 	movi	r7,1
   4a0cc:	9809883a 	mov	r4,r19
   4a0d0:	403ee83a 	callr	r8
   4a0d4:	100d883a 	mov	r6,r2
   4a0d8:	00bfffc4 	movi	r2,-1
   4a0dc:	30801426 	beq	r6,r2,4a130 <__sflush_r+0x1e4>
   4a0e0:	8880030b 	ldhu	r2,12(r17)
   4a0e4:	8a000a17 	ldw	r8,40(r17)
   4a0e8:	003fae06 	br	49fa4 <_gp+0xfffece5c>
   4a0ec:	98c00017 	ldw	r3,0(r19)
   4a0f0:	183fba26 	beq	r3,zero,49fdc <_gp+0xfffece94>
   4a0f4:	01000744 	movi	r4,29
   4a0f8:	19000626 	beq	r3,r4,4a114 <__sflush_r+0x1c8>
   4a0fc:	01000584 	movi	r4,22
   4a100:	19000426 	beq	r3,r4,4a114 <__sflush_r+0x1c8>
   4a104:	88c0030b 	ldhu	r3,12(r17)
   4a108:	18c01014 	ori	r3,r3,64
   4a10c:	88c0030d 	sth	r3,12(r17)
   4a110:	003fc306 	br	4a020 <_gp+0xfffeced8>
   4a114:	8880030b 	ldhu	r2,12(r17)
   4a118:	88c00417 	ldw	r3,16(r17)
   4a11c:	88000115 	stw	zero,4(r17)
   4a120:	10bdffcc 	andi	r2,r2,63487
   4a124:	8880030d 	sth	r2,12(r17)
   4a128:	88c00015 	stw	r3,0(r17)
   4a12c:	003fb306 	br	49ffc <_gp+0xfffeceb4>
   4a130:	98800017 	ldw	r2,0(r19)
   4a134:	103fea26 	beq	r2,zero,4a0e0 <_gp+0xfffecf98>
   4a138:	00c00744 	movi	r3,29
   4a13c:	10c00226 	beq	r2,r3,4a148 <__sflush_r+0x1fc>
   4a140:	00c00584 	movi	r3,22
   4a144:	10c0031e 	bne	r2,r3,4a154 <__sflush_r+0x208>
   4a148:	9c000015 	stw	r16,0(r19)
   4a14c:	0005883a 	mov	r2,zero
   4a150:	003fb306 	br	4a020 <_gp+0xfffeced8>
   4a154:	88c0030b 	ldhu	r3,12(r17)
   4a158:	3005883a 	mov	r2,r6
   4a15c:	18c01014 	ori	r3,r3,64
   4a160:	88c0030d 	sth	r3,12(r17)
   4a164:	003fae06 	br	4a020 <_gp+0xfffeced8>

0004a168 <_fflush_r>:
   4a168:	defffd04 	addi	sp,sp,-12
   4a16c:	dc000115 	stw	r16,4(sp)
   4a170:	dfc00215 	stw	ra,8(sp)
   4a174:	2021883a 	mov	r16,r4
   4a178:	20000226 	beq	r4,zero,4a184 <_fflush_r+0x1c>
   4a17c:	20800e17 	ldw	r2,56(r4)
   4a180:	10000c26 	beq	r2,zero,4a1b4 <_fflush_r+0x4c>
   4a184:	2880030f 	ldh	r2,12(r5)
   4a188:	1000051e 	bne	r2,zero,4a1a0 <_fflush_r+0x38>
   4a18c:	0005883a 	mov	r2,zero
   4a190:	dfc00217 	ldw	ra,8(sp)
   4a194:	dc000117 	ldw	r16,4(sp)
   4a198:	dec00304 	addi	sp,sp,12
   4a19c:	f800283a 	ret
   4a1a0:	8009883a 	mov	r4,r16
   4a1a4:	dfc00217 	ldw	ra,8(sp)
   4a1a8:	dc000117 	ldw	r16,4(sp)
   4a1ac:	dec00304 	addi	sp,sp,12
   4a1b0:	0049f4c1 	jmpi	49f4c <__sflush_r>
   4a1b4:	d9400015 	stw	r5,0(sp)
   4a1b8:	004a5540 	call	4a554 <__sinit>
   4a1bc:	d9400017 	ldw	r5,0(sp)
   4a1c0:	003ff006 	br	4a184 <_gp+0xfffed03c>

0004a1c4 <fflush>:
   4a1c4:	20000526 	beq	r4,zero,4a1dc <fflush+0x18>
   4a1c8:	00800174 	movhi	r2,5
   4a1cc:	10945404 	addi	r2,r2,20816
   4a1d0:	200b883a 	mov	r5,r4
   4a1d4:	11000017 	ldw	r4,0(r2)
   4a1d8:	004a1681 	jmpi	4a168 <_fflush_r>
   4a1dc:	00800174 	movhi	r2,5
   4a1e0:	10945304 	addi	r2,r2,20812
   4a1e4:	11000017 	ldw	r4,0(r2)
   4a1e8:	01400174 	movhi	r5,5
   4a1ec:	29685a04 	addi	r5,r5,-24216
   4a1f0:	004af641 	jmpi	4af64 <_fwalk_reent>

0004a1f4 <__fp_unlock>:
   4a1f4:	0005883a 	mov	r2,zero
   4a1f8:	f800283a 	ret

0004a1fc <_cleanup_r>:
   4a1fc:	01400174 	movhi	r5,5
   4a200:	297c4004 	addi	r5,r5,-3840
   4a204:	004af641 	jmpi	4af64 <_fwalk_reent>

0004a208 <__sinit.part.1>:
   4a208:	defff704 	addi	sp,sp,-36
   4a20c:	00c00174 	movhi	r3,5
   4a210:	dfc00815 	stw	ra,32(sp)
   4a214:	ddc00715 	stw	r23,28(sp)
   4a218:	dd800615 	stw	r22,24(sp)
   4a21c:	dd400515 	stw	r21,20(sp)
   4a220:	dd000415 	stw	r20,16(sp)
   4a224:	dcc00315 	stw	r19,12(sp)
   4a228:	dc800215 	stw	r18,8(sp)
   4a22c:	dc400115 	stw	r17,4(sp)
   4a230:	dc000015 	stw	r16,0(sp)
   4a234:	18e87f04 	addi	r3,r3,-24068
   4a238:	24000117 	ldw	r16,4(r4)
   4a23c:	20c00f15 	stw	r3,60(r4)
   4a240:	2080bb04 	addi	r2,r4,748
   4a244:	00c000c4 	movi	r3,3
   4a248:	20c0b915 	stw	r3,740(r4)
   4a24c:	2080ba15 	stw	r2,744(r4)
   4a250:	2000b815 	stw	zero,736(r4)
   4a254:	05c00204 	movi	r23,8
   4a258:	00800104 	movi	r2,4
   4a25c:	2025883a 	mov	r18,r4
   4a260:	b80d883a 	mov	r6,r23
   4a264:	81001704 	addi	r4,r16,92
   4a268:	000b883a 	mov	r5,zero
   4a26c:	80000015 	stw	zero,0(r16)
   4a270:	80000115 	stw	zero,4(r16)
   4a274:	80000215 	stw	zero,8(r16)
   4a278:	8080030d 	sth	r2,12(r16)
   4a27c:	80001915 	stw	zero,100(r16)
   4a280:	8000038d 	sth	zero,14(r16)
   4a284:	80000415 	stw	zero,16(r16)
   4a288:	80000515 	stw	zero,20(r16)
   4a28c:	80000615 	stw	zero,24(r16)
   4a290:	004be540 	call	4be54 <memset>
   4a294:	05800174 	movhi	r22,5
   4a298:	94400217 	ldw	r17,8(r18)
   4a29c:	05400174 	movhi	r21,5
   4a2a0:	05000174 	movhi	r20,5
   4a2a4:	04c00174 	movhi	r19,5
   4a2a8:	b5b59804 	addi	r22,r22,-10656
   4a2ac:	ad75af04 	addi	r21,r21,-10564
   4a2b0:	a535ce04 	addi	r20,r20,-10440
   4a2b4:	9cf5e504 	addi	r19,r19,-10348
   4a2b8:	85800815 	stw	r22,32(r16)
   4a2bc:	85400915 	stw	r21,36(r16)
   4a2c0:	85000a15 	stw	r20,40(r16)
   4a2c4:	84c00b15 	stw	r19,44(r16)
   4a2c8:	84000715 	stw	r16,28(r16)
   4a2cc:	00800284 	movi	r2,10
   4a2d0:	8880030d 	sth	r2,12(r17)
   4a2d4:	00800044 	movi	r2,1
   4a2d8:	b80d883a 	mov	r6,r23
   4a2dc:	89001704 	addi	r4,r17,92
   4a2e0:	000b883a 	mov	r5,zero
   4a2e4:	88000015 	stw	zero,0(r17)
   4a2e8:	88000115 	stw	zero,4(r17)
   4a2ec:	88000215 	stw	zero,8(r17)
   4a2f0:	88001915 	stw	zero,100(r17)
   4a2f4:	8880038d 	sth	r2,14(r17)
   4a2f8:	88000415 	stw	zero,16(r17)
   4a2fc:	88000515 	stw	zero,20(r17)
   4a300:	88000615 	stw	zero,24(r17)
   4a304:	004be540 	call	4be54 <memset>
   4a308:	94000317 	ldw	r16,12(r18)
   4a30c:	00800484 	movi	r2,18
   4a310:	8c400715 	stw	r17,28(r17)
   4a314:	8d800815 	stw	r22,32(r17)
   4a318:	8d400915 	stw	r21,36(r17)
   4a31c:	8d000a15 	stw	r20,40(r17)
   4a320:	8cc00b15 	stw	r19,44(r17)
   4a324:	8080030d 	sth	r2,12(r16)
   4a328:	00800084 	movi	r2,2
   4a32c:	80000015 	stw	zero,0(r16)
   4a330:	80000115 	stw	zero,4(r16)
   4a334:	80000215 	stw	zero,8(r16)
   4a338:	80001915 	stw	zero,100(r16)
   4a33c:	8080038d 	sth	r2,14(r16)
   4a340:	80000415 	stw	zero,16(r16)
   4a344:	80000515 	stw	zero,20(r16)
   4a348:	80000615 	stw	zero,24(r16)
   4a34c:	b80d883a 	mov	r6,r23
   4a350:	000b883a 	mov	r5,zero
   4a354:	81001704 	addi	r4,r16,92
   4a358:	004be540 	call	4be54 <memset>
   4a35c:	00800044 	movi	r2,1
   4a360:	84000715 	stw	r16,28(r16)
   4a364:	85800815 	stw	r22,32(r16)
   4a368:	85400915 	stw	r21,36(r16)
   4a36c:	85000a15 	stw	r20,40(r16)
   4a370:	84c00b15 	stw	r19,44(r16)
   4a374:	90800e15 	stw	r2,56(r18)
   4a378:	dfc00817 	ldw	ra,32(sp)
   4a37c:	ddc00717 	ldw	r23,28(sp)
   4a380:	dd800617 	ldw	r22,24(sp)
   4a384:	dd400517 	ldw	r21,20(sp)
   4a388:	dd000417 	ldw	r20,16(sp)
   4a38c:	dcc00317 	ldw	r19,12(sp)
   4a390:	dc800217 	ldw	r18,8(sp)
   4a394:	dc400117 	ldw	r17,4(sp)
   4a398:	dc000017 	ldw	r16,0(sp)
   4a39c:	dec00904 	addi	sp,sp,36
   4a3a0:	f800283a 	ret

0004a3a4 <__fp_lock>:
   4a3a4:	0005883a 	mov	r2,zero
   4a3a8:	f800283a 	ret

0004a3ac <__sfmoreglue>:
   4a3ac:	defffc04 	addi	sp,sp,-16
   4a3b0:	dc800215 	stw	r18,8(sp)
   4a3b4:	2825883a 	mov	r18,r5
   4a3b8:	dc000015 	stw	r16,0(sp)
   4a3bc:	01401a04 	movi	r5,104
   4a3c0:	2021883a 	mov	r16,r4
   4a3c4:	913fffc4 	addi	r4,r18,-1
   4a3c8:	dfc00315 	stw	ra,12(sp)
   4a3cc:	dc400115 	stw	r17,4(sp)
   4a3d0:	0041f400 	call	41f40 <__mulsi3>
   4a3d4:	8009883a 	mov	r4,r16
   4a3d8:	11401d04 	addi	r5,r2,116
   4a3dc:	1023883a 	mov	r17,r2
   4a3e0:	004b2c00 	call	4b2c0 <_malloc_r>
   4a3e4:	1021883a 	mov	r16,r2
   4a3e8:	10000726 	beq	r2,zero,4a408 <__sfmoreglue+0x5c>
   4a3ec:	11000304 	addi	r4,r2,12
   4a3f0:	10000015 	stw	zero,0(r2)
   4a3f4:	14800115 	stw	r18,4(r2)
   4a3f8:	11000215 	stw	r4,8(r2)
   4a3fc:	89801a04 	addi	r6,r17,104
   4a400:	000b883a 	mov	r5,zero
   4a404:	004be540 	call	4be54 <memset>
   4a408:	8005883a 	mov	r2,r16
   4a40c:	dfc00317 	ldw	ra,12(sp)
   4a410:	dc800217 	ldw	r18,8(sp)
   4a414:	dc400117 	ldw	r17,4(sp)
   4a418:	dc000017 	ldw	r16,0(sp)
   4a41c:	dec00404 	addi	sp,sp,16
   4a420:	f800283a 	ret

0004a424 <__sfp>:
   4a424:	defffb04 	addi	sp,sp,-20
   4a428:	dc000015 	stw	r16,0(sp)
   4a42c:	04000174 	movhi	r16,5
   4a430:	84145304 	addi	r16,r16,20812
   4a434:	dcc00315 	stw	r19,12(sp)
   4a438:	2027883a 	mov	r19,r4
   4a43c:	81000017 	ldw	r4,0(r16)
   4a440:	dfc00415 	stw	ra,16(sp)
   4a444:	dc800215 	stw	r18,8(sp)
   4a448:	20800e17 	ldw	r2,56(r4)
   4a44c:	dc400115 	stw	r17,4(sp)
   4a450:	1000021e 	bne	r2,zero,4a45c <__sfp+0x38>
   4a454:	004a2080 	call	4a208 <__sinit.part.1>
   4a458:	81000017 	ldw	r4,0(r16)
   4a45c:	2480b804 	addi	r18,r4,736
   4a460:	047fffc4 	movi	r17,-1
   4a464:	91000117 	ldw	r4,4(r18)
   4a468:	94000217 	ldw	r16,8(r18)
   4a46c:	213fffc4 	addi	r4,r4,-1
   4a470:	20000a16 	blt	r4,zero,4a49c <__sfp+0x78>
   4a474:	8080030f 	ldh	r2,12(r16)
   4a478:	10000c26 	beq	r2,zero,4a4ac <__sfp+0x88>
   4a47c:	80c01d04 	addi	r3,r16,116
   4a480:	00000206 	br	4a48c <__sfp+0x68>
   4a484:	18bfe60f 	ldh	r2,-104(r3)
   4a488:	10000826 	beq	r2,zero,4a4ac <__sfp+0x88>
   4a48c:	213fffc4 	addi	r4,r4,-1
   4a490:	1c3ffd04 	addi	r16,r3,-12
   4a494:	18c01a04 	addi	r3,r3,104
   4a498:	247ffa1e 	bne	r4,r17,4a484 <_gp+0xfffed33c>
   4a49c:	90800017 	ldw	r2,0(r18)
   4a4a0:	10001d26 	beq	r2,zero,4a518 <__sfp+0xf4>
   4a4a4:	1025883a 	mov	r18,r2
   4a4a8:	003fee06 	br	4a464 <_gp+0xfffed31c>
   4a4ac:	00bfffc4 	movi	r2,-1
   4a4b0:	8080038d 	sth	r2,14(r16)
   4a4b4:	00800044 	movi	r2,1
   4a4b8:	8080030d 	sth	r2,12(r16)
   4a4bc:	80001915 	stw	zero,100(r16)
   4a4c0:	80000015 	stw	zero,0(r16)
   4a4c4:	80000215 	stw	zero,8(r16)
   4a4c8:	80000115 	stw	zero,4(r16)
   4a4cc:	80000415 	stw	zero,16(r16)
   4a4d0:	80000515 	stw	zero,20(r16)
   4a4d4:	80000615 	stw	zero,24(r16)
   4a4d8:	01800204 	movi	r6,8
   4a4dc:	000b883a 	mov	r5,zero
   4a4e0:	81001704 	addi	r4,r16,92
   4a4e4:	004be540 	call	4be54 <memset>
   4a4e8:	8005883a 	mov	r2,r16
   4a4ec:	80000c15 	stw	zero,48(r16)
   4a4f0:	80000d15 	stw	zero,52(r16)
   4a4f4:	80001115 	stw	zero,68(r16)
   4a4f8:	80001215 	stw	zero,72(r16)
   4a4fc:	dfc00417 	ldw	ra,16(sp)
   4a500:	dcc00317 	ldw	r19,12(sp)
   4a504:	dc800217 	ldw	r18,8(sp)
   4a508:	dc400117 	ldw	r17,4(sp)
   4a50c:	dc000017 	ldw	r16,0(sp)
   4a510:	dec00504 	addi	sp,sp,20
   4a514:	f800283a 	ret
   4a518:	01400104 	movi	r5,4
   4a51c:	9809883a 	mov	r4,r19
   4a520:	004a3ac0 	call	4a3ac <__sfmoreglue>
   4a524:	90800015 	stw	r2,0(r18)
   4a528:	103fde1e 	bne	r2,zero,4a4a4 <_gp+0xfffed35c>
   4a52c:	00800304 	movi	r2,12
   4a530:	98800015 	stw	r2,0(r19)
   4a534:	0005883a 	mov	r2,zero
   4a538:	003ff006 	br	4a4fc <_gp+0xfffed3b4>

0004a53c <_cleanup>:
   4a53c:	00800174 	movhi	r2,5
   4a540:	10945304 	addi	r2,r2,20812
   4a544:	11000017 	ldw	r4,0(r2)
   4a548:	01400174 	movhi	r5,5
   4a54c:	297c4004 	addi	r5,r5,-3840
   4a550:	004af641 	jmpi	4af64 <_fwalk_reent>

0004a554 <__sinit>:
   4a554:	20800e17 	ldw	r2,56(r4)
   4a558:	10000126 	beq	r2,zero,4a560 <__sinit+0xc>
   4a55c:	f800283a 	ret
   4a560:	004a2081 	jmpi	4a208 <__sinit.part.1>

0004a564 <__sfp_lock_acquire>:
   4a564:	f800283a 	ret

0004a568 <__sfp_lock_release>:
   4a568:	f800283a 	ret

0004a56c <__sinit_lock_acquire>:
   4a56c:	f800283a 	ret

0004a570 <__sinit_lock_release>:
   4a570:	f800283a 	ret

0004a574 <__fp_lock_all>:
   4a574:	00800174 	movhi	r2,5
   4a578:	10945404 	addi	r2,r2,20816
   4a57c:	11000017 	ldw	r4,0(r2)
   4a580:	01400174 	movhi	r5,5
   4a584:	2968e904 	addi	r5,r5,-23644
   4a588:	004aea01 	jmpi	4aea0 <_fwalk>

0004a58c <__fp_unlock_all>:
   4a58c:	00800174 	movhi	r2,5
   4a590:	10945404 	addi	r2,r2,20816
   4a594:	11000017 	ldw	r4,0(r2)
   4a598:	01400174 	movhi	r5,5
   4a59c:	29687d04 	addi	r5,r5,-24076
   4a5a0:	004aea01 	jmpi	4aea0 <_fwalk>

0004a5a4 <_malloc_trim_r>:
   4a5a4:	defffb04 	addi	sp,sp,-20
   4a5a8:	dcc00315 	stw	r19,12(sp)
   4a5ac:	04c00174 	movhi	r19,5
   4a5b0:	dc800215 	stw	r18,8(sp)
   4a5b4:	dc400115 	stw	r17,4(sp)
   4a5b8:	dc000015 	stw	r16,0(sp)
   4a5bc:	dfc00415 	stw	ra,16(sp)
   4a5c0:	2821883a 	mov	r16,r5
   4a5c4:	9ccece04 	addi	r19,r19,15160
   4a5c8:	2025883a 	mov	r18,r4
   4a5cc:	0050c540 	call	50c54 <__malloc_lock>
   4a5d0:	98800217 	ldw	r2,8(r19)
   4a5d4:	14400117 	ldw	r17,4(r2)
   4a5d8:	00bfff04 	movi	r2,-4
   4a5dc:	88a2703a 	and	r17,r17,r2
   4a5e0:	8c21c83a 	sub	r16,r17,r16
   4a5e4:	8403fbc4 	addi	r16,r16,4079
   4a5e8:	8020d33a 	srli	r16,r16,12
   4a5ec:	0083ffc4 	movi	r2,4095
   4a5f0:	843fffc4 	addi	r16,r16,-1
   4a5f4:	8020933a 	slli	r16,r16,12
   4a5f8:	1400060e 	bge	r2,r16,4a614 <_malloc_trim_r+0x70>
   4a5fc:	000b883a 	mov	r5,zero
   4a600:	9009883a 	mov	r4,r18
   4a604:	004d60c0 	call	4d60c <_sbrk_r>
   4a608:	98c00217 	ldw	r3,8(r19)
   4a60c:	1c47883a 	add	r3,r3,r17
   4a610:	10c00a26 	beq	r2,r3,4a63c <_malloc_trim_r+0x98>
   4a614:	9009883a 	mov	r4,r18
   4a618:	0050c780 	call	50c78 <__malloc_unlock>
   4a61c:	0005883a 	mov	r2,zero
   4a620:	dfc00417 	ldw	ra,16(sp)
   4a624:	dcc00317 	ldw	r19,12(sp)
   4a628:	dc800217 	ldw	r18,8(sp)
   4a62c:	dc400117 	ldw	r17,4(sp)
   4a630:	dc000017 	ldw	r16,0(sp)
   4a634:	dec00504 	addi	sp,sp,20
   4a638:	f800283a 	ret
   4a63c:	040bc83a 	sub	r5,zero,r16
   4a640:	9009883a 	mov	r4,r18
   4a644:	004d60c0 	call	4d60c <_sbrk_r>
   4a648:	00ffffc4 	movi	r3,-1
   4a64c:	10c00d26 	beq	r2,r3,4a684 <_malloc_trim_r+0xe0>
   4a650:	00c00174 	movhi	r3,5
   4a654:	18dca404 	addi	r3,r3,29328
   4a658:	18800017 	ldw	r2,0(r3)
   4a65c:	99000217 	ldw	r4,8(r19)
   4a660:	8c23c83a 	sub	r17,r17,r16
   4a664:	8c400054 	ori	r17,r17,1
   4a668:	1421c83a 	sub	r16,r2,r16
   4a66c:	24400115 	stw	r17,4(r4)
   4a670:	9009883a 	mov	r4,r18
   4a674:	1c000015 	stw	r16,0(r3)
   4a678:	0050c780 	call	50c78 <__malloc_unlock>
   4a67c:	00800044 	movi	r2,1
   4a680:	003fe706 	br	4a620 <_gp+0xfffed4d8>
   4a684:	000b883a 	mov	r5,zero
   4a688:	9009883a 	mov	r4,r18
   4a68c:	004d60c0 	call	4d60c <_sbrk_r>
   4a690:	99000217 	ldw	r4,8(r19)
   4a694:	014003c4 	movi	r5,15
   4a698:	1107c83a 	sub	r3,r2,r4
   4a69c:	28ffdd0e 	bge	r5,r3,4a614 <_gp+0xfffed4cc>
   4a6a0:	01400174 	movhi	r5,5
   4a6a4:	29545604 	addi	r5,r5,20824
   4a6a8:	29400017 	ldw	r5,0(r5)
   4a6ac:	18c00054 	ori	r3,r3,1
   4a6b0:	20c00115 	stw	r3,4(r4)
   4a6b4:	00c00174 	movhi	r3,5
   4a6b8:	1145c83a 	sub	r2,r2,r5
   4a6bc:	18dca404 	addi	r3,r3,29328
   4a6c0:	18800015 	stw	r2,0(r3)
   4a6c4:	003fd306 	br	4a614 <_gp+0xfffed4cc>

0004a6c8 <_free_r>:
   4a6c8:	28004126 	beq	r5,zero,4a7d0 <_free_r+0x108>
   4a6cc:	defffd04 	addi	sp,sp,-12
   4a6d0:	dc400115 	stw	r17,4(sp)
   4a6d4:	dc000015 	stw	r16,0(sp)
   4a6d8:	2023883a 	mov	r17,r4
   4a6dc:	2821883a 	mov	r16,r5
   4a6e0:	dfc00215 	stw	ra,8(sp)
   4a6e4:	0050c540 	call	50c54 <__malloc_lock>
   4a6e8:	81ffff17 	ldw	r7,-4(r16)
   4a6ec:	00bfff84 	movi	r2,-2
   4a6f0:	01000174 	movhi	r4,5
   4a6f4:	81bffe04 	addi	r6,r16,-8
   4a6f8:	3884703a 	and	r2,r7,r2
   4a6fc:	210ece04 	addi	r4,r4,15160
   4a700:	308b883a 	add	r5,r6,r2
   4a704:	2a400117 	ldw	r9,4(r5)
   4a708:	22000217 	ldw	r8,8(r4)
   4a70c:	00ffff04 	movi	r3,-4
   4a710:	48c6703a 	and	r3,r9,r3
   4a714:	2a005726 	beq	r5,r8,4a874 <_free_r+0x1ac>
   4a718:	28c00115 	stw	r3,4(r5)
   4a71c:	39c0004c 	andi	r7,r7,1
   4a720:	3800091e 	bne	r7,zero,4a748 <_free_r+0x80>
   4a724:	823ffe17 	ldw	r8,-8(r16)
   4a728:	22400204 	addi	r9,r4,8
   4a72c:	320dc83a 	sub	r6,r6,r8
   4a730:	31c00217 	ldw	r7,8(r6)
   4a734:	1205883a 	add	r2,r2,r8
   4a738:	3a406526 	beq	r7,r9,4a8d0 <_free_r+0x208>
   4a73c:	32000317 	ldw	r8,12(r6)
   4a740:	3a000315 	stw	r8,12(r7)
   4a744:	41c00215 	stw	r7,8(r8)
   4a748:	28cf883a 	add	r7,r5,r3
   4a74c:	39c00117 	ldw	r7,4(r7)
   4a750:	39c0004c 	andi	r7,r7,1
   4a754:	38003a26 	beq	r7,zero,4a840 <_free_r+0x178>
   4a758:	10c00054 	ori	r3,r2,1
   4a75c:	30c00115 	stw	r3,4(r6)
   4a760:	3087883a 	add	r3,r6,r2
   4a764:	18800015 	stw	r2,0(r3)
   4a768:	00c07fc4 	movi	r3,511
   4a76c:	18801936 	bltu	r3,r2,4a7d4 <_free_r+0x10c>
   4a770:	1004d0fa 	srli	r2,r2,3
   4a774:	01c00044 	movi	r7,1
   4a778:	21400117 	ldw	r5,4(r4)
   4a77c:	10c00044 	addi	r3,r2,1
   4a780:	18c7883a 	add	r3,r3,r3
   4a784:	1005d0ba 	srai	r2,r2,2
   4a788:	18c7883a 	add	r3,r3,r3
   4a78c:	18c7883a 	add	r3,r3,r3
   4a790:	1907883a 	add	r3,r3,r4
   4a794:	3884983a 	sll	r2,r7,r2
   4a798:	19c00017 	ldw	r7,0(r3)
   4a79c:	1a3ffe04 	addi	r8,r3,-8
   4a7a0:	1144b03a 	or	r2,r2,r5
   4a7a4:	32000315 	stw	r8,12(r6)
   4a7a8:	31c00215 	stw	r7,8(r6)
   4a7ac:	20800115 	stw	r2,4(r4)
   4a7b0:	19800015 	stw	r6,0(r3)
   4a7b4:	39800315 	stw	r6,12(r7)
   4a7b8:	8809883a 	mov	r4,r17
   4a7bc:	dfc00217 	ldw	ra,8(sp)
   4a7c0:	dc400117 	ldw	r17,4(sp)
   4a7c4:	dc000017 	ldw	r16,0(sp)
   4a7c8:	dec00304 	addi	sp,sp,12
   4a7cc:	0050c781 	jmpi	50c78 <__malloc_unlock>
   4a7d0:	f800283a 	ret
   4a7d4:	100ad27a 	srli	r5,r2,9
   4a7d8:	00c00104 	movi	r3,4
   4a7dc:	19404a36 	bltu	r3,r5,4a908 <_free_r+0x240>
   4a7e0:	100ad1ba 	srli	r5,r2,6
   4a7e4:	28c00e44 	addi	r3,r5,57
   4a7e8:	18c7883a 	add	r3,r3,r3
   4a7ec:	29400e04 	addi	r5,r5,56
   4a7f0:	18c7883a 	add	r3,r3,r3
   4a7f4:	18c7883a 	add	r3,r3,r3
   4a7f8:	1909883a 	add	r4,r3,r4
   4a7fc:	20c00017 	ldw	r3,0(r4)
   4a800:	01c00174 	movhi	r7,5
   4a804:	213ffe04 	addi	r4,r4,-8
   4a808:	39cece04 	addi	r7,r7,15160
   4a80c:	20c04426 	beq	r4,r3,4a920 <_free_r+0x258>
   4a810:	01ffff04 	movi	r7,-4
   4a814:	19400117 	ldw	r5,4(r3)
   4a818:	29ca703a 	and	r5,r5,r7
   4a81c:	1140022e 	bgeu	r2,r5,4a828 <_free_r+0x160>
   4a820:	18c00217 	ldw	r3,8(r3)
   4a824:	20fffb1e 	bne	r4,r3,4a814 <_gp+0xfffed6cc>
   4a828:	19000317 	ldw	r4,12(r3)
   4a82c:	31000315 	stw	r4,12(r6)
   4a830:	30c00215 	stw	r3,8(r6)
   4a834:	21800215 	stw	r6,8(r4)
   4a838:	19800315 	stw	r6,12(r3)
   4a83c:	003fde06 	br	4a7b8 <_gp+0xfffed670>
   4a840:	29c00217 	ldw	r7,8(r5)
   4a844:	10c5883a 	add	r2,r2,r3
   4a848:	00c00174 	movhi	r3,5
   4a84c:	18ced004 	addi	r3,r3,15168
   4a850:	38c03b26 	beq	r7,r3,4a940 <_free_r+0x278>
   4a854:	2a000317 	ldw	r8,12(r5)
   4a858:	11400054 	ori	r5,r2,1
   4a85c:	3087883a 	add	r3,r6,r2
   4a860:	3a000315 	stw	r8,12(r7)
   4a864:	41c00215 	stw	r7,8(r8)
   4a868:	31400115 	stw	r5,4(r6)
   4a86c:	18800015 	stw	r2,0(r3)
   4a870:	003fbd06 	br	4a768 <_gp+0xfffed620>
   4a874:	39c0004c 	andi	r7,r7,1
   4a878:	10c5883a 	add	r2,r2,r3
   4a87c:	3800071e 	bne	r7,zero,4a89c <_free_r+0x1d4>
   4a880:	81fffe17 	ldw	r7,-8(r16)
   4a884:	31cdc83a 	sub	r6,r6,r7
   4a888:	30c00317 	ldw	r3,12(r6)
   4a88c:	31400217 	ldw	r5,8(r6)
   4a890:	11c5883a 	add	r2,r2,r7
   4a894:	28c00315 	stw	r3,12(r5)
   4a898:	19400215 	stw	r5,8(r3)
   4a89c:	10c00054 	ori	r3,r2,1
   4a8a0:	30c00115 	stw	r3,4(r6)
   4a8a4:	00c00174 	movhi	r3,5
   4a8a8:	18d45704 	addi	r3,r3,20828
   4a8ac:	18c00017 	ldw	r3,0(r3)
   4a8b0:	21800215 	stw	r6,8(r4)
   4a8b4:	10ffc036 	bltu	r2,r3,4a7b8 <_gp+0xfffed670>
   4a8b8:	00800174 	movhi	r2,5
   4a8bc:	109c9b04 	addi	r2,r2,29292
   4a8c0:	11400017 	ldw	r5,0(r2)
   4a8c4:	8809883a 	mov	r4,r17
   4a8c8:	004a5a40 	call	4a5a4 <_malloc_trim_r>
   4a8cc:	003fba06 	br	4a7b8 <_gp+0xfffed670>
   4a8d0:	28c9883a 	add	r4,r5,r3
   4a8d4:	21000117 	ldw	r4,4(r4)
   4a8d8:	2100004c 	andi	r4,r4,1
   4a8dc:	2000391e 	bne	r4,zero,4a9c4 <_free_r+0x2fc>
   4a8e0:	29c00217 	ldw	r7,8(r5)
   4a8e4:	29000317 	ldw	r4,12(r5)
   4a8e8:	1885883a 	add	r2,r3,r2
   4a8ec:	10c00054 	ori	r3,r2,1
   4a8f0:	39000315 	stw	r4,12(r7)
   4a8f4:	21c00215 	stw	r7,8(r4)
   4a8f8:	30c00115 	stw	r3,4(r6)
   4a8fc:	308d883a 	add	r6,r6,r2
   4a900:	30800015 	stw	r2,0(r6)
   4a904:	003fac06 	br	4a7b8 <_gp+0xfffed670>
   4a908:	00c00504 	movi	r3,20
   4a90c:	19401536 	bltu	r3,r5,4a964 <_free_r+0x29c>
   4a910:	28c01704 	addi	r3,r5,92
   4a914:	18c7883a 	add	r3,r3,r3
   4a918:	294016c4 	addi	r5,r5,91
   4a91c:	003fb406 	br	4a7f0 <_gp+0xfffed6a8>
   4a920:	280bd0ba 	srai	r5,r5,2
   4a924:	00c00044 	movi	r3,1
   4a928:	38800117 	ldw	r2,4(r7)
   4a92c:	194a983a 	sll	r5,r3,r5
   4a930:	2007883a 	mov	r3,r4
   4a934:	2884b03a 	or	r2,r5,r2
   4a938:	38800115 	stw	r2,4(r7)
   4a93c:	003fbb06 	br	4a82c <_gp+0xfffed6e4>
   4a940:	21800515 	stw	r6,20(r4)
   4a944:	21800415 	stw	r6,16(r4)
   4a948:	10c00054 	ori	r3,r2,1
   4a94c:	31c00315 	stw	r7,12(r6)
   4a950:	31c00215 	stw	r7,8(r6)
   4a954:	30c00115 	stw	r3,4(r6)
   4a958:	308d883a 	add	r6,r6,r2
   4a95c:	30800015 	stw	r2,0(r6)
   4a960:	003f9506 	br	4a7b8 <_gp+0xfffed670>
   4a964:	00c01504 	movi	r3,84
   4a968:	19400536 	bltu	r3,r5,4a980 <_free_r+0x2b8>
   4a96c:	100ad33a 	srli	r5,r2,12
   4a970:	28c01bc4 	addi	r3,r5,111
   4a974:	18c7883a 	add	r3,r3,r3
   4a978:	29401b84 	addi	r5,r5,110
   4a97c:	003f9c06 	br	4a7f0 <_gp+0xfffed6a8>
   4a980:	00c05504 	movi	r3,340
   4a984:	19400536 	bltu	r3,r5,4a99c <_free_r+0x2d4>
   4a988:	100ad3fa 	srli	r5,r2,15
   4a98c:	28c01e04 	addi	r3,r5,120
   4a990:	18c7883a 	add	r3,r3,r3
   4a994:	29401dc4 	addi	r5,r5,119
   4a998:	003f9506 	br	4a7f0 <_gp+0xfffed6a8>
   4a99c:	00c15504 	movi	r3,1364
   4a9a0:	19400536 	bltu	r3,r5,4a9b8 <_free_r+0x2f0>
   4a9a4:	100ad4ba 	srli	r5,r2,18
   4a9a8:	28c01f44 	addi	r3,r5,125
   4a9ac:	18c7883a 	add	r3,r3,r3
   4a9b0:	29401f04 	addi	r5,r5,124
   4a9b4:	003f8e06 	br	4a7f0 <_gp+0xfffed6a8>
   4a9b8:	00c03f84 	movi	r3,254
   4a9bc:	01401f84 	movi	r5,126
   4a9c0:	003f8b06 	br	4a7f0 <_gp+0xfffed6a8>
   4a9c4:	10c00054 	ori	r3,r2,1
   4a9c8:	30c00115 	stw	r3,4(r6)
   4a9cc:	308d883a 	add	r6,r6,r2
   4a9d0:	30800015 	stw	r2,0(r6)
   4a9d4:	003f7806 	br	4a7b8 <_gp+0xfffed670>

0004a9d8 <__sfvwrite_r>:
   4a9d8:	30800217 	ldw	r2,8(r6)
   4a9dc:	10006726 	beq	r2,zero,4ab7c <__sfvwrite_r+0x1a4>
   4a9e0:	28c0030b 	ldhu	r3,12(r5)
   4a9e4:	defff404 	addi	sp,sp,-48
   4a9e8:	dd400715 	stw	r21,28(sp)
   4a9ec:	dd000615 	stw	r20,24(sp)
   4a9f0:	dc000215 	stw	r16,8(sp)
   4a9f4:	dfc00b15 	stw	ra,44(sp)
   4a9f8:	df000a15 	stw	fp,40(sp)
   4a9fc:	ddc00915 	stw	r23,36(sp)
   4aa00:	dd800815 	stw	r22,32(sp)
   4aa04:	dcc00515 	stw	r19,20(sp)
   4aa08:	dc800415 	stw	r18,16(sp)
   4aa0c:	dc400315 	stw	r17,12(sp)
   4aa10:	1880020c 	andi	r2,r3,8
   4aa14:	2821883a 	mov	r16,r5
   4aa18:	202b883a 	mov	r21,r4
   4aa1c:	3029883a 	mov	r20,r6
   4aa20:	10002726 	beq	r2,zero,4aac0 <__sfvwrite_r+0xe8>
   4aa24:	28800417 	ldw	r2,16(r5)
   4aa28:	10002526 	beq	r2,zero,4aac0 <__sfvwrite_r+0xe8>
   4aa2c:	1880008c 	andi	r2,r3,2
   4aa30:	a4400017 	ldw	r17,0(r20)
   4aa34:	10002a26 	beq	r2,zero,4aae0 <__sfvwrite_r+0x108>
   4aa38:	05a00034 	movhi	r22,32768
   4aa3c:	0027883a 	mov	r19,zero
   4aa40:	0025883a 	mov	r18,zero
   4aa44:	b5bf0004 	addi	r22,r22,-1024
   4aa48:	980d883a 	mov	r6,r19
   4aa4c:	a809883a 	mov	r4,r21
   4aa50:	90004626 	beq	r18,zero,4ab6c <__sfvwrite_r+0x194>
   4aa54:	900f883a 	mov	r7,r18
   4aa58:	b480022e 	bgeu	r22,r18,4aa64 <__sfvwrite_r+0x8c>
   4aa5c:	01e00034 	movhi	r7,32768
   4aa60:	39ff0004 	addi	r7,r7,-1024
   4aa64:	80800917 	ldw	r2,36(r16)
   4aa68:	81400717 	ldw	r5,28(r16)
   4aa6c:	103ee83a 	callr	r2
   4aa70:	00805a0e 	bge	zero,r2,4abdc <__sfvwrite_r+0x204>
   4aa74:	a0c00217 	ldw	r3,8(r20)
   4aa78:	98a7883a 	add	r19,r19,r2
   4aa7c:	90a5c83a 	sub	r18,r18,r2
   4aa80:	1885c83a 	sub	r2,r3,r2
   4aa84:	a0800215 	stw	r2,8(r20)
   4aa88:	103fef1e 	bne	r2,zero,4aa48 <_gp+0xfffed900>
   4aa8c:	0005883a 	mov	r2,zero
   4aa90:	dfc00b17 	ldw	ra,44(sp)
   4aa94:	df000a17 	ldw	fp,40(sp)
   4aa98:	ddc00917 	ldw	r23,36(sp)
   4aa9c:	dd800817 	ldw	r22,32(sp)
   4aaa0:	dd400717 	ldw	r21,28(sp)
   4aaa4:	dd000617 	ldw	r20,24(sp)
   4aaa8:	dcc00517 	ldw	r19,20(sp)
   4aaac:	dc800417 	ldw	r18,16(sp)
   4aab0:	dc400317 	ldw	r17,12(sp)
   4aab4:	dc000217 	ldw	r16,8(sp)
   4aab8:	dec00c04 	addi	sp,sp,48
   4aabc:	f800283a 	ret
   4aac0:	800b883a 	mov	r5,r16
   4aac4:	a809883a 	mov	r4,r21
   4aac8:	00485480 	call	48548 <__swsetup_r>
   4aacc:	1000ee1e 	bne	r2,zero,4ae88 <__sfvwrite_r+0x4b0>
   4aad0:	80c0030b 	ldhu	r3,12(r16)
   4aad4:	a4400017 	ldw	r17,0(r20)
   4aad8:	1880008c 	andi	r2,r3,2
   4aadc:	103fd61e 	bne	r2,zero,4aa38 <_gp+0xfffed8f0>
   4aae0:	1880004c 	andi	r2,r3,1
   4aae4:	1000421e 	bne	r2,zero,4abf0 <__sfvwrite_r+0x218>
   4aae8:	0039883a 	mov	fp,zero
   4aaec:	0025883a 	mov	r18,zero
   4aaf0:	90001a26 	beq	r18,zero,4ab5c <__sfvwrite_r+0x184>
   4aaf4:	1880800c 	andi	r2,r3,512
   4aaf8:	84c00217 	ldw	r19,8(r16)
   4aafc:	10002126 	beq	r2,zero,4ab84 <__sfvwrite_r+0x1ac>
   4ab00:	982f883a 	mov	r23,r19
   4ab04:	94c09636 	bltu	r18,r19,4ad60 <__sfvwrite_r+0x388>
   4ab08:	1881200c 	andi	r2,r3,1152
   4ab0c:	1000a11e 	bne	r2,zero,4ad94 <__sfvwrite_r+0x3bc>
   4ab10:	81000017 	ldw	r4,0(r16)
   4ab14:	b80d883a 	mov	r6,r23
   4ab18:	e00b883a 	mov	r5,fp
   4ab1c:	004bcf80 	call	4bcf8 <memmove>
   4ab20:	80c00217 	ldw	r3,8(r16)
   4ab24:	81000017 	ldw	r4,0(r16)
   4ab28:	9005883a 	mov	r2,r18
   4ab2c:	1ce7c83a 	sub	r19,r3,r19
   4ab30:	25cf883a 	add	r7,r4,r23
   4ab34:	84c00215 	stw	r19,8(r16)
   4ab38:	81c00015 	stw	r7,0(r16)
   4ab3c:	a0c00217 	ldw	r3,8(r20)
   4ab40:	e0b9883a 	add	fp,fp,r2
   4ab44:	90a5c83a 	sub	r18,r18,r2
   4ab48:	18a7c83a 	sub	r19,r3,r2
   4ab4c:	a4c00215 	stw	r19,8(r20)
   4ab50:	983fce26 	beq	r19,zero,4aa8c <_gp+0xfffed944>
   4ab54:	80c0030b 	ldhu	r3,12(r16)
   4ab58:	903fe61e 	bne	r18,zero,4aaf4 <_gp+0xfffed9ac>
   4ab5c:	8f000017 	ldw	fp,0(r17)
   4ab60:	8c800117 	ldw	r18,4(r17)
   4ab64:	8c400204 	addi	r17,r17,8
   4ab68:	003fe106 	br	4aaf0 <_gp+0xfffed9a8>
   4ab6c:	8cc00017 	ldw	r19,0(r17)
   4ab70:	8c800117 	ldw	r18,4(r17)
   4ab74:	8c400204 	addi	r17,r17,8
   4ab78:	003fb306 	br	4aa48 <_gp+0xfffed900>
   4ab7c:	0005883a 	mov	r2,zero
   4ab80:	f800283a 	ret
   4ab84:	81000017 	ldw	r4,0(r16)
   4ab88:	80800417 	ldw	r2,16(r16)
   4ab8c:	11005a36 	bltu	r2,r4,4acf8 <__sfvwrite_r+0x320>
   4ab90:	85c00517 	ldw	r23,20(r16)
   4ab94:	95c05836 	bltu	r18,r23,4acf8 <__sfvwrite_r+0x320>
   4ab98:	00a00034 	movhi	r2,32768
   4ab9c:	10bfffc4 	addi	r2,r2,-1
   4aba0:	9009883a 	mov	r4,r18
   4aba4:	1480012e 	bgeu	r2,r18,4abac <__sfvwrite_r+0x1d4>
   4aba8:	1009883a 	mov	r4,r2
   4abac:	b80b883a 	mov	r5,r23
   4abb0:	0041d8c0 	call	41d8c <__divsi3>
   4abb4:	b80b883a 	mov	r5,r23
   4abb8:	1009883a 	mov	r4,r2
   4abbc:	0041f400 	call	41f40 <__mulsi3>
   4abc0:	81400717 	ldw	r5,28(r16)
   4abc4:	80c00917 	ldw	r3,36(r16)
   4abc8:	100f883a 	mov	r7,r2
   4abcc:	e00d883a 	mov	r6,fp
   4abd0:	a809883a 	mov	r4,r21
   4abd4:	183ee83a 	callr	r3
   4abd8:	00bfd816 	blt	zero,r2,4ab3c <_gp+0xfffed9f4>
   4abdc:	8080030b 	ldhu	r2,12(r16)
   4abe0:	10801014 	ori	r2,r2,64
   4abe4:	8080030d 	sth	r2,12(r16)
   4abe8:	00bfffc4 	movi	r2,-1
   4abec:	003fa806 	br	4aa90 <_gp+0xfffed948>
   4abf0:	0027883a 	mov	r19,zero
   4abf4:	0011883a 	mov	r8,zero
   4abf8:	0039883a 	mov	fp,zero
   4abfc:	0025883a 	mov	r18,zero
   4ac00:	90001f26 	beq	r18,zero,4ac80 <__sfvwrite_r+0x2a8>
   4ac04:	40005a26 	beq	r8,zero,4ad70 <__sfvwrite_r+0x398>
   4ac08:	982d883a 	mov	r22,r19
   4ac0c:	94c0012e 	bgeu	r18,r19,4ac14 <__sfvwrite_r+0x23c>
   4ac10:	902d883a 	mov	r22,r18
   4ac14:	81000017 	ldw	r4,0(r16)
   4ac18:	80800417 	ldw	r2,16(r16)
   4ac1c:	b02f883a 	mov	r23,r22
   4ac20:	81c00517 	ldw	r7,20(r16)
   4ac24:	1100032e 	bgeu	r2,r4,4ac34 <__sfvwrite_r+0x25c>
   4ac28:	80c00217 	ldw	r3,8(r16)
   4ac2c:	38c7883a 	add	r3,r7,r3
   4ac30:	1d801816 	blt	r3,r22,4ac94 <__sfvwrite_r+0x2bc>
   4ac34:	b1c03e16 	blt	r22,r7,4ad30 <__sfvwrite_r+0x358>
   4ac38:	80800917 	ldw	r2,36(r16)
   4ac3c:	81400717 	ldw	r5,28(r16)
   4ac40:	e00d883a 	mov	r6,fp
   4ac44:	da000115 	stw	r8,4(sp)
   4ac48:	a809883a 	mov	r4,r21
   4ac4c:	103ee83a 	callr	r2
   4ac50:	102f883a 	mov	r23,r2
   4ac54:	da000117 	ldw	r8,4(sp)
   4ac58:	00bfe00e 	bge	zero,r2,4abdc <_gp+0xfffeda94>
   4ac5c:	9de7c83a 	sub	r19,r19,r23
   4ac60:	98001f26 	beq	r19,zero,4ace0 <__sfvwrite_r+0x308>
   4ac64:	a0800217 	ldw	r2,8(r20)
   4ac68:	e5f9883a 	add	fp,fp,r23
   4ac6c:	95e5c83a 	sub	r18,r18,r23
   4ac70:	15efc83a 	sub	r23,r2,r23
   4ac74:	a5c00215 	stw	r23,8(r20)
   4ac78:	b83f8426 	beq	r23,zero,4aa8c <_gp+0xfffed944>
   4ac7c:	903fe11e 	bne	r18,zero,4ac04 <_gp+0xfffedabc>
   4ac80:	8f000017 	ldw	fp,0(r17)
   4ac84:	8c800117 	ldw	r18,4(r17)
   4ac88:	0011883a 	mov	r8,zero
   4ac8c:	8c400204 	addi	r17,r17,8
   4ac90:	003fdb06 	br	4ac00 <_gp+0xfffedab8>
   4ac94:	180d883a 	mov	r6,r3
   4ac98:	e00b883a 	mov	r5,fp
   4ac9c:	da000115 	stw	r8,4(sp)
   4aca0:	d8c00015 	stw	r3,0(sp)
   4aca4:	004bcf80 	call	4bcf8 <memmove>
   4aca8:	d8c00017 	ldw	r3,0(sp)
   4acac:	80800017 	ldw	r2,0(r16)
   4acb0:	800b883a 	mov	r5,r16
   4acb4:	a809883a 	mov	r4,r21
   4acb8:	10c5883a 	add	r2,r2,r3
   4acbc:	80800015 	stw	r2,0(r16)
   4acc0:	d8c00015 	stw	r3,0(sp)
   4acc4:	004a1680 	call	4a168 <_fflush_r>
   4acc8:	d8c00017 	ldw	r3,0(sp)
   4accc:	da000117 	ldw	r8,4(sp)
   4acd0:	103fc21e 	bne	r2,zero,4abdc <_gp+0xfffeda94>
   4acd4:	182f883a 	mov	r23,r3
   4acd8:	9de7c83a 	sub	r19,r19,r23
   4acdc:	983fe11e 	bne	r19,zero,4ac64 <_gp+0xfffedb1c>
   4ace0:	800b883a 	mov	r5,r16
   4ace4:	a809883a 	mov	r4,r21
   4ace8:	004a1680 	call	4a168 <_fflush_r>
   4acec:	103fbb1e 	bne	r2,zero,4abdc <_gp+0xfffeda94>
   4acf0:	0011883a 	mov	r8,zero
   4acf4:	003fdb06 	br	4ac64 <_gp+0xfffedb1c>
   4acf8:	94c0012e 	bgeu	r18,r19,4ad00 <__sfvwrite_r+0x328>
   4acfc:	9027883a 	mov	r19,r18
   4ad00:	980d883a 	mov	r6,r19
   4ad04:	e00b883a 	mov	r5,fp
   4ad08:	004bcf80 	call	4bcf8 <memmove>
   4ad0c:	80800217 	ldw	r2,8(r16)
   4ad10:	80c00017 	ldw	r3,0(r16)
   4ad14:	14c5c83a 	sub	r2,r2,r19
   4ad18:	1cc7883a 	add	r3,r3,r19
   4ad1c:	80800215 	stw	r2,8(r16)
   4ad20:	80c00015 	stw	r3,0(r16)
   4ad24:	10004326 	beq	r2,zero,4ae34 <__sfvwrite_r+0x45c>
   4ad28:	9805883a 	mov	r2,r19
   4ad2c:	003f8306 	br	4ab3c <_gp+0xfffed9f4>
   4ad30:	b00d883a 	mov	r6,r22
   4ad34:	e00b883a 	mov	r5,fp
   4ad38:	da000115 	stw	r8,4(sp)
   4ad3c:	004bcf80 	call	4bcf8 <memmove>
   4ad40:	80800217 	ldw	r2,8(r16)
   4ad44:	80c00017 	ldw	r3,0(r16)
   4ad48:	da000117 	ldw	r8,4(sp)
   4ad4c:	1585c83a 	sub	r2,r2,r22
   4ad50:	1dad883a 	add	r22,r3,r22
   4ad54:	80800215 	stw	r2,8(r16)
   4ad58:	85800015 	stw	r22,0(r16)
   4ad5c:	003fbf06 	br	4ac5c <_gp+0xfffedb14>
   4ad60:	81000017 	ldw	r4,0(r16)
   4ad64:	9027883a 	mov	r19,r18
   4ad68:	902f883a 	mov	r23,r18
   4ad6c:	003f6906 	br	4ab14 <_gp+0xfffed9cc>
   4ad70:	900d883a 	mov	r6,r18
   4ad74:	01400284 	movi	r5,10
   4ad78:	e009883a 	mov	r4,fp
   4ad7c:	004bacc0 	call	4bacc <memchr>
   4ad80:	10003e26 	beq	r2,zero,4ae7c <__sfvwrite_r+0x4a4>
   4ad84:	10800044 	addi	r2,r2,1
   4ad88:	1727c83a 	sub	r19,r2,fp
   4ad8c:	02000044 	movi	r8,1
   4ad90:	003f9d06 	br	4ac08 <_gp+0xfffedac0>
   4ad94:	80800517 	ldw	r2,20(r16)
   4ad98:	81400417 	ldw	r5,16(r16)
   4ad9c:	81c00017 	ldw	r7,0(r16)
   4ada0:	10a7883a 	add	r19,r2,r2
   4ada4:	9885883a 	add	r2,r19,r2
   4ada8:	1026d7fa 	srli	r19,r2,31
   4adac:	396dc83a 	sub	r22,r7,r5
   4adb0:	b1000044 	addi	r4,r22,1
   4adb4:	9885883a 	add	r2,r19,r2
   4adb8:	1027d07a 	srai	r19,r2,1
   4adbc:	2485883a 	add	r2,r4,r18
   4adc0:	980d883a 	mov	r6,r19
   4adc4:	9880022e 	bgeu	r19,r2,4add0 <__sfvwrite_r+0x3f8>
   4adc8:	1027883a 	mov	r19,r2
   4adcc:	100d883a 	mov	r6,r2
   4add0:	18c1000c 	andi	r3,r3,1024
   4add4:	18001c26 	beq	r3,zero,4ae48 <__sfvwrite_r+0x470>
   4add8:	300b883a 	mov	r5,r6
   4addc:	a809883a 	mov	r4,r21
   4ade0:	004b2c00 	call	4b2c0 <_malloc_r>
   4ade4:	102f883a 	mov	r23,r2
   4ade8:	10002926 	beq	r2,zero,4ae90 <__sfvwrite_r+0x4b8>
   4adec:	81400417 	ldw	r5,16(r16)
   4adf0:	b00d883a 	mov	r6,r22
   4adf4:	1009883a 	mov	r4,r2
   4adf8:	004bbb00 	call	4bbb0 <memcpy>
   4adfc:	8080030b 	ldhu	r2,12(r16)
   4ae00:	00fedfc4 	movi	r3,-1153
   4ae04:	10c4703a 	and	r2,r2,r3
   4ae08:	10802014 	ori	r2,r2,128
   4ae0c:	8080030d 	sth	r2,12(r16)
   4ae10:	bd89883a 	add	r4,r23,r22
   4ae14:	9d8fc83a 	sub	r7,r19,r22
   4ae18:	85c00415 	stw	r23,16(r16)
   4ae1c:	84c00515 	stw	r19,20(r16)
   4ae20:	81000015 	stw	r4,0(r16)
   4ae24:	9027883a 	mov	r19,r18
   4ae28:	81c00215 	stw	r7,8(r16)
   4ae2c:	902f883a 	mov	r23,r18
   4ae30:	003f3806 	br	4ab14 <_gp+0xfffed9cc>
   4ae34:	800b883a 	mov	r5,r16
   4ae38:	a809883a 	mov	r4,r21
   4ae3c:	004a1680 	call	4a168 <_fflush_r>
   4ae40:	103fb926 	beq	r2,zero,4ad28 <_gp+0xfffedbe0>
   4ae44:	003f6506 	br	4abdc <_gp+0xfffeda94>
   4ae48:	a809883a 	mov	r4,r21
   4ae4c:	004d0340 	call	4d034 <_realloc_r>
   4ae50:	102f883a 	mov	r23,r2
   4ae54:	103fee1e 	bne	r2,zero,4ae10 <_gp+0xfffedcc8>
   4ae58:	81400417 	ldw	r5,16(r16)
   4ae5c:	a809883a 	mov	r4,r21
   4ae60:	004a6c80 	call	4a6c8 <_free_r>
   4ae64:	8080030b 	ldhu	r2,12(r16)
   4ae68:	00ffdfc4 	movi	r3,-129
   4ae6c:	1884703a 	and	r2,r3,r2
   4ae70:	00c00304 	movi	r3,12
   4ae74:	a8c00015 	stw	r3,0(r21)
   4ae78:	003f5906 	br	4abe0 <_gp+0xfffeda98>
   4ae7c:	94c00044 	addi	r19,r18,1
   4ae80:	02000044 	movi	r8,1
   4ae84:	003f6006 	br	4ac08 <_gp+0xfffedac0>
   4ae88:	00bfffc4 	movi	r2,-1
   4ae8c:	003f0006 	br	4aa90 <_gp+0xfffed948>
   4ae90:	00800304 	movi	r2,12
   4ae94:	a8800015 	stw	r2,0(r21)
   4ae98:	8080030b 	ldhu	r2,12(r16)
   4ae9c:	003f5006 	br	4abe0 <_gp+0xfffeda98>

0004aea0 <_fwalk>:
   4aea0:	defff704 	addi	sp,sp,-36
   4aea4:	dd000415 	stw	r20,16(sp)
   4aea8:	dfc00815 	stw	ra,32(sp)
   4aeac:	ddc00715 	stw	r23,28(sp)
   4aeb0:	dd800615 	stw	r22,24(sp)
   4aeb4:	dd400515 	stw	r21,20(sp)
   4aeb8:	dcc00315 	stw	r19,12(sp)
   4aebc:	dc800215 	stw	r18,8(sp)
   4aec0:	dc400115 	stw	r17,4(sp)
   4aec4:	dc000015 	stw	r16,0(sp)
   4aec8:	2500b804 	addi	r20,r4,736
   4aecc:	a0002326 	beq	r20,zero,4af5c <_fwalk+0xbc>
   4aed0:	282b883a 	mov	r21,r5
   4aed4:	002f883a 	mov	r23,zero
   4aed8:	05800044 	movi	r22,1
   4aedc:	04ffffc4 	movi	r19,-1
   4aee0:	a4400117 	ldw	r17,4(r20)
   4aee4:	a4800217 	ldw	r18,8(r20)
   4aee8:	8c7fffc4 	addi	r17,r17,-1
   4aeec:	88000d16 	blt	r17,zero,4af24 <_fwalk+0x84>
   4aef0:	94000304 	addi	r16,r18,12
   4aef4:	94800384 	addi	r18,r18,14
   4aef8:	8080000b 	ldhu	r2,0(r16)
   4aefc:	8c7fffc4 	addi	r17,r17,-1
   4af00:	813ffd04 	addi	r4,r16,-12
   4af04:	b080042e 	bgeu	r22,r2,4af18 <_fwalk+0x78>
   4af08:	9080000f 	ldh	r2,0(r18)
   4af0c:	14c00226 	beq	r2,r19,4af18 <_fwalk+0x78>
   4af10:	a83ee83a 	callr	r21
   4af14:	b8aeb03a 	or	r23,r23,r2
   4af18:	84001a04 	addi	r16,r16,104
   4af1c:	94801a04 	addi	r18,r18,104
   4af20:	8cfff51e 	bne	r17,r19,4aef8 <_gp+0xfffeddb0>
   4af24:	a5000017 	ldw	r20,0(r20)
   4af28:	a03fed1e 	bne	r20,zero,4aee0 <_gp+0xfffedd98>
   4af2c:	b805883a 	mov	r2,r23
   4af30:	dfc00817 	ldw	ra,32(sp)
   4af34:	ddc00717 	ldw	r23,28(sp)
   4af38:	dd800617 	ldw	r22,24(sp)
   4af3c:	dd400517 	ldw	r21,20(sp)
   4af40:	dd000417 	ldw	r20,16(sp)
   4af44:	dcc00317 	ldw	r19,12(sp)
   4af48:	dc800217 	ldw	r18,8(sp)
   4af4c:	dc400117 	ldw	r17,4(sp)
   4af50:	dc000017 	ldw	r16,0(sp)
   4af54:	dec00904 	addi	sp,sp,36
   4af58:	f800283a 	ret
   4af5c:	002f883a 	mov	r23,zero
   4af60:	003ff206 	br	4af2c <_gp+0xfffedde4>

0004af64 <_fwalk_reent>:
   4af64:	defff704 	addi	sp,sp,-36
   4af68:	dd000415 	stw	r20,16(sp)
   4af6c:	dfc00815 	stw	ra,32(sp)
   4af70:	ddc00715 	stw	r23,28(sp)
   4af74:	dd800615 	stw	r22,24(sp)
   4af78:	dd400515 	stw	r21,20(sp)
   4af7c:	dcc00315 	stw	r19,12(sp)
   4af80:	dc800215 	stw	r18,8(sp)
   4af84:	dc400115 	stw	r17,4(sp)
   4af88:	dc000015 	stw	r16,0(sp)
   4af8c:	2500b804 	addi	r20,r4,736
   4af90:	a0002326 	beq	r20,zero,4b020 <_fwalk_reent+0xbc>
   4af94:	282b883a 	mov	r21,r5
   4af98:	2027883a 	mov	r19,r4
   4af9c:	002f883a 	mov	r23,zero
   4afa0:	05800044 	movi	r22,1
   4afa4:	04bfffc4 	movi	r18,-1
   4afa8:	a4400117 	ldw	r17,4(r20)
   4afac:	a4000217 	ldw	r16,8(r20)
   4afb0:	8c7fffc4 	addi	r17,r17,-1
   4afb4:	88000c16 	blt	r17,zero,4afe8 <_fwalk_reent+0x84>
   4afb8:	84000304 	addi	r16,r16,12
   4afbc:	8080000b 	ldhu	r2,0(r16)
   4afc0:	8c7fffc4 	addi	r17,r17,-1
   4afc4:	817ffd04 	addi	r5,r16,-12
   4afc8:	b080052e 	bgeu	r22,r2,4afe0 <_fwalk_reent+0x7c>
   4afcc:	8080008f 	ldh	r2,2(r16)
   4afd0:	9809883a 	mov	r4,r19
   4afd4:	14800226 	beq	r2,r18,4afe0 <_fwalk_reent+0x7c>
   4afd8:	a83ee83a 	callr	r21
   4afdc:	b8aeb03a 	or	r23,r23,r2
   4afe0:	84001a04 	addi	r16,r16,104
   4afe4:	8cbff51e 	bne	r17,r18,4afbc <_gp+0xfffede74>
   4afe8:	a5000017 	ldw	r20,0(r20)
   4afec:	a03fee1e 	bne	r20,zero,4afa8 <_gp+0xfffede60>
   4aff0:	b805883a 	mov	r2,r23
   4aff4:	dfc00817 	ldw	ra,32(sp)
   4aff8:	ddc00717 	ldw	r23,28(sp)
   4affc:	dd800617 	ldw	r22,24(sp)
   4b000:	dd400517 	ldw	r21,20(sp)
   4b004:	dd000417 	ldw	r20,16(sp)
   4b008:	dcc00317 	ldw	r19,12(sp)
   4b00c:	dc800217 	ldw	r18,8(sp)
   4b010:	dc400117 	ldw	r17,4(sp)
   4b014:	dc000017 	ldw	r16,0(sp)
   4b018:	dec00904 	addi	sp,sp,36
   4b01c:	f800283a 	ret
   4b020:	002f883a 	mov	r23,zero
   4b024:	003ff206 	br	4aff0 <_gp+0xfffedea8>

0004b028 <_setlocale_r>:
   4b028:	30001b26 	beq	r6,zero,4b098 <_setlocale_r+0x70>
   4b02c:	01400174 	movhi	r5,5
   4b030:	defffe04 	addi	sp,sp,-8
   4b034:	294bd104 	addi	r5,r5,12100
   4b038:	3009883a 	mov	r4,r6
   4b03c:	dc000015 	stw	r16,0(sp)
   4b040:	dfc00115 	stw	ra,4(sp)
   4b044:	3021883a 	mov	r16,r6
   4b048:	004d79c0 	call	4d79c <strcmp>
   4b04c:	1000061e 	bne	r2,zero,4b068 <_setlocale_r+0x40>
   4b050:	00800174 	movhi	r2,5
   4b054:	108bd004 	addi	r2,r2,12096
   4b058:	dfc00117 	ldw	ra,4(sp)
   4b05c:	dc000017 	ldw	r16,0(sp)
   4b060:	dec00204 	addi	sp,sp,8
   4b064:	f800283a 	ret
   4b068:	01400174 	movhi	r5,5
   4b06c:	294bd004 	addi	r5,r5,12096
   4b070:	8009883a 	mov	r4,r16
   4b074:	004d79c0 	call	4d79c <strcmp>
   4b078:	103ff526 	beq	r2,zero,4b050 <_gp+0xfffedf08>
   4b07c:	01400174 	movhi	r5,5
   4b080:	294bbb04 	addi	r5,r5,12012
   4b084:	8009883a 	mov	r4,r16
   4b088:	004d79c0 	call	4d79c <strcmp>
   4b08c:	103ff026 	beq	r2,zero,4b050 <_gp+0xfffedf08>
   4b090:	0005883a 	mov	r2,zero
   4b094:	003ff006 	br	4b058 <_gp+0xfffedf10>
   4b098:	00800174 	movhi	r2,5
   4b09c:	108bd004 	addi	r2,r2,12096
   4b0a0:	f800283a 	ret

0004b0a4 <__locale_charset>:
   4b0a4:	00800174 	movhi	r2,5
   4b0a8:	108eb804 	addi	r2,r2,15072
   4b0ac:	f800283a 	ret

0004b0b0 <__locale_mb_cur_max>:
   4b0b0:	00800174 	movhi	r2,5
   4b0b4:	10945504 	addi	r2,r2,20820
   4b0b8:	10800017 	ldw	r2,0(r2)
   4b0bc:	f800283a 	ret

0004b0c0 <__locale_msgcharset>:
   4b0c0:	00800174 	movhi	r2,5
   4b0c4:	108eb004 	addi	r2,r2,15040
   4b0c8:	f800283a 	ret

0004b0cc <__locale_cjk_lang>:
   4b0cc:	0005883a 	mov	r2,zero
   4b0d0:	f800283a 	ret

0004b0d4 <_localeconv_r>:
   4b0d4:	00800174 	movhi	r2,5
   4b0d8:	108ec004 	addi	r2,r2,15104
   4b0dc:	f800283a 	ret

0004b0e0 <setlocale>:
   4b0e0:	00800174 	movhi	r2,5
   4b0e4:	10945404 	addi	r2,r2,20816
   4b0e8:	280d883a 	mov	r6,r5
   4b0ec:	200b883a 	mov	r5,r4
   4b0f0:	11000017 	ldw	r4,0(r2)
   4b0f4:	004b0281 	jmpi	4b028 <_setlocale_r>

0004b0f8 <localeconv>:
   4b0f8:	00800174 	movhi	r2,5
   4b0fc:	108ec004 	addi	r2,r2,15104
   4b100:	f800283a 	ret

0004b104 <__smakebuf_r>:
   4b104:	2880030b 	ldhu	r2,12(r5)
   4b108:	10c0008c 	andi	r3,r2,2
   4b10c:	1800411e 	bne	r3,zero,4b214 <__smakebuf_r+0x110>
   4b110:	deffec04 	addi	sp,sp,-80
   4b114:	dc000f15 	stw	r16,60(sp)
   4b118:	2821883a 	mov	r16,r5
   4b11c:	2940038f 	ldh	r5,14(r5)
   4b120:	dc401015 	stw	r17,64(sp)
   4b124:	dfc01315 	stw	ra,76(sp)
   4b128:	dcc01215 	stw	r19,72(sp)
   4b12c:	dc801115 	stw	r18,68(sp)
   4b130:	2023883a 	mov	r17,r4
   4b134:	28001c16 	blt	r5,zero,4b1a8 <__smakebuf_r+0xa4>
   4b138:	d80d883a 	mov	r6,sp
   4b13c:	004f40c0 	call	4f40c <_fstat_r>
   4b140:	10001816 	blt	r2,zero,4b1a4 <__smakebuf_r+0xa0>
   4b144:	d8800117 	ldw	r2,4(sp)
   4b148:	00e00014 	movui	r3,32768
   4b14c:	10bc000c 	andi	r2,r2,61440
   4b150:	14c80020 	cmpeqi	r19,r2,8192
   4b154:	10c03726 	beq	r2,r3,4b234 <__smakebuf_r+0x130>
   4b158:	80c0030b 	ldhu	r3,12(r16)
   4b15c:	18c20014 	ori	r3,r3,2048
   4b160:	80c0030d 	sth	r3,12(r16)
   4b164:	00c80004 	movi	r3,8192
   4b168:	10c0521e 	bne	r2,r3,4b2b4 <__smakebuf_r+0x1b0>
   4b16c:	8140038f 	ldh	r5,14(r16)
   4b170:	8809883a 	mov	r4,r17
   4b174:	004f4680 	call	4f468 <_isatty_r>
   4b178:	10004c26 	beq	r2,zero,4b2ac <__smakebuf_r+0x1a8>
   4b17c:	8080030b 	ldhu	r2,12(r16)
   4b180:	80c010c4 	addi	r3,r16,67
   4b184:	80c00015 	stw	r3,0(r16)
   4b188:	10800054 	ori	r2,r2,1
   4b18c:	8080030d 	sth	r2,12(r16)
   4b190:	00800044 	movi	r2,1
   4b194:	80c00415 	stw	r3,16(r16)
   4b198:	80800515 	stw	r2,20(r16)
   4b19c:	04810004 	movi	r18,1024
   4b1a0:	00000706 	br	4b1c0 <__smakebuf_r+0xbc>
   4b1a4:	8080030b 	ldhu	r2,12(r16)
   4b1a8:	10c0200c 	andi	r3,r2,128
   4b1ac:	18001f1e 	bne	r3,zero,4b22c <__smakebuf_r+0x128>
   4b1b0:	04810004 	movi	r18,1024
   4b1b4:	10820014 	ori	r2,r2,2048
   4b1b8:	8080030d 	sth	r2,12(r16)
   4b1bc:	0027883a 	mov	r19,zero
   4b1c0:	900b883a 	mov	r5,r18
   4b1c4:	8809883a 	mov	r4,r17
   4b1c8:	004b2c00 	call	4b2c0 <_malloc_r>
   4b1cc:	10002c26 	beq	r2,zero,4b280 <__smakebuf_r+0x17c>
   4b1d0:	80c0030b 	ldhu	r3,12(r16)
   4b1d4:	01000174 	movhi	r4,5
   4b1d8:	21287f04 	addi	r4,r4,-24068
   4b1dc:	89000f15 	stw	r4,60(r17)
   4b1e0:	18c02014 	ori	r3,r3,128
   4b1e4:	80c0030d 	sth	r3,12(r16)
   4b1e8:	80800015 	stw	r2,0(r16)
   4b1ec:	80800415 	stw	r2,16(r16)
   4b1f0:	84800515 	stw	r18,20(r16)
   4b1f4:	98001a1e 	bne	r19,zero,4b260 <__smakebuf_r+0x15c>
   4b1f8:	dfc01317 	ldw	ra,76(sp)
   4b1fc:	dcc01217 	ldw	r19,72(sp)
   4b200:	dc801117 	ldw	r18,68(sp)
   4b204:	dc401017 	ldw	r17,64(sp)
   4b208:	dc000f17 	ldw	r16,60(sp)
   4b20c:	dec01404 	addi	sp,sp,80
   4b210:	f800283a 	ret
   4b214:	288010c4 	addi	r2,r5,67
   4b218:	28800015 	stw	r2,0(r5)
   4b21c:	28800415 	stw	r2,16(r5)
   4b220:	00800044 	movi	r2,1
   4b224:	28800515 	stw	r2,20(r5)
   4b228:	f800283a 	ret
   4b22c:	04801004 	movi	r18,64
   4b230:	003fe006 	br	4b1b4 <_gp+0xfffee06c>
   4b234:	81000a17 	ldw	r4,40(r16)
   4b238:	00c00174 	movhi	r3,5
   4b23c:	18f5ce04 	addi	r3,r3,-10440
   4b240:	20ffc51e 	bne	r4,r3,4b158 <_gp+0xfffee010>
   4b244:	8080030b 	ldhu	r2,12(r16)
   4b248:	04810004 	movi	r18,1024
   4b24c:	84801315 	stw	r18,76(r16)
   4b250:	1484b03a 	or	r2,r2,r18
   4b254:	8080030d 	sth	r2,12(r16)
   4b258:	0027883a 	mov	r19,zero
   4b25c:	003fd806 	br	4b1c0 <_gp+0xfffee078>
   4b260:	8140038f 	ldh	r5,14(r16)
   4b264:	8809883a 	mov	r4,r17
   4b268:	004f4680 	call	4f468 <_isatty_r>
   4b26c:	103fe226 	beq	r2,zero,4b1f8 <_gp+0xfffee0b0>
   4b270:	8080030b 	ldhu	r2,12(r16)
   4b274:	10800054 	ori	r2,r2,1
   4b278:	8080030d 	sth	r2,12(r16)
   4b27c:	003fde06 	br	4b1f8 <_gp+0xfffee0b0>
   4b280:	8080030b 	ldhu	r2,12(r16)
   4b284:	10c0800c 	andi	r3,r2,512
   4b288:	183fdb1e 	bne	r3,zero,4b1f8 <_gp+0xfffee0b0>
   4b28c:	10800094 	ori	r2,r2,2
   4b290:	80c010c4 	addi	r3,r16,67
   4b294:	8080030d 	sth	r2,12(r16)
   4b298:	00800044 	movi	r2,1
   4b29c:	80c00015 	stw	r3,0(r16)
   4b2a0:	80c00415 	stw	r3,16(r16)
   4b2a4:	80800515 	stw	r2,20(r16)
   4b2a8:	003fd306 	br	4b1f8 <_gp+0xfffee0b0>
   4b2ac:	04810004 	movi	r18,1024
   4b2b0:	003fc306 	br	4b1c0 <_gp+0xfffee078>
   4b2b4:	0027883a 	mov	r19,zero
   4b2b8:	04810004 	movi	r18,1024
   4b2bc:	003fc006 	br	4b1c0 <_gp+0xfffee078>

0004b2c0 <_malloc_r>:
   4b2c0:	defff504 	addi	sp,sp,-44
   4b2c4:	dc800315 	stw	r18,12(sp)
   4b2c8:	dfc00a15 	stw	ra,40(sp)
   4b2cc:	df000915 	stw	fp,36(sp)
   4b2d0:	ddc00815 	stw	r23,32(sp)
   4b2d4:	dd800715 	stw	r22,28(sp)
   4b2d8:	dd400615 	stw	r21,24(sp)
   4b2dc:	dd000515 	stw	r20,20(sp)
   4b2e0:	dcc00415 	stw	r19,16(sp)
   4b2e4:	dc400215 	stw	r17,8(sp)
   4b2e8:	dc000115 	stw	r16,4(sp)
   4b2ec:	288002c4 	addi	r2,r5,11
   4b2f0:	00c00584 	movi	r3,22
   4b2f4:	2025883a 	mov	r18,r4
   4b2f8:	18807f2e 	bgeu	r3,r2,4b4f8 <_malloc_r+0x238>
   4b2fc:	047ffe04 	movi	r17,-8
   4b300:	1462703a 	and	r17,r2,r17
   4b304:	8800a316 	blt	r17,zero,4b594 <_malloc_r+0x2d4>
   4b308:	8940a236 	bltu	r17,r5,4b594 <_malloc_r+0x2d4>
   4b30c:	0050c540 	call	50c54 <__malloc_lock>
   4b310:	00807dc4 	movi	r2,503
   4b314:	1441e92e 	bgeu	r2,r17,4babc <_malloc_r+0x7fc>
   4b318:	8804d27a 	srli	r2,r17,9
   4b31c:	1000a126 	beq	r2,zero,4b5a4 <_malloc_r+0x2e4>
   4b320:	00c00104 	movi	r3,4
   4b324:	18811e36 	bltu	r3,r2,4b7a0 <_malloc_r+0x4e0>
   4b328:	8804d1ba 	srli	r2,r17,6
   4b32c:	12000e44 	addi	r8,r2,57
   4b330:	11c00e04 	addi	r7,r2,56
   4b334:	4209883a 	add	r4,r8,r8
   4b338:	04c00174 	movhi	r19,5
   4b33c:	2109883a 	add	r4,r4,r4
   4b340:	9ccece04 	addi	r19,r19,15160
   4b344:	2109883a 	add	r4,r4,r4
   4b348:	9909883a 	add	r4,r19,r4
   4b34c:	24000117 	ldw	r16,4(r4)
   4b350:	213ffe04 	addi	r4,r4,-8
   4b354:	24009726 	beq	r4,r16,4b5b4 <_malloc_r+0x2f4>
   4b358:	80800117 	ldw	r2,4(r16)
   4b35c:	01bfff04 	movi	r6,-4
   4b360:	014003c4 	movi	r5,15
   4b364:	1184703a 	and	r2,r2,r6
   4b368:	1447c83a 	sub	r3,r2,r17
   4b36c:	28c00716 	blt	r5,r3,4b38c <_malloc_r+0xcc>
   4b370:	1800920e 	bge	r3,zero,4b5bc <_malloc_r+0x2fc>
   4b374:	84000317 	ldw	r16,12(r16)
   4b378:	24008e26 	beq	r4,r16,4b5b4 <_malloc_r+0x2f4>
   4b37c:	80800117 	ldw	r2,4(r16)
   4b380:	1184703a 	and	r2,r2,r6
   4b384:	1447c83a 	sub	r3,r2,r17
   4b388:	28fff90e 	bge	r5,r3,4b370 <_gp+0xfffee228>
   4b38c:	3809883a 	mov	r4,r7
   4b390:	01800174 	movhi	r6,5
   4b394:	9c000417 	ldw	r16,16(r19)
   4b398:	318ece04 	addi	r6,r6,15160
   4b39c:	32000204 	addi	r8,r6,8
   4b3a0:	82013426 	beq	r16,r8,4b874 <_malloc_r+0x5b4>
   4b3a4:	80c00117 	ldw	r3,4(r16)
   4b3a8:	00bfff04 	movi	r2,-4
   4b3ac:	188e703a 	and	r7,r3,r2
   4b3b0:	3c45c83a 	sub	r2,r7,r17
   4b3b4:	00c003c4 	movi	r3,15
   4b3b8:	18811f16 	blt	r3,r2,4b838 <_malloc_r+0x578>
   4b3bc:	32000515 	stw	r8,20(r6)
   4b3c0:	32000415 	stw	r8,16(r6)
   4b3c4:	10007f0e 	bge	r2,zero,4b5c4 <_malloc_r+0x304>
   4b3c8:	00807fc4 	movi	r2,511
   4b3cc:	11c0fd36 	bltu	r2,r7,4b7c4 <_malloc_r+0x504>
   4b3d0:	3806d0fa 	srli	r3,r7,3
   4b3d4:	01c00044 	movi	r7,1
   4b3d8:	30800117 	ldw	r2,4(r6)
   4b3dc:	19400044 	addi	r5,r3,1
   4b3e0:	294b883a 	add	r5,r5,r5
   4b3e4:	1807d0ba 	srai	r3,r3,2
   4b3e8:	294b883a 	add	r5,r5,r5
   4b3ec:	294b883a 	add	r5,r5,r5
   4b3f0:	298b883a 	add	r5,r5,r6
   4b3f4:	38c6983a 	sll	r3,r7,r3
   4b3f8:	29c00017 	ldw	r7,0(r5)
   4b3fc:	2a7ffe04 	addi	r9,r5,-8
   4b400:	1886b03a 	or	r3,r3,r2
   4b404:	82400315 	stw	r9,12(r16)
   4b408:	81c00215 	stw	r7,8(r16)
   4b40c:	30c00115 	stw	r3,4(r6)
   4b410:	2c000015 	stw	r16,0(r5)
   4b414:	3c000315 	stw	r16,12(r7)
   4b418:	2005d0ba 	srai	r2,r4,2
   4b41c:	01400044 	movi	r5,1
   4b420:	288a983a 	sll	r5,r5,r2
   4b424:	19406f36 	bltu	r3,r5,4b5e4 <_malloc_r+0x324>
   4b428:	28c4703a 	and	r2,r5,r3
   4b42c:	10000a1e 	bne	r2,zero,4b458 <_malloc_r+0x198>
   4b430:	00bfff04 	movi	r2,-4
   4b434:	294b883a 	add	r5,r5,r5
   4b438:	2088703a 	and	r4,r4,r2
   4b43c:	28c4703a 	and	r2,r5,r3
   4b440:	21000104 	addi	r4,r4,4
   4b444:	1000041e 	bne	r2,zero,4b458 <_malloc_r+0x198>
   4b448:	294b883a 	add	r5,r5,r5
   4b44c:	28c4703a 	and	r2,r5,r3
   4b450:	21000104 	addi	r4,r4,4
   4b454:	103ffc26 	beq	r2,zero,4b448 <_gp+0xfffee300>
   4b458:	02bfff04 	movi	r10,-4
   4b45c:	024003c4 	movi	r9,15
   4b460:	21800044 	addi	r6,r4,1
   4b464:	318d883a 	add	r6,r6,r6
   4b468:	318d883a 	add	r6,r6,r6
   4b46c:	318d883a 	add	r6,r6,r6
   4b470:	998d883a 	add	r6,r19,r6
   4b474:	333ffe04 	addi	r12,r6,-8
   4b478:	2017883a 	mov	r11,r4
   4b47c:	31800104 	addi	r6,r6,4
   4b480:	34000017 	ldw	r16,0(r6)
   4b484:	31fffd04 	addi	r7,r6,-12
   4b488:	81c0041e 	bne	r16,r7,4b49c <_malloc_r+0x1dc>
   4b48c:	0000fb06 	br	4b87c <_malloc_r+0x5bc>
   4b490:	1801030e 	bge	r3,zero,4b8a0 <_malloc_r+0x5e0>
   4b494:	84000317 	ldw	r16,12(r16)
   4b498:	81c0f826 	beq	r16,r7,4b87c <_malloc_r+0x5bc>
   4b49c:	80800117 	ldw	r2,4(r16)
   4b4a0:	1284703a 	and	r2,r2,r10
   4b4a4:	1447c83a 	sub	r3,r2,r17
   4b4a8:	48fff90e 	bge	r9,r3,4b490 <_gp+0xfffee348>
   4b4ac:	80800317 	ldw	r2,12(r16)
   4b4b0:	81000217 	ldw	r4,8(r16)
   4b4b4:	89400054 	ori	r5,r17,1
   4b4b8:	81400115 	stw	r5,4(r16)
   4b4bc:	20800315 	stw	r2,12(r4)
   4b4c0:	11000215 	stw	r4,8(r2)
   4b4c4:	8463883a 	add	r17,r16,r17
   4b4c8:	9c400515 	stw	r17,20(r19)
   4b4cc:	9c400415 	stw	r17,16(r19)
   4b4d0:	18800054 	ori	r2,r3,1
   4b4d4:	88800115 	stw	r2,4(r17)
   4b4d8:	8a000315 	stw	r8,12(r17)
   4b4dc:	8a000215 	stw	r8,8(r17)
   4b4e0:	88e3883a 	add	r17,r17,r3
   4b4e4:	88c00015 	stw	r3,0(r17)
   4b4e8:	9009883a 	mov	r4,r18
   4b4ec:	0050c780 	call	50c78 <__malloc_unlock>
   4b4f0:	80800204 	addi	r2,r16,8
   4b4f4:	00001b06 	br	4b564 <_malloc_r+0x2a4>
   4b4f8:	04400404 	movi	r17,16
   4b4fc:	89402536 	bltu	r17,r5,4b594 <_malloc_r+0x2d4>
   4b500:	0050c540 	call	50c54 <__malloc_lock>
   4b504:	00800184 	movi	r2,6
   4b508:	01000084 	movi	r4,2
   4b50c:	04c00174 	movhi	r19,5
   4b510:	1085883a 	add	r2,r2,r2
   4b514:	9ccece04 	addi	r19,r19,15160
   4b518:	1085883a 	add	r2,r2,r2
   4b51c:	9885883a 	add	r2,r19,r2
   4b520:	14000117 	ldw	r16,4(r2)
   4b524:	10fffe04 	addi	r3,r2,-8
   4b528:	80c0d926 	beq	r16,r3,4b890 <_malloc_r+0x5d0>
   4b52c:	80c00117 	ldw	r3,4(r16)
   4b530:	81000317 	ldw	r4,12(r16)
   4b534:	00bfff04 	movi	r2,-4
   4b538:	1884703a 	and	r2,r3,r2
   4b53c:	81400217 	ldw	r5,8(r16)
   4b540:	8085883a 	add	r2,r16,r2
   4b544:	10c00117 	ldw	r3,4(r2)
   4b548:	29000315 	stw	r4,12(r5)
   4b54c:	21400215 	stw	r5,8(r4)
   4b550:	18c00054 	ori	r3,r3,1
   4b554:	10c00115 	stw	r3,4(r2)
   4b558:	9009883a 	mov	r4,r18
   4b55c:	0050c780 	call	50c78 <__malloc_unlock>
   4b560:	80800204 	addi	r2,r16,8
   4b564:	dfc00a17 	ldw	ra,40(sp)
   4b568:	df000917 	ldw	fp,36(sp)
   4b56c:	ddc00817 	ldw	r23,32(sp)
   4b570:	dd800717 	ldw	r22,28(sp)
   4b574:	dd400617 	ldw	r21,24(sp)
   4b578:	dd000517 	ldw	r20,20(sp)
   4b57c:	dcc00417 	ldw	r19,16(sp)
   4b580:	dc800317 	ldw	r18,12(sp)
   4b584:	dc400217 	ldw	r17,8(sp)
   4b588:	dc000117 	ldw	r16,4(sp)
   4b58c:	dec00b04 	addi	sp,sp,44
   4b590:	f800283a 	ret
   4b594:	00800304 	movi	r2,12
   4b598:	90800015 	stw	r2,0(r18)
   4b59c:	0005883a 	mov	r2,zero
   4b5a0:	003ff006 	br	4b564 <_gp+0xfffee41c>
   4b5a4:	01002004 	movi	r4,128
   4b5a8:	02001004 	movi	r8,64
   4b5ac:	01c00fc4 	movi	r7,63
   4b5b0:	003f6106 	br	4b338 <_gp+0xfffee1f0>
   4b5b4:	4009883a 	mov	r4,r8
   4b5b8:	003f7506 	br	4b390 <_gp+0xfffee248>
   4b5bc:	81000317 	ldw	r4,12(r16)
   4b5c0:	003fde06 	br	4b53c <_gp+0xfffee3f4>
   4b5c4:	81c5883a 	add	r2,r16,r7
   4b5c8:	11400117 	ldw	r5,4(r2)
   4b5cc:	9009883a 	mov	r4,r18
   4b5d0:	29400054 	ori	r5,r5,1
   4b5d4:	11400115 	stw	r5,4(r2)
   4b5d8:	0050c780 	call	50c78 <__malloc_unlock>
   4b5dc:	80800204 	addi	r2,r16,8
   4b5e0:	003fe006 	br	4b564 <_gp+0xfffee41c>
   4b5e4:	9c000217 	ldw	r16,8(r19)
   4b5e8:	00bfff04 	movi	r2,-4
   4b5ec:	85800117 	ldw	r22,4(r16)
   4b5f0:	b0ac703a 	and	r22,r22,r2
   4b5f4:	b4400336 	bltu	r22,r17,4b604 <_malloc_r+0x344>
   4b5f8:	b445c83a 	sub	r2,r22,r17
   4b5fc:	00c003c4 	movi	r3,15
   4b600:	18805d16 	blt	r3,r2,4b778 <_malloc_r+0x4b8>
   4b604:	05c00174 	movhi	r23,5
   4b608:	00800174 	movhi	r2,5
   4b60c:	109c9b04 	addi	r2,r2,29292
   4b610:	bdd45604 	addi	r23,r23,20824
   4b614:	15400017 	ldw	r21,0(r2)
   4b618:	b8c00017 	ldw	r3,0(r23)
   4b61c:	00bfffc4 	movi	r2,-1
   4b620:	858d883a 	add	r6,r16,r22
   4b624:	8d6b883a 	add	r21,r17,r21
   4b628:	1880ea26 	beq	r3,r2,4b9d4 <_malloc_r+0x714>
   4b62c:	ad4403c4 	addi	r21,r21,4111
   4b630:	00bc0004 	movi	r2,-4096
   4b634:	a8aa703a 	and	r21,r21,r2
   4b638:	a80b883a 	mov	r5,r21
   4b63c:	9009883a 	mov	r4,r18
   4b640:	d9800015 	stw	r6,0(sp)
   4b644:	004d60c0 	call	4d60c <_sbrk_r>
   4b648:	1029883a 	mov	r20,r2
   4b64c:	00bfffc4 	movi	r2,-1
   4b650:	d9800017 	ldw	r6,0(sp)
   4b654:	a080e826 	beq	r20,r2,4b9f8 <_malloc_r+0x738>
   4b658:	a180a636 	bltu	r20,r6,4b8f4 <_malloc_r+0x634>
   4b65c:	07000174 	movhi	fp,5
   4b660:	e71ca404 	addi	fp,fp,29328
   4b664:	e0800017 	ldw	r2,0(fp)
   4b668:	a887883a 	add	r3,r21,r2
   4b66c:	e0c00015 	stw	r3,0(fp)
   4b670:	3500e626 	beq	r6,r20,4ba0c <_malloc_r+0x74c>
   4b674:	b9000017 	ldw	r4,0(r23)
   4b678:	00bfffc4 	movi	r2,-1
   4b67c:	2080ee26 	beq	r4,r2,4ba38 <_malloc_r+0x778>
   4b680:	a185c83a 	sub	r2,r20,r6
   4b684:	10c5883a 	add	r2,r2,r3
   4b688:	e0800015 	stw	r2,0(fp)
   4b68c:	a0c001cc 	andi	r3,r20,7
   4b690:	1800bc26 	beq	r3,zero,4b984 <_malloc_r+0x6c4>
   4b694:	a0e9c83a 	sub	r20,r20,r3
   4b698:	00840204 	movi	r2,4104
   4b69c:	a5000204 	addi	r20,r20,8
   4b6a0:	10c7c83a 	sub	r3,r2,r3
   4b6a4:	a545883a 	add	r2,r20,r21
   4b6a8:	1083ffcc 	andi	r2,r2,4095
   4b6ac:	18abc83a 	sub	r21,r3,r2
   4b6b0:	a80b883a 	mov	r5,r21
   4b6b4:	9009883a 	mov	r4,r18
   4b6b8:	004d60c0 	call	4d60c <_sbrk_r>
   4b6bc:	00ffffc4 	movi	r3,-1
   4b6c0:	10c0e126 	beq	r2,r3,4ba48 <_malloc_r+0x788>
   4b6c4:	1505c83a 	sub	r2,r2,r20
   4b6c8:	1545883a 	add	r2,r2,r21
   4b6cc:	10800054 	ori	r2,r2,1
   4b6d0:	e0c00017 	ldw	r3,0(fp)
   4b6d4:	9d000215 	stw	r20,8(r19)
   4b6d8:	a0800115 	stw	r2,4(r20)
   4b6dc:	a8c7883a 	add	r3,r21,r3
   4b6e0:	e0c00015 	stw	r3,0(fp)
   4b6e4:	84c00e26 	beq	r16,r19,4b720 <_malloc_r+0x460>
   4b6e8:	018003c4 	movi	r6,15
   4b6ec:	3580a72e 	bgeu	r6,r22,4b98c <_malloc_r+0x6cc>
   4b6f0:	81400117 	ldw	r5,4(r16)
   4b6f4:	013ffe04 	movi	r4,-8
   4b6f8:	b0bffd04 	addi	r2,r22,-12
   4b6fc:	1104703a 	and	r2,r2,r4
   4b700:	2900004c 	andi	r4,r5,1
   4b704:	2088b03a 	or	r4,r4,r2
   4b708:	81000115 	stw	r4,4(r16)
   4b70c:	01400144 	movi	r5,5
   4b710:	8089883a 	add	r4,r16,r2
   4b714:	21400115 	stw	r5,4(r4)
   4b718:	21400215 	stw	r5,8(r4)
   4b71c:	3080cd36 	bltu	r6,r2,4ba54 <_malloc_r+0x794>
   4b720:	00800174 	movhi	r2,5
   4b724:	109c9a04 	addi	r2,r2,29288
   4b728:	11000017 	ldw	r4,0(r2)
   4b72c:	20c0012e 	bgeu	r4,r3,4b734 <_malloc_r+0x474>
   4b730:	10c00015 	stw	r3,0(r2)
   4b734:	00800174 	movhi	r2,5
   4b738:	109c9904 	addi	r2,r2,29284
   4b73c:	11000017 	ldw	r4,0(r2)
   4b740:	9c000217 	ldw	r16,8(r19)
   4b744:	20c0012e 	bgeu	r4,r3,4b74c <_malloc_r+0x48c>
   4b748:	10c00015 	stw	r3,0(r2)
   4b74c:	80c00117 	ldw	r3,4(r16)
   4b750:	00bfff04 	movi	r2,-4
   4b754:	1886703a 	and	r3,r3,r2
   4b758:	1c45c83a 	sub	r2,r3,r17
   4b75c:	1c400236 	bltu	r3,r17,4b768 <_malloc_r+0x4a8>
   4b760:	00c003c4 	movi	r3,15
   4b764:	18800416 	blt	r3,r2,4b778 <_malloc_r+0x4b8>
   4b768:	9009883a 	mov	r4,r18
   4b76c:	0050c780 	call	50c78 <__malloc_unlock>
   4b770:	0005883a 	mov	r2,zero
   4b774:	003f7b06 	br	4b564 <_gp+0xfffee41c>
   4b778:	88c00054 	ori	r3,r17,1
   4b77c:	80c00115 	stw	r3,4(r16)
   4b780:	8463883a 	add	r17,r16,r17
   4b784:	10800054 	ori	r2,r2,1
   4b788:	9c400215 	stw	r17,8(r19)
   4b78c:	88800115 	stw	r2,4(r17)
   4b790:	9009883a 	mov	r4,r18
   4b794:	0050c780 	call	50c78 <__malloc_unlock>
   4b798:	80800204 	addi	r2,r16,8
   4b79c:	003f7106 	br	4b564 <_gp+0xfffee41c>
   4b7a0:	00c00504 	movi	r3,20
   4b7a4:	18804a2e 	bgeu	r3,r2,4b8d0 <_malloc_r+0x610>
   4b7a8:	00c01504 	movi	r3,84
   4b7ac:	18806e36 	bltu	r3,r2,4b968 <_malloc_r+0x6a8>
   4b7b0:	8804d33a 	srli	r2,r17,12
   4b7b4:	12001bc4 	addi	r8,r2,111
   4b7b8:	11c01b84 	addi	r7,r2,110
   4b7bc:	4209883a 	add	r4,r8,r8
   4b7c0:	003edd06 	br	4b338 <_gp+0xfffee1f0>
   4b7c4:	3804d27a 	srli	r2,r7,9
   4b7c8:	00c00104 	movi	r3,4
   4b7cc:	1880442e 	bgeu	r3,r2,4b8e0 <_malloc_r+0x620>
   4b7d0:	00c00504 	movi	r3,20
   4b7d4:	18808136 	bltu	r3,r2,4b9dc <_malloc_r+0x71c>
   4b7d8:	11401704 	addi	r5,r2,92
   4b7dc:	10c016c4 	addi	r3,r2,91
   4b7e0:	294b883a 	add	r5,r5,r5
   4b7e4:	294b883a 	add	r5,r5,r5
   4b7e8:	294b883a 	add	r5,r5,r5
   4b7ec:	994b883a 	add	r5,r19,r5
   4b7f0:	28800017 	ldw	r2,0(r5)
   4b7f4:	01800174 	movhi	r6,5
   4b7f8:	297ffe04 	addi	r5,r5,-8
   4b7fc:	318ece04 	addi	r6,r6,15160
   4b800:	28806526 	beq	r5,r2,4b998 <_malloc_r+0x6d8>
   4b804:	01bfff04 	movi	r6,-4
   4b808:	10c00117 	ldw	r3,4(r2)
   4b80c:	1986703a 	and	r3,r3,r6
   4b810:	38c0022e 	bgeu	r7,r3,4b81c <_malloc_r+0x55c>
   4b814:	10800217 	ldw	r2,8(r2)
   4b818:	28bffb1e 	bne	r5,r2,4b808 <_gp+0xfffee6c0>
   4b81c:	11400317 	ldw	r5,12(r2)
   4b820:	98c00117 	ldw	r3,4(r19)
   4b824:	81400315 	stw	r5,12(r16)
   4b828:	80800215 	stw	r2,8(r16)
   4b82c:	2c000215 	stw	r16,8(r5)
   4b830:	14000315 	stw	r16,12(r2)
   4b834:	003ef806 	br	4b418 <_gp+0xfffee2d0>
   4b838:	88c00054 	ori	r3,r17,1
   4b83c:	80c00115 	stw	r3,4(r16)
   4b840:	8463883a 	add	r17,r16,r17
   4b844:	34400515 	stw	r17,20(r6)
   4b848:	34400415 	stw	r17,16(r6)
   4b84c:	10c00054 	ori	r3,r2,1
   4b850:	8a000315 	stw	r8,12(r17)
   4b854:	8a000215 	stw	r8,8(r17)
   4b858:	88c00115 	stw	r3,4(r17)
   4b85c:	88a3883a 	add	r17,r17,r2
   4b860:	88800015 	stw	r2,0(r17)
   4b864:	9009883a 	mov	r4,r18
   4b868:	0050c780 	call	50c78 <__malloc_unlock>
   4b86c:	80800204 	addi	r2,r16,8
   4b870:	003f3c06 	br	4b564 <_gp+0xfffee41c>
   4b874:	30c00117 	ldw	r3,4(r6)
   4b878:	003ee706 	br	4b418 <_gp+0xfffee2d0>
   4b87c:	5ac00044 	addi	r11,r11,1
   4b880:	588000cc 	andi	r2,r11,3
   4b884:	31800204 	addi	r6,r6,8
   4b888:	103efd1e 	bne	r2,zero,4b480 <_gp+0xfffee338>
   4b88c:	00002406 	br	4b920 <_malloc_r+0x660>
   4b890:	14000317 	ldw	r16,12(r2)
   4b894:	143f251e 	bne	r2,r16,4b52c <_gp+0xfffee3e4>
   4b898:	21000084 	addi	r4,r4,2
   4b89c:	003ebc06 	br	4b390 <_gp+0xfffee248>
   4b8a0:	8085883a 	add	r2,r16,r2
   4b8a4:	10c00117 	ldw	r3,4(r2)
   4b8a8:	81000317 	ldw	r4,12(r16)
   4b8ac:	81400217 	ldw	r5,8(r16)
   4b8b0:	18c00054 	ori	r3,r3,1
   4b8b4:	10c00115 	stw	r3,4(r2)
   4b8b8:	29000315 	stw	r4,12(r5)
   4b8bc:	21400215 	stw	r5,8(r4)
   4b8c0:	9009883a 	mov	r4,r18
   4b8c4:	0050c780 	call	50c78 <__malloc_unlock>
   4b8c8:	80800204 	addi	r2,r16,8
   4b8cc:	003f2506 	br	4b564 <_gp+0xfffee41c>
   4b8d0:	12001704 	addi	r8,r2,92
   4b8d4:	11c016c4 	addi	r7,r2,91
   4b8d8:	4209883a 	add	r4,r8,r8
   4b8dc:	003e9606 	br	4b338 <_gp+0xfffee1f0>
   4b8e0:	3804d1ba 	srli	r2,r7,6
   4b8e4:	11400e44 	addi	r5,r2,57
   4b8e8:	10c00e04 	addi	r3,r2,56
   4b8ec:	294b883a 	add	r5,r5,r5
   4b8f0:	003fbc06 	br	4b7e4 <_gp+0xfffee69c>
   4b8f4:	84ff5926 	beq	r16,r19,4b65c <_gp+0xfffee514>
   4b8f8:	00800174 	movhi	r2,5
   4b8fc:	108ece04 	addi	r2,r2,15160
   4b900:	14000217 	ldw	r16,8(r2)
   4b904:	00bfff04 	movi	r2,-4
   4b908:	80c00117 	ldw	r3,4(r16)
   4b90c:	1886703a 	and	r3,r3,r2
   4b910:	003f9106 	br	4b758 <_gp+0xfffee610>
   4b914:	60800217 	ldw	r2,8(r12)
   4b918:	213fffc4 	addi	r4,r4,-1
   4b91c:	1300651e 	bne	r2,r12,4bab4 <_malloc_r+0x7f4>
   4b920:	208000cc 	andi	r2,r4,3
   4b924:	633ffe04 	addi	r12,r12,-8
   4b928:	103ffa1e 	bne	r2,zero,4b914 <_gp+0xfffee7cc>
   4b92c:	98800117 	ldw	r2,4(r19)
   4b930:	0146303a 	nor	r3,zero,r5
   4b934:	1884703a 	and	r2,r3,r2
   4b938:	98800115 	stw	r2,4(r19)
   4b93c:	294b883a 	add	r5,r5,r5
   4b940:	117f2836 	bltu	r2,r5,4b5e4 <_gp+0xfffee49c>
   4b944:	283f2726 	beq	r5,zero,4b5e4 <_gp+0xfffee49c>
   4b948:	2886703a 	and	r3,r5,r2
   4b94c:	5809883a 	mov	r4,r11
   4b950:	183ec31e 	bne	r3,zero,4b460 <_gp+0xfffee318>
   4b954:	294b883a 	add	r5,r5,r5
   4b958:	2886703a 	and	r3,r5,r2
   4b95c:	21000104 	addi	r4,r4,4
   4b960:	183ffc26 	beq	r3,zero,4b954 <_gp+0xfffee80c>
   4b964:	003ebe06 	br	4b460 <_gp+0xfffee318>
   4b968:	00c05504 	movi	r3,340
   4b96c:	18801236 	bltu	r3,r2,4b9b8 <_malloc_r+0x6f8>
   4b970:	8804d3fa 	srli	r2,r17,15
   4b974:	12001e04 	addi	r8,r2,120
   4b978:	11c01dc4 	addi	r7,r2,119
   4b97c:	4209883a 	add	r4,r8,r8
   4b980:	003e6d06 	br	4b338 <_gp+0xfffee1f0>
   4b984:	00c40004 	movi	r3,4096
   4b988:	003f4606 	br	4b6a4 <_gp+0xfffee55c>
   4b98c:	00800044 	movi	r2,1
   4b990:	a0800115 	stw	r2,4(r20)
   4b994:	003f7406 	br	4b768 <_gp+0xfffee620>
   4b998:	1805d0ba 	srai	r2,r3,2
   4b99c:	01c00044 	movi	r7,1
   4b9a0:	30c00117 	ldw	r3,4(r6)
   4b9a4:	388e983a 	sll	r7,r7,r2
   4b9a8:	2805883a 	mov	r2,r5
   4b9ac:	38c6b03a 	or	r3,r7,r3
   4b9b0:	30c00115 	stw	r3,4(r6)
   4b9b4:	003f9b06 	br	4b824 <_gp+0xfffee6dc>
   4b9b8:	00c15504 	movi	r3,1364
   4b9bc:	18801a36 	bltu	r3,r2,4ba28 <_malloc_r+0x768>
   4b9c0:	8804d4ba 	srli	r2,r17,18
   4b9c4:	12001f44 	addi	r8,r2,125
   4b9c8:	11c01f04 	addi	r7,r2,124
   4b9cc:	4209883a 	add	r4,r8,r8
   4b9d0:	003e5906 	br	4b338 <_gp+0xfffee1f0>
   4b9d4:	ad400404 	addi	r21,r21,16
   4b9d8:	003f1706 	br	4b638 <_gp+0xfffee4f0>
   4b9dc:	00c01504 	movi	r3,84
   4b9e0:	18802336 	bltu	r3,r2,4ba70 <_malloc_r+0x7b0>
   4b9e4:	3804d33a 	srli	r2,r7,12
   4b9e8:	11401bc4 	addi	r5,r2,111
   4b9ec:	10c01b84 	addi	r3,r2,110
   4b9f0:	294b883a 	add	r5,r5,r5
   4b9f4:	003f7b06 	br	4b7e4 <_gp+0xfffee69c>
   4b9f8:	9c000217 	ldw	r16,8(r19)
   4b9fc:	00bfff04 	movi	r2,-4
   4ba00:	80c00117 	ldw	r3,4(r16)
   4ba04:	1886703a 	and	r3,r3,r2
   4ba08:	003f5306 	br	4b758 <_gp+0xfffee610>
   4ba0c:	3083ffcc 	andi	r2,r6,4095
   4ba10:	103f181e 	bne	r2,zero,4b674 <_gp+0xfffee52c>
   4ba14:	99000217 	ldw	r4,8(r19)
   4ba18:	b545883a 	add	r2,r22,r21
   4ba1c:	10800054 	ori	r2,r2,1
   4ba20:	20800115 	stw	r2,4(r4)
   4ba24:	003f3e06 	br	4b720 <_gp+0xfffee5d8>
   4ba28:	01003f84 	movi	r4,254
   4ba2c:	02001fc4 	movi	r8,127
   4ba30:	01c01f84 	movi	r7,126
   4ba34:	003e4006 	br	4b338 <_gp+0xfffee1f0>
   4ba38:	00800174 	movhi	r2,5
   4ba3c:	10945604 	addi	r2,r2,20824
   4ba40:	15000015 	stw	r20,0(r2)
   4ba44:	003f1106 	br	4b68c <_gp+0xfffee544>
   4ba48:	00800044 	movi	r2,1
   4ba4c:	002b883a 	mov	r21,zero
   4ba50:	003f1f06 	br	4b6d0 <_gp+0xfffee588>
   4ba54:	81400204 	addi	r5,r16,8
   4ba58:	9009883a 	mov	r4,r18
   4ba5c:	004a6c80 	call	4a6c8 <_free_r>
   4ba60:	00800174 	movhi	r2,5
   4ba64:	109ca404 	addi	r2,r2,29328
   4ba68:	10c00017 	ldw	r3,0(r2)
   4ba6c:	003f2c06 	br	4b720 <_gp+0xfffee5d8>
   4ba70:	00c05504 	movi	r3,340
   4ba74:	18800536 	bltu	r3,r2,4ba8c <_malloc_r+0x7cc>
   4ba78:	3804d3fa 	srli	r2,r7,15
   4ba7c:	11401e04 	addi	r5,r2,120
   4ba80:	10c01dc4 	addi	r3,r2,119
   4ba84:	294b883a 	add	r5,r5,r5
   4ba88:	003f5606 	br	4b7e4 <_gp+0xfffee69c>
   4ba8c:	00c15504 	movi	r3,1364
   4ba90:	18800536 	bltu	r3,r2,4baa8 <_malloc_r+0x7e8>
   4ba94:	3804d4ba 	srli	r2,r7,18
   4ba98:	11401f44 	addi	r5,r2,125
   4ba9c:	10c01f04 	addi	r3,r2,124
   4baa0:	294b883a 	add	r5,r5,r5
   4baa4:	003f4f06 	br	4b7e4 <_gp+0xfffee69c>
   4baa8:	01403f84 	movi	r5,254
   4baac:	00c01f84 	movi	r3,126
   4bab0:	003f4c06 	br	4b7e4 <_gp+0xfffee69c>
   4bab4:	98800117 	ldw	r2,4(r19)
   4bab8:	003fa006 	br	4b93c <_gp+0xfffee7f4>
   4babc:	8808d0fa 	srli	r4,r17,3
   4bac0:	20800044 	addi	r2,r4,1
   4bac4:	1085883a 	add	r2,r2,r2
   4bac8:	003e9006 	br	4b50c <_gp+0xfffee3c4>

0004bacc <memchr>:
   4bacc:	208000cc 	andi	r2,r4,3
   4bad0:	280f883a 	mov	r7,r5
   4bad4:	10003426 	beq	r2,zero,4bba8 <memchr+0xdc>
   4bad8:	30bfffc4 	addi	r2,r6,-1
   4badc:	30001a26 	beq	r6,zero,4bb48 <memchr+0x7c>
   4bae0:	20c00003 	ldbu	r3,0(r4)
   4bae4:	29803fcc 	andi	r6,r5,255
   4bae8:	30c0051e 	bne	r6,r3,4bb00 <memchr+0x34>
   4baec:	00001806 	br	4bb50 <memchr+0x84>
   4baf0:	10001526 	beq	r2,zero,4bb48 <memchr+0x7c>
   4baf4:	20c00003 	ldbu	r3,0(r4)
   4baf8:	10bfffc4 	addi	r2,r2,-1
   4bafc:	30c01426 	beq	r6,r3,4bb50 <memchr+0x84>
   4bb00:	21000044 	addi	r4,r4,1
   4bb04:	20c000cc 	andi	r3,r4,3
   4bb08:	183ff91e 	bne	r3,zero,4baf0 <_gp+0xfffee9a8>
   4bb0c:	020000c4 	movi	r8,3
   4bb10:	40801136 	bltu	r8,r2,4bb58 <memchr+0x8c>
   4bb14:	10000c26 	beq	r2,zero,4bb48 <memchr+0x7c>
   4bb18:	20c00003 	ldbu	r3,0(r4)
   4bb1c:	29403fcc 	andi	r5,r5,255
   4bb20:	28c00b26 	beq	r5,r3,4bb50 <memchr+0x84>
   4bb24:	20c00044 	addi	r3,r4,1
   4bb28:	39803fcc 	andi	r6,r7,255
   4bb2c:	2089883a 	add	r4,r4,r2
   4bb30:	00000306 	br	4bb40 <memchr+0x74>
   4bb34:	18c00044 	addi	r3,r3,1
   4bb38:	197fffc3 	ldbu	r5,-1(r3)
   4bb3c:	31400526 	beq	r6,r5,4bb54 <memchr+0x88>
   4bb40:	1805883a 	mov	r2,r3
   4bb44:	20fffb1e 	bne	r4,r3,4bb34 <_gp+0xfffee9ec>
   4bb48:	0005883a 	mov	r2,zero
   4bb4c:	f800283a 	ret
   4bb50:	2005883a 	mov	r2,r4
   4bb54:	f800283a 	ret
   4bb58:	28c03fcc 	andi	r3,r5,255
   4bb5c:	1812923a 	slli	r9,r3,8
   4bb60:	02ffbff4 	movhi	r11,65279
   4bb64:	02a02074 	movhi	r10,32897
   4bb68:	48d2b03a 	or	r9,r9,r3
   4bb6c:	4806943a 	slli	r3,r9,16
   4bb70:	5affbfc4 	addi	r11,r11,-257
   4bb74:	52a02004 	addi	r10,r10,-32640
   4bb78:	48d2b03a 	or	r9,r9,r3
   4bb7c:	20c00017 	ldw	r3,0(r4)
   4bb80:	48c6f03a 	xor	r3,r9,r3
   4bb84:	1acd883a 	add	r6,r3,r11
   4bb88:	00c6303a 	nor	r3,zero,r3
   4bb8c:	30c6703a 	and	r3,r6,r3
   4bb90:	1a86703a 	and	r3,r3,r10
   4bb94:	183fe01e 	bne	r3,zero,4bb18 <_gp+0xfffee9d0>
   4bb98:	10bfff04 	addi	r2,r2,-4
   4bb9c:	21000104 	addi	r4,r4,4
   4bba0:	40bff636 	bltu	r8,r2,4bb7c <_gp+0xfffeea34>
   4bba4:	003fdb06 	br	4bb14 <_gp+0xfffee9cc>
   4bba8:	3005883a 	mov	r2,r6
   4bbac:	003fd706 	br	4bb0c <_gp+0xfffee9c4>

0004bbb0 <memcpy>:
   4bbb0:	defffd04 	addi	sp,sp,-12
   4bbb4:	dfc00215 	stw	ra,8(sp)
   4bbb8:	dc400115 	stw	r17,4(sp)
   4bbbc:	dc000015 	stw	r16,0(sp)
   4bbc0:	00c003c4 	movi	r3,15
   4bbc4:	2005883a 	mov	r2,r4
   4bbc8:	1980452e 	bgeu	r3,r6,4bce0 <memcpy+0x130>
   4bbcc:	2906b03a 	or	r3,r5,r4
   4bbd0:	18c000cc 	andi	r3,r3,3
   4bbd4:	1800441e 	bne	r3,zero,4bce8 <memcpy+0x138>
   4bbd8:	347ffc04 	addi	r17,r6,-16
   4bbdc:	8822d13a 	srli	r17,r17,4
   4bbe0:	28c00104 	addi	r3,r5,4
   4bbe4:	23400104 	addi	r13,r4,4
   4bbe8:	8820913a 	slli	r16,r17,4
   4bbec:	2b000204 	addi	r12,r5,8
   4bbf0:	22c00204 	addi	r11,r4,8
   4bbf4:	84000504 	addi	r16,r16,20
   4bbf8:	2a800304 	addi	r10,r5,12
   4bbfc:	22400304 	addi	r9,r4,12
   4bc00:	2c21883a 	add	r16,r5,r16
   4bc04:	2811883a 	mov	r8,r5
   4bc08:	200f883a 	mov	r7,r4
   4bc0c:	41000017 	ldw	r4,0(r8)
   4bc10:	1fc00017 	ldw	ra,0(r3)
   4bc14:	63c00017 	ldw	r15,0(r12)
   4bc18:	39000015 	stw	r4,0(r7)
   4bc1c:	53800017 	ldw	r14,0(r10)
   4bc20:	6fc00015 	stw	ra,0(r13)
   4bc24:	5bc00015 	stw	r15,0(r11)
   4bc28:	4b800015 	stw	r14,0(r9)
   4bc2c:	18c00404 	addi	r3,r3,16
   4bc30:	39c00404 	addi	r7,r7,16
   4bc34:	42000404 	addi	r8,r8,16
   4bc38:	6b400404 	addi	r13,r13,16
   4bc3c:	63000404 	addi	r12,r12,16
   4bc40:	5ac00404 	addi	r11,r11,16
   4bc44:	52800404 	addi	r10,r10,16
   4bc48:	4a400404 	addi	r9,r9,16
   4bc4c:	1c3fef1e 	bne	r3,r16,4bc0c <_gp+0xfffeeac4>
   4bc50:	89c00044 	addi	r7,r17,1
   4bc54:	380e913a 	slli	r7,r7,4
   4bc58:	310003cc 	andi	r4,r6,15
   4bc5c:	02c000c4 	movi	r11,3
   4bc60:	11c7883a 	add	r3,r2,r7
   4bc64:	29cb883a 	add	r5,r5,r7
   4bc68:	5900212e 	bgeu	r11,r4,4bcf0 <memcpy+0x140>
   4bc6c:	1813883a 	mov	r9,r3
   4bc70:	2811883a 	mov	r8,r5
   4bc74:	200f883a 	mov	r7,r4
   4bc78:	42800017 	ldw	r10,0(r8)
   4bc7c:	4a400104 	addi	r9,r9,4
   4bc80:	39ffff04 	addi	r7,r7,-4
   4bc84:	4abfff15 	stw	r10,-4(r9)
   4bc88:	42000104 	addi	r8,r8,4
   4bc8c:	59fffa36 	bltu	r11,r7,4bc78 <_gp+0xfffeeb30>
   4bc90:	213fff04 	addi	r4,r4,-4
   4bc94:	2008d0ba 	srli	r4,r4,2
   4bc98:	318000cc 	andi	r6,r6,3
   4bc9c:	21000044 	addi	r4,r4,1
   4bca0:	2109883a 	add	r4,r4,r4
   4bca4:	2109883a 	add	r4,r4,r4
   4bca8:	1907883a 	add	r3,r3,r4
   4bcac:	290b883a 	add	r5,r5,r4
   4bcb0:	30000626 	beq	r6,zero,4bccc <memcpy+0x11c>
   4bcb4:	198d883a 	add	r6,r3,r6
   4bcb8:	29c00003 	ldbu	r7,0(r5)
   4bcbc:	18c00044 	addi	r3,r3,1
   4bcc0:	29400044 	addi	r5,r5,1
   4bcc4:	19ffffc5 	stb	r7,-1(r3)
   4bcc8:	19bffb1e 	bne	r3,r6,4bcb8 <_gp+0xfffeeb70>
   4bccc:	dfc00217 	ldw	ra,8(sp)
   4bcd0:	dc400117 	ldw	r17,4(sp)
   4bcd4:	dc000017 	ldw	r16,0(sp)
   4bcd8:	dec00304 	addi	sp,sp,12
   4bcdc:	f800283a 	ret
   4bce0:	2007883a 	mov	r3,r4
   4bce4:	003ff206 	br	4bcb0 <_gp+0xfffeeb68>
   4bce8:	2007883a 	mov	r3,r4
   4bcec:	003ff106 	br	4bcb4 <_gp+0xfffeeb6c>
   4bcf0:	200d883a 	mov	r6,r4
   4bcf4:	003fee06 	br	4bcb0 <_gp+0xfffeeb68>

0004bcf8 <memmove>:
   4bcf8:	2005883a 	mov	r2,r4
   4bcfc:	29000b2e 	bgeu	r5,r4,4bd2c <memmove+0x34>
   4bd00:	298f883a 	add	r7,r5,r6
   4bd04:	21c0092e 	bgeu	r4,r7,4bd2c <memmove+0x34>
   4bd08:	2187883a 	add	r3,r4,r6
   4bd0c:	198bc83a 	sub	r5,r3,r6
   4bd10:	30004826 	beq	r6,zero,4be34 <memmove+0x13c>
   4bd14:	39ffffc4 	addi	r7,r7,-1
   4bd18:	39000003 	ldbu	r4,0(r7)
   4bd1c:	18ffffc4 	addi	r3,r3,-1
   4bd20:	19000005 	stb	r4,0(r3)
   4bd24:	28fffb1e 	bne	r5,r3,4bd14 <_gp+0xfffeebcc>
   4bd28:	f800283a 	ret
   4bd2c:	00c003c4 	movi	r3,15
   4bd30:	1980412e 	bgeu	r3,r6,4be38 <memmove+0x140>
   4bd34:	2886b03a 	or	r3,r5,r2
   4bd38:	18c000cc 	andi	r3,r3,3
   4bd3c:	1800401e 	bne	r3,zero,4be40 <memmove+0x148>
   4bd40:	33fffc04 	addi	r15,r6,-16
   4bd44:	781ed13a 	srli	r15,r15,4
   4bd48:	28c00104 	addi	r3,r5,4
   4bd4c:	13400104 	addi	r13,r2,4
   4bd50:	781c913a 	slli	r14,r15,4
   4bd54:	2b000204 	addi	r12,r5,8
   4bd58:	12c00204 	addi	r11,r2,8
   4bd5c:	73800504 	addi	r14,r14,20
   4bd60:	2a800304 	addi	r10,r5,12
   4bd64:	12400304 	addi	r9,r2,12
   4bd68:	2b9d883a 	add	r14,r5,r14
   4bd6c:	2811883a 	mov	r8,r5
   4bd70:	100f883a 	mov	r7,r2
   4bd74:	41000017 	ldw	r4,0(r8)
   4bd78:	39c00404 	addi	r7,r7,16
   4bd7c:	18c00404 	addi	r3,r3,16
   4bd80:	393ffc15 	stw	r4,-16(r7)
   4bd84:	193ffc17 	ldw	r4,-16(r3)
   4bd88:	6b400404 	addi	r13,r13,16
   4bd8c:	5ac00404 	addi	r11,r11,16
   4bd90:	693ffc15 	stw	r4,-16(r13)
   4bd94:	61000017 	ldw	r4,0(r12)
   4bd98:	4a400404 	addi	r9,r9,16
   4bd9c:	42000404 	addi	r8,r8,16
   4bda0:	593ffc15 	stw	r4,-16(r11)
   4bda4:	51000017 	ldw	r4,0(r10)
   4bda8:	63000404 	addi	r12,r12,16
   4bdac:	52800404 	addi	r10,r10,16
   4bdb0:	493ffc15 	stw	r4,-16(r9)
   4bdb4:	1bbfef1e 	bne	r3,r14,4bd74 <_gp+0xfffeec2c>
   4bdb8:	79000044 	addi	r4,r15,1
   4bdbc:	2008913a 	slli	r4,r4,4
   4bdc0:	328003cc 	andi	r10,r6,15
   4bdc4:	02c000c4 	movi	r11,3
   4bdc8:	1107883a 	add	r3,r2,r4
   4bdcc:	290b883a 	add	r5,r5,r4
   4bdd0:	5a801e2e 	bgeu	r11,r10,4be4c <memmove+0x154>
   4bdd4:	1813883a 	mov	r9,r3
   4bdd8:	2811883a 	mov	r8,r5
   4bddc:	500f883a 	mov	r7,r10
   4bde0:	41000017 	ldw	r4,0(r8)
   4bde4:	4a400104 	addi	r9,r9,4
   4bde8:	39ffff04 	addi	r7,r7,-4
   4bdec:	493fff15 	stw	r4,-4(r9)
   4bdf0:	42000104 	addi	r8,r8,4
   4bdf4:	59fffa36 	bltu	r11,r7,4bde0 <_gp+0xfffeec98>
   4bdf8:	513fff04 	addi	r4,r10,-4
   4bdfc:	2008d0ba 	srli	r4,r4,2
   4be00:	318000cc 	andi	r6,r6,3
   4be04:	21000044 	addi	r4,r4,1
   4be08:	2109883a 	add	r4,r4,r4
   4be0c:	2109883a 	add	r4,r4,r4
   4be10:	1907883a 	add	r3,r3,r4
   4be14:	290b883a 	add	r5,r5,r4
   4be18:	30000b26 	beq	r6,zero,4be48 <memmove+0x150>
   4be1c:	198d883a 	add	r6,r3,r6
   4be20:	29c00003 	ldbu	r7,0(r5)
   4be24:	18c00044 	addi	r3,r3,1
   4be28:	29400044 	addi	r5,r5,1
   4be2c:	19ffffc5 	stb	r7,-1(r3)
   4be30:	19bffb1e 	bne	r3,r6,4be20 <_gp+0xfffeecd8>
   4be34:	f800283a 	ret
   4be38:	1007883a 	mov	r3,r2
   4be3c:	003ff606 	br	4be18 <_gp+0xfffeecd0>
   4be40:	1007883a 	mov	r3,r2
   4be44:	003ff506 	br	4be1c <_gp+0xfffeecd4>
   4be48:	f800283a 	ret
   4be4c:	500d883a 	mov	r6,r10
   4be50:	003ff106 	br	4be18 <_gp+0xfffeecd0>

0004be54 <memset>:
   4be54:	20c000cc 	andi	r3,r4,3
   4be58:	2005883a 	mov	r2,r4
   4be5c:	18004426 	beq	r3,zero,4bf70 <memset+0x11c>
   4be60:	31ffffc4 	addi	r7,r6,-1
   4be64:	30004026 	beq	r6,zero,4bf68 <memset+0x114>
   4be68:	2813883a 	mov	r9,r5
   4be6c:	200d883a 	mov	r6,r4
   4be70:	2007883a 	mov	r3,r4
   4be74:	00000406 	br	4be88 <memset+0x34>
   4be78:	3a3fffc4 	addi	r8,r7,-1
   4be7c:	31800044 	addi	r6,r6,1
   4be80:	38003926 	beq	r7,zero,4bf68 <memset+0x114>
   4be84:	400f883a 	mov	r7,r8
   4be88:	18c00044 	addi	r3,r3,1
   4be8c:	32400005 	stb	r9,0(r6)
   4be90:	1a0000cc 	andi	r8,r3,3
   4be94:	403ff81e 	bne	r8,zero,4be78 <_gp+0xfffeed30>
   4be98:	010000c4 	movi	r4,3
   4be9c:	21c02d2e 	bgeu	r4,r7,4bf54 <memset+0x100>
   4bea0:	29003fcc 	andi	r4,r5,255
   4bea4:	200c923a 	slli	r6,r4,8
   4bea8:	3108b03a 	or	r4,r6,r4
   4beac:	200c943a 	slli	r6,r4,16
   4beb0:	218cb03a 	or	r6,r4,r6
   4beb4:	010003c4 	movi	r4,15
   4beb8:	21c0182e 	bgeu	r4,r7,4bf1c <memset+0xc8>
   4bebc:	3b3ffc04 	addi	r12,r7,-16
   4bec0:	6018d13a 	srli	r12,r12,4
   4bec4:	1a000104 	addi	r8,r3,4
   4bec8:	1ac00204 	addi	r11,r3,8
   4becc:	6008913a 	slli	r4,r12,4
   4bed0:	1a800304 	addi	r10,r3,12
   4bed4:	1813883a 	mov	r9,r3
   4bed8:	21000504 	addi	r4,r4,20
   4bedc:	1909883a 	add	r4,r3,r4
   4bee0:	49800015 	stw	r6,0(r9)
   4bee4:	41800015 	stw	r6,0(r8)
   4bee8:	59800015 	stw	r6,0(r11)
   4beec:	51800015 	stw	r6,0(r10)
   4bef0:	42000404 	addi	r8,r8,16
   4bef4:	4a400404 	addi	r9,r9,16
   4bef8:	5ac00404 	addi	r11,r11,16
   4befc:	52800404 	addi	r10,r10,16
   4bf00:	413ff71e 	bne	r8,r4,4bee0 <_gp+0xfffeed98>
   4bf04:	63000044 	addi	r12,r12,1
   4bf08:	6018913a 	slli	r12,r12,4
   4bf0c:	39c003cc 	andi	r7,r7,15
   4bf10:	010000c4 	movi	r4,3
   4bf14:	1b07883a 	add	r3,r3,r12
   4bf18:	21c00e2e 	bgeu	r4,r7,4bf54 <memset+0x100>
   4bf1c:	1813883a 	mov	r9,r3
   4bf20:	3811883a 	mov	r8,r7
   4bf24:	010000c4 	movi	r4,3
   4bf28:	49800015 	stw	r6,0(r9)
   4bf2c:	423fff04 	addi	r8,r8,-4
   4bf30:	4a400104 	addi	r9,r9,4
   4bf34:	223ffc36 	bltu	r4,r8,4bf28 <_gp+0xfffeede0>
   4bf38:	393fff04 	addi	r4,r7,-4
   4bf3c:	2008d0ba 	srli	r4,r4,2
   4bf40:	39c000cc 	andi	r7,r7,3
   4bf44:	21000044 	addi	r4,r4,1
   4bf48:	2109883a 	add	r4,r4,r4
   4bf4c:	2109883a 	add	r4,r4,r4
   4bf50:	1907883a 	add	r3,r3,r4
   4bf54:	38000526 	beq	r7,zero,4bf6c <memset+0x118>
   4bf58:	19cf883a 	add	r7,r3,r7
   4bf5c:	19400005 	stb	r5,0(r3)
   4bf60:	18c00044 	addi	r3,r3,1
   4bf64:	38fffd1e 	bne	r7,r3,4bf5c <_gp+0xfffeee14>
   4bf68:	f800283a 	ret
   4bf6c:	f800283a 	ret
   4bf70:	2007883a 	mov	r3,r4
   4bf74:	300f883a 	mov	r7,r6
   4bf78:	003fc706 	br	4be98 <_gp+0xfffeed50>

0004bf7c <_Balloc>:
   4bf7c:	20801317 	ldw	r2,76(r4)
   4bf80:	defffc04 	addi	sp,sp,-16
   4bf84:	dc400115 	stw	r17,4(sp)
   4bf88:	dc000015 	stw	r16,0(sp)
   4bf8c:	dfc00315 	stw	ra,12(sp)
   4bf90:	dc800215 	stw	r18,8(sp)
   4bf94:	2023883a 	mov	r17,r4
   4bf98:	2821883a 	mov	r16,r5
   4bf9c:	10000f26 	beq	r2,zero,4bfdc <_Balloc+0x60>
   4bfa0:	8407883a 	add	r3,r16,r16
   4bfa4:	18c7883a 	add	r3,r3,r3
   4bfa8:	10c7883a 	add	r3,r2,r3
   4bfac:	18800017 	ldw	r2,0(r3)
   4bfb0:	10001126 	beq	r2,zero,4bff8 <_Balloc+0x7c>
   4bfb4:	11000017 	ldw	r4,0(r2)
   4bfb8:	19000015 	stw	r4,0(r3)
   4bfbc:	10000415 	stw	zero,16(r2)
   4bfc0:	10000315 	stw	zero,12(r2)
   4bfc4:	dfc00317 	ldw	ra,12(sp)
   4bfc8:	dc800217 	ldw	r18,8(sp)
   4bfcc:	dc400117 	ldw	r17,4(sp)
   4bfd0:	dc000017 	ldw	r16,0(sp)
   4bfd4:	dec00404 	addi	sp,sp,16
   4bfd8:	f800283a 	ret
   4bfdc:	01800844 	movi	r6,33
   4bfe0:	01400104 	movi	r5,4
   4bfe4:	004f0240 	call	4f024 <_calloc_r>
   4bfe8:	88801315 	stw	r2,76(r17)
   4bfec:	103fec1e 	bne	r2,zero,4bfa0 <_gp+0xfffeee58>
   4bff0:	0005883a 	mov	r2,zero
   4bff4:	003ff306 	br	4bfc4 <_gp+0xfffeee7c>
   4bff8:	01400044 	movi	r5,1
   4bffc:	2c24983a 	sll	r18,r5,r16
   4c000:	8809883a 	mov	r4,r17
   4c004:	91800144 	addi	r6,r18,5
   4c008:	318d883a 	add	r6,r6,r6
   4c00c:	318d883a 	add	r6,r6,r6
   4c010:	004f0240 	call	4f024 <_calloc_r>
   4c014:	103ff626 	beq	r2,zero,4bff0 <_gp+0xfffeeea8>
   4c018:	14000115 	stw	r16,4(r2)
   4c01c:	14800215 	stw	r18,8(r2)
   4c020:	003fe606 	br	4bfbc <_gp+0xfffeee74>

0004c024 <_Bfree>:
   4c024:	28000826 	beq	r5,zero,4c048 <_Bfree+0x24>
   4c028:	28c00117 	ldw	r3,4(r5)
   4c02c:	20801317 	ldw	r2,76(r4)
   4c030:	18c7883a 	add	r3,r3,r3
   4c034:	18c7883a 	add	r3,r3,r3
   4c038:	10c5883a 	add	r2,r2,r3
   4c03c:	10c00017 	ldw	r3,0(r2)
   4c040:	28c00015 	stw	r3,0(r5)
   4c044:	11400015 	stw	r5,0(r2)
   4c048:	f800283a 	ret

0004c04c <__multadd>:
   4c04c:	defff704 	addi	sp,sp,-36
   4c050:	dc800215 	stw	r18,8(sp)
   4c054:	2c800417 	ldw	r18,16(r5)
   4c058:	dd800615 	stw	r22,24(sp)
   4c05c:	dd400515 	stw	r21,20(sp)
   4c060:	dd000415 	stw	r20,16(sp)
   4c064:	dcc00315 	stw	r19,12(sp)
   4c068:	dc400115 	stw	r17,4(sp)
   4c06c:	dc000015 	stw	r16,0(sp)
   4c070:	dfc00815 	stw	ra,32(sp)
   4c074:	ddc00715 	stw	r23,28(sp)
   4c078:	2827883a 	mov	r19,r5
   4c07c:	2029883a 	mov	r20,r4
   4c080:	3023883a 	mov	r17,r6
   4c084:	3821883a 	mov	r16,r7
   4c088:	2d400504 	addi	r21,r5,20
   4c08c:	002d883a 	mov	r22,zero
   4c090:	adc00017 	ldw	r23,0(r21)
   4c094:	880b883a 	mov	r5,r17
   4c098:	ad400104 	addi	r21,r21,4
   4c09c:	b93fffcc 	andi	r4,r23,65535
   4c0a0:	0041f400 	call	41f40 <__mulsi3>
   4c0a4:	b808d43a 	srli	r4,r23,16
   4c0a8:	880b883a 	mov	r5,r17
   4c0ac:	1421883a 	add	r16,r2,r16
   4c0b0:	0041f400 	call	41f40 <__mulsi3>
   4c0b4:	800ed43a 	srli	r7,r16,16
   4c0b8:	80ffffcc 	andi	r3,r16,65535
   4c0bc:	b5800044 	addi	r22,r22,1
   4c0c0:	11c5883a 	add	r2,r2,r7
   4c0c4:	100e943a 	slli	r7,r2,16
   4c0c8:	1020d43a 	srli	r16,r2,16
   4c0cc:	38c7883a 	add	r3,r7,r3
   4c0d0:	a8ffff15 	stw	r3,-4(r21)
   4c0d4:	b4bfee16 	blt	r22,r18,4c090 <_gp+0xfffeef48>
   4c0d8:	80000926 	beq	r16,zero,4c100 <__multadd+0xb4>
   4c0dc:	98800217 	ldw	r2,8(r19)
   4c0e0:	9080130e 	bge	r18,r2,4c130 <__multadd+0xe4>
   4c0e4:	90800144 	addi	r2,r18,5
   4c0e8:	1085883a 	add	r2,r2,r2
   4c0ec:	1085883a 	add	r2,r2,r2
   4c0f0:	9885883a 	add	r2,r19,r2
   4c0f4:	14000015 	stw	r16,0(r2)
   4c0f8:	94800044 	addi	r18,r18,1
   4c0fc:	9c800415 	stw	r18,16(r19)
   4c100:	9805883a 	mov	r2,r19
   4c104:	dfc00817 	ldw	ra,32(sp)
   4c108:	ddc00717 	ldw	r23,28(sp)
   4c10c:	dd800617 	ldw	r22,24(sp)
   4c110:	dd400517 	ldw	r21,20(sp)
   4c114:	dd000417 	ldw	r20,16(sp)
   4c118:	dcc00317 	ldw	r19,12(sp)
   4c11c:	dc800217 	ldw	r18,8(sp)
   4c120:	dc400117 	ldw	r17,4(sp)
   4c124:	dc000017 	ldw	r16,0(sp)
   4c128:	dec00904 	addi	sp,sp,36
   4c12c:	f800283a 	ret
   4c130:	99400117 	ldw	r5,4(r19)
   4c134:	a009883a 	mov	r4,r20
   4c138:	29400044 	addi	r5,r5,1
   4c13c:	004bf7c0 	call	4bf7c <_Balloc>
   4c140:	99800417 	ldw	r6,16(r19)
   4c144:	99400304 	addi	r5,r19,12
   4c148:	11000304 	addi	r4,r2,12
   4c14c:	31800084 	addi	r6,r6,2
   4c150:	318d883a 	add	r6,r6,r6
   4c154:	318d883a 	add	r6,r6,r6
   4c158:	1023883a 	mov	r17,r2
   4c15c:	004bbb00 	call	4bbb0 <memcpy>
   4c160:	98000a26 	beq	r19,zero,4c18c <__multadd+0x140>
   4c164:	98c00117 	ldw	r3,4(r19)
   4c168:	a0801317 	ldw	r2,76(r20)
   4c16c:	18c7883a 	add	r3,r3,r3
   4c170:	18c7883a 	add	r3,r3,r3
   4c174:	10c5883a 	add	r2,r2,r3
   4c178:	10c00017 	ldw	r3,0(r2)
   4c17c:	98c00015 	stw	r3,0(r19)
   4c180:	14c00015 	stw	r19,0(r2)
   4c184:	8827883a 	mov	r19,r17
   4c188:	003fd606 	br	4c0e4 <_gp+0xfffeef9c>
   4c18c:	8827883a 	mov	r19,r17
   4c190:	003fd406 	br	4c0e4 <_gp+0xfffeef9c>

0004c194 <__s2b>:
   4c194:	defff904 	addi	sp,sp,-28
   4c198:	dc400115 	stw	r17,4(sp)
   4c19c:	dc000015 	stw	r16,0(sp)
   4c1a0:	2023883a 	mov	r17,r4
   4c1a4:	2821883a 	mov	r16,r5
   4c1a8:	39000204 	addi	r4,r7,8
   4c1ac:	01400244 	movi	r5,9
   4c1b0:	dcc00315 	stw	r19,12(sp)
   4c1b4:	dc800215 	stw	r18,8(sp)
   4c1b8:	dfc00615 	stw	ra,24(sp)
   4c1bc:	dd400515 	stw	r21,20(sp)
   4c1c0:	dd000415 	stw	r20,16(sp)
   4c1c4:	3825883a 	mov	r18,r7
   4c1c8:	3027883a 	mov	r19,r6
   4c1cc:	0041d8c0 	call	41d8c <__divsi3>
   4c1d0:	00c00044 	movi	r3,1
   4c1d4:	000b883a 	mov	r5,zero
   4c1d8:	1880030e 	bge	r3,r2,4c1e8 <__s2b+0x54>
   4c1dc:	18c7883a 	add	r3,r3,r3
   4c1e0:	29400044 	addi	r5,r5,1
   4c1e4:	18bffd16 	blt	r3,r2,4c1dc <_gp+0xfffef094>
   4c1e8:	8809883a 	mov	r4,r17
   4c1ec:	004bf7c0 	call	4bf7c <_Balloc>
   4c1f0:	d8c00717 	ldw	r3,28(sp)
   4c1f4:	10c00515 	stw	r3,20(r2)
   4c1f8:	00c00044 	movi	r3,1
   4c1fc:	10c00415 	stw	r3,16(r2)
   4c200:	00c00244 	movi	r3,9
   4c204:	1cc0210e 	bge	r3,r19,4c28c <__s2b+0xf8>
   4c208:	80eb883a 	add	r21,r16,r3
   4c20c:	a829883a 	mov	r20,r21
   4c210:	84e1883a 	add	r16,r16,r19
   4c214:	a1c00007 	ldb	r7,0(r20)
   4c218:	01800284 	movi	r6,10
   4c21c:	a5000044 	addi	r20,r20,1
   4c220:	100b883a 	mov	r5,r2
   4c224:	39fff404 	addi	r7,r7,-48
   4c228:	8809883a 	mov	r4,r17
   4c22c:	004c04c0 	call	4c04c <__multadd>
   4c230:	a43ff81e 	bne	r20,r16,4c214 <_gp+0xfffef0cc>
   4c234:	ace1883a 	add	r16,r21,r19
   4c238:	843ffe04 	addi	r16,r16,-8
   4c23c:	9c800a0e 	bge	r19,r18,4c268 <__s2b+0xd4>
   4c240:	94e5c83a 	sub	r18,r18,r19
   4c244:	84a5883a 	add	r18,r16,r18
   4c248:	81c00007 	ldb	r7,0(r16)
   4c24c:	01800284 	movi	r6,10
   4c250:	84000044 	addi	r16,r16,1
   4c254:	100b883a 	mov	r5,r2
   4c258:	39fff404 	addi	r7,r7,-48
   4c25c:	8809883a 	mov	r4,r17
   4c260:	004c04c0 	call	4c04c <__multadd>
   4c264:	84bff81e 	bne	r16,r18,4c248 <_gp+0xfffef100>
   4c268:	dfc00617 	ldw	ra,24(sp)
   4c26c:	dd400517 	ldw	r21,20(sp)
   4c270:	dd000417 	ldw	r20,16(sp)
   4c274:	dcc00317 	ldw	r19,12(sp)
   4c278:	dc800217 	ldw	r18,8(sp)
   4c27c:	dc400117 	ldw	r17,4(sp)
   4c280:	dc000017 	ldw	r16,0(sp)
   4c284:	dec00704 	addi	sp,sp,28
   4c288:	f800283a 	ret
   4c28c:	84000284 	addi	r16,r16,10
   4c290:	1827883a 	mov	r19,r3
   4c294:	003fe906 	br	4c23c <_gp+0xfffef0f4>

0004c298 <__hi0bits>:
   4c298:	20bfffec 	andhi	r2,r4,65535
   4c29c:	1000141e 	bne	r2,zero,4c2f0 <__hi0bits+0x58>
   4c2a0:	2008943a 	slli	r4,r4,16
   4c2a4:	00800404 	movi	r2,16
   4c2a8:	20ffc02c 	andhi	r3,r4,65280
   4c2ac:	1800021e 	bne	r3,zero,4c2b8 <__hi0bits+0x20>
   4c2b0:	2008923a 	slli	r4,r4,8
   4c2b4:	10800204 	addi	r2,r2,8
   4c2b8:	20fc002c 	andhi	r3,r4,61440
   4c2bc:	1800021e 	bne	r3,zero,4c2c8 <__hi0bits+0x30>
   4c2c0:	2008913a 	slli	r4,r4,4
   4c2c4:	10800104 	addi	r2,r2,4
   4c2c8:	20f0002c 	andhi	r3,r4,49152
   4c2cc:	1800031e 	bne	r3,zero,4c2dc <__hi0bits+0x44>
   4c2d0:	2109883a 	add	r4,r4,r4
   4c2d4:	10800084 	addi	r2,r2,2
   4c2d8:	2109883a 	add	r4,r4,r4
   4c2dc:	20000316 	blt	r4,zero,4c2ec <__hi0bits+0x54>
   4c2e0:	2110002c 	andhi	r4,r4,16384
   4c2e4:	2000041e 	bne	r4,zero,4c2f8 <__hi0bits+0x60>
   4c2e8:	00800804 	movi	r2,32
   4c2ec:	f800283a 	ret
   4c2f0:	0005883a 	mov	r2,zero
   4c2f4:	003fec06 	br	4c2a8 <_gp+0xfffef160>
   4c2f8:	10800044 	addi	r2,r2,1
   4c2fc:	f800283a 	ret

0004c300 <__lo0bits>:
   4c300:	20c00017 	ldw	r3,0(r4)
   4c304:	188001cc 	andi	r2,r3,7
   4c308:	10000826 	beq	r2,zero,4c32c <__lo0bits+0x2c>
   4c30c:	1880004c 	andi	r2,r3,1
   4c310:	1000211e 	bne	r2,zero,4c398 <__lo0bits+0x98>
   4c314:	1880008c 	andi	r2,r3,2
   4c318:	1000211e 	bne	r2,zero,4c3a0 <__lo0bits+0xa0>
   4c31c:	1806d0ba 	srli	r3,r3,2
   4c320:	00800084 	movi	r2,2
   4c324:	20c00015 	stw	r3,0(r4)
   4c328:	f800283a 	ret
   4c32c:	18bfffcc 	andi	r2,r3,65535
   4c330:	10001326 	beq	r2,zero,4c380 <__lo0bits+0x80>
   4c334:	0005883a 	mov	r2,zero
   4c338:	19403fcc 	andi	r5,r3,255
   4c33c:	2800021e 	bne	r5,zero,4c348 <__lo0bits+0x48>
   4c340:	1806d23a 	srli	r3,r3,8
   4c344:	10800204 	addi	r2,r2,8
   4c348:	194003cc 	andi	r5,r3,15
   4c34c:	2800021e 	bne	r5,zero,4c358 <__lo0bits+0x58>
   4c350:	1806d13a 	srli	r3,r3,4
   4c354:	10800104 	addi	r2,r2,4
   4c358:	194000cc 	andi	r5,r3,3
   4c35c:	2800021e 	bne	r5,zero,4c368 <__lo0bits+0x68>
   4c360:	1806d0ba 	srli	r3,r3,2
   4c364:	10800084 	addi	r2,r2,2
   4c368:	1940004c 	andi	r5,r3,1
   4c36c:	2800081e 	bne	r5,zero,4c390 <__lo0bits+0x90>
   4c370:	1806d07a 	srli	r3,r3,1
   4c374:	1800051e 	bne	r3,zero,4c38c <__lo0bits+0x8c>
   4c378:	00800804 	movi	r2,32
   4c37c:	f800283a 	ret
   4c380:	1806d43a 	srli	r3,r3,16
   4c384:	00800404 	movi	r2,16
   4c388:	003feb06 	br	4c338 <_gp+0xfffef1f0>
   4c38c:	10800044 	addi	r2,r2,1
   4c390:	20c00015 	stw	r3,0(r4)
   4c394:	f800283a 	ret
   4c398:	0005883a 	mov	r2,zero
   4c39c:	f800283a 	ret
   4c3a0:	1806d07a 	srli	r3,r3,1
   4c3a4:	00800044 	movi	r2,1
   4c3a8:	20c00015 	stw	r3,0(r4)
   4c3ac:	f800283a 	ret

0004c3b0 <__i2b>:
   4c3b0:	defffd04 	addi	sp,sp,-12
   4c3b4:	dc000015 	stw	r16,0(sp)
   4c3b8:	04000044 	movi	r16,1
   4c3bc:	dc400115 	stw	r17,4(sp)
   4c3c0:	2823883a 	mov	r17,r5
   4c3c4:	800b883a 	mov	r5,r16
   4c3c8:	dfc00215 	stw	ra,8(sp)
   4c3cc:	004bf7c0 	call	4bf7c <_Balloc>
   4c3d0:	14400515 	stw	r17,20(r2)
   4c3d4:	14000415 	stw	r16,16(r2)
   4c3d8:	dfc00217 	ldw	ra,8(sp)
   4c3dc:	dc400117 	ldw	r17,4(sp)
   4c3e0:	dc000017 	ldw	r16,0(sp)
   4c3e4:	dec00304 	addi	sp,sp,12
   4c3e8:	f800283a 	ret

0004c3ec <__multiply>:
   4c3ec:	deffef04 	addi	sp,sp,-68
   4c3f0:	dc400815 	stw	r17,32(sp)
   4c3f4:	dc000715 	stw	r16,28(sp)
   4c3f8:	34400417 	ldw	r17,16(r6)
   4c3fc:	2c000417 	ldw	r16,16(r5)
   4c400:	dd800d15 	stw	r22,52(sp)
   4c404:	dc800915 	stw	r18,36(sp)
   4c408:	dfc01015 	stw	ra,64(sp)
   4c40c:	df000f15 	stw	fp,60(sp)
   4c410:	ddc00e15 	stw	r23,56(sp)
   4c414:	dd400c15 	stw	r21,48(sp)
   4c418:	dd000b15 	stw	r20,44(sp)
   4c41c:	dcc00a15 	stw	r19,40(sp)
   4c420:	2825883a 	mov	r18,r5
   4c424:	302d883a 	mov	r22,r6
   4c428:	8440050e 	bge	r16,r17,4c440 <__multiply+0x54>
   4c42c:	8007883a 	mov	r3,r16
   4c430:	3025883a 	mov	r18,r6
   4c434:	8821883a 	mov	r16,r17
   4c438:	282d883a 	mov	r22,r5
   4c43c:	1823883a 	mov	r17,r3
   4c440:	90800217 	ldw	r2,8(r18)
   4c444:	8447883a 	add	r3,r16,r17
   4c448:	d8c00215 	stw	r3,8(sp)
   4c44c:	91400117 	ldw	r5,4(r18)
   4c450:	10c0010e 	bge	r2,r3,4c458 <__multiply+0x6c>
   4c454:	29400044 	addi	r5,r5,1
   4c458:	004bf7c0 	call	4bf7c <_Balloc>
   4c45c:	d8c00217 	ldw	r3,8(sp)
   4c460:	d8800615 	stw	r2,24(sp)
   4c464:	18eb883a 	add	r21,r3,r3
   4c468:	ad6b883a 	add	r21,r21,r21
   4c46c:	10c00504 	addi	r3,r2,20
   4c470:	1d6b883a 	add	r21,r3,r21
   4c474:	d8c00115 	stw	r3,4(sp)
   4c478:	dd400315 	stw	r21,12(sp)
   4c47c:	1805883a 	mov	r2,r3
   4c480:	1d40042e 	bgeu	r3,r21,4c494 <__multiply+0xa8>
   4c484:	d8c00317 	ldw	r3,12(sp)
   4c488:	10000015 	stw	zero,0(r2)
   4c48c:	10800104 	addi	r2,r2,4
   4c490:	10fffc36 	bltu	r2,r3,4c484 <_gp+0xfffef33c>
   4c494:	8c63883a 	add	r17,r17,r17
   4c498:	b5800504 	addi	r22,r22,20
   4c49c:	8c63883a 	add	r17,r17,r17
   4c4a0:	94800504 	addi	r18,r18,20
   4c4a4:	8421883a 	add	r16,r16,r16
   4c4a8:	b463883a 	add	r17,r22,r17
   4c4ac:	8421883a 	add	r16,r16,r16
   4c4b0:	dd800015 	stw	r22,0(sp)
   4c4b4:	dc800415 	stw	r18,16(sp)
   4c4b8:	dc400515 	stw	r17,20(sp)
   4c4bc:	9429883a 	add	r20,r18,r16
   4c4c0:	b4404f2e 	bgeu	r22,r17,4c600 <__multiply+0x214>
   4c4c4:	d8c00017 	ldw	r3,0(sp)
   4c4c8:	1c800017 	ldw	r18,0(r3)
   4c4cc:	947fffcc 	andi	r17,r18,65535
   4c4d0:	88001e26 	beq	r17,zero,4c54c <__multiply+0x160>
   4c4d4:	dd800117 	ldw	r22,4(sp)
   4c4d8:	dd400417 	ldw	r21,16(sp)
   4c4dc:	0027883a 	mov	r19,zero
   4c4e0:	ac800017 	ldw	r18,0(r21)
   4c4e4:	b4000017 	ldw	r16,0(r22)
   4c4e8:	880b883a 	mov	r5,r17
   4c4ec:	913fffcc 	andi	r4,r18,65535
   4c4f0:	0041f400 	call	41f40 <__mulsi3>
   4c4f4:	9008d43a 	srli	r4,r18,16
   4c4f8:	84bfffcc 	andi	r18,r16,65535
   4c4fc:	1485883a 	add	r2,r2,r18
   4c500:	14e5883a 	add	r18,r2,r19
   4c504:	8020d43a 	srli	r16,r16,16
   4c508:	9026d43a 	srli	r19,r18,16
   4c50c:	880b883a 	mov	r5,r17
   4c510:	0041f400 	call	41f40 <__mulsi3>
   4c514:	1405883a 	add	r2,r2,r16
   4c518:	14e1883a 	add	r16,r2,r19
   4c51c:	90ffffcc 	andi	r3,r18,65535
   4c520:	8024943a 	slli	r18,r16,16
   4c524:	ad400104 	addi	r21,r21,4
   4c528:	b005883a 	mov	r2,r22
   4c52c:	90c6b03a 	or	r3,r18,r3
   4c530:	b0c00015 	stw	r3,0(r22)
   4c534:	8026d43a 	srli	r19,r16,16
   4c538:	b5800104 	addi	r22,r22,4
   4c53c:	ad3fe836 	bltu	r21,r20,4c4e0 <_gp+0xfffef398>
   4c540:	d8c00017 	ldw	r3,0(sp)
   4c544:	14c00115 	stw	r19,4(r2)
   4c548:	1c800017 	ldw	r18,0(r3)
   4c54c:	9024d43a 	srli	r18,r18,16
   4c550:	90002226 	beq	r18,zero,4c5dc <__multiply+0x1f0>
   4c554:	d8c00117 	ldw	r3,4(sp)
   4c558:	dd800417 	ldw	r22,16(sp)
   4c55c:	002f883a 	mov	r23,zero
   4c560:	1f000017 	ldw	fp,0(r3)
   4c564:	1823883a 	mov	r17,r3
   4c568:	182b883a 	mov	r21,r3
   4c56c:	e021883a 	mov	r16,fp
   4c570:	00000106 	br	4c578 <__multiply+0x18c>
   4c574:	982b883a 	mov	r21,r19
   4c578:	b100000b 	ldhu	r4,0(r22)
   4c57c:	8020d43a 	srli	r16,r16,16
   4c580:	900b883a 	mov	r5,r18
   4c584:	0041f400 	call	41f40 <__mulsi3>
   4c588:	1405883a 	add	r2,r2,r16
   4c58c:	15ef883a 	add	r23,r2,r23
   4c590:	b804943a 	slli	r2,r23,16
   4c594:	e0ffffcc 	andi	r3,fp,65535
   4c598:	8c400104 	addi	r17,r17,4
   4c59c:	10c6b03a 	or	r3,r2,r3
   4c5a0:	88ffff15 	stw	r3,-4(r17)
   4c5a4:	b5800104 	addi	r22,r22,4
   4c5a8:	b13fff17 	ldw	r4,-4(r22)
   4c5ac:	acc00104 	addi	r19,r21,4
   4c5b0:	900b883a 	mov	r5,r18
   4c5b4:	2008d43a 	srli	r4,r4,16
   4c5b8:	9c000017 	ldw	r16,0(r19)
   4c5bc:	0041f400 	call	41f40 <__mulsi3>
   4c5c0:	b806d43a 	srli	r3,r23,16
   4c5c4:	813fffcc 	andi	r4,r16,65535
   4c5c8:	1105883a 	add	r2,r2,r4
   4c5cc:	10f9883a 	add	fp,r2,r3
   4c5d0:	e02ed43a 	srli	r23,fp,16
   4c5d4:	b53fe736 	bltu	r22,r20,4c574 <_gp+0xfffef42c>
   4c5d8:	af000115 	stw	fp,4(r21)
   4c5dc:	d8c00017 	ldw	r3,0(sp)
   4c5e0:	d9000517 	ldw	r4,20(sp)
   4c5e4:	18c00104 	addi	r3,r3,4
   4c5e8:	d8c00015 	stw	r3,0(sp)
   4c5ec:	d8c00117 	ldw	r3,4(sp)
   4c5f0:	18c00104 	addi	r3,r3,4
   4c5f4:	d8c00115 	stw	r3,4(sp)
   4c5f8:	d8c00017 	ldw	r3,0(sp)
   4c5fc:	193fb136 	bltu	r3,r4,4c4c4 <_gp+0xfffef37c>
   4c600:	d8c00217 	ldw	r3,8(sp)
   4c604:	00c00c0e 	bge	zero,r3,4c638 <__multiply+0x24c>
   4c608:	d8c00317 	ldw	r3,12(sp)
   4c60c:	18bfff17 	ldw	r2,-4(r3)
   4c610:	1d7fff04 	addi	r21,r3,-4
   4c614:	10000326 	beq	r2,zero,4c624 <__multiply+0x238>
   4c618:	00000706 	br	4c638 <__multiply+0x24c>
   4c61c:	a8800017 	ldw	r2,0(r21)
   4c620:	1000051e 	bne	r2,zero,4c638 <__multiply+0x24c>
   4c624:	d8c00217 	ldw	r3,8(sp)
   4c628:	ad7fff04 	addi	r21,r21,-4
   4c62c:	18ffffc4 	addi	r3,r3,-1
   4c630:	d8c00215 	stw	r3,8(sp)
   4c634:	183ff91e 	bne	r3,zero,4c61c <_gp+0xfffef4d4>
   4c638:	d8c00617 	ldw	r3,24(sp)
   4c63c:	d9000217 	ldw	r4,8(sp)
   4c640:	1805883a 	mov	r2,r3
   4c644:	19000415 	stw	r4,16(r3)
   4c648:	dfc01017 	ldw	ra,64(sp)
   4c64c:	df000f17 	ldw	fp,60(sp)
   4c650:	ddc00e17 	ldw	r23,56(sp)
   4c654:	dd800d17 	ldw	r22,52(sp)
   4c658:	dd400c17 	ldw	r21,48(sp)
   4c65c:	dd000b17 	ldw	r20,44(sp)
   4c660:	dcc00a17 	ldw	r19,40(sp)
   4c664:	dc800917 	ldw	r18,36(sp)
   4c668:	dc400817 	ldw	r17,32(sp)
   4c66c:	dc000717 	ldw	r16,28(sp)
   4c670:	dec01104 	addi	sp,sp,68
   4c674:	f800283a 	ret

0004c678 <__pow5mult>:
   4c678:	defffa04 	addi	sp,sp,-24
   4c67c:	dcc00315 	stw	r19,12(sp)
   4c680:	dc000015 	stw	r16,0(sp)
   4c684:	dfc00515 	stw	ra,20(sp)
   4c688:	dd000415 	stw	r20,16(sp)
   4c68c:	dc800215 	stw	r18,8(sp)
   4c690:	dc400115 	stw	r17,4(sp)
   4c694:	308000cc 	andi	r2,r6,3
   4c698:	3021883a 	mov	r16,r6
   4c69c:	2027883a 	mov	r19,r4
   4c6a0:	10002f1e 	bne	r2,zero,4c760 <__pow5mult+0xe8>
   4c6a4:	2825883a 	mov	r18,r5
   4c6a8:	8021d0ba 	srai	r16,r16,2
   4c6ac:	80001a26 	beq	r16,zero,4c718 <__pow5mult+0xa0>
   4c6b0:	9c401217 	ldw	r17,72(r19)
   4c6b4:	8800061e 	bne	r17,zero,4c6d0 <__pow5mult+0x58>
   4c6b8:	00003406 	br	4c78c <__pow5mult+0x114>
   4c6bc:	8021d07a 	srai	r16,r16,1
   4c6c0:	80001526 	beq	r16,zero,4c718 <__pow5mult+0xa0>
   4c6c4:	88800017 	ldw	r2,0(r17)
   4c6c8:	10001c26 	beq	r2,zero,4c73c <__pow5mult+0xc4>
   4c6cc:	1023883a 	mov	r17,r2
   4c6d0:	8080004c 	andi	r2,r16,1
   4c6d4:	103ff926 	beq	r2,zero,4c6bc <_gp+0xfffef574>
   4c6d8:	880d883a 	mov	r6,r17
   4c6dc:	900b883a 	mov	r5,r18
   4c6e0:	9809883a 	mov	r4,r19
   4c6e4:	004c3ec0 	call	4c3ec <__multiply>
   4c6e8:	90001b26 	beq	r18,zero,4c758 <__pow5mult+0xe0>
   4c6ec:	91000117 	ldw	r4,4(r18)
   4c6f0:	98c01317 	ldw	r3,76(r19)
   4c6f4:	8021d07a 	srai	r16,r16,1
   4c6f8:	2109883a 	add	r4,r4,r4
   4c6fc:	2109883a 	add	r4,r4,r4
   4c700:	1907883a 	add	r3,r3,r4
   4c704:	19000017 	ldw	r4,0(r3)
   4c708:	91000015 	stw	r4,0(r18)
   4c70c:	1c800015 	stw	r18,0(r3)
   4c710:	1025883a 	mov	r18,r2
   4c714:	803feb1e 	bne	r16,zero,4c6c4 <_gp+0xfffef57c>
   4c718:	9005883a 	mov	r2,r18
   4c71c:	dfc00517 	ldw	ra,20(sp)
   4c720:	dd000417 	ldw	r20,16(sp)
   4c724:	dcc00317 	ldw	r19,12(sp)
   4c728:	dc800217 	ldw	r18,8(sp)
   4c72c:	dc400117 	ldw	r17,4(sp)
   4c730:	dc000017 	ldw	r16,0(sp)
   4c734:	dec00604 	addi	sp,sp,24
   4c738:	f800283a 	ret
   4c73c:	880d883a 	mov	r6,r17
   4c740:	880b883a 	mov	r5,r17
   4c744:	9809883a 	mov	r4,r19
   4c748:	004c3ec0 	call	4c3ec <__multiply>
   4c74c:	88800015 	stw	r2,0(r17)
   4c750:	10000015 	stw	zero,0(r2)
   4c754:	003fdd06 	br	4c6cc <_gp+0xfffef584>
   4c758:	1025883a 	mov	r18,r2
   4c75c:	003fd706 	br	4c6bc <_gp+0xfffef574>
   4c760:	10bfffc4 	addi	r2,r2,-1
   4c764:	1085883a 	add	r2,r2,r2
   4c768:	00c00174 	movhi	r3,5
   4c76c:	18cbd404 	addi	r3,r3,12112
   4c770:	1085883a 	add	r2,r2,r2
   4c774:	1885883a 	add	r2,r3,r2
   4c778:	11800017 	ldw	r6,0(r2)
   4c77c:	000f883a 	mov	r7,zero
   4c780:	004c04c0 	call	4c04c <__multadd>
   4c784:	1025883a 	mov	r18,r2
   4c788:	003fc706 	br	4c6a8 <_gp+0xfffef560>
   4c78c:	05000044 	movi	r20,1
   4c790:	a00b883a 	mov	r5,r20
   4c794:	9809883a 	mov	r4,r19
   4c798:	004bf7c0 	call	4bf7c <_Balloc>
   4c79c:	1023883a 	mov	r17,r2
   4c7a0:	00809c44 	movi	r2,625
   4c7a4:	88800515 	stw	r2,20(r17)
   4c7a8:	8d000415 	stw	r20,16(r17)
   4c7ac:	9c401215 	stw	r17,72(r19)
   4c7b0:	88000015 	stw	zero,0(r17)
   4c7b4:	003fc606 	br	4c6d0 <_gp+0xfffef588>

0004c7b8 <__lshift>:
   4c7b8:	defff904 	addi	sp,sp,-28
   4c7bc:	dd400515 	stw	r21,20(sp)
   4c7c0:	dcc00315 	stw	r19,12(sp)
   4c7c4:	302bd17a 	srai	r21,r6,5
   4c7c8:	2cc00417 	ldw	r19,16(r5)
   4c7cc:	28800217 	ldw	r2,8(r5)
   4c7d0:	dd000415 	stw	r20,16(sp)
   4c7d4:	ace7883a 	add	r19,r21,r19
   4c7d8:	dc800215 	stw	r18,8(sp)
   4c7dc:	dc400115 	stw	r17,4(sp)
   4c7e0:	dc000015 	stw	r16,0(sp)
   4c7e4:	dfc00615 	stw	ra,24(sp)
   4c7e8:	9c000044 	addi	r16,r19,1
   4c7ec:	2823883a 	mov	r17,r5
   4c7f0:	3029883a 	mov	r20,r6
   4c7f4:	2025883a 	mov	r18,r4
   4c7f8:	29400117 	ldw	r5,4(r5)
   4c7fc:	1400030e 	bge	r2,r16,4c80c <__lshift+0x54>
   4c800:	1085883a 	add	r2,r2,r2
   4c804:	29400044 	addi	r5,r5,1
   4c808:	143ffd16 	blt	r2,r16,4c800 <_gp+0xfffef6b8>
   4c80c:	9009883a 	mov	r4,r18
   4c810:	004bf7c0 	call	4bf7c <_Balloc>
   4c814:	10c00504 	addi	r3,r2,20
   4c818:	0540070e 	bge	zero,r21,4c838 <__lshift+0x80>
   4c81c:	ad6b883a 	add	r21,r21,r21
   4c820:	ad6b883a 	add	r21,r21,r21
   4c824:	1809883a 	mov	r4,r3
   4c828:	1d47883a 	add	r3,r3,r21
   4c82c:	20000015 	stw	zero,0(r4)
   4c830:	21000104 	addi	r4,r4,4
   4c834:	193ffd1e 	bne	r3,r4,4c82c <_gp+0xfffef6e4>
   4c838:	8a000417 	ldw	r8,16(r17)
   4c83c:	89000504 	addi	r4,r17,20
   4c840:	a18007cc 	andi	r6,r20,31
   4c844:	4211883a 	add	r8,r8,r8
   4c848:	4211883a 	add	r8,r8,r8
   4c84c:	2211883a 	add	r8,r4,r8
   4c850:	30002326 	beq	r6,zero,4c8e0 <__lshift+0x128>
   4c854:	02400804 	movi	r9,32
   4c858:	4993c83a 	sub	r9,r9,r6
   4c85c:	000b883a 	mov	r5,zero
   4c860:	21c00017 	ldw	r7,0(r4)
   4c864:	1815883a 	mov	r10,r3
   4c868:	18c00104 	addi	r3,r3,4
   4c86c:	398e983a 	sll	r7,r7,r6
   4c870:	21000104 	addi	r4,r4,4
   4c874:	394ab03a 	or	r5,r7,r5
   4c878:	197fff15 	stw	r5,-4(r3)
   4c87c:	217fff17 	ldw	r5,-4(r4)
   4c880:	2a4ad83a 	srl	r5,r5,r9
   4c884:	223ff636 	bltu	r4,r8,4c860 <_gp+0xfffef718>
   4c888:	51400115 	stw	r5,4(r10)
   4c88c:	28001a1e 	bne	r5,zero,4c8f8 <__lshift+0x140>
   4c890:	843fffc4 	addi	r16,r16,-1
   4c894:	14000415 	stw	r16,16(r2)
   4c898:	88000826 	beq	r17,zero,4c8bc <__lshift+0x104>
   4c89c:	89000117 	ldw	r4,4(r17)
   4c8a0:	90c01317 	ldw	r3,76(r18)
   4c8a4:	2109883a 	add	r4,r4,r4
   4c8a8:	2109883a 	add	r4,r4,r4
   4c8ac:	1907883a 	add	r3,r3,r4
   4c8b0:	19000017 	ldw	r4,0(r3)
   4c8b4:	89000015 	stw	r4,0(r17)
   4c8b8:	1c400015 	stw	r17,0(r3)
   4c8bc:	dfc00617 	ldw	ra,24(sp)
   4c8c0:	dd400517 	ldw	r21,20(sp)
   4c8c4:	dd000417 	ldw	r20,16(sp)
   4c8c8:	dcc00317 	ldw	r19,12(sp)
   4c8cc:	dc800217 	ldw	r18,8(sp)
   4c8d0:	dc400117 	ldw	r17,4(sp)
   4c8d4:	dc000017 	ldw	r16,0(sp)
   4c8d8:	dec00704 	addi	sp,sp,28
   4c8dc:	f800283a 	ret
   4c8e0:	21400017 	ldw	r5,0(r4)
   4c8e4:	18c00104 	addi	r3,r3,4
   4c8e8:	21000104 	addi	r4,r4,4
   4c8ec:	197fff15 	stw	r5,-4(r3)
   4c8f0:	223ffb36 	bltu	r4,r8,4c8e0 <_gp+0xfffef798>
   4c8f4:	003fe606 	br	4c890 <_gp+0xfffef748>
   4c8f8:	9c000084 	addi	r16,r19,2
   4c8fc:	003fe406 	br	4c890 <_gp+0xfffef748>

0004c900 <__mcmp>:
   4c900:	20800417 	ldw	r2,16(r4)
   4c904:	28c00417 	ldw	r3,16(r5)
   4c908:	10c5c83a 	sub	r2,r2,r3
   4c90c:	1000111e 	bne	r2,zero,4c954 <__mcmp+0x54>
   4c910:	18c7883a 	add	r3,r3,r3
   4c914:	18c7883a 	add	r3,r3,r3
   4c918:	21000504 	addi	r4,r4,20
   4c91c:	29400504 	addi	r5,r5,20
   4c920:	20c5883a 	add	r2,r4,r3
   4c924:	28cb883a 	add	r5,r5,r3
   4c928:	00000106 	br	4c930 <__mcmp+0x30>
   4c92c:	20800a2e 	bgeu	r4,r2,4c958 <__mcmp+0x58>
   4c930:	10bfff04 	addi	r2,r2,-4
   4c934:	297fff04 	addi	r5,r5,-4
   4c938:	11800017 	ldw	r6,0(r2)
   4c93c:	28c00017 	ldw	r3,0(r5)
   4c940:	30fffa26 	beq	r6,r3,4c92c <_gp+0xfffef7e4>
   4c944:	30c00236 	bltu	r6,r3,4c950 <__mcmp+0x50>
   4c948:	00800044 	movi	r2,1
   4c94c:	f800283a 	ret
   4c950:	00bfffc4 	movi	r2,-1
   4c954:	f800283a 	ret
   4c958:	0005883a 	mov	r2,zero
   4c95c:	f800283a 	ret

0004c960 <__mdiff>:
   4c960:	28c00417 	ldw	r3,16(r5)
   4c964:	30800417 	ldw	r2,16(r6)
   4c968:	defffa04 	addi	sp,sp,-24
   4c96c:	dcc00315 	stw	r19,12(sp)
   4c970:	dc800215 	stw	r18,8(sp)
   4c974:	dfc00515 	stw	ra,20(sp)
   4c978:	dd000415 	stw	r20,16(sp)
   4c97c:	dc400115 	stw	r17,4(sp)
   4c980:	dc000015 	stw	r16,0(sp)
   4c984:	1887c83a 	sub	r3,r3,r2
   4c988:	2825883a 	mov	r18,r5
   4c98c:	3027883a 	mov	r19,r6
   4c990:	1800141e 	bne	r3,zero,4c9e4 <__mdiff+0x84>
   4c994:	1085883a 	add	r2,r2,r2
   4c998:	1085883a 	add	r2,r2,r2
   4c99c:	2a000504 	addi	r8,r5,20
   4c9a0:	34000504 	addi	r16,r6,20
   4c9a4:	4087883a 	add	r3,r8,r2
   4c9a8:	8085883a 	add	r2,r16,r2
   4c9ac:	00000106 	br	4c9b4 <__mdiff+0x54>
   4c9b0:	40c0592e 	bgeu	r8,r3,4cb18 <__mdiff+0x1b8>
   4c9b4:	18ffff04 	addi	r3,r3,-4
   4c9b8:	10bfff04 	addi	r2,r2,-4
   4c9bc:	19c00017 	ldw	r7,0(r3)
   4c9c0:	11400017 	ldw	r5,0(r2)
   4c9c4:	397ffa26 	beq	r7,r5,4c9b0 <_gp+0xfffef868>
   4c9c8:	3940592e 	bgeu	r7,r5,4cb30 <__mdiff+0x1d0>
   4c9cc:	9005883a 	mov	r2,r18
   4c9d0:	4023883a 	mov	r17,r8
   4c9d4:	9825883a 	mov	r18,r19
   4c9d8:	05000044 	movi	r20,1
   4c9dc:	1027883a 	mov	r19,r2
   4c9e0:	00000406 	br	4c9f4 <__mdiff+0x94>
   4c9e4:	18005616 	blt	r3,zero,4cb40 <__mdiff+0x1e0>
   4c9e8:	34400504 	addi	r17,r6,20
   4c9ec:	2c000504 	addi	r16,r5,20
   4c9f0:	0029883a 	mov	r20,zero
   4c9f4:	91400117 	ldw	r5,4(r18)
   4c9f8:	004bf7c0 	call	4bf7c <_Balloc>
   4c9fc:	92400417 	ldw	r9,16(r18)
   4ca00:	9b000417 	ldw	r12,16(r19)
   4ca04:	12c00504 	addi	r11,r2,20
   4ca08:	4a51883a 	add	r8,r9,r9
   4ca0c:	6319883a 	add	r12,r12,r12
   4ca10:	4211883a 	add	r8,r8,r8
   4ca14:	6319883a 	add	r12,r12,r12
   4ca18:	15000315 	stw	r20,12(r2)
   4ca1c:	8211883a 	add	r8,r16,r8
   4ca20:	8b19883a 	add	r12,r17,r12
   4ca24:	0007883a 	mov	r3,zero
   4ca28:	81400017 	ldw	r5,0(r16)
   4ca2c:	89c00017 	ldw	r7,0(r17)
   4ca30:	59800104 	addi	r6,r11,4
   4ca34:	293fffcc 	andi	r4,r5,65535
   4ca38:	20c7883a 	add	r3,r4,r3
   4ca3c:	393fffcc 	andi	r4,r7,65535
   4ca40:	1909c83a 	sub	r4,r3,r4
   4ca44:	280ad43a 	srli	r5,r5,16
   4ca48:	380ed43a 	srli	r7,r7,16
   4ca4c:	2007d43a 	srai	r3,r4,16
   4ca50:	213fffcc 	andi	r4,r4,65535
   4ca54:	29cbc83a 	sub	r5,r5,r7
   4ca58:	28c7883a 	add	r3,r5,r3
   4ca5c:	180a943a 	slli	r5,r3,16
   4ca60:	8c400104 	addi	r17,r17,4
   4ca64:	84000104 	addi	r16,r16,4
   4ca68:	2908b03a 	or	r4,r5,r4
   4ca6c:	59000015 	stw	r4,0(r11)
   4ca70:	1807d43a 	srai	r3,r3,16
   4ca74:	3015883a 	mov	r10,r6
   4ca78:	3017883a 	mov	r11,r6
   4ca7c:	8b3fea36 	bltu	r17,r12,4ca28 <_gp+0xfffef8e0>
   4ca80:	8200162e 	bgeu	r16,r8,4cadc <__mdiff+0x17c>
   4ca84:	8017883a 	mov	r11,r16
   4ca88:	59400017 	ldw	r5,0(r11)
   4ca8c:	31800104 	addi	r6,r6,4
   4ca90:	5ac00104 	addi	r11,r11,4
   4ca94:	293fffcc 	andi	r4,r5,65535
   4ca98:	20c7883a 	add	r3,r4,r3
   4ca9c:	280ed43a 	srli	r7,r5,16
   4caa0:	180bd43a 	srai	r5,r3,16
   4caa4:	193fffcc 	andi	r4,r3,65535
   4caa8:	3947883a 	add	r3,r7,r5
   4caac:	180a943a 	slli	r5,r3,16
   4cab0:	1807d43a 	srai	r3,r3,16
   4cab4:	2908b03a 	or	r4,r5,r4
   4cab8:	313fff15 	stw	r4,-4(r6)
   4cabc:	5a3ff236 	bltu	r11,r8,4ca88 <_gp+0xfffef940>
   4cac0:	0406303a 	nor	r3,zero,r16
   4cac4:	1a07883a 	add	r3,r3,r8
   4cac8:	1806d0ba 	srli	r3,r3,2
   4cacc:	18c00044 	addi	r3,r3,1
   4cad0:	18c7883a 	add	r3,r3,r3
   4cad4:	18c7883a 	add	r3,r3,r3
   4cad8:	50d5883a 	add	r10,r10,r3
   4cadc:	50ffff04 	addi	r3,r10,-4
   4cae0:	2000041e 	bne	r4,zero,4caf4 <__mdiff+0x194>
   4cae4:	18ffff04 	addi	r3,r3,-4
   4cae8:	19000017 	ldw	r4,0(r3)
   4caec:	4a7fffc4 	addi	r9,r9,-1
   4caf0:	203ffc26 	beq	r4,zero,4cae4 <_gp+0xfffef99c>
   4caf4:	12400415 	stw	r9,16(r2)
   4caf8:	dfc00517 	ldw	ra,20(sp)
   4cafc:	dd000417 	ldw	r20,16(sp)
   4cb00:	dcc00317 	ldw	r19,12(sp)
   4cb04:	dc800217 	ldw	r18,8(sp)
   4cb08:	dc400117 	ldw	r17,4(sp)
   4cb0c:	dc000017 	ldw	r16,0(sp)
   4cb10:	dec00604 	addi	sp,sp,24
   4cb14:	f800283a 	ret
   4cb18:	000b883a 	mov	r5,zero
   4cb1c:	004bf7c0 	call	4bf7c <_Balloc>
   4cb20:	00c00044 	movi	r3,1
   4cb24:	10c00415 	stw	r3,16(r2)
   4cb28:	10000515 	stw	zero,20(r2)
   4cb2c:	003ff206 	br	4caf8 <_gp+0xfffef9b0>
   4cb30:	8023883a 	mov	r17,r16
   4cb34:	0029883a 	mov	r20,zero
   4cb38:	4021883a 	mov	r16,r8
   4cb3c:	003fad06 	br	4c9f4 <_gp+0xfffef8ac>
   4cb40:	9005883a 	mov	r2,r18
   4cb44:	94400504 	addi	r17,r18,20
   4cb48:	9c000504 	addi	r16,r19,20
   4cb4c:	9825883a 	mov	r18,r19
   4cb50:	05000044 	movi	r20,1
   4cb54:	1027883a 	mov	r19,r2
   4cb58:	003fa606 	br	4c9f4 <_gp+0xfffef8ac>

0004cb5c <__ulp>:
   4cb5c:	295ffc2c 	andhi	r5,r5,32752
   4cb60:	00bf3034 	movhi	r2,64704
   4cb64:	2887883a 	add	r3,r5,r2
   4cb68:	00c0020e 	bge	zero,r3,4cb74 <__ulp+0x18>
   4cb6c:	0005883a 	mov	r2,zero
   4cb70:	f800283a 	ret
   4cb74:	00c7c83a 	sub	r3,zero,r3
   4cb78:	1807d53a 	srai	r3,r3,20
   4cb7c:	008004c4 	movi	r2,19
   4cb80:	10c00b0e 	bge	r2,r3,4cbb0 <__ulp+0x54>
   4cb84:	18bffb04 	addi	r2,r3,-20
   4cb88:	01000784 	movi	r4,30
   4cb8c:	0007883a 	mov	r3,zero
   4cb90:	20800516 	blt	r4,r2,4cba8 <__ulp+0x4c>
   4cb94:	010007c4 	movi	r4,31
   4cb98:	2089c83a 	sub	r4,r4,r2
   4cb9c:	00800044 	movi	r2,1
   4cba0:	1104983a 	sll	r2,r2,r4
   4cba4:	f800283a 	ret
   4cba8:	00800044 	movi	r2,1
   4cbac:	f800283a 	ret
   4cbb0:	01400234 	movhi	r5,8
   4cbb4:	28c7d83a 	sra	r3,r5,r3
   4cbb8:	0005883a 	mov	r2,zero
   4cbbc:	f800283a 	ret

0004cbc0 <__b2d>:
   4cbc0:	defffa04 	addi	sp,sp,-24
   4cbc4:	dc000015 	stw	r16,0(sp)
   4cbc8:	24000417 	ldw	r16,16(r4)
   4cbcc:	dc400115 	stw	r17,4(sp)
   4cbd0:	24400504 	addi	r17,r4,20
   4cbd4:	8421883a 	add	r16,r16,r16
   4cbd8:	8421883a 	add	r16,r16,r16
   4cbdc:	8c21883a 	add	r16,r17,r16
   4cbe0:	dc800215 	stw	r18,8(sp)
   4cbe4:	84bfff17 	ldw	r18,-4(r16)
   4cbe8:	dd000415 	stw	r20,16(sp)
   4cbec:	dcc00315 	stw	r19,12(sp)
   4cbf0:	9009883a 	mov	r4,r18
   4cbf4:	2829883a 	mov	r20,r5
   4cbf8:	dfc00515 	stw	ra,20(sp)
   4cbfc:	004c2980 	call	4c298 <__hi0bits>
   4cc00:	00c00804 	movi	r3,32
   4cc04:	1889c83a 	sub	r4,r3,r2
   4cc08:	a1000015 	stw	r4,0(r20)
   4cc0c:	01000284 	movi	r4,10
   4cc10:	84ffff04 	addi	r19,r16,-4
   4cc14:	20801216 	blt	r4,r2,4cc60 <__b2d+0xa0>
   4cc18:	018002c4 	movi	r6,11
   4cc1c:	308dc83a 	sub	r6,r6,r2
   4cc20:	9186d83a 	srl	r3,r18,r6
   4cc24:	18cffc34 	orhi	r3,r3,16368
   4cc28:	8cc0212e 	bgeu	r17,r19,4ccb0 <__b2d+0xf0>
   4cc2c:	813ffe17 	ldw	r4,-8(r16)
   4cc30:	218cd83a 	srl	r6,r4,r6
   4cc34:	10800544 	addi	r2,r2,21
   4cc38:	9084983a 	sll	r2,r18,r2
   4cc3c:	1184b03a 	or	r2,r2,r6
   4cc40:	dfc00517 	ldw	ra,20(sp)
   4cc44:	dd000417 	ldw	r20,16(sp)
   4cc48:	dcc00317 	ldw	r19,12(sp)
   4cc4c:	dc800217 	ldw	r18,8(sp)
   4cc50:	dc400117 	ldw	r17,4(sp)
   4cc54:	dc000017 	ldw	r16,0(sp)
   4cc58:	dec00604 	addi	sp,sp,24
   4cc5c:	f800283a 	ret
   4cc60:	8cc00f2e 	bgeu	r17,r19,4cca0 <__b2d+0xe0>
   4cc64:	117ffd44 	addi	r5,r2,-11
   4cc68:	80bffe17 	ldw	r2,-8(r16)
   4cc6c:	28000e26 	beq	r5,zero,4cca8 <__b2d+0xe8>
   4cc70:	1949c83a 	sub	r4,r3,r5
   4cc74:	9164983a 	sll	r18,r18,r5
   4cc78:	1106d83a 	srl	r3,r2,r4
   4cc7c:	81bffe04 	addi	r6,r16,-8
   4cc80:	948ffc34 	orhi	r18,r18,16368
   4cc84:	90c6b03a 	or	r3,r18,r3
   4cc88:	89800e2e 	bgeu	r17,r6,4ccc4 <__b2d+0x104>
   4cc8c:	81bffd17 	ldw	r6,-12(r16)
   4cc90:	1144983a 	sll	r2,r2,r5
   4cc94:	310ad83a 	srl	r5,r6,r4
   4cc98:	2884b03a 	or	r2,r5,r2
   4cc9c:	003fe806 	br	4cc40 <_gp+0xfffefaf8>
   4cca0:	10bffd44 	addi	r2,r2,-11
   4cca4:	1000041e 	bne	r2,zero,4ccb8 <__b2d+0xf8>
   4cca8:	90cffc34 	orhi	r3,r18,16368
   4ccac:	003fe406 	br	4cc40 <_gp+0xfffefaf8>
   4ccb0:	000d883a 	mov	r6,zero
   4ccb4:	003fdf06 	br	4cc34 <_gp+0xfffefaec>
   4ccb8:	90a4983a 	sll	r18,r18,r2
   4ccbc:	0005883a 	mov	r2,zero
   4ccc0:	003ff906 	br	4cca8 <_gp+0xfffefb60>
   4ccc4:	1144983a 	sll	r2,r2,r5
   4ccc8:	003fdd06 	br	4cc40 <_gp+0xfffefaf8>

0004cccc <__d2b>:
   4cccc:	defff804 	addi	sp,sp,-32
   4ccd0:	dc000215 	stw	r16,8(sp)
   4ccd4:	3021883a 	mov	r16,r6
   4ccd8:	dc400315 	stw	r17,12(sp)
   4ccdc:	8022907a 	slli	r17,r16,1
   4cce0:	dd000615 	stw	r20,24(sp)
   4cce4:	2829883a 	mov	r20,r5
   4cce8:	01400044 	movi	r5,1
   4ccec:	dcc00515 	stw	r19,20(sp)
   4ccf0:	dc800415 	stw	r18,16(sp)
   4ccf4:	dfc00715 	stw	ra,28(sp)
   4ccf8:	3825883a 	mov	r18,r7
   4ccfc:	8822d57a 	srli	r17,r17,21
   4cd00:	004bf7c0 	call	4bf7c <_Balloc>
   4cd04:	1027883a 	mov	r19,r2
   4cd08:	00800434 	movhi	r2,16
   4cd0c:	10bfffc4 	addi	r2,r2,-1
   4cd10:	808c703a 	and	r6,r16,r2
   4cd14:	88000126 	beq	r17,zero,4cd1c <__d2b+0x50>
   4cd18:	31800434 	orhi	r6,r6,16
   4cd1c:	d9800015 	stw	r6,0(sp)
   4cd20:	a0002426 	beq	r20,zero,4cdb4 <__d2b+0xe8>
   4cd24:	d9000104 	addi	r4,sp,4
   4cd28:	dd000115 	stw	r20,4(sp)
   4cd2c:	004c3000 	call	4c300 <__lo0bits>
   4cd30:	d8c00017 	ldw	r3,0(sp)
   4cd34:	10002f1e 	bne	r2,zero,4cdf4 <__d2b+0x128>
   4cd38:	d9000117 	ldw	r4,4(sp)
   4cd3c:	99000515 	stw	r4,20(r19)
   4cd40:	1821003a 	cmpeq	r16,r3,zero
   4cd44:	01000084 	movi	r4,2
   4cd48:	2421c83a 	sub	r16,r4,r16
   4cd4c:	98c00615 	stw	r3,24(r19)
   4cd50:	9c000415 	stw	r16,16(r19)
   4cd54:	88001f1e 	bne	r17,zero,4cdd4 <__d2b+0x108>
   4cd58:	10bef384 	addi	r2,r2,-1074
   4cd5c:	90800015 	stw	r2,0(r18)
   4cd60:	00900034 	movhi	r2,16384
   4cd64:	10bfffc4 	addi	r2,r2,-1
   4cd68:	8085883a 	add	r2,r16,r2
   4cd6c:	1085883a 	add	r2,r2,r2
   4cd70:	1085883a 	add	r2,r2,r2
   4cd74:	9885883a 	add	r2,r19,r2
   4cd78:	11000517 	ldw	r4,20(r2)
   4cd7c:	8020917a 	slli	r16,r16,5
   4cd80:	004c2980 	call	4c298 <__hi0bits>
   4cd84:	d8c00817 	ldw	r3,32(sp)
   4cd88:	8085c83a 	sub	r2,r16,r2
   4cd8c:	18800015 	stw	r2,0(r3)
   4cd90:	9805883a 	mov	r2,r19
   4cd94:	dfc00717 	ldw	ra,28(sp)
   4cd98:	dd000617 	ldw	r20,24(sp)
   4cd9c:	dcc00517 	ldw	r19,20(sp)
   4cda0:	dc800417 	ldw	r18,16(sp)
   4cda4:	dc400317 	ldw	r17,12(sp)
   4cda8:	dc000217 	ldw	r16,8(sp)
   4cdac:	dec00804 	addi	sp,sp,32
   4cdb0:	f800283a 	ret
   4cdb4:	d809883a 	mov	r4,sp
   4cdb8:	004c3000 	call	4c300 <__lo0bits>
   4cdbc:	d8c00017 	ldw	r3,0(sp)
   4cdc0:	04000044 	movi	r16,1
   4cdc4:	9c000415 	stw	r16,16(r19)
   4cdc8:	98c00515 	stw	r3,20(r19)
   4cdcc:	10800804 	addi	r2,r2,32
   4cdd0:	883fe126 	beq	r17,zero,4cd58 <_gp+0xfffefc10>
   4cdd4:	00c00d44 	movi	r3,53
   4cdd8:	8c7ef344 	addi	r17,r17,-1075
   4cddc:	88a3883a 	add	r17,r17,r2
   4cde0:	1885c83a 	sub	r2,r3,r2
   4cde4:	d8c00817 	ldw	r3,32(sp)
   4cde8:	94400015 	stw	r17,0(r18)
   4cdec:	18800015 	stw	r2,0(r3)
   4cdf0:	003fe706 	br	4cd90 <_gp+0xfffefc48>
   4cdf4:	01000804 	movi	r4,32
   4cdf8:	2089c83a 	sub	r4,r4,r2
   4cdfc:	1908983a 	sll	r4,r3,r4
   4ce00:	d9400117 	ldw	r5,4(sp)
   4ce04:	1886d83a 	srl	r3,r3,r2
   4ce08:	2148b03a 	or	r4,r4,r5
   4ce0c:	99000515 	stw	r4,20(r19)
   4ce10:	d8c00015 	stw	r3,0(sp)
   4ce14:	003fca06 	br	4cd40 <_gp+0xfffefbf8>

0004ce18 <__ratio>:
   4ce18:	defff904 	addi	sp,sp,-28
   4ce1c:	dc400315 	stw	r17,12(sp)
   4ce20:	2823883a 	mov	r17,r5
   4ce24:	d9400104 	addi	r5,sp,4
   4ce28:	dfc00615 	stw	ra,24(sp)
   4ce2c:	dcc00515 	stw	r19,20(sp)
   4ce30:	dc800415 	stw	r18,16(sp)
   4ce34:	2027883a 	mov	r19,r4
   4ce38:	dc000215 	stw	r16,8(sp)
   4ce3c:	004cbc00 	call	4cbc0 <__b2d>
   4ce40:	d80b883a 	mov	r5,sp
   4ce44:	8809883a 	mov	r4,r17
   4ce48:	1025883a 	mov	r18,r2
   4ce4c:	1821883a 	mov	r16,r3
   4ce50:	004cbc00 	call	4cbc0 <__b2d>
   4ce54:	8a000417 	ldw	r8,16(r17)
   4ce58:	99000417 	ldw	r4,16(r19)
   4ce5c:	d9400117 	ldw	r5,4(sp)
   4ce60:	2209c83a 	sub	r4,r4,r8
   4ce64:	2010917a 	slli	r8,r4,5
   4ce68:	d9000017 	ldw	r4,0(sp)
   4ce6c:	2909c83a 	sub	r4,r5,r4
   4ce70:	4109883a 	add	r4,r8,r4
   4ce74:	01000e0e 	bge	zero,r4,4ceb0 <__ratio+0x98>
   4ce78:	2008953a 	slli	r4,r4,20
   4ce7c:	2421883a 	add	r16,r4,r16
   4ce80:	100d883a 	mov	r6,r2
   4ce84:	180f883a 	mov	r7,r3
   4ce88:	9009883a 	mov	r4,r18
   4ce8c:	800b883a 	mov	r5,r16
   4ce90:	0043dc00 	call	43dc0 <__divdf3>
   4ce94:	dfc00617 	ldw	ra,24(sp)
   4ce98:	dcc00517 	ldw	r19,20(sp)
   4ce9c:	dc800417 	ldw	r18,16(sp)
   4cea0:	dc400317 	ldw	r17,12(sp)
   4cea4:	dc000217 	ldw	r16,8(sp)
   4cea8:	dec00704 	addi	sp,sp,28
   4ceac:	f800283a 	ret
   4ceb0:	2008953a 	slli	r4,r4,20
   4ceb4:	1907c83a 	sub	r3,r3,r4
   4ceb8:	003ff106 	br	4ce80 <_gp+0xfffefd38>

0004cebc <_mprec_log10>:
   4cebc:	defffe04 	addi	sp,sp,-8
   4cec0:	dc000015 	stw	r16,0(sp)
   4cec4:	dfc00115 	stw	ra,4(sp)
   4cec8:	008005c4 	movi	r2,23
   4cecc:	2021883a 	mov	r16,r4
   4ced0:	11000d0e 	bge	r2,r4,4cf08 <_mprec_log10+0x4c>
   4ced4:	0005883a 	mov	r2,zero
   4ced8:	00cffc34 	movhi	r3,16368
   4cedc:	843fffc4 	addi	r16,r16,-1
   4cee0:	000d883a 	mov	r6,zero
   4cee4:	01d00934 	movhi	r7,16420
   4cee8:	1009883a 	mov	r4,r2
   4ceec:	180b883a 	mov	r5,r3
   4cef0:	00449600 	call	44960 <__muldf3>
   4cef4:	803ff91e 	bne	r16,zero,4cedc <_gp+0xfffefd94>
   4cef8:	dfc00117 	ldw	ra,4(sp)
   4cefc:	dc000017 	ldw	r16,0(sp)
   4cf00:	dec00204 	addi	sp,sp,8
   4cf04:	f800283a 	ret
   4cf08:	202090fa 	slli	r16,r4,3
   4cf0c:	00800174 	movhi	r2,5
   4cf10:	108beb04 	addi	r2,r2,12204
   4cf14:	1421883a 	add	r16,r2,r16
   4cf18:	80800017 	ldw	r2,0(r16)
   4cf1c:	80c00117 	ldw	r3,4(r16)
   4cf20:	dfc00117 	ldw	ra,4(sp)
   4cf24:	dc000017 	ldw	r16,0(sp)
   4cf28:	dec00204 	addi	sp,sp,8
   4cf2c:	f800283a 	ret

0004cf30 <__copybits>:
   4cf30:	297fffc4 	addi	r5,r5,-1
   4cf34:	280fd17a 	srai	r7,r5,5
   4cf38:	30c00417 	ldw	r3,16(r6)
   4cf3c:	30800504 	addi	r2,r6,20
   4cf40:	39c00044 	addi	r7,r7,1
   4cf44:	18c7883a 	add	r3,r3,r3
   4cf48:	39cf883a 	add	r7,r7,r7
   4cf4c:	18c7883a 	add	r3,r3,r3
   4cf50:	39cf883a 	add	r7,r7,r7
   4cf54:	10c7883a 	add	r3,r2,r3
   4cf58:	21cf883a 	add	r7,r4,r7
   4cf5c:	10c00d2e 	bgeu	r2,r3,4cf94 <__copybits+0x64>
   4cf60:	200b883a 	mov	r5,r4
   4cf64:	12000017 	ldw	r8,0(r2)
   4cf68:	29400104 	addi	r5,r5,4
   4cf6c:	10800104 	addi	r2,r2,4
   4cf70:	2a3fff15 	stw	r8,-4(r5)
   4cf74:	10fffb36 	bltu	r2,r3,4cf64 <_gp+0xfffefe1c>
   4cf78:	1985c83a 	sub	r2,r3,r6
   4cf7c:	10bffac4 	addi	r2,r2,-21
   4cf80:	1004d0ba 	srli	r2,r2,2
   4cf84:	10800044 	addi	r2,r2,1
   4cf88:	1085883a 	add	r2,r2,r2
   4cf8c:	1085883a 	add	r2,r2,r2
   4cf90:	2089883a 	add	r4,r4,r2
   4cf94:	21c0032e 	bgeu	r4,r7,4cfa4 <__copybits+0x74>
   4cf98:	20000015 	stw	zero,0(r4)
   4cf9c:	21000104 	addi	r4,r4,4
   4cfa0:	21fffd36 	bltu	r4,r7,4cf98 <_gp+0xfffefe50>
   4cfa4:	f800283a 	ret

0004cfa8 <__any_on>:
   4cfa8:	20c00417 	ldw	r3,16(r4)
   4cfac:	2805d17a 	srai	r2,r5,5
   4cfb0:	21000504 	addi	r4,r4,20
   4cfb4:	18800d0e 	bge	r3,r2,4cfec <__any_on+0x44>
   4cfb8:	18c7883a 	add	r3,r3,r3
   4cfbc:	18c7883a 	add	r3,r3,r3
   4cfc0:	20c7883a 	add	r3,r4,r3
   4cfc4:	20c0192e 	bgeu	r4,r3,4d02c <__any_on+0x84>
   4cfc8:	18bfff17 	ldw	r2,-4(r3)
   4cfcc:	18ffff04 	addi	r3,r3,-4
   4cfd0:	1000041e 	bne	r2,zero,4cfe4 <__any_on+0x3c>
   4cfd4:	20c0142e 	bgeu	r4,r3,4d028 <__any_on+0x80>
   4cfd8:	18ffff04 	addi	r3,r3,-4
   4cfdc:	19400017 	ldw	r5,0(r3)
   4cfe0:	283ffc26 	beq	r5,zero,4cfd4 <_gp+0xfffefe8c>
   4cfe4:	00800044 	movi	r2,1
   4cfe8:	f800283a 	ret
   4cfec:	10c00a0e 	bge	r2,r3,4d018 <__any_on+0x70>
   4cff0:	1085883a 	add	r2,r2,r2
   4cff4:	1085883a 	add	r2,r2,r2
   4cff8:	294007cc 	andi	r5,r5,31
   4cffc:	2087883a 	add	r3,r4,r2
   4d000:	283ff026 	beq	r5,zero,4cfc4 <_gp+0xfffefe7c>
   4d004:	19800017 	ldw	r6,0(r3)
   4d008:	3144d83a 	srl	r2,r6,r5
   4d00c:	114a983a 	sll	r5,r2,r5
   4d010:	317ff41e 	bne	r6,r5,4cfe4 <_gp+0xfffefe9c>
   4d014:	003feb06 	br	4cfc4 <_gp+0xfffefe7c>
   4d018:	1085883a 	add	r2,r2,r2
   4d01c:	1085883a 	add	r2,r2,r2
   4d020:	2087883a 	add	r3,r4,r2
   4d024:	003fe706 	br	4cfc4 <_gp+0xfffefe7c>
   4d028:	f800283a 	ret
   4d02c:	0005883a 	mov	r2,zero
   4d030:	f800283a 	ret

0004d034 <_realloc_r>:
   4d034:	defff604 	addi	sp,sp,-40
   4d038:	dc800215 	stw	r18,8(sp)
   4d03c:	dfc00915 	stw	ra,36(sp)
   4d040:	df000815 	stw	fp,32(sp)
   4d044:	ddc00715 	stw	r23,28(sp)
   4d048:	dd800615 	stw	r22,24(sp)
   4d04c:	dd400515 	stw	r21,20(sp)
   4d050:	dd000415 	stw	r20,16(sp)
   4d054:	dcc00315 	stw	r19,12(sp)
   4d058:	dc400115 	stw	r17,4(sp)
   4d05c:	dc000015 	stw	r16,0(sp)
   4d060:	3025883a 	mov	r18,r6
   4d064:	2800b726 	beq	r5,zero,4d344 <_realloc_r+0x310>
   4d068:	282b883a 	mov	r21,r5
   4d06c:	2029883a 	mov	r20,r4
   4d070:	0050c540 	call	50c54 <__malloc_lock>
   4d074:	a8bfff17 	ldw	r2,-4(r21)
   4d078:	043fff04 	movi	r16,-4
   4d07c:	90c002c4 	addi	r3,r18,11
   4d080:	01000584 	movi	r4,22
   4d084:	acfffe04 	addi	r19,r21,-8
   4d088:	1420703a 	and	r16,r2,r16
   4d08c:	20c0332e 	bgeu	r4,r3,4d15c <_realloc_r+0x128>
   4d090:	047ffe04 	movi	r17,-8
   4d094:	1c62703a 	and	r17,r3,r17
   4d098:	8807883a 	mov	r3,r17
   4d09c:	88005816 	blt	r17,zero,4d200 <_realloc_r+0x1cc>
   4d0a0:	8c805736 	bltu	r17,r18,4d200 <_realloc_r+0x1cc>
   4d0a4:	80c0300e 	bge	r16,r3,4d168 <_realloc_r+0x134>
   4d0a8:	07000174 	movhi	fp,5
   4d0ac:	e70ece04 	addi	fp,fp,15160
   4d0b0:	e1c00217 	ldw	r7,8(fp)
   4d0b4:	9c09883a 	add	r4,r19,r16
   4d0b8:	22000117 	ldw	r8,4(r4)
   4d0bc:	21c06326 	beq	r4,r7,4d24c <_realloc_r+0x218>
   4d0c0:	017fff84 	movi	r5,-2
   4d0c4:	414a703a 	and	r5,r8,r5
   4d0c8:	214b883a 	add	r5,r4,r5
   4d0cc:	29800117 	ldw	r6,4(r5)
   4d0d0:	3180004c 	andi	r6,r6,1
   4d0d4:	30003f26 	beq	r6,zero,4d1d4 <_realloc_r+0x1a0>
   4d0d8:	1080004c 	andi	r2,r2,1
   4d0dc:	10008326 	beq	r2,zero,4d2ec <_realloc_r+0x2b8>
   4d0e0:	900b883a 	mov	r5,r18
   4d0e4:	a009883a 	mov	r4,r20
   4d0e8:	004b2c00 	call	4b2c0 <_malloc_r>
   4d0ec:	1025883a 	mov	r18,r2
   4d0f0:	10011e26 	beq	r2,zero,4d56c <_realloc_r+0x538>
   4d0f4:	a93fff17 	ldw	r4,-4(r21)
   4d0f8:	10fffe04 	addi	r3,r2,-8
   4d0fc:	00bfff84 	movi	r2,-2
   4d100:	2084703a 	and	r2,r4,r2
   4d104:	9885883a 	add	r2,r19,r2
   4d108:	1880ee26 	beq	r3,r2,4d4c4 <_realloc_r+0x490>
   4d10c:	81bfff04 	addi	r6,r16,-4
   4d110:	00800904 	movi	r2,36
   4d114:	1180b836 	bltu	r2,r6,4d3f8 <_realloc_r+0x3c4>
   4d118:	00c004c4 	movi	r3,19
   4d11c:	19809636 	bltu	r3,r6,4d378 <_realloc_r+0x344>
   4d120:	9005883a 	mov	r2,r18
   4d124:	a807883a 	mov	r3,r21
   4d128:	19000017 	ldw	r4,0(r3)
   4d12c:	11000015 	stw	r4,0(r2)
   4d130:	19000117 	ldw	r4,4(r3)
   4d134:	11000115 	stw	r4,4(r2)
   4d138:	18c00217 	ldw	r3,8(r3)
   4d13c:	10c00215 	stw	r3,8(r2)
   4d140:	a80b883a 	mov	r5,r21
   4d144:	a009883a 	mov	r4,r20
   4d148:	004a6c80 	call	4a6c8 <_free_r>
   4d14c:	a009883a 	mov	r4,r20
   4d150:	0050c780 	call	50c78 <__malloc_unlock>
   4d154:	9005883a 	mov	r2,r18
   4d158:	00001206 	br	4d1a4 <_realloc_r+0x170>
   4d15c:	00c00404 	movi	r3,16
   4d160:	1823883a 	mov	r17,r3
   4d164:	003fce06 	br	4d0a0 <_gp+0xfffeff58>
   4d168:	a825883a 	mov	r18,r21
   4d16c:	8445c83a 	sub	r2,r16,r17
   4d170:	00c003c4 	movi	r3,15
   4d174:	18802636 	bltu	r3,r2,4d210 <_realloc_r+0x1dc>
   4d178:	99800117 	ldw	r6,4(r19)
   4d17c:	9c07883a 	add	r3,r19,r16
   4d180:	3180004c 	andi	r6,r6,1
   4d184:	3420b03a 	or	r16,r6,r16
   4d188:	9c000115 	stw	r16,4(r19)
   4d18c:	18800117 	ldw	r2,4(r3)
   4d190:	10800054 	ori	r2,r2,1
   4d194:	18800115 	stw	r2,4(r3)
   4d198:	a009883a 	mov	r4,r20
   4d19c:	0050c780 	call	50c78 <__malloc_unlock>
   4d1a0:	9005883a 	mov	r2,r18
   4d1a4:	dfc00917 	ldw	ra,36(sp)
   4d1a8:	df000817 	ldw	fp,32(sp)
   4d1ac:	ddc00717 	ldw	r23,28(sp)
   4d1b0:	dd800617 	ldw	r22,24(sp)
   4d1b4:	dd400517 	ldw	r21,20(sp)
   4d1b8:	dd000417 	ldw	r20,16(sp)
   4d1bc:	dcc00317 	ldw	r19,12(sp)
   4d1c0:	dc800217 	ldw	r18,8(sp)
   4d1c4:	dc400117 	ldw	r17,4(sp)
   4d1c8:	dc000017 	ldw	r16,0(sp)
   4d1cc:	dec00a04 	addi	sp,sp,40
   4d1d0:	f800283a 	ret
   4d1d4:	017fff04 	movi	r5,-4
   4d1d8:	414a703a 	and	r5,r8,r5
   4d1dc:	814d883a 	add	r6,r16,r5
   4d1e0:	30c01f16 	blt	r6,r3,4d260 <_realloc_r+0x22c>
   4d1e4:	20800317 	ldw	r2,12(r4)
   4d1e8:	20c00217 	ldw	r3,8(r4)
   4d1ec:	a825883a 	mov	r18,r21
   4d1f0:	3021883a 	mov	r16,r6
   4d1f4:	18800315 	stw	r2,12(r3)
   4d1f8:	10c00215 	stw	r3,8(r2)
   4d1fc:	003fdb06 	br	4d16c <_gp+0xffff0024>
   4d200:	00800304 	movi	r2,12
   4d204:	a0800015 	stw	r2,0(r20)
   4d208:	0005883a 	mov	r2,zero
   4d20c:	003fe506 	br	4d1a4 <_gp+0xffff005c>
   4d210:	98c00117 	ldw	r3,4(r19)
   4d214:	9c4b883a 	add	r5,r19,r17
   4d218:	11000054 	ori	r4,r2,1
   4d21c:	18c0004c 	andi	r3,r3,1
   4d220:	1c62b03a 	or	r17,r3,r17
   4d224:	9c400115 	stw	r17,4(r19)
   4d228:	29000115 	stw	r4,4(r5)
   4d22c:	2885883a 	add	r2,r5,r2
   4d230:	10c00117 	ldw	r3,4(r2)
   4d234:	29400204 	addi	r5,r5,8
   4d238:	a009883a 	mov	r4,r20
   4d23c:	18c00054 	ori	r3,r3,1
   4d240:	10c00115 	stw	r3,4(r2)
   4d244:	004a6c80 	call	4a6c8 <_free_r>
   4d248:	003fd306 	br	4d198 <_gp+0xffff0050>
   4d24c:	017fff04 	movi	r5,-4
   4d250:	414a703a 	and	r5,r8,r5
   4d254:	89800404 	addi	r6,r17,16
   4d258:	8151883a 	add	r8,r16,r5
   4d25c:	4180590e 	bge	r8,r6,4d3c4 <_realloc_r+0x390>
   4d260:	1080004c 	andi	r2,r2,1
   4d264:	103f9e1e 	bne	r2,zero,4d0e0 <_gp+0xfffeff98>
   4d268:	adbffe17 	ldw	r22,-8(r21)
   4d26c:	00bfff04 	movi	r2,-4
   4d270:	9dadc83a 	sub	r22,r19,r22
   4d274:	b1800117 	ldw	r6,4(r22)
   4d278:	3084703a 	and	r2,r6,r2
   4d27c:	20002026 	beq	r4,zero,4d300 <_realloc_r+0x2cc>
   4d280:	80af883a 	add	r23,r16,r2
   4d284:	b96f883a 	add	r23,r23,r5
   4d288:	21c05f26 	beq	r4,r7,4d408 <_realloc_r+0x3d4>
   4d28c:	b8c01c16 	blt	r23,r3,4d300 <_realloc_r+0x2cc>
   4d290:	20800317 	ldw	r2,12(r4)
   4d294:	20c00217 	ldw	r3,8(r4)
   4d298:	81bfff04 	addi	r6,r16,-4
   4d29c:	01000904 	movi	r4,36
   4d2a0:	18800315 	stw	r2,12(r3)
   4d2a4:	10c00215 	stw	r3,8(r2)
   4d2a8:	b0c00217 	ldw	r3,8(r22)
   4d2ac:	b0800317 	ldw	r2,12(r22)
   4d2b0:	b4800204 	addi	r18,r22,8
   4d2b4:	18800315 	stw	r2,12(r3)
   4d2b8:	10c00215 	stw	r3,8(r2)
   4d2bc:	21801b36 	bltu	r4,r6,4d32c <_realloc_r+0x2f8>
   4d2c0:	008004c4 	movi	r2,19
   4d2c4:	1180352e 	bgeu	r2,r6,4d39c <_realloc_r+0x368>
   4d2c8:	a8800017 	ldw	r2,0(r21)
   4d2cc:	b0800215 	stw	r2,8(r22)
   4d2d0:	a8800117 	ldw	r2,4(r21)
   4d2d4:	b0800315 	stw	r2,12(r22)
   4d2d8:	008006c4 	movi	r2,27
   4d2dc:	11807f36 	bltu	r2,r6,4d4dc <_realloc_r+0x4a8>
   4d2e0:	b0800404 	addi	r2,r22,16
   4d2e4:	ad400204 	addi	r21,r21,8
   4d2e8:	00002d06 	br	4d3a0 <_realloc_r+0x36c>
   4d2ec:	adbffe17 	ldw	r22,-8(r21)
   4d2f0:	00bfff04 	movi	r2,-4
   4d2f4:	9dadc83a 	sub	r22,r19,r22
   4d2f8:	b1000117 	ldw	r4,4(r22)
   4d2fc:	2084703a 	and	r2,r4,r2
   4d300:	b03f7726 	beq	r22,zero,4d0e0 <_gp+0xfffeff98>
   4d304:	80af883a 	add	r23,r16,r2
   4d308:	b8ff7516 	blt	r23,r3,4d0e0 <_gp+0xfffeff98>
   4d30c:	b0800317 	ldw	r2,12(r22)
   4d310:	b0c00217 	ldw	r3,8(r22)
   4d314:	81bfff04 	addi	r6,r16,-4
   4d318:	01000904 	movi	r4,36
   4d31c:	18800315 	stw	r2,12(r3)
   4d320:	10c00215 	stw	r3,8(r2)
   4d324:	b4800204 	addi	r18,r22,8
   4d328:	21bfe52e 	bgeu	r4,r6,4d2c0 <_gp+0xffff0178>
   4d32c:	a80b883a 	mov	r5,r21
   4d330:	9009883a 	mov	r4,r18
   4d334:	004bcf80 	call	4bcf8 <memmove>
   4d338:	b821883a 	mov	r16,r23
   4d33c:	b027883a 	mov	r19,r22
   4d340:	003f8a06 	br	4d16c <_gp+0xffff0024>
   4d344:	300b883a 	mov	r5,r6
   4d348:	dfc00917 	ldw	ra,36(sp)
   4d34c:	df000817 	ldw	fp,32(sp)
   4d350:	ddc00717 	ldw	r23,28(sp)
   4d354:	dd800617 	ldw	r22,24(sp)
   4d358:	dd400517 	ldw	r21,20(sp)
   4d35c:	dd000417 	ldw	r20,16(sp)
   4d360:	dcc00317 	ldw	r19,12(sp)
   4d364:	dc800217 	ldw	r18,8(sp)
   4d368:	dc400117 	ldw	r17,4(sp)
   4d36c:	dc000017 	ldw	r16,0(sp)
   4d370:	dec00a04 	addi	sp,sp,40
   4d374:	004b2c01 	jmpi	4b2c0 <_malloc_r>
   4d378:	a8c00017 	ldw	r3,0(r21)
   4d37c:	90c00015 	stw	r3,0(r18)
   4d380:	a8c00117 	ldw	r3,4(r21)
   4d384:	90c00115 	stw	r3,4(r18)
   4d388:	00c006c4 	movi	r3,27
   4d38c:	19804536 	bltu	r3,r6,4d4a4 <_realloc_r+0x470>
   4d390:	90800204 	addi	r2,r18,8
   4d394:	a8c00204 	addi	r3,r21,8
   4d398:	003f6306 	br	4d128 <_gp+0xfffeffe0>
   4d39c:	9005883a 	mov	r2,r18
   4d3a0:	a8c00017 	ldw	r3,0(r21)
   4d3a4:	b821883a 	mov	r16,r23
   4d3a8:	b027883a 	mov	r19,r22
   4d3ac:	10c00015 	stw	r3,0(r2)
   4d3b0:	a8c00117 	ldw	r3,4(r21)
   4d3b4:	10c00115 	stw	r3,4(r2)
   4d3b8:	a8c00217 	ldw	r3,8(r21)
   4d3bc:	10c00215 	stw	r3,8(r2)
   4d3c0:	003f6a06 	br	4d16c <_gp+0xffff0024>
   4d3c4:	9c67883a 	add	r19,r19,r17
   4d3c8:	4445c83a 	sub	r2,r8,r17
   4d3cc:	e4c00215 	stw	r19,8(fp)
   4d3d0:	10800054 	ori	r2,r2,1
   4d3d4:	98800115 	stw	r2,4(r19)
   4d3d8:	a8bfff17 	ldw	r2,-4(r21)
   4d3dc:	a009883a 	mov	r4,r20
   4d3e0:	1080004c 	andi	r2,r2,1
   4d3e4:	1462b03a 	or	r17,r2,r17
   4d3e8:	ac7fff15 	stw	r17,-4(r21)
   4d3ec:	0050c780 	call	50c78 <__malloc_unlock>
   4d3f0:	a805883a 	mov	r2,r21
   4d3f4:	003f6b06 	br	4d1a4 <_gp+0xffff005c>
   4d3f8:	a80b883a 	mov	r5,r21
   4d3fc:	9009883a 	mov	r4,r18
   4d400:	004bcf80 	call	4bcf8 <memmove>
   4d404:	003f4e06 	br	4d140 <_gp+0xfffefff8>
   4d408:	89000404 	addi	r4,r17,16
   4d40c:	b93fbc16 	blt	r23,r4,4d300 <_gp+0xffff01b8>
   4d410:	b0800317 	ldw	r2,12(r22)
   4d414:	b0c00217 	ldw	r3,8(r22)
   4d418:	81bfff04 	addi	r6,r16,-4
   4d41c:	01000904 	movi	r4,36
   4d420:	18800315 	stw	r2,12(r3)
   4d424:	10c00215 	stw	r3,8(r2)
   4d428:	b4800204 	addi	r18,r22,8
   4d42c:	21804336 	bltu	r4,r6,4d53c <_realloc_r+0x508>
   4d430:	008004c4 	movi	r2,19
   4d434:	11803f2e 	bgeu	r2,r6,4d534 <_realloc_r+0x500>
   4d438:	a8800017 	ldw	r2,0(r21)
   4d43c:	b0800215 	stw	r2,8(r22)
   4d440:	a8800117 	ldw	r2,4(r21)
   4d444:	b0800315 	stw	r2,12(r22)
   4d448:	008006c4 	movi	r2,27
   4d44c:	11803f36 	bltu	r2,r6,4d54c <_realloc_r+0x518>
   4d450:	b0800404 	addi	r2,r22,16
   4d454:	ad400204 	addi	r21,r21,8
   4d458:	a8c00017 	ldw	r3,0(r21)
   4d45c:	10c00015 	stw	r3,0(r2)
   4d460:	a8c00117 	ldw	r3,4(r21)
   4d464:	10c00115 	stw	r3,4(r2)
   4d468:	a8c00217 	ldw	r3,8(r21)
   4d46c:	10c00215 	stw	r3,8(r2)
   4d470:	b447883a 	add	r3,r22,r17
   4d474:	bc45c83a 	sub	r2,r23,r17
   4d478:	e0c00215 	stw	r3,8(fp)
   4d47c:	10800054 	ori	r2,r2,1
   4d480:	18800115 	stw	r2,4(r3)
   4d484:	b0800117 	ldw	r2,4(r22)
   4d488:	a009883a 	mov	r4,r20
   4d48c:	1080004c 	andi	r2,r2,1
   4d490:	1462b03a 	or	r17,r2,r17
   4d494:	b4400115 	stw	r17,4(r22)
   4d498:	0050c780 	call	50c78 <__malloc_unlock>
   4d49c:	9005883a 	mov	r2,r18
   4d4a0:	003f4006 	br	4d1a4 <_gp+0xffff005c>
   4d4a4:	a8c00217 	ldw	r3,8(r21)
   4d4a8:	90c00215 	stw	r3,8(r18)
   4d4ac:	a8c00317 	ldw	r3,12(r21)
   4d4b0:	90c00315 	stw	r3,12(r18)
   4d4b4:	30801126 	beq	r6,r2,4d4fc <_realloc_r+0x4c8>
   4d4b8:	90800404 	addi	r2,r18,16
   4d4bc:	a8c00404 	addi	r3,r21,16
   4d4c0:	003f1906 	br	4d128 <_gp+0xfffeffe0>
   4d4c4:	90ffff17 	ldw	r3,-4(r18)
   4d4c8:	00bfff04 	movi	r2,-4
   4d4cc:	a825883a 	mov	r18,r21
   4d4d0:	1884703a 	and	r2,r3,r2
   4d4d4:	80a1883a 	add	r16,r16,r2
   4d4d8:	003f2406 	br	4d16c <_gp+0xffff0024>
   4d4dc:	a8800217 	ldw	r2,8(r21)
   4d4e0:	b0800415 	stw	r2,16(r22)
   4d4e4:	a8800317 	ldw	r2,12(r21)
   4d4e8:	b0800515 	stw	r2,20(r22)
   4d4ec:	31000a26 	beq	r6,r4,4d518 <_realloc_r+0x4e4>
   4d4f0:	b0800604 	addi	r2,r22,24
   4d4f4:	ad400404 	addi	r21,r21,16
   4d4f8:	003fa906 	br	4d3a0 <_gp+0xffff0258>
   4d4fc:	a9000417 	ldw	r4,16(r21)
   4d500:	90800604 	addi	r2,r18,24
   4d504:	a8c00604 	addi	r3,r21,24
   4d508:	91000415 	stw	r4,16(r18)
   4d50c:	a9000517 	ldw	r4,20(r21)
   4d510:	91000515 	stw	r4,20(r18)
   4d514:	003f0406 	br	4d128 <_gp+0xfffeffe0>
   4d518:	a8c00417 	ldw	r3,16(r21)
   4d51c:	ad400604 	addi	r21,r21,24
   4d520:	b0800804 	addi	r2,r22,32
   4d524:	b0c00615 	stw	r3,24(r22)
   4d528:	a8ffff17 	ldw	r3,-4(r21)
   4d52c:	b0c00715 	stw	r3,28(r22)
   4d530:	003f9b06 	br	4d3a0 <_gp+0xffff0258>
   4d534:	9005883a 	mov	r2,r18
   4d538:	003fc706 	br	4d458 <_gp+0xffff0310>
   4d53c:	a80b883a 	mov	r5,r21
   4d540:	9009883a 	mov	r4,r18
   4d544:	004bcf80 	call	4bcf8 <memmove>
   4d548:	003fc906 	br	4d470 <_gp+0xffff0328>
   4d54c:	a8800217 	ldw	r2,8(r21)
   4d550:	b0800415 	stw	r2,16(r22)
   4d554:	a8800317 	ldw	r2,12(r21)
   4d558:	b0800515 	stw	r2,20(r22)
   4d55c:	31000726 	beq	r6,r4,4d57c <_realloc_r+0x548>
   4d560:	b0800604 	addi	r2,r22,24
   4d564:	ad400404 	addi	r21,r21,16
   4d568:	003fbb06 	br	4d458 <_gp+0xffff0310>
   4d56c:	a009883a 	mov	r4,r20
   4d570:	0050c780 	call	50c78 <__malloc_unlock>
   4d574:	0005883a 	mov	r2,zero
   4d578:	003f0a06 	br	4d1a4 <_gp+0xffff005c>
   4d57c:	a8c00417 	ldw	r3,16(r21)
   4d580:	ad400604 	addi	r21,r21,24
   4d584:	b0800804 	addi	r2,r22,32
   4d588:	b0c00615 	stw	r3,24(r22)
   4d58c:	a8ffff17 	ldw	r3,-4(r21)
   4d590:	b0c00715 	stw	r3,28(r22)
   4d594:	003fb006 	br	4d458 <_gp+0xffff0310>

0004d598 <__fpclassifyd>:
   4d598:	00a00034 	movhi	r2,32768
   4d59c:	10bfffc4 	addi	r2,r2,-1
   4d5a0:	2884703a 	and	r2,r5,r2
   4d5a4:	10000726 	beq	r2,zero,4d5c4 <__fpclassifyd+0x2c>
   4d5a8:	00fffc34 	movhi	r3,65520
   4d5ac:	019ff834 	movhi	r6,32736
   4d5b0:	28c7883a 	add	r3,r5,r3
   4d5b4:	31bfffc4 	addi	r6,r6,-1
   4d5b8:	30c00536 	bltu	r6,r3,4d5d0 <__fpclassifyd+0x38>
   4d5bc:	00800104 	movi	r2,4
   4d5c0:	f800283a 	ret
   4d5c4:	2000021e 	bne	r4,zero,4d5d0 <__fpclassifyd+0x38>
   4d5c8:	00800084 	movi	r2,2
   4d5cc:	f800283a 	ret
   4d5d0:	00dffc34 	movhi	r3,32752
   4d5d4:	019ff834 	movhi	r6,32736
   4d5d8:	28cb883a 	add	r5,r5,r3
   4d5dc:	31bfffc4 	addi	r6,r6,-1
   4d5e0:	317ff62e 	bgeu	r6,r5,4d5bc <_gp+0xffff0474>
   4d5e4:	01400434 	movhi	r5,16
   4d5e8:	297fffc4 	addi	r5,r5,-1
   4d5ec:	28800236 	bltu	r5,r2,4d5f8 <__fpclassifyd+0x60>
   4d5f0:	008000c4 	movi	r2,3
   4d5f4:	f800283a 	ret
   4d5f8:	10c00226 	beq	r2,r3,4d604 <__fpclassifyd+0x6c>
   4d5fc:	0005883a 	mov	r2,zero
   4d600:	f800283a 	ret
   4d604:	2005003a 	cmpeq	r2,r4,zero
   4d608:	f800283a 	ret

0004d60c <_sbrk_r>:
   4d60c:	defffd04 	addi	sp,sp,-12
   4d610:	dc000015 	stw	r16,0(sp)
   4d614:	04000174 	movhi	r16,5
   4d618:	dc400115 	stw	r17,4(sp)
   4d61c:	841c9c04 	addi	r16,r16,29296
   4d620:	2023883a 	mov	r17,r4
   4d624:	2809883a 	mov	r4,r5
   4d628:	dfc00215 	stw	ra,8(sp)
   4d62c:	80000015 	stw	zero,0(r16)
   4d630:	0050e600 	call	50e60 <sbrk>
   4d634:	00ffffc4 	movi	r3,-1
   4d638:	10c00526 	beq	r2,r3,4d650 <_sbrk_r+0x44>
   4d63c:	dfc00217 	ldw	ra,8(sp)
   4d640:	dc400117 	ldw	r17,4(sp)
   4d644:	dc000017 	ldw	r16,0(sp)
   4d648:	dec00304 	addi	sp,sp,12
   4d64c:	f800283a 	ret
   4d650:	80c00017 	ldw	r3,0(r16)
   4d654:	183ff926 	beq	r3,zero,4d63c <_gp+0xffff04f4>
   4d658:	88c00015 	stw	r3,0(r17)
   4d65c:	003ff706 	br	4d63c <_gp+0xffff04f4>

0004d660 <__sread>:
   4d660:	defffe04 	addi	sp,sp,-8
   4d664:	dc000015 	stw	r16,0(sp)
   4d668:	2821883a 	mov	r16,r5
   4d66c:	2940038f 	ldh	r5,14(r5)
   4d670:	dfc00115 	stw	ra,4(sp)
   4d674:	004f51c0 	call	4f51c <_read_r>
   4d678:	10000716 	blt	r2,zero,4d698 <__sread+0x38>
   4d67c:	80c01417 	ldw	r3,80(r16)
   4d680:	1887883a 	add	r3,r3,r2
   4d684:	80c01415 	stw	r3,80(r16)
   4d688:	dfc00117 	ldw	ra,4(sp)
   4d68c:	dc000017 	ldw	r16,0(sp)
   4d690:	dec00204 	addi	sp,sp,8
   4d694:	f800283a 	ret
   4d698:	80c0030b 	ldhu	r3,12(r16)
   4d69c:	18fbffcc 	andi	r3,r3,61439
   4d6a0:	80c0030d 	sth	r3,12(r16)
   4d6a4:	dfc00117 	ldw	ra,4(sp)
   4d6a8:	dc000017 	ldw	r16,0(sp)
   4d6ac:	dec00204 	addi	sp,sp,8
   4d6b0:	f800283a 	ret

0004d6b4 <__seofread>:
   4d6b4:	0005883a 	mov	r2,zero
   4d6b8:	f800283a 	ret

0004d6bc <__swrite>:
   4d6bc:	2880030b 	ldhu	r2,12(r5)
   4d6c0:	defffb04 	addi	sp,sp,-20
   4d6c4:	dcc00315 	stw	r19,12(sp)
   4d6c8:	dc800215 	stw	r18,8(sp)
   4d6cc:	dc400115 	stw	r17,4(sp)
   4d6d0:	dc000015 	stw	r16,0(sp)
   4d6d4:	dfc00415 	stw	ra,16(sp)
   4d6d8:	10c0400c 	andi	r3,r2,256
   4d6dc:	2821883a 	mov	r16,r5
   4d6e0:	2023883a 	mov	r17,r4
   4d6e4:	3025883a 	mov	r18,r6
   4d6e8:	3827883a 	mov	r19,r7
   4d6ec:	18000526 	beq	r3,zero,4d704 <__swrite+0x48>
   4d6f0:	2940038f 	ldh	r5,14(r5)
   4d6f4:	01c00084 	movi	r7,2
   4d6f8:	000d883a 	mov	r6,zero
   4d6fc:	004f4bc0 	call	4f4bc <_lseek_r>
   4d700:	8080030b 	ldhu	r2,12(r16)
   4d704:	8140038f 	ldh	r5,14(r16)
   4d708:	10bbffcc 	andi	r2,r2,61439
   4d70c:	980f883a 	mov	r7,r19
   4d710:	900d883a 	mov	r6,r18
   4d714:	8809883a 	mov	r4,r17
   4d718:	8080030d 	sth	r2,12(r16)
   4d71c:	dfc00417 	ldw	ra,16(sp)
   4d720:	dcc00317 	ldw	r19,12(sp)
   4d724:	dc800217 	ldw	r18,8(sp)
   4d728:	dc400117 	ldw	r17,4(sp)
   4d72c:	dc000017 	ldw	r16,0(sp)
   4d730:	dec00504 	addi	sp,sp,20
   4d734:	004ef701 	jmpi	4ef70 <_write_r>

0004d738 <__sseek>:
   4d738:	defffe04 	addi	sp,sp,-8
   4d73c:	dc000015 	stw	r16,0(sp)
   4d740:	2821883a 	mov	r16,r5
   4d744:	2940038f 	ldh	r5,14(r5)
   4d748:	dfc00115 	stw	ra,4(sp)
   4d74c:	004f4bc0 	call	4f4bc <_lseek_r>
   4d750:	00ffffc4 	movi	r3,-1
   4d754:	10c00826 	beq	r2,r3,4d778 <__sseek+0x40>
   4d758:	80c0030b 	ldhu	r3,12(r16)
   4d75c:	80801415 	stw	r2,80(r16)
   4d760:	18c40014 	ori	r3,r3,4096
   4d764:	80c0030d 	sth	r3,12(r16)
   4d768:	dfc00117 	ldw	ra,4(sp)
   4d76c:	dc000017 	ldw	r16,0(sp)
   4d770:	dec00204 	addi	sp,sp,8
   4d774:	f800283a 	ret
   4d778:	80c0030b 	ldhu	r3,12(r16)
   4d77c:	18fbffcc 	andi	r3,r3,61439
   4d780:	80c0030d 	sth	r3,12(r16)
   4d784:	dfc00117 	ldw	ra,4(sp)
   4d788:	dc000017 	ldw	r16,0(sp)
   4d78c:	dec00204 	addi	sp,sp,8
   4d790:	f800283a 	ret

0004d794 <__sclose>:
   4d794:	2940038f 	ldh	r5,14(r5)
   4d798:	004efd01 	jmpi	4efd0 <_close_r>

0004d79c <strcmp>:
   4d79c:	2144b03a 	or	r2,r4,r5
   4d7a0:	108000cc 	andi	r2,r2,3
   4d7a4:	1000171e 	bne	r2,zero,4d804 <strcmp+0x68>
   4d7a8:	20800017 	ldw	r2,0(r4)
   4d7ac:	28c00017 	ldw	r3,0(r5)
   4d7b0:	10c0141e 	bne	r2,r3,4d804 <strcmp+0x68>
   4d7b4:	027fbff4 	movhi	r9,65279
   4d7b8:	4a7fbfc4 	addi	r9,r9,-257
   4d7bc:	0086303a 	nor	r3,zero,r2
   4d7c0:	02202074 	movhi	r8,32897
   4d7c4:	1245883a 	add	r2,r2,r9
   4d7c8:	42202004 	addi	r8,r8,-32640
   4d7cc:	10c4703a 	and	r2,r2,r3
   4d7d0:	1204703a 	and	r2,r2,r8
   4d7d4:	10000226 	beq	r2,zero,4d7e0 <strcmp+0x44>
   4d7d8:	00002306 	br	4d868 <strcmp+0xcc>
   4d7dc:	1000221e 	bne	r2,zero,4d868 <strcmp+0xcc>
   4d7e0:	21000104 	addi	r4,r4,4
   4d7e4:	20c00017 	ldw	r3,0(r4)
   4d7e8:	29400104 	addi	r5,r5,4
   4d7ec:	29800017 	ldw	r6,0(r5)
   4d7f0:	1a4f883a 	add	r7,r3,r9
   4d7f4:	00c4303a 	nor	r2,zero,r3
   4d7f8:	3884703a 	and	r2,r7,r2
   4d7fc:	1204703a 	and	r2,r2,r8
   4d800:	19bff626 	beq	r3,r6,4d7dc <_gp+0xffff0694>
   4d804:	20800003 	ldbu	r2,0(r4)
   4d808:	10c03fcc 	andi	r3,r2,255
   4d80c:	18c0201c 	xori	r3,r3,128
   4d810:	18ffe004 	addi	r3,r3,-128
   4d814:	18000c26 	beq	r3,zero,4d848 <strcmp+0xac>
   4d818:	29800007 	ldb	r6,0(r5)
   4d81c:	19800326 	beq	r3,r6,4d82c <strcmp+0x90>
   4d820:	00001306 	br	4d870 <strcmp+0xd4>
   4d824:	29800007 	ldb	r6,0(r5)
   4d828:	11800b1e 	bne	r2,r6,4d858 <strcmp+0xbc>
   4d82c:	21000044 	addi	r4,r4,1
   4d830:	20c00003 	ldbu	r3,0(r4)
   4d834:	29400044 	addi	r5,r5,1
   4d838:	18803fcc 	andi	r2,r3,255
   4d83c:	1080201c 	xori	r2,r2,128
   4d840:	10bfe004 	addi	r2,r2,-128
   4d844:	103ff71e 	bne	r2,zero,4d824 <_gp+0xffff06dc>
   4d848:	0007883a 	mov	r3,zero
   4d84c:	28800003 	ldbu	r2,0(r5)
   4d850:	1885c83a 	sub	r2,r3,r2
   4d854:	f800283a 	ret
   4d858:	28800003 	ldbu	r2,0(r5)
   4d85c:	18c03fcc 	andi	r3,r3,255
   4d860:	1885c83a 	sub	r2,r3,r2
   4d864:	f800283a 	ret
   4d868:	0005883a 	mov	r2,zero
   4d86c:	f800283a 	ret
   4d870:	10c03fcc 	andi	r3,r2,255
   4d874:	003ff506 	br	4d84c <_gp+0xffff0704>

0004d878 <__sprint_r.part.0>:
   4d878:	28801917 	ldw	r2,100(r5)
   4d87c:	defff604 	addi	sp,sp,-40
   4d880:	dd400515 	stw	r21,20(sp)
   4d884:	dfc00915 	stw	ra,36(sp)
   4d888:	df000815 	stw	fp,32(sp)
   4d88c:	ddc00715 	stw	r23,28(sp)
   4d890:	dd800615 	stw	r22,24(sp)
   4d894:	dd000415 	stw	r20,16(sp)
   4d898:	dcc00315 	stw	r19,12(sp)
   4d89c:	dc800215 	stw	r18,8(sp)
   4d8a0:	dc400115 	stw	r17,4(sp)
   4d8a4:	dc000015 	stw	r16,0(sp)
   4d8a8:	1088000c 	andi	r2,r2,8192
   4d8ac:	302b883a 	mov	r21,r6
   4d8b0:	10002e26 	beq	r2,zero,4d96c <__sprint_r.part.0+0xf4>
   4d8b4:	30800217 	ldw	r2,8(r6)
   4d8b8:	35800017 	ldw	r22,0(r6)
   4d8bc:	10002926 	beq	r2,zero,4d964 <__sprint_r.part.0+0xec>
   4d8c0:	2827883a 	mov	r19,r5
   4d8c4:	2029883a 	mov	r20,r4
   4d8c8:	b5c00104 	addi	r23,r22,4
   4d8cc:	04bfffc4 	movi	r18,-1
   4d8d0:	bc400017 	ldw	r17,0(r23)
   4d8d4:	b4000017 	ldw	r16,0(r22)
   4d8d8:	0039883a 	mov	fp,zero
   4d8dc:	8822d0ba 	srli	r17,r17,2
   4d8e0:	8800031e 	bne	r17,zero,4d8f0 <__sprint_r.part.0+0x78>
   4d8e4:	00001806 	br	4d948 <__sprint_r.part.0+0xd0>
   4d8e8:	84000104 	addi	r16,r16,4
   4d8ec:	8f001526 	beq	r17,fp,4d944 <__sprint_r.part.0+0xcc>
   4d8f0:	81400017 	ldw	r5,0(r16)
   4d8f4:	980d883a 	mov	r6,r19
   4d8f8:	a009883a 	mov	r4,r20
   4d8fc:	004f3680 	call	4f368 <_fputwc_r>
   4d900:	e7000044 	addi	fp,fp,1
   4d904:	14bff81e 	bne	r2,r18,4d8e8 <_gp+0xffff07a0>
   4d908:	9005883a 	mov	r2,r18
   4d90c:	a8000215 	stw	zero,8(r21)
   4d910:	a8000115 	stw	zero,4(r21)
   4d914:	dfc00917 	ldw	ra,36(sp)
   4d918:	df000817 	ldw	fp,32(sp)
   4d91c:	ddc00717 	ldw	r23,28(sp)
   4d920:	dd800617 	ldw	r22,24(sp)
   4d924:	dd400517 	ldw	r21,20(sp)
   4d928:	dd000417 	ldw	r20,16(sp)
   4d92c:	dcc00317 	ldw	r19,12(sp)
   4d930:	dc800217 	ldw	r18,8(sp)
   4d934:	dc400117 	ldw	r17,4(sp)
   4d938:	dc000017 	ldw	r16,0(sp)
   4d93c:	dec00a04 	addi	sp,sp,40
   4d940:	f800283a 	ret
   4d944:	a8800217 	ldw	r2,8(r21)
   4d948:	8c63883a 	add	r17,r17,r17
   4d94c:	8c63883a 	add	r17,r17,r17
   4d950:	1445c83a 	sub	r2,r2,r17
   4d954:	a8800215 	stw	r2,8(r21)
   4d958:	b5800204 	addi	r22,r22,8
   4d95c:	bdc00204 	addi	r23,r23,8
   4d960:	103fdb1e 	bne	r2,zero,4d8d0 <_gp+0xffff0788>
   4d964:	0005883a 	mov	r2,zero
   4d968:	003fe806 	br	4d90c <_gp+0xffff07c4>
   4d96c:	004a9d80 	call	4a9d8 <__sfvwrite_r>
   4d970:	003fe606 	br	4d90c <_gp+0xffff07c4>

0004d974 <__sprint_r>:
   4d974:	30c00217 	ldw	r3,8(r6)
   4d978:	18000126 	beq	r3,zero,4d980 <__sprint_r+0xc>
   4d97c:	004d8781 	jmpi	4d878 <__sprint_r.part.0>
   4d980:	30000115 	stw	zero,4(r6)
   4d984:	0005883a 	mov	r2,zero
   4d988:	f800283a 	ret

0004d98c <___vfiprintf_internal_r>:
   4d98c:	deffca04 	addi	sp,sp,-216
   4d990:	dd403115 	stw	r21,196(sp)
   4d994:	dfc03515 	stw	ra,212(sp)
   4d998:	df003415 	stw	fp,208(sp)
   4d99c:	ddc03315 	stw	r23,204(sp)
   4d9a0:	dd803215 	stw	r22,200(sp)
   4d9a4:	dd003015 	stw	r20,192(sp)
   4d9a8:	dcc02f15 	stw	r19,188(sp)
   4d9ac:	dc802e15 	stw	r18,184(sp)
   4d9b0:	dc402d15 	stw	r17,180(sp)
   4d9b4:	dc002c15 	stw	r16,176(sp)
   4d9b8:	d9002115 	stw	r4,132(sp)
   4d9bc:	d9402015 	stw	r5,128(sp)
   4d9c0:	d9c02215 	stw	r7,136(sp)
   4d9c4:	302b883a 	mov	r21,r6
   4d9c8:	20000226 	beq	r4,zero,4d9d4 <___vfiprintf_internal_r+0x48>
   4d9cc:	20800e17 	ldw	r2,56(r4)
   4d9d0:	1000cf26 	beq	r2,zero,4dd10 <___vfiprintf_internal_r+0x384>
   4d9d4:	d8c02017 	ldw	r3,128(sp)
   4d9d8:	1880030b 	ldhu	r2,12(r3)
   4d9dc:	10c8000c 	andi	r3,r2,8192
   4d9e0:	1800071e 	bne	r3,zero,4da00 <___vfiprintf_internal_r+0x74>
   4d9e4:	d9402017 	ldw	r5,128(sp)
   4d9e8:	00f7ffc4 	movi	r3,-8193
   4d9ec:	10880014 	ori	r2,r2,8192
   4d9f0:	29001917 	ldw	r4,100(r5)
   4d9f4:	2880030d 	sth	r2,12(r5)
   4d9f8:	20c6703a 	and	r3,r4,r3
   4d9fc:	28c01915 	stw	r3,100(r5)
   4da00:	10c0020c 	andi	r3,r2,8
   4da04:	1800a526 	beq	r3,zero,4dc9c <___vfiprintf_internal_r+0x310>
   4da08:	d9002017 	ldw	r4,128(sp)
   4da0c:	20c00417 	ldw	r3,16(r4)
   4da10:	1800a226 	beq	r3,zero,4dc9c <___vfiprintf_internal_r+0x310>
   4da14:	1080068c 	andi	r2,r2,26
   4da18:	00c00284 	movi	r3,10
   4da1c:	10c0a826 	beq	r2,r3,4dcc0 <___vfiprintf_internal_r+0x334>
   4da20:	d9001a04 	addi	r4,sp,104
   4da24:	d94019c4 	addi	r5,sp,103
   4da28:	04800174 	movhi	r18,5
   4da2c:	2145c83a 	sub	r2,r4,r5
   4da30:	948c1d04 	addi	r18,r18,12404
   4da34:	d9001e15 	stw	r4,120(sp)
   4da38:	d9401f15 	stw	r5,124(sp)
   4da3c:	dec01a15 	stw	sp,104(sp)
   4da40:	d8001c15 	stw	zero,112(sp)
   4da44:	d8001b15 	stw	zero,108(sp)
   4da48:	d811883a 	mov	r8,sp
   4da4c:	d8002615 	stw	zero,152(sp)
   4da50:	d8002415 	stw	zero,144(sp)
   4da54:	d8802815 	stw	r2,160(sp)
   4da58:	a82d883a 	mov	r22,r21
   4da5c:	b0800007 	ldb	r2,0(r22)
   4da60:	10040d26 	beq	r2,zero,4ea98 <___vfiprintf_internal_r+0x110c>
   4da64:	00c00944 	movi	r3,37
   4da68:	b029883a 	mov	r20,r22
   4da6c:	10c0021e 	bne	r2,r3,4da78 <___vfiprintf_internal_r+0xec>
   4da70:	00001606 	br	4dacc <___vfiprintf_internal_r+0x140>
   4da74:	10c00326 	beq	r2,r3,4da84 <___vfiprintf_internal_r+0xf8>
   4da78:	a5000044 	addi	r20,r20,1
   4da7c:	a0800007 	ldb	r2,0(r20)
   4da80:	103ffc1e 	bne	r2,zero,4da74 <_gp+0xffff092c>
   4da84:	a5a1c83a 	sub	r16,r20,r22
   4da88:	80001026 	beq	r16,zero,4dacc <___vfiprintf_internal_r+0x140>
   4da8c:	d8c01c17 	ldw	r3,112(sp)
   4da90:	d8801b17 	ldw	r2,108(sp)
   4da94:	45800015 	stw	r22,0(r8)
   4da98:	80c7883a 	add	r3,r16,r3
   4da9c:	10800044 	addi	r2,r2,1
   4daa0:	44000115 	stw	r16,4(r8)
   4daa4:	d8c01c15 	stw	r3,112(sp)
   4daa8:	d8801b15 	stw	r2,108(sp)
   4daac:	010001c4 	movi	r4,7
   4dab0:	2080750e 	bge	r4,r2,4dc88 <___vfiprintf_internal_r+0x2fc>
   4dab4:	1803951e 	bne	r3,zero,4e90c <___vfiprintf_internal_r+0xf80>
   4dab8:	d8c02417 	ldw	r3,144(sp)
   4dabc:	d8001b15 	stw	zero,108(sp)
   4dac0:	d811883a 	mov	r8,sp
   4dac4:	1c07883a 	add	r3,r3,r16
   4dac8:	d8c02415 	stw	r3,144(sp)
   4dacc:	a0800007 	ldb	r2,0(r20)
   4dad0:	1002e026 	beq	r2,zero,4e654 <___vfiprintf_internal_r+0xcc8>
   4dad4:	a5800044 	addi	r22,r20,1
   4dad8:	a0c00047 	ldb	r3,1(r20)
   4dadc:	d8001d85 	stb	zero,118(sp)
   4dae0:	0027883a 	mov	r19,zero
   4dae4:	d8002305 	stb	zero,140(sp)
   4dae8:	043fffc4 	movi	r16,-1
   4daec:	d8002515 	stw	zero,148(sp)
   4daf0:	0023883a 	mov	r17,zero
   4daf4:	05001604 	movi	r20,88
   4daf8:	05400244 	movi	r21,9
   4dafc:	402f883a 	mov	r23,r8
   4db00:	b5800044 	addi	r22,r22,1
   4db04:	18bff804 	addi	r2,r3,-32
   4db08:	a0827736 	bltu	r20,r2,4e4e8 <___vfiprintf_internal_r+0xb5c>
   4db0c:	100490ba 	slli	r2,r2,2
   4db10:	01000174 	movhi	r4,5
   4db14:	2136c904 	addi	r4,r4,-9436
   4db18:	1105883a 	add	r2,r2,r4
   4db1c:	10800017 	ldw	r2,0(r2)
   4db20:	1000683a 	jmp	r2
   4db24:	0004e1e8 	cmpgeui	zero,zero,4999
   4db28:	0004e4e8 	cmpgeui	zero,zero,5011
   4db2c:	0004e4e8 	cmpgeui	zero,zero,5011
   4db30:	0004e204 	movi	zero,5000
   4db34:	0004e4e8 	cmpgeui	zero,zero,5011
   4db38:	0004e4e8 	cmpgeui	zero,zero,5011
   4db3c:	0004e4e8 	cmpgeui	zero,zero,5011
   4db40:	0004e4e8 	cmpgeui	zero,zero,5011
   4db44:	0004e4e8 	cmpgeui	zero,zero,5011
   4db48:	0004e4e8 	cmpgeui	zero,zero,5011
   4db4c:	0004e40c 	andi	zero,zero,5008
   4db50:	0004e430 	cmpltui	zero,zero,5008
   4db54:	0004e4e8 	cmpgeui	zero,zero,5011
   4db58:	0004dd28 	cmpgeui	zero,zero,4980
   4db5c:	0004e444 	movi	zero,5009
   4db60:	0004e4e8 	cmpgeui	zero,zero,5011
   4db64:	0004e210 	cmplti	zero,zero,5000
   4db68:	0004e21c 	xori	zero,zero,5000
   4db6c:	0004e21c 	xori	zero,zero,5000
   4db70:	0004e21c 	xori	zero,zero,5000
   4db74:	0004e21c 	xori	zero,zero,5000
   4db78:	0004e21c 	xori	zero,zero,5000
   4db7c:	0004e21c 	xori	zero,zero,5000
   4db80:	0004e21c 	xori	zero,zero,5000
   4db84:	0004e21c 	xori	zero,zero,5000
   4db88:	0004e21c 	xori	zero,zero,5000
   4db8c:	0004e4e8 	cmpgeui	zero,zero,5011
   4db90:	0004e4e8 	cmpgeui	zero,zero,5011
   4db94:	0004e4e8 	cmpgeui	zero,zero,5011
   4db98:	0004e4e8 	cmpgeui	zero,zero,5011
   4db9c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dba0:	0004e4e8 	cmpgeui	zero,zero,5011
   4dba4:	0004e4e8 	cmpgeui	zero,zero,5011
   4dba8:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbac:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbb0:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbb4:	0004e25c 	xori	zero,zero,5001
   4dbb8:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbbc:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbc0:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbc4:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbc8:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbcc:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbd0:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbd4:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbd8:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbdc:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbe0:	0004e298 	cmpnei	zero,zero,5002
   4dbe4:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbe8:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbec:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbf0:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbf4:	0004e4e8 	cmpgeui	zero,zero,5011
   4dbf8:	0004e2f4 	movhi	zero,5003
   4dbfc:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc00:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc04:	0004e368 	cmpgeui	zero,zero,5005
   4dc08:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc0c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc10:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc14:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc18:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc1c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc20:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc24:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc28:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc2c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc30:	0004e110 	cmplti	zero,zero,4996
   4dc34:	0004e140 	call	4e14 <__alt_mem_MemoriaDados+0x4e14>
   4dc38:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc3c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc40:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc44:	0004e490 	cmplti	zero,zero,5010
   4dc48:	0004e140 	call	4e14 <__alt_mem_MemoriaDados+0x4e14>
   4dc4c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc50:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc54:	0004dfe8 	cmpgeui	zero,zero,4991
   4dc58:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc5c:	0004dffc 	xorhi	zero,zero,4991
   4dc60:	0004e034 	movhi	zero,4992
   4dc64:	0004dd34 	movhi	zero,4980
   4dc68:	0004dfdc 	xori	zero,zero,4991
   4dc6c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc70:	0004e3a8 	cmpgeui	zero,zero,5006
   4dc74:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc78:	0004e3f4 	movhi	zero,5007
   4dc7c:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc80:	0004e4e8 	cmpgeui	zero,zero,5011
   4dc84:	0004e0b8 	rdprs	zero,zero,4994
   4dc88:	42000204 	addi	r8,r8,8
   4dc8c:	d8c02417 	ldw	r3,144(sp)
   4dc90:	1c07883a 	add	r3,r3,r16
   4dc94:	d8c02415 	stw	r3,144(sp)
   4dc98:	003f8c06 	br	4dacc <_gp+0xffff0984>
   4dc9c:	d9402017 	ldw	r5,128(sp)
   4dca0:	d9002117 	ldw	r4,132(sp)
   4dca4:	00485480 	call	48548 <__swsetup_r>
   4dca8:	1003c11e 	bne	r2,zero,4ebb0 <___vfiprintf_internal_r+0x1224>
   4dcac:	d9402017 	ldw	r5,128(sp)
   4dcb0:	00c00284 	movi	r3,10
   4dcb4:	2880030b 	ldhu	r2,12(r5)
   4dcb8:	1080068c 	andi	r2,r2,26
   4dcbc:	10ff581e 	bne	r2,r3,4da20 <_gp+0xffff08d8>
   4dcc0:	d8c02017 	ldw	r3,128(sp)
   4dcc4:	1880038f 	ldh	r2,14(r3)
   4dcc8:	103f5516 	blt	r2,zero,4da20 <_gp+0xffff08d8>
   4dccc:	d9c02217 	ldw	r7,136(sp)
   4dcd0:	d9002117 	ldw	r4,132(sp)
   4dcd4:	a80d883a 	mov	r6,r21
   4dcd8:	180b883a 	mov	r5,r3
   4dcdc:	004eeb40 	call	4eeb4 <__sbprintf>
   4dce0:	dfc03517 	ldw	ra,212(sp)
   4dce4:	df003417 	ldw	fp,208(sp)
   4dce8:	ddc03317 	ldw	r23,204(sp)
   4dcec:	dd803217 	ldw	r22,200(sp)
   4dcf0:	dd403117 	ldw	r21,196(sp)
   4dcf4:	dd003017 	ldw	r20,192(sp)
   4dcf8:	dcc02f17 	ldw	r19,188(sp)
   4dcfc:	dc802e17 	ldw	r18,184(sp)
   4dd00:	dc402d17 	ldw	r17,180(sp)
   4dd04:	dc002c17 	ldw	r16,176(sp)
   4dd08:	dec03604 	addi	sp,sp,216
   4dd0c:	f800283a 	ret
   4dd10:	004a5540 	call	4a554 <__sinit>
   4dd14:	003f2f06 	br	4d9d4 <_gp+0xffff088c>
   4dd18:	d8c02517 	ldw	r3,148(sp)
   4dd1c:	d8802215 	stw	r2,136(sp)
   4dd20:	00c7c83a 	sub	r3,zero,r3
   4dd24:	d8c02515 	stw	r3,148(sp)
   4dd28:	8c400114 	ori	r17,r17,4
   4dd2c:	b0c00007 	ldb	r3,0(r22)
   4dd30:	003f7306 	br	4db00 <_gp+0xffff09b8>
   4dd34:	00800c04 	movi	r2,48
   4dd38:	d9402217 	ldw	r5,136(sp)
   4dd3c:	d8801d05 	stb	r2,116(sp)
   4dd40:	00801e04 	movi	r2,120
   4dd44:	d8801d45 	stb	r2,117(sp)
   4dd48:	d8001d85 	stb	zero,118(sp)
   4dd4c:	b811883a 	mov	r8,r23
   4dd50:	28c00104 	addi	r3,r5,4
   4dd54:	2cc00017 	ldw	r19,0(r5)
   4dd58:	0029883a 	mov	r20,zero
   4dd5c:	88800094 	ori	r2,r17,2
   4dd60:	80032516 	blt	r16,zero,4e9f8 <___vfiprintf_internal_r+0x106c>
   4dd64:	00bfdfc4 	movi	r2,-129
   4dd68:	88a2703a 	and	r17,r17,r2
   4dd6c:	d8c02215 	stw	r3,136(sp)
   4dd70:	8c400094 	ori	r17,r17,2
   4dd74:	98032a1e 	bne	r19,zero,4ea20 <___vfiprintf_internal_r+0x1094>
   4dd78:	00800174 	movhi	r2,5
   4dd7c:	108bbc04 	addi	r2,r2,12016
   4dd80:	d8802615 	stw	r2,152(sp)
   4dd84:	002b883a 	mov	r21,zero
   4dd88:	8001741e 	bne	r16,zero,4e35c <___vfiprintf_internal_r+0x9d0>
   4dd8c:	0021883a 	mov	r16,zero
   4dd90:	0029883a 	mov	r20,zero
   4dd94:	ddc01a04 	addi	r23,sp,104
   4dd98:	8027883a 	mov	r19,r16
   4dd9c:	8500010e 	bge	r16,r20,4dda4 <___vfiprintf_internal_r+0x418>
   4dda0:	a027883a 	mov	r19,r20
   4dda4:	ad403fcc 	andi	r21,r21,255
   4dda8:	ad40201c 	xori	r21,r21,128
   4ddac:	ad7fe004 	addi	r21,r21,-128
   4ddb0:	a8000126 	beq	r21,zero,4ddb8 <___vfiprintf_internal_r+0x42c>
   4ddb4:	9cc00044 	addi	r19,r19,1
   4ddb8:	89c0008c 	andi	r7,r17,2
   4ddbc:	38000126 	beq	r7,zero,4ddc4 <___vfiprintf_internal_r+0x438>
   4ddc0:	9cc00084 	addi	r19,r19,2
   4ddc4:	88c0210c 	andi	r3,r17,132
   4ddc8:	1801dd1e 	bne	r3,zero,4e540 <___vfiprintf_internal_r+0xbb4>
   4ddcc:	d9402517 	ldw	r5,148(sp)
   4ddd0:	2cebc83a 	sub	r21,r5,r19
   4ddd4:	0541da0e 	bge	zero,r21,4e540 <___vfiprintf_internal_r+0xbb4>
   4ddd8:	07000404 	movi	fp,16
   4dddc:	d8801c17 	ldw	r2,112(sp)
   4dde0:	e543be0e 	bge	fp,r21,4ecdc <___vfiprintf_internal_r+0x1350>
   4dde4:	01400174 	movhi	r5,5
   4dde8:	294c2104 	addi	r5,r5,12420
   4ddec:	dc002715 	stw	r16,156(sp)
   4ddf0:	d9801b17 	ldw	r6,108(sp)
   4ddf4:	a821883a 	mov	r16,r21
   4ddf8:	d9402315 	stw	r5,140(sp)
   4ddfc:	028001c4 	movi	r10,7
   4de00:	d9c02915 	stw	r7,164(sp)
   4de04:	182b883a 	mov	r21,r3
   4de08:	00000506 	br	4de20 <___vfiprintf_internal_r+0x494>
   4de0c:	31000084 	addi	r4,r6,2
   4de10:	42000204 	addi	r8,r8,8
   4de14:	180d883a 	mov	r6,r3
   4de18:	843ffc04 	addi	r16,r16,-16
   4de1c:	e4000f0e 	bge	fp,r16,4de5c <___vfiprintf_internal_r+0x4d0>
   4de20:	01000174 	movhi	r4,5
   4de24:	10800404 	addi	r2,r2,16
   4de28:	30c00044 	addi	r3,r6,1
   4de2c:	210c2104 	addi	r4,r4,12420
   4de30:	41000015 	stw	r4,0(r8)
   4de34:	47000115 	stw	fp,4(r8)
   4de38:	d8801c15 	stw	r2,112(sp)
   4de3c:	d8c01b15 	stw	r3,108(sp)
   4de40:	50fff20e 	bge	r10,r3,4de0c <_gp+0xffff0cc4>
   4de44:	1001b21e 	bne	r2,zero,4e510 <___vfiprintf_internal_r+0xb84>
   4de48:	843ffc04 	addi	r16,r16,-16
   4de4c:	000d883a 	mov	r6,zero
   4de50:	01000044 	movi	r4,1
   4de54:	d811883a 	mov	r8,sp
   4de58:	e43ff116 	blt	fp,r16,4de20 <_gp+0xffff0cd8>
   4de5c:	a807883a 	mov	r3,r21
   4de60:	d9c02917 	ldw	r7,164(sp)
   4de64:	802b883a 	mov	r21,r16
   4de68:	dc002717 	ldw	r16,156(sp)
   4de6c:	d9402317 	ldw	r5,140(sp)
   4de70:	a885883a 	add	r2,r21,r2
   4de74:	45400115 	stw	r21,4(r8)
   4de78:	41400015 	stw	r5,0(r8)
   4de7c:	d8801c15 	stw	r2,112(sp)
   4de80:	d9001b15 	stw	r4,108(sp)
   4de84:	014001c4 	movi	r5,7
   4de88:	29026216 	blt	r5,r4,4e814 <___vfiprintf_internal_r+0xe88>
   4de8c:	d9801d87 	ldb	r6,118(sp)
   4de90:	42000204 	addi	r8,r8,8
   4de94:	21400044 	addi	r5,r4,1
   4de98:	3001ae1e 	bne	r6,zero,4e554 <___vfiprintf_internal_r+0xbc8>
   4de9c:	3801bb26 	beq	r7,zero,4e58c <___vfiprintf_internal_r+0xc00>
   4dea0:	d9001d04 	addi	r4,sp,116
   4dea4:	10800084 	addi	r2,r2,2
   4dea8:	41000015 	stw	r4,0(r8)
   4deac:	01000084 	movi	r4,2
   4deb0:	41000115 	stw	r4,4(r8)
   4deb4:	d8801c15 	stw	r2,112(sp)
   4deb8:	d9401b15 	stw	r5,108(sp)
   4debc:	010001c4 	movi	r4,7
   4dec0:	2142680e 	bge	r4,r5,4e864 <___vfiprintf_internal_r+0xed8>
   4dec4:	1002b11e 	bne	r2,zero,4e98c <___vfiprintf_internal_r+0x1000>
   4dec8:	01802004 	movi	r6,128
   4decc:	01400044 	movi	r5,1
   4ded0:	0009883a 	mov	r4,zero
   4ded4:	d811883a 	mov	r8,sp
   4ded8:	1981ae1e 	bne	r3,r6,4e594 <___vfiprintf_internal_r+0xc08>
   4dedc:	d8c02517 	ldw	r3,148(sp)
   4dee0:	1cf9c83a 	sub	fp,r3,r19
   4dee4:	0701ab0e 	bge	zero,fp,4e594 <___vfiprintf_internal_r+0xc08>
   4dee8:	05400404 	movi	r21,16
   4deec:	af03a90e 	bge	r21,fp,4ed94 <___vfiprintf_internal_r+0x1408>
   4def0:	01400174 	movhi	r5,5
   4def4:	294c1d04 	addi	r5,r5,12404
   4def8:	d9402315 	stw	r5,140(sp)
   4defc:	01c001c4 	movi	r7,7
   4df00:	00000506 	br	4df18 <___vfiprintf_internal_r+0x58c>
   4df04:	21800084 	addi	r6,r4,2
   4df08:	42000204 	addi	r8,r8,8
   4df0c:	1809883a 	mov	r4,r3
   4df10:	e73ffc04 	addi	fp,fp,-16
   4df14:	af000d0e 	bge	r21,fp,4df4c <___vfiprintf_internal_r+0x5c0>
   4df18:	10800404 	addi	r2,r2,16
   4df1c:	20c00044 	addi	r3,r4,1
   4df20:	44800015 	stw	r18,0(r8)
   4df24:	45400115 	stw	r21,4(r8)
   4df28:	d8801c15 	stw	r2,112(sp)
   4df2c:	d8c01b15 	stw	r3,108(sp)
   4df30:	38fff40e 	bge	r7,r3,4df04 <_gp+0xffff0dbc>
   4df34:	10022b1e 	bne	r2,zero,4e7e4 <___vfiprintf_internal_r+0xe58>
   4df38:	e73ffc04 	addi	fp,fp,-16
   4df3c:	01800044 	movi	r6,1
   4df40:	0009883a 	mov	r4,zero
   4df44:	d811883a 	mov	r8,sp
   4df48:	af3ff316 	blt	r21,fp,4df18 <_gp+0xffff0dd0>
   4df4c:	d8c02317 	ldw	r3,140(sp)
   4df50:	1705883a 	add	r2,r2,fp
   4df54:	47000115 	stw	fp,4(r8)
   4df58:	40c00015 	stw	r3,0(r8)
   4df5c:	d8801c15 	stw	r2,112(sp)
   4df60:	d9801b15 	stw	r6,108(sp)
   4df64:	00c001c4 	movi	r3,7
   4df68:	19829416 	blt	r3,r6,4e9bc <___vfiprintf_internal_r+0x1030>
   4df6c:	8521c83a 	sub	r16,r16,r20
   4df70:	42000204 	addi	r8,r8,8
   4df74:	31400044 	addi	r5,r6,1
   4df78:	3009883a 	mov	r4,r6
   4df7c:	04018716 	blt	zero,r16,4e59c <___vfiprintf_internal_r+0xc10>
   4df80:	a085883a 	add	r2,r20,r2
   4df84:	45c00015 	stw	r23,0(r8)
   4df88:	45000115 	stw	r20,4(r8)
   4df8c:	d8801c15 	stw	r2,112(sp)
   4df90:	d9401b15 	stw	r5,108(sp)
   4df94:	00c001c4 	movi	r3,7
   4df98:	1941c20e 	bge	r3,r5,4e6a4 <___vfiprintf_internal_r+0xd18>
   4df9c:	1002531e 	bne	r2,zero,4e8ec <___vfiprintf_internal_r+0xf60>
   4dfa0:	d8001b15 	stw	zero,108(sp)
   4dfa4:	8c40010c 	andi	r17,r17,4
   4dfa8:	88023226 	beq	r17,zero,4e874 <___vfiprintf_internal_r+0xee8>
   4dfac:	d9002517 	ldw	r4,148(sp)
   4dfb0:	24e3c83a 	sub	r17,r4,r19
   4dfb4:	04432916 	blt	zero,r17,4ec5c <___vfiprintf_internal_r+0x12d0>
   4dfb8:	d8802517 	ldw	r2,148(sp)
   4dfbc:	14c0010e 	bge	r2,r19,4dfc4 <___vfiprintf_internal_r+0x638>
   4dfc0:	9805883a 	mov	r2,r19
   4dfc4:	d8c02417 	ldw	r3,144(sp)
   4dfc8:	1887883a 	add	r3,r3,r2
   4dfcc:	d8c02415 	stw	r3,144(sp)
   4dfd0:	d8001b15 	stw	zero,108(sp)
   4dfd4:	d811883a 	mov	r8,sp
   4dfd8:	003ea006 	br	4da5c <_gp+0xffff0914>
   4dfdc:	8c400814 	ori	r17,r17,32
   4dfe0:	b0c00007 	ldb	r3,0(r22)
   4dfe4:	003ec606 	br	4db00 <_gp+0xffff09b8>
   4dfe8:	b0c00007 	ldb	r3,0(r22)
   4dfec:	00801b04 	movi	r2,108
   4dff0:	18832026 	beq	r3,r2,4ec74 <___vfiprintf_internal_r+0x12e8>
   4dff4:	8c400414 	ori	r17,r17,16
   4dff8:	003ec106 	br	4db00 <_gp+0xffff09b8>
   4dffc:	9cc03fcc 	andi	r19,r19,255
   4e000:	b811883a 	mov	r8,r23
   4e004:	9803981e 	bne	r19,zero,4ee68 <___vfiprintf_internal_r+0x14dc>
   4e008:	8880080c 	andi	r2,r17,32
   4e00c:	1002be26 	beq	r2,zero,4eb08 <___vfiprintf_internal_r+0x117c>
   4e010:	d9002217 	ldw	r4,136(sp)
   4e014:	d9402417 	ldw	r5,144(sp)
   4e018:	20800017 	ldw	r2,0(r4)
   4e01c:	2807d7fa 	srai	r3,r5,31
   4e020:	21000104 	addi	r4,r4,4
   4e024:	d9002215 	stw	r4,136(sp)
   4e028:	11400015 	stw	r5,0(r2)
   4e02c:	10c00115 	stw	r3,4(r2)
   4e030:	003e8a06 	br	4da5c <_gp+0xffff0914>
   4e034:	9cc03fcc 	andi	r19,r19,255
   4e038:	b811883a 	mov	r8,r23
   4e03c:	9803871e 	bne	r19,zero,4ee5c <___vfiprintf_internal_r+0x14d0>
   4e040:	8880080c 	andi	r2,r17,32
   4e044:	10009a26 	beq	r2,zero,4e2b0 <___vfiprintf_internal_r+0x924>
   4e048:	d9002217 	ldw	r4,136(sp)
   4e04c:	d8001d85 	stb	zero,118(sp)
   4e050:	20800204 	addi	r2,r4,8
   4e054:	24c00017 	ldw	r19,0(r4)
   4e058:	25000117 	ldw	r20,4(r4)
   4e05c:	8002a416 	blt	r16,zero,4eaf0 <___vfiprintf_internal_r+0x1164>
   4e060:	013fdfc4 	movi	r4,-129
   4e064:	9d06b03a 	or	r3,r19,r20
   4e068:	d8802215 	stw	r2,136(sp)
   4e06c:	8922703a 	and	r17,r17,r4
   4e070:	18009b26 	beq	r3,zero,4e2e0 <___vfiprintf_internal_r+0x954>
   4e074:	002b883a 	mov	r21,zero
   4e078:	ddc01a04 	addi	r23,sp,104
   4e07c:	9806d0fa 	srli	r3,r19,3
   4e080:	a008977a 	slli	r4,r20,29
   4e084:	a028d0fa 	srli	r20,r20,3
   4e088:	9cc001cc 	andi	r19,r19,7
   4e08c:	98800c04 	addi	r2,r19,48
   4e090:	bdffffc4 	addi	r23,r23,-1
   4e094:	20e6b03a 	or	r19,r4,r3
   4e098:	b8800005 	stb	r2,0(r23)
   4e09c:	9d06b03a 	or	r3,r19,r20
   4e0a0:	183ff61e 	bne	r3,zero,4e07c <_gp+0xffff0f34>
   4e0a4:	88c0004c 	andi	r3,r17,1
   4e0a8:	18021f1e 	bne	r3,zero,4e928 <___vfiprintf_internal_r+0xf9c>
   4e0ac:	d9401e17 	ldw	r5,120(sp)
   4e0b0:	2de9c83a 	sub	r20,r5,r23
   4e0b4:	003f3806 	br	4dd98 <_gp+0xffff0c50>
   4e0b8:	9cc03fcc 	andi	r19,r19,255
   4e0bc:	b811883a 	mov	r8,r23
   4e0c0:	98034f1e 	bne	r19,zero,4ee00 <___vfiprintf_internal_r+0x1474>
   4e0c4:	00800174 	movhi	r2,5
   4e0c8:	108bbc04 	addi	r2,r2,12016
   4e0cc:	d8802615 	stw	r2,152(sp)
   4e0d0:	8880080c 	andi	r2,r17,32
   4e0d4:	1000ac26 	beq	r2,zero,4e388 <___vfiprintf_internal_r+0x9fc>
   4e0d8:	d9002217 	ldw	r4,136(sp)
   4e0dc:	24c00017 	ldw	r19,0(r4)
   4e0e0:	25000117 	ldw	r20,4(r4)
   4e0e4:	21000204 	addi	r4,r4,8
   4e0e8:	d9002215 	stw	r4,136(sp)
   4e0ec:	8880004c 	andi	r2,r17,1
   4e0f0:	1001e726 	beq	r2,zero,4e890 <___vfiprintf_internal_r+0xf04>
   4e0f4:	9d04b03a 	or	r2,r19,r20
   4e0f8:	10025c1e 	bne	r2,zero,4ea6c <___vfiprintf_internal_r+0x10e0>
   4e0fc:	d8001d85 	stb	zero,118(sp)
   4e100:	80024416 	blt	r16,zero,4ea14 <___vfiprintf_internal_r+0x1088>
   4e104:	00bfdfc4 	movi	r2,-129
   4e108:	88a2703a 	and	r17,r17,r2
   4e10c:	003f1d06 	br	4dd84 <_gp+0xffff0c3c>
   4e110:	d8c02217 	ldw	r3,136(sp)
   4e114:	04c00044 	movi	r19,1
   4e118:	b811883a 	mov	r8,r23
   4e11c:	18800017 	ldw	r2,0(r3)
   4e120:	18c00104 	addi	r3,r3,4
   4e124:	d8001d85 	stb	zero,118(sp)
   4e128:	d8801005 	stb	r2,64(sp)
   4e12c:	d8c02215 	stw	r3,136(sp)
   4e130:	9829883a 	mov	r20,r19
   4e134:	ddc01004 	addi	r23,sp,64
   4e138:	0021883a 	mov	r16,zero
   4e13c:	003f1e06 	br	4ddb8 <_gp+0xffff0c70>
   4e140:	9cc03fcc 	andi	r19,r19,255
   4e144:	b811883a 	mov	r8,r23
   4e148:	9803331e 	bne	r19,zero,4ee18 <___vfiprintf_internal_r+0x148c>
   4e14c:	8880080c 	andi	r2,r17,32
   4e150:	10004826 	beq	r2,zero,4e274 <___vfiprintf_internal_r+0x8e8>
   4e154:	d9002217 	ldw	r4,136(sp)
   4e158:	20800117 	ldw	r2,4(r4)
   4e15c:	24c00017 	ldw	r19,0(r4)
   4e160:	21000204 	addi	r4,r4,8
   4e164:	d9002215 	stw	r4,136(sp)
   4e168:	1029883a 	mov	r20,r2
   4e16c:	10024c16 	blt	r2,zero,4eaa0 <___vfiprintf_internal_r+0x1114>
   4e170:	dd401d83 	ldbu	r21,118(sp)
   4e174:	80007116 	blt	r16,zero,4e33c <___vfiprintf_internal_r+0x9b0>
   4e178:	00ffdfc4 	movi	r3,-129
   4e17c:	9d04b03a 	or	r2,r19,r20
   4e180:	88e2703a 	and	r17,r17,r3
   4e184:	1000d126 	beq	r2,zero,4e4cc <___vfiprintf_internal_r+0xb40>
   4e188:	a0023526 	beq	r20,zero,4ea60 <___vfiprintf_internal_r+0x10d4>
   4e18c:	ddc01a04 	addi	r23,sp,104
   4e190:	4039883a 	mov	fp,r8
   4e194:	9809883a 	mov	r4,r19
   4e198:	a00b883a 	mov	r5,r20
   4e19c:	01800284 	movi	r6,10
   4e1a0:	000f883a 	mov	r7,zero
   4e1a4:	004ffc40 	call	4ffc4 <__umoddi3>
   4e1a8:	10800c04 	addi	r2,r2,48
   4e1ac:	bdffffc4 	addi	r23,r23,-1
   4e1b0:	9809883a 	mov	r4,r19
   4e1b4:	a00b883a 	mov	r5,r20
   4e1b8:	b8800005 	stb	r2,0(r23)
   4e1bc:	01800284 	movi	r6,10
   4e1c0:	000f883a 	mov	r7,zero
   4e1c4:	004f9c80 	call	4f9c8 <__udivdi3>
   4e1c8:	1027883a 	mov	r19,r2
   4e1cc:	10c4b03a 	or	r2,r2,r3
   4e1d0:	1829883a 	mov	r20,r3
   4e1d4:	103fef1e 	bne	r2,zero,4e194 <_gp+0xffff104c>
   4e1d8:	d9001e17 	ldw	r4,120(sp)
   4e1dc:	e011883a 	mov	r8,fp
   4e1e0:	25e9c83a 	sub	r20,r4,r23
   4e1e4:	003eec06 	br	4dd98 <_gp+0xffff0c50>
   4e1e8:	d8802307 	ldb	r2,140(sp)
   4e1ec:	1002361e 	bne	r2,zero,4eac8 <___vfiprintf_internal_r+0x113c>
   4e1f0:	00c00804 	movi	r3,32
   4e1f4:	d8c02305 	stb	r3,140(sp)
   4e1f8:	04c00044 	movi	r19,1
   4e1fc:	b0c00007 	ldb	r3,0(r22)
   4e200:	003e3f06 	br	4db00 <_gp+0xffff09b8>
   4e204:	8c400054 	ori	r17,r17,1
   4e208:	b0c00007 	ldb	r3,0(r22)
   4e20c:	003e3c06 	br	4db00 <_gp+0xffff09b8>
   4e210:	8c402014 	ori	r17,r17,128
   4e214:	b0c00007 	ldb	r3,0(r22)
   4e218:	003e3906 	br	4db00 <_gp+0xffff09b8>
   4e21c:	dc002715 	stw	r16,156(sp)
   4e220:	d8002515 	stw	zero,148(sp)
   4e224:	1f3ff404 	addi	fp,r3,-48
   4e228:	0009883a 	mov	r4,zero
   4e22c:	b021883a 	mov	r16,r22
   4e230:	01400284 	movi	r5,10
   4e234:	0041f400 	call	41f40 <__mulsi3>
   4e238:	80c00007 	ldb	r3,0(r16)
   4e23c:	e089883a 	add	r4,fp,r2
   4e240:	b5800044 	addi	r22,r22,1
   4e244:	1f3ff404 	addi	fp,r3,-48
   4e248:	b021883a 	mov	r16,r22
   4e24c:	af3ff82e 	bgeu	r21,fp,4e230 <_gp+0xffff10e8>
   4e250:	d9002515 	stw	r4,148(sp)
   4e254:	dc002717 	ldw	r16,156(sp)
   4e258:	003e2a06 	br	4db04 <_gp+0xffff09bc>
   4e25c:	9cc03fcc 	andi	r19,r19,255
   4e260:	b811883a 	mov	r8,r23
   4e264:	9802e91e 	bne	r19,zero,4ee0c <___vfiprintf_internal_r+0x1480>
   4e268:	8c400414 	ori	r17,r17,16
   4e26c:	8880080c 	andi	r2,r17,32
   4e270:	103fb81e 	bne	r2,zero,4e154 <_gp+0xffff100c>
   4e274:	8880040c 	andi	r2,r17,16
   4e278:	10022e26 	beq	r2,zero,4eb34 <___vfiprintf_internal_r+0x11a8>
   4e27c:	d9402217 	ldw	r5,136(sp)
   4e280:	2cc00017 	ldw	r19,0(r5)
   4e284:	29400104 	addi	r5,r5,4
   4e288:	d9402215 	stw	r5,136(sp)
   4e28c:	9829d7fa 	srai	r20,r19,31
   4e290:	a005883a 	mov	r2,r20
   4e294:	003fb506 	br	4e16c <_gp+0xffff1024>
   4e298:	9cc03fcc 	andi	r19,r19,255
   4e29c:	b811883a 	mov	r8,r23
   4e2a0:	9802fa1e 	bne	r19,zero,4ee8c <___vfiprintf_internal_r+0x1500>
   4e2a4:	8c400414 	ori	r17,r17,16
   4e2a8:	8880080c 	andi	r2,r17,32
   4e2ac:	103f661e 	bne	r2,zero,4e048 <_gp+0xffff0f00>
   4e2b0:	8880040c 	andi	r2,r17,16
   4e2b4:	10020626 	beq	r2,zero,4ead0 <___vfiprintf_internal_r+0x1144>
   4e2b8:	d9402217 	ldw	r5,136(sp)
   4e2bc:	d8001d85 	stb	zero,118(sp)
   4e2c0:	0029883a 	mov	r20,zero
   4e2c4:	28800104 	addi	r2,r5,4
   4e2c8:	2cc00017 	ldw	r19,0(r5)
   4e2cc:	80020816 	blt	r16,zero,4eaf0 <___vfiprintf_internal_r+0x1164>
   4e2d0:	00ffdfc4 	movi	r3,-129
   4e2d4:	d8802215 	stw	r2,136(sp)
   4e2d8:	88e2703a 	and	r17,r17,r3
   4e2dc:	983f651e 	bne	r19,zero,4e074 <_gp+0xffff0f2c>
   4e2e0:	002b883a 	mov	r21,zero
   4e2e4:	8002cf26 	beq	r16,zero,4ee24 <___vfiprintf_internal_r+0x1498>
   4e2e8:	0027883a 	mov	r19,zero
   4e2ec:	0029883a 	mov	r20,zero
   4e2f0:	003f6106 	br	4e078 <_gp+0xffff0f30>
   4e2f4:	9cc03fcc 	andi	r19,r19,255
   4e2f8:	b811883a 	mov	r8,r23
   4e2fc:	9802e01e 	bne	r19,zero,4ee80 <___vfiprintf_internal_r+0x14f4>
   4e300:	8c400414 	ori	r17,r17,16
   4e304:	8880080c 	andi	r2,r17,32
   4e308:	1000641e 	bne	r2,zero,4e49c <___vfiprintf_internal_r+0xb10>
   4e30c:	8880040c 	andi	r2,r17,16
   4e310:	1001c81e 	bne	r2,zero,4ea34 <___vfiprintf_internal_r+0x10a8>
   4e314:	8880100c 	andi	r2,r17,64
   4e318:	d8001d85 	stb	zero,118(sp)
   4e31c:	1002281e 	bne	r2,zero,4ebc0 <___vfiprintf_internal_r+0x1234>
   4e320:	d9002217 	ldw	r4,136(sp)
   4e324:	0029883a 	mov	r20,zero
   4e328:	20800104 	addi	r2,r4,4
   4e32c:	24c00017 	ldw	r19,0(r4)
   4e330:	8001c60e 	bge	r16,zero,4ea4c <___vfiprintf_internal_r+0x10c0>
   4e334:	d8802215 	stw	r2,136(sp)
   4e338:	002b883a 	mov	r21,zero
   4e33c:	9d04b03a 	or	r2,r19,r20
   4e340:	103f911e 	bne	r2,zero,4e188 <_gp+0xffff1040>
   4e344:	00800044 	movi	r2,1
   4e348:	10803fcc 	andi	r2,r2,255
   4e34c:	00c00044 	movi	r3,1
   4e350:	10c05f26 	beq	r2,r3,4e4d0 <___vfiprintf_internal_r+0xb44>
   4e354:	00c00084 	movi	r3,2
   4e358:	10ffe31e 	bne	r2,r3,4e2e8 <_gp+0xffff11a0>
   4e35c:	0027883a 	mov	r19,zero
   4e360:	0029883a 	mov	r20,zero
   4e364:	00015106 	br	4e8ac <___vfiprintf_internal_r+0xf20>
   4e368:	9cc03fcc 	andi	r19,r19,255
   4e36c:	b811883a 	mov	r8,r23
   4e370:	9802c01e 	bne	r19,zero,4ee74 <___vfiprintf_internal_r+0x14e8>
   4e374:	01400174 	movhi	r5,5
   4e378:	294bb704 	addi	r5,r5,11996
   4e37c:	d9402615 	stw	r5,152(sp)
   4e380:	8880080c 	andi	r2,r17,32
   4e384:	103f541e 	bne	r2,zero,4e0d8 <_gp+0xffff0f90>
   4e388:	8880040c 	andi	r2,r17,16
   4e38c:	1001f226 	beq	r2,zero,4eb58 <___vfiprintf_internal_r+0x11cc>
   4e390:	d9402217 	ldw	r5,136(sp)
   4e394:	0029883a 	mov	r20,zero
   4e398:	2cc00017 	ldw	r19,0(r5)
   4e39c:	29400104 	addi	r5,r5,4
   4e3a0:	d9402215 	stw	r5,136(sp)
   4e3a4:	003f5106 	br	4e0ec <_gp+0xffff0fa4>
   4e3a8:	d8c02217 	ldw	r3,136(sp)
   4e3ac:	b811883a 	mov	r8,r23
   4e3b0:	d8001d85 	stb	zero,118(sp)
   4e3b4:	1dc00017 	ldw	r23,0(r3)
   4e3b8:	1f000104 	addi	fp,r3,4
   4e3bc:	b8025926 	beq	r23,zero,4ed24 <___vfiprintf_internal_r+0x1398>
   4e3c0:	80023316 	blt	r16,zero,4ec90 <___vfiprintf_internal_r+0x1304>
   4e3c4:	800d883a 	mov	r6,r16
   4e3c8:	000b883a 	mov	r5,zero
   4e3cc:	b809883a 	mov	r4,r23
   4e3d0:	da002a15 	stw	r8,168(sp)
   4e3d4:	004bacc0 	call	4bacc <memchr>
   4e3d8:	da002a17 	ldw	r8,168(sp)
   4e3dc:	10026826 	beq	r2,zero,4ed80 <___vfiprintf_internal_r+0x13f4>
   4e3e0:	15e9c83a 	sub	r20,r2,r23
   4e3e4:	dd401d83 	ldbu	r21,118(sp)
   4e3e8:	df002215 	stw	fp,136(sp)
   4e3ec:	0021883a 	mov	r16,zero
   4e3f0:	003e6906 	br	4dd98 <_gp+0xffff0c50>
   4e3f4:	9cc03fcc 	andi	r19,r19,255
   4e3f8:	b811883a 	mov	r8,r23
   4e3fc:	983fc126 	beq	r19,zero,4e304 <_gp+0xffff11bc>
   4e400:	d8c02303 	ldbu	r3,140(sp)
   4e404:	d8c01d85 	stb	r3,118(sp)
   4e408:	003fbe06 	br	4e304 <_gp+0xffff11bc>
   4e40c:	d9002217 	ldw	r4,136(sp)
   4e410:	d9402217 	ldw	r5,136(sp)
   4e414:	21000017 	ldw	r4,0(r4)
   4e418:	28800104 	addi	r2,r5,4
   4e41c:	d9002515 	stw	r4,148(sp)
   4e420:	203e3d16 	blt	r4,zero,4dd18 <_gp+0xffff0bd0>
   4e424:	d8802215 	stw	r2,136(sp)
   4e428:	b0c00007 	ldb	r3,0(r22)
   4e42c:	003db406 	br	4db00 <_gp+0xffff09b8>
   4e430:	00c00ac4 	movi	r3,43
   4e434:	d8c02305 	stb	r3,140(sp)
   4e438:	04c00044 	movi	r19,1
   4e43c:	b0c00007 	ldb	r3,0(r22)
   4e440:	003daf06 	br	4db00 <_gp+0xffff09b8>
   4e444:	b0c00007 	ldb	r3,0(r22)
   4e448:	01000a84 	movi	r4,42
   4e44c:	b4000044 	addi	r16,r22,1
   4e450:	19025e26 	beq	r3,r4,4edcc <___vfiprintf_internal_r+0x1440>
   4e454:	1f3ff404 	addi	fp,r3,-48
   4e458:	0009883a 	mov	r4,zero
   4e45c:	af025236 	bltu	r21,fp,4eda8 <___vfiprintf_internal_r+0x141c>
   4e460:	01400284 	movi	r5,10
   4e464:	0041f400 	call	41f40 <__mulsi3>
   4e468:	80c00007 	ldb	r3,0(r16)
   4e46c:	1709883a 	add	r4,r2,fp
   4e470:	85800044 	addi	r22,r16,1
   4e474:	1f3ff404 	addi	fp,r3,-48
   4e478:	b021883a 	mov	r16,r22
   4e47c:	af3ff82e 	bgeu	r21,fp,4e460 <_gp+0xffff1318>
   4e480:	2021883a 	mov	r16,r4
   4e484:	203d9f0e 	bge	r4,zero,4db04 <_gp+0xffff09bc>
   4e488:	043fffc4 	movi	r16,-1
   4e48c:	003d9d06 	br	4db04 <_gp+0xffff09bc>
   4e490:	8c401014 	ori	r17,r17,64
   4e494:	b0c00007 	ldb	r3,0(r22)
   4e498:	003d9906 	br	4db00 <_gp+0xffff09b8>
   4e49c:	d9002217 	ldw	r4,136(sp)
   4e4a0:	d8001d85 	stb	zero,118(sp)
   4e4a4:	20c00204 	addi	r3,r4,8
   4e4a8:	24c00017 	ldw	r19,0(r4)
   4e4ac:	25000117 	ldw	r20,4(r4)
   4e4b0:	8001e716 	blt	r16,zero,4ec50 <___vfiprintf_internal_r+0x12c4>
   4e4b4:	013fdfc4 	movi	r4,-129
   4e4b8:	9d04b03a 	or	r2,r19,r20
   4e4bc:	d8c02215 	stw	r3,136(sp)
   4e4c0:	8922703a 	and	r17,r17,r4
   4e4c4:	002b883a 	mov	r21,zero
   4e4c8:	103f2f1e 	bne	r2,zero,4e188 <_gp+0xffff1040>
   4e4cc:	803e2f26 	beq	r16,zero,4dd8c <_gp+0xffff0c44>
   4e4d0:	0027883a 	mov	r19,zero
   4e4d4:	9cc00c04 	addi	r19,r19,48
   4e4d8:	dcc019c5 	stb	r19,103(sp)
   4e4dc:	dd002817 	ldw	r20,160(sp)
   4e4e0:	ddc019c4 	addi	r23,sp,103
   4e4e4:	003e2c06 	br	4dd98 <_gp+0xffff0c50>
   4e4e8:	9cc03fcc 	andi	r19,r19,255
   4e4ec:	b811883a 	mov	r8,r23
   4e4f0:	9802571e 	bne	r19,zero,4ee50 <___vfiprintf_internal_r+0x14c4>
   4e4f4:	18005726 	beq	r3,zero,4e654 <___vfiprintf_internal_r+0xcc8>
   4e4f8:	04c00044 	movi	r19,1
   4e4fc:	d8c01005 	stb	r3,64(sp)
   4e500:	d8001d85 	stb	zero,118(sp)
   4e504:	9829883a 	mov	r20,r19
   4e508:	ddc01004 	addi	r23,sp,64
   4e50c:	003f0a06 	br	4e138 <_gp+0xffff0ff0>
   4e510:	d9402017 	ldw	r5,128(sp)
   4e514:	d9002117 	ldw	r4,132(sp)
   4e518:	d9801a04 	addi	r6,sp,104
   4e51c:	da802a15 	stw	r10,168(sp)
   4e520:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e524:	da802a17 	ldw	r10,168(sp)
   4e528:	1000501e 	bne	r2,zero,4e66c <___vfiprintf_internal_r+0xce0>
   4e52c:	d9801b17 	ldw	r6,108(sp)
   4e530:	d8801c17 	ldw	r2,112(sp)
   4e534:	d811883a 	mov	r8,sp
   4e538:	31000044 	addi	r4,r6,1
   4e53c:	003e3606 	br	4de18 <_gp+0xffff0cd0>
   4e540:	d9001b17 	ldw	r4,108(sp)
   4e544:	d8801c17 	ldw	r2,112(sp)
   4e548:	21400044 	addi	r5,r4,1
   4e54c:	d9801d87 	ldb	r6,118(sp)
   4e550:	303e5226 	beq	r6,zero,4de9c <_gp+0xffff0d54>
   4e554:	01800044 	movi	r6,1
   4e558:	d9001d84 	addi	r4,sp,118
   4e55c:	1185883a 	add	r2,r2,r6
   4e560:	41000015 	stw	r4,0(r8)
   4e564:	41800115 	stw	r6,4(r8)
   4e568:	d8801c15 	stw	r2,112(sp)
   4e56c:	d9401b15 	stw	r5,108(sp)
   4e570:	010001c4 	movi	r4,7
   4e574:	2140b00e 	bge	r4,r5,4e838 <___vfiprintf_internal_r+0xeac>
   4e578:	1000f61e 	bne	r2,zero,4e954 <___vfiprintf_internal_r+0xfc8>
   4e57c:	3800b31e 	bne	r7,zero,4e84c <___vfiprintf_internal_r+0xec0>
   4e580:	0009883a 	mov	r4,zero
   4e584:	300b883a 	mov	r5,r6
   4e588:	d811883a 	mov	r8,sp
   4e58c:	01802004 	movi	r6,128
   4e590:	19be5226 	beq	r3,r6,4dedc <_gp+0xffff0d94>
   4e594:	8521c83a 	sub	r16,r16,r20
   4e598:	043e790e 	bge	zero,r16,4df80 <_gp+0xffff0e38>
   4e59c:	05400404 	movi	r21,16
   4e5a0:	ac01b00e 	bge	r21,r16,4ec64 <___vfiprintf_internal_r+0x12d8>
   4e5a4:	01400174 	movhi	r5,5
   4e5a8:	294c1d04 	addi	r5,r5,12404
   4e5ac:	d9402315 	stw	r5,140(sp)
   4e5b0:	070001c4 	movi	fp,7
   4e5b4:	00000506 	br	4e5cc <___vfiprintf_internal_r+0xc40>
   4e5b8:	21400084 	addi	r5,r4,2
   4e5bc:	42000204 	addi	r8,r8,8
   4e5c0:	1809883a 	mov	r4,r3
   4e5c4:	843ffc04 	addi	r16,r16,-16
   4e5c8:	ac000d0e 	bge	r21,r16,4e600 <___vfiprintf_internal_r+0xc74>
   4e5cc:	10800404 	addi	r2,r2,16
   4e5d0:	20c00044 	addi	r3,r4,1
   4e5d4:	44800015 	stw	r18,0(r8)
   4e5d8:	45400115 	stw	r21,4(r8)
   4e5dc:	d8801c15 	stw	r2,112(sp)
   4e5e0:	d8c01b15 	stw	r3,108(sp)
   4e5e4:	e0fff40e 	bge	fp,r3,4e5b8 <_gp+0xffff1470>
   4e5e8:	1000101e 	bne	r2,zero,4e62c <___vfiprintf_internal_r+0xca0>
   4e5ec:	843ffc04 	addi	r16,r16,-16
   4e5f0:	01400044 	movi	r5,1
   4e5f4:	0009883a 	mov	r4,zero
   4e5f8:	d811883a 	mov	r8,sp
   4e5fc:	ac3ff316 	blt	r21,r16,4e5cc <_gp+0xffff1484>
   4e600:	d8c02317 	ldw	r3,140(sp)
   4e604:	1405883a 	add	r2,r2,r16
   4e608:	44000115 	stw	r16,4(r8)
   4e60c:	40c00015 	stw	r3,0(r8)
   4e610:	d8801c15 	stw	r2,112(sp)
   4e614:	d9401b15 	stw	r5,108(sp)
   4e618:	00c001c4 	movi	r3,7
   4e61c:	19401916 	blt	r3,r5,4e684 <___vfiprintf_internal_r+0xcf8>
   4e620:	42000204 	addi	r8,r8,8
   4e624:	29400044 	addi	r5,r5,1
   4e628:	003e5506 	br	4df80 <_gp+0xffff0e38>
   4e62c:	d9402017 	ldw	r5,128(sp)
   4e630:	d9002117 	ldw	r4,132(sp)
   4e634:	d9801a04 	addi	r6,sp,104
   4e638:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e63c:	10000b1e 	bne	r2,zero,4e66c <___vfiprintf_internal_r+0xce0>
   4e640:	d9001b17 	ldw	r4,108(sp)
   4e644:	d8801c17 	ldw	r2,112(sp)
   4e648:	d811883a 	mov	r8,sp
   4e64c:	21400044 	addi	r5,r4,1
   4e650:	003fdc06 	br	4e5c4 <_gp+0xffff147c>
   4e654:	d8801c17 	ldw	r2,112(sp)
   4e658:	10000426 	beq	r2,zero,4e66c <___vfiprintf_internal_r+0xce0>
   4e65c:	d9402017 	ldw	r5,128(sp)
   4e660:	d9002117 	ldw	r4,132(sp)
   4e664:	d9801a04 	addi	r6,sp,104
   4e668:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e66c:	d9402017 	ldw	r5,128(sp)
   4e670:	2880030b 	ldhu	r2,12(r5)
   4e674:	1080100c 	andi	r2,r2,64
   4e678:	10014d1e 	bne	r2,zero,4ebb0 <___vfiprintf_internal_r+0x1224>
   4e67c:	d8802417 	ldw	r2,144(sp)
   4e680:	003d9706 	br	4dce0 <_gp+0xffff0b98>
   4e684:	1000d21e 	bne	r2,zero,4e9d0 <___vfiprintf_internal_r+0x1044>
   4e688:	00c00044 	movi	r3,1
   4e68c:	a005883a 	mov	r2,r20
   4e690:	ddc00015 	stw	r23,0(sp)
   4e694:	dd000115 	stw	r20,4(sp)
   4e698:	dd001c15 	stw	r20,112(sp)
   4e69c:	d8c01b15 	stw	r3,108(sp)
   4e6a0:	d811883a 	mov	r8,sp
   4e6a4:	42000204 	addi	r8,r8,8
   4e6a8:	8c40010c 	andi	r17,r17,4
   4e6ac:	88004026 	beq	r17,zero,4e7b0 <___vfiprintf_internal_r+0xe24>
   4e6b0:	d9002517 	ldw	r4,148(sp)
   4e6b4:	24e3c83a 	sub	r17,r4,r19
   4e6b8:	04403d0e 	bge	zero,r17,4e7b0 <___vfiprintf_internal_r+0xe24>
   4e6bc:	04000404 	movi	r16,16
   4e6c0:	8441a90e 	bge	r16,r17,4ed68 <___vfiprintf_internal_r+0x13dc>
   4e6c4:	00c00174 	movhi	r3,5
   4e6c8:	18cc2104 	addi	r3,r3,12420
   4e6cc:	d9001b17 	ldw	r4,108(sp)
   4e6d0:	d8c02315 	stw	r3,140(sp)
   4e6d4:	050001c4 	movi	r20,7
   4e6d8:	dd402117 	ldw	r21,132(sp)
   4e6dc:	ddc02017 	ldw	r23,128(sp)
   4e6e0:	00000506 	br	4e6f8 <___vfiprintf_internal_r+0xd6c>
   4e6e4:	21400084 	addi	r5,r4,2
   4e6e8:	42000204 	addi	r8,r8,8
   4e6ec:	1809883a 	mov	r4,r3
   4e6f0:	8c7ffc04 	addi	r17,r17,-16
   4e6f4:	84400f0e 	bge	r16,r17,4e734 <___vfiprintf_internal_r+0xda8>
   4e6f8:	01400174 	movhi	r5,5
   4e6fc:	10800404 	addi	r2,r2,16
   4e700:	20c00044 	addi	r3,r4,1
   4e704:	294c2104 	addi	r5,r5,12420
   4e708:	41400015 	stw	r5,0(r8)
   4e70c:	44000115 	stw	r16,4(r8)
   4e710:	d8801c15 	stw	r2,112(sp)
   4e714:	d8c01b15 	stw	r3,108(sp)
   4e718:	a0fff20e 	bge	r20,r3,4e6e4 <_gp+0xffff159c>
   4e71c:	1000141e 	bne	r2,zero,4e770 <___vfiprintf_internal_r+0xde4>
   4e720:	8c7ffc04 	addi	r17,r17,-16
   4e724:	01400044 	movi	r5,1
   4e728:	0009883a 	mov	r4,zero
   4e72c:	d811883a 	mov	r8,sp
   4e730:	847ff116 	blt	r16,r17,4e6f8 <_gp+0xffff15b0>
   4e734:	d8c02317 	ldw	r3,140(sp)
   4e738:	1445883a 	add	r2,r2,r17
   4e73c:	44400115 	stw	r17,4(r8)
   4e740:	40c00015 	stw	r3,0(r8)
   4e744:	d8801c15 	stw	r2,112(sp)
   4e748:	d9401b15 	stw	r5,108(sp)
   4e74c:	00c001c4 	movi	r3,7
   4e750:	1940170e 	bge	r3,r5,4e7b0 <___vfiprintf_internal_r+0xe24>
   4e754:	1000101e 	bne	r2,zero,4e798 <___vfiprintf_internal_r+0xe0c>
   4e758:	d8802517 	ldw	r2,148(sp)
   4e75c:	14c11616 	blt	r2,r19,4ebb8 <___vfiprintf_internal_r+0x122c>
   4e760:	d9002417 	ldw	r4,144(sp)
   4e764:	2089883a 	add	r4,r4,r2
   4e768:	d9002415 	stw	r4,144(sp)
   4e76c:	003e1806 	br	4dfd0 <_gp+0xffff0e88>
   4e770:	d9801a04 	addi	r6,sp,104
   4e774:	b80b883a 	mov	r5,r23
   4e778:	a809883a 	mov	r4,r21
   4e77c:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e780:	103fba1e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e784:	d9001b17 	ldw	r4,108(sp)
   4e788:	d8801c17 	ldw	r2,112(sp)
   4e78c:	d811883a 	mov	r8,sp
   4e790:	21400044 	addi	r5,r4,1
   4e794:	003fd606 	br	4e6f0 <_gp+0xffff15a8>
   4e798:	d9402017 	ldw	r5,128(sp)
   4e79c:	d9002117 	ldw	r4,132(sp)
   4e7a0:	d9801a04 	addi	r6,sp,104
   4e7a4:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e7a8:	103fb01e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e7ac:	d8801c17 	ldw	r2,112(sp)
   4e7b0:	d8c02517 	ldw	r3,148(sp)
   4e7b4:	1cc0010e 	bge	r3,r19,4e7bc <___vfiprintf_internal_r+0xe30>
   4e7b8:	9807883a 	mov	r3,r19
   4e7bc:	d9002417 	ldw	r4,144(sp)
   4e7c0:	20c9883a 	add	r4,r4,r3
   4e7c4:	d9002415 	stw	r4,144(sp)
   4e7c8:	103e0126 	beq	r2,zero,4dfd0 <_gp+0xffff0e88>
   4e7cc:	d9402017 	ldw	r5,128(sp)
   4e7d0:	d9002117 	ldw	r4,132(sp)
   4e7d4:	d9801a04 	addi	r6,sp,104
   4e7d8:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e7dc:	103dfc26 	beq	r2,zero,4dfd0 <_gp+0xffff0e88>
   4e7e0:	003fa206 	br	4e66c <_gp+0xffff1524>
   4e7e4:	d9402017 	ldw	r5,128(sp)
   4e7e8:	d9002117 	ldw	r4,132(sp)
   4e7ec:	d9801a04 	addi	r6,sp,104
   4e7f0:	d9c02b15 	stw	r7,172(sp)
   4e7f4:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e7f8:	d9c02b17 	ldw	r7,172(sp)
   4e7fc:	103f9b1e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e800:	d9001b17 	ldw	r4,108(sp)
   4e804:	d8801c17 	ldw	r2,112(sp)
   4e808:	d811883a 	mov	r8,sp
   4e80c:	21800044 	addi	r6,r4,1
   4e810:	003dbf06 	br	4df10 <_gp+0xffff0dc8>
   4e814:	1000d81e 	bne	r2,zero,4eb78 <___vfiprintf_internal_r+0x11ec>
   4e818:	d9001d87 	ldb	r4,118(sp)
   4e81c:	20000a26 	beq	r4,zero,4e848 <___vfiprintf_internal_r+0xebc>
   4e820:	00800044 	movi	r2,1
   4e824:	d9001d84 	addi	r4,sp,118
   4e828:	100b883a 	mov	r5,r2
   4e82c:	d9000015 	stw	r4,0(sp)
   4e830:	d8800115 	stw	r2,4(sp)
   4e834:	d811883a 	mov	r8,sp
   4e838:	2809883a 	mov	r4,r5
   4e83c:	42000204 	addi	r8,r8,8
   4e840:	29400044 	addi	r5,r5,1
   4e844:	003d9506 	br	4de9c <_gp+0xffff0d54>
   4e848:	3800fd26 	beq	r7,zero,4ec40 <___vfiprintf_internal_r+0x12b4>
   4e84c:	00800084 	movi	r2,2
   4e850:	d9001d04 	addi	r4,sp,116
   4e854:	d9000015 	stw	r4,0(sp)
   4e858:	d8800115 	stw	r2,4(sp)
   4e85c:	01400044 	movi	r5,1
   4e860:	d811883a 	mov	r8,sp
   4e864:	2809883a 	mov	r4,r5
   4e868:	42000204 	addi	r8,r8,8
   4e86c:	29400044 	addi	r5,r5,1
   4e870:	003f4606 	br	4e58c <_gp+0xffff1444>
   4e874:	d8802517 	ldw	r2,148(sp)
   4e878:	14c0010e 	bge	r2,r19,4e880 <___vfiprintf_internal_r+0xef4>
   4e87c:	9805883a 	mov	r2,r19
   4e880:	d9402417 	ldw	r5,144(sp)
   4e884:	288b883a 	add	r5,r5,r2
   4e888:	d9402415 	stw	r5,144(sp)
   4e88c:	003dd006 	br	4dfd0 <_gp+0xffff0e88>
   4e890:	d8001d85 	stb	zero,118(sp)
   4e894:	80005d16 	blt	r16,zero,4ea0c <___vfiprintf_internal_r+0x1080>
   4e898:	00ffdfc4 	movi	r3,-129
   4e89c:	9d04b03a 	or	r2,r19,r20
   4e8a0:	88e2703a 	and	r17,r17,r3
   4e8a4:	103d3726 	beq	r2,zero,4dd84 <_gp+0xffff0c3c>
   4e8a8:	002b883a 	mov	r21,zero
   4e8ac:	d9002617 	ldw	r4,152(sp)
   4e8b0:	ddc01a04 	addi	r23,sp,104
   4e8b4:	988003cc 	andi	r2,r19,15
   4e8b8:	a006973a 	slli	r3,r20,28
   4e8bc:	2085883a 	add	r2,r4,r2
   4e8c0:	9826d13a 	srli	r19,r19,4
   4e8c4:	10800003 	ldbu	r2,0(r2)
   4e8c8:	a028d13a 	srli	r20,r20,4
   4e8cc:	bdffffc4 	addi	r23,r23,-1
   4e8d0:	1ce6b03a 	or	r19,r3,r19
   4e8d4:	b8800005 	stb	r2,0(r23)
   4e8d8:	9d04b03a 	or	r2,r19,r20
   4e8dc:	103ff51e 	bne	r2,zero,4e8b4 <_gp+0xffff176c>
   4e8e0:	d8801e17 	ldw	r2,120(sp)
   4e8e4:	15e9c83a 	sub	r20,r2,r23
   4e8e8:	003d2b06 	br	4dd98 <_gp+0xffff0c50>
   4e8ec:	d9402017 	ldw	r5,128(sp)
   4e8f0:	d9002117 	ldw	r4,132(sp)
   4e8f4:	d9801a04 	addi	r6,sp,104
   4e8f8:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e8fc:	103f5b1e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e900:	d8801c17 	ldw	r2,112(sp)
   4e904:	d811883a 	mov	r8,sp
   4e908:	003f6706 	br	4e6a8 <_gp+0xffff1560>
   4e90c:	d9402017 	ldw	r5,128(sp)
   4e910:	d9002117 	ldw	r4,132(sp)
   4e914:	d9801a04 	addi	r6,sp,104
   4e918:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e91c:	103f531e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e920:	d811883a 	mov	r8,sp
   4e924:	003cd906 	br	4dc8c <_gp+0xffff0b44>
   4e928:	10803fcc 	andi	r2,r2,255
   4e92c:	1080201c 	xori	r2,r2,128
   4e930:	10bfe004 	addi	r2,r2,-128
   4e934:	00c00c04 	movi	r3,48
   4e938:	10ffe926 	beq	r2,r3,4e8e0 <_gp+0xffff1798>
   4e93c:	b8ffffc5 	stb	r3,-1(r23)
   4e940:	d8c01e17 	ldw	r3,120(sp)
   4e944:	b8bfffc4 	addi	r2,r23,-1
   4e948:	102f883a 	mov	r23,r2
   4e94c:	18a9c83a 	sub	r20,r3,r2
   4e950:	003d1106 	br	4dd98 <_gp+0xffff0c50>
   4e954:	d9402017 	ldw	r5,128(sp)
   4e958:	d9002117 	ldw	r4,132(sp)
   4e95c:	d9801a04 	addi	r6,sp,104
   4e960:	d8c02a15 	stw	r3,168(sp)
   4e964:	d9c02b15 	stw	r7,172(sp)
   4e968:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e96c:	d8c02a17 	ldw	r3,168(sp)
   4e970:	d9c02b17 	ldw	r7,172(sp)
   4e974:	103f3d1e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e978:	d9001b17 	ldw	r4,108(sp)
   4e97c:	d8801c17 	ldw	r2,112(sp)
   4e980:	d811883a 	mov	r8,sp
   4e984:	21400044 	addi	r5,r4,1
   4e988:	003d4406 	br	4de9c <_gp+0xffff0d54>
   4e98c:	d9402017 	ldw	r5,128(sp)
   4e990:	d9002117 	ldw	r4,132(sp)
   4e994:	d9801a04 	addi	r6,sp,104
   4e998:	d8c02a15 	stw	r3,168(sp)
   4e99c:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e9a0:	d8c02a17 	ldw	r3,168(sp)
   4e9a4:	103f311e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e9a8:	d9001b17 	ldw	r4,108(sp)
   4e9ac:	d8801c17 	ldw	r2,112(sp)
   4e9b0:	d811883a 	mov	r8,sp
   4e9b4:	21400044 	addi	r5,r4,1
   4e9b8:	003ef406 	br	4e58c <_gp+0xffff1444>
   4e9bc:	1000bd1e 	bne	r2,zero,4ecb4 <___vfiprintf_internal_r+0x1328>
   4e9c0:	01400044 	movi	r5,1
   4e9c4:	0009883a 	mov	r4,zero
   4e9c8:	d811883a 	mov	r8,sp
   4e9cc:	003ef106 	br	4e594 <_gp+0xffff144c>
   4e9d0:	d9402017 	ldw	r5,128(sp)
   4e9d4:	d9002117 	ldw	r4,132(sp)
   4e9d8:	d9801a04 	addi	r6,sp,104
   4e9dc:	004d8780 	call	4d878 <__sprint_r.part.0>
   4e9e0:	103f221e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4e9e4:	d9401b17 	ldw	r5,108(sp)
   4e9e8:	d8801c17 	ldw	r2,112(sp)
   4e9ec:	d811883a 	mov	r8,sp
   4e9f0:	29400044 	addi	r5,r5,1
   4e9f4:	003d6206 	br	4df80 <_gp+0xffff0e38>
   4e9f8:	01400174 	movhi	r5,5
   4e9fc:	294bbc04 	addi	r5,r5,12016
   4ea00:	d9402615 	stw	r5,152(sp)
   4ea04:	d8c02215 	stw	r3,136(sp)
   4ea08:	1023883a 	mov	r17,r2
   4ea0c:	9d04b03a 	or	r2,r19,r20
   4ea10:	103fa51e 	bne	r2,zero,4e8a8 <_gp+0xffff1760>
   4ea14:	002b883a 	mov	r21,zero
   4ea18:	00800084 	movi	r2,2
   4ea1c:	003e4a06 	br	4e348 <_gp+0xffff1200>
   4ea20:	01400174 	movhi	r5,5
   4ea24:	294bbc04 	addi	r5,r5,12016
   4ea28:	002b883a 	mov	r21,zero
   4ea2c:	d9402615 	stw	r5,152(sp)
   4ea30:	003f9e06 	br	4e8ac <_gp+0xffff1764>
   4ea34:	d9402217 	ldw	r5,136(sp)
   4ea38:	d8001d85 	stb	zero,118(sp)
   4ea3c:	0029883a 	mov	r20,zero
   4ea40:	28800104 	addi	r2,r5,4
   4ea44:	2cc00017 	ldw	r19,0(r5)
   4ea48:	803e3a16 	blt	r16,zero,4e334 <_gp+0xffff11ec>
   4ea4c:	00ffdfc4 	movi	r3,-129
   4ea50:	d8802215 	stw	r2,136(sp)
   4ea54:	88e2703a 	and	r17,r17,r3
   4ea58:	002b883a 	mov	r21,zero
   4ea5c:	983e9b26 	beq	r19,zero,4e4cc <_gp+0xffff1384>
   4ea60:	00800244 	movi	r2,9
   4ea64:	14fdc936 	bltu	r2,r19,4e18c <_gp+0xffff1044>
   4ea68:	003e9a06 	br	4e4d4 <_gp+0xffff138c>
   4ea6c:	00800c04 	movi	r2,48
   4ea70:	d8c01d45 	stb	r3,117(sp)
   4ea74:	d8801d05 	stb	r2,116(sp)
   4ea78:	d8001d85 	stb	zero,118(sp)
   4ea7c:	88c00094 	ori	r3,r17,2
   4ea80:	80009c16 	blt	r16,zero,4ecf4 <___vfiprintf_internal_r+0x1368>
   4ea84:	00bfdfc4 	movi	r2,-129
   4ea88:	88a2703a 	and	r17,r17,r2
   4ea8c:	8c400094 	ori	r17,r17,2
   4ea90:	002b883a 	mov	r21,zero
   4ea94:	003f8506 	br	4e8ac <_gp+0xffff1764>
   4ea98:	b029883a 	mov	r20,r22
   4ea9c:	003c0b06 	br	4dacc <_gp+0xffff0984>
   4eaa0:	04e7c83a 	sub	r19,zero,r19
   4eaa4:	05400b44 	movi	r21,45
   4eaa8:	9804c03a 	cmpne	r2,r19,zero
   4eaac:	0529c83a 	sub	r20,zero,r20
   4eab0:	dd401d85 	stb	r21,118(sp)
   4eab4:	a0a9c83a 	sub	r20,r20,r2
   4eab8:	80009716 	blt	r16,zero,4ed18 <___vfiprintf_internal_r+0x138c>
   4eabc:	00bfdfc4 	movi	r2,-129
   4eac0:	88a2703a 	and	r17,r17,r2
   4eac4:	003db006 	br	4e188 <_gp+0xffff1040>
   4eac8:	b0c00007 	ldb	r3,0(r22)
   4eacc:	003c0c06 	br	4db00 <_gp+0xffff09b8>
   4ead0:	8880100c 	andi	r2,r17,64
   4ead4:	d8001d85 	stb	zero,118(sp)
   4ead8:	1000461e 	bne	r2,zero,4ebf4 <___vfiprintf_internal_r+0x1268>
   4eadc:	d9002217 	ldw	r4,136(sp)
   4eae0:	0029883a 	mov	r20,zero
   4eae4:	20800104 	addi	r2,r4,4
   4eae8:	24c00017 	ldw	r19,0(r4)
   4eaec:	803df80e 	bge	r16,zero,4e2d0 <_gp+0xffff1188>
   4eaf0:	9d06b03a 	or	r3,r19,r20
   4eaf4:	d8802215 	stw	r2,136(sp)
   4eaf8:	183d5e1e 	bne	r3,zero,4e074 <_gp+0xffff0f2c>
   4eafc:	002b883a 	mov	r21,zero
   4eb00:	0005883a 	mov	r2,zero
   4eb04:	003e1006 	br	4e348 <_gp+0xffff1200>
   4eb08:	8880040c 	andi	r2,r17,16
   4eb0c:	1000321e 	bne	r2,zero,4ebd8 <___vfiprintf_internal_r+0x124c>
   4eb10:	8c40100c 	andi	r17,r17,64
   4eb14:	88008d26 	beq	r17,zero,4ed4c <___vfiprintf_internal_r+0x13c0>
   4eb18:	d9402217 	ldw	r5,136(sp)
   4eb1c:	d8c02417 	ldw	r3,144(sp)
   4eb20:	28800017 	ldw	r2,0(r5)
   4eb24:	29400104 	addi	r5,r5,4
   4eb28:	d9402215 	stw	r5,136(sp)
   4eb2c:	10c0000d 	sth	r3,0(r2)
   4eb30:	003bca06 	br	4da5c <_gp+0xffff0914>
   4eb34:	8880100c 	andi	r2,r17,64
   4eb38:	10003a26 	beq	r2,zero,4ec24 <___vfiprintf_internal_r+0x1298>
   4eb3c:	d8802217 	ldw	r2,136(sp)
   4eb40:	14c0000f 	ldh	r19,0(r2)
   4eb44:	10800104 	addi	r2,r2,4
   4eb48:	d8802215 	stw	r2,136(sp)
   4eb4c:	9829d7fa 	srai	r20,r19,31
   4eb50:	a005883a 	mov	r2,r20
   4eb54:	003d8506 	br	4e16c <_gp+0xffff1024>
   4eb58:	8880100c 	andi	r2,r17,64
   4eb5c:	10002b26 	beq	r2,zero,4ec0c <___vfiprintf_internal_r+0x1280>
   4eb60:	d8802217 	ldw	r2,136(sp)
   4eb64:	0029883a 	mov	r20,zero
   4eb68:	14c0000b 	ldhu	r19,0(r2)
   4eb6c:	10800104 	addi	r2,r2,4
   4eb70:	d8802215 	stw	r2,136(sp)
   4eb74:	003d5d06 	br	4e0ec <_gp+0xffff0fa4>
   4eb78:	d9402017 	ldw	r5,128(sp)
   4eb7c:	d9002117 	ldw	r4,132(sp)
   4eb80:	d9801a04 	addi	r6,sp,104
   4eb84:	d8c02a15 	stw	r3,168(sp)
   4eb88:	d9c02b15 	stw	r7,172(sp)
   4eb8c:	004d8780 	call	4d878 <__sprint_r.part.0>
   4eb90:	d8c02a17 	ldw	r3,168(sp)
   4eb94:	d9c02b17 	ldw	r7,172(sp)
   4eb98:	103eb41e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4eb9c:	d9001b17 	ldw	r4,108(sp)
   4eba0:	d8801c17 	ldw	r2,112(sp)
   4eba4:	d811883a 	mov	r8,sp
   4eba8:	21400044 	addi	r5,r4,1
   4ebac:	003e6706 	br	4e54c <_gp+0xffff1404>
   4ebb0:	00bfffc4 	movi	r2,-1
   4ebb4:	003c4a06 	br	4dce0 <_gp+0xffff0b98>
   4ebb8:	9805883a 	mov	r2,r19
   4ebbc:	003ee806 	br	4e760 <_gp+0xffff1618>
   4ebc0:	d8c02217 	ldw	r3,136(sp)
   4ebc4:	0029883a 	mov	r20,zero
   4ebc8:	18800104 	addi	r2,r3,4
   4ebcc:	1cc0000b 	ldhu	r19,0(r3)
   4ebd0:	803f9e0e 	bge	r16,zero,4ea4c <_gp+0xffff1904>
   4ebd4:	003dd706 	br	4e334 <_gp+0xffff11ec>
   4ebd8:	d8c02217 	ldw	r3,136(sp)
   4ebdc:	d9002417 	ldw	r4,144(sp)
   4ebe0:	18800017 	ldw	r2,0(r3)
   4ebe4:	18c00104 	addi	r3,r3,4
   4ebe8:	d8c02215 	stw	r3,136(sp)
   4ebec:	11000015 	stw	r4,0(r2)
   4ebf0:	003b9a06 	br	4da5c <_gp+0xffff0914>
   4ebf4:	d8c02217 	ldw	r3,136(sp)
   4ebf8:	0029883a 	mov	r20,zero
   4ebfc:	18800104 	addi	r2,r3,4
   4ec00:	1cc0000b 	ldhu	r19,0(r3)
   4ec04:	803db20e 	bge	r16,zero,4e2d0 <_gp+0xffff1188>
   4ec08:	003fb906 	br	4eaf0 <_gp+0xffff19a8>
   4ec0c:	d9002217 	ldw	r4,136(sp)
   4ec10:	0029883a 	mov	r20,zero
   4ec14:	24c00017 	ldw	r19,0(r4)
   4ec18:	21000104 	addi	r4,r4,4
   4ec1c:	d9002215 	stw	r4,136(sp)
   4ec20:	003d3206 	br	4e0ec <_gp+0xffff0fa4>
   4ec24:	d8c02217 	ldw	r3,136(sp)
   4ec28:	1cc00017 	ldw	r19,0(r3)
   4ec2c:	18c00104 	addi	r3,r3,4
   4ec30:	d8c02215 	stw	r3,136(sp)
   4ec34:	9829d7fa 	srai	r20,r19,31
   4ec38:	a005883a 	mov	r2,r20
   4ec3c:	003d4b06 	br	4e16c <_gp+0xffff1024>
   4ec40:	0009883a 	mov	r4,zero
   4ec44:	01400044 	movi	r5,1
   4ec48:	d811883a 	mov	r8,sp
   4ec4c:	003e4f06 	br	4e58c <_gp+0xffff1444>
   4ec50:	d8c02215 	stw	r3,136(sp)
   4ec54:	002b883a 	mov	r21,zero
   4ec58:	003db806 	br	4e33c <_gp+0xffff11f4>
   4ec5c:	d811883a 	mov	r8,sp
   4ec60:	003e9606 	br	4e6bc <_gp+0xffff1574>
   4ec64:	01000174 	movhi	r4,5
   4ec68:	210c1d04 	addi	r4,r4,12404
   4ec6c:	d9002315 	stw	r4,140(sp)
   4ec70:	003e6306 	br	4e600 <_gp+0xffff14b8>
   4ec74:	b0c00043 	ldbu	r3,1(r22)
   4ec78:	8c400814 	ori	r17,r17,32
   4ec7c:	b5800044 	addi	r22,r22,1
   4ec80:	18c03fcc 	andi	r3,r3,255
   4ec84:	18c0201c 	xori	r3,r3,128
   4ec88:	18ffe004 	addi	r3,r3,-128
   4ec8c:	003b9c06 	br	4db00 <_gp+0xffff09b8>
   4ec90:	b809883a 	mov	r4,r23
   4ec94:	da002a15 	stw	r8,168(sp)
   4ec98:	00460fc0 	call	460fc <strlen>
   4ec9c:	1029883a 	mov	r20,r2
   4eca0:	dd401d83 	ldbu	r21,118(sp)
   4eca4:	df002215 	stw	fp,136(sp)
   4eca8:	0021883a 	mov	r16,zero
   4ecac:	da002a17 	ldw	r8,168(sp)
   4ecb0:	003c3906 	br	4dd98 <_gp+0xffff0c50>
   4ecb4:	d9402017 	ldw	r5,128(sp)
   4ecb8:	d9002117 	ldw	r4,132(sp)
   4ecbc:	d9801a04 	addi	r6,sp,104
   4ecc0:	004d8780 	call	4d878 <__sprint_r.part.0>
   4ecc4:	103e691e 	bne	r2,zero,4e66c <_gp+0xffff1524>
   4ecc8:	d9001b17 	ldw	r4,108(sp)
   4eccc:	d8801c17 	ldw	r2,112(sp)
   4ecd0:	d811883a 	mov	r8,sp
   4ecd4:	21400044 	addi	r5,r4,1
   4ecd8:	003e2e06 	br	4e594 <_gp+0xffff144c>
   4ecdc:	01000174 	movhi	r4,5
   4ece0:	210c2104 	addi	r4,r4,12420
   4ece4:	d9002315 	stw	r4,140(sp)
   4ece8:	d9001b17 	ldw	r4,108(sp)
   4ecec:	21000044 	addi	r4,r4,1
   4ecf0:	003c5e06 	br	4de6c <_gp+0xffff0d24>
   4ecf4:	002b883a 	mov	r21,zero
   4ecf8:	00800084 	movi	r2,2
   4ecfc:	10803fcc 	andi	r2,r2,255
   4ed00:	01000044 	movi	r4,1
   4ed04:	11002b26 	beq	r2,r4,4edb4 <___vfiprintf_internal_r+0x1428>
   4ed08:	01000084 	movi	r4,2
   4ed0c:	11002b1e 	bne	r2,r4,4edbc <___vfiprintf_internal_r+0x1430>
   4ed10:	1823883a 	mov	r17,r3
   4ed14:	003ee506 	br	4e8ac <_gp+0xffff1764>
   4ed18:	8807883a 	mov	r3,r17
   4ed1c:	00800044 	movi	r2,1
   4ed20:	003ff606 	br	4ecfc <_gp+0xffff1bb4>
   4ed24:	00800184 	movi	r2,6
   4ed28:	1400012e 	bgeu	r2,r16,4ed30 <___vfiprintf_internal_r+0x13a4>
   4ed2c:	1021883a 	mov	r16,r2
   4ed30:	8029883a 	mov	r20,r16
   4ed34:	8027883a 	mov	r19,r16
   4ed38:	80002216 	blt	r16,zero,4edc4 <___vfiprintf_internal_r+0x1438>
   4ed3c:	05c00174 	movhi	r23,5
   4ed40:	df002215 	stw	fp,136(sp)
   4ed44:	bdcbc104 	addi	r23,r23,12036
   4ed48:	003cfb06 	br	4e138 <_gp+0xffff0ff0>
   4ed4c:	d9002217 	ldw	r4,136(sp)
   4ed50:	d9402417 	ldw	r5,144(sp)
   4ed54:	20800017 	ldw	r2,0(r4)
   4ed58:	21000104 	addi	r4,r4,4
   4ed5c:	d9002215 	stw	r4,136(sp)
   4ed60:	11400015 	stw	r5,0(r2)
   4ed64:	003b3d06 	br	4da5c <_gp+0xffff0914>
   4ed68:	01400174 	movhi	r5,5
   4ed6c:	294c2104 	addi	r5,r5,12420
   4ed70:	d9402315 	stw	r5,140(sp)
   4ed74:	d9401b17 	ldw	r5,108(sp)
   4ed78:	29400044 	addi	r5,r5,1
   4ed7c:	003e6d06 	br	4e734 <_gp+0xffff15ec>
   4ed80:	8029883a 	mov	r20,r16
   4ed84:	dd401d83 	ldbu	r21,118(sp)
   4ed88:	df002215 	stw	fp,136(sp)
   4ed8c:	0021883a 	mov	r16,zero
   4ed90:	003c0106 	br	4dd98 <_gp+0xffff0c50>
   4ed94:	00c00174 	movhi	r3,5
   4ed98:	18cc1d04 	addi	r3,r3,12404
   4ed9c:	d8c02315 	stw	r3,140(sp)
   4eda0:	280d883a 	mov	r6,r5
   4eda4:	003c6906 	br	4df4c <_gp+0xffff0e04>
   4eda8:	802d883a 	mov	r22,r16
   4edac:	0021883a 	mov	r16,zero
   4edb0:	003b5406 	br	4db04 <_gp+0xffff09bc>
   4edb4:	1823883a 	mov	r17,r3
   4edb8:	003cf306 	br	4e188 <_gp+0xffff1040>
   4edbc:	1823883a 	mov	r17,r3
   4edc0:	003cad06 	br	4e078 <_gp+0xffff0f30>
   4edc4:	0027883a 	mov	r19,zero
   4edc8:	003fdc06 	br	4ed3c <_gp+0xffff1bf4>
   4edcc:	d9402217 	ldw	r5,136(sp)
   4edd0:	8005883a 	mov	r2,r16
   4edd4:	b0c00043 	ldbu	r3,1(r22)
   4edd8:	2c000017 	ldw	r16,0(r5)
   4eddc:	29000104 	addi	r4,r5,4
   4ede0:	d9002215 	stw	r4,136(sp)
   4ede4:	102d883a 	mov	r22,r2
   4ede8:	803fa50e 	bge	r16,zero,4ec80 <_gp+0xffff1b38>
   4edec:	18c03fcc 	andi	r3,r3,255
   4edf0:	18c0201c 	xori	r3,r3,128
   4edf4:	043fffc4 	movi	r16,-1
   4edf8:	18ffe004 	addi	r3,r3,-128
   4edfc:	003b4006 	br	4db00 <_gp+0xffff09b8>
   4ee00:	d9402303 	ldbu	r5,140(sp)
   4ee04:	d9401d85 	stb	r5,118(sp)
   4ee08:	003cae06 	br	4e0c4 <_gp+0xffff0f7c>
   4ee0c:	d8c02303 	ldbu	r3,140(sp)
   4ee10:	d8c01d85 	stb	r3,118(sp)
   4ee14:	003d1406 	br	4e268 <_gp+0xffff1120>
   4ee18:	d8c02303 	ldbu	r3,140(sp)
   4ee1c:	d8c01d85 	stb	r3,118(sp)
   4ee20:	003cca06 	br	4e14c <_gp+0xffff1004>
   4ee24:	8880004c 	andi	r2,r17,1
   4ee28:	002b883a 	mov	r21,zero
   4ee2c:	10000526 	beq	r2,zero,4ee44 <___vfiprintf_internal_r+0x14b8>
   4ee30:	00800c04 	movi	r2,48
   4ee34:	d88019c5 	stb	r2,103(sp)
   4ee38:	dd002817 	ldw	r20,160(sp)
   4ee3c:	ddc019c4 	addi	r23,sp,103
   4ee40:	003bd506 	br	4dd98 <_gp+0xffff0c50>
   4ee44:	0029883a 	mov	r20,zero
   4ee48:	ddc01a04 	addi	r23,sp,104
   4ee4c:	003bd206 	br	4dd98 <_gp+0xffff0c50>
   4ee50:	d9002303 	ldbu	r4,140(sp)
   4ee54:	d9001d85 	stb	r4,118(sp)
   4ee58:	003da606 	br	4e4f4 <_gp+0xffff13ac>
   4ee5c:	d8c02303 	ldbu	r3,140(sp)
   4ee60:	d8c01d85 	stb	r3,118(sp)
   4ee64:	003c7606 	br	4e040 <_gp+0xffff0ef8>
   4ee68:	d8c02303 	ldbu	r3,140(sp)
   4ee6c:	d8c01d85 	stb	r3,118(sp)
   4ee70:	003c6506 	br	4e008 <_gp+0xffff0ec0>
   4ee74:	d9002303 	ldbu	r4,140(sp)
   4ee78:	d9001d85 	stb	r4,118(sp)
   4ee7c:	003d3d06 	br	4e374 <_gp+0xffff122c>
   4ee80:	d8c02303 	ldbu	r3,140(sp)
   4ee84:	d8c01d85 	stb	r3,118(sp)
   4ee88:	003d1d06 	br	4e300 <_gp+0xffff11b8>
   4ee8c:	d8c02303 	ldbu	r3,140(sp)
   4ee90:	d8c01d85 	stb	r3,118(sp)
   4ee94:	003d0306 	br	4e2a4 <_gp+0xffff115c>

0004ee98 <__vfiprintf_internal>:
   4ee98:	00800174 	movhi	r2,5
   4ee9c:	10945404 	addi	r2,r2,20816
   4eea0:	300f883a 	mov	r7,r6
   4eea4:	280d883a 	mov	r6,r5
   4eea8:	200b883a 	mov	r5,r4
   4eeac:	11000017 	ldw	r4,0(r2)
   4eeb0:	004d98c1 	jmpi	4d98c <___vfiprintf_internal_r>

0004eeb4 <__sbprintf>:
   4eeb4:	2880030b 	ldhu	r2,12(r5)
   4eeb8:	2ac01917 	ldw	r11,100(r5)
   4eebc:	2a80038b 	ldhu	r10,14(r5)
   4eec0:	2a400717 	ldw	r9,28(r5)
   4eec4:	2a000917 	ldw	r8,36(r5)
   4eec8:	defee204 	addi	sp,sp,-1144
   4eecc:	00c10004 	movi	r3,1024
   4eed0:	dc011a15 	stw	r16,1128(sp)
   4eed4:	10bfff4c 	andi	r2,r2,65533
   4eed8:	2821883a 	mov	r16,r5
   4eedc:	d8cb883a 	add	r5,sp,r3
   4eee0:	dc811c15 	stw	r18,1136(sp)
   4eee4:	dc411b15 	stw	r17,1132(sp)
   4eee8:	dfc11d15 	stw	ra,1140(sp)
   4eeec:	2025883a 	mov	r18,r4
   4eef0:	d881030d 	sth	r2,1036(sp)
   4eef4:	dac11915 	stw	r11,1124(sp)
   4eef8:	da81038d 	sth	r10,1038(sp)
   4eefc:	da410715 	stw	r9,1052(sp)
   4ef00:	da010915 	stw	r8,1060(sp)
   4ef04:	dec10015 	stw	sp,1024(sp)
   4ef08:	dec10415 	stw	sp,1040(sp)
   4ef0c:	d8c10215 	stw	r3,1032(sp)
   4ef10:	d8c10515 	stw	r3,1044(sp)
   4ef14:	d8010615 	stw	zero,1048(sp)
   4ef18:	004d98c0 	call	4d98c <___vfiprintf_internal_r>
   4ef1c:	1023883a 	mov	r17,r2
   4ef20:	10000416 	blt	r2,zero,4ef34 <__sbprintf+0x80>
   4ef24:	d9410004 	addi	r5,sp,1024
   4ef28:	9009883a 	mov	r4,r18
   4ef2c:	004a1680 	call	4a168 <_fflush_r>
   4ef30:	10000d1e 	bne	r2,zero,4ef68 <__sbprintf+0xb4>
   4ef34:	d881030b 	ldhu	r2,1036(sp)
   4ef38:	1080100c 	andi	r2,r2,64
   4ef3c:	10000326 	beq	r2,zero,4ef4c <__sbprintf+0x98>
   4ef40:	8080030b 	ldhu	r2,12(r16)
   4ef44:	10801014 	ori	r2,r2,64
   4ef48:	8080030d 	sth	r2,12(r16)
   4ef4c:	8805883a 	mov	r2,r17
   4ef50:	dfc11d17 	ldw	ra,1140(sp)
   4ef54:	dc811c17 	ldw	r18,1136(sp)
   4ef58:	dc411b17 	ldw	r17,1132(sp)
   4ef5c:	dc011a17 	ldw	r16,1128(sp)
   4ef60:	dec11e04 	addi	sp,sp,1144
   4ef64:	f800283a 	ret
   4ef68:	047fffc4 	movi	r17,-1
   4ef6c:	003ff106 	br	4ef34 <_gp+0xffff1dec>

0004ef70 <_write_r>:
   4ef70:	defffd04 	addi	sp,sp,-12
   4ef74:	2805883a 	mov	r2,r5
   4ef78:	dc000015 	stw	r16,0(sp)
   4ef7c:	04000174 	movhi	r16,5
   4ef80:	dc400115 	stw	r17,4(sp)
   4ef84:	300b883a 	mov	r5,r6
   4ef88:	841c9c04 	addi	r16,r16,29296
   4ef8c:	2023883a 	mov	r17,r4
   4ef90:	380d883a 	mov	r6,r7
   4ef94:	1009883a 	mov	r4,r2
   4ef98:	dfc00215 	stw	ra,8(sp)
   4ef9c:	80000015 	stw	zero,0(r16)
   4efa0:	0050f4c0 	call	50f4c <write>
   4efa4:	00ffffc4 	movi	r3,-1
   4efa8:	10c00526 	beq	r2,r3,4efc0 <_write_r+0x50>
   4efac:	dfc00217 	ldw	ra,8(sp)
   4efb0:	dc400117 	ldw	r17,4(sp)
   4efb4:	dc000017 	ldw	r16,0(sp)
   4efb8:	dec00304 	addi	sp,sp,12
   4efbc:	f800283a 	ret
   4efc0:	80c00017 	ldw	r3,0(r16)
   4efc4:	183ff926 	beq	r3,zero,4efac <_gp+0xffff1e64>
   4efc8:	88c00015 	stw	r3,0(r17)
   4efcc:	003ff706 	br	4efac <_gp+0xffff1e64>

0004efd0 <_close_r>:
   4efd0:	defffd04 	addi	sp,sp,-12
   4efd4:	dc000015 	stw	r16,0(sp)
   4efd8:	04000174 	movhi	r16,5
   4efdc:	dc400115 	stw	r17,4(sp)
   4efe0:	841c9c04 	addi	r16,r16,29296
   4efe4:	2023883a 	mov	r17,r4
   4efe8:	2809883a 	mov	r4,r5
   4efec:	dfc00215 	stw	ra,8(sp)
   4eff0:	80000015 	stw	zero,0(r16)
   4eff4:	00506f40 	call	506f4 <close>
   4eff8:	00ffffc4 	movi	r3,-1
   4effc:	10c00526 	beq	r2,r3,4f014 <_close_r+0x44>
   4f000:	dfc00217 	ldw	ra,8(sp)
   4f004:	dc400117 	ldw	r17,4(sp)
   4f008:	dc000017 	ldw	r16,0(sp)
   4f00c:	dec00304 	addi	sp,sp,12
   4f010:	f800283a 	ret
   4f014:	80c00017 	ldw	r3,0(r16)
   4f018:	183ff926 	beq	r3,zero,4f000 <_gp+0xffff1eb8>
   4f01c:	88c00015 	stw	r3,0(r17)
   4f020:	003ff706 	br	4f000 <_gp+0xffff1eb8>

0004f024 <_calloc_r>:
   4f024:	defffe04 	addi	sp,sp,-8
   4f028:	2805883a 	mov	r2,r5
   4f02c:	dc000015 	stw	r16,0(sp)
   4f030:	300b883a 	mov	r5,r6
   4f034:	2021883a 	mov	r16,r4
   4f038:	1009883a 	mov	r4,r2
   4f03c:	dfc00115 	stw	ra,4(sp)
   4f040:	0041f400 	call	41f40 <__mulsi3>
   4f044:	100b883a 	mov	r5,r2
   4f048:	8009883a 	mov	r4,r16
   4f04c:	004b2c00 	call	4b2c0 <_malloc_r>
   4f050:	10002926 	beq	r2,zero,4f0f8 <_calloc_r+0xd4>
   4f054:	11bfff17 	ldw	r6,-4(r2)
   4f058:	1021883a 	mov	r16,r2
   4f05c:	00bfff04 	movi	r2,-4
   4f060:	308c703a 	and	r6,r6,r2
   4f064:	00c00904 	movi	r3,36
   4f068:	308d883a 	add	r6,r6,r2
   4f06c:	19801636 	bltu	r3,r6,4f0c8 <_calloc_r+0xa4>
   4f070:	008004c4 	movi	r2,19
   4f074:	11800b2e 	bgeu	r2,r6,4f0a4 <_calloc_r+0x80>
   4f078:	80000015 	stw	zero,0(r16)
   4f07c:	80000115 	stw	zero,4(r16)
   4f080:	008006c4 	movi	r2,27
   4f084:	11801a2e 	bgeu	r2,r6,4f0f0 <_calloc_r+0xcc>
   4f088:	80000215 	stw	zero,8(r16)
   4f08c:	80000315 	stw	zero,12(r16)
   4f090:	30c0151e 	bne	r6,r3,4f0e8 <_calloc_r+0xc4>
   4f094:	80000415 	stw	zero,16(r16)
   4f098:	80800604 	addi	r2,r16,24
   4f09c:	80000515 	stw	zero,20(r16)
   4f0a0:	00000106 	br	4f0a8 <_calloc_r+0x84>
   4f0a4:	8005883a 	mov	r2,r16
   4f0a8:	10000015 	stw	zero,0(r2)
   4f0ac:	10000115 	stw	zero,4(r2)
   4f0b0:	10000215 	stw	zero,8(r2)
   4f0b4:	8005883a 	mov	r2,r16
   4f0b8:	dfc00117 	ldw	ra,4(sp)
   4f0bc:	dc000017 	ldw	r16,0(sp)
   4f0c0:	dec00204 	addi	sp,sp,8
   4f0c4:	f800283a 	ret
   4f0c8:	000b883a 	mov	r5,zero
   4f0cc:	8009883a 	mov	r4,r16
   4f0d0:	004be540 	call	4be54 <memset>
   4f0d4:	8005883a 	mov	r2,r16
   4f0d8:	dfc00117 	ldw	ra,4(sp)
   4f0dc:	dc000017 	ldw	r16,0(sp)
   4f0e0:	dec00204 	addi	sp,sp,8
   4f0e4:	f800283a 	ret
   4f0e8:	80800404 	addi	r2,r16,16
   4f0ec:	003fee06 	br	4f0a8 <_gp+0xffff1f60>
   4f0f0:	80800204 	addi	r2,r16,8
   4f0f4:	003fec06 	br	4f0a8 <_gp+0xffff1f60>
   4f0f8:	0005883a 	mov	r2,zero
   4f0fc:	003fee06 	br	4f0b8 <_gp+0xffff1f70>

0004f100 <_fclose_r>:
   4f100:	28003926 	beq	r5,zero,4f1e8 <_fclose_r+0xe8>
   4f104:	defffc04 	addi	sp,sp,-16
   4f108:	dc400115 	stw	r17,4(sp)
   4f10c:	dc000015 	stw	r16,0(sp)
   4f110:	dfc00315 	stw	ra,12(sp)
   4f114:	dc800215 	stw	r18,8(sp)
   4f118:	2023883a 	mov	r17,r4
   4f11c:	2821883a 	mov	r16,r5
   4f120:	20000226 	beq	r4,zero,4f12c <_fclose_r+0x2c>
   4f124:	20800e17 	ldw	r2,56(r4)
   4f128:	10002726 	beq	r2,zero,4f1c8 <_fclose_r+0xc8>
   4f12c:	8080030f 	ldh	r2,12(r16)
   4f130:	1000071e 	bne	r2,zero,4f150 <_fclose_r+0x50>
   4f134:	0005883a 	mov	r2,zero
   4f138:	dfc00317 	ldw	ra,12(sp)
   4f13c:	dc800217 	ldw	r18,8(sp)
   4f140:	dc400117 	ldw	r17,4(sp)
   4f144:	dc000017 	ldw	r16,0(sp)
   4f148:	dec00404 	addi	sp,sp,16
   4f14c:	f800283a 	ret
   4f150:	800b883a 	mov	r5,r16
   4f154:	8809883a 	mov	r4,r17
   4f158:	0049f4c0 	call	49f4c <__sflush_r>
   4f15c:	1025883a 	mov	r18,r2
   4f160:	80800b17 	ldw	r2,44(r16)
   4f164:	10000426 	beq	r2,zero,4f178 <_fclose_r+0x78>
   4f168:	81400717 	ldw	r5,28(r16)
   4f16c:	8809883a 	mov	r4,r17
   4f170:	103ee83a 	callr	r2
   4f174:	10001616 	blt	r2,zero,4f1d0 <_fclose_r+0xd0>
   4f178:	8080030b 	ldhu	r2,12(r16)
   4f17c:	1080200c 	andi	r2,r2,128
   4f180:	1000151e 	bne	r2,zero,4f1d8 <_fclose_r+0xd8>
   4f184:	81400c17 	ldw	r5,48(r16)
   4f188:	28000526 	beq	r5,zero,4f1a0 <_fclose_r+0xa0>
   4f18c:	80801004 	addi	r2,r16,64
   4f190:	28800226 	beq	r5,r2,4f19c <_fclose_r+0x9c>
   4f194:	8809883a 	mov	r4,r17
   4f198:	004a6c80 	call	4a6c8 <_free_r>
   4f19c:	80000c15 	stw	zero,48(r16)
   4f1a0:	81401117 	ldw	r5,68(r16)
   4f1a4:	28000326 	beq	r5,zero,4f1b4 <_fclose_r+0xb4>
   4f1a8:	8809883a 	mov	r4,r17
   4f1ac:	004a6c80 	call	4a6c8 <_free_r>
   4f1b0:	80001115 	stw	zero,68(r16)
   4f1b4:	004a5640 	call	4a564 <__sfp_lock_acquire>
   4f1b8:	8000030d 	sth	zero,12(r16)
   4f1bc:	004a5680 	call	4a568 <__sfp_lock_release>
   4f1c0:	9005883a 	mov	r2,r18
   4f1c4:	003fdc06 	br	4f138 <_gp+0xffff1ff0>
   4f1c8:	004a5540 	call	4a554 <__sinit>
   4f1cc:	003fd706 	br	4f12c <_gp+0xffff1fe4>
   4f1d0:	04bfffc4 	movi	r18,-1
   4f1d4:	003fe806 	br	4f178 <_gp+0xffff2030>
   4f1d8:	81400417 	ldw	r5,16(r16)
   4f1dc:	8809883a 	mov	r4,r17
   4f1e0:	004a6c80 	call	4a6c8 <_free_r>
   4f1e4:	003fe706 	br	4f184 <_gp+0xffff203c>
   4f1e8:	0005883a 	mov	r2,zero
   4f1ec:	f800283a 	ret

0004f1f0 <fclose>:
   4f1f0:	00800174 	movhi	r2,5
   4f1f4:	10945404 	addi	r2,r2,20816
   4f1f8:	200b883a 	mov	r5,r4
   4f1fc:	11000017 	ldw	r4,0(r2)
   4f200:	004f1001 	jmpi	4f100 <_fclose_r>

0004f204 <__fputwc>:
   4f204:	defff804 	addi	sp,sp,-32
   4f208:	dcc00415 	stw	r19,16(sp)
   4f20c:	dc800315 	stw	r18,12(sp)
   4f210:	dc000115 	stw	r16,4(sp)
   4f214:	dfc00715 	stw	ra,28(sp)
   4f218:	dd400615 	stw	r21,24(sp)
   4f21c:	dd000515 	stw	r20,20(sp)
   4f220:	dc400215 	stw	r17,8(sp)
   4f224:	2027883a 	mov	r19,r4
   4f228:	2825883a 	mov	r18,r5
   4f22c:	3021883a 	mov	r16,r6
   4f230:	004b0b00 	call	4b0b0 <__locale_mb_cur_max>
   4f234:	00c00044 	movi	r3,1
   4f238:	10c03e26 	beq	r2,r3,4f334 <__fputwc+0x130>
   4f23c:	81c01704 	addi	r7,r16,92
   4f240:	900d883a 	mov	r6,r18
   4f244:	d80b883a 	mov	r5,sp
   4f248:	9809883a 	mov	r4,r19
   4f24c:	004f6d40 	call	4f6d4 <_wcrtomb_r>
   4f250:	1029883a 	mov	r20,r2
   4f254:	00bfffc4 	movi	r2,-1
   4f258:	a0802026 	beq	r20,r2,4f2dc <__fputwc+0xd8>
   4f25c:	d9400003 	ldbu	r5,0(sp)
   4f260:	a0001c26 	beq	r20,zero,4f2d4 <__fputwc+0xd0>
   4f264:	0023883a 	mov	r17,zero
   4f268:	05400284 	movi	r21,10
   4f26c:	00000906 	br	4f294 <__fputwc+0x90>
   4f270:	80800017 	ldw	r2,0(r16)
   4f274:	11400005 	stb	r5,0(r2)
   4f278:	80c00017 	ldw	r3,0(r16)
   4f27c:	18c00044 	addi	r3,r3,1
   4f280:	80c00015 	stw	r3,0(r16)
   4f284:	8c400044 	addi	r17,r17,1
   4f288:	dc45883a 	add	r2,sp,r17
   4f28c:	8d00112e 	bgeu	r17,r20,4f2d4 <__fputwc+0xd0>
   4f290:	11400003 	ldbu	r5,0(r2)
   4f294:	80c00217 	ldw	r3,8(r16)
   4f298:	18ffffc4 	addi	r3,r3,-1
   4f29c:	80c00215 	stw	r3,8(r16)
   4f2a0:	183ff30e 	bge	r3,zero,4f270 <_gp+0xffff2128>
   4f2a4:	80800617 	ldw	r2,24(r16)
   4f2a8:	18801916 	blt	r3,r2,4f310 <__fputwc+0x10c>
   4f2ac:	80800017 	ldw	r2,0(r16)
   4f2b0:	11400005 	stb	r5,0(r2)
   4f2b4:	80800017 	ldw	r2,0(r16)
   4f2b8:	10c00003 	ldbu	r3,0(r2)
   4f2bc:	10800044 	addi	r2,r2,1
   4f2c0:	1d402326 	beq	r3,r21,4f350 <__fputwc+0x14c>
   4f2c4:	80800015 	stw	r2,0(r16)
   4f2c8:	8c400044 	addi	r17,r17,1
   4f2cc:	dc45883a 	add	r2,sp,r17
   4f2d0:	8d3fef36 	bltu	r17,r20,4f290 <_gp+0xffff2148>
   4f2d4:	9005883a 	mov	r2,r18
   4f2d8:	00000406 	br	4f2ec <__fputwc+0xe8>
   4f2dc:	80c0030b 	ldhu	r3,12(r16)
   4f2e0:	a005883a 	mov	r2,r20
   4f2e4:	18c01014 	ori	r3,r3,64
   4f2e8:	80c0030d 	sth	r3,12(r16)
   4f2ec:	dfc00717 	ldw	ra,28(sp)
   4f2f0:	dd400617 	ldw	r21,24(sp)
   4f2f4:	dd000517 	ldw	r20,20(sp)
   4f2f8:	dcc00417 	ldw	r19,16(sp)
   4f2fc:	dc800317 	ldw	r18,12(sp)
   4f300:	dc400217 	ldw	r17,8(sp)
   4f304:	dc000117 	ldw	r16,4(sp)
   4f308:	dec00804 	addi	sp,sp,32
   4f30c:	f800283a 	ret
   4f310:	800d883a 	mov	r6,r16
   4f314:	29403fcc 	andi	r5,r5,255
   4f318:	9809883a 	mov	r4,r19
   4f31c:	004f57c0 	call	4f57c <__swbuf_r>
   4f320:	10bfffe0 	cmpeqi	r2,r2,-1
   4f324:	10803fcc 	andi	r2,r2,255
   4f328:	103fd626 	beq	r2,zero,4f284 <_gp+0xffff213c>
   4f32c:	00bfffc4 	movi	r2,-1
   4f330:	003fee06 	br	4f2ec <_gp+0xffff21a4>
   4f334:	90ffffc4 	addi	r3,r18,-1
   4f338:	01003f84 	movi	r4,254
   4f33c:	20ffbf36 	bltu	r4,r3,4f23c <_gp+0xffff20f4>
   4f340:	900b883a 	mov	r5,r18
   4f344:	dc800005 	stb	r18,0(sp)
   4f348:	1029883a 	mov	r20,r2
   4f34c:	003fc506 	br	4f264 <_gp+0xffff211c>
   4f350:	800d883a 	mov	r6,r16
   4f354:	a80b883a 	mov	r5,r21
   4f358:	9809883a 	mov	r4,r19
   4f35c:	004f57c0 	call	4f57c <__swbuf_r>
   4f360:	10bfffe0 	cmpeqi	r2,r2,-1
   4f364:	003fef06 	br	4f324 <_gp+0xffff21dc>

0004f368 <_fputwc_r>:
   4f368:	3080030b 	ldhu	r2,12(r6)
   4f36c:	10c8000c 	andi	r3,r2,8192
   4f370:	1800051e 	bne	r3,zero,4f388 <_fputwc_r+0x20>
   4f374:	30c01917 	ldw	r3,100(r6)
   4f378:	10880014 	ori	r2,r2,8192
   4f37c:	3080030d 	sth	r2,12(r6)
   4f380:	18880014 	ori	r2,r3,8192
   4f384:	30801915 	stw	r2,100(r6)
   4f388:	004f2041 	jmpi	4f204 <__fputwc>

0004f38c <fputwc>:
   4f38c:	00800174 	movhi	r2,5
   4f390:	defffc04 	addi	sp,sp,-16
   4f394:	10945404 	addi	r2,r2,20816
   4f398:	dc000115 	stw	r16,4(sp)
   4f39c:	14000017 	ldw	r16,0(r2)
   4f3a0:	dc400215 	stw	r17,8(sp)
   4f3a4:	dfc00315 	stw	ra,12(sp)
   4f3a8:	2023883a 	mov	r17,r4
   4f3ac:	80000226 	beq	r16,zero,4f3b8 <fputwc+0x2c>
   4f3b0:	80800e17 	ldw	r2,56(r16)
   4f3b4:	10001026 	beq	r2,zero,4f3f8 <fputwc+0x6c>
   4f3b8:	2880030b 	ldhu	r2,12(r5)
   4f3bc:	10c8000c 	andi	r3,r2,8192
   4f3c0:	1800051e 	bne	r3,zero,4f3d8 <fputwc+0x4c>
   4f3c4:	28c01917 	ldw	r3,100(r5)
   4f3c8:	10880014 	ori	r2,r2,8192
   4f3cc:	2880030d 	sth	r2,12(r5)
   4f3d0:	18880014 	ori	r2,r3,8192
   4f3d4:	28801915 	stw	r2,100(r5)
   4f3d8:	280d883a 	mov	r6,r5
   4f3dc:	8009883a 	mov	r4,r16
   4f3e0:	880b883a 	mov	r5,r17
   4f3e4:	dfc00317 	ldw	ra,12(sp)
   4f3e8:	dc400217 	ldw	r17,8(sp)
   4f3ec:	dc000117 	ldw	r16,4(sp)
   4f3f0:	dec00404 	addi	sp,sp,16
   4f3f4:	004f2041 	jmpi	4f204 <__fputwc>
   4f3f8:	8009883a 	mov	r4,r16
   4f3fc:	d9400015 	stw	r5,0(sp)
   4f400:	004a5540 	call	4a554 <__sinit>
   4f404:	d9400017 	ldw	r5,0(sp)
   4f408:	003feb06 	br	4f3b8 <_gp+0xffff2270>

0004f40c <_fstat_r>:
   4f40c:	defffd04 	addi	sp,sp,-12
   4f410:	2805883a 	mov	r2,r5
   4f414:	dc000015 	stw	r16,0(sp)
   4f418:	04000174 	movhi	r16,5
   4f41c:	dc400115 	stw	r17,4(sp)
   4f420:	841c9c04 	addi	r16,r16,29296
   4f424:	2023883a 	mov	r17,r4
   4f428:	300b883a 	mov	r5,r6
   4f42c:	1009883a 	mov	r4,r2
   4f430:	dfc00215 	stw	ra,8(sp)
   4f434:	80000015 	stw	zero,0(r16)
   4f438:	00508340 	call	50834 <fstat>
   4f43c:	00ffffc4 	movi	r3,-1
   4f440:	10c00526 	beq	r2,r3,4f458 <_fstat_r+0x4c>
   4f444:	dfc00217 	ldw	ra,8(sp)
   4f448:	dc400117 	ldw	r17,4(sp)
   4f44c:	dc000017 	ldw	r16,0(sp)
   4f450:	dec00304 	addi	sp,sp,12
   4f454:	f800283a 	ret
   4f458:	80c00017 	ldw	r3,0(r16)
   4f45c:	183ff926 	beq	r3,zero,4f444 <_gp+0xffff22fc>
   4f460:	88c00015 	stw	r3,0(r17)
   4f464:	003ff706 	br	4f444 <_gp+0xffff22fc>

0004f468 <_isatty_r>:
   4f468:	defffd04 	addi	sp,sp,-12
   4f46c:	dc000015 	stw	r16,0(sp)
   4f470:	04000174 	movhi	r16,5
   4f474:	dc400115 	stw	r17,4(sp)
   4f478:	841c9c04 	addi	r16,r16,29296
   4f47c:	2023883a 	mov	r17,r4
   4f480:	2809883a 	mov	r4,r5
   4f484:	dfc00215 	stw	ra,8(sp)
   4f488:	80000015 	stw	zero,0(r16)
   4f48c:	00509280 	call	50928 <isatty>
   4f490:	00ffffc4 	movi	r3,-1
   4f494:	10c00526 	beq	r2,r3,4f4ac <_isatty_r+0x44>
   4f498:	dfc00217 	ldw	ra,8(sp)
   4f49c:	dc400117 	ldw	r17,4(sp)
   4f4a0:	dc000017 	ldw	r16,0(sp)
   4f4a4:	dec00304 	addi	sp,sp,12
   4f4a8:	f800283a 	ret
   4f4ac:	80c00017 	ldw	r3,0(r16)
   4f4b0:	183ff926 	beq	r3,zero,4f498 <_gp+0xffff2350>
   4f4b4:	88c00015 	stw	r3,0(r17)
   4f4b8:	003ff706 	br	4f498 <_gp+0xffff2350>

0004f4bc <_lseek_r>:
   4f4bc:	defffd04 	addi	sp,sp,-12
   4f4c0:	2805883a 	mov	r2,r5
   4f4c4:	dc000015 	stw	r16,0(sp)
   4f4c8:	04000174 	movhi	r16,5
   4f4cc:	dc400115 	stw	r17,4(sp)
   4f4d0:	300b883a 	mov	r5,r6
   4f4d4:	841c9c04 	addi	r16,r16,29296
   4f4d8:	2023883a 	mov	r17,r4
   4f4dc:	380d883a 	mov	r6,r7
   4f4e0:	1009883a 	mov	r4,r2
   4f4e4:	dfc00215 	stw	ra,8(sp)
   4f4e8:	80000015 	stw	zero,0(r16)
   4f4ec:	0050afc0 	call	50afc <lseek>
   4f4f0:	00ffffc4 	movi	r3,-1
   4f4f4:	10c00526 	beq	r2,r3,4f50c <_lseek_r+0x50>
   4f4f8:	dfc00217 	ldw	ra,8(sp)
   4f4fc:	dc400117 	ldw	r17,4(sp)
   4f500:	dc000017 	ldw	r16,0(sp)
   4f504:	dec00304 	addi	sp,sp,12
   4f508:	f800283a 	ret
   4f50c:	80c00017 	ldw	r3,0(r16)
   4f510:	183ff926 	beq	r3,zero,4f4f8 <_gp+0xffff23b0>
   4f514:	88c00015 	stw	r3,0(r17)
   4f518:	003ff706 	br	4f4f8 <_gp+0xffff23b0>

0004f51c <_read_r>:
   4f51c:	defffd04 	addi	sp,sp,-12
   4f520:	2805883a 	mov	r2,r5
   4f524:	dc000015 	stw	r16,0(sp)
   4f528:	04000174 	movhi	r16,5
   4f52c:	dc400115 	stw	r17,4(sp)
   4f530:	300b883a 	mov	r5,r6
   4f534:	841c9c04 	addi	r16,r16,29296
   4f538:	2023883a 	mov	r17,r4
   4f53c:	380d883a 	mov	r6,r7
   4f540:	1009883a 	mov	r4,r2
   4f544:	dfc00215 	stw	ra,8(sp)
   4f548:	80000015 	stw	zero,0(r16)
   4f54c:	0050cd80 	call	50cd8 <read>
   4f550:	00ffffc4 	movi	r3,-1
   4f554:	10c00526 	beq	r2,r3,4f56c <_read_r+0x50>
   4f558:	dfc00217 	ldw	ra,8(sp)
   4f55c:	dc400117 	ldw	r17,4(sp)
   4f560:	dc000017 	ldw	r16,0(sp)
   4f564:	dec00304 	addi	sp,sp,12
   4f568:	f800283a 	ret
   4f56c:	80c00017 	ldw	r3,0(r16)
   4f570:	183ff926 	beq	r3,zero,4f558 <_gp+0xffff2410>
   4f574:	88c00015 	stw	r3,0(r17)
   4f578:	003ff706 	br	4f558 <_gp+0xffff2410>

0004f57c <__swbuf_r>:
   4f57c:	defffb04 	addi	sp,sp,-20
   4f580:	dcc00315 	stw	r19,12(sp)
   4f584:	dc800215 	stw	r18,8(sp)
   4f588:	dc000015 	stw	r16,0(sp)
   4f58c:	dfc00415 	stw	ra,16(sp)
   4f590:	dc400115 	stw	r17,4(sp)
   4f594:	2025883a 	mov	r18,r4
   4f598:	2827883a 	mov	r19,r5
   4f59c:	3021883a 	mov	r16,r6
   4f5a0:	20000226 	beq	r4,zero,4f5ac <__swbuf_r+0x30>
   4f5a4:	20800e17 	ldw	r2,56(r4)
   4f5a8:	10004226 	beq	r2,zero,4f6b4 <__swbuf_r+0x138>
   4f5ac:	80800617 	ldw	r2,24(r16)
   4f5b0:	8100030b 	ldhu	r4,12(r16)
   4f5b4:	80800215 	stw	r2,8(r16)
   4f5b8:	2080020c 	andi	r2,r4,8
   4f5bc:	10003626 	beq	r2,zero,4f698 <__swbuf_r+0x11c>
   4f5c0:	80c00417 	ldw	r3,16(r16)
   4f5c4:	18003426 	beq	r3,zero,4f698 <__swbuf_r+0x11c>
   4f5c8:	2088000c 	andi	r2,r4,8192
   4f5cc:	9c403fcc 	andi	r17,r19,255
   4f5d0:	10001a26 	beq	r2,zero,4f63c <__swbuf_r+0xc0>
   4f5d4:	80800017 	ldw	r2,0(r16)
   4f5d8:	81000517 	ldw	r4,20(r16)
   4f5dc:	10c7c83a 	sub	r3,r2,r3
   4f5e0:	1900200e 	bge	r3,r4,4f664 <__swbuf_r+0xe8>
   4f5e4:	18c00044 	addi	r3,r3,1
   4f5e8:	81000217 	ldw	r4,8(r16)
   4f5ec:	11400044 	addi	r5,r2,1
   4f5f0:	81400015 	stw	r5,0(r16)
   4f5f4:	213fffc4 	addi	r4,r4,-1
   4f5f8:	81000215 	stw	r4,8(r16)
   4f5fc:	14c00005 	stb	r19,0(r2)
   4f600:	80800517 	ldw	r2,20(r16)
   4f604:	10c01e26 	beq	r2,r3,4f680 <__swbuf_r+0x104>
   4f608:	8080030b 	ldhu	r2,12(r16)
   4f60c:	1080004c 	andi	r2,r2,1
   4f610:	10000226 	beq	r2,zero,4f61c <__swbuf_r+0xa0>
   4f614:	00800284 	movi	r2,10
   4f618:	88801926 	beq	r17,r2,4f680 <__swbuf_r+0x104>
   4f61c:	8805883a 	mov	r2,r17
   4f620:	dfc00417 	ldw	ra,16(sp)
   4f624:	dcc00317 	ldw	r19,12(sp)
   4f628:	dc800217 	ldw	r18,8(sp)
   4f62c:	dc400117 	ldw	r17,4(sp)
   4f630:	dc000017 	ldw	r16,0(sp)
   4f634:	dec00504 	addi	sp,sp,20
   4f638:	f800283a 	ret
   4f63c:	81401917 	ldw	r5,100(r16)
   4f640:	00b7ffc4 	movi	r2,-8193
   4f644:	21080014 	ori	r4,r4,8192
   4f648:	2884703a 	and	r2,r5,r2
   4f64c:	80801915 	stw	r2,100(r16)
   4f650:	80800017 	ldw	r2,0(r16)
   4f654:	8100030d 	sth	r4,12(r16)
   4f658:	81000517 	ldw	r4,20(r16)
   4f65c:	10c7c83a 	sub	r3,r2,r3
   4f660:	193fe016 	blt	r3,r4,4f5e4 <_gp+0xffff249c>
   4f664:	800b883a 	mov	r5,r16
   4f668:	9009883a 	mov	r4,r18
   4f66c:	004a1680 	call	4a168 <_fflush_r>
   4f670:	1000071e 	bne	r2,zero,4f690 <__swbuf_r+0x114>
   4f674:	80800017 	ldw	r2,0(r16)
   4f678:	00c00044 	movi	r3,1
   4f67c:	003fda06 	br	4f5e8 <_gp+0xffff24a0>
   4f680:	800b883a 	mov	r5,r16
   4f684:	9009883a 	mov	r4,r18
   4f688:	004a1680 	call	4a168 <_fflush_r>
   4f68c:	103fe326 	beq	r2,zero,4f61c <_gp+0xffff24d4>
   4f690:	00bfffc4 	movi	r2,-1
   4f694:	003fe206 	br	4f620 <_gp+0xffff24d8>
   4f698:	800b883a 	mov	r5,r16
   4f69c:	9009883a 	mov	r4,r18
   4f6a0:	00485480 	call	48548 <__swsetup_r>
   4f6a4:	103ffa1e 	bne	r2,zero,4f690 <_gp+0xffff2548>
   4f6a8:	8100030b 	ldhu	r4,12(r16)
   4f6ac:	80c00417 	ldw	r3,16(r16)
   4f6b0:	003fc506 	br	4f5c8 <_gp+0xffff2480>
   4f6b4:	004a5540 	call	4a554 <__sinit>
   4f6b8:	003fbc06 	br	4f5ac <_gp+0xffff2464>

0004f6bc <__swbuf>:
   4f6bc:	00800174 	movhi	r2,5
   4f6c0:	10945404 	addi	r2,r2,20816
   4f6c4:	280d883a 	mov	r6,r5
   4f6c8:	200b883a 	mov	r5,r4
   4f6cc:	11000017 	ldw	r4,0(r2)
   4f6d0:	004f57c1 	jmpi	4f57c <__swbuf_r>

0004f6d4 <_wcrtomb_r>:
   4f6d4:	defff604 	addi	sp,sp,-40
   4f6d8:	00800174 	movhi	r2,5
   4f6dc:	dc800815 	stw	r18,32(sp)
   4f6e0:	dc400715 	stw	r17,28(sp)
   4f6e4:	dc000615 	stw	r16,24(sp)
   4f6e8:	10945804 	addi	r2,r2,20832
   4f6ec:	dfc00915 	stw	ra,36(sp)
   4f6f0:	2021883a 	mov	r16,r4
   4f6f4:	3823883a 	mov	r17,r7
   4f6f8:	14800017 	ldw	r18,0(r2)
   4f6fc:	28001426 	beq	r5,zero,4f750 <_wcrtomb_r+0x7c>
   4f700:	d9400415 	stw	r5,16(sp)
   4f704:	d9800515 	stw	r6,20(sp)
   4f708:	004b0a40 	call	4b0a4 <__locale_charset>
   4f70c:	d9800517 	ldw	r6,20(sp)
   4f710:	d9400417 	ldw	r5,16(sp)
   4f714:	100f883a 	mov	r7,r2
   4f718:	dc400015 	stw	r17,0(sp)
   4f71c:	8009883a 	mov	r4,r16
   4f720:	903ee83a 	callr	r18
   4f724:	00ffffc4 	movi	r3,-1
   4f728:	10c0031e 	bne	r2,r3,4f738 <_wcrtomb_r+0x64>
   4f72c:	88000015 	stw	zero,0(r17)
   4f730:	00c02284 	movi	r3,138
   4f734:	80c00015 	stw	r3,0(r16)
   4f738:	dfc00917 	ldw	ra,36(sp)
   4f73c:	dc800817 	ldw	r18,32(sp)
   4f740:	dc400717 	ldw	r17,28(sp)
   4f744:	dc000617 	ldw	r16,24(sp)
   4f748:	dec00a04 	addi	sp,sp,40
   4f74c:	f800283a 	ret
   4f750:	004b0a40 	call	4b0a4 <__locale_charset>
   4f754:	100f883a 	mov	r7,r2
   4f758:	dc400015 	stw	r17,0(sp)
   4f75c:	000d883a 	mov	r6,zero
   4f760:	d9400104 	addi	r5,sp,4
   4f764:	8009883a 	mov	r4,r16
   4f768:	903ee83a 	callr	r18
   4f76c:	003fed06 	br	4f724 <_gp+0xffff25dc>

0004f770 <wcrtomb>:
   4f770:	defff604 	addi	sp,sp,-40
   4f774:	00800174 	movhi	r2,5
   4f778:	dc800615 	stw	r18,24(sp)
   4f77c:	dc400515 	stw	r17,20(sp)
   4f780:	10945404 	addi	r2,r2,20816
   4f784:	dfc00915 	stw	ra,36(sp)
   4f788:	dd000815 	stw	r20,32(sp)
   4f78c:	dcc00715 	stw	r19,28(sp)
   4f790:	dc000415 	stw	r16,16(sp)
   4f794:	3025883a 	mov	r18,r6
   4f798:	14400017 	ldw	r17,0(r2)
   4f79c:	20001926 	beq	r4,zero,4f804 <wcrtomb+0x94>
   4f7a0:	00800174 	movhi	r2,5
   4f7a4:	10945804 	addi	r2,r2,20832
   4f7a8:	15000017 	ldw	r20,0(r2)
   4f7ac:	2021883a 	mov	r16,r4
   4f7b0:	2827883a 	mov	r19,r5
   4f7b4:	004b0a40 	call	4b0a4 <__locale_charset>
   4f7b8:	100f883a 	mov	r7,r2
   4f7bc:	dc800015 	stw	r18,0(sp)
   4f7c0:	980d883a 	mov	r6,r19
   4f7c4:	800b883a 	mov	r5,r16
   4f7c8:	8809883a 	mov	r4,r17
   4f7cc:	a03ee83a 	callr	r20
   4f7d0:	00ffffc4 	movi	r3,-1
   4f7d4:	10c0031e 	bne	r2,r3,4f7e4 <wcrtomb+0x74>
   4f7d8:	90000015 	stw	zero,0(r18)
   4f7dc:	00c02284 	movi	r3,138
   4f7e0:	88c00015 	stw	r3,0(r17)
   4f7e4:	dfc00917 	ldw	ra,36(sp)
   4f7e8:	dd000817 	ldw	r20,32(sp)
   4f7ec:	dcc00717 	ldw	r19,28(sp)
   4f7f0:	dc800617 	ldw	r18,24(sp)
   4f7f4:	dc400517 	ldw	r17,20(sp)
   4f7f8:	dc000417 	ldw	r16,16(sp)
   4f7fc:	dec00a04 	addi	sp,sp,40
   4f800:	f800283a 	ret
   4f804:	00800174 	movhi	r2,5
   4f808:	10945804 	addi	r2,r2,20832
   4f80c:	14000017 	ldw	r16,0(r2)
   4f810:	004b0a40 	call	4b0a4 <__locale_charset>
   4f814:	100f883a 	mov	r7,r2
   4f818:	dc800015 	stw	r18,0(sp)
   4f81c:	000d883a 	mov	r6,zero
   4f820:	d9400104 	addi	r5,sp,4
   4f824:	8809883a 	mov	r4,r17
   4f828:	803ee83a 	callr	r16
   4f82c:	003fe806 	br	4f7d0 <_gp+0xffff2688>

0004f830 <__ascii_wctomb>:
   4f830:	28000526 	beq	r5,zero,4f848 <__ascii_wctomb+0x18>
   4f834:	00803fc4 	movi	r2,255
   4f838:	11800536 	bltu	r2,r6,4f850 <__ascii_wctomb+0x20>
   4f83c:	29800005 	stb	r6,0(r5)
   4f840:	00800044 	movi	r2,1
   4f844:	f800283a 	ret
   4f848:	0005883a 	mov	r2,zero
   4f84c:	f800283a 	ret
   4f850:	00802284 	movi	r2,138
   4f854:	20800015 	stw	r2,0(r4)
   4f858:	00bfffc4 	movi	r2,-1
   4f85c:	f800283a 	ret

0004f860 <_wctomb_r>:
   4f860:	00800174 	movhi	r2,5
   4f864:	defff904 	addi	sp,sp,-28
   4f868:	10945804 	addi	r2,r2,20832
   4f86c:	dfc00615 	stw	ra,24(sp)
   4f870:	dc400515 	stw	r17,20(sp)
   4f874:	dc000415 	stw	r16,16(sp)
   4f878:	3823883a 	mov	r17,r7
   4f87c:	14000017 	ldw	r16,0(r2)
   4f880:	d9000115 	stw	r4,4(sp)
   4f884:	d9400215 	stw	r5,8(sp)
   4f888:	d9800315 	stw	r6,12(sp)
   4f88c:	004b0a40 	call	4b0a4 <__locale_charset>
   4f890:	d9800317 	ldw	r6,12(sp)
   4f894:	d9400217 	ldw	r5,8(sp)
   4f898:	d9000117 	ldw	r4,4(sp)
   4f89c:	100f883a 	mov	r7,r2
   4f8a0:	dc400015 	stw	r17,0(sp)
   4f8a4:	803ee83a 	callr	r16
   4f8a8:	dfc00617 	ldw	ra,24(sp)
   4f8ac:	dc400517 	ldw	r17,20(sp)
   4f8b0:	dc000417 	ldw	r16,16(sp)
   4f8b4:	dec00704 	addi	sp,sp,28
   4f8b8:	f800283a 	ret

0004f8bc <__muldi3>:
   4f8bc:	defff604 	addi	sp,sp,-40
   4f8c0:	dd800615 	stw	r22,24(sp)
   4f8c4:	dd400515 	stw	r21,20(sp)
   4f8c8:	dc400115 	stw	r17,4(sp)
   4f8cc:	357fffcc 	andi	r21,r6,65535
   4f8d0:	2022d43a 	srli	r17,r4,16
   4f8d4:	25bfffcc 	andi	r22,r4,65535
   4f8d8:	dcc00315 	stw	r19,12(sp)
   4f8dc:	dc800215 	stw	r18,8(sp)
   4f8e0:	2027883a 	mov	r19,r4
   4f8e4:	2825883a 	mov	r18,r5
   4f8e8:	b009883a 	mov	r4,r22
   4f8ec:	a80b883a 	mov	r5,r21
   4f8f0:	dfc00915 	stw	ra,36(sp)
   4f8f4:	df000815 	stw	fp,32(sp)
   4f8f8:	ddc00715 	stw	r23,28(sp)
   4f8fc:	3839883a 	mov	fp,r7
   4f900:	302ed43a 	srli	r23,r6,16
   4f904:	dd000415 	stw	r20,16(sp)
   4f908:	dc000015 	stw	r16,0(sp)
   4f90c:	3029883a 	mov	r20,r6
   4f910:	0041f400 	call	41f40 <__mulsi3>
   4f914:	a80b883a 	mov	r5,r21
   4f918:	8809883a 	mov	r4,r17
   4f91c:	1021883a 	mov	r16,r2
   4f920:	0041f400 	call	41f40 <__mulsi3>
   4f924:	8809883a 	mov	r4,r17
   4f928:	b80b883a 	mov	r5,r23
   4f92c:	102b883a 	mov	r21,r2
   4f930:	0041f400 	call	41f40 <__mulsi3>
   4f934:	b80b883a 	mov	r5,r23
   4f938:	b009883a 	mov	r4,r22
   4f93c:	1023883a 	mov	r17,r2
   4f940:	0041f400 	call	41f40 <__mulsi3>
   4f944:	8006d43a 	srli	r3,r16,16
   4f948:	1545883a 	add	r2,r2,r21
   4f94c:	1885883a 	add	r2,r3,r2
   4f950:	1540022e 	bgeu	r2,r21,4f95c <__muldi3+0xa0>
   4f954:	00c00074 	movhi	r3,1
   4f958:	88e3883a 	add	r17,r17,r3
   4f95c:	1006d43a 	srli	r3,r2,16
   4f960:	1004943a 	slli	r2,r2,16
   4f964:	e00b883a 	mov	r5,fp
   4f968:	9809883a 	mov	r4,r19
   4f96c:	843fffcc 	andi	r16,r16,65535
   4f970:	1c63883a 	add	r17,r3,r17
   4f974:	1421883a 	add	r16,r2,r16
   4f978:	0041f400 	call	41f40 <__mulsi3>
   4f97c:	900b883a 	mov	r5,r18
   4f980:	a009883a 	mov	r4,r20
   4f984:	1027883a 	mov	r19,r2
   4f988:	0041f400 	call	41f40 <__mulsi3>
   4f98c:	9885883a 	add	r2,r19,r2
   4f990:	1447883a 	add	r3,r2,r17
   4f994:	8005883a 	mov	r2,r16
   4f998:	dfc00917 	ldw	ra,36(sp)
   4f99c:	df000817 	ldw	fp,32(sp)
   4f9a0:	ddc00717 	ldw	r23,28(sp)
   4f9a4:	dd800617 	ldw	r22,24(sp)
   4f9a8:	dd400517 	ldw	r21,20(sp)
   4f9ac:	dd000417 	ldw	r20,16(sp)
   4f9b0:	dcc00317 	ldw	r19,12(sp)
   4f9b4:	dc800217 	ldw	r18,8(sp)
   4f9b8:	dc400117 	ldw	r17,4(sp)
   4f9bc:	dc000017 	ldw	r16,0(sp)
   4f9c0:	dec00a04 	addi	sp,sp,40
   4f9c4:	f800283a 	ret

0004f9c8 <__udivdi3>:
   4f9c8:	defff404 	addi	sp,sp,-48
   4f9cc:	dcc00515 	stw	r19,20(sp)
   4f9d0:	dc000215 	stw	r16,8(sp)
   4f9d4:	dfc00b15 	stw	ra,44(sp)
   4f9d8:	df000a15 	stw	fp,40(sp)
   4f9dc:	ddc00915 	stw	r23,36(sp)
   4f9e0:	dd800815 	stw	r22,32(sp)
   4f9e4:	dd400715 	stw	r21,28(sp)
   4f9e8:	dd000615 	stw	r20,24(sp)
   4f9ec:	dc800415 	stw	r18,16(sp)
   4f9f0:	dc400315 	stw	r17,12(sp)
   4f9f4:	2027883a 	mov	r19,r4
   4f9f8:	2821883a 	mov	r16,r5
   4f9fc:	3800461e 	bne	r7,zero,4fb18 <__udivdi3+0x150>
   4fa00:	3023883a 	mov	r17,r6
   4fa04:	2025883a 	mov	r18,r4
   4fa08:	2980572e 	bgeu	r5,r6,4fb68 <__udivdi3+0x1a0>
   4fa0c:	00bfffd4 	movui	r2,65535
   4fa10:	282d883a 	mov	r22,r5
   4fa14:	1180b236 	bltu	r2,r6,4fce0 <__udivdi3+0x318>
   4fa18:	00803fc4 	movi	r2,255
   4fa1c:	1185803a 	cmpltu	r2,r2,r6
   4fa20:	100490fa 	slli	r2,r2,3
   4fa24:	3086d83a 	srl	r3,r6,r2
   4fa28:	01000174 	movhi	r4,5
   4fa2c:	210b7204 	addi	r4,r4,11720
   4fa30:	20c7883a 	add	r3,r4,r3
   4fa34:	18c00003 	ldbu	r3,0(r3)
   4fa38:	1885883a 	add	r2,r3,r2
   4fa3c:	00c00804 	movi	r3,32
   4fa40:	1887c83a 	sub	r3,r3,r2
   4fa44:	18000526 	beq	r3,zero,4fa5c <__udivdi3+0x94>
   4fa48:	80e0983a 	sll	r16,r16,r3
   4fa4c:	9884d83a 	srl	r2,r19,r2
   4fa50:	30e2983a 	sll	r17,r6,r3
   4fa54:	98e4983a 	sll	r18,r19,r3
   4fa58:	142cb03a 	or	r22,r2,r16
   4fa5c:	882ad43a 	srli	r21,r17,16
   4fa60:	b009883a 	mov	r4,r22
   4fa64:	8d3fffcc 	andi	r20,r17,65535
   4fa68:	a80b883a 	mov	r5,r21
   4fa6c:	0041ee80 	call	41ee8 <__umodsi3>
   4fa70:	b009883a 	mov	r4,r22
   4fa74:	a80b883a 	mov	r5,r21
   4fa78:	1027883a 	mov	r19,r2
   4fa7c:	0041e840 	call	41e84 <__udivsi3>
   4fa80:	100b883a 	mov	r5,r2
   4fa84:	a009883a 	mov	r4,r20
   4fa88:	102d883a 	mov	r22,r2
   4fa8c:	0041f400 	call	41f40 <__mulsi3>
   4fa90:	9826943a 	slli	r19,r19,16
   4fa94:	9006d43a 	srli	r3,r18,16
   4fa98:	1cc6b03a 	or	r3,r3,r19
   4fa9c:	1880052e 	bgeu	r3,r2,4fab4 <__udivdi3+0xec>
   4faa0:	1c47883a 	add	r3,r3,r17
   4faa4:	b13fffc4 	addi	r4,r22,-1
   4faa8:	1c400136 	bltu	r3,r17,4fab0 <__udivdi3+0xe8>
   4faac:	18814236 	bltu	r3,r2,4ffb8 <__udivdi3+0x5f0>
   4fab0:	202d883a 	mov	r22,r4
   4fab4:	18a1c83a 	sub	r16,r3,r2
   4fab8:	8009883a 	mov	r4,r16
   4fabc:	a80b883a 	mov	r5,r21
   4fac0:	0041ee80 	call	41ee8 <__umodsi3>
   4fac4:	1027883a 	mov	r19,r2
   4fac8:	8009883a 	mov	r4,r16
   4facc:	a80b883a 	mov	r5,r21
   4fad0:	9826943a 	slli	r19,r19,16
   4fad4:	0041e840 	call	41e84 <__udivsi3>
   4fad8:	100b883a 	mov	r5,r2
   4fadc:	a009883a 	mov	r4,r20
   4fae0:	94bfffcc 	andi	r18,r18,65535
   4fae4:	1021883a 	mov	r16,r2
   4fae8:	94e4b03a 	or	r18,r18,r19
   4faec:	0041f400 	call	41f40 <__mulsi3>
   4faf0:	9080052e 	bgeu	r18,r2,4fb08 <__udivdi3+0x140>
   4faf4:	8ca5883a 	add	r18,r17,r18
   4faf8:	80ffffc4 	addi	r3,r16,-1
   4fafc:	94410c36 	bltu	r18,r17,4ff30 <__udivdi3+0x568>
   4fb00:	90810b2e 	bgeu	r18,r2,4ff30 <__udivdi3+0x568>
   4fb04:	843fff84 	addi	r16,r16,-2
   4fb08:	b004943a 	slli	r2,r22,16
   4fb0c:	0007883a 	mov	r3,zero
   4fb10:	1404b03a 	or	r2,r2,r16
   4fb14:	00005e06 	br	4fc90 <__udivdi3+0x2c8>
   4fb18:	29c05b36 	bltu	r5,r7,4fc88 <__udivdi3+0x2c0>
   4fb1c:	00bfffd4 	movui	r2,65535
   4fb20:	11c0672e 	bgeu	r2,r7,4fcc0 <__udivdi3+0x2f8>
   4fb24:	00804034 	movhi	r2,256
   4fb28:	10bfffc4 	addi	r2,r2,-1
   4fb2c:	11c10a36 	bltu	r2,r7,4ff58 <__udivdi3+0x590>
   4fb30:	00800404 	movi	r2,16
   4fb34:	3886d83a 	srl	r3,r7,r2
   4fb38:	01000174 	movhi	r4,5
   4fb3c:	210b7204 	addi	r4,r4,11720
   4fb40:	20c7883a 	add	r3,r4,r3
   4fb44:	18c00003 	ldbu	r3,0(r3)
   4fb48:	05c00804 	movi	r23,32
   4fb4c:	1885883a 	add	r2,r3,r2
   4fb50:	b8afc83a 	sub	r23,r23,r2
   4fb54:	b800671e 	bne	r23,zero,4fcf4 <__udivdi3+0x32c>
   4fb58:	3c010536 	bltu	r7,r16,4ff70 <__udivdi3+0x5a8>
   4fb5c:	9985403a 	cmpgeu	r2,r19,r6
   4fb60:	0007883a 	mov	r3,zero
   4fb64:	00004a06 	br	4fc90 <__udivdi3+0x2c8>
   4fb68:	3000041e 	bne	r6,zero,4fb7c <__udivdi3+0x1b4>
   4fb6c:	000b883a 	mov	r5,zero
   4fb70:	01000044 	movi	r4,1
   4fb74:	0041e840 	call	41e84 <__udivsi3>
   4fb78:	1023883a 	mov	r17,r2
   4fb7c:	00bfffd4 	movui	r2,65535
   4fb80:	1440532e 	bgeu	r2,r17,4fcd0 <__udivdi3+0x308>
   4fb84:	00804034 	movhi	r2,256
   4fb88:	10bfffc4 	addi	r2,r2,-1
   4fb8c:	1440f436 	bltu	r2,r17,4ff60 <__udivdi3+0x598>
   4fb90:	00800404 	movi	r2,16
   4fb94:	8886d83a 	srl	r3,r17,r2
   4fb98:	01000174 	movhi	r4,5
   4fb9c:	210b7204 	addi	r4,r4,11720
   4fba0:	20c7883a 	add	r3,r4,r3
   4fba4:	18c00003 	ldbu	r3,0(r3)
   4fba8:	1885883a 	add	r2,r3,r2
   4fbac:	00c00804 	movi	r3,32
   4fbb0:	1887c83a 	sub	r3,r3,r2
   4fbb4:	1800a51e 	bne	r3,zero,4fe4c <__udivdi3+0x484>
   4fbb8:	882ad43a 	srli	r21,r17,16
   4fbbc:	8461c83a 	sub	r16,r16,r17
   4fbc0:	8d3fffcc 	andi	r20,r17,65535
   4fbc4:	00c00044 	movi	r3,1
   4fbc8:	a80b883a 	mov	r5,r21
   4fbcc:	8009883a 	mov	r4,r16
   4fbd0:	d8c00115 	stw	r3,4(sp)
   4fbd4:	0041ee80 	call	41ee8 <__umodsi3>
   4fbd8:	a80b883a 	mov	r5,r21
   4fbdc:	8009883a 	mov	r4,r16
   4fbe0:	1027883a 	mov	r19,r2
   4fbe4:	0041e840 	call	41e84 <__udivsi3>
   4fbe8:	a00b883a 	mov	r5,r20
   4fbec:	1009883a 	mov	r4,r2
   4fbf0:	102d883a 	mov	r22,r2
   4fbf4:	0041f400 	call	41f40 <__mulsi3>
   4fbf8:	9826943a 	slli	r19,r19,16
   4fbfc:	900ed43a 	srli	r7,r18,16
   4fc00:	d8c00117 	ldw	r3,4(sp)
   4fc04:	3cceb03a 	or	r7,r7,r19
   4fc08:	3880052e 	bgeu	r7,r2,4fc20 <__udivdi3+0x258>
   4fc0c:	3c4f883a 	add	r7,r7,r17
   4fc10:	b13fffc4 	addi	r4,r22,-1
   4fc14:	3c400136 	bltu	r7,r17,4fc1c <__udivdi3+0x254>
   4fc18:	3880e436 	bltu	r7,r2,4ffac <__udivdi3+0x5e4>
   4fc1c:	202d883a 	mov	r22,r4
   4fc20:	38a1c83a 	sub	r16,r7,r2
   4fc24:	8009883a 	mov	r4,r16
   4fc28:	a80b883a 	mov	r5,r21
   4fc2c:	d8c00115 	stw	r3,4(sp)
   4fc30:	0041ee80 	call	41ee8 <__umodsi3>
   4fc34:	1027883a 	mov	r19,r2
   4fc38:	8009883a 	mov	r4,r16
   4fc3c:	a80b883a 	mov	r5,r21
   4fc40:	9826943a 	slli	r19,r19,16
   4fc44:	0041e840 	call	41e84 <__udivsi3>
   4fc48:	a00b883a 	mov	r5,r20
   4fc4c:	1009883a 	mov	r4,r2
   4fc50:	94bfffcc 	andi	r18,r18,65535
   4fc54:	1021883a 	mov	r16,r2
   4fc58:	94e4b03a 	or	r18,r18,r19
   4fc5c:	0041f400 	call	41f40 <__mulsi3>
   4fc60:	d8c00117 	ldw	r3,4(sp)
   4fc64:	9080052e 	bgeu	r18,r2,4fc7c <__udivdi3+0x2b4>
   4fc68:	8ca5883a 	add	r18,r17,r18
   4fc6c:	813fffc4 	addi	r4,r16,-1
   4fc70:	9440ad36 	bltu	r18,r17,4ff28 <__udivdi3+0x560>
   4fc74:	9080ac2e 	bgeu	r18,r2,4ff28 <__udivdi3+0x560>
   4fc78:	843fff84 	addi	r16,r16,-2
   4fc7c:	b004943a 	slli	r2,r22,16
   4fc80:	1404b03a 	or	r2,r2,r16
   4fc84:	00000206 	br	4fc90 <__udivdi3+0x2c8>
   4fc88:	0007883a 	mov	r3,zero
   4fc8c:	0005883a 	mov	r2,zero
   4fc90:	dfc00b17 	ldw	ra,44(sp)
   4fc94:	df000a17 	ldw	fp,40(sp)
   4fc98:	ddc00917 	ldw	r23,36(sp)
   4fc9c:	dd800817 	ldw	r22,32(sp)
   4fca0:	dd400717 	ldw	r21,28(sp)
   4fca4:	dd000617 	ldw	r20,24(sp)
   4fca8:	dcc00517 	ldw	r19,20(sp)
   4fcac:	dc800417 	ldw	r18,16(sp)
   4fcb0:	dc400317 	ldw	r17,12(sp)
   4fcb4:	dc000217 	ldw	r16,8(sp)
   4fcb8:	dec00c04 	addi	sp,sp,48
   4fcbc:	f800283a 	ret
   4fcc0:	00803fc4 	movi	r2,255
   4fcc4:	11c5803a 	cmpltu	r2,r2,r7
   4fcc8:	100490fa 	slli	r2,r2,3
   4fccc:	003f9906 	br	4fb34 <_gp+0xffff29ec>
   4fcd0:	00803fc4 	movi	r2,255
   4fcd4:	1445803a 	cmpltu	r2,r2,r17
   4fcd8:	100490fa 	slli	r2,r2,3
   4fcdc:	003fad06 	br	4fb94 <_gp+0xffff2a4c>
   4fce0:	00804034 	movhi	r2,256
   4fce4:	10bfffc4 	addi	r2,r2,-1
   4fce8:	11809f36 	bltu	r2,r6,4ff68 <__udivdi3+0x5a0>
   4fcec:	00800404 	movi	r2,16
   4fcf0:	003f4c06 	br	4fa24 <_gp+0xffff28dc>
   4fcf4:	3dce983a 	sll	r7,r7,r23
   4fcf8:	30b8d83a 	srl	fp,r6,r2
   4fcfc:	80a2d83a 	srl	r17,r16,r2
   4fd00:	35cc983a 	sll	r6,r6,r23
   4fd04:	3f38b03a 	or	fp,r7,fp
   4fd08:	e024d43a 	srli	r18,fp,16
   4fd0c:	9884d83a 	srl	r2,r19,r2
   4fd10:	85e0983a 	sll	r16,r16,r23
   4fd14:	8809883a 	mov	r4,r17
   4fd18:	900b883a 	mov	r5,r18
   4fd1c:	d9800015 	stw	r6,0(sp)
   4fd20:	1420b03a 	or	r16,r2,r16
   4fd24:	0041ee80 	call	41ee8 <__umodsi3>
   4fd28:	900b883a 	mov	r5,r18
   4fd2c:	8809883a 	mov	r4,r17
   4fd30:	1029883a 	mov	r20,r2
   4fd34:	e5bfffcc 	andi	r22,fp,65535
   4fd38:	0041e840 	call	41e84 <__udivsi3>
   4fd3c:	100b883a 	mov	r5,r2
   4fd40:	b009883a 	mov	r4,r22
   4fd44:	102b883a 	mov	r21,r2
   4fd48:	0041f400 	call	41f40 <__mulsi3>
   4fd4c:	a028943a 	slli	r20,r20,16
   4fd50:	8006d43a 	srli	r3,r16,16
   4fd54:	1d06b03a 	or	r3,r3,r20
   4fd58:	1880042e 	bgeu	r3,r2,4fd6c <__udivdi3+0x3a4>
   4fd5c:	1f07883a 	add	r3,r3,fp
   4fd60:	a93fffc4 	addi	r4,r21,-1
   4fd64:	1f00892e 	bgeu	r3,fp,4ff8c <__udivdi3+0x5c4>
   4fd68:	202b883a 	mov	r21,r4
   4fd6c:	18a3c83a 	sub	r17,r3,r2
   4fd70:	8809883a 	mov	r4,r17
   4fd74:	900b883a 	mov	r5,r18
   4fd78:	0041ee80 	call	41ee8 <__umodsi3>
   4fd7c:	1029883a 	mov	r20,r2
   4fd80:	8809883a 	mov	r4,r17
   4fd84:	900b883a 	mov	r5,r18
   4fd88:	a028943a 	slli	r20,r20,16
   4fd8c:	0041e840 	call	41e84 <__udivsi3>
   4fd90:	100b883a 	mov	r5,r2
   4fd94:	b009883a 	mov	r4,r22
   4fd98:	843fffcc 	andi	r16,r16,65535
   4fd9c:	1023883a 	mov	r17,r2
   4fda0:	8520b03a 	or	r16,r16,r20
   4fda4:	0041f400 	call	41f40 <__mulsi3>
   4fda8:	8080042e 	bgeu	r16,r2,4fdbc <__udivdi3+0x3f4>
   4fdac:	8721883a 	add	r16,r16,fp
   4fdb0:	88ffffc4 	addi	r3,r17,-1
   4fdb4:	8700712e 	bgeu	r16,fp,4ff7c <__udivdi3+0x5b4>
   4fdb8:	1823883a 	mov	r17,r3
   4fdbc:	a80e943a 	slli	r7,r21,16
   4fdc0:	d8c00017 	ldw	r3,0(sp)
   4fdc4:	80a1c83a 	sub	r16,r16,r2
   4fdc8:	3c64b03a 	or	r18,r7,r17
   4fdcc:	1d3fffcc 	andi	r20,r3,65535
   4fdd0:	9022d43a 	srli	r17,r18,16
   4fdd4:	95bfffcc 	andi	r22,r18,65535
   4fdd8:	a00b883a 	mov	r5,r20
   4fddc:	b009883a 	mov	r4,r22
   4fde0:	182ad43a 	srli	r21,r3,16
   4fde4:	0041f400 	call	41f40 <__mulsi3>
   4fde8:	a00b883a 	mov	r5,r20
   4fdec:	8809883a 	mov	r4,r17
   4fdf0:	1039883a 	mov	fp,r2
   4fdf4:	0041f400 	call	41f40 <__mulsi3>
   4fdf8:	8809883a 	mov	r4,r17
   4fdfc:	a80b883a 	mov	r5,r21
   4fe00:	1029883a 	mov	r20,r2
   4fe04:	0041f400 	call	41f40 <__mulsi3>
   4fe08:	a80b883a 	mov	r5,r21
   4fe0c:	b009883a 	mov	r4,r22
   4fe10:	1023883a 	mov	r17,r2
   4fe14:	0041f400 	call	41f40 <__mulsi3>
   4fe18:	e006d43a 	srli	r3,fp,16
   4fe1c:	1505883a 	add	r2,r2,r20
   4fe20:	1887883a 	add	r3,r3,r2
   4fe24:	1d00022e 	bgeu	r3,r20,4fe30 <__udivdi3+0x468>
   4fe28:	00800074 	movhi	r2,1
   4fe2c:	88a3883a 	add	r17,r17,r2
   4fe30:	1804d43a 	srli	r2,r3,16
   4fe34:	1463883a 	add	r17,r2,r17
   4fe38:	84404436 	bltu	r16,r17,4ff4c <__udivdi3+0x584>
   4fe3c:	84403e26 	beq	r16,r17,4ff38 <__udivdi3+0x570>
   4fe40:	9005883a 	mov	r2,r18
   4fe44:	0007883a 	mov	r3,zero
   4fe48:	003f9106 	br	4fc90 <_gp+0xffff2b48>
   4fe4c:	88e2983a 	sll	r17,r17,r3
   4fe50:	80aed83a 	srl	r23,r16,r2
   4fe54:	80e0983a 	sll	r16,r16,r3
   4fe58:	882ad43a 	srli	r21,r17,16
   4fe5c:	9884d83a 	srl	r2,r19,r2
   4fe60:	b809883a 	mov	r4,r23
   4fe64:	a80b883a 	mov	r5,r21
   4fe68:	98e4983a 	sll	r18,r19,r3
   4fe6c:	142cb03a 	or	r22,r2,r16
   4fe70:	0041ee80 	call	41ee8 <__umodsi3>
   4fe74:	b809883a 	mov	r4,r23
   4fe78:	a80b883a 	mov	r5,r21
   4fe7c:	1027883a 	mov	r19,r2
   4fe80:	8d3fffcc 	andi	r20,r17,65535
   4fe84:	0041e840 	call	41e84 <__udivsi3>
   4fe88:	a009883a 	mov	r4,r20
   4fe8c:	100b883a 	mov	r5,r2
   4fe90:	102f883a 	mov	r23,r2
   4fe94:	0041f400 	call	41f40 <__mulsi3>
   4fe98:	9826943a 	slli	r19,r19,16
   4fe9c:	b008d43a 	srli	r4,r22,16
   4fea0:	24c8b03a 	or	r4,r4,r19
   4fea4:	2080062e 	bgeu	r4,r2,4fec0 <__udivdi3+0x4f8>
   4fea8:	2449883a 	add	r4,r4,r17
   4feac:	b8ffffc4 	addi	r3,r23,-1
   4feb0:	24403c36 	bltu	r4,r17,4ffa4 <__udivdi3+0x5dc>
   4feb4:	20803b2e 	bgeu	r4,r2,4ffa4 <__udivdi3+0x5dc>
   4feb8:	bdffff84 	addi	r23,r23,-2
   4febc:	2449883a 	add	r4,r4,r17
   4fec0:	20a1c83a 	sub	r16,r4,r2
   4fec4:	a80b883a 	mov	r5,r21
   4fec8:	8009883a 	mov	r4,r16
   4fecc:	0041ee80 	call	41ee8 <__umodsi3>
   4fed0:	a80b883a 	mov	r5,r21
   4fed4:	8009883a 	mov	r4,r16
   4fed8:	1027883a 	mov	r19,r2
   4fedc:	0041e840 	call	41e84 <__udivsi3>
   4fee0:	a009883a 	mov	r4,r20
   4fee4:	100b883a 	mov	r5,r2
   4fee8:	9826943a 	slli	r19,r19,16
   4feec:	1039883a 	mov	fp,r2
   4fef0:	0041f400 	call	41f40 <__mulsi3>
   4fef4:	b13fffcc 	andi	r4,r22,65535
   4fef8:	24c8b03a 	or	r4,r4,r19
   4fefc:	2080062e 	bgeu	r4,r2,4ff18 <__udivdi3+0x550>
   4ff00:	2449883a 	add	r4,r4,r17
   4ff04:	e0ffffc4 	addi	r3,fp,-1
   4ff08:	24402436 	bltu	r4,r17,4ff9c <__udivdi3+0x5d4>
   4ff0c:	2080232e 	bgeu	r4,r2,4ff9c <__udivdi3+0x5d4>
   4ff10:	e73fff84 	addi	fp,fp,-2
   4ff14:	2449883a 	add	r4,r4,r17
   4ff18:	b82e943a 	slli	r23,r23,16
   4ff1c:	20a1c83a 	sub	r16,r4,r2
   4ff20:	bf06b03a 	or	r3,r23,fp
   4ff24:	003f2806 	br	4fbc8 <_gp+0xffff2a80>
   4ff28:	2021883a 	mov	r16,r4
   4ff2c:	003f5306 	br	4fc7c <_gp+0xffff2b34>
   4ff30:	1821883a 	mov	r16,r3
   4ff34:	003ef406 	br	4fb08 <_gp+0xffff29c0>
   4ff38:	1806943a 	slli	r3,r3,16
   4ff3c:	9de6983a 	sll	r19,r19,r23
   4ff40:	e73fffcc 	andi	fp,fp,65535
   4ff44:	1f07883a 	add	r3,r3,fp
   4ff48:	98ffbd2e 	bgeu	r19,r3,4fe40 <_gp+0xffff2cf8>
   4ff4c:	90bfffc4 	addi	r2,r18,-1
   4ff50:	0007883a 	mov	r3,zero
   4ff54:	003f4e06 	br	4fc90 <_gp+0xffff2b48>
   4ff58:	00800604 	movi	r2,24
   4ff5c:	003ef506 	br	4fb34 <_gp+0xffff29ec>
   4ff60:	00800604 	movi	r2,24
   4ff64:	003f0b06 	br	4fb94 <_gp+0xffff2a4c>
   4ff68:	00800604 	movi	r2,24
   4ff6c:	003ead06 	br	4fa24 <_gp+0xffff28dc>
   4ff70:	0007883a 	mov	r3,zero
   4ff74:	00800044 	movi	r2,1
   4ff78:	003f4506 	br	4fc90 <_gp+0xffff2b48>
   4ff7c:	80bf8e2e 	bgeu	r16,r2,4fdb8 <_gp+0xffff2c70>
   4ff80:	8c7fff84 	addi	r17,r17,-2
   4ff84:	8721883a 	add	r16,r16,fp
   4ff88:	003f8c06 	br	4fdbc <_gp+0xffff2c74>
   4ff8c:	18bf762e 	bgeu	r3,r2,4fd68 <_gp+0xffff2c20>
   4ff90:	ad7fff84 	addi	r21,r21,-2
   4ff94:	1f07883a 	add	r3,r3,fp
   4ff98:	003f7406 	br	4fd6c <_gp+0xffff2c24>
   4ff9c:	1839883a 	mov	fp,r3
   4ffa0:	003fdd06 	br	4ff18 <_gp+0xffff2dd0>
   4ffa4:	182f883a 	mov	r23,r3
   4ffa8:	003fc506 	br	4fec0 <_gp+0xffff2d78>
   4ffac:	b5bfff84 	addi	r22,r22,-2
   4ffb0:	3c4f883a 	add	r7,r7,r17
   4ffb4:	003f1a06 	br	4fc20 <_gp+0xffff2ad8>
   4ffb8:	b5bfff84 	addi	r22,r22,-2
   4ffbc:	1c47883a 	add	r3,r3,r17
   4ffc0:	003ebc06 	br	4fab4 <_gp+0xffff296c>

0004ffc4 <__umoddi3>:
   4ffc4:	defff304 	addi	sp,sp,-52
   4ffc8:	df000b15 	stw	fp,44(sp)
   4ffcc:	dc400415 	stw	r17,16(sp)
   4ffd0:	dc000315 	stw	r16,12(sp)
   4ffd4:	dfc00c15 	stw	ra,48(sp)
   4ffd8:	ddc00a15 	stw	r23,40(sp)
   4ffdc:	dd800915 	stw	r22,36(sp)
   4ffe0:	dd400815 	stw	r21,32(sp)
   4ffe4:	dd000715 	stw	r20,28(sp)
   4ffe8:	dcc00615 	stw	r19,24(sp)
   4ffec:	dc800515 	stw	r18,20(sp)
   4fff0:	2021883a 	mov	r16,r4
   4fff4:	2823883a 	mov	r17,r5
   4fff8:	2839883a 	mov	fp,r5
   4fffc:	3800401e 	bne	r7,zero,50100 <__umoddi3+0x13c>
   50000:	3027883a 	mov	r19,r6
   50004:	2029883a 	mov	r20,r4
   50008:	2980552e 	bgeu	r5,r6,50160 <__umoddi3+0x19c>
   5000c:	00bfffd4 	movui	r2,65535
   50010:	1180a236 	bltu	r2,r6,5029c <__umoddi3+0x2d8>
   50014:	01003fc4 	movi	r4,255
   50018:	2189803a 	cmpltu	r4,r4,r6
   5001c:	200890fa 	slli	r4,r4,3
   50020:	3104d83a 	srl	r2,r6,r4
   50024:	00c00174 	movhi	r3,5
   50028:	18cb7204 	addi	r3,r3,11720
   5002c:	1885883a 	add	r2,r3,r2
   50030:	10c00003 	ldbu	r3,0(r2)
   50034:	00800804 	movi	r2,32
   50038:	1909883a 	add	r4,r3,r4
   5003c:	1125c83a 	sub	r18,r2,r4
   50040:	90000526 	beq	r18,zero,50058 <__umoddi3+0x94>
   50044:	8ca2983a 	sll	r17,r17,r18
   50048:	8108d83a 	srl	r4,r16,r4
   5004c:	34a6983a 	sll	r19,r6,r18
   50050:	84a8983a 	sll	r20,r16,r18
   50054:	2478b03a 	or	fp,r4,r17
   50058:	982cd43a 	srli	r22,r19,16
   5005c:	e009883a 	mov	r4,fp
   50060:	9dffffcc 	andi	r23,r19,65535
   50064:	b00b883a 	mov	r5,r22
   50068:	0041ee80 	call	41ee8 <__umodsi3>
   5006c:	b00b883a 	mov	r5,r22
   50070:	e009883a 	mov	r4,fp
   50074:	102b883a 	mov	r21,r2
   50078:	0041e840 	call	41e84 <__udivsi3>
   5007c:	100b883a 	mov	r5,r2
   50080:	b809883a 	mov	r4,r23
   50084:	0041f400 	call	41f40 <__mulsi3>
   50088:	a82a943a 	slli	r21,r21,16
   5008c:	a006d43a 	srli	r3,r20,16
   50090:	1d46b03a 	or	r3,r3,r21
   50094:	1880032e 	bgeu	r3,r2,500a4 <__umoddi3+0xe0>
   50098:	1cc7883a 	add	r3,r3,r19
   5009c:	1cc00136 	bltu	r3,r19,500a4 <__umoddi3+0xe0>
   500a0:	18813136 	bltu	r3,r2,50568 <__umoddi3+0x5a4>
   500a4:	18a1c83a 	sub	r16,r3,r2
   500a8:	b00b883a 	mov	r5,r22
   500ac:	8009883a 	mov	r4,r16
   500b0:	0041ee80 	call	41ee8 <__umodsi3>
   500b4:	b00b883a 	mov	r5,r22
   500b8:	8009883a 	mov	r4,r16
   500bc:	1023883a 	mov	r17,r2
   500c0:	0041e840 	call	41e84 <__udivsi3>
   500c4:	100b883a 	mov	r5,r2
   500c8:	b809883a 	mov	r4,r23
   500cc:	8822943a 	slli	r17,r17,16
   500d0:	0041f400 	call	41f40 <__mulsi3>
   500d4:	a0ffffcc 	andi	r3,r20,65535
   500d8:	1c46b03a 	or	r3,r3,r17
   500dc:	1880042e 	bgeu	r3,r2,500f0 <__umoddi3+0x12c>
   500e0:	1cc7883a 	add	r3,r3,r19
   500e4:	1cc00236 	bltu	r3,r19,500f0 <__umoddi3+0x12c>
   500e8:	1880012e 	bgeu	r3,r2,500f0 <__umoddi3+0x12c>
   500ec:	1cc7883a 	add	r3,r3,r19
   500f0:	1885c83a 	sub	r2,r3,r2
   500f4:	1484d83a 	srl	r2,r2,r18
   500f8:	0007883a 	mov	r3,zero
   500fc:	00005306 	br	5024c <__umoddi3+0x288>
   50100:	29c05036 	bltu	r5,r7,50244 <__umoddi3+0x280>
   50104:	00bfffd4 	movui	r2,65535
   50108:	11c05c2e 	bgeu	r2,r7,5027c <__umoddi3+0x2b8>
   5010c:	00804034 	movhi	r2,256
   50110:	10bfffc4 	addi	r2,r2,-1
   50114:	11c10636 	bltu	r2,r7,50530 <__umoddi3+0x56c>
   50118:	01000404 	movi	r4,16
   5011c:	3904d83a 	srl	r2,r7,r4
   50120:	00c00174 	movhi	r3,5
   50124:	18cb7204 	addi	r3,r3,11720
   50128:	1885883a 	add	r2,r3,r2
   5012c:	14c00003 	ldbu	r19,0(r2)
   50130:	00c00804 	movi	r3,32
   50134:	9927883a 	add	r19,r19,r4
   50138:	1ce9c83a 	sub	r20,r3,r19
   5013c:	a0005c1e 	bne	r20,zero,502b0 <__umoddi3+0x2ec>
   50140:	3c400136 	bltu	r7,r17,50148 <__umoddi3+0x184>
   50144:	81810a36 	bltu	r16,r6,50570 <__umoddi3+0x5ac>
   50148:	8185c83a 	sub	r2,r16,r6
   5014c:	89e3c83a 	sub	r17,r17,r7
   50150:	8089803a 	cmpltu	r4,r16,r2
   50154:	8939c83a 	sub	fp,r17,r4
   50158:	e007883a 	mov	r3,fp
   5015c:	00003b06 	br	5024c <__umoddi3+0x288>
   50160:	3000041e 	bne	r6,zero,50174 <__umoddi3+0x1b0>
   50164:	000b883a 	mov	r5,zero
   50168:	01000044 	movi	r4,1
   5016c:	0041e840 	call	41e84 <__udivsi3>
   50170:	1027883a 	mov	r19,r2
   50174:	00bfffd4 	movui	r2,65535
   50178:	14c0442e 	bgeu	r2,r19,5028c <__umoddi3+0x2c8>
   5017c:	00804034 	movhi	r2,256
   50180:	10bfffc4 	addi	r2,r2,-1
   50184:	14c0ec36 	bltu	r2,r19,50538 <__umoddi3+0x574>
   50188:	00800404 	movi	r2,16
   5018c:	9886d83a 	srl	r3,r19,r2
   50190:	01000174 	movhi	r4,5
   50194:	210b7204 	addi	r4,r4,11720
   50198:	20c7883a 	add	r3,r4,r3
   5019c:	18c00003 	ldbu	r3,0(r3)
   501a0:	1887883a 	add	r3,r3,r2
   501a4:	00800804 	movi	r2,32
   501a8:	10e5c83a 	sub	r18,r2,r3
   501ac:	9000ab1e 	bne	r18,zero,5045c <__umoddi3+0x498>
   501b0:	982cd43a 	srli	r22,r19,16
   501b4:	8ce3c83a 	sub	r17,r17,r19
   501b8:	9dffffcc 	andi	r23,r19,65535
   501bc:	b00b883a 	mov	r5,r22
   501c0:	8809883a 	mov	r4,r17
   501c4:	0041ee80 	call	41ee8 <__umodsi3>
   501c8:	b00b883a 	mov	r5,r22
   501cc:	8809883a 	mov	r4,r17
   501d0:	102b883a 	mov	r21,r2
   501d4:	0041e840 	call	41e84 <__udivsi3>
   501d8:	b80b883a 	mov	r5,r23
   501dc:	1009883a 	mov	r4,r2
   501e0:	0041f400 	call	41f40 <__mulsi3>
   501e4:	a82a943a 	slli	r21,r21,16
   501e8:	a006d43a 	srli	r3,r20,16
   501ec:	1d46b03a 	or	r3,r3,r21
   501f0:	1880042e 	bgeu	r3,r2,50204 <__umoddi3+0x240>
   501f4:	1cc7883a 	add	r3,r3,r19
   501f8:	1cc00236 	bltu	r3,r19,50204 <__umoddi3+0x240>
   501fc:	1880012e 	bgeu	r3,r2,50204 <__umoddi3+0x240>
   50200:	1cc7883a 	add	r3,r3,r19
   50204:	18a1c83a 	sub	r16,r3,r2
   50208:	b00b883a 	mov	r5,r22
   5020c:	8009883a 	mov	r4,r16
   50210:	0041ee80 	call	41ee8 <__umodsi3>
   50214:	1023883a 	mov	r17,r2
   50218:	b00b883a 	mov	r5,r22
   5021c:	8009883a 	mov	r4,r16
   50220:	0041e840 	call	41e84 <__udivsi3>
   50224:	8822943a 	slli	r17,r17,16
   50228:	b80b883a 	mov	r5,r23
   5022c:	1009883a 	mov	r4,r2
   50230:	0041f400 	call	41f40 <__mulsi3>
   50234:	a53fffcc 	andi	r20,r20,65535
   50238:	a446b03a 	or	r3,r20,r17
   5023c:	18bfac2e 	bgeu	r3,r2,500f0 <_gp+0xffff2fa8>
   50240:	003fa706 	br	500e0 <_gp+0xffff2f98>
   50244:	2005883a 	mov	r2,r4
   50248:	2807883a 	mov	r3,r5
   5024c:	dfc00c17 	ldw	ra,48(sp)
   50250:	df000b17 	ldw	fp,44(sp)
   50254:	ddc00a17 	ldw	r23,40(sp)
   50258:	dd800917 	ldw	r22,36(sp)
   5025c:	dd400817 	ldw	r21,32(sp)
   50260:	dd000717 	ldw	r20,28(sp)
   50264:	dcc00617 	ldw	r19,24(sp)
   50268:	dc800517 	ldw	r18,20(sp)
   5026c:	dc400417 	ldw	r17,16(sp)
   50270:	dc000317 	ldw	r16,12(sp)
   50274:	dec00d04 	addi	sp,sp,52
   50278:	f800283a 	ret
   5027c:	04c03fc4 	movi	r19,255
   50280:	99c9803a 	cmpltu	r4,r19,r7
   50284:	200890fa 	slli	r4,r4,3
   50288:	003fa406 	br	5011c <_gp+0xffff2fd4>
   5028c:	00803fc4 	movi	r2,255
   50290:	14c5803a 	cmpltu	r2,r2,r19
   50294:	100490fa 	slli	r2,r2,3
   50298:	003fbc06 	br	5018c <_gp+0xffff3044>
   5029c:	00804034 	movhi	r2,256
   502a0:	10bfffc4 	addi	r2,r2,-1
   502a4:	1180a636 	bltu	r2,r6,50540 <__umoddi3+0x57c>
   502a8:	01000404 	movi	r4,16
   502ac:	003f5c06 	br	50020 <_gp+0xffff2ed8>
   502b0:	3d0e983a 	sll	r7,r7,r20
   502b4:	34ead83a 	srl	r21,r6,r19
   502b8:	8cc6d83a 	srl	r3,r17,r19
   502bc:	8d10983a 	sll	r8,r17,r20
   502c0:	3d6ab03a 	or	r21,r7,r21
   502c4:	a82cd43a 	srli	r22,r21,16
   502c8:	84e2d83a 	srl	r17,r16,r19
   502cc:	1809883a 	mov	r4,r3
   502d0:	b00b883a 	mov	r5,r22
   502d4:	8a22b03a 	or	r17,r17,r8
   502d8:	3524983a 	sll	r18,r6,r20
   502dc:	dc400015 	stw	r17,0(sp)
   502e0:	d8c00115 	stw	r3,4(sp)
   502e4:	0041ee80 	call	41ee8 <__umodsi3>
   502e8:	d8c00117 	ldw	r3,4(sp)
   502ec:	b00b883a 	mov	r5,r22
   502f0:	1039883a 	mov	fp,r2
   502f4:	1809883a 	mov	r4,r3
   502f8:	0041e840 	call	41e84 <__udivsi3>
   502fc:	adffffcc 	andi	r23,r21,65535
   50300:	100b883a 	mov	r5,r2
   50304:	b809883a 	mov	r4,r23
   50308:	1023883a 	mov	r17,r2
   5030c:	0041f400 	call	41f40 <__mulsi3>
   50310:	d9400017 	ldw	r5,0(sp)
   50314:	e008943a 	slli	r4,fp,16
   50318:	8520983a 	sll	r16,r16,r20
   5031c:	2806d43a 	srli	r3,r5,16
   50320:	1906b03a 	or	r3,r3,r4
   50324:	1880042e 	bgeu	r3,r2,50338 <__umoddi3+0x374>
   50328:	1d47883a 	add	r3,r3,r21
   5032c:	893fffc4 	addi	r4,r17,-1
   50330:	1d40892e 	bgeu	r3,r21,50558 <__umoddi3+0x594>
   50334:	2023883a 	mov	r17,r4
   50338:	18b9c83a 	sub	fp,r3,r2
   5033c:	b00b883a 	mov	r5,r22
   50340:	e009883a 	mov	r4,fp
   50344:	0041ee80 	call	41ee8 <__umodsi3>
   50348:	b00b883a 	mov	r5,r22
   5034c:	e009883a 	mov	r4,fp
   50350:	d8800215 	stw	r2,8(sp)
   50354:	0041e840 	call	41e84 <__udivsi3>
   50358:	100b883a 	mov	r5,r2
   5035c:	b809883a 	mov	r4,r23
   50360:	102d883a 	mov	r22,r2
   50364:	0041f400 	call	41f40 <__mulsi3>
   50368:	d9800217 	ldw	r6,8(sp)
   5036c:	d8c00017 	ldw	r3,0(sp)
   50370:	300c943a 	slli	r6,r6,16
   50374:	1a3fffcc 	andi	r8,r3,65535
   50378:	4190b03a 	or	r8,r8,r6
   5037c:	4080042e 	bgeu	r8,r2,50390 <__umoddi3+0x3cc>
   50380:	4551883a 	add	r8,r8,r21
   50384:	b0ffffc4 	addi	r3,r22,-1
   50388:	45406f2e 	bgeu	r8,r21,50548 <__umoddi3+0x584>
   5038c:	182d883a 	mov	r22,r3
   50390:	880e943a 	slli	r7,r17,16
   50394:	9006d43a 	srli	r3,r18,16
   50398:	91bfffcc 	andi	r6,r18,65535
   5039c:	3dacb03a 	or	r22,r7,r22
   503a0:	b02ed43a 	srli	r23,r22,16
   503a4:	b5bfffcc 	andi	r22,r22,65535
   503a8:	300b883a 	mov	r5,r6
   503ac:	b009883a 	mov	r4,r22
   503b0:	40a3c83a 	sub	r17,r8,r2
   503b4:	d8c00115 	stw	r3,4(sp)
   503b8:	d9800215 	stw	r6,8(sp)
   503bc:	0041f400 	call	41f40 <__mulsi3>
   503c0:	d9800217 	ldw	r6,8(sp)
   503c4:	b809883a 	mov	r4,r23
   503c8:	1039883a 	mov	fp,r2
   503cc:	300b883a 	mov	r5,r6
   503d0:	0041f400 	call	41f40 <__mulsi3>
   503d4:	d8c00117 	ldw	r3,4(sp)
   503d8:	b809883a 	mov	r4,r23
   503dc:	d8800215 	stw	r2,8(sp)
   503e0:	180b883a 	mov	r5,r3
   503e4:	0041f400 	call	41f40 <__mulsi3>
   503e8:	d8c00117 	ldw	r3,4(sp)
   503ec:	b009883a 	mov	r4,r22
   503f0:	102f883a 	mov	r23,r2
   503f4:	180b883a 	mov	r5,r3
   503f8:	0041f400 	call	41f40 <__mulsi3>
   503fc:	d9800217 	ldw	r6,8(sp)
   50400:	e006d43a 	srli	r3,fp,16
   50404:	1185883a 	add	r2,r2,r6
   50408:	1885883a 	add	r2,r3,r2
   5040c:	1180022e 	bgeu	r2,r6,50418 <__umoddi3+0x454>
   50410:	00c00074 	movhi	r3,1
   50414:	b8ef883a 	add	r23,r23,r3
   50418:	1006d43a 	srli	r3,r2,16
   5041c:	1004943a 	slli	r2,r2,16
   50420:	e73fffcc 	andi	fp,fp,65535
   50424:	1dc7883a 	add	r3,r3,r23
   50428:	1739883a 	add	fp,r2,fp
   5042c:	88c03a36 	bltu	r17,r3,50518 <__umoddi3+0x554>
   50430:	88c05126 	beq	r17,r3,50578 <__umoddi3+0x5b4>
   50434:	88c9c83a 	sub	r4,r17,r3
   50438:	e00f883a 	mov	r7,fp
   5043c:	81cfc83a 	sub	r7,r16,r7
   50440:	81c7803a 	cmpltu	r3,r16,r7
   50444:	20c7c83a 	sub	r3,r4,r3
   50448:	1cc4983a 	sll	r2,r3,r19
   5044c:	3d0ed83a 	srl	r7,r7,r20
   50450:	1d06d83a 	srl	r3,r3,r20
   50454:	11c4b03a 	or	r2,r2,r7
   50458:	003f7c06 	br	5024c <_gp+0xffff3104>
   5045c:	9ca6983a 	sll	r19,r19,r18
   50460:	88f8d83a 	srl	fp,r17,r3
   50464:	80c4d83a 	srl	r2,r16,r3
   50468:	982cd43a 	srli	r22,r19,16
   5046c:	8ca2983a 	sll	r17,r17,r18
   50470:	e009883a 	mov	r4,fp
   50474:	b00b883a 	mov	r5,r22
   50478:	146ab03a 	or	r21,r2,r17
   5047c:	0041ee80 	call	41ee8 <__umodsi3>
   50480:	b00b883a 	mov	r5,r22
   50484:	e009883a 	mov	r4,fp
   50488:	1029883a 	mov	r20,r2
   5048c:	9dffffcc 	andi	r23,r19,65535
   50490:	0041e840 	call	41e84 <__udivsi3>
   50494:	b809883a 	mov	r4,r23
   50498:	100b883a 	mov	r5,r2
   5049c:	0041f400 	call	41f40 <__mulsi3>
   504a0:	a008943a 	slli	r4,r20,16
   504a4:	a806d43a 	srli	r3,r21,16
   504a8:	84a8983a 	sll	r20,r16,r18
   504ac:	1906b03a 	or	r3,r3,r4
   504b0:	1880042e 	bgeu	r3,r2,504c4 <__umoddi3+0x500>
   504b4:	1cc7883a 	add	r3,r3,r19
   504b8:	1cc00236 	bltu	r3,r19,504c4 <__umoddi3+0x500>
   504bc:	1880012e 	bgeu	r3,r2,504c4 <__umoddi3+0x500>
   504c0:	1cc7883a 	add	r3,r3,r19
   504c4:	18a3c83a 	sub	r17,r3,r2
   504c8:	b00b883a 	mov	r5,r22
   504cc:	8809883a 	mov	r4,r17
   504d0:	0041ee80 	call	41ee8 <__umodsi3>
   504d4:	b00b883a 	mov	r5,r22
   504d8:	8809883a 	mov	r4,r17
   504dc:	1021883a 	mov	r16,r2
   504e0:	0041e840 	call	41e84 <__udivsi3>
   504e4:	100b883a 	mov	r5,r2
   504e8:	b809883a 	mov	r4,r23
   504ec:	8020943a 	slli	r16,r16,16
   504f0:	0041f400 	call	41f40 <__mulsi3>
   504f4:	a8ffffcc 	andi	r3,r21,65535
   504f8:	1c06b03a 	or	r3,r3,r16
   504fc:	1880042e 	bgeu	r3,r2,50510 <__umoddi3+0x54c>
   50500:	1cc7883a 	add	r3,r3,r19
   50504:	1cc00236 	bltu	r3,r19,50510 <__umoddi3+0x54c>
   50508:	1880012e 	bgeu	r3,r2,50510 <__umoddi3+0x54c>
   5050c:	1cc7883a 	add	r3,r3,r19
   50510:	18a3c83a 	sub	r17,r3,r2
   50514:	003f2906 	br	501bc <_gp+0xffff3074>
   50518:	e48fc83a 	sub	r7,fp,r18
   5051c:	1d49c83a 	sub	r4,r3,r21
   50520:	e1f9803a 	cmpltu	fp,fp,r7
   50524:	2739c83a 	sub	fp,r4,fp
   50528:	8f09c83a 	sub	r4,r17,fp
   5052c:	003fc306 	br	5043c <_gp+0xffff32f4>
   50530:	01000604 	movi	r4,24
   50534:	003ef906 	br	5011c <_gp+0xffff2fd4>
   50538:	00800604 	movi	r2,24
   5053c:	003f1306 	br	5018c <_gp+0xffff3044>
   50540:	01000604 	movi	r4,24
   50544:	003eb606 	br	50020 <_gp+0xffff2ed8>
   50548:	40bf902e 	bgeu	r8,r2,5038c <_gp+0xffff3244>
   5054c:	b5bfff84 	addi	r22,r22,-2
   50550:	4551883a 	add	r8,r8,r21
   50554:	003f8e06 	br	50390 <_gp+0xffff3248>
   50558:	18bf762e 	bgeu	r3,r2,50334 <_gp+0xffff31ec>
   5055c:	8c7fff84 	addi	r17,r17,-2
   50560:	1d47883a 	add	r3,r3,r21
   50564:	003f7406 	br	50338 <_gp+0xffff31f0>
   50568:	1cc7883a 	add	r3,r3,r19
   5056c:	003ecd06 	br	500a4 <_gp+0xffff2f5c>
   50570:	8005883a 	mov	r2,r16
   50574:	003ef806 	br	50158 <_gp+0xffff3010>
   50578:	873fe736 	bltu	r16,fp,50518 <_gp+0xffff33d0>
   5057c:	e00f883a 	mov	r7,fp
   50580:	0009883a 	mov	r4,zero
   50584:	003fad06 	br	5043c <_gp+0xffff32f4>

00050588 <__eqdf2>:
   50588:	2804d53a 	srli	r2,r5,20
   5058c:	3806d53a 	srli	r3,r7,20
   50590:	02000434 	movhi	r8,16
   50594:	423fffc4 	addi	r8,r8,-1
   50598:	1081ffcc 	andi	r2,r2,2047
   5059c:	0281ffc4 	movi	r10,2047
   505a0:	2a12703a 	and	r9,r5,r8
   505a4:	18c1ffcc 	andi	r3,r3,2047
   505a8:	3a10703a 	and	r8,r7,r8
   505ac:	280ad7fa 	srli	r5,r5,31
   505b0:	380ed7fa 	srli	r7,r7,31
   505b4:	12801026 	beq	r2,r10,505f8 <__eqdf2+0x70>
   505b8:	0281ffc4 	movi	r10,2047
   505bc:	1a800a26 	beq	r3,r10,505e8 <__eqdf2+0x60>
   505c0:	10c00226 	beq	r2,r3,505cc <__eqdf2+0x44>
   505c4:	00800044 	movi	r2,1
   505c8:	f800283a 	ret
   505cc:	4a3ffd1e 	bne	r9,r8,505c4 <_gp+0xffff347c>
   505d0:	21bffc1e 	bne	r4,r6,505c4 <_gp+0xffff347c>
   505d4:	29c00c26 	beq	r5,r7,50608 <__eqdf2+0x80>
   505d8:	103ffa1e 	bne	r2,zero,505c4 <_gp+0xffff347c>
   505dc:	2244b03a 	or	r2,r4,r9
   505e0:	1004c03a 	cmpne	r2,r2,zero
   505e4:	f800283a 	ret
   505e8:	3214b03a 	or	r10,r6,r8
   505ec:	503ff426 	beq	r10,zero,505c0 <_gp+0xffff3478>
   505f0:	00800044 	movi	r2,1
   505f4:	f800283a 	ret
   505f8:	2254b03a 	or	r10,r4,r9
   505fc:	503fee26 	beq	r10,zero,505b8 <_gp+0xffff3470>
   50600:	00800044 	movi	r2,1
   50604:	f800283a 	ret
   50608:	0005883a 	mov	r2,zero
   5060c:	f800283a 	ret

00050610 <__floatunsidf>:
   50610:	defffe04 	addi	sp,sp,-8
   50614:	dc000015 	stw	r16,0(sp)
   50618:	dfc00115 	stw	ra,4(sp)
   5061c:	2021883a 	mov	r16,r4
   50620:	20002226 	beq	r4,zero,506ac <__floatunsidf+0x9c>
   50624:	0045edc0 	call	45edc <__clzsi2>
   50628:	01010784 	movi	r4,1054
   5062c:	2089c83a 	sub	r4,r4,r2
   50630:	01810cc4 	movi	r6,1075
   50634:	310dc83a 	sub	r6,r6,r4
   50638:	00c007c4 	movi	r3,31
   5063c:	1980120e 	bge	r3,r6,50688 <__floatunsidf+0x78>
   50640:	00c104c4 	movi	r3,1043
   50644:	1907c83a 	sub	r3,r3,r4
   50648:	80ca983a 	sll	r5,r16,r3
   5064c:	00800434 	movhi	r2,16
   50650:	10bfffc4 	addi	r2,r2,-1
   50654:	2101ffcc 	andi	r4,r4,2047
   50658:	0021883a 	mov	r16,zero
   5065c:	288a703a 	and	r5,r5,r2
   50660:	2008953a 	slli	r4,r4,20
   50664:	00c00434 	movhi	r3,16
   50668:	18ffffc4 	addi	r3,r3,-1
   5066c:	28c6703a 	and	r3,r5,r3
   50670:	8005883a 	mov	r2,r16
   50674:	1906b03a 	or	r3,r3,r4
   50678:	dfc00117 	ldw	ra,4(sp)
   5067c:	dc000017 	ldw	r16,0(sp)
   50680:	dec00204 	addi	sp,sp,8
   50684:	f800283a 	ret
   50688:	00c002c4 	movi	r3,11
   5068c:	188bc83a 	sub	r5,r3,r2
   50690:	814ad83a 	srl	r5,r16,r5
   50694:	00c00434 	movhi	r3,16
   50698:	18ffffc4 	addi	r3,r3,-1
   5069c:	81a0983a 	sll	r16,r16,r6
   506a0:	2101ffcc 	andi	r4,r4,2047
   506a4:	28ca703a 	and	r5,r5,r3
   506a8:	003fed06 	br	50660 <_gp+0xffff3518>
   506ac:	0009883a 	mov	r4,zero
   506b0:	000b883a 	mov	r5,zero
   506b4:	003fea06 	br	50660 <_gp+0xffff3518>

000506b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   506b8:	defffe04 	addi	sp,sp,-8
   506bc:	dfc00115 	stw	ra,4(sp)
   506c0:	df000015 	stw	fp,0(sp)
   506c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   506c8:	d0a00c17 	ldw	r2,-32720(gp)
   506cc:	10000326 	beq	r2,zero,506dc <alt_get_errno+0x24>
   506d0:	d0a00c17 	ldw	r2,-32720(gp)
   506d4:	103ee83a 	callr	r2
   506d8:	00000106 	br	506e0 <alt_get_errno+0x28>
   506dc:	d0a84a04 	addi	r2,gp,-24280
}
   506e0:	e037883a 	mov	sp,fp
   506e4:	dfc00117 	ldw	ra,4(sp)
   506e8:	df000017 	ldw	fp,0(sp)
   506ec:	dec00204 	addi	sp,sp,8
   506f0:	f800283a 	ret

000506f4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   506f4:	defffb04 	addi	sp,sp,-20
   506f8:	dfc00415 	stw	ra,16(sp)
   506fc:	df000315 	stw	fp,12(sp)
   50700:	df000304 	addi	fp,sp,12
   50704:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   50708:	e0bfff17 	ldw	r2,-4(fp)
   5070c:	10000816 	blt	r2,zero,50730 <close+0x3c>
   50710:	01400304 	movi	r5,12
   50714:	e13fff17 	ldw	r4,-4(fp)
   50718:	0041f400 	call	41f40 <__mulsi3>
   5071c:	1007883a 	mov	r3,r2
   50720:	00800174 	movhi	r2,5
   50724:	108fda04 	addi	r2,r2,16232
   50728:	1885883a 	add	r2,r3,r2
   5072c:	00000106 	br	50734 <close+0x40>
   50730:	0005883a 	mov	r2,zero
   50734:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   50738:	e0bffd17 	ldw	r2,-12(fp)
   5073c:	10001926 	beq	r2,zero,507a4 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   50740:	e0bffd17 	ldw	r2,-12(fp)
   50744:	10800017 	ldw	r2,0(r2)
   50748:	10800417 	ldw	r2,16(r2)
   5074c:	10000626 	beq	r2,zero,50768 <close+0x74>
   50750:	e0bffd17 	ldw	r2,-12(fp)
   50754:	10800017 	ldw	r2,0(r2)
   50758:	10800417 	ldw	r2,16(r2)
   5075c:	e13ffd17 	ldw	r4,-12(fp)
   50760:	103ee83a 	callr	r2
   50764:	00000106 	br	5076c <close+0x78>
   50768:	0005883a 	mov	r2,zero
   5076c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   50770:	e13fff17 	ldw	r4,-4(fp)
   50774:	0050ddc0 	call	50ddc <alt_release_fd>
    if (rval < 0)
   50778:	e0bffe17 	ldw	r2,-8(fp)
   5077c:	1000070e 	bge	r2,zero,5079c <close+0xa8>
    {
      ALT_ERRNO = -rval;
   50780:	00506b80 	call	506b8 <alt_get_errno>
   50784:	1007883a 	mov	r3,r2
   50788:	e0bffe17 	ldw	r2,-8(fp)
   5078c:	0085c83a 	sub	r2,zero,r2
   50790:	18800015 	stw	r2,0(r3)
      return -1;
   50794:	00bfffc4 	movi	r2,-1
   50798:	00000706 	br	507b8 <close+0xc4>
    }
    return 0;
   5079c:	0005883a 	mov	r2,zero
   507a0:	00000506 	br	507b8 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   507a4:	00506b80 	call	506b8 <alt_get_errno>
   507a8:	1007883a 	mov	r3,r2
   507ac:	00801444 	movi	r2,81
   507b0:	18800015 	stw	r2,0(r3)
    return -1;
   507b4:	00bfffc4 	movi	r2,-1
  }
}
   507b8:	e037883a 	mov	sp,fp
   507bc:	dfc00117 	ldw	ra,4(sp)
   507c0:	df000017 	ldw	fp,0(sp)
   507c4:	dec00204 	addi	sp,sp,8
   507c8:	f800283a 	ret

000507cc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   507cc:	defffc04 	addi	sp,sp,-16
   507d0:	df000315 	stw	fp,12(sp)
   507d4:	df000304 	addi	fp,sp,12
   507d8:	e13ffd15 	stw	r4,-12(fp)
   507dc:	e17ffe15 	stw	r5,-8(fp)
   507e0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   507e4:	e0bfff17 	ldw	r2,-4(fp)
}
   507e8:	e037883a 	mov	sp,fp
   507ec:	df000017 	ldw	fp,0(sp)
   507f0:	dec00104 	addi	sp,sp,4
   507f4:	f800283a 	ret

000507f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   507f8:	defffe04 	addi	sp,sp,-8
   507fc:	dfc00115 	stw	ra,4(sp)
   50800:	df000015 	stw	fp,0(sp)
   50804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50808:	d0a00c17 	ldw	r2,-32720(gp)
   5080c:	10000326 	beq	r2,zero,5081c <alt_get_errno+0x24>
   50810:	d0a00c17 	ldw	r2,-32720(gp)
   50814:	103ee83a 	callr	r2
   50818:	00000106 	br	50820 <alt_get_errno+0x28>
   5081c:	d0a84a04 	addi	r2,gp,-24280
}
   50820:	e037883a 	mov	sp,fp
   50824:	dfc00117 	ldw	ra,4(sp)
   50828:	df000017 	ldw	fp,0(sp)
   5082c:	dec00204 	addi	sp,sp,8
   50830:	f800283a 	ret

00050834 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   50834:	defffb04 	addi	sp,sp,-20
   50838:	dfc00415 	stw	ra,16(sp)
   5083c:	df000315 	stw	fp,12(sp)
   50840:	df000304 	addi	fp,sp,12
   50844:	e13ffe15 	stw	r4,-8(fp)
   50848:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5084c:	e0bffe17 	ldw	r2,-8(fp)
   50850:	10000816 	blt	r2,zero,50874 <fstat+0x40>
   50854:	01400304 	movi	r5,12
   50858:	e13ffe17 	ldw	r4,-8(fp)
   5085c:	0041f400 	call	41f40 <__mulsi3>
   50860:	1007883a 	mov	r3,r2
   50864:	00800174 	movhi	r2,5
   50868:	108fda04 	addi	r2,r2,16232
   5086c:	1885883a 	add	r2,r3,r2
   50870:	00000106 	br	50878 <fstat+0x44>
   50874:	0005883a 	mov	r2,zero
   50878:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   5087c:	e0bffd17 	ldw	r2,-12(fp)
   50880:	10001026 	beq	r2,zero,508c4 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   50884:	e0bffd17 	ldw	r2,-12(fp)
   50888:	10800017 	ldw	r2,0(r2)
   5088c:	10800817 	ldw	r2,32(r2)
   50890:	10000726 	beq	r2,zero,508b0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   50894:	e0bffd17 	ldw	r2,-12(fp)
   50898:	10800017 	ldw	r2,0(r2)
   5089c:	10800817 	ldw	r2,32(r2)
   508a0:	e17fff17 	ldw	r5,-4(fp)
   508a4:	e13ffd17 	ldw	r4,-12(fp)
   508a8:	103ee83a 	callr	r2
   508ac:	00000a06 	br	508d8 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   508b0:	e0bfff17 	ldw	r2,-4(fp)
   508b4:	00c80004 	movi	r3,8192
   508b8:	10c00115 	stw	r3,4(r2)
      return 0;
   508bc:	0005883a 	mov	r2,zero
   508c0:	00000506 	br	508d8 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   508c4:	00507f80 	call	507f8 <alt_get_errno>
   508c8:	1007883a 	mov	r3,r2
   508cc:	00801444 	movi	r2,81
   508d0:	18800015 	stw	r2,0(r3)
    return -1;
   508d4:	00bfffc4 	movi	r2,-1
  }
}
   508d8:	e037883a 	mov	sp,fp
   508dc:	dfc00117 	ldw	ra,4(sp)
   508e0:	df000017 	ldw	fp,0(sp)
   508e4:	dec00204 	addi	sp,sp,8
   508e8:	f800283a 	ret

000508ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   508ec:	defffe04 	addi	sp,sp,-8
   508f0:	dfc00115 	stw	ra,4(sp)
   508f4:	df000015 	stw	fp,0(sp)
   508f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   508fc:	d0a00c17 	ldw	r2,-32720(gp)
   50900:	10000326 	beq	r2,zero,50910 <alt_get_errno+0x24>
   50904:	d0a00c17 	ldw	r2,-32720(gp)
   50908:	103ee83a 	callr	r2
   5090c:	00000106 	br	50914 <alt_get_errno+0x28>
   50910:	d0a84a04 	addi	r2,gp,-24280
}
   50914:	e037883a 	mov	sp,fp
   50918:	dfc00117 	ldw	ra,4(sp)
   5091c:	df000017 	ldw	fp,0(sp)
   50920:	dec00204 	addi	sp,sp,8
   50924:	f800283a 	ret

00050928 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   50928:	deffed04 	addi	sp,sp,-76
   5092c:	dfc01215 	stw	ra,72(sp)
   50930:	df001115 	stw	fp,68(sp)
   50934:	df001104 	addi	fp,sp,68
   50938:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5093c:	e0bfff17 	ldw	r2,-4(fp)
   50940:	10000816 	blt	r2,zero,50964 <isatty+0x3c>
   50944:	01400304 	movi	r5,12
   50948:	e13fff17 	ldw	r4,-4(fp)
   5094c:	0041f400 	call	41f40 <__mulsi3>
   50950:	1007883a 	mov	r3,r2
   50954:	00800174 	movhi	r2,5
   50958:	108fda04 	addi	r2,r2,16232
   5095c:	1885883a 	add	r2,r3,r2
   50960:	00000106 	br	50968 <isatty+0x40>
   50964:	0005883a 	mov	r2,zero
   50968:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   5096c:	e0bfef17 	ldw	r2,-68(fp)
   50970:	10000e26 	beq	r2,zero,509ac <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   50974:	e0bfef17 	ldw	r2,-68(fp)
   50978:	10800017 	ldw	r2,0(r2)
   5097c:	10800817 	ldw	r2,32(r2)
   50980:	1000021e 	bne	r2,zero,5098c <isatty+0x64>
    {
      return 1;
   50984:	00800044 	movi	r2,1
   50988:	00000d06 	br	509c0 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   5098c:	e0bff004 	addi	r2,fp,-64
   50990:	100b883a 	mov	r5,r2
   50994:	e13fff17 	ldw	r4,-4(fp)
   50998:	00508340 	call	50834 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   5099c:	e0bff117 	ldw	r2,-60(fp)
   509a0:	10880020 	cmpeqi	r2,r2,8192
   509a4:	10803fcc 	andi	r2,r2,255
   509a8:	00000506 	br	509c0 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   509ac:	00508ec0 	call	508ec <alt_get_errno>
   509b0:	1007883a 	mov	r3,r2
   509b4:	00801444 	movi	r2,81
   509b8:	18800015 	stw	r2,0(r3)
    return 0;
   509bc:	0005883a 	mov	r2,zero
  }
}
   509c0:	e037883a 	mov	sp,fp
   509c4:	dfc00117 	ldw	ra,4(sp)
   509c8:	df000017 	ldw	fp,0(sp)
   509cc:	dec00204 	addi	sp,sp,8
   509d0:	f800283a 	ret

000509d4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   509d4:	defffc04 	addi	sp,sp,-16
   509d8:	df000315 	stw	fp,12(sp)
   509dc:	df000304 	addi	fp,sp,12
   509e0:	e13ffd15 	stw	r4,-12(fp)
   509e4:	e17ffe15 	stw	r5,-8(fp)
   509e8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   509ec:	e0fffe17 	ldw	r3,-8(fp)
   509f0:	e0bffd17 	ldw	r2,-12(fp)
   509f4:	18800c26 	beq	r3,r2,50a28 <alt_load_section+0x54>
  {
    while( to != end )
   509f8:	00000806 	br	50a1c <alt_load_section+0x48>
    {
      *to++ = *from++;
   509fc:	e0bffe17 	ldw	r2,-8(fp)
   50a00:	10c00104 	addi	r3,r2,4
   50a04:	e0fffe15 	stw	r3,-8(fp)
   50a08:	e0fffd17 	ldw	r3,-12(fp)
   50a0c:	19000104 	addi	r4,r3,4
   50a10:	e13ffd15 	stw	r4,-12(fp)
   50a14:	18c00017 	ldw	r3,0(r3)
   50a18:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   50a1c:	e0fffe17 	ldw	r3,-8(fp)
   50a20:	e0bfff17 	ldw	r2,-4(fp)
   50a24:	18bff51e 	bne	r3,r2,509fc <_gp+0xffff38b4>
    {
      *to++ = *from++;
    }
  }
}
   50a28:	0001883a 	nop
   50a2c:	e037883a 	mov	sp,fp
   50a30:	df000017 	ldw	fp,0(sp)
   50a34:	dec00104 	addi	sp,sp,4
   50a38:	f800283a 	ret

00050a3c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   50a3c:	defffe04 	addi	sp,sp,-8
   50a40:	dfc00115 	stw	ra,4(sp)
   50a44:	df000015 	stw	fp,0(sp)
   50a48:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   50a4c:	01800174 	movhi	r6,5
   50a50:	31946304 	addi	r6,r6,20876
   50a54:	01400174 	movhi	r5,5
   50a58:	294c3004 	addi	r5,r5,12480
   50a5c:	01000174 	movhi	r4,5
   50a60:	21146304 	addi	r4,r4,20876
   50a64:	00509d40 	call	509d4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   50a68:	01800134 	movhi	r6,4
   50a6c:	31808c04 	addi	r6,r6,560
   50a70:	01400134 	movhi	r5,4
   50a74:	29400804 	addi	r5,r5,32
   50a78:	01000134 	movhi	r4,4
   50a7c:	21000804 	addi	r4,r4,32
   50a80:	00509d40 	call	509d4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   50a84:	01800174 	movhi	r6,5
   50a88:	318c3004 	addi	r6,r6,12480
   50a8c:	01400174 	movhi	r5,5
   50a90:	294b5304 	addi	r5,r5,11596
   50a94:	01000174 	movhi	r4,5
   50a98:	210b5304 	addi	r4,r4,11596
   50a9c:	00509d40 	call	509d4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   50aa0:	0051c940 	call	51c94 <alt_dcache_flush_all>
  alt_icache_flush_all();
   50aa4:	0051e540 	call	51e54 <alt_icache_flush_all>
}
   50aa8:	0001883a 	nop
   50aac:	e037883a 	mov	sp,fp
   50ab0:	dfc00117 	ldw	ra,4(sp)
   50ab4:	df000017 	ldw	fp,0(sp)
   50ab8:	dec00204 	addi	sp,sp,8
   50abc:	f800283a 	ret

00050ac0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50ac0:	defffe04 	addi	sp,sp,-8
   50ac4:	dfc00115 	stw	ra,4(sp)
   50ac8:	df000015 	stw	fp,0(sp)
   50acc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50ad0:	d0a00c17 	ldw	r2,-32720(gp)
   50ad4:	10000326 	beq	r2,zero,50ae4 <alt_get_errno+0x24>
   50ad8:	d0a00c17 	ldw	r2,-32720(gp)
   50adc:	103ee83a 	callr	r2
   50ae0:	00000106 	br	50ae8 <alt_get_errno+0x28>
   50ae4:	d0a84a04 	addi	r2,gp,-24280
}
   50ae8:	e037883a 	mov	sp,fp
   50aec:	dfc00117 	ldw	ra,4(sp)
   50af0:	df000017 	ldw	fp,0(sp)
   50af4:	dec00204 	addi	sp,sp,8
   50af8:	f800283a 	ret

00050afc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   50afc:	defff904 	addi	sp,sp,-28
   50b00:	dfc00615 	stw	ra,24(sp)
   50b04:	df000515 	stw	fp,20(sp)
   50b08:	df000504 	addi	fp,sp,20
   50b0c:	e13ffd15 	stw	r4,-12(fp)
   50b10:	e17ffe15 	stw	r5,-8(fp)
   50b14:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   50b18:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   50b1c:	e0bffd17 	ldw	r2,-12(fp)
   50b20:	10000816 	blt	r2,zero,50b44 <lseek+0x48>
   50b24:	01400304 	movi	r5,12
   50b28:	e13ffd17 	ldw	r4,-12(fp)
   50b2c:	0041f400 	call	41f40 <__mulsi3>
   50b30:	1007883a 	mov	r3,r2
   50b34:	00800174 	movhi	r2,5
   50b38:	108fda04 	addi	r2,r2,16232
   50b3c:	1885883a 	add	r2,r3,r2
   50b40:	00000106 	br	50b48 <lseek+0x4c>
   50b44:	0005883a 	mov	r2,zero
   50b48:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   50b4c:	e0bffc17 	ldw	r2,-16(fp)
   50b50:	10001026 	beq	r2,zero,50b94 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   50b54:	e0bffc17 	ldw	r2,-16(fp)
   50b58:	10800017 	ldw	r2,0(r2)
   50b5c:	10800717 	ldw	r2,28(r2)
   50b60:	10000926 	beq	r2,zero,50b88 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   50b64:	e0bffc17 	ldw	r2,-16(fp)
   50b68:	10800017 	ldw	r2,0(r2)
   50b6c:	10800717 	ldw	r2,28(r2)
   50b70:	e1bfff17 	ldw	r6,-4(fp)
   50b74:	e17ffe17 	ldw	r5,-8(fp)
   50b78:	e13ffc17 	ldw	r4,-16(fp)
   50b7c:	103ee83a 	callr	r2
   50b80:	e0bffb15 	stw	r2,-20(fp)
   50b84:	00000506 	br	50b9c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   50b88:	00bfde84 	movi	r2,-134
   50b8c:	e0bffb15 	stw	r2,-20(fp)
   50b90:	00000206 	br	50b9c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   50b94:	00bfebc4 	movi	r2,-81
   50b98:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   50b9c:	e0bffb17 	ldw	r2,-20(fp)
   50ba0:	1000070e 	bge	r2,zero,50bc0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   50ba4:	0050ac00 	call	50ac0 <alt_get_errno>
   50ba8:	1007883a 	mov	r3,r2
   50bac:	e0bffb17 	ldw	r2,-20(fp)
   50bb0:	0085c83a 	sub	r2,zero,r2
   50bb4:	18800015 	stw	r2,0(r3)
    rc = -1;
   50bb8:	00bfffc4 	movi	r2,-1
   50bbc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   50bc0:	e0bffb17 	ldw	r2,-20(fp)
}
   50bc4:	e037883a 	mov	sp,fp
   50bc8:	dfc00117 	ldw	ra,4(sp)
   50bcc:	df000017 	ldw	fp,0(sp)
   50bd0:	dec00204 	addi	sp,sp,8
   50bd4:	f800283a 	ret

00050bd8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   50bd8:	defffd04 	addi	sp,sp,-12
   50bdc:	dfc00215 	stw	ra,8(sp)
   50be0:	df000115 	stw	fp,4(sp)
   50be4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   50be8:	0009883a 	mov	r4,zero
   50bec:	00510800 	call	51080 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   50bf0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   50bf4:	00510b80 	call	510b8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   50bf8:	01800174 	movhi	r6,5
   50bfc:	318c2804 	addi	r6,r6,12448
   50c00:	01400174 	movhi	r5,5
   50c04:	294c2804 	addi	r5,r5,12448
   50c08:	01000174 	movhi	r4,5
   50c0c:	210c2804 	addi	r4,r4,12448
   50c10:	00521f80 	call	521f8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   50c14:	0051d940 	call	51d94 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   50c18:	01000174 	movhi	r4,5
   50c1c:	21077d04 	addi	r4,r4,7668
   50c20:	00529b80 	call	529b8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   50c24:	d0a84b17 	ldw	r2,-24276(gp)
   50c28:	d0e84c17 	ldw	r3,-24272(gp)
   50c2c:	d1284d17 	ldw	r4,-24268(gp)
   50c30:	200d883a 	mov	r6,r4
   50c34:	180b883a 	mov	r5,r3
   50c38:	1009883a 	mov	r4,r2
   50c3c:	004026c0 	call	4026c <main>
   50c40:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   50c44:	01000044 	movi	r4,1
   50c48:	00506f40 	call	506f4 <close>
  exit (result);
   50c4c:	e13fff17 	ldw	r4,-4(fp)
   50c50:	00529cc0 	call	529cc <exit>

00050c54 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   50c54:	defffe04 	addi	sp,sp,-8
   50c58:	df000115 	stw	fp,4(sp)
   50c5c:	df000104 	addi	fp,sp,4
   50c60:	e13fff15 	stw	r4,-4(fp)
}
   50c64:	0001883a 	nop
   50c68:	e037883a 	mov	sp,fp
   50c6c:	df000017 	ldw	fp,0(sp)
   50c70:	dec00104 	addi	sp,sp,4
   50c74:	f800283a 	ret

00050c78 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   50c78:	defffe04 	addi	sp,sp,-8
   50c7c:	df000115 	stw	fp,4(sp)
   50c80:	df000104 	addi	fp,sp,4
   50c84:	e13fff15 	stw	r4,-4(fp)
}
   50c88:	0001883a 	nop
   50c8c:	e037883a 	mov	sp,fp
   50c90:	df000017 	ldw	fp,0(sp)
   50c94:	dec00104 	addi	sp,sp,4
   50c98:	f800283a 	ret

00050c9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50c9c:	defffe04 	addi	sp,sp,-8
   50ca0:	dfc00115 	stw	ra,4(sp)
   50ca4:	df000015 	stw	fp,0(sp)
   50ca8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50cac:	d0a00c17 	ldw	r2,-32720(gp)
   50cb0:	10000326 	beq	r2,zero,50cc0 <alt_get_errno+0x24>
   50cb4:	d0a00c17 	ldw	r2,-32720(gp)
   50cb8:	103ee83a 	callr	r2
   50cbc:	00000106 	br	50cc4 <alt_get_errno+0x28>
   50cc0:	d0a84a04 	addi	r2,gp,-24280
}
   50cc4:	e037883a 	mov	sp,fp
   50cc8:	dfc00117 	ldw	ra,4(sp)
   50ccc:	df000017 	ldw	fp,0(sp)
   50cd0:	dec00204 	addi	sp,sp,8
   50cd4:	f800283a 	ret

00050cd8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   50cd8:	defff904 	addi	sp,sp,-28
   50cdc:	dfc00615 	stw	ra,24(sp)
   50ce0:	df000515 	stw	fp,20(sp)
   50ce4:	df000504 	addi	fp,sp,20
   50ce8:	e13ffd15 	stw	r4,-12(fp)
   50cec:	e17ffe15 	stw	r5,-8(fp)
   50cf0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   50cf4:	e0bffd17 	ldw	r2,-12(fp)
   50cf8:	10000816 	blt	r2,zero,50d1c <read+0x44>
   50cfc:	01400304 	movi	r5,12
   50d00:	e13ffd17 	ldw	r4,-12(fp)
   50d04:	0041f400 	call	41f40 <__mulsi3>
   50d08:	1007883a 	mov	r3,r2
   50d0c:	00800174 	movhi	r2,5
   50d10:	108fda04 	addi	r2,r2,16232
   50d14:	1885883a 	add	r2,r3,r2
   50d18:	00000106 	br	50d20 <read+0x48>
   50d1c:	0005883a 	mov	r2,zero
   50d20:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   50d24:	e0bffb17 	ldw	r2,-20(fp)
   50d28:	10002226 	beq	r2,zero,50db4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   50d2c:	e0bffb17 	ldw	r2,-20(fp)
   50d30:	10800217 	ldw	r2,8(r2)
   50d34:	108000cc 	andi	r2,r2,3
   50d38:	10800060 	cmpeqi	r2,r2,1
   50d3c:	1000181e 	bne	r2,zero,50da0 <read+0xc8>
        (fd->dev->read))
   50d40:	e0bffb17 	ldw	r2,-20(fp)
   50d44:	10800017 	ldw	r2,0(r2)
   50d48:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   50d4c:	10001426 	beq	r2,zero,50da0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   50d50:	e0bffb17 	ldw	r2,-20(fp)
   50d54:	10800017 	ldw	r2,0(r2)
   50d58:	10800517 	ldw	r2,20(r2)
   50d5c:	e0ffff17 	ldw	r3,-4(fp)
   50d60:	180d883a 	mov	r6,r3
   50d64:	e17ffe17 	ldw	r5,-8(fp)
   50d68:	e13ffb17 	ldw	r4,-20(fp)
   50d6c:	103ee83a 	callr	r2
   50d70:	e0bffc15 	stw	r2,-16(fp)
   50d74:	e0bffc17 	ldw	r2,-16(fp)
   50d78:	1000070e 	bge	r2,zero,50d98 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   50d7c:	0050c9c0 	call	50c9c <alt_get_errno>
   50d80:	1007883a 	mov	r3,r2
   50d84:	e0bffc17 	ldw	r2,-16(fp)
   50d88:	0085c83a 	sub	r2,zero,r2
   50d8c:	18800015 	stw	r2,0(r3)
          return -1;
   50d90:	00bfffc4 	movi	r2,-1
   50d94:	00000c06 	br	50dc8 <read+0xf0>
        }
        return rval;
   50d98:	e0bffc17 	ldw	r2,-16(fp)
   50d9c:	00000a06 	br	50dc8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   50da0:	0050c9c0 	call	50c9c <alt_get_errno>
   50da4:	1007883a 	mov	r3,r2
   50da8:	00800344 	movi	r2,13
   50dac:	18800015 	stw	r2,0(r3)
   50db0:	00000406 	br	50dc4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   50db4:	0050c9c0 	call	50c9c <alt_get_errno>
   50db8:	1007883a 	mov	r3,r2
   50dbc:	00801444 	movi	r2,81
   50dc0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   50dc4:	00bfffc4 	movi	r2,-1
}
   50dc8:	e037883a 	mov	sp,fp
   50dcc:	dfc00117 	ldw	ra,4(sp)
   50dd0:	df000017 	ldw	fp,0(sp)
   50dd4:	dec00204 	addi	sp,sp,8
   50dd8:	f800283a 	ret

00050ddc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   50ddc:	defffc04 	addi	sp,sp,-16
   50de0:	dfc00315 	stw	ra,12(sp)
   50de4:	df000215 	stw	fp,8(sp)
   50de8:	dc000115 	stw	r16,4(sp)
   50dec:	df000204 	addi	fp,sp,8
   50df0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   50df4:	e0bffe17 	ldw	r2,-8(fp)
   50df8:	108000d0 	cmplti	r2,r2,3
   50dfc:	1000111e 	bne	r2,zero,50e44 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   50e00:	04000174 	movhi	r16,5
   50e04:	840fda04 	addi	r16,r16,16232
   50e08:	e0bffe17 	ldw	r2,-8(fp)
   50e0c:	01400304 	movi	r5,12
   50e10:	1009883a 	mov	r4,r2
   50e14:	0041f400 	call	41f40 <__mulsi3>
   50e18:	8085883a 	add	r2,r16,r2
   50e1c:	10800204 	addi	r2,r2,8
   50e20:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   50e24:	04000174 	movhi	r16,5
   50e28:	840fda04 	addi	r16,r16,16232
   50e2c:	e0bffe17 	ldw	r2,-8(fp)
   50e30:	01400304 	movi	r5,12
   50e34:	1009883a 	mov	r4,r2
   50e38:	0041f400 	call	41f40 <__mulsi3>
   50e3c:	8085883a 	add	r2,r16,r2
   50e40:	10000015 	stw	zero,0(r2)
  }
}
   50e44:	0001883a 	nop
   50e48:	e6ffff04 	addi	sp,fp,-4
   50e4c:	dfc00217 	ldw	ra,8(sp)
   50e50:	df000117 	ldw	fp,4(sp)
   50e54:	dc000017 	ldw	r16,0(sp)
   50e58:	dec00304 	addi	sp,sp,12
   50e5c:	f800283a 	ret

00050e60 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   50e60:	defff904 	addi	sp,sp,-28
   50e64:	df000615 	stw	fp,24(sp)
   50e68:	df000604 	addi	fp,sp,24
   50e6c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50e70:	0005303a 	rdctl	r2,status
   50e74:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50e78:	e0fffe17 	ldw	r3,-8(fp)
   50e7c:	00bfff84 	movi	r2,-2
   50e80:	1884703a 	and	r2,r3,r2
   50e84:	1001703a 	wrctl	status,r2
  
  return context;
   50e88:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   50e8c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   50e90:	d0a00d17 	ldw	r2,-32716(gp)
   50e94:	10c000c4 	addi	r3,r2,3
   50e98:	00bfff04 	movi	r2,-4
   50e9c:	1884703a 	and	r2,r3,r2
   50ea0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   50ea4:	d0e00d17 	ldw	r3,-32716(gp)
   50ea8:	e0bfff17 	ldw	r2,-4(fp)
   50eac:	1887883a 	add	r3,r3,r2
   50eb0:	008001b4 	movhi	r2,6
   50eb4:	10b0f004 	addi	r2,r2,-15424
   50eb8:	10c0062e 	bgeu	r2,r3,50ed4 <sbrk+0x74>
   50ebc:	e0bffb17 	ldw	r2,-20(fp)
   50ec0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50ec4:	e0bffa17 	ldw	r2,-24(fp)
   50ec8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   50ecc:	00bfffc4 	movi	r2,-1
   50ed0:	00000b06 	br	50f00 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   50ed4:	d0a00d17 	ldw	r2,-32716(gp)
   50ed8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   50edc:	d0e00d17 	ldw	r3,-32716(gp)
   50ee0:	e0bfff17 	ldw	r2,-4(fp)
   50ee4:	1885883a 	add	r2,r3,r2
   50ee8:	d0a00d15 	stw	r2,-32716(gp)
   50eec:	e0bffb17 	ldw	r2,-20(fp)
   50ef0:	e0bffc15 	stw	r2,-16(fp)
   50ef4:	e0bffc17 	ldw	r2,-16(fp)
   50ef8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   50efc:	e0bffd17 	ldw	r2,-12(fp)
} 
   50f00:	e037883a 	mov	sp,fp
   50f04:	df000017 	ldw	fp,0(sp)
   50f08:	dec00104 	addi	sp,sp,4
   50f0c:	f800283a 	ret

00050f10 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50f10:	defffe04 	addi	sp,sp,-8
   50f14:	dfc00115 	stw	ra,4(sp)
   50f18:	df000015 	stw	fp,0(sp)
   50f1c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50f20:	d0a00c17 	ldw	r2,-32720(gp)
   50f24:	10000326 	beq	r2,zero,50f34 <alt_get_errno+0x24>
   50f28:	d0a00c17 	ldw	r2,-32720(gp)
   50f2c:	103ee83a 	callr	r2
   50f30:	00000106 	br	50f38 <alt_get_errno+0x28>
   50f34:	d0a84a04 	addi	r2,gp,-24280
}
   50f38:	e037883a 	mov	sp,fp
   50f3c:	dfc00117 	ldw	ra,4(sp)
   50f40:	df000017 	ldw	fp,0(sp)
   50f44:	dec00204 	addi	sp,sp,8
   50f48:	f800283a 	ret

00050f4c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   50f4c:	defff904 	addi	sp,sp,-28
   50f50:	dfc00615 	stw	ra,24(sp)
   50f54:	df000515 	stw	fp,20(sp)
   50f58:	df000504 	addi	fp,sp,20
   50f5c:	e13ffd15 	stw	r4,-12(fp)
   50f60:	e17ffe15 	stw	r5,-8(fp)
   50f64:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   50f68:	e0bffd17 	ldw	r2,-12(fp)
   50f6c:	10000816 	blt	r2,zero,50f90 <write+0x44>
   50f70:	01400304 	movi	r5,12
   50f74:	e13ffd17 	ldw	r4,-12(fp)
   50f78:	0041f400 	call	41f40 <__mulsi3>
   50f7c:	1007883a 	mov	r3,r2
   50f80:	00800174 	movhi	r2,5
   50f84:	108fda04 	addi	r2,r2,16232
   50f88:	1885883a 	add	r2,r3,r2
   50f8c:	00000106 	br	50f94 <write+0x48>
   50f90:	0005883a 	mov	r2,zero
   50f94:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   50f98:	e0bffb17 	ldw	r2,-20(fp)
   50f9c:	10002126 	beq	r2,zero,51024 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   50fa0:	e0bffb17 	ldw	r2,-20(fp)
   50fa4:	10800217 	ldw	r2,8(r2)
   50fa8:	108000cc 	andi	r2,r2,3
   50fac:	10001826 	beq	r2,zero,51010 <write+0xc4>
   50fb0:	e0bffb17 	ldw	r2,-20(fp)
   50fb4:	10800017 	ldw	r2,0(r2)
   50fb8:	10800617 	ldw	r2,24(r2)
   50fbc:	10001426 	beq	r2,zero,51010 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   50fc0:	e0bffb17 	ldw	r2,-20(fp)
   50fc4:	10800017 	ldw	r2,0(r2)
   50fc8:	10800617 	ldw	r2,24(r2)
   50fcc:	e0ffff17 	ldw	r3,-4(fp)
   50fd0:	180d883a 	mov	r6,r3
   50fd4:	e17ffe17 	ldw	r5,-8(fp)
   50fd8:	e13ffb17 	ldw	r4,-20(fp)
   50fdc:	103ee83a 	callr	r2
   50fe0:	e0bffc15 	stw	r2,-16(fp)
   50fe4:	e0bffc17 	ldw	r2,-16(fp)
   50fe8:	1000070e 	bge	r2,zero,51008 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   50fec:	0050f100 	call	50f10 <alt_get_errno>
   50ff0:	1007883a 	mov	r3,r2
   50ff4:	e0bffc17 	ldw	r2,-16(fp)
   50ff8:	0085c83a 	sub	r2,zero,r2
   50ffc:	18800015 	stw	r2,0(r3)
        return -1;
   51000:	00bfffc4 	movi	r2,-1
   51004:	00000c06 	br	51038 <write+0xec>
      }
      return rval;
   51008:	e0bffc17 	ldw	r2,-16(fp)
   5100c:	00000a06 	br	51038 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   51010:	0050f100 	call	50f10 <alt_get_errno>
   51014:	1007883a 	mov	r3,r2
   51018:	00800344 	movi	r2,13
   5101c:	18800015 	stw	r2,0(r3)
   51020:	00000406 	br	51034 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   51024:	0050f100 	call	50f10 <alt_get_errno>
   51028:	1007883a 	mov	r3,r2
   5102c:	00801444 	movi	r2,81
   51030:	18800015 	stw	r2,0(r3)
  }
  return -1;
   51034:	00bfffc4 	movi	r2,-1
}
   51038:	e037883a 	mov	sp,fp
   5103c:	dfc00117 	ldw	ra,4(sp)
   51040:	df000017 	ldw	fp,0(sp)
   51044:	dec00204 	addi	sp,sp,8
   51048:	f800283a 	ret

0005104c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   5104c:	defffd04 	addi	sp,sp,-12
   51050:	dfc00215 	stw	ra,8(sp)
   51054:	df000115 	stw	fp,4(sp)
   51058:	df000104 	addi	fp,sp,4
   5105c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   51060:	d1600904 	addi	r5,gp,-32732
   51064:	e13fff17 	ldw	r4,-4(fp)
   51068:	0051cf00 	call	51cf0 <alt_dev_llist_insert>
}
   5106c:	e037883a 	mov	sp,fp
   51070:	dfc00117 	ldw	ra,4(sp)
   51074:	df000017 	ldw	fp,0(sp)
   51078:	dec00204 	addi	sp,sp,8
   5107c:	f800283a 	ret

00051080 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   51080:	defffd04 	addi	sp,sp,-12
   51084:	dfc00215 	stw	ra,8(sp)
   51088:	df000115 	stw	fp,4(sp)
   5108c:	df000104 	addi	fp,sp,4
   51090:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( PROCESSADOR, Processador);
   51094:	005269c0 	call	5269c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   51098:	00800044 	movi	r2,1
   5109c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   510a0:	0001883a 	nop
   510a4:	e037883a 	mov	sp,fp
   510a8:	dfc00117 	ldw	ra,4(sp)
   510ac:	df000017 	ldw	fp,0(sp)
   510b0:	dec00204 	addi	sp,sp,8
   510b4:	f800283a 	ret

000510b8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   510b8:	defffe04 	addi	sp,sp,-8
   510bc:	dfc00115 	stw	ra,4(sp)
   510c0:	df000015 	stw	fp,0(sp)
   510c4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   510c8:	01800184 	movi	r6,6
   510cc:	000b883a 	mov	r5,zero
   510d0:	01000174 	movhi	r4,5
   510d4:	21104404 	addi	r4,r4,16656
   510d8:	00512640 	call	51264 <altera_avalon_jtag_uart_init>
   510dc:	01000174 	movhi	r4,5
   510e0:	21103a04 	addi	r4,r4,16616
   510e4:	005104c0 	call	5104c <alt_dev_reg>
}
   510e8:	0001883a 	nop
   510ec:	e037883a 	mov	sp,fp
   510f0:	dfc00117 	ldw	ra,4(sp)
   510f4:	df000017 	ldw	fp,0(sp)
   510f8:	dec00204 	addi	sp,sp,8
   510fc:	f800283a 	ret

00051100 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   51100:	defffa04 	addi	sp,sp,-24
   51104:	dfc00515 	stw	ra,20(sp)
   51108:	df000415 	stw	fp,16(sp)
   5110c:	df000404 	addi	fp,sp,16
   51110:	e13ffd15 	stw	r4,-12(fp)
   51114:	e17ffe15 	stw	r5,-8(fp)
   51118:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   5111c:	e0bffd17 	ldw	r2,-12(fp)
   51120:	10800017 	ldw	r2,0(r2)
   51124:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   51128:	e0bffc17 	ldw	r2,-16(fp)
   5112c:	10c00a04 	addi	r3,r2,40
   51130:	e0bffd17 	ldw	r2,-12(fp)
   51134:	10800217 	ldw	r2,8(r2)
   51138:	100f883a 	mov	r7,r2
   5113c:	e1bfff17 	ldw	r6,-4(fp)
   51140:	e17ffe17 	ldw	r5,-8(fp)
   51144:	1809883a 	mov	r4,r3
   51148:	00517280 	call	51728 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   5114c:	e037883a 	mov	sp,fp
   51150:	dfc00117 	ldw	ra,4(sp)
   51154:	df000017 	ldw	fp,0(sp)
   51158:	dec00204 	addi	sp,sp,8
   5115c:	f800283a 	ret

00051160 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   51160:	defffa04 	addi	sp,sp,-24
   51164:	dfc00515 	stw	ra,20(sp)
   51168:	df000415 	stw	fp,16(sp)
   5116c:	df000404 	addi	fp,sp,16
   51170:	e13ffd15 	stw	r4,-12(fp)
   51174:	e17ffe15 	stw	r5,-8(fp)
   51178:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   5117c:	e0bffd17 	ldw	r2,-12(fp)
   51180:	10800017 	ldw	r2,0(r2)
   51184:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   51188:	e0bffc17 	ldw	r2,-16(fp)
   5118c:	10c00a04 	addi	r3,r2,40
   51190:	e0bffd17 	ldw	r2,-12(fp)
   51194:	10800217 	ldw	r2,8(r2)
   51198:	100f883a 	mov	r7,r2
   5119c:	e1bfff17 	ldw	r6,-4(fp)
   511a0:	e17ffe17 	ldw	r5,-8(fp)
   511a4:	1809883a 	mov	r4,r3
   511a8:	00519440 	call	51944 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   511ac:	e037883a 	mov	sp,fp
   511b0:	dfc00117 	ldw	ra,4(sp)
   511b4:	df000017 	ldw	fp,0(sp)
   511b8:	dec00204 	addi	sp,sp,8
   511bc:	f800283a 	ret

000511c0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   511c0:	defffc04 	addi	sp,sp,-16
   511c4:	dfc00315 	stw	ra,12(sp)
   511c8:	df000215 	stw	fp,8(sp)
   511cc:	df000204 	addi	fp,sp,8
   511d0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   511d4:	e0bfff17 	ldw	r2,-4(fp)
   511d8:	10800017 	ldw	r2,0(r2)
   511dc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   511e0:	e0bffe17 	ldw	r2,-8(fp)
   511e4:	10c00a04 	addi	r3,r2,40
   511e8:	e0bfff17 	ldw	r2,-4(fp)
   511ec:	10800217 	ldw	r2,8(r2)
   511f0:	100b883a 	mov	r5,r2
   511f4:	1809883a 	mov	r4,r3
   511f8:	00515d00 	call	515d0 <altera_avalon_jtag_uart_close>
}
   511fc:	e037883a 	mov	sp,fp
   51200:	dfc00117 	ldw	ra,4(sp)
   51204:	df000017 	ldw	fp,0(sp)
   51208:	dec00204 	addi	sp,sp,8
   5120c:	f800283a 	ret

00051210 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   51210:	defffa04 	addi	sp,sp,-24
   51214:	dfc00515 	stw	ra,20(sp)
   51218:	df000415 	stw	fp,16(sp)
   5121c:	df000404 	addi	fp,sp,16
   51220:	e13ffd15 	stw	r4,-12(fp)
   51224:	e17ffe15 	stw	r5,-8(fp)
   51228:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   5122c:	e0bffd17 	ldw	r2,-12(fp)
   51230:	10800017 	ldw	r2,0(r2)
   51234:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   51238:	e0bffc17 	ldw	r2,-16(fp)
   5123c:	10800a04 	addi	r2,r2,40
   51240:	e1bfff17 	ldw	r6,-4(fp)
   51244:	e17ffe17 	ldw	r5,-8(fp)
   51248:	1009883a 	mov	r4,r2
   5124c:	00516380 	call	51638 <altera_avalon_jtag_uart_ioctl>
}
   51250:	e037883a 	mov	sp,fp
   51254:	dfc00117 	ldw	ra,4(sp)
   51258:	df000017 	ldw	fp,0(sp)
   5125c:	dec00204 	addi	sp,sp,8
   51260:	f800283a 	ret

00051264 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   51264:	defffa04 	addi	sp,sp,-24
   51268:	dfc00515 	stw	ra,20(sp)
   5126c:	df000415 	stw	fp,16(sp)
   51270:	df000404 	addi	fp,sp,16
   51274:	e13ffd15 	stw	r4,-12(fp)
   51278:	e17ffe15 	stw	r5,-8(fp)
   5127c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   51280:	e0bffd17 	ldw	r2,-12(fp)
   51284:	00c00044 	movi	r3,1
   51288:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   5128c:	e0bffd17 	ldw	r2,-12(fp)
   51290:	10800017 	ldw	r2,0(r2)
   51294:	10800104 	addi	r2,r2,4
   51298:	1007883a 	mov	r3,r2
   5129c:	e0bffd17 	ldw	r2,-12(fp)
   512a0:	10800817 	ldw	r2,32(r2)
   512a4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   512a8:	e0bffe17 	ldw	r2,-8(fp)
   512ac:	e0ffff17 	ldw	r3,-4(fp)
   512b0:	d8000015 	stw	zero,0(sp)
   512b4:	e1fffd17 	ldw	r7,-12(fp)
   512b8:	01800174 	movhi	r6,5
   512bc:	3184c904 	addi	r6,r6,4900
   512c0:	180b883a 	mov	r5,r3
   512c4:	1009883a 	mov	r4,r2
   512c8:	0051e740 	call	51e74 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   512cc:	e0bffd17 	ldw	r2,-12(fp)
   512d0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   512d4:	e0bffd17 	ldw	r2,-12(fp)
   512d8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   512dc:	d0e84f17 	ldw	r3,-24260(gp)
   512e0:	e1fffd17 	ldw	r7,-12(fp)
   512e4:	01800174 	movhi	r6,5
   512e8:	31854c04 	addi	r6,r6,5424
   512ec:	180b883a 	mov	r5,r3
   512f0:	1009883a 	mov	r4,r2
   512f4:	0051b680 	call	51b68 <alt_alarm_start>
   512f8:	1000040e 	bge	r2,zero,5130c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   512fc:	e0fffd17 	ldw	r3,-12(fp)
   51300:	00a00034 	movhi	r2,32768
   51304:	10bfffc4 	addi	r2,r2,-1
   51308:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   5130c:	0001883a 	nop
   51310:	e037883a 	mov	sp,fp
   51314:	dfc00117 	ldw	ra,4(sp)
   51318:	df000017 	ldw	fp,0(sp)
   5131c:	dec00204 	addi	sp,sp,8
   51320:	f800283a 	ret

00051324 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   51324:	defff804 	addi	sp,sp,-32
   51328:	df000715 	stw	fp,28(sp)
   5132c:	df000704 	addi	fp,sp,28
   51330:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   51334:	e0bfff17 	ldw	r2,-4(fp)
   51338:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   5133c:	e0bffb17 	ldw	r2,-20(fp)
   51340:	10800017 	ldw	r2,0(r2)
   51344:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51348:	e0bffc17 	ldw	r2,-16(fp)
   5134c:	10800104 	addi	r2,r2,4
   51350:	10800037 	ldwio	r2,0(r2)
   51354:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   51358:	e0bffd17 	ldw	r2,-12(fp)
   5135c:	1080c00c 	andi	r2,r2,768
   51360:	10006d26 	beq	r2,zero,51518 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   51364:	e0bffd17 	ldw	r2,-12(fp)
   51368:	1080400c 	andi	r2,r2,256
   5136c:	10003526 	beq	r2,zero,51444 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   51370:	00800074 	movhi	r2,1
   51374:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51378:	e0bffb17 	ldw	r2,-20(fp)
   5137c:	10800a17 	ldw	r2,40(r2)
   51380:	10800044 	addi	r2,r2,1
   51384:	1081ffcc 	andi	r2,r2,2047
   51388:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   5138c:	e0bffb17 	ldw	r2,-20(fp)
   51390:	10c00b17 	ldw	r3,44(r2)
   51394:	e0bffe17 	ldw	r2,-8(fp)
   51398:	18801526 	beq	r3,r2,513f0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   5139c:	e0bffc17 	ldw	r2,-16(fp)
   513a0:	10800037 	ldwio	r2,0(r2)
   513a4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   513a8:	e0bff917 	ldw	r2,-28(fp)
   513ac:	10a0000c 	andi	r2,r2,32768
   513b0:	10001126 	beq	r2,zero,513f8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   513b4:	e0bffb17 	ldw	r2,-20(fp)
   513b8:	10800a17 	ldw	r2,40(r2)
   513bc:	e0fff917 	ldw	r3,-28(fp)
   513c0:	1809883a 	mov	r4,r3
   513c4:	e0fffb17 	ldw	r3,-20(fp)
   513c8:	1885883a 	add	r2,r3,r2
   513cc:	10800e04 	addi	r2,r2,56
   513d0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   513d4:	e0bffb17 	ldw	r2,-20(fp)
   513d8:	10800a17 	ldw	r2,40(r2)
   513dc:	10800044 	addi	r2,r2,1
   513e0:	10c1ffcc 	andi	r3,r2,2047
   513e4:	e0bffb17 	ldw	r2,-20(fp)
   513e8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   513ec:	003fe206 	br	51378 <_gp+0xffff4230>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   513f0:	0001883a 	nop
   513f4:	00000106 	br	513fc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   513f8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   513fc:	e0bff917 	ldw	r2,-28(fp)
   51400:	10bfffec 	andhi	r2,r2,65535
   51404:	10000f26 	beq	r2,zero,51444 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   51408:	e0bffb17 	ldw	r2,-20(fp)
   5140c:	10c00817 	ldw	r3,32(r2)
   51410:	00bfff84 	movi	r2,-2
   51414:	1886703a 	and	r3,r3,r2
   51418:	e0bffb17 	ldw	r2,-20(fp)
   5141c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   51420:	e0bffc17 	ldw	r2,-16(fp)
   51424:	10800104 	addi	r2,r2,4
   51428:	1007883a 	mov	r3,r2
   5142c:	e0bffb17 	ldw	r2,-20(fp)
   51430:	10800817 	ldw	r2,32(r2)
   51434:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51438:	e0bffc17 	ldw	r2,-16(fp)
   5143c:	10800104 	addi	r2,r2,4
   51440:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   51444:	e0bffd17 	ldw	r2,-12(fp)
   51448:	1080800c 	andi	r2,r2,512
   5144c:	103fbe26 	beq	r2,zero,51348 <_gp+0xffff4200>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   51450:	e0bffd17 	ldw	r2,-12(fp)
   51454:	1004d43a 	srli	r2,r2,16
   51458:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   5145c:	00001406 	br	514b0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   51460:	e0bffc17 	ldw	r2,-16(fp)
   51464:	e0fffb17 	ldw	r3,-20(fp)
   51468:	18c00d17 	ldw	r3,52(r3)
   5146c:	e13ffb17 	ldw	r4,-20(fp)
   51470:	20c7883a 	add	r3,r4,r3
   51474:	18c20e04 	addi	r3,r3,2104
   51478:	18c00003 	ldbu	r3,0(r3)
   5147c:	18c03fcc 	andi	r3,r3,255
   51480:	18c0201c 	xori	r3,r3,128
   51484:	18ffe004 	addi	r3,r3,-128
   51488:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   5148c:	e0bffb17 	ldw	r2,-20(fp)
   51490:	10800d17 	ldw	r2,52(r2)
   51494:	10800044 	addi	r2,r2,1
   51498:	10c1ffcc 	andi	r3,r2,2047
   5149c:	e0bffb17 	ldw	r2,-20(fp)
   514a0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   514a4:	e0bffa17 	ldw	r2,-24(fp)
   514a8:	10bfffc4 	addi	r2,r2,-1
   514ac:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   514b0:	e0bffa17 	ldw	r2,-24(fp)
   514b4:	10000526 	beq	r2,zero,514cc <altera_avalon_jtag_uart_irq+0x1a8>
   514b8:	e0bffb17 	ldw	r2,-20(fp)
   514bc:	10c00d17 	ldw	r3,52(r2)
   514c0:	e0bffb17 	ldw	r2,-20(fp)
   514c4:	10800c17 	ldw	r2,48(r2)
   514c8:	18bfe51e 	bne	r3,r2,51460 <_gp+0xffff4318>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   514cc:	e0bffa17 	ldw	r2,-24(fp)
   514d0:	103f9d26 	beq	r2,zero,51348 <_gp+0xffff4200>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   514d4:	e0bffb17 	ldw	r2,-20(fp)
   514d8:	10c00817 	ldw	r3,32(r2)
   514dc:	00bfff44 	movi	r2,-3
   514e0:	1886703a 	and	r3,r3,r2
   514e4:	e0bffb17 	ldw	r2,-20(fp)
   514e8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   514ec:	e0bffb17 	ldw	r2,-20(fp)
   514f0:	10800017 	ldw	r2,0(r2)
   514f4:	10800104 	addi	r2,r2,4
   514f8:	1007883a 	mov	r3,r2
   514fc:	e0bffb17 	ldw	r2,-20(fp)
   51500:	10800817 	ldw	r2,32(r2)
   51504:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51508:	e0bffc17 	ldw	r2,-16(fp)
   5150c:	10800104 	addi	r2,r2,4
   51510:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   51514:	003f8c06 	br	51348 <_gp+0xffff4200>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   51518:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   5151c:	0001883a 	nop
   51520:	e037883a 	mov	sp,fp
   51524:	df000017 	ldw	fp,0(sp)
   51528:	dec00104 	addi	sp,sp,4
   5152c:	f800283a 	ret

00051530 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   51530:	defff804 	addi	sp,sp,-32
   51534:	df000715 	stw	fp,28(sp)
   51538:	df000704 	addi	fp,sp,28
   5153c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   51540:	e0bffb17 	ldw	r2,-20(fp)
   51544:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   51548:	e0bff917 	ldw	r2,-28(fp)
   5154c:	10800017 	ldw	r2,0(r2)
   51550:	10800104 	addi	r2,r2,4
   51554:	10800037 	ldwio	r2,0(r2)
   51558:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   5155c:	e0bffa17 	ldw	r2,-24(fp)
   51560:	1081000c 	andi	r2,r2,1024
   51564:	10000b26 	beq	r2,zero,51594 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   51568:	e0bff917 	ldw	r2,-28(fp)
   5156c:	10800017 	ldw	r2,0(r2)
   51570:	10800104 	addi	r2,r2,4
   51574:	1007883a 	mov	r3,r2
   51578:	e0bff917 	ldw	r2,-28(fp)
   5157c:	10800817 	ldw	r2,32(r2)
   51580:	10810014 	ori	r2,r2,1024
   51584:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   51588:	e0bff917 	ldw	r2,-28(fp)
   5158c:	10000915 	stw	zero,36(r2)
   51590:	00000a06 	br	515bc <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   51594:	e0bff917 	ldw	r2,-28(fp)
   51598:	10c00917 	ldw	r3,36(r2)
   5159c:	00a00034 	movhi	r2,32768
   515a0:	10bfff04 	addi	r2,r2,-4
   515a4:	10c00536 	bltu	r2,r3,515bc <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   515a8:	e0bff917 	ldw	r2,-28(fp)
   515ac:	10800917 	ldw	r2,36(r2)
   515b0:	10c00044 	addi	r3,r2,1
   515b4:	e0bff917 	ldw	r2,-28(fp)
   515b8:	10c00915 	stw	r3,36(r2)
   515bc:	d0a84f17 	ldw	r2,-24260(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   515c0:	e037883a 	mov	sp,fp
   515c4:	df000017 	ldw	fp,0(sp)
   515c8:	dec00104 	addi	sp,sp,4
   515cc:	f800283a 	ret

000515d0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   515d0:	defffd04 	addi	sp,sp,-12
   515d4:	df000215 	stw	fp,8(sp)
   515d8:	df000204 	addi	fp,sp,8
   515dc:	e13ffe15 	stw	r4,-8(fp)
   515e0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   515e4:	00000506 	br	515fc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   515e8:	e0bfff17 	ldw	r2,-4(fp)
   515ec:	1090000c 	andi	r2,r2,16384
   515f0:	10000226 	beq	r2,zero,515fc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   515f4:	00bffd44 	movi	r2,-11
   515f8:	00000b06 	br	51628 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   515fc:	e0bffe17 	ldw	r2,-8(fp)
   51600:	10c00d17 	ldw	r3,52(r2)
   51604:	e0bffe17 	ldw	r2,-8(fp)
   51608:	10800c17 	ldw	r2,48(r2)
   5160c:	18800526 	beq	r3,r2,51624 <altera_avalon_jtag_uart_close+0x54>
   51610:	e0bffe17 	ldw	r2,-8(fp)
   51614:	10c00917 	ldw	r3,36(r2)
   51618:	e0bffe17 	ldw	r2,-8(fp)
   5161c:	10800117 	ldw	r2,4(r2)
   51620:	18bff136 	bltu	r3,r2,515e8 <_gp+0xffff44a0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   51624:	0005883a 	mov	r2,zero
}
   51628:	e037883a 	mov	sp,fp
   5162c:	df000017 	ldw	fp,0(sp)
   51630:	dec00104 	addi	sp,sp,4
   51634:	f800283a 	ret

00051638 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   51638:	defffa04 	addi	sp,sp,-24
   5163c:	df000515 	stw	fp,20(sp)
   51640:	df000504 	addi	fp,sp,20
   51644:	e13ffd15 	stw	r4,-12(fp)
   51648:	e17ffe15 	stw	r5,-8(fp)
   5164c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   51650:	00bff9c4 	movi	r2,-25
   51654:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   51658:	e0bffe17 	ldw	r2,-8(fp)
   5165c:	10da8060 	cmpeqi	r3,r2,27137
   51660:	1800031e 	bne	r3,zero,51670 <altera_avalon_jtag_uart_ioctl+0x38>
   51664:	109a80a0 	cmpeqi	r2,r2,27138
   51668:	1000181e 	bne	r2,zero,516cc <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   5166c:	00002906 	br	51714 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   51670:	e0bffd17 	ldw	r2,-12(fp)
   51674:	10c00117 	ldw	r3,4(r2)
   51678:	00a00034 	movhi	r2,32768
   5167c:	10bfffc4 	addi	r2,r2,-1
   51680:	18802126 	beq	r3,r2,51708 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   51684:	e0bfff17 	ldw	r2,-4(fp)
   51688:	10800017 	ldw	r2,0(r2)
   5168c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   51690:	e0bffc17 	ldw	r2,-16(fp)
   51694:	10800090 	cmplti	r2,r2,2
   51698:	1000061e 	bne	r2,zero,516b4 <altera_avalon_jtag_uart_ioctl+0x7c>
   5169c:	e0fffc17 	ldw	r3,-16(fp)
   516a0:	00a00034 	movhi	r2,32768
   516a4:	10bfffc4 	addi	r2,r2,-1
   516a8:	18800226 	beq	r3,r2,516b4 <altera_avalon_jtag_uart_ioctl+0x7c>
   516ac:	e0bffc17 	ldw	r2,-16(fp)
   516b0:	00000206 	br	516bc <altera_avalon_jtag_uart_ioctl+0x84>
   516b4:	00a00034 	movhi	r2,32768
   516b8:	10bfff84 	addi	r2,r2,-2
   516bc:	e0fffd17 	ldw	r3,-12(fp)
   516c0:	18800115 	stw	r2,4(r3)
      rc = 0;
   516c4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   516c8:	00000f06 	br	51708 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   516cc:	e0bffd17 	ldw	r2,-12(fp)
   516d0:	10c00117 	ldw	r3,4(r2)
   516d4:	00a00034 	movhi	r2,32768
   516d8:	10bfffc4 	addi	r2,r2,-1
   516dc:	18800c26 	beq	r3,r2,51710 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   516e0:	e0bffd17 	ldw	r2,-12(fp)
   516e4:	10c00917 	ldw	r3,36(r2)
   516e8:	e0bffd17 	ldw	r2,-12(fp)
   516ec:	10800117 	ldw	r2,4(r2)
   516f0:	1885803a 	cmpltu	r2,r3,r2
   516f4:	10c03fcc 	andi	r3,r2,255
   516f8:	e0bfff17 	ldw	r2,-4(fp)
   516fc:	10c00015 	stw	r3,0(r2)
      rc = 0;
   51700:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   51704:	00000206 	br	51710 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   51708:	0001883a 	nop
   5170c:	00000106 	br	51714 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   51710:	0001883a 	nop

  default:
    break;
  }

  return rc;
   51714:	e0bffb17 	ldw	r2,-20(fp)
}
   51718:	e037883a 	mov	sp,fp
   5171c:	df000017 	ldw	fp,0(sp)
   51720:	dec00104 	addi	sp,sp,4
   51724:	f800283a 	ret

00051728 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   51728:	defff304 	addi	sp,sp,-52
   5172c:	dfc00c15 	stw	ra,48(sp)
   51730:	df000b15 	stw	fp,44(sp)
   51734:	df000b04 	addi	fp,sp,44
   51738:	e13ffc15 	stw	r4,-16(fp)
   5173c:	e17ffd15 	stw	r5,-12(fp)
   51740:	e1bffe15 	stw	r6,-8(fp)
   51744:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   51748:	e0bffd17 	ldw	r2,-12(fp)
   5174c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   51750:	00004706 	br	51870 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   51754:	e0bffc17 	ldw	r2,-16(fp)
   51758:	10800a17 	ldw	r2,40(r2)
   5175c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   51760:	e0bffc17 	ldw	r2,-16(fp)
   51764:	10800b17 	ldw	r2,44(r2)
   51768:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   5176c:	e0fff717 	ldw	r3,-36(fp)
   51770:	e0bff817 	ldw	r2,-32(fp)
   51774:	18800536 	bltu	r3,r2,5178c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   51778:	e0fff717 	ldw	r3,-36(fp)
   5177c:	e0bff817 	ldw	r2,-32(fp)
   51780:	1885c83a 	sub	r2,r3,r2
   51784:	e0bff615 	stw	r2,-40(fp)
   51788:	00000406 	br	5179c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   5178c:	00c20004 	movi	r3,2048
   51790:	e0bff817 	ldw	r2,-32(fp)
   51794:	1885c83a 	sub	r2,r3,r2
   51798:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   5179c:	e0bff617 	ldw	r2,-40(fp)
   517a0:	10001e26 	beq	r2,zero,5181c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   517a4:	e0fffe17 	ldw	r3,-8(fp)
   517a8:	e0bff617 	ldw	r2,-40(fp)
   517ac:	1880022e 	bgeu	r3,r2,517b8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   517b0:	e0bffe17 	ldw	r2,-8(fp)
   517b4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   517b8:	e0bffc17 	ldw	r2,-16(fp)
   517bc:	10c00e04 	addi	r3,r2,56
   517c0:	e0bff817 	ldw	r2,-32(fp)
   517c4:	1885883a 	add	r2,r3,r2
   517c8:	e1bff617 	ldw	r6,-40(fp)
   517cc:	100b883a 	mov	r5,r2
   517d0:	e13ff517 	ldw	r4,-44(fp)
   517d4:	004bbb00 	call	4bbb0 <memcpy>
      ptr   += n;
   517d8:	e0fff517 	ldw	r3,-44(fp)
   517dc:	e0bff617 	ldw	r2,-40(fp)
   517e0:	1885883a 	add	r2,r3,r2
   517e4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   517e8:	e0fffe17 	ldw	r3,-8(fp)
   517ec:	e0bff617 	ldw	r2,-40(fp)
   517f0:	1885c83a 	sub	r2,r3,r2
   517f4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   517f8:	e0fff817 	ldw	r3,-32(fp)
   517fc:	e0bff617 	ldw	r2,-40(fp)
   51800:	1885883a 	add	r2,r3,r2
   51804:	10c1ffcc 	andi	r3,r2,2047
   51808:	e0bffc17 	ldw	r2,-16(fp)
   5180c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   51810:	e0bffe17 	ldw	r2,-8(fp)
   51814:	00bfcf16 	blt	zero,r2,51754 <_gp+0xffff460c>
   51818:	00000106 	br	51820 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   5181c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   51820:	e0fff517 	ldw	r3,-44(fp)
   51824:	e0bffd17 	ldw	r2,-12(fp)
   51828:	1880141e 	bne	r3,r2,5187c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   5182c:	e0bfff17 	ldw	r2,-4(fp)
   51830:	1090000c 	andi	r2,r2,16384
   51834:	1000131e 	bne	r2,zero,51884 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   51838:	0001883a 	nop
   5183c:	e0bffc17 	ldw	r2,-16(fp)
   51840:	10c00a17 	ldw	r3,40(r2)
   51844:	e0bff717 	ldw	r2,-36(fp)
   51848:	1880051e 	bne	r3,r2,51860 <altera_avalon_jtag_uart_read+0x138>
   5184c:	e0bffc17 	ldw	r2,-16(fp)
   51850:	10c00917 	ldw	r3,36(r2)
   51854:	e0bffc17 	ldw	r2,-16(fp)
   51858:	10800117 	ldw	r2,4(r2)
   5185c:	18bff736 	bltu	r3,r2,5183c <_gp+0xffff46f4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   51860:	e0bffc17 	ldw	r2,-16(fp)
   51864:	10c00a17 	ldw	r3,40(r2)
   51868:	e0bff717 	ldw	r2,-36(fp)
   5186c:	18800726 	beq	r3,r2,5188c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   51870:	e0bffe17 	ldw	r2,-8(fp)
   51874:	00bfb716 	blt	zero,r2,51754 <_gp+0xffff460c>
   51878:	00000506 	br	51890 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   5187c:	0001883a 	nop
   51880:	00000306 	br	51890 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   51884:	0001883a 	nop
   51888:	00000106 	br	51890 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   5188c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   51890:	e0fff517 	ldw	r3,-44(fp)
   51894:	e0bffd17 	ldw	r2,-12(fp)
   51898:	18801826 	beq	r3,r2,518fc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5189c:	0005303a 	rdctl	r2,status
   518a0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   518a4:	e0fffb17 	ldw	r3,-20(fp)
   518a8:	00bfff84 	movi	r2,-2
   518ac:	1884703a 	and	r2,r3,r2
   518b0:	1001703a 	wrctl	status,r2
  
  return context;
   518b4:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   518b8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   518bc:	e0bffc17 	ldw	r2,-16(fp)
   518c0:	10800817 	ldw	r2,32(r2)
   518c4:	10c00054 	ori	r3,r2,1
   518c8:	e0bffc17 	ldw	r2,-16(fp)
   518cc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   518d0:	e0bffc17 	ldw	r2,-16(fp)
   518d4:	10800017 	ldw	r2,0(r2)
   518d8:	10800104 	addi	r2,r2,4
   518dc:	1007883a 	mov	r3,r2
   518e0:	e0bffc17 	ldw	r2,-16(fp)
   518e4:	10800817 	ldw	r2,32(r2)
   518e8:	18800035 	stwio	r2,0(r3)
   518ec:	e0bffa17 	ldw	r2,-24(fp)
   518f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   518f4:	e0bff917 	ldw	r2,-28(fp)
   518f8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   518fc:	e0fff517 	ldw	r3,-44(fp)
   51900:	e0bffd17 	ldw	r2,-12(fp)
   51904:	18800426 	beq	r3,r2,51918 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   51908:	e0fff517 	ldw	r3,-44(fp)
   5190c:	e0bffd17 	ldw	r2,-12(fp)
   51910:	1885c83a 	sub	r2,r3,r2
   51914:	00000606 	br	51930 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   51918:	e0bfff17 	ldw	r2,-4(fp)
   5191c:	1090000c 	andi	r2,r2,16384
   51920:	10000226 	beq	r2,zero,5192c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   51924:	00bffd44 	movi	r2,-11
   51928:	00000106 	br	51930 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   5192c:	00bffec4 	movi	r2,-5
}
   51930:	e037883a 	mov	sp,fp
   51934:	dfc00117 	ldw	ra,4(sp)
   51938:	df000017 	ldw	fp,0(sp)
   5193c:	dec00204 	addi	sp,sp,8
   51940:	f800283a 	ret

00051944 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   51944:	defff304 	addi	sp,sp,-52
   51948:	dfc00c15 	stw	ra,48(sp)
   5194c:	df000b15 	stw	fp,44(sp)
   51950:	df000b04 	addi	fp,sp,44
   51954:	e13ffc15 	stw	r4,-16(fp)
   51958:	e17ffd15 	stw	r5,-12(fp)
   5195c:	e1bffe15 	stw	r6,-8(fp)
   51960:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   51964:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   51968:	e0bffd17 	ldw	r2,-12(fp)
   5196c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   51970:	00003706 	br	51a50 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   51974:	e0bffc17 	ldw	r2,-16(fp)
   51978:	10800c17 	ldw	r2,48(r2)
   5197c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   51980:	e0bffc17 	ldw	r2,-16(fp)
   51984:	10800d17 	ldw	r2,52(r2)
   51988:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   5198c:	e0fff917 	ldw	r3,-28(fp)
   51990:	e0bff517 	ldw	r2,-44(fp)
   51994:	1880062e 	bgeu	r3,r2,519b0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   51998:	e0fff517 	ldw	r3,-44(fp)
   5199c:	e0bff917 	ldw	r2,-28(fp)
   519a0:	1885c83a 	sub	r2,r3,r2
   519a4:	10bfffc4 	addi	r2,r2,-1
   519a8:	e0bff615 	stw	r2,-40(fp)
   519ac:	00000b06 	br	519dc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   519b0:	e0bff517 	ldw	r2,-44(fp)
   519b4:	10000526 	beq	r2,zero,519cc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   519b8:	00c20004 	movi	r3,2048
   519bc:	e0bff917 	ldw	r2,-28(fp)
   519c0:	1885c83a 	sub	r2,r3,r2
   519c4:	e0bff615 	stw	r2,-40(fp)
   519c8:	00000406 	br	519dc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   519cc:	00c1ffc4 	movi	r3,2047
   519d0:	e0bff917 	ldw	r2,-28(fp)
   519d4:	1885c83a 	sub	r2,r3,r2
   519d8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   519dc:	e0bff617 	ldw	r2,-40(fp)
   519e0:	10001e26 	beq	r2,zero,51a5c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   519e4:	e0fffe17 	ldw	r3,-8(fp)
   519e8:	e0bff617 	ldw	r2,-40(fp)
   519ec:	1880022e 	bgeu	r3,r2,519f8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   519f0:	e0bffe17 	ldw	r2,-8(fp)
   519f4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   519f8:	e0bffc17 	ldw	r2,-16(fp)
   519fc:	10c20e04 	addi	r3,r2,2104
   51a00:	e0bff917 	ldw	r2,-28(fp)
   51a04:	1885883a 	add	r2,r3,r2
   51a08:	e1bff617 	ldw	r6,-40(fp)
   51a0c:	e17ffd17 	ldw	r5,-12(fp)
   51a10:	1009883a 	mov	r4,r2
   51a14:	004bbb00 	call	4bbb0 <memcpy>
      ptr   += n;
   51a18:	e0fffd17 	ldw	r3,-12(fp)
   51a1c:	e0bff617 	ldw	r2,-40(fp)
   51a20:	1885883a 	add	r2,r3,r2
   51a24:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   51a28:	e0fffe17 	ldw	r3,-8(fp)
   51a2c:	e0bff617 	ldw	r2,-40(fp)
   51a30:	1885c83a 	sub	r2,r3,r2
   51a34:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51a38:	e0fff917 	ldw	r3,-28(fp)
   51a3c:	e0bff617 	ldw	r2,-40(fp)
   51a40:	1885883a 	add	r2,r3,r2
   51a44:	10c1ffcc 	andi	r3,r2,2047
   51a48:	e0bffc17 	ldw	r2,-16(fp)
   51a4c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   51a50:	e0bffe17 	ldw	r2,-8(fp)
   51a54:	00bfc716 	blt	zero,r2,51974 <_gp+0xffff482c>
   51a58:	00000106 	br	51a60 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   51a5c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51a60:	0005303a 	rdctl	r2,status
   51a64:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51a68:	e0fffb17 	ldw	r3,-20(fp)
   51a6c:	00bfff84 	movi	r2,-2
   51a70:	1884703a 	and	r2,r3,r2
   51a74:	1001703a 	wrctl	status,r2
  
  return context;
   51a78:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   51a7c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   51a80:	e0bffc17 	ldw	r2,-16(fp)
   51a84:	10800817 	ldw	r2,32(r2)
   51a88:	10c00094 	ori	r3,r2,2
   51a8c:	e0bffc17 	ldw	r2,-16(fp)
   51a90:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   51a94:	e0bffc17 	ldw	r2,-16(fp)
   51a98:	10800017 	ldw	r2,0(r2)
   51a9c:	10800104 	addi	r2,r2,4
   51aa0:	1007883a 	mov	r3,r2
   51aa4:	e0bffc17 	ldw	r2,-16(fp)
   51aa8:	10800817 	ldw	r2,32(r2)
   51aac:	18800035 	stwio	r2,0(r3)
   51ab0:	e0bffa17 	ldw	r2,-24(fp)
   51ab4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51ab8:	e0bff817 	ldw	r2,-32(fp)
   51abc:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   51ac0:	e0bffe17 	ldw	r2,-8(fp)
   51ac4:	0080100e 	bge	zero,r2,51b08 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   51ac8:	e0bfff17 	ldw	r2,-4(fp)
   51acc:	1090000c 	andi	r2,r2,16384
   51ad0:	1000101e 	bne	r2,zero,51b14 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   51ad4:	0001883a 	nop
   51ad8:	e0bffc17 	ldw	r2,-16(fp)
   51adc:	10c00d17 	ldw	r3,52(r2)
   51ae0:	e0bff517 	ldw	r2,-44(fp)
   51ae4:	1880051e 	bne	r3,r2,51afc <altera_avalon_jtag_uart_write+0x1b8>
   51ae8:	e0bffc17 	ldw	r2,-16(fp)
   51aec:	10c00917 	ldw	r3,36(r2)
   51af0:	e0bffc17 	ldw	r2,-16(fp)
   51af4:	10800117 	ldw	r2,4(r2)
   51af8:	18bff736 	bltu	r3,r2,51ad8 <_gp+0xffff4990>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   51afc:	e0bffc17 	ldw	r2,-16(fp)
   51b00:	10800917 	ldw	r2,36(r2)
   51b04:	1000051e 	bne	r2,zero,51b1c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   51b08:	e0bffe17 	ldw	r2,-8(fp)
   51b0c:	00bfd016 	blt	zero,r2,51a50 <_gp+0xffff4908>
   51b10:	00000306 	br	51b20 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   51b14:	0001883a 	nop
   51b18:	00000106 	br	51b20 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   51b1c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   51b20:	e0fffd17 	ldw	r3,-12(fp)
   51b24:	e0bff717 	ldw	r2,-36(fp)
   51b28:	18800426 	beq	r3,r2,51b3c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   51b2c:	e0fffd17 	ldw	r3,-12(fp)
   51b30:	e0bff717 	ldw	r2,-36(fp)
   51b34:	1885c83a 	sub	r2,r3,r2
   51b38:	00000606 	br	51b54 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   51b3c:	e0bfff17 	ldw	r2,-4(fp)
   51b40:	1090000c 	andi	r2,r2,16384
   51b44:	10000226 	beq	r2,zero,51b50 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   51b48:	00bffd44 	movi	r2,-11
   51b4c:	00000106 	br	51b54 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   51b50:	00bffec4 	movi	r2,-5
}
   51b54:	e037883a 	mov	sp,fp
   51b58:	dfc00117 	ldw	ra,4(sp)
   51b5c:	df000017 	ldw	fp,0(sp)
   51b60:	dec00204 	addi	sp,sp,8
   51b64:	f800283a 	ret

00051b68 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   51b68:	defff504 	addi	sp,sp,-44
   51b6c:	df000a15 	stw	fp,40(sp)
   51b70:	df000a04 	addi	fp,sp,40
   51b74:	e13ffc15 	stw	r4,-16(fp)
   51b78:	e17ffd15 	stw	r5,-12(fp)
   51b7c:	e1bffe15 	stw	r6,-8(fp)
   51b80:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   51b84:	e03ff615 	stw	zero,-40(fp)
   51b88:	d0a84f17 	ldw	r2,-24260(gp)
  
  if (alt_ticks_per_second ())
   51b8c:	10003c26 	beq	r2,zero,51c80 <alt_alarm_start+0x118>
  {
    if (alarm)
   51b90:	e0bffc17 	ldw	r2,-16(fp)
   51b94:	10003826 	beq	r2,zero,51c78 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   51b98:	e0bffc17 	ldw	r2,-16(fp)
   51b9c:	e0fffe17 	ldw	r3,-8(fp)
   51ba0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   51ba4:	e0bffc17 	ldw	r2,-16(fp)
   51ba8:	e0ffff17 	ldw	r3,-4(fp)
   51bac:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51bb0:	0005303a 	rdctl	r2,status
   51bb4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51bb8:	e0fff917 	ldw	r3,-28(fp)
   51bbc:	00bfff84 	movi	r2,-2
   51bc0:	1884703a 	and	r2,r3,r2
   51bc4:	1001703a 	wrctl	status,r2
  
  return context;
   51bc8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   51bcc:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   51bd0:	d0a85017 	ldw	r2,-24256(gp)
      
      current_nticks = alt_nticks();
   51bd4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   51bd8:	e0fffd17 	ldw	r3,-12(fp)
   51bdc:	e0bff617 	ldw	r2,-40(fp)
   51be0:	1885883a 	add	r2,r3,r2
   51be4:	10c00044 	addi	r3,r2,1
   51be8:	e0bffc17 	ldw	r2,-16(fp)
   51bec:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   51bf0:	e0bffc17 	ldw	r2,-16(fp)
   51bf4:	10c00217 	ldw	r3,8(r2)
   51bf8:	e0bff617 	ldw	r2,-40(fp)
   51bfc:	1880042e 	bgeu	r3,r2,51c10 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   51c00:	e0bffc17 	ldw	r2,-16(fp)
   51c04:	00c00044 	movi	r3,1
   51c08:	10c00405 	stb	r3,16(r2)
   51c0c:	00000206 	br	51c18 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   51c10:	e0bffc17 	ldw	r2,-16(fp)
   51c14:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   51c18:	e0bffc17 	ldw	r2,-16(fp)
   51c1c:	d0e00f04 	addi	r3,gp,-32708
   51c20:	e0fffa15 	stw	r3,-24(fp)
   51c24:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   51c28:	e0bffb17 	ldw	r2,-20(fp)
   51c2c:	e0fffa17 	ldw	r3,-24(fp)
   51c30:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   51c34:	e0bffa17 	ldw	r2,-24(fp)
   51c38:	10c00017 	ldw	r3,0(r2)
   51c3c:	e0bffb17 	ldw	r2,-20(fp)
   51c40:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   51c44:	e0bffa17 	ldw	r2,-24(fp)
   51c48:	10800017 	ldw	r2,0(r2)
   51c4c:	e0fffb17 	ldw	r3,-20(fp)
   51c50:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   51c54:	e0bffa17 	ldw	r2,-24(fp)
   51c58:	e0fffb17 	ldw	r3,-20(fp)
   51c5c:	10c00015 	stw	r3,0(r2)
   51c60:	e0bff817 	ldw	r2,-32(fp)
   51c64:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51c68:	e0bff717 	ldw	r2,-36(fp)
   51c6c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   51c70:	0005883a 	mov	r2,zero
   51c74:	00000306 	br	51c84 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   51c78:	00bffa84 	movi	r2,-22
   51c7c:	00000106 	br	51c84 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   51c80:	00bfde84 	movi	r2,-134
  }
}
   51c84:	e037883a 	mov	sp,fp
   51c88:	df000017 	ldw	fp,0(sp)
   51c8c:	dec00104 	addi	sp,sp,4
   51c90:	f800283a 	ret

00051c94 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   51c94:	deffff04 	addi	sp,sp,-4
   51c98:	df000015 	stw	fp,0(sp)
   51c9c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   51ca0:	0001883a 	nop
   51ca4:	e037883a 	mov	sp,fp
   51ca8:	df000017 	ldw	fp,0(sp)
   51cac:	dec00104 	addi	sp,sp,4
   51cb0:	f800283a 	ret

00051cb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   51cb4:	defffe04 	addi	sp,sp,-8
   51cb8:	dfc00115 	stw	ra,4(sp)
   51cbc:	df000015 	stw	fp,0(sp)
   51cc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51cc4:	d0a00c17 	ldw	r2,-32720(gp)
   51cc8:	10000326 	beq	r2,zero,51cd8 <alt_get_errno+0x24>
   51ccc:	d0a00c17 	ldw	r2,-32720(gp)
   51cd0:	103ee83a 	callr	r2
   51cd4:	00000106 	br	51cdc <alt_get_errno+0x28>
   51cd8:	d0a84a04 	addi	r2,gp,-24280
}
   51cdc:	e037883a 	mov	sp,fp
   51ce0:	dfc00117 	ldw	ra,4(sp)
   51ce4:	df000017 	ldw	fp,0(sp)
   51ce8:	dec00204 	addi	sp,sp,8
   51cec:	f800283a 	ret

00051cf0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   51cf0:	defffa04 	addi	sp,sp,-24
   51cf4:	dfc00515 	stw	ra,20(sp)
   51cf8:	df000415 	stw	fp,16(sp)
   51cfc:	df000404 	addi	fp,sp,16
   51d00:	e13ffe15 	stw	r4,-8(fp)
   51d04:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   51d08:	e0bffe17 	ldw	r2,-8(fp)
   51d0c:	10000326 	beq	r2,zero,51d1c <alt_dev_llist_insert+0x2c>
   51d10:	e0bffe17 	ldw	r2,-8(fp)
   51d14:	10800217 	ldw	r2,8(r2)
   51d18:	1000061e 	bne	r2,zero,51d34 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   51d1c:	0051cb40 	call	51cb4 <alt_get_errno>
   51d20:	1007883a 	mov	r3,r2
   51d24:	00800584 	movi	r2,22
   51d28:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   51d2c:	00bffa84 	movi	r2,-22
   51d30:	00001306 	br	51d80 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   51d34:	e0bffe17 	ldw	r2,-8(fp)
   51d38:	e0ffff17 	ldw	r3,-4(fp)
   51d3c:	e0fffc15 	stw	r3,-16(fp)
   51d40:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   51d44:	e0bffd17 	ldw	r2,-12(fp)
   51d48:	e0fffc17 	ldw	r3,-16(fp)
   51d4c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   51d50:	e0bffc17 	ldw	r2,-16(fp)
   51d54:	10c00017 	ldw	r3,0(r2)
   51d58:	e0bffd17 	ldw	r2,-12(fp)
   51d5c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   51d60:	e0bffc17 	ldw	r2,-16(fp)
   51d64:	10800017 	ldw	r2,0(r2)
   51d68:	e0fffd17 	ldw	r3,-12(fp)
   51d6c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   51d70:	e0bffc17 	ldw	r2,-16(fp)
   51d74:	e0fffd17 	ldw	r3,-12(fp)
   51d78:	10c00015 	stw	r3,0(r2)

  return 0;  
   51d7c:	0005883a 	mov	r2,zero
}
   51d80:	e037883a 	mov	sp,fp
   51d84:	dfc00117 	ldw	ra,4(sp)
   51d88:	df000017 	ldw	fp,0(sp)
   51d8c:	dec00204 	addi	sp,sp,8
   51d90:	f800283a 	ret

00051d94 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   51d94:	defffd04 	addi	sp,sp,-12
   51d98:	dfc00215 	stw	ra,8(sp)
   51d9c:	df000115 	stw	fp,4(sp)
   51da0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   51da4:	00800174 	movhi	r2,5
   51da8:	108b5204 	addi	r2,r2,11592
   51dac:	e0bfff15 	stw	r2,-4(fp)
   51db0:	00000606 	br	51dcc <_do_ctors+0x38>
        (*ctor) (); 
   51db4:	e0bfff17 	ldw	r2,-4(fp)
   51db8:	10800017 	ldw	r2,0(r2)
   51dbc:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   51dc0:	e0bfff17 	ldw	r2,-4(fp)
   51dc4:	10bfff04 	addi	r2,r2,-4
   51dc8:	e0bfff15 	stw	r2,-4(fp)
   51dcc:	e0ffff17 	ldw	r3,-4(fp)
   51dd0:	00800174 	movhi	r2,5
   51dd4:	108b5304 	addi	r2,r2,11596
   51dd8:	18bff62e 	bgeu	r3,r2,51db4 <_gp+0xffff4c6c>
        (*ctor) (); 
}
   51ddc:	0001883a 	nop
   51de0:	e037883a 	mov	sp,fp
   51de4:	dfc00117 	ldw	ra,4(sp)
   51de8:	df000017 	ldw	fp,0(sp)
   51dec:	dec00204 	addi	sp,sp,8
   51df0:	f800283a 	ret

00051df4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   51df4:	defffd04 	addi	sp,sp,-12
   51df8:	dfc00215 	stw	ra,8(sp)
   51dfc:	df000115 	stw	fp,4(sp)
   51e00:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   51e04:	00800174 	movhi	r2,5
   51e08:	108b5204 	addi	r2,r2,11592
   51e0c:	e0bfff15 	stw	r2,-4(fp)
   51e10:	00000606 	br	51e2c <_do_dtors+0x38>
        (*dtor) (); 
   51e14:	e0bfff17 	ldw	r2,-4(fp)
   51e18:	10800017 	ldw	r2,0(r2)
   51e1c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   51e20:	e0bfff17 	ldw	r2,-4(fp)
   51e24:	10bfff04 	addi	r2,r2,-4
   51e28:	e0bfff15 	stw	r2,-4(fp)
   51e2c:	e0ffff17 	ldw	r3,-4(fp)
   51e30:	00800174 	movhi	r2,5
   51e34:	108b5304 	addi	r2,r2,11596
   51e38:	18bff62e 	bgeu	r3,r2,51e14 <_gp+0xffff4ccc>
        (*dtor) (); 
}
   51e3c:	0001883a 	nop
   51e40:	e037883a 	mov	sp,fp
   51e44:	dfc00117 	ldw	ra,4(sp)
   51e48:	df000017 	ldw	fp,0(sp)
   51e4c:	dec00204 	addi	sp,sp,8
   51e50:	f800283a 	ret

00051e54 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   51e54:	deffff04 	addi	sp,sp,-4
   51e58:	df000015 	stw	fp,0(sp)
   51e5c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   51e60:	0001883a 	nop
   51e64:	e037883a 	mov	sp,fp
   51e68:	df000017 	ldw	fp,0(sp)
   51e6c:	dec00104 	addi	sp,sp,4
   51e70:	f800283a 	ret

00051e74 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   51e74:	defff904 	addi	sp,sp,-28
   51e78:	dfc00615 	stw	ra,24(sp)
   51e7c:	df000515 	stw	fp,20(sp)
   51e80:	df000504 	addi	fp,sp,20
   51e84:	e13ffc15 	stw	r4,-16(fp)
   51e88:	e17ffd15 	stw	r5,-12(fp)
   51e8c:	e1bffe15 	stw	r6,-8(fp)
   51e90:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   51e94:	e0800217 	ldw	r2,8(fp)
   51e98:	d8800015 	stw	r2,0(sp)
   51e9c:	e1ffff17 	ldw	r7,-4(fp)
   51ea0:	e1bffe17 	ldw	r6,-8(fp)
   51ea4:	e17ffd17 	ldw	r5,-12(fp)
   51ea8:	e13ffc17 	ldw	r4,-16(fp)
   51eac:	00520240 	call	52024 <alt_iic_isr_register>
}  
   51eb0:	e037883a 	mov	sp,fp
   51eb4:	dfc00117 	ldw	ra,4(sp)
   51eb8:	df000017 	ldw	fp,0(sp)
   51ebc:	dec00204 	addi	sp,sp,8
   51ec0:	f800283a 	ret

00051ec4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   51ec4:	defff904 	addi	sp,sp,-28
   51ec8:	df000615 	stw	fp,24(sp)
   51ecc:	df000604 	addi	fp,sp,24
   51ed0:	e13ffe15 	stw	r4,-8(fp)
   51ed4:	e17fff15 	stw	r5,-4(fp)
   51ed8:	e0bfff17 	ldw	r2,-4(fp)
   51edc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51ee0:	0005303a 	rdctl	r2,status
   51ee4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51ee8:	e0fffb17 	ldw	r3,-20(fp)
   51eec:	00bfff84 	movi	r2,-2
   51ef0:	1884703a 	and	r2,r3,r2
   51ef4:	1001703a 	wrctl	status,r2
  
  return context;
   51ef8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   51efc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   51f00:	00c00044 	movi	r3,1
   51f04:	e0bffa17 	ldw	r2,-24(fp)
   51f08:	1884983a 	sll	r2,r3,r2
   51f0c:	1007883a 	mov	r3,r2
   51f10:	d0a84e17 	ldw	r2,-24264(gp)
   51f14:	1884b03a 	or	r2,r3,r2
   51f18:	d0a84e15 	stw	r2,-24264(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   51f1c:	d0a84e17 	ldw	r2,-24264(gp)
   51f20:	100170fa 	wrctl	ienable,r2
   51f24:	e0bffc17 	ldw	r2,-16(fp)
   51f28:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51f2c:	e0bffd17 	ldw	r2,-12(fp)
   51f30:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   51f34:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   51f38:	0001883a 	nop
}
   51f3c:	e037883a 	mov	sp,fp
   51f40:	df000017 	ldw	fp,0(sp)
   51f44:	dec00104 	addi	sp,sp,4
   51f48:	f800283a 	ret

00051f4c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   51f4c:	defff904 	addi	sp,sp,-28
   51f50:	df000615 	stw	fp,24(sp)
   51f54:	df000604 	addi	fp,sp,24
   51f58:	e13ffe15 	stw	r4,-8(fp)
   51f5c:	e17fff15 	stw	r5,-4(fp)
   51f60:	e0bfff17 	ldw	r2,-4(fp)
   51f64:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51f68:	0005303a 	rdctl	r2,status
   51f6c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51f70:	e0fffb17 	ldw	r3,-20(fp)
   51f74:	00bfff84 	movi	r2,-2
   51f78:	1884703a 	and	r2,r3,r2
   51f7c:	1001703a 	wrctl	status,r2
  
  return context;
   51f80:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   51f84:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   51f88:	00c00044 	movi	r3,1
   51f8c:	e0bffa17 	ldw	r2,-24(fp)
   51f90:	1884983a 	sll	r2,r3,r2
   51f94:	0084303a 	nor	r2,zero,r2
   51f98:	1007883a 	mov	r3,r2
   51f9c:	d0a84e17 	ldw	r2,-24264(gp)
   51fa0:	1884703a 	and	r2,r3,r2
   51fa4:	d0a84e15 	stw	r2,-24264(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   51fa8:	d0a84e17 	ldw	r2,-24264(gp)
   51fac:	100170fa 	wrctl	ienable,r2
   51fb0:	e0bffc17 	ldw	r2,-16(fp)
   51fb4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51fb8:	e0bffd17 	ldw	r2,-12(fp)
   51fbc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   51fc0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   51fc4:	0001883a 	nop
}
   51fc8:	e037883a 	mov	sp,fp
   51fcc:	df000017 	ldw	fp,0(sp)
   51fd0:	dec00104 	addi	sp,sp,4
   51fd4:	f800283a 	ret

00051fd8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   51fd8:	defffc04 	addi	sp,sp,-16
   51fdc:	df000315 	stw	fp,12(sp)
   51fe0:	df000304 	addi	fp,sp,12
   51fe4:	e13ffe15 	stw	r4,-8(fp)
   51fe8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   51fec:	000530fa 	rdctl	r2,ienable
   51ff0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   51ff4:	00c00044 	movi	r3,1
   51ff8:	e0bfff17 	ldw	r2,-4(fp)
   51ffc:	1884983a 	sll	r2,r3,r2
   52000:	1007883a 	mov	r3,r2
   52004:	e0bffd17 	ldw	r2,-12(fp)
   52008:	1884703a 	and	r2,r3,r2
   5200c:	1004c03a 	cmpne	r2,r2,zero
   52010:	10803fcc 	andi	r2,r2,255
}
   52014:	e037883a 	mov	sp,fp
   52018:	df000017 	ldw	fp,0(sp)
   5201c:	dec00104 	addi	sp,sp,4
   52020:	f800283a 	ret

00052024 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   52024:	defff504 	addi	sp,sp,-44
   52028:	dfc00a15 	stw	ra,40(sp)
   5202c:	df000915 	stw	fp,36(sp)
   52030:	df000904 	addi	fp,sp,36
   52034:	e13ffc15 	stw	r4,-16(fp)
   52038:	e17ffd15 	stw	r5,-12(fp)
   5203c:	e1bffe15 	stw	r6,-8(fp)
   52040:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   52044:	00bffa84 	movi	r2,-22
   52048:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   5204c:	e0bffd17 	ldw	r2,-12(fp)
   52050:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   52054:	e0bff817 	ldw	r2,-32(fp)
   52058:	10800808 	cmpgei	r2,r2,32
   5205c:	1000271e 	bne	r2,zero,520fc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52060:	0005303a 	rdctl	r2,status
   52064:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52068:	e0fffb17 	ldw	r3,-20(fp)
   5206c:	00bfff84 	movi	r2,-2
   52070:	1884703a 	and	r2,r3,r2
   52074:	1001703a 	wrctl	status,r2
  
  return context;
   52078:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   5207c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   52080:	00800174 	movhi	r2,5
   52084:	109cae04 	addi	r2,r2,29368
   52088:	e0fff817 	ldw	r3,-32(fp)
   5208c:	180690fa 	slli	r3,r3,3
   52090:	10c5883a 	add	r2,r2,r3
   52094:	e0fffe17 	ldw	r3,-8(fp)
   52098:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   5209c:	00800174 	movhi	r2,5
   520a0:	109cae04 	addi	r2,r2,29368
   520a4:	e0fff817 	ldw	r3,-32(fp)
   520a8:	180690fa 	slli	r3,r3,3
   520ac:	10c5883a 	add	r2,r2,r3
   520b0:	10800104 	addi	r2,r2,4
   520b4:	e0ffff17 	ldw	r3,-4(fp)
   520b8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   520bc:	e0bffe17 	ldw	r2,-8(fp)
   520c0:	10000526 	beq	r2,zero,520d8 <alt_iic_isr_register+0xb4>
   520c4:	e0bff817 	ldw	r2,-32(fp)
   520c8:	100b883a 	mov	r5,r2
   520cc:	e13ffc17 	ldw	r4,-16(fp)
   520d0:	0051ec40 	call	51ec4 <alt_ic_irq_enable>
   520d4:	00000406 	br	520e8 <alt_iic_isr_register+0xc4>
   520d8:	e0bff817 	ldw	r2,-32(fp)
   520dc:	100b883a 	mov	r5,r2
   520e0:	e13ffc17 	ldw	r4,-16(fp)
   520e4:	0051f4c0 	call	51f4c <alt_ic_irq_disable>
   520e8:	e0bff715 	stw	r2,-36(fp)
   520ec:	e0bffa17 	ldw	r2,-24(fp)
   520f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   520f4:	e0bff917 	ldw	r2,-28(fp)
   520f8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   520fc:	e0bff717 	ldw	r2,-36(fp)
}
   52100:	e037883a 	mov	sp,fp
   52104:	dfc00117 	ldw	ra,4(sp)
   52108:	df000017 	ldw	fp,0(sp)
   5210c:	dec00204 	addi	sp,sp,8
   52110:	f800283a 	ret

00052114 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   52114:	defff804 	addi	sp,sp,-32
   52118:	dfc00715 	stw	ra,28(sp)
   5211c:	df000615 	stw	fp,24(sp)
   52120:	dc000515 	stw	r16,20(sp)
   52124:	df000604 	addi	fp,sp,24
   52128:	e13ffb15 	stw	r4,-20(fp)
   5212c:	e17ffc15 	stw	r5,-16(fp)
   52130:	e1bffd15 	stw	r6,-12(fp)
   52134:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   52138:	e1bffe17 	ldw	r6,-8(fp)
   5213c:	e17ffd17 	ldw	r5,-12(fp)
   52140:	e13ffc17 	ldw	r4,-16(fp)
   52144:	005239c0 	call	5239c <open>
   52148:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   5214c:	e0bffa17 	ldw	r2,-24(fp)
   52150:	10002216 	blt	r2,zero,521dc <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   52154:	04000174 	movhi	r16,5
   52158:	840fda04 	addi	r16,r16,16232
   5215c:	e0bffa17 	ldw	r2,-24(fp)
   52160:	01400304 	movi	r5,12
   52164:	1009883a 	mov	r4,r2
   52168:	0041f400 	call	41f40 <__mulsi3>
   5216c:	8085883a 	add	r2,r16,r2
   52170:	10c00017 	ldw	r3,0(r2)
   52174:	e0bffb17 	ldw	r2,-20(fp)
   52178:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   5217c:	04000174 	movhi	r16,5
   52180:	840fda04 	addi	r16,r16,16232
   52184:	e0bffa17 	ldw	r2,-24(fp)
   52188:	01400304 	movi	r5,12
   5218c:	1009883a 	mov	r4,r2
   52190:	0041f400 	call	41f40 <__mulsi3>
   52194:	8085883a 	add	r2,r16,r2
   52198:	10800104 	addi	r2,r2,4
   5219c:	10c00017 	ldw	r3,0(r2)
   521a0:	e0bffb17 	ldw	r2,-20(fp)
   521a4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   521a8:	04000174 	movhi	r16,5
   521ac:	840fda04 	addi	r16,r16,16232
   521b0:	e0bffa17 	ldw	r2,-24(fp)
   521b4:	01400304 	movi	r5,12
   521b8:	1009883a 	mov	r4,r2
   521bc:	0041f400 	call	41f40 <__mulsi3>
   521c0:	8085883a 	add	r2,r16,r2
   521c4:	10800204 	addi	r2,r2,8
   521c8:	10c00017 	ldw	r3,0(r2)
   521cc:	e0bffb17 	ldw	r2,-20(fp)
   521d0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   521d4:	e13ffa17 	ldw	r4,-24(fp)
   521d8:	0050ddc0 	call	50ddc <alt_release_fd>
  }
} 
   521dc:	0001883a 	nop
   521e0:	e6ffff04 	addi	sp,fp,-4
   521e4:	dfc00217 	ldw	ra,8(sp)
   521e8:	df000117 	ldw	fp,4(sp)
   521ec:	dc000017 	ldw	r16,0(sp)
   521f0:	dec00304 	addi	sp,sp,12
   521f4:	f800283a 	ret

000521f8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   521f8:	defffb04 	addi	sp,sp,-20
   521fc:	dfc00415 	stw	ra,16(sp)
   52200:	df000315 	stw	fp,12(sp)
   52204:	df000304 	addi	fp,sp,12
   52208:	e13ffd15 	stw	r4,-12(fp)
   5220c:	e17ffe15 	stw	r5,-8(fp)
   52210:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   52214:	01c07fc4 	movi	r7,511
   52218:	01800044 	movi	r6,1
   5221c:	e17ffd17 	ldw	r5,-12(fp)
   52220:	01000174 	movhi	r4,5
   52224:	210fdd04 	addi	r4,r4,16244
   52228:	00521140 	call	52114 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   5222c:	01c07fc4 	movi	r7,511
   52230:	000d883a 	mov	r6,zero
   52234:	e17ffe17 	ldw	r5,-8(fp)
   52238:	01000174 	movhi	r4,5
   5223c:	210fda04 	addi	r4,r4,16232
   52240:	00521140 	call	52114 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   52244:	01c07fc4 	movi	r7,511
   52248:	01800044 	movi	r6,1
   5224c:	e17fff17 	ldw	r5,-4(fp)
   52250:	01000174 	movhi	r4,5
   52254:	210fe004 	addi	r4,r4,16256
   52258:	00521140 	call	52114 <alt_open_fd>
}  
   5225c:	0001883a 	nop
   52260:	e037883a 	mov	sp,fp
   52264:	dfc00117 	ldw	ra,4(sp)
   52268:	df000017 	ldw	fp,0(sp)
   5226c:	dec00204 	addi	sp,sp,8
   52270:	f800283a 	ret

00052274 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   52274:	defffe04 	addi	sp,sp,-8
   52278:	dfc00115 	stw	ra,4(sp)
   5227c:	df000015 	stw	fp,0(sp)
   52280:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   52284:	d0a00c17 	ldw	r2,-32720(gp)
   52288:	10000326 	beq	r2,zero,52298 <alt_get_errno+0x24>
   5228c:	d0a00c17 	ldw	r2,-32720(gp)
   52290:	103ee83a 	callr	r2
   52294:	00000106 	br	5229c <alt_get_errno+0x28>
   52298:	d0a84a04 	addi	r2,gp,-24280
}
   5229c:	e037883a 	mov	sp,fp
   522a0:	dfc00117 	ldw	ra,4(sp)
   522a4:	df000017 	ldw	fp,0(sp)
   522a8:	dec00204 	addi	sp,sp,8
   522ac:	f800283a 	ret

000522b0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   522b0:	defffb04 	addi	sp,sp,-20
   522b4:	dfc00415 	stw	ra,16(sp)
   522b8:	df000315 	stw	fp,12(sp)
   522bc:	dc000215 	stw	r16,8(sp)
   522c0:	df000304 	addi	fp,sp,12
   522c4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   522c8:	e0bffe17 	ldw	r2,-8(fp)
   522cc:	10800217 	ldw	r2,8(r2)
   522d0:	10d00034 	orhi	r3,r2,16384
   522d4:	e0bffe17 	ldw	r2,-8(fp)
   522d8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   522dc:	e03ffd15 	stw	zero,-12(fp)
   522e0:	00002306 	br	52370 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   522e4:	04000174 	movhi	r16,5
   522e8:	840fda04 	addi	r16,r16,16232
   522ec:	e0bffd17 	ldw	r2,-12(fp)
   522f0:	01400304 	movi	r5,12
   522f4:	1009883a 	mov	r4,r2
   522f8:	0041f400 	call	41f40 <__mulsi3>
   522fc:	8085883a 	add	r2,r16,r2
   52300:	10c00017 	ldw	r3,0(r2)
   52304:	e0bffe17 	ldw	r2,-8(fp)
   52308:	10800017 	ldw	r2,0(r2)
   5230c:	1880151e 	bne	r3,r2,52364 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   52310:	04000174 	movhi	r16,5
   52314:	840fda04 	addi	r16,r16,16232
   52318:	e0bffd17 	ldw	r2,-12(fp)
   5231c:	01400304 	movi	r5,12
   52320:	1009883a 	mov	r4,r2
   52324:	0041f400 	call	41f40 <__mulsi3>
   52328:	8085883a 	add	r2,r16,r2
   5232c:	10800204 	addi	r2,r2,8
   52330:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   52334:	10000b0e 	bge	r2,zero,52364 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   52338:	01400304 	movi	r5,12
   5233c:	e13ffd17 	ldw	r4,-12(fp)
   52340:	0041f400 	call	41f40 <__mulsi3>
   52344:	1007883a 	mov	r3,r2
   52348:	00800174 	movhi	r2,5
   5234c:	108fda04 	addi	r2,r2,16232
   52350:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   52354:	e0bffe17 	ldw	r2,-8(fp)
   52358:	18800226 	beq	r3,r2,52364 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   5235c:	00bffcc4 	movi	r2,-13
   52360:	00000806 	br	52384 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   52364:	e0bffd17 	ldw	r2,-12(fp)
   52368:	10800044 	addi	r2,r2,1
   5236c:	e0bffd15 	stw	r2,-12(fp)
   52370:	d0a00b17 	ldw	r2,-32724(gp)
   52374:	1007883a 	mov	r3,r2
   52378:	e0bffd17 	ldw	r2,-12(fp)
   5237c:	18bfd92e 	bgeu	r3,r2,522e4 <_gp+0xffff519c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   52380:	0005883a 	mov	r2,zero
}
   52384:	e6ffff04 	addi	sp,fp,-4
   52388:	dfc00217 	ldw	ra,8(sp)
   5238c:	df000117 	ldw	fp,4(sp)
   52390:	dc000017 	ldw	r16,0(sp)
   52394:	dec00304 	addi	sp,sp,12
   52398:	f800283a 	ret

0005239c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   5239c:	defff604 	addi	sp,sp,-40
   523a0:	dfc00915 	stw	ra,36(sp)
   523a4:	df000815 	stw	fp,32(sp)
   523a8:	df000804 	addi	fp,sp,32
   523ac:	e13ffd15 	stw	r4,-12(fp)
   523b0:	e17ffe15 	stw	r5,-8(fp)
   523b4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   523b8:	00bfffc4 	movi	r2,-1
   523bc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   523c0:	00bffb44 	movi	r2,-19
   523c4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   523c8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   523cc:	d1600904 	addi	r5,gp,-32732
   523d0:	e13ffd17 	ldw	r4,-12(fp)
   523d4:	00526c00 	call	526c0 <alt_find_dev>
   523d8:	e0bff815 	stw	r2,-32(fp)
   523dc:	e0bff817 	ldw	r2,-32(fp)
   523e0:	1000051e 	bne	r2,zero,523f8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   523e4:	e13ffd17 	ldw	r4,-12(fp)
   523e8:	00527500 	call	52750 <alt_find_file>
   523ec:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   523f0:	00800044 	movi	r2,1
   523f4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   523f8:	e0bff817 	ldw	r2,-32(fp)
   523fc:	10002b26 	beq	r2,zero,524ac <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   52400:	e13ff817 	ldw	r4,-32(fp)
   52404:	00528580 	call	52858 <alt_get_fd>
   52408:	e0bff915 	stw	r2,-28(fp)
   5240c:	e0bff917 	ldw	r2,-28(fp)
   52410:	1000030e 	bge	r2,zero,52420 <open+0x84>
    {
      status = index;
   52414:	e0bff917 	ldw	r2,-28(fp)
   52418:	e0bffa15 	stw	r2,-24(fp)
   5241c:	00002506 	br	524b4 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   52420:	01400304 	movi	r5,12
   52424:	e13ff917 	ldw	r4,-28(fp)
   52428:	0041f400 	call	41f40 <__mulsi3>
   5242c:	1007883a 	mov	r3,r2
   52430:	00800174 	movhi	r2,5
   52434:	108fda04 	addi	r2,r2,16232
   52438:	1885883a 	add	r2,r3,r2
   5243c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   52440:	e0fffe17 	ldw	r3,-8(fp)
   52444:	00900034 	movhi	r2,16384
   52448:	10bfffc4 	addi	r2,r2,-1
   5244c:	1886703a 	and	r3,r3,r2
   52450:	e0bffc17 	ldw	r2,-16(fp)
   52454:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   52458:	e0bffb17 	ldw	r2,-20(fp)
   5245c:	1000051e 	bne	r2,zero,52474 <open+0xd8>
   52460:	e13ffc17 	ldw	r4,-16(fp)
   52464:	00522b00 	call	522b0 <alt_file_locked>
   52468:	e0bffa15 	stw	r2,-24(fp)
   5246c:	e0bffa17 	ldw	r2,-24(fp)
   52470:	10001016 	blt	r2,zero,524b4 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   52474:	e0bff817 	ldw	r2,-32(fp)
   52478:	10800317 	ldw	r2,12(r2)
   5247c:	10000826 	beq	r2,zero,524a0 <open+0x104>
   52480:	e0bff817 	ldw	r2,-32(fp)
   52484:	10800317 	ldw	r2,12(r2)
   52488:	e1ffff17 	ldw	r7,-4(fp)
   5248c:	e1bffe17 	ldw	r6,-8(fp)
   52490:	e17ffd17 	ldw	r5,-12(fp)
   52494:	e13ffc17 	ldw	r4,-16(fp)
   52498:	103ee83a 	callr	r2
   5249c:	00000106 	br	524a4 <open+0x108>
   524a0:	0005883a 	mov	r2,zero
   524a4:	e0bffa15 	stw	r2,-24(fp)
   524a8:	00000206 	br	524b4 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   524ac:	00bffb44 	movi	r2,-19
   524b0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   524b4:	e0bffa17 	ldw	r2,-24(fp)
   524b8:	1000090e 	bge	r2,zero,524e0 <open+0x144>
  {
    alt_release_fd (index);  
   524bc:	e13ff917 	ldw	r4,-28(fp)
   524c0:	0050ddc0 	call	50ddc <alt_release_fd>
    ALT_ERRNO = -status;
   524c4:	00522740 	call	52274 <alt_get_errno>
   524c8:	1007883a 	mov	r3,r2
   524cc:	e0bffa17 	ldw	r2,-24(fp)
   524d0:	0085c83a 	sub	r2,zero,r2
   524d4:	18800015 	stw	r2,0(r3)
    return -1;
   524d8:	00bfffc4 	movi	r2,-1
   524dc:	00000106 	br	524e4 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   524e0:	e0bff917 	ldw	r2,-28(fp)
}
   524e4:	e037883a 	mov	sp,fp
   524e8:	dfc00117 	ldw	ra,4(sp)
   524ec:	df000017 	ldw	fp,0(sp)
   524f0:	dec00204 	addi	sp,sp,8
   524f4:	f800283a 	ret

000524f8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   524f8:	defffa04 	addi	sp,sp,-24
   524fc:	df000515 	stw	fp,20(sp)
   52500:	df000504 	addi	fp,sp,20
   52504:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52508:	0005303a 	rdctl	r2,status
   5250c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52510:	e0fffc17 	ldw	r3,-16(fp)
   52514:	00bfff84 	movi	r2,-2
   52518:	1884703a 	and	r2,r3,r2
   5251c:	1001703a 	wrctl	status,r2
  
  return context;
   52520:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   52524:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   52528:	e0bfff17 	ldw	r2,-4(fp)
   5252c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   52530:	e0bffd17 	ldw	r2,-12(fp)
   52534:	10800017 	ldw	r2,0(r2)
   52538:	e0fffd17 	ldw	r3,-12(fp)
   5253c:	18c00117 	ldw	r3,4(r3)
   52540:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   52544:	e0bffd17 	ldw	r2,-12(fp)
   52548:	10800117 	ldw	r2,4(r2)
   5254c:	e0fffd17 	ldw	r3,-12(fp)
   52550:	18c00017 	ldw	r3,0(r3)
   52554:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   52558:	e0bffd17 	ldw	r2,-12(fp)
   5255c:	e0fffd17 	ldw	r3,-12(fp)
   52560:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   52564:	e0bffd17 	ldw	r2,-12(fp)
   52568:	e0fffd17 	ldw	r3,-12(fp)
   5256c:	10c00015 	stw	r3,0(r2)
   52570:	e0bffb17 	ldw	r2,-20(fp)
   52574:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   52578:	e0bffe17 	ldw	r2,-8(fp)
   5257c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   52580:	0001883a 	nop
   52584:	e037883a 	mov	sp,fp
   52588:	df000017 	ldw	fp,0(sp)
   5258c:	dec00104 	addi	sp,sp,4
   52590:	f800283a 	ret

00052594 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   52594:	defffb04 	addi	sp,sp,-20
   52598:	dfc00415 	stw	ra,16(sp)
   5259c:	df000315 	stw	fp,12(sp)
   525a0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   525a4:	d0a00f17 	ldw	r2,-32708(gp)
   525a8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   525ac:	d0a85017 	ldw	r2,-24256(gp)
   525b0:	10800044 	addi	r2,r2,1
   525b4:	d0a85015 	stw	r2,-24256(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   525b8:	00002e06 	br	52674 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   525bc:	e0bffd17 	ldw	r2,-12(fp)
   525c0:	10800017 	ldw	r2,0(r2)
   525c4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   525c8:	e0bffd17 	ldw	r2,-12(fp)
   525cc:	10800403 	ldbu	r2,16(r2)
   525d0:	10803fcc 	andi	r2,r2,255
   525d4:	10000426 	beq	r2,zero,525e8 <alt_tick+0x54>
   525d8:	d0a85017 	ldw	r2,-24256(gp)
   525dc:	1000021e 	bne	r2,zero,525e8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   525e0:	e0bffd17 	ldw	r2,-12(fp)
   525e4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   525e8:	e0bffd17 	ldw	r2,-12(fp)
   525ec:	10800217 	ldw	r2,8(r2)
   525f0:	d0e85017 	ldw	r3,-24256(gp)
   525f4:	18801d36 	bltu	r3,r2,5266c <alt_tick+0xd8>
   525f8:	e0bffd17 	ldw	r2,-12(fp)
   525fc:	10800403 	ldbu	r2,16(r2)
   52600:	10803fcc 	andi	r2,r2,255
   52604:	1000191e 	bne	r2,zero,5266c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   52608:	e0bffd17 	ldw	r2,-12(fp)
   5260c:	10800317 	ldw	r2,12(r2)
   52610:	e0fffd17 	ldw	r3,-12(fp)
   52614:	18c00517 	ldw	r3,20(r3)
   52618:	1809883a 	mov	r4,r3
   5261c:	103ee83a 	callr	r2
   52620:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   52624:	e0bfff17 	ldw	r2,-4(fp)
   52628:	1000031e 	bne	r2,zero,52638 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   5262c:	e13ffd17 	ldw	r4,-12(fp)
   52630:	00524f80 	call	524f8 <alt_alarm_stop>
   52634:	00000d06 	br	5266c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   52638:	e0bffd17 	ldw	r2,-12(fp)
   5263c:	10c00217 	ldw	r3,8(r2)
   52640:	e0bfff17 	ldw	r2,-4(fp)
   52644:	1887883a 	add	r3,r3,r2
   52648:	e0bffd17 	ldw	r2,-12(fp)
   5264c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   52650:	e0bffd17 	ldw	r2,-12(fp)
   52654:	10c00217 	ldw	r3,8(r2)
   52658:	d0a85017 	ldw	r2,-24256(gp)
   5265c:	1880032e 	bgeu	r3,r2,5266c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   52660:	e0bffd17 	ldw	r2,-12(fp)
   52664:	00c00044 	movi	r3,1
   52668:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   5266c:	e0bffe17 	ldw	r2,-8(fp)
   52670:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   52674:	e0fffd17 	ldw	r3,-12(fp)
   52678:	d0a00f04 	addi	r2,gp,-32708
   5267c:	18bfcf1e 	bne	r3,r2,525bc <_gp+0xffff5474>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   52680:	0001883a 	nop
}
   52684:	0001883a 	nop
   52688:	e037883a 	mov	sp,fp
   5268c:	dfc00117 	ldw	ra,4(sp)
   52690:	df000017 	ldw	fp,0(sp)
   52694:	dec00204 	addi	sp,sp,8
   52698:	f800283a 	ret

0005269c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   5269c:	deffff04 	addi	sp,sp,-4
   526a0:	df000015 	stw	fp,0(sp)
   526a4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   526a8:	000170fa 	wrctl	ienable,zero
}
   526ac:	0001883a 	nop
   526b0:	e037883a 	mov	sp,fp
   526b4:	df000017 	ldw	fp,0(sp)
   526b8:	dec00104 	addi	sp,sp,4
   526bc:	f800283a 	ret

000526c0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   526c0:	defffa04 	addi	sp,sp,-24
   526c4:	dfc00515 	stw	ra,20(sp)
   526c8:	df000415 	stw	fp,16(sp)
   526cc:	df000404 	addi	fp,sp,16
   526d0:	e13ffe15 	stw	r4,-8(fp)
   526d4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   526d8:	e0bfff17 	ldw	r2,-4(fp)
   526dc:	10800017 	ldw	r2,0(r2)
   526e0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   526e4:	e13ffe17 	ldw	r4,-8(fp)
   526e8:	00460fc0 	call	460fc <strlen>
   526ec:	10800044 	addi	r2,r2,1
   526f0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   526f4:	00000d06 	br	5272c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   526f8:	e0bffc17 	ldw	r2,-16(fp)
   526fc:	10800217 	ldw	r2,8(r2)
   52700:	e0fffd17 	ldw	r3,-12(fp)
   52704:	180d883a 	mov	r6,r3
   52708:	e17ffe17 	ldw	r5,-8(fp)
   5270c:	1009883a 	mov	r4,r2
   52710:	0052a040 	call	52a04 <memcmp>
   52714:	1000021e 	bne	r2,zero,52720 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   52718:	e0bffc17 	ldw	r2,-16(fp)
   5271c:	00000706 	br	5273c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   52720:	e0bffc17 	ldw	r2,-16(fp)
   52724:	10800017 	ldw	r2,0(r2)
   52728:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   5272c:	e0fffc17 	ldw	r3,-16(fp)
   52730:	e0bfff17 	ldw	r2,-4(fp)
   52734:	18bff01e 	bne	r3,r2,526f8 <_gp+0xffff55b0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   52738:	0005883a 	mov	r2,zero
}
   5273c:	e037883a 	mov	sp,fp
   52740:	dfc00117 	ldw	ra,4(sp)
   52744:	df000017 	ldw	fp,0(sp)
   52748:	dec00204 	addi	sp,sp,8
   5274c:	f800283a 	ret

00052750 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   52750:	defffb04 	addi	sp,sp,-20
   52754:	dfc00415 	stw	ra,16(sp)
   52758:	df000315 	stw	fp,12(sp)
   5275c:	df000304 	addi	fp,sp,12
   52760:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   52764:	d0a00717 	ldw	r2,-32740(gp)
   52768:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   5276c:	00003106 	br	52834 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   52770:	e0bffd17 	ldw	r2,-12(fp)
   52774:	10800217 	ldw	r2,8(r2)
   52778:	1009883a 	mov	r4,r2
   5277c:	00460fc0 	call	460fc <strlen>
   52780:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   52784:	e0bffd17 	ldw	r2,-12(fp)
   52788:	10c00217 	ldw	r3,8(r2)
   5278c:	e0bffe17 	ldw	r2,-8(fp)
   52790:	10bfffc4 	addi	r2,r2,-1
   52794:	1885883a 	add	r2,r3,r2
   52798:	10800003 	ldbu	r2,0(r2)
   5279c:	10803fcc 	andi	r2,r2,255
   527a0:	1080201c 	xori	r2,r2,128
   527a4:	10bfe004 	addi	r2,r2,-128
   527a8:	10800bd8 	cmpnei	r2,r2,47
   527ac:	1000031e 	bne	r2,zero,527bc <alt_find_file+0x6c>
    {
      len -= 1;
   527b0:	e0bffe17 	ldw	r2,-8(fp)
   527b4:	10bfffc4 	addi	r2,r2,-1
   527b8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   527bc:	e0bffe17 	ldw	r2,-8(fp)
   527c0:	e0ffff17 	ldw	r3,-4(fp)
   527c4:	1885883a 	add	r2,r3,r2
   527c8:	10800003 	ldbu	r2,0(r2)
   527cc:	10803fcc 	andi	r2,r2,255
   527d0:	1080201c 	xori	r2,r2,128
   527d4:	10bfe004 	addi	r2,r2,-128
   527d8:	10800be0 	cmpeqi	r2,r2,47
   527dc:	1000081e 	bne	r2,zero,52800 <alt_find_file+0xb0>
   527e0:	e0bffe17 	ldw	r2,-8(fp)
   527e4:	e0ffff17 	ldw	r3,-4(fp)
   527e8:	1885883a 	add	r2,r3,r2
   527ec:	10800003 	ldbu	r2,0(r2)
   527f0:	10803fcc 	andi	r2,r2,255
   527f4:	1080201c 	xori	r2,r2,128
   527f8:	10bfe004 	addi	r2,r2,-128
   527fc:	10000a1e 	bne	r2,zero,52828 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   52800:	e0bffd17 	ldw	r2,-12(fp)
   52804:	10800217 	ldw	r2,8(r2)
   52808:	e0fffe17 	ldw	r3,-8(fp)
   5280c:	180d883a 	mov	r6,r3
   52810:	e17fff17 	ldw	r5,-4(fp)
   52814:	1009883a 	mov	r4,r2
   52818:	0052a040 	call	52a04 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   5281c:	1000021e 	bne	r2,zero,52828 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   52820:	e0bffd17 	ldw	r2,-12(fp)
   52824:	00000706 	br	52844 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   52828:	e0bffd17 	ldw	r2,-12(fp)
   5282c:	10800017 	ldw	r2,0(r2)
   52830:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   52834:	e0fffd17 	ldw	r3,-12(fp)
   52838:	d0a00704 	addi	r2,gp,-32740
   5283c:	18bfcc1e 	bne	r3,r2,52770 <_gp+0xffff5628>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   52840:	0005883a 	mov	r2,zero
}
   52844:	e037883a 	mov	sp,fp
   52848:	dfc00117 	ldw	ra,4(sp)
   5284c:	df000017 	ldw	fp,0(sp)
   52850:	dec00204 	addi	sp,sp,8
   52854:	f800283a 	ret

00052858 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   52858:	defffa04 	addi	sp,sp,-24
   5285c:	dfc00515 	stw	ra,20(sp)
   52860:	df000415 	stw	fp,16(sp)
   52864:	dc000315 	stw	r16,12(sp)
   52868:	df000404 	addi	fp,sp,16
   5286c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   52870:	00bffa04 	movi	r2,-24
   52874:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   52878:	e03ffc15 	stw	zero,-16(fp)
   5287c:	00001d06 	br	528f4 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   52880:	04000174 	movhi	r16,5
   52884:	840fda04 	addi	r16,r16,16232
   52888:	e0bffc17 	ldw	r2,-16(fp)
   5288c:	01400304 	movi	r5,12
   52890:	1009883a 	mov	r4,r2
   52894:	0041f400 	call	41f40 <__mulsi3>
   52898:	8085883a 	add	r2,r16,r2
   5289c:	10800017 	ldw	r2,0(r2)
   528a0:	1000111e 	bne	r2,zero,528e8 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   528a4:	04000174 	movhi	r16,5
   528a8:	840fda04 	addi	r16,r16,16232
   528ac:	e0bffc17 	ldw	r2,-16(fp)
   528b0:	01400304 	movi	r5,12
   528b4:	1009883a 	mov	r4,r2
   528b8:	0041f400 	call	41f40 <__mulsi3>
   528bc:	8085883a 	add	r2,r16,r2
   528c0:	e0fffe17 	ldw	r3,-8(fp)
   528c4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   528c8:	d0e00b17 	ldw	r3,-32724(gp)
   528cc:	e0bffc17 	ldw	r2,-16(fp)
   528d0:	1880020e 	bge	r3,r2,528dc <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   528d4:	e0bffc17 	ldw	r2,-16(fp)
   528d8:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   528dc:	e0bffc17 	ldw	r2,-16(fp)
   528e0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   528e4:	00000606 	br	52900 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   528e8:	e0bffc17 	ldw	r2,-16(fp)
   528ec:	10800044 	addi	r2,r2,1
   528f0:	e0bffc15 	stw	r2,-16(fp)
   528f4:	e0bffc17 	ldw	r2,-16(fp)
   528f8:	10800810 	cmplti	r2,r2,32
   528fc:	103fe01e 	bne	r2,zero,52880 <_gp+0xffff5738>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   52900:	e0bffd17 	ldw	r2,-12(fp)
}
   52904:	e6ffff04 	addi	sp,fp,-4
   52908:	dfc00217 	ldw	ra,8(sp)
   5290c:	df000117 	ldw	fp,4(sp)
   52910:	dc000017 	ldw	r16,0(sp)
   52914:	dec00304 	addi	sp,sp,12
   52918:	f800283a 	ret

0005291c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   5291c:	defffe04 	addi	sp,sp,-8
   52920:	df000115 	stw	fp,4(sp)
   52924:	df000104 	addi	fp,sp,4
   52928:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   5292c:	e0bfff17 	ldw	r2,-4(fp)
   52930:	10bffe84 	addi	r2,r2,-6
   52934:	10c00428 	cmpgeui	r3,r2,16
   52938:	18001a1e 	bne	r3,zero,529a4 <alt_exception_cause_generated_bad_addr+0x88>
   5293c:	100690ba 	slli	r3,r2,2
   52940:	00800174 	movhi	r2,5
   52944:	108a5504 	addi	r2,r2,10580
   52948:	1885883a 	add	r2,r3,r2
   5294c:	10800017 	ldw	r2,0(r2)
   52950:	1000683a 	jmp	r2
   52954:	00052994 	movui	zero,5286
   52958:	00052994 	movui	zero,5286
   5295c:	000529a4 	muli	zero,zero,5286
   52960:	000529a4 	muli	zero,zero,5286
   52964:	000529a4 	muli	zero,zero,5286
   52968:	00052994 	movui	zero,5286
   5296c:	0005299c 	xori	zero,zero,5286
   52970:	000529a4 	muli	zero,zero,5286
   52974:	00052994 	movui	zero,5286
   52978:	00052994 	movui	zero,5286
   5297c:	000529a4 	muli	zero,zero,5286
   52980:	00052994 	movui	zero,5286
   52984:	0005299c 	xori	zero,zero,5286
   52988:	000529a4 	muli	zero,zero,5286
   5298c:	000529a4 	muli	zero,zero,5286
   52990:	00052994 	movui	zero,5286
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   52994:	00800044 	movi	r2,1
   52998:	00000306 	br	529a8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   5299c:	0005883a 	mov	r2,zero
   529a0:	00000106 	br	529a8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   529a4:	0005883a 	mov	r2,zero
  }
}
   529a8:	e037883a 	mov	sp,fp
   529ac:	df000017 	ldw	fp,0(sp)
   529b0:	dec00104 	addi	sp,sp,4
   529b4:	f800283a 	ret

000529b8 <atexit>:
   529b8:	200b883a 	mov	r5,r4
   529bc:	000f883a 	mov	r7,zero
   529c0:	000d883a 	mov	r6,zero
   529c4:	0009883a 	mov	r4,zero
   529c8:	0052a801 	jmpi	52a80 <__register_exitproc>

000529cc <exit>:
   529cc:	defffe04 	addi	sp,sp,-8
   529d0:	000b883a 	mov	r5,zero
   529d4:	dc000015 	stw	r16,0(sp)
   529d8:	dfc00115 	stw	ra,4(sp)
   529dc:	2021883a 	mov	r16,r4
   529e0:	0052b980 	call	52b98 <__call_exitprocs>
   529e4:	00800174 	movhi	r2,5
   529e8:	10945304 	addi	r2,r2,20812
   529ec:	11000017 	ldw	r4,0(r2)
   529f0:	20800f17 	ldw	r2,60(r4)
   529f4:	10000126 	beq	r2,zero,529fc <exit+0x30>
   529f8:	103ee83a 	callr	r2
   529fc:	8009883a 	mov	r4,r16
   52a00:	0052d180 	call	52d18 <_exit>

00052a04 <memcmp>:
   52a04:	01c000c4 	movi	r7,3
   52a08:	3980192e 	bgeu	r7,r6,52a70 <memcmp+0x6c>
   52a0c:	2144b03a 	or	r2,r4,r5
   52a10:	11c4703a 	and	r2,r2,r7
   52a14:	10000f26 	beq	r2,zero,52a54 <memcmp+0x50>
   52a18:	20800003 	ldbu	r2,0(r4)
   52a1c:	28c00003 	ldbu	r3,0(r5)
   52a20:	10c0151e 	bne	r2,r3,52a78 <memcmp+0x74>
   52a24:	31bfff84 	addi	r6,r6,-2
   52a28:	01ffffc4 	movi	r7,-1
   52a2c:	00000406 	br	52a40 <memcmp+0x3c>
   52a30:	20800003 	ldbu	r2,0(r4)
   52a34:	28c00003 	ldbu	r3,0(r5)
   52a38:	31bfffc4 	addi	r6,r6,-1
   52a3c:	10c00e1e 	bne	r2,r3,52a78 <memcmp+0x74>
   52a40:	21000044 	addi	r4,r4,1
   52a44:	29400044 	addi	r5,r5,1
   52a48:	31fff91e 	bne	r6,r7,52a30 <_gp+0xffff58e8>
   52a4c:	0005883a 	mov	r2,zero
   52a50:	f800283a 	ret
   52a54:	20c00017 	ldw	r3,0(r4)
   52a58:	28800017 	ldw	r2,0(r5)
   52a5c:	18bfee1e 	bne	r3,r2,52a18 <_gp+0xffff58d0>
   52a60:	31bfff04 	addi	r6,r6,-4
   52a64:	21000104 	addi	r4,r4,4
   52a68:	29400104 	addi	r5,r5,4
   52a6c:	39bff936 	bltu	r7,r6,52a54 <_gp+0xffff590c>
   52a70:	303fe91e 	bne	r6,zero,52a18 <_gp+0xffff58d0>
   52a74:	003ff506 	br	52a4c <_gp+0xffff5904>
   52a78:	10c5c83a 	sub	r2,r2,r3
   52a7c:	f800283a 	ret

00052a80 <__register_exitproc>:
   52a80:	defffa04 	addi	sp,sp,-24
   52a84:	dc000315 	stw	r16,12(sp)
   52a88:	04000174 	movhi	r16,5
   52a8c:	84145304 	addi	r16,r16,20812
   52a90:	80c00017 	ldw	r3,0(r16)
   52a94:	dc400415 	stw	r17,16(sp)
   52a98:	dfc00515 	stw	ra,20(sp)
   52a9c:	18805217 	ldw	r2,328(r3)
   52aa0:	2023883a 	mov	r17,r4
   52aa4:	10003726 	beq	r2,zero,52b84 <__register_exitproc+0x104>
   52aa8:	10c00117 	ldw	r3,4(r2)
   52aac:	010007c4 	movi	r4,31
   52ab0:	20c00e16 	blt	r4,r3,52aec <__register_exitproc+0x6c>
   52ab4:	1a000044 	addi	r8,r3,1
   52ab8:	8800221e 	bne	r17,zero,52b44 <__register_exitproc+0xc4>
   52abc:	18c00084 	addi	r3,r3,2
   52ac0:	18c7883a 	add	r3,r3,r3
   52ac4:	18c7883a 	add	r3,r3,r3
   52ac8:	12000115 	stw	r8,4(r2)
   52acc:	10c7883a 	add	r3,r2,r3
   52ad0:	19400015 	stw	r5,0(r3)
   52ad4:	0005883a 	mov	r2,zero
   52ad8:	dfc00517 	ldw	ra,20(sp)
   52adc:	dc400417 	ldw	r17,16(sp)
   52ae0:	dc000317 	ldw	r16,12(sp)
   52ae4:	dec00604 	addi	sp,sp,24
   52ae8:	f800283a 	ret
   52aec:	00800034 	movhi	r2,0
   52af0:	10800004 	addi	r2,r2,0
   52af4:	10002626 	beq	r2,zero,52b90 <__register_exitproc+0x110>
   52af8:	01006404 	movi	r4,400
   52afc:	d9400015 	stw	r5,0(sp)
   52b00:	d9800115 	stw	r6,4(sp)
   52b04:	d9c00215 	stw	r7,8(sp)
   52b08:	00000000 	call	0 <__alt_mem_MemoriaDados>
   52b0c:	d9400017 	ldw	r5,0(sp)
   52b10:	d9800117 	ldw	r6,4(sp)
   52b14:	d9c00217 	ldw	r7,8(sp)
   52b18:	10001d26 	beq	r2,zero,52b90 <__register_exitproc+0x110>
   52b1c:	81000017 	ldw	r4,0(r16)
   52b20:	10000115 	stw	zero,4(r2)
   52b24:	02000044 	movi	r8,1
   52b28:	22405217 	ldw	r9,328(r4)
   52b2c:	0007883a 	mov	r3,zero
   52b30:	12400015 	stw	r9,0(r2)
   52b34:	20805215 	stw	r2,328(r4)
   52b38:	10006215 	stw	zero,392(r2)
   52b3c:	10006315 	stw	zero,396(r2)
   52b40:	883fde26 	beq	r17,zero,52abc <_gp+0xffff5974>
   52b44:	18c9883a 	add	r4,r3,r3
   52b48:	2109883a 	add	r4,r4,r4
   52b4c:	1109883a 	add	r4,r2,r4
   52b50:	21802215 	stw	r6,136(r4)
   52b54:	01800044 	movi	r6,1
   52b58:	12406217 	ldw	r9,392(r2)
   52b5c:	30cc983a 	sll	r6,r6,r3
   52b60:	4992b03a 	or	r9,r9,r6
   52b64:	12406215 	stw	r9,392(r2)
   52b68:	21c04215 	stw	r7,264(r4)
   52b6c:	01000084 	movi	r4,2
   52b70:	893fd21e 	bne	r17,r4,52abc <_gp+0xffff5974>
   52b74:	11006317 	ldw	r4,396(r2)
   52b78:	218cb03a 	or	r6,r4,r6
   52b7c:	11806315 	stw	r6,396(r2)
   52b80:	003fce06 	br	52abc <_gp+0xffff5974>
   52b84:	18805304 	addi	r2,r3,332
   52b88:	18805215 	stw	r2,328(r3)
   52b8c:	003fc606 	br	52aa8 <_gp+0xffff5960>
   52b90:	00bfffc4 	movi	r2,-1
   52b94:	003fd006 	br	52ad8 <_gp+0xffff5990>

00052b98 <__call_exitprocs>:
   52b98:	defff504 	addi	sp,sp,-44
   52b9c:	df000915 	stw	fp,36(sp)
   52ba0:	dd400615 	stw	r21,24(sp)
   52ba4:	dc800315 	stw	r18,12(sp)
   52ba8:	dfc00a15 	stw	ra,40(sp)
   52bac:	ddc00815 	stw	r23,32(sp)
   52bb0:	dd800715 	stw	r22,28(sp)
   52bb4:	dd000515 	stw	r20,20(sp)
   52bb8:	dcc00415 	stw	r19,16(sp)
   52bbc:	dc400215 	stw	r17,8(sp)
   52bc0:	dc000115 	stw	r16,4(sp)
   52bc4:	d9000015 	stw	r4,0(sp)
   52bc8:	2839883a 	mov	fp,r5
   52bcc:	04800044 	movi	r18,1
   52bd0:	057fffc4 	movi	r21,-1
   52bd4:	00800174 	movhi	r2,5
   52bd8:	10945304 	addi	r2,r2,20812
   52bdc:	12000017 	ldw	r8,0(r2)
   52be0:	45005217 	ldw	r20,328(r8)
   52be4:	44c05204 	addi	r19,r8,328
   52be8:	a0001c26 	beq	r20,zero,52c5c <__call_exitprocs+0xc4>
   52bec:	a0800117 	ldw	r2,4(r20)
   52bf0:	15ffffc4 	addi	r23,r2,-1
   52bf4:	b8000d16 	blt	r23,zero,52c2c <__call_exitprocs+0x94>
   52bf8:	14000044 	addi	r16,r2,1
   52bfc:	8421883a 	add	r16,r16,r16
   52c00:	8421883a 	add	r16,r16,r16
   52c04:	84402004 	addi	r17,r16,128
   52c08:	a463883a 	add	r17,r20,r17
   52c0c:	a421883a 	add	r16,r20,r16
   52c10:	e0001e26 	beq	fp,zero,52c8c <__call_exitprocs+0xf4>
   52c14:	80804017 	ldw	r2,256(r16)
   52c18:	e0801c26 	beq	fp,r2,52c8c <__call_exitprocs+0xf4>
   52c1c:	bdffffc4 	addi	r23,r23,-1
   52c20:	843fff04 	addi	r16,r16,-4
   52c24:	8c7fff04 	addi	r17,r17,-4
   52c28:	bd7ff91e 	bne	r23,r21,52c10 <_gp+0xffff5ac8>
   52c2c:	00800034 	movhi	r2,0
   52c30:	10800004 	addi	r2,r2,0
   52c34:	10000926 	beq	r2,zero,52c5c <__call_exitprocs+0xc4>
   52c38:	a0800117 	ldw	r2,4(r20)
   52c3c:	1000301e 	bne	r2,zero,52d00 <__call_exitprocs+0x168>
   52c40:	a0800017 	ldw	r2,0(r20)
   52c44:	10003226 	beq	r2,zero,52d10 <__call_exitprocs+0x178>
   52c48:	a009883a 	mov	r4,r20
   52c4c:	98800015 	stw	r2,0(r19)
   52c50:	00000000 	call	0 <__alt_mem_MemoriaDados>
   52c54:	9d000017 	ldw	r20,0(r19)
   52c58:	a03fe41e 	bne	r20,zero,52bec <_gp+0xffff5aa4>
   52c5c:	dfc00a17 	ldw	ra,40(sp)
   52c60:	df000917 	ldw	fp,36(sp)
   52c64:	ddc00817 	ldw	r23,32(sp)
   52c68:	dd800717 	ldw	r22,28(sp)
   52c6c:	dd400617 	ldw	r21,24(sp)
   52c70:	dd000517 	ldw	r20,20(sp)
   52c74:	dcc00417 	ldw	r19,16(sp)
   52c78:	dc800317 	ldw	r18,12(sp)
   52c7c:	dc400217 	ldw	r17,8(sp)
   52c80:	dc000117 	ldw	r16,4(sp)
   52c84:	dec00b04 	addi	sp,sp,44
   52c88:	f800283a 	ret
   52c8c:	a0800117 	ldw	r2,4(r20)
   52c90:	80c00017 	ldw	r3,0(r16)
   52c94:	10bfffc4 	addi	r2,r2,-1
   52c98:	15c01426 	beq	r2,r23,52cec <__call_exitprocs+0x154>
   52c9c:	80000015 	stw	zero,0(r16)
   52ca0:	183fde26 	beq	r3,zero,52c1c <_gp+0xffff5ad4>
   52ca4:	95c8983a 	sll	r4,r18,r23
   52ca8:	a0806217 	ldw	r2,392(r20)
   52cac:	a5800117 	ldw	r22,4(r20)
   52cb0:	2084703a 	and	r2,r4,r2
   52cb4:	10000b26 	beq	r2,zero,52ce4 <__call_exitprocs+0x14c>
   52cb8:	a0806317 	ldw	r2,396(r20)
   52cbc:	2088703a 	and	r4,r4,r2
   52cc0:	20000c1e 	bne	r4,zero,52cf4 <__call_exitprocs+0x15c>
   52cc4:	89400017 	ldw	r5,0(r17)
   52cc8:	d9000017 	ldw	r4,0(sp)
   52ccc:	183ee83a 	callr	r3
   52cd0:	a0800117 	ldw	r2,4(r20)
   52cd4:	15bfbf1e 	bne	r2,r22,52bd4 <_gp+0xffff5a8c>
   52cd8:	98800017 	ldw	r2,0(r19)
   52cdc:	153fcf26 	beq	r2,r20,52c1c <_gp+0xffff5ad4>
   52ce0:	003fbc06 	br	52bd4 <_gp+0xffff5a8c>
   52ce4:	183ee83a 	callr	r3
   52ce8:	003ff906 	br	52cd0 <_gp+0xffff5b88>
   52cec:	a5c00115 	stw	r23,4(r20)
   52cf0:	003feb06 	br	52ca0 <_gp+0xffff5b58>
   52cf4:	89000017 	ldw	r4,0(r17)
   52cf8:	183ee83a 	callr	r3
   52cfc:	003ff406 	br	52cd0 <_gp+0xffff5b88>
   52d00:	a0800017 	ldw	r2,0(r20)
   52d04:	a027883a 	mov	r19,r20
   52d08:	1029883a 	mov	r20,r2
   52d0c:	003fb606 	br	52be8 <_gp+0xffff5aa0>
   52d10:	0005883a 	mov	r2,zero
   52d14:	003ffb06 	br	52d04 <_gp+0xffff5bbc>

00052d18 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   52d18:	defffd04 	addi	sp,sp,-12
   52d1c:	df000215 	stw	fp,8(sp)
   52d20:	df000204 	addi	fp,sp,8
   52d24:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   52d28:	0001883a 	nop
   52d2c:	e0bfff17 	ldw	r2,-4(fp)
   52d30:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   52d34:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   52d38:	10000226 	beq	r2,zero,52d44 <_exit+0x2c>
    ALT_SIM_FAIL();
   52d3c:	002af070 	cmpltui	zero,zero,43969
   52d40:	00000106 	br	52d48 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   52d44:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   52d48:	003fff06 	br	52d48 <_gp+0xffff5c00>
